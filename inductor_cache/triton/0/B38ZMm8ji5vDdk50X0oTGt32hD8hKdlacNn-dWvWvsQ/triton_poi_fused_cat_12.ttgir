#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_cat_12(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg15: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg16: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg17: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg18: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg19: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg20: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0), %arg21: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e-03> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<259584> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<169> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<384> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<64896> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<96> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<16224> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<192> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<-96> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<288> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-192> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<-288> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_4 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_5 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = arith.extsi %7 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc11)
    %11 = arith.cmpi slt, %10, %cst_6 : tensor<512xi64, #blocked> loc(#loc11)
    %12 = arith.muli %7, %cst_3 : tensor<512xi32, #blocked> loc(#loc12)
    %13 = arith.addi %8, %12 : tensor<512xi32, #blocked> loc(#loc13)
    %14 = arith.muli %9, %cst_7 : tensor<512xi32, #blocked> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<512xi32, #blocked> loc(#loc15)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %17 = tt.addptr %16, %15 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc16)
    %18 = arith.andi %11, %5 : tensor<512xi1, #blocked> loc(#loc17)
    %19 = tt.load %17, %18, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc19)
    %21 = tt.addptr %20, %7 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %22 = tt.load %21, %18, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %23 = arith.subf %19, %22 : tensor<512xf32, #blocked> loc(#loc21)
    %24 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc22)
    %25 = tt.addptr %24, %7 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc22)
    %26 = tt.load %25, %18, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc23)
    %27 = arith.addf %26, %cst_0 : tensor<512xf32, #blocked> loc(#loc24)
    %28 = tt.extern_elementwise %27 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc25)
    %29 = arith.divf %cst_1, %28 : tensor<512xf32, #blocked> loc(#loc26)
    %30 = arith.mulf %23, %29 : tensor<512xf32, #blocked> loc(#loc27)
    %31 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %32 = tt.addptr %31, %7 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc28)
    %33 = tt.load %32, %18, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc29)
    %34 = arith.mulf %30, %33 : tensor<512xf32, #blocked> loc(#loc30)
    %35 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc31)
    %36 = tt.addptr %35, %7 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc31)
    %37 = tt.load %36, %18, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc32)
    %38 = arith.addf %34, %37 : tensor<512xf32, #blocked> loc(#loc33)
    %39 = arith.cmpf ogt, %cst, %38 : tensor<512xf32, #blocked> loc(#loc123)
    %40 = arith.select %39, %cst, %38 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc124)
    %41 = arith.cmpi sge, %10, %cst_6 : tensor<512xi64, #blocked> loc(#loc37)
    %42 = arith.cmpi slt, %10, %cst_8 : tensor<512xi64, #blocked> loc(#loc38)
    %43 = arith.andi %41, %42 : tensor<512xi1, #blocked> loc(#loc39)
    %44 = arith.addi %7, %cst_9 : tensor<512xi32, #blocked> loc(#loc40)
    %45 = arith.muli %44, %cst_3 : tensor<512xi32, #blocked> loc(#loc41)
    %46 = arith.addi %8, %45 : tensor<512xi32, #blocked> loc(#loc42)
    %47 = arith.addi %46, %14 : tensor<512xi32, #blocked> loc(#loc43)
    %48 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc44)
    %49 = tt.addptr %48, %47 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc44)
    %50 = arith.andi %43, %5 : tensor<512xi1, #blocked> loc(#loc45)
    %51 = tt.load %49, %50, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc46)
    %52 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc47)
    %53 = tt.addptr %52, %44 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc47)
    %54 = tt.load %53, %50, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc48)
    %55 = arith.subf %51, %54 : tensor<512xf32, #blocked> loc(#loc49)
    %56 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc50)
    %57 = tt.addptr %56, %44 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc50)
    %58 = tt.load %57, %50, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc51)
    %59 = arith.addf %58, %cst_0 : tensor<512xf32, #blocked> loc(#loc52)
    %60 = tt.extern_elementwise %59 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc53)
    %61 = arith.divf %cst_1, %60 : tensor<512xf32, #blocked> loc(#loc54)
    %62 = arith.mulf %55, %61 : tensor<512xf32, #blocked> loc(#loc55)
    %63 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc56)
    %64 = tt.addptr %63, %44 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc56)
    %65 = tt.load %64, %50, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc57)
    %66 = arith.mulf %62, %65 : tensor<512xf32, #blocked> loc(#loc58)
    %67 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc59)
    %68 = tt.addptr %67, %44 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc59)
    %69 = tt.load %68, %50, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc60)
    %70 = arith.addf %66, %69 : tensor<512xf32, #blocked> loc(#loc61)
    %71 = arith.cmpf ogt, %cst, %70 : tensor<512xf32, #blocked> loc(#loc125)
    %72 = arith.select %71, %cst, %70 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc126)
    %73 = arith.cmpi sge, %10, %cst_8 : tensor<512xi64, #blocked> loc(#loc63)
    %74 = arith.cmpi slt, %10, %cst_10 : tensor<512xi64, #blocked> loc(#loc64)
    %75 = arith.andi %73, %74 : tensor<512xi1, #blocked> loc(#loc65)
    %76 = arith.addi %7, %cst_11 : tensor<512xi32, #blocked> loc(#loc66)
    %77 = arith.muli %76, %cst_3 : tensor<512xi32, #blocked> loc(#loc67)
    %78 = arith.addi %8, %77 : tensor<512xi32, #blocked> loc(#loc68)
    %79 = arith.addi %78, %14 : tensor<512xi32, #blocked> loc(#loc69)
    %80 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc70)
    %81 = tt.addptr %80, %79 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc70)
    %82 = arith.andi %75, %5 : tensor<512xi1, #blocked> loc(#loc71)
    %83 = tt.load %81, %82, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc72)
    %84 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc73)
    %85 = tt.addptr %84, %76 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc73)
    %86 = tt.load %85, %82, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc74)
    %87 = arith.subf %83, %86 : tensor<512xf32, #blocked> loc(#loc75)
    %88 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc76)
    %89 = tt.addptr %88, %76 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc76)
    %90 = tt.load %89, %82, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc77)
    %91 = arith.addf %90, %cst_0 : tensor<512xf32, #blocked> loc(#loc78)
    %92 = tt.extern_elementwise %91 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc79)
    %93 = arith.divf %cst_1, %92 : tensor<512xf32, #blocked> loc(#loc80)
    %94 = arith.mulf %87, %93 : tensor<512xf32, #blocked> loc(#loc81)
    %95 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc82)
    %96 = tt.addptr %95, %76 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc82)
    %97 = tt.load %96, %82, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc83)
    %98 = arith.mulf %94, %97 : tensor<512xf32, #blocked> loc(#loc84)
    %99 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc85)
    %100 = tt.addptr %99, %76 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc85)
    %101 = tt.load %100, %82, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc86)
    %102 = arith.addf %98, %101 : tensor<512xf32, #blocked> loc(#loc87)
    %103 = arith.cmpf ogt, %cst, %102 : tensor<512xf32, #blocked> loc(#loc127)
    %104 = arith.select %103, %cst, %102 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc128)
    %105 = arith.cmpi sge, %10, %cst_10 : tensor<512xi64, #blocked> loc(#loc89)
    %106 = arith.addi %7, %cst_12 : tensor<512xi32, #blocked> loc(#loc90)
    %107 = arith.muli %106, %cst_3 : tensor<512xi32, #blocked> loc(#loc91)
    %108 = arith.addi %8, %107 : tensor<512xi32, #blocked> loc(#loc92)
    %109 = arith.addi %108, %14 : tensor<512xi32, #blocked> loc(#loc93)
    %110 = tt.splat %arg15 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc94)
    %111 = tt.addptr %110, %109 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc94)
    %112 = arith.andi %105, %5 : tensor<512xi1, #blocked> loc(#loc95)
    %113 = tt.load %111, %112, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc96)
    %114 = tt.splat %arg16 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc97)
    %115 = tt.addptr %114, %106 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc97)
    %116 = tt.load %115, %112, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc98)
    %117 = arith.subf %113, %116 : tensor<512xf32, #blocked> loc(#loc99)
    %118 = tt.splat %arg17 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc100)
    %119 = tt.addptr %118, %106 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc100)
    %120 = tt.load %119, %112, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc101)
    %121 = arith.addf %120, %cst_0 : tensor<512xf32, #blocked> loc(#loc102)
    %122 = tt.extern_elementwise %121 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc103)
    %123 = arith.divf %cst_1, %122 : tensor<512xf32, #blocked> loc(#loc104)
    %124 = arith.mulf %117, %123 : tensor<512xf32, #blocked> loc(#loc105)
    %125 = tt.splat %arg18 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc106)
    %126 = tt.addptr %125, %106 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc106)
    %127 = tt.load %126, %112, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc107)
    %128 = arith.mulf %124, %127 : tensor<512xf32, #blocked> loc(#loc108)
    %129 = tt.splat %arg19 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc109)
    %130 = tt.addptr %129, %106 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc109)
    %131 = tt.load %130, %112, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc110)
    %132 = arith.addf %128, %131 : tensor<512xf32, #blocked> loc(#loc111)
    %133 = arith.cmpf ogt, %cst, %132 : tensor<512xf32, #blocked> loc(#loc129)
    %134 = arith.select %133, %cst, %132 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc130)
    %135 = arith.select %105, %134, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc113)
    %136 = arith.select %75, %104, %135 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc131)
    %137 = arith.select %43, %72, %136 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc132)
    %138 = arith.select %11, %40, %137 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc133)
    %139 = tt.splat %arg20 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc120)
    %140 = tt.addptr %139, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc120)
    tt.store %140, %138, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc121)
    tt.return loc(#loc122)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":21:28)
#loc3 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":21:33)
#loc4 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":22:36)
#loc5 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":22:23)
#loc6 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":23:21)
#loc7 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":24:21)
#loc8 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":24:28)
#loc9 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":25:19)
#loc10 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":26:19)
#loc11 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":32:18)
#loc12 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":33:40)
#loc13 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":33:35)
#loc14 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":33:52)
#loc15 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":33:46)
#loc16 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":33:30)
#loc17 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":33:64)
#loc18 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":33:57)
#loc19 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":34:30)
#loc20 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":34:35)
#loc21 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":35:18)
#loc22 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":36:30)
#loc23 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":36:35)
#loc24 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":38:19)
#loc25 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":39:27)
#loc26 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":41:20)
#loc27 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":44:19)
#loc28 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":45:31)
#loc29 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":45:36)
#loc30 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":46:20)
#loc31 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":47:31)
#loc32 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":47:36)
#loc33 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":48:20)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc35 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":50:42)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc37 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":53:20)
#loc38 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":55:19)
#loc39 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":56:20)
#loc40 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":57:49)
#loc41 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":57:41)
#loc42 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":57:36)
#loc43 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":57:55)
#loc44 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":57:31)
#loc45 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":57:74)
#loc46 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":57:66)
#loc47 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":58:31)
#loc48 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":58:44)
#loc49 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":59:20)
#loc50 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":60:31)
#loc51 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":60:44)
#loc52 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":62:20)
#loc53 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":63:27)
#loc54 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":65:20)
#loc55 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":68:20)
#loc56 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":69:31)
#loc57 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":69:44)
#loc58 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":70:20)
#loc59 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":71:31)
#loc60 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":71:44)
#loc61 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":72:20)
#loc62 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":74:42)
#loc63 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":77:20)
#loc64 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":79:19)
#loc65 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":80:20)
#loc66 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":81:51)
#loc67 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":81:42)
#loc68 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":81:37)
#loc69 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":81:57)
#loc70 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":81:32)
#loc71 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":81:76)
#loc72 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":81:68)
#loc73 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":82:32)
#loc74 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":82:46)
#loc75 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":83:20)
#loc76 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":84:32)
#loc77 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":84:46)
#loc78 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":86:20)
#loc79 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":87:27)
#loc80 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":89:20)
#loc81 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":92:20)
#loc82 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":93:32)
#loc83 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":93:46)
#loc84 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":94:20)
#loc85 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":95:32)
#loc86 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":95:46)
#loc87 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":96:20)
#loc88 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":98:42)
#loc89 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":101:20)
#loc90 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":104:51)
#loc91 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":104:42)
#loc92 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":104:37)
#loc93 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":104:57)
#loc94 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":104:32)
#loc95 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":104:76)
#loc96 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":104:68)
#loc97 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":105:32)
#loc98 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":105:46)
#loc99 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":106:20)
#loc100 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":107:32)
#loc101 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":107:46)
#loc102 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":109:20)
#loc103 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":110:27)
#loc104 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":112:20)
#loc105 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":115:20)
#loc106 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":116:32)
#loc107 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":116:46)
#loc108 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":117:20)
#loc109 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":118:32)
#loc110 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":118:46)
#loc111 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":119:20)
#loc112 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":121:42)
#loc113 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":123:35)
#loc114 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":124:35)
#loc115 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":100:35)
#loc116 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":125:35)
#loc117 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":76:35)
#loc118 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":126:34)
#loc119 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":52:34)
#loc120 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":127:25)
#loc121 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":127:37)
#loc122 = loc("inductor_cache/e2/ce2m57mrmkbvyhyf3gqdszstmzh5k5wfbxnq77rdtf3s3bj2h5ps.py":127:4)
#loc123 = loc(callsite(#loc34 at #loc35))
#loc124 = loc(callsite(#loc36 at #loc35))
#loc125 = loc(callsite(#loc34 at #loc62))
#loc126 = loc(callsite(#loc36 at #loc62))
#loc127 = loc(callsite(#loc34 at #loc88))
#loc128 = loc(callsite(#loc36 at #loc88))
#loc129 = loc(callsite(#loc34 at #loc112))
#loc130 = loc(callsite(#loc36 at #loc112))
#loc131 = loc(fused[#loc114, #loc115])
#loc132 = loc(fused[#loc116, #loc117])
#loc133 = loc(fused[#loc118, #loc119])
