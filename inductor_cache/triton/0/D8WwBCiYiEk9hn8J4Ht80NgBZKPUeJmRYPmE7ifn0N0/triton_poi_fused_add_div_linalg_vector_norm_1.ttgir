#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_div_linalg_vector_norm_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":19:0), %arg2: i32 loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-5 : f32 loc(#loc1)
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<4xi32, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<4xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<4xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_0 : tensor<4xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.load %9 : !tt.ptr<f32> loc(#loc10)
    %11 = tt.addptr %arg0, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc11)
    %12 = tt.load %11 : !tt.ptr<f32> loc(#loc12)
    %13 = tt.addptr %arg0, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc13)
    %14 = tt.load %13 : !tt.ptr<f32> loc(#loc14)
    %15 = tt.addptr %arg0, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc15)
    %16 = tt.load %15 : !tt.ptr<f32> loc(#loc16)
    %17 = arith.mulf %10, %10 : f32 loc(#loc17)
    %18 = arith.mulf %12, %12 : f32 loc(#loc18)
    %19 = arith.addf %17, %18 : f32 loc(#loc19)
    %20 = arith.mulf %14, %14 : f32 loc(#loc20)
    %21 = arith.addf %19, %20 : f32 loc(#loc21)
    %22 = arith.mulf %16, %16 : f32 loc(#loc22)
    %23 = arith.addf %21, %22 : f32 loc(#loc23)
    %24 = tt.extern_elementwise %23 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc24)
    %25 = arith.addf %24, %cst : f32 loc(#loc25)
    %26 = tt.splat %25 : f32 -> tensor<4xf32, #blocked> loc(#loc25)
    %27 = arith.divf %8, %26 : tensor<4xf32, #blocked> loc(#loc26)
    %28 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x!tt.ptr<f32>, #blocked> loc(#loc27)
    %29 = tt.addptr %28, %4 : tensor<4x!tt.ptr<f32>, #blocked>, tensor<4xi32, #blocked> loc(#loc27)
    tt.store %29, %27, %5 : tensor<4x!tt.ptr<f32>, #blocked> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":21:28)
#loc3 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":21:33)
#loc4 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":22:36)
#loc5 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":22:23)
#loc6 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":23:21)
#loc7 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":25:30)
#loc8 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":25:35)
#loc9 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":26:30)
#loc10 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":26:19)
#loc11 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":28:30)
#loc12 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":28:19)
#loc13 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":30:30)
#loc14 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":30:19)
#loc15 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":32:31)
#loc16 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":32:20)
#loc17 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":34:18)
#loc18 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":35:18)
#loc19 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":36:18)
#loc20 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":37:19)
#loc21 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":38:19)
#loc22 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":39:20)
#loc23 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":40:20)
#loc24 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":41:27)
#loc25 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":43:20)
#loc26 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":44:19)
#loc27 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":45:25)
#loc28 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":45:37)
#loc29 = loc("inductor_cache/ir/cirnl5t7n7yqmnmvct4ltibnuqfwa6jpyhl6yne5rxwgchzx6imv.py":45:4)
