//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<17>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd10, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_0];
	ld.param.u64 	%rd2, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:21:33
	shl.b32 	%r13, %r1, 7;
	ld.param.u64 	%rd3, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_2];
	ld.param.u64 	%rd4, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_3];
	.loc	1 22 36                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:22:36
	mov.u32 	%r14, %tid.x;
	and.b32  	%r15, %r14, 127;
	ld.param.u64 	%rd5, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_4];
	.loc	1 22 23                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:22:23
	or.b32  	%r16, %r13, %r15;
	ld.param.u64 	%rd6, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_5];
	.loc	1 25 34                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:25:34
	cvt.s64.s32 	%rd11, %r16;
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_6];
	mul.wide.s32 	%rd13, %r16, 4;
	add.s64 	%rd1, %rd10, %rd13;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_threshold_backward_0_param_7];
	mov.pred 	%p1, -1;
	.loc	1 25 39                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:25:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 26 19                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:26:19
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 19                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:28:19
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 19                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:30:19
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	.loc	1 32 20                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:32:20
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 20                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:34:20
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 39 19                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:39:19
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 40 27                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:40:27
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 25 39                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:25:39
	mov.b32 	%f4, %r2;
	.loc	1 26 19                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:26:19
	mov.b32 	%f5, %r3;
	.loc	1 36 18                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:36:18
	add.f32 	%f6, %f4, %f5;
	.loc	1 28 19                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:28:19
	mov.b32 	%f7, %r4;
	.loc	1 37 18                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:37:18
	sub.f32 	%f8, %f6, %f7;
	.loc	1 34 20                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:34:20
	mov.b32 	%f9, %r7;
	.loc	1 32 20                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:32:20
	mov.b32 	%f10, %r6;
	.loc	1 42 20                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:42:20
	mov.b32 	%r10, %f3;
	mov.b32 	%r9, 1065353216;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f11, %r8;
	.loc	1 45 19                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:45:19
	mul.f32 	%f12, %f8, %f11;
	.loc	1 47 20                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:47:20
	fma.rn.f32 	%f13, %f12, %f10, %f9;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p10, %f13, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f14, 0f00000000, %f13, %p10;
$L__tmp2:
	.loc	1 51 21                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:51:21
	setp.le.f32 	%p11, %f14, 0f00000000;
	.loc	1 52 39                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:52:39
	mov.b32 	%r11, %f6;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r11 };
	// end inline asm
	.loc	1 53 25                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:53:25
	add.s64 	%rd8, %rd12, %rd13;
	.loc	1 53 37                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:53:37
	mov.b32 	%r12, %f14;
	// begin inline asm
	@%p1 st.global.b32 [ %rd8 + 0 ], { %r12 };
	// end inline asm
	.loc	1 54 25                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:54:25
	add.s64 	%rd9, %rd14, %rd11;
	.loc	1 54 37                         // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:54:37
	selp.u16 	%rs1, 1, 0, %p11;
	// begin inline asm
	@%p1 st.global.b8 [ %rd9 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 54 4                          // clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py:54:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lz/clzoy2yntojw64ttjheijil4cjd7pkfwkxvuqpweu6q52ykkgesg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 122
.b8 111
.b8 121
.b8 50
.b8 121
.b8 110
.b8 116
.b8 111
.b8 106
.b8 119
.b8 54
.b8 52
.b8 116
.b8 116
.b8 106
.b8 104
.b8 101
.b8 105
.b8 106
.b8 105
.b8 108
.b8 52
.b8 99
.b8 106
.b8 100
.b8 55
.b8 112
.b8 107
.b8 102
.b8 119
.b8 107
.b8 120
.b8 118
.b8 117
.b8 113
.b8 112
.b8 119
.b8 101
.b8 117
.b8 54
.b8 113
.b8 53
.b8 50
.b8 121
.b8 107
.b8 107
.b8 103
.b8 101
.b8 115
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc1:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
