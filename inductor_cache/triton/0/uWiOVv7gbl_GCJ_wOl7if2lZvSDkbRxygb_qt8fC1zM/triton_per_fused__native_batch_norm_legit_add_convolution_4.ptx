//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_convolution_4 // -- Begin function triton_per_fused__native_batch_norm_legit_add_convolution_4
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_convolution_4
.visible .entry triton_per_fused__native_batch_norm_legit_add_convolution_4(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_6,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_4_param_7
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<66>;
	.reg .f32 	%f<36>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_add_convolution_4_param_0];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_add_convolution_4_param_1];
$L__tmp0:
	.loc	1 23 28                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:23:33
	shl.b32 	%r34, %r1, 3;
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_add_convolution_4_param_2];
	ld.param.u64 	%rd12, [triton_per_fused__native_batch_norm_legit_add_convolution_4_param_3];
	.loc	1 24 44                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:24:44
	mov.u32 	%r35, %tid.x;
	ld.param.u64 	%rd13, [triton_per_fused__native_batch_norm_legit_add_convolution_4_param_4];
	bfe.u32 	%r36, %r35, 3, 3;
	ld.param.u64 	%rd14, [triton_per_fused__native_batch_norm_legit_add_convolution_4_param_5];
	and.b32  	%r37, %r35, 7;
	.loc	1 24 23                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:24:23
	or.b32  	%r38, %r34, %r36;
	.loc	1 25 21                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:25:21
	setp.lt.s32 	%p1, %r38, 16;
	.loc	1 26 34                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:26:34
	shl.b32 	%r39, %r35, 1;
	and.b32  	%r40, %r39, 14;
	.loc	1 31 19                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:31:19
	bfe.s32 	%r41, %r1, 28, 1;
	shr.u32 	%r42, %r41, 30;
	add.s32 	%r43, %r38, %r42;
	and.b32  	%r44, %r43, -4;
	sub.s32 	%r45, %r38, %r44;
	.loc	1 32 42                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:32:42
	shl.b32 	%r46, %r38, 4;
	.loc	1 32 39                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:32:39
	or.b32  	%r47, %r46, %r40;
	.loc	1 32 34                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:32:34
	mul.wide.s32 	%rd15, %r47, 4;
	add.s64 	%rd1, %rd9, %rd15;
	mov.b32 	%r4, 0;
	.loc	1 32 47                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:32:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 30                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:33:30
	mul.wide.s32 	%rd16, %r45, 4;
	add.s64 	%rd2, %rd10, %rd16;
	.loc	1 33 35                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:33:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r7;
	.loc	1 34 31                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:34:31
	add.s64 	%rd4, %rd11, %rd15;
	.loc	1 34 44                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:34:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r8, %r4;
	@!%p1 mov.u32 %r9, %r4;
	// end inline asm
	.loc	1 35 18                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:35:18
	add.f32 	%f4, %f1, %f3;
	add.f32 	%f5, %f2, %f3;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	selp.f32 	%f7, %f6, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f7;
	shfl.sync.bfly.b32	%r49, %r48, 4, 31, -1;
	mov.b32 	%f8, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f9;
	shfl.sync.bfly.b32	%r51, %r50, 2, 31, -1;
	mov.b32 	%f10, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f11;
	shfl.sync.bfly.b32	%r53, %r52, 1, 31, -1;
	mov.b32 	%f12, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
$L__tmp2:
	.loc	1 43 19                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:43:19
	shl.b32 	%r54, %r36, 2;
	mov.u32 	%r55, global_smem;
	add.s32 	%r12, %r55, %r54;
	mov.b32 	%r13, %f13;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r56, %r37, 2;
	add.s32 	%r57, %r55, %r56;
	ld.shared.u32 	%r15, [%r57];
	mov.b32 	%r16, 1098907648;
	// begin inline asm
	div.full.f32 %r33, %r15, %r16;
	// end inline asm
	// begin inline asm
	div.full.f32 %r17, %r13, %r16;
	// end inline asm
	mov.b32 	%f14, %r17;
	.loc	1 44 19                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:44:19
	sub.f32 	%f15, %f4, %f14;
	sub.f32 	%f16, %f5, %f14;
	.loc	1 45 20                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:45:20
	mul.f32 	%f17, %f16, %f16;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f18, %f15, %f15, %f17;
	selp.f32 	%f19, %f18, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f19;
	shfl.sync.bfly.b32	%r59, %r58, 4, 31, -1;
	mov.b32 	%f20, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f21;
	shfl.sync.bfly.b32	%r61, %r60, 2, 31, -1;
	mov.b32 	%f22, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f23;
	shfl.sync.bfly.b32	%r63, %r62, 1, 31, -1;
	mov.b32 	%f24, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
$L__tmp4:
	.loc	1 54 28                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:54:28
	bar.sync 	0;
	mov.b32 	%r21, %f25;
	// begin inline asm
	@%p9 st.shared.b32 [ %r12 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	.loc	1 51 20                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:51:20
	ld.shared.u32 	%r23, [%r57];
	// begin inline asm
	div.full.f32 %r22, %r23, %r16;
	// end inline asm
	mov.b32 	%f26, %r22;
	// begin inline asm
	div.full.f32 %r25, %r21, %r16;
	// end inline asm
	mov.b32 	%f27, %r25;
	.loc	1 53 20                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:53:20
	add.f32 	%f28, %f26, 0f3727C5AC;
	add.f32 	%f29, %f27, 0f3727C5AC;
	.loc	1 54 28                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:54:28
	rsqrt.approx.ftz.f32 	%f30, %f28;
	rsqrt.approx.ftz.f32 	%f31, %f29;
	.loc	1 34 44                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:34:44
	mov.b32 	%f32, %r9;
	mov.b32 	%f33, %r8;
	.loc	1 24 23                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:24:23
	or.b32  	%r64, %r34, %r37;
	.loc	1 25 21                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:25:21
	setp.lt.s32 	%p15, %r64, 16;
	.loc	1 56 20                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:56:20
	fma.rn.f32 	%f34, %f15, %f31, %f33;
	fma.rn.f32 	%f35, %f16, %f31, %f32;
	.loc	1 57 47                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:57:47
	mov.b32 	%r28, %f4;
	mov.b32 	%r29, %f5;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 58 25                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:58:25
	add.s64 	%rd6, %rd13, %rd15;
	.loc	1 58 45                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:58:45
	mov.b32 	%r30, %f34;
	mov.b32 	%r31, %f35;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd6 + 0 ], { %r30, %r31 };
	// end inline asm
	.loc	1 59 25                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:59:25
	mul.wide.s32 	%rd17, %r64, 4;
	add.s64 	%rd7, %rd14, %rd17;
	.loc	1 59 37                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:59:37
	and.b32  	%r65, %r35, 56;
	setp.eq.s32 	%p16, %r65, 0;
	mov.b32 	%r32, %f30;
	and.pred  	%p13, %p16, %p15;
	// begin inline asm
	@%p13 st.global.b32 [ %rd7 + 0 ], { %r32 };
	// end inline asm
	.loc	1 60 25                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:60:25
	add.s64 	%rd8, %rd12, %rd17;
	.loc	1 60 37                         // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:60:37
	// begin inline asm
	@%p13 st.global.b32 [ %rd8 + 0 ], { %r33 };
	// end inline asm
	.loc	1 60 4                          // cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py:60:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dc/cdcc6wneg5cyn76vjfjchnvahhdpa3ifhius3o5veb5q6w6dk2ke.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 228                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xdd DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 99
.b8 99
.b8 54
.b8 119
.b8 110
.b8 101
.b8 103
.b8 53
.b8 99
.b8 121
.b8 110
.b8 55
.b8 54
.b8 118
.b8 106
.b8 102
.b8 106
.b8 99
.b8 104
.b8 110
.b8 118
.b8 97
.b8 104
.b8 104
.b8 100
.b8 112
.b8 97
.b8 51
.b8 105
.b8 102
.b8 104
.b8 105
.b8 117
.b8 115
.b8 51
.b8 111
.b8 53
.b8 118
.b8 101
.b8 98
.b8 53
.b8 113
.b8 54
.b8 119
.b8 54
.b8 100
.b8 107
.b8 50
.b8 107
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa1:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xce:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
