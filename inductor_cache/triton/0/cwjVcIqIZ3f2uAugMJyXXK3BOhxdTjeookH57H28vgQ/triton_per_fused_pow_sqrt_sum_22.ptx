//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_pow_sqrt_sum_22 // -- Begin function triton_per_fused_pow_sqrt_sum_22
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_pow_sqrt_sum_22
.visible .entry triton_per_fused_pow_sqrt_sum_22(
	.param .u64 .ptr .global .align 1 triton_per_fused_pow_sqrt_sum_22_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_pow_sqrt_sum_22_param_1,
	.param .u32 triton_per_fused_pow_sqrt_sum_22_param_2,
	.param .u32 triton_per_fused_pow_sqrt_sum_22_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<71>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd3, [triton_per_fused_pow_sqrt_sum_22_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_pow_sqrt_sum_22_param_1];
$L__tmp0:
	.loc	1 23 28                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:23:33
	shl.b32 	%r32, %r1, 6;
	.loc	1 24 44                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:24:44
	mov.u32 	%r33, %tid.x;
	and.b32  	%r34, %r33, 16;
	shl.b32 	%r35, %r33, 2;
	and.b32  	%r36, %r35, 60;
	and.b32  	%r37, %r33, 63;
	.loc	1 24 23                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:24:23
	or.b32  	%r38, %r32, %r36;
	.loc	1 25 21                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:25:21
	setp.lt.s32 	%p1, %r38, 64;
	.loc	1 26 34                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:26:34
	and.b32  	%r39, %r33, 48;
	.loc	1 31 19                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:31:19
	shr.s32 	%r41, %r38, 31;
	shr.u32 	%r42, %r41, 28;
	add.s32 	%r43, %r38, %r42;
	.loc	1 30 19                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:30:19
	and.b32  	%r44, %r43, -16;
	sub.s32 	%r45, %r38, %r44;
	.loc	1 33 35                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:33:35
	add.s32 	%r46, %r45, %r39;
	.loc	1 33 46                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:33:46
	shl.b32 	%r47, %r43, 2;
	and.b32  	%r48, %r47, -64;
	.loc	1 33 43                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:33:43
	add.s32 	%r49, %r46, %r48;
	.loc	1 33 30                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:33:30
	mul.wide.s32 	%rd5, %r49, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.b32 	%r6, 0;
	.loc	1 33 51                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:33:51
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 35 33                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:35:33
	selp.f32 	%f5, %f1, 0f00000000, %p1;
	selp.f32 	%f6, %f2, 0f00000000, %p1;
	selp.f32 	%f7, %f3, 0f00000000, %p1;
	selp.f32 	%f8, %f4, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f5;
	shfl.sync.bfly.b32	%r51, %r50, 16, 31, -1;
	mov.b32 	%f9, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f5, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f6;
	shfl.sync.bfly.b32	%r53, %r52, 16, 31, -1;
	mov.b32 	%f11, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f6, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f7;
	shfl.sync.bfly.b32	%r55, %r54, 16, 31, -1;
	mov.b32 	%f13, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f7, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f8;
	shfl.sync.bfly.b32	%r57, %r56, 16, 31, -1;
	mov.b32 	%f15, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f8, %f15;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p6, %r34, 0;
	shr.u32 	%r58, %r33, 3;
	and.b32  	%r59, %r58, 4;
	shl.b32 	%r60, %r36, 3;
	or.b32  	%r61, %r60, %r59;
	mov.u32 	%r62, global_smem;
	add.s32 	%r10, %r62, %r61;
	mov.b32 	%r11, %f10;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 8;
	mov.b32 	%r13, %f12;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 16;
	mov.b32 	%r15, %f14;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 24;
	mov.b32 	%r17, %f16;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r33, 128;
	add.s32 	%r19, %r62, %r35;
	// begin inline asm
	@%p10 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r18;
	shfl.sync.bfly.b32	%r63, %r18, 1, 31, -1;
	mov.b32 	%f18, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r64, %r33, 1;
	setp.eq.b32 	%p16, %r64, 1;
	not.pred 	%p17, %p16;
	and.pred  	%p11, %p10, %p17;
	mov.b32 	%r21, %f19;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	add.s32 	%r23, %r19, 256;
	// begin inline asm
	@%p10 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r22;
	shfl.sync.bfly.b32	%r65, %r22, 1, 31, -1;
	mov.b32 	%f21, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f22;
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r66, %r62, %r60;
	ld.shared.u32 	%r27, [%r66];
	ld.shared.u32 	%r28, [%r66+8];
	ld.shared.u32 	%r29, [%r66+16];
	ld.shared.u32 	%r30, [%r66+24];
$L__tmp2:
	.loc	1 37 26                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:37:26
	bar.sync 	0;
	shl.b32 	%r67, %r36, 2;
	sub.s32 	%r26, %r66, %r67;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.v4.b32 [ %r26 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r68, %r37, 2;
	add.s32 	%r69, %r62, %r68;
	ld.shared.f32 	%f23, [%r69];
	sqrt.approx.ftz.f32 	%f24, %f23;
	.loc	1 24 23                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:24:23
	or.b32  	%r70, %r32, %r37;
	.loc	1 25 21                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:25:21
	setp.lt.s32 	%p15, %r70, 64;
	.loc	1 38 4                          // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:38:4
	bar.sync 	0;
	.loc	1 39 28                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:39:28
	mul.wide.s32 	%rd6, %r70, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 39 39                         // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:39:39
	mov.b32 	%r31, %f24;
	// begin inline asm
	@%p15 st.global.b32 [ %rd2 + 0 ], { %r31 };
	// end inline asm
	.loc	1 39 4                          // cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/dx/cdxmxeo67fdxjz3l5djhswxaknww7ewwi6x5smrz6hxydpqljda6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 177                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xaa DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 120
.b8 109
.b8 120
.b8 101
.b8 111
.b8 54
.b8 55
.b8 102
.b8 100
.b8 120
.b8 106
.b8 122
.b8 51
.b8 108
.b8 53
.b8 100
.b8 106
.b8 104
.b8 115
.b8 119
.b8 120
.b8 97
.b8 107
.b8 110
.b8 119
.b8 119
.b8 55
.b8 101
.b8 119
.b8 119
.b8 105
.b8 54
.b8 120
.b8 53
.b8 115
.b8 109
.b8 114
.b8 122
.b8 54
.b8 104
.b8 120
.b8 121
.b8 100
.b8 112
.b8 113
.b8 108
.b8 106
.b8 100
.b8 97
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x23 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
