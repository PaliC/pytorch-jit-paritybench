; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_div_logsumexp_mean_neg_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #2, !dbg !10
  %8 = bitcast i32 %7 to float, !dbg !10
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !11
  %10 = bitcast i32 %9 to float, !dbg !11
  %11 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !12
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #2, !dbg !13
  %13 = bitcast i32 %12 to float, !dbg !13
  %14 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !14
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #2, !dbg !15
  %16 = bitcast i32 %15 to float, !dbg !15
  %17 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #2, !dbg !17
  %19 = bitcast i32 %18 to float, !dbg !17
  %20 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !18
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #2, !dbg !19
  %22 = bitcast i32 %21 to float, !dbg !19
  %23 = getelementptr i8, ptr addrspace(1) %1, i64 16, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #2, !dbg !21
  %25 = bitcast i32 %24 to float, !dbg !21
  %26 = getelementptr i8, ptr addrspace(1) %1, i64 20, !dbg !22
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #2, !dbg !23
  %28 = bitcast i32 %27 to float, !dbg !23
  %29 = getelementptr i8, ptr addrspace(1) %1, i64 24, !dbg !24
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #2, !dbg !25
  %31 = bitcast i32 %30 to float, !dbg !25
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 28, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #2, !dbg !27
  %34 = bitcast i32 %33 to float, !dbg !27
  %35 = getelementptr i8, ptr addrspace(1) %0, i64 8, !dbg !28
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #2, !dbg !29
  %37 = bitcast i32 %36 to float, !dbg !29
  %38 = getelementptr i8, ptr addrspace(1) %1, i64 32, !dbg !30
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #2, !dbg !31
  %40 = bitcast i32 %39 to float, !dbg !31
  %41 = getelementptr i8, ptr addrspace(1) %1, i64 36, !dbg !32
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 true) #2, !dbg !33
  %43 = bitcast i32 %42 to float, !dbg !33
  %44 = getelementptr i8, ptr addrspace(1) %1, i64 40, !dbg !34
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #2, !dbg !35
  %46 = bitcast i32 %45 to float, !dbg !35
  %47 = getelementptr i8, ptr addrspace(1) %1, i64 44, !dbg !36
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #2, !dbg !37
  %49 = bitcast i32 %48 to float, !dbg !37
  %50 = getelementptr i8, ptr addrspace(1) %0, i64 12, !dbg !38
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 true) #2, !dbg !39
  %52 = bitcast i32 %51 to float, !dbg !39
  %53 = getelementptr i8, ptr addrspace(1) %1, i64 48, !dbg !40
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #2, !dbg !41
  %55 = bitcast i32 %54 to float, !dbg !41
  %56 = getelementptr i8, ptr addrspace(1) %1, i64 52, !dbg !42
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 true) #2, !dbg !43
  %58 = bitcast i32 %57 to float, !dbg !43
  %59 = getelementptr i8, ptr addrspace(1) %1, i64 56, !dbg !44
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 true) #2, !dbg !45
  %61 = bitcast i32 %60 to float, !dbg !45
  %62 = getelementptr i8, ptr addrspace(1) %1, i64 60, !dbg !46
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 true) #2, !dbg !47
  %64 = bitcast i32 %63 to float, !dbg !47
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #2, !dbg !48
  %66 = bitcast i32 %65 to float, !dbg !48
  %67 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !49
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 true) #2, !dbg !50
  %69 = bitcast i32 %68 to float, !dbg !50
  %70 = getelementptr i8, ptr addrspace(1) %2, i64 8, !dbg !51
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 true) #2, !dbg !52
  %72 = bitcast i32 %71 to float, !dbg !52
  %73 = getelementptr i8, ptr addrspace(1) %2, i64 12, !dbg !53
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 true) #2, !dbg !54
  %75 = bitcast i32 %74 to float, !dbg !54
  %76 = getelementptr i8, ptr addrspace(1) %2, i64 16, !dbg !55
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %76, i1 true) #2, !dbg !56
  %78 = bitcast i32 %77 to float, !dbg !56
  %79 = getelementptr i8, ptr addrspace(1) %2, i64 20, !dbg !57
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %79, i1 true) #2, !dbg !58
  %81 = bitcast i32 %80 to float, !dbg !58
  %82 = getelementptr i8, ptr addrspace(1) %2, i64 24, !dbg !59
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %82, i1 true) #2, !dbg !60
  %84 = bitcast i32 %83 to float, !dbg !60
  %85 = getelementptr i8, ptr addrspace(1) %2, i64 28, !dbg !61
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %85, i1 true) #2, !dbg !62
  %87 = bitcast i32 %86 to float, !dbg !62
  %88 = getelementptr i8, ptr addrspace(1) %2, i64 32, !dbg !63
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %88, i1 true) #2, !dbg !64
  %90 = bitcast i32 %89 to float, !dbg !64
  %91 = getelementptr i8, ptr addrspace(1) %2, i64 36, !dbg !65
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %91, i1 true) #2, !dbg !66
  %93 = bitcast i32 %92 to float, !dbg !66
  %94 = getelementptr i8, ptr addrspace(1) %2, i64 40, !dbg !67
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 true) #2, !dbg !68
  %96 = bitcast i32 %95 to float, !dbg !68
  %97 = getelementptr i8, ptr addrspace(1) %2, i64 44, !dbg !69
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %97, i1 true) #2, !dbg !70
  %99 = bitcast i32 %98 to float, !dbg !70
  %100 = getelementptr i8, ptr addrspace(1) %2, i64 48, !dbg !71
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %100, i1 true) #2, !dbg !72
  %102 = bitcast i32 %101 to float, !dbg !72
  %103 = getelementptr i8, ptr addrspace(1) %2, i64 52, !dbg !73
  %104 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %103, i1 true) #2, !dbg !74
  %105 = bitcast i32 %104 to float, !dbg !74
  %106 = getelementptr i8, ptr addrspace(1) %2, i64 56, !dbg !75
  %107 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %106, i1 true) #2, !dbg !76
  %108 = bitcast i32 %107 to float, !dbg !76
  %109 = getelementptr i8, ptr addrspace(1) %2, i64 60, !dbg !77
  %110 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %109, i1 true) #2, !dbg !78
  %111 = bitcast i32 %110 to float, !dbg !78
  %112 = fcmp ogt float %10, %13, !dbg !79
  %113 = fcmp uno float %10, 0.000000e+00, !dbg !83
  %114 = or i1 %113, %112, !dbg !84
  %115 = select i1 %114, float %10, float %13, !dbg !85
  %116 = fcmp ogt float %115, %16, !dbg !86
  %117 = fcmp uno float %115, 0.000000e+00, !dbg !88
  %118 = or i1 %116, %117, !dbg !89
  %119 = select i1 %118, float %115, float %16, !dbg !90
  %120 = fcmp ogt float %119, %19, !dbg !91
  %121 = fcmp uno float %119, 0.000000e+00, !dbg !93
  %122 = or i1 %120, %121, !dbg !94
  %123 = select i1 %122, float %119, float %19, !dbg !95
  %124 = fsub float %123, %8, !dbg !96
  %125 = fadd float %124, 0.000000e+00, !dbg !96
  %126 = fcmp ogt float %25, %28, !dbg !97
  %127 = fcmp uno float %25, 0.000000e+00, !dbg !99
  %128 = or i1 %127, %126, !dbg !100
  %129 = select i1 %128, float %25, float %28, !dbg !101
  %130 = fcmp ogt float %129, %31, !dbg !102
  %131 = fcmp uno float %129, 0.000000e+00, !dbg !104
  %132 = or i1 %130, %131, !dbg !105
  %133 = select i1 %132, float %129, float %31, !dbg !106
  %134 = fcmp ogt float %133, %34, !dbg !107
  %135 = fcmp uno float %133, 0.000000e+00, !dbg !109
  %136 = or i1 %134, %135, !dbg !110
  %137 = select i1 %136, float %133, float %34, !dbg !111
  %138 = fsub float %137, %22, !dbg !112
  %139 = fadd float %138, 0.000000e+00, !dbg !112
  %140 = fadd float %125, %139, !dbg !113
  %141 = fcmp ogt float %40, %43, !dbg !114
  %142 = fcmp uno float %40, 0.000000e+00, !dbg !116
  %143 = or i1 %142, %141, !dbg !117
  %144 = select i1 %143, float %40, float %43, !dbg !118
  %145 = fcmp ogt float %144, %46, !dbg !119
  %146 = fcmp uno float %144, 0.000000e+00, !dbg !121
  %147 = or i1 %145, %146, !dbg !122
  %148 = select i1 %147, float %144, float %46, !dbg !123
  %149 = fcmp ogt float %148, %49, !dbg !124
  %150 = fcmp uno float %148, 0.000000e+00, !dbg !126
  %151 = or i1 %149, %150, !dbg !127
  %152 = select i1 %151, float %148, float %49, !dbg !128
  %153 = fsub float %152, %37, !dbg !129
  %154 = fadd float %153, 0.000000e+00, !dbg !129
  %155 = fadd float %140, %154, !dbg !130
  %156 = fcmp ogt float %55, %58, !dbg !131
  %157 = fcmp uno float %55, 0.000000e+00, !dbg !133
  %158 = or i1 %157, %156, !dbg !134
  %159 = select i1 %158, float %55, float %58, !dbg !135
  %160 = fcmp ogt float %159, %61, !dbg !136
  %161 = fcmp uno float %159, 0.000000e+00, !dbg !138
  %162 = or i1 %160, %161, !dbg !139
  %163 = select i1 %162, float %159, float %61, !dbg !140
  %164 = fcmp ogt float %163, %64, !dbg !141
  %165 = fcmp uno float %163, 0.000000e+00, !dbg !143
  %166 = or i1 %164, %165, !dbg !144
  %167 = select i1 %166, float %163, float %64, !dbg !145
  %168 = fsub float %167, %52, !dbg !146
  %169 = fadd float %168, 0.000000e+00, !dbg !146
  %170 = fadd float %155, %169, !dbg !147
  %171 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %170, float 4.000000e+00) #2, !dbg !148
  %172 = fcmp ogt float %66, %69, !dbg !149
  %173 = fcmp uno float %66, 0.000000e+00, !dbg !151
  %174 = or i1 %173, %172, !dbg !152
  %175 = select i1 %174, float %66, float %69, !dbg !153
  %176 = fcmp ogt float %175, %72, !dbg !154
  %177 = fcmp uno float %175, 0.000000e+00, !dbg !156
  %178 = or i1 %176, %177, !dbg !157
  %179 = select i1 %178, float %175, float %72, !dbg !158
  %180 = fcmp ogt float %179, %75, !dbg !159
  %181 = fcmp uno float %179, 0.000000e+00, !dbg !161
  %182 = or i1 %180, %181, !dbg !162
  %183 = select i1 %182, float %179, float %75, !dbg !163
  %184 = tail call float @llvm.fabs.f32(float %183), !dbg !164
  %185 = fcmp oeq float %184, 0x7FF0000000000000, !dbg !165
  %186 = select i1 %185, float 0.000000e+00, float %183, !dbg !166
  %187 = fsub float %66, %186, !dbg !167
  %188 = fmul float %187, 0x3FF7154760000000, !dbg !168
  %189 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %188) #2, !dbg !168
  %190 = fsub float %69, %186, !dbg !169
  %191 = fmul float %190, 0x3FF7154760000000, !dbg !170
  %192 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %191) #2, !dbg !170
  %193 = fadd float %189, %192, !dbg !171
  %194 = fsub float %72, %186, !dbg !172
  %195 = fmul float %194, 0x3FF7154760000000, !dbg !173
  %196 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %195) #2, !dbg !173
  %197 = fadd float %193, %196, !dbg !174
  %198 = fsub float %75, %186, !dbg !175
  %199 = fmul float %198, 0x3FF7154760000000, !dbg !176
  %200 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %199) #2, !dbg !176
  %201 = fadd float %197, %200, !dbg !177
  %202 = fcmp olt float %201, 0x3810000000000000, !dbg !178
  %203 = fmul float %201, 0x4160000000000000, !dbg !178
  %.02.i = select i1 %202, float %203, float %201, !dbg !178
  %i.i.0.i = select i1 %202, float -2.300000e+01, float 0.000000e+00, !dbg !178
  %204 = bitcast float %.02.i to i32, !dbg !178
  %205 = add i32 %204, -1059760811, !dbg !178
  %206 = and i32 %205, -8388608, !dbg !178
  %207 = sub i32 %204, %206, !dbg !178
  %208 = bitcast i32 %207 to float, !dbg !178
  %209 = sitofp i32 %206 to float, !dbg !178
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not.i = icmp eq i32 %210, 0, !dbg !178
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %209, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !178
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %209, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !178
  %.08.i = select i1 %.not.i, float %212, float %211, !dbg !178
  %213 = fadd float %208, -1.000000e+00, !dbg !178
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not1.i = icmp eq i32 %214, 0, !dbg !178
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %213, float 0x3FC2073EC0000000) #2, !dbg !178
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %213, float 0x3FC2073EC0000000) #2, !dbg !178
  %.010.i = select i1 %.not1.i, float %216, float %215, !dbg !178
  %217 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not2.i = icmp eq i32 %217, 0, !dbg !178
  %218 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %213, float 0xBFBF19B980000000) #2, !dbg !178
  %219 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %213, float 0xBFBF19B980000000) #2, !dbg !178
  %.011.i = select i1 %.not2.i, float %219, float %218, !dbg !178
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not3.i = icmp eq i32 %220, 0, !dbg !178
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %213, float 0x3FC1E52AA0000000) #2, !dbg !178
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %213, float 0x3FC1E52AA0000000) #2, !dbg !178
  %.012.i = select i1 %.not3.i, float %222, float %221, !dbg !178
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not4.i = icmp eq i32 %223, 0, !dbg !178
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %213, float 0xBFC55B1720000000) #2, !dbg !178
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %213, float 0xBFC55B1720000000) #2, !dbg !178
  %.09.i = select i1 %.not4.i, float %225, float %224, !dbg !178
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not5.i = icmp eq i32 %226, 0, !dbg !178
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %213, float 0x3FC99DA160000000) #2, !dbg !178
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %213, float 0x3FC99DA160000000) #2, !dbg !178
  %.05.i = select i1 %.not5.i, float %228, float %227, !dbg !178
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not6.i = icmp eq i32 %229, 0, !dbg !178
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %213, float 0xBFCFFFE440000000) #2, !dbg !178
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %213, float 0xBFCFFFE440000000) #2, !dbg !178
  %.01.i = select i1 %.not6.i, float %231, float %230, !dbg !178
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not7.i = icmp eq i32 %232, 0, !dbg !178
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %213, float 0x3FD5554F00000000) #2, !dbg !178
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %213, float 0x3FD5554F00000000) #2, !dbg !178
  %.0.i = select i1 %.not7.i, float %234, float %233, !dbg !178
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not8.i = icmp eq i32 %235, 0, !dbg !178
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %213, float -5.000000e-01) #2, !dbg !178
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %213, float -5.000000e-01) #2, !dbg !178
  %.07.i = select i1 %.not8.i, float %237, float %236, !dbg !178
  %238 = fmul float %213, %.07.i, !dbg !178
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not9.i = icmp eq i32 %239, 0, !dbg !178
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %238, float %213, float %213) #2, !dbg !178
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %238, float %213, float %213) #2, !dbg !178
  %.06.i = select i1 %.not9.i, float %241, float %240, !dbg !178
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not10.i = icmp eq i32 %242, 0, !dbg !178
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !178
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !178
  %.04.i = select i1 %.not10.i, float %244, float %243, !dbg !178
  %245 = icmp ugt i32 %204, 2139095039, !dbg !178
  br i1 %245, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !178

__nv_fmaf_rn.exit.i.i:                            ; preds = %6
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !178
  %.not11.i = icmp eq i32 %246, 0, !dbg !178
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !178
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !178
  %.03.i = select i1 %.not11.i, float %248, float %247, !dbg !178
  br label %__nv_logf.exit, !dbg !178

__nv_logf.exit:                                   ; preds = %6, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %6 ], !dbg !178
  %249 = fcmp ogt float %78, %81, !dbg !179
  %250 = fcmp uno float %78, 0.000000e+00, !dbg !181
  %251 = or i1 %250, %249, !dbg !182
  %252 = select i1 %251, float %78, float %81, !dbg !183
  %253 = fcmp ogt float %252, %84, !dbg !184
  %254 = fcmp uno float %252, 0.000000e+00, !dbg !186
  %255 = or i1 %253, %254, !dbg !187
  %256 = select i1 %255, float %252, float %84, !dbg !188
  %257 = fcmp ogt float %256, %87, !dbg !189
  %258 = fcmp uno float %256, 0.000000e+00, !dbg !191
  %259 = or i1 %257, %258, !dbg !192
  %260 = select i1 %259, float %256, float %87, !dbg !193
  %261 = tail call float @llvm.fabs.f32(float %260), !dbg !194
  %262 = fcmp oeq float %261, 0x7FF0000000000000, !dbg !195
  %263 = select i1 %262, float 0.000000e+00, float %260, !dbg !196
  %264 = fsub float %78, %263, !dbg !197
  %265 = fmul float %264, 0x3FF7154760000000, !dbg !198
  %266 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %265) #2, !dbg !198
  %267 = fsub float %81, %263, !dbg !199
  %268 = fmul float %267, 0x3FF7154760000000, !dbg !200
  %269 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %268) #2, !dbg !200
  %270 = fadd float %266, %269, !dbg !201
  %271 = fsub float %84, %263, !dbg !202
  %272 = fmul float %271, 0x3FF7154760000000, !dbg !203
  %273 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %272) #2, !dbg !203
  %274 = fadd float %270, %273, !dbg !204
  %275 = fsub float %87, %263, !dbg !205
  %276 = fmul float %275, 0x3FF7154760000000, !dbg !206
  %277 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %276) #2, !dbg !206
  %278 = fadd float %274, %277, !dbg !207
  %279 = fcmp olt float %278, 0x3810000000000000, !dbg !208
  %280 = fmul float %278, 0x4160000000000000, !dbg !208
  %.02.i1 = select i1 %279, float %280, float %278, !dbg !208
  %i.i.0.i2 = select i1 %279, float -2.300000e+01, float 0.000000e+00, !dbg !208
  %281 = bitcast float %.02.i1 to i32, !dbg !208
  %282 = add i32 %281, -1059760811, !dbg !208
  %283 = and i32 %282, -8388608, !dbg !208
  %284 = sub i32 %281, %283, !dbg !208
  %285 = bitcast i32 %284 to float, !dbg !208
  %286 = sitofp i32 %283 to float, !dbg !208
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not.i3 = icmp eq i32 %287, 0, !dbg !208
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %286, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !208
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %286, float 0x3E80000000000000, float %i.i.0.i2) #2, !dbg !208
  %.08.i4 = select i1 %.not.i3, float %289, float %288, !dbg !208
  %290 = fadd float %285, -1.000000e+00, !dbg !208
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not1.i5 = icmp eq i32 %291, 0, !dbg !208
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %290, float 0x3FC2073EC0000000) #2, !dbg !208
  %293 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %290, float 0x3FC2073EC0000000) #2, !dbg !208
  %.010.i6 = select i1 %.not1.i5, float %293, float %292, !dbg !208
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not2.i7 = icmp eq i32 %294, 0, !dbg !208
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %290, float 0xBFBF19B980000000) #2, !dbg !208
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %290, float 0xBFBF19B980000000) #2, !dbg !208
  %.011.i8 = select i1 %.not2.i7, float %296, float %295, !dbg !208
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not3.i9 = icmp eq i32 %297, 0, !dbg !208
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %290, float 0x3FC1E52AA0000000) #2, !dbg !208
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %290, float 0x3FC1E52AA0000000) #2, !dbg !208
  %.012.i10 = select i1 %.not3.i9, float %299, float %298, !dbg !208
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not4.i11 = icmp eq i32 %300, 0, !dbg !208
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %290, float 0xBFC55B1720000000) #2, !dbg !208
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %290, float 0xBFC55B1720000000) #2, !dbg !208
  %.09.i12 = select i1 %.not4.i11, float %302, float %301, !dbg !208
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not5.i13 = icmp eq i32 %303, 0, !dbg !208
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %290, float 0x3FC99DA160000000) #2, !dbg !208
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %290, float 0x3FC99DA160000000) #2, !dbg !208
  %.05.i14 = select i1 %.not5.i13, float %305, float %304, !dbg !208
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not6.i15 = icmp eq i32 %306, 0, !dbg !208
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %290, float 0xBFCFFFE440000000) #2, !dbg !208
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %290, float 0xBFCFFFE440000000) #2, !dbg !208
  %.01.i16 = select i1 %.not6.i15, float %308, float %307, !dbg !208
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not7.i17 = icmp eq i32 %309, 0, !dbg !208
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %290, float 0x3FD5554F00000000) #2, !dbg !208
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %290, float 0x3FD5554F00000000) #2, !dbg !208
  %.0.i18 = select i1 %.not7.i17, float %311, float %310, !dbg !208
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not8.i19 = icmp eq i32 %312, 0, !dbg !208
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %290, float -5.000000e-01) #2, !dbg !208
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %290, float -5.000000e-01) #2, !dbg !208
  %.07.i20 = select i1 %.not8.i19, float %314, float %313, !dbg !208
  %315 = fmul float %290, %.07.i20, !dbg !208
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not9.i21 = icmp eq i32 %316, 0, !dbg !208
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %315, float %290, float %290) #2, !dbg !208
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %315, float %290, float %290) #2, !dbg !208
  %.06.i22 = select i1 %.not9.i21, float %318, float %317, !dbg !208
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not10.i23 = icmp eq i32 %319, 0, !dbg !208
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !208
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #2, !dbg !208
  %.04.i24 = select i1 %.not10.i23, float %321, float %320, !dbg !208
  %322 = icmp ugt i32 %281, 2139095039, !dbg !208
  br i1 %322, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !208

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !208
  %.not11.i28 = icmp eq i32 %323, 0, !dbg !208
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !208
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !208
  %.03.i29 = select i1 %.not11.i28, float %325, float %324, !dbg !208
  br label %__nv_logf.exit30, !dbg !208

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !208
  %326 = fcmp ogt float %90, %93, !dbg !209
  %327 = fcmp uno float %90, 0.000000e+00, !dbg !211
  %328 = or i1 %327, %326, !dbg !212
  %329 = select i1 %328, float %90, float %93, !dbg !213
  %330 = fcmp ogt float %329, %96, !dbg !214
  %331 = fcmp uno float %329, 0.000000e+00, !dbg !216
  %332 = or i1 %330, %331, !dbg !217
  %333 = select i1 %332, float %329, float %96, !dbg !218
  %334 = fcmp ogt float %333, %99, !dbg !219
  %335 = fcmp uno float %333, 0.000000e+00, !dbg !221
  %336 = or i1 %334, %335, !dbg !222
  %337 = select i1 %336, float %333, float %99, !dbg !223
  %338 = tail call float @llvm.fabs.f32(float %337), !dbg !224
  %339 = fcmp oeq float %338, 0x7FF0000000000000, !dbg !225
  %340 = select i1 %339, float 0.000000e+00, float %337, !dbg !226
  %341 = fsub float %90, %340, !dbg !227
  %342 = fmul float %341, 0x3FF7154760000000, !dbg !228
  %343 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %342) #2, !dbg !228
  %344 = fsub float %93, %340, !dbg !229
  %345 = fmul float %344, 0x3FF7154760000000, !dbg !230
  %346 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %345) #2, !dbg !230
  %347 = fadd float %343, %346, !dbg !231
  %348 = fsub float %96, %340, !dbg !232
  %349 = fmul float %348, 0x3FF7154760000000, !dbg !233
  %350 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %349) #2, !dbg !233
  %351 = fadd float %347, %350, !dbg !234
  %352 = fsub float %99, %340, !dbg !235
  %353 = fmul float %352, 0x3FF7154760000000, !dbg !236
  %354 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %353) #2, !dbg !236
  %355 = fadd float %351, %354, !dbg !237
  %356 = fcmp olt float %355, 0x3810000000000000, !dbg !238
  %357 = fmul float %355, 0x4160000000000000, !dbg !238
  %.02.i31 = select i1 %356, float %357, float %355, !dbg !238
  %i.i.0.i32 = select i1 %356, float -2.300000e+01, float 0.000000e+00, !dbg !238
  %358 = bitcast float %.02.i31 to i32, !dbg !238
  %359 = add i32 %358, -1059760811, !dbg !238
  %360 = and i32 %359, -8388608, !dbg !238
  %361 = sub i32 %358, %360, !dbg !238
  %362 = bitcast i32 %361 to float, !dbg !238
  %363 = sitofp i32 %360 to float, !dbg !238
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not.i33 = icmp eq i32 %364, 0, !dbg !238
  %365 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %363, float 0x3E80000000000000, float %i.i.0.i32) #2, !dbg !238
  %366 = tail call float @llvm.nvvm.fma.rn.f(float %363, float 0x3E80000000000000, float %i.i.0.i32) #2, !dbg !238
  %.08.i34 = select i1 %.not.i33, float %366, float %365, !dbg !238
  %367 = fadd float %362, -1.000000e+00, !dbg !238
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not1.i35 = icmp eq i32 %368, 0, !dbg !238
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %367, float 0x3FC2073EC0000000) #2, !dbg !238
  %370 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %367, float 0x3FC2073EC0000000) #2, !dbg !238
  %.010.i36 = select i1 %.not1.i35, float %370, float %369, !dbg !238
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not2.i37 = icmp eq i32 %371, 0, !dbg !238
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %367, float 0xBFBF19B980000000) #2, !dbg !238
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %367, float 0xBFBF19B980000000) #2, !dbg !238
  %.011.i38 = select i1 %.not2.i37, float %373, float %372, !dbg !238
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not3.i39 = icmp eq i32 %374, 0, !dbg !238
  %375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %367, float 0x3FC1E52AA0000000) #2, !dbg !238
  %376 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %367, float 0x3FC1E52AA0000000) #2, !dbg !238
  %.012.i40 = select i1 %.not3.i39, float %376, float %375, !dbg !238
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not4.i41 = icmp eq i32 %377, 0, !dbg !238
  %378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %367, float 0xBFC55B1720000000) #2, !dbg !238
  %379 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %367, float 0xBFC55B1720000000) #2, !dbg !238
  %.09.i42 = select i1 %.not4.i41, float %379, float %378, !dbg !238
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not5.i43 = icmp eq i32 %380, 0, !dbg !238
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %367, float 0x3FC99DA160000000) #2, !dbg !238
  %382 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %367, float 0x3FC99DA160000000) #2, !dbg !238
  %.05.i44 = select i1 %.not5.i43, float %382, float %381, !dbg !238
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not6.i45 = icmp eq i32 %383, 0, !dbg !238
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %367, float 0xBFCFFFE440000000) #2, !dbg !238
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %367, float 0xBFCFFFE440000000) #2, !dbg !238
  %.01.i46 = select i1 %.not6.i45, float %385, float %384, !dbg !238
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not7.i47 = icmp eq i32 %386, 0, !dbg !238
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %367, float 0x3FD5554F00000000) #2, !dbg !238
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %367, float 0x3FD5554F00000000) #2, !dbg !238
  %.0.i48 = select i1 %.not7.i47, float %388, float %387, !dbg !238
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not8.i49 = icmp eq i32 %389, 0, !dbg !238
  %390 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %367, float -5.000000e-01) #2, !dbg !238
  %391 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %367, float -5.000000e-01) #2, !dbg !238
  %.07.i50 = select i1 %.not8.i49, float %391, float %390, !dbg !238
  %392 = fmul float %367, %.07.i50, !dbg !238
  %393 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not9.i51 = icmp eq i32 %393, 0, !dbg !238
  %394 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %392, float %367, float %367) #2, !dbg !238
  %395 = tail call float @llvm.nvvm.fma.rn.f(float %392, float %367, float %367) #2, !dbg !238
  %.06.i52 = select i1 %.not9.i51, float %395, float %394, !dbg !238
  %396 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not10.i53 = icmp eq i32 %396, 0, !dbg !238
  %397 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #2, !dbg !238
  %398 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #2, !dbg !238
  %.04.i54 = select i1 %.not10.i53, float %398, float %397, !dbg !238
  %399 = icmp ugt i32 %358, 2139095039, !dbg !238
  br i1 %399, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !238

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %400 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !238
  %.not11.i58 = icmp eq i32 %400, 0, !dbg !238
  %401 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !238
  %402 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !238
  %.03.i59 = select i1 %.not11.i58, float %402, float %401, !dbg !238
  br label %__nv_logf.exit60, !dbg !238

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !238
  %403 = fcmp ogt float %102, %105, !dbg !239
  %404 = fcmp uno float %102, 0.000000e+00, !dbg !241
  %405 = or i1 %404, %403, !dbg !242
  %406 = select i1 %405, float %102, float %105, !dbg !243
  %407 = fcmp ogt float %406, %108, !dbg !244
  %408 = fcmp uno float %406, 0.000000e+00, !dbg !246
  %409 = or i1 %407, %408, !dbg !247
  %410 = select i1 %409, float %406, float %108, !dbg !248
  %411 = fcmp ogt float %410, %111, !dbg !249
  %412 = fcmp uno float %410, 0.000000e+00, !dbg !251
  %413 = or i1 %411, %412, !dbg !252
  %414 = select i1 %413, float %410, float %111, !dbg !253
  %415 = tail call float @llvm.fabs.f32(float %414), !dbg !254
  %416 = fcmp oeq float %415, 0x7FF0000000000000, !dbg !255
  %417 = select i1 %416, float 0.000000e+00, float %414, !dbg !256
  %418 = fsub float %102, %417, !dbg !257
  %419 = fmul float %418, 0x3FF7154760000000, !dbg !258
  %420 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %419) #2, !dbg !258
  %421 = fsub float %105, %417, !dbg !259
  %422 = fmul float %421, 0x3FF7154760000000, !dbg !260
  %423 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %422) #2, !dbg !260
  %424 = fadd float %420, %423, !dbg !261
  %425 = fsub float %108, %417, !dbg !262
  %426 = fmul float %425, 0x3FF7154760000000, !dbg !263
  %427 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %426) #2, !dbg !263
  %428 = fadd float %424, %427, !dbg !264
  %429 = fsub float %111, %417, !dbg !265
  %430 = fmul float %429, 0x3FF7154760000000, !dbg !266
  %431 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %430) #2, !dbg !266
  %432 = fadd float %428, %431, !dbg !267
  %433 = fcmp olt float %432, 0x3810000000000000, !dbg !268
  %434 = fmul float %432, 0x4160000000000000, !dbg !268
  %.02.i61 = select i1 %433, float %434, float %432, !dbg !268
  %i.i.0.i62 = select i1 %433, float -2.300000e+01, float 0.000000e+00, !dbg !268
  %435 = bitcast float %.02.i61 to i32, !dbg !268
  %436 = add i32 %435, -1059760811, !dbg !268
  %437 = and i32 %436, -8388608, !dbg !268
  %438 = sub i32 %435, %437, !dbg !268
  %439 = bitcast i32 %438 to float, !dbg !268
  %440 = sitofp i32 %437 to float, !dbg !268
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not.i63 = icmp eq i32 %441, 0, !dbg !268
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %440, float 0x3E80000000000000, float %i.i.0.i62) #2, !dbg !268
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %440, float 0x3E80000000000000, float %i.i.0.i62) #2, !dbg !268
  %.08.i64 = select i1 %.not.i63, float %443, float %442, !dbg !268
  %444 = fadd float %439, -1.000000e+00, !dbg !268
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not1.i65 = icmp eq i32 %445, 0, !dbg !268
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %444, float 0x3FC2073EC0000000) #2, !dbg !268
  %447 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %444, float 0x3FC2073EC0000000) #2, !dbg !268
  %.010.i66 = select i1 %.not1.i65, float %447, float %446, !dbg !268
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not2.i67 = icmp eq i32 %448, 0, !dbg !268
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %444, float 0xBFBF19B980000000) #2, !dbg !268
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %444, float 0xBFBF19B980000000) #2, !dbg !268
  %.011.i68 = select i1 %.not2.i67, float %450, float %449, !dbg !268
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not3.i69 = icmp eq i32 %451, 0, !dbg !268
  %452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %444, float 0x3FC1E52AA0000000) #2, !dbg !268
  %453 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %444, float 0x3FC1E52AA0000000) #2, !dbg !268
  %.012.i70 = select i1 %.not3.i69, float %453, float %452, !dbg !268
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not4.i71 = icmp eq i32 %454, 0, !dbg !268
  %455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %444, float 0xBFC55B1720000000) #2, !dbg !268
  %456 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %444, float 0xBFC55B1720000000) #2, !dbg !268
  %.09.i72 = select i1 %.not4.i71, float %456, float %455, !dbg !268
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not5.i73 = icmp eq i32 %457, 0, !dbg !268
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %444, float 0x3FC99DA160000000) #2, !dbg !268
  %459 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %444, float 0x3FC99DA160000000) #2, !dbg !268
  %.05.i74 = select i1 %.not5.i73, float %459, float %458, !dbg !268
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not6.i75 = icmp eq i32 %460, 0, !dbg !268
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %444, float 0xBFCFFFE440000000) #2, !dbg !268
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %444, float 0xBFCFFFE440000000) #2, !dbg !268
  %.01.i76 = select i1 %.not6.i75, float %462, float %461, !dbg !268
  %463 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not7.i77 = icmp eq i32 %463, 0, !dbg !268
  %464 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %444, float 0x3FD5554F00000000) #2, !dbg !268
  %465 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %444, float 0x3FD5554F00000000) #2, !dbg !268
  %.0.i78 = select i1 %.not7.i77, float %465, float %464, !dbg !268
  %466 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not8.i79 = icmp eq i32 %466, 0, !dbg !268
  %467 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %444, float -5.000000e-01) #2, !dbg !268
  %468 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %444, float -5.000000e-01) #2, !dbg !268
  %.07.i80 = select i1 %.not8.i79, float %468, float %467, !dbg !268
  %469 = fmul float %444, %.07.i80, !dbg !268
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not9.i81 = icmp eq i32 %470, 0, !dbg !268
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %469, float %444, float %444) #2, !dbg !268
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %469, float %444, float %444) #2, !dbg !268
  %.06.i82 = select i1 %.not9.i81, float %472, float %471, !dbg !268
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not10.i83 = icmp eq i32 %473, 0, !dbg !268
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #2, !dbg !268
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #2, !dbg !268
  %.04.i84 = select i1 %.not10.i83, float %475, float %474, !dbg !268
  %476 = icmp ugt i32 %435, 2139095039, !dbg !268
  br i1 %476, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !268

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %477 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !268
  %.not11.i88 = icmp eq i32 %477, 0, !dbg !268
  %478 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !268
  %479 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !268
  %.03.i89 = select i1 %.not11.i88, float %479, float %478, !dbg !268
  br label %__nv_logf.exit90, !dbg !268

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !268
  %480 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !178
  %481 = insertelement <2 x float> %480, float %.02.i1, i64 1, !dbg !178
  %482 = fcmp oeq <2 x float> %481, zeroinitializer, !dbg !178
  %483 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !178
  %484 = insertelement <2 x float> %483, float %r.i.0.i25, i64 1, !dbg !178
  %485 = select <2 x i1> %482, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %484, !dbg !178
  %486 = insertelement <2 x float> poison, float %186, i64 0, !dbg !269
  %487 = insertelement <2 x float> %486, float %263, i64 1, !dbg !269
  %488 = fadd <2 x float> %487, %485, !dbg !269
  %shift = shufflevector <2 x float> %488, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !270
  %489 = fadd <2 x float> %488, %shift, !dbg !270
  %490 = insertelement <2 x float> poison, float %.02.i31, i64 0, !dbg !238
  %491 = insertelement <2 x float> %490, float %.02.i61, i64 1, !dbg !238
  %492 = fcmp oeq <2 x float> %491, zeroinitializer, !dbg !238
  %493 = insertelement <2 x float> poison, float %r.i.0.i55, i64 0, !dbg !238
  %494 = insertelement <2 x float> %493, float %r.i.0.i85, i64 1, !dbg !238
  %495 = select <2 x i1> %492, <2 x float> splat (float 0xFFF0000000000000), <2 x float> %494, !dbg !238
  %496 = insertelement <2 x float> poison, float %340, i64 0, !dbg !271
  %497 = insertelement <2 x float> %496, float %417, i64 1, !dbg !271
  %498 = fadd <2 x float> %497, %495, !dbg !271
  %499 = fadd <2 x float> %489, %498, !dbg !272
  %shift91 = shufflevector <2 x float> %498, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !273
  %500 = fadd <2 x float> %499, %shift91, !dbg !273
  %501 = extractelement <2 x float> %500, i64 0, !dbg !273
  %502 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %501, float 4.000000e+00) #2, !dbg !274
  %503 = fadd float %171, %502, !dbg !275
  %504 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !276
  %505 = and i32 %504, 31, !dbg !276
  %506 = icmp eq i32 %505, 0, !dbg !276
  %507 = bitcast float %171 to i32, !dbg !276
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %507, ptr addrspace(1) %3, i1 %506) #2, !dbg !276
  %508 = bitcast float %502 to i32, !dbg !277
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %508, ptr addrspace(1) %4, i1 %506) #2, !dbg !277
  %509 = bitcast float %503 to i32, !dbg !278
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %509, ptr addrspace(1) %5, i1 %506) #2, !dbg !278
  ret void, !dbg !279
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cuaump7lnsuncmbljtghfgg3boevl3rwwodl4swxsoeyehorsnzx.py", directory: "inductor_cache/ua")
!4 = !{ptr @triton_poi_fused_add_div_logsumexp_mean_neg_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_logsumexp_mean_neg_sub_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_logsumexp_mean_neg_sub_1", linkageName: "triton_poi_fused_add_div_logsumexp_mean_neg_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 19, scope: !7)
!12 = !DILocation(line: 28, column: 30, scope: !7)
!13 = !DILocation(line: 28, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 31, scope: !7)
!15 = !DILocation(line: 30, column: 20, scope: !7)
!16 = !DILocation(line: 32, column: 31, scope: !7)
!17 = !DILocation(line: 32, column: 20, scope: !7)
!18 = !DILocation(line: 34, column: 31, scope: !7)
!19 = !DILocation(line: 34, column: 20, scope: !7)
!20 = !DILocation(line: 36, column: 31, scope: !7)
!21 = !DILocation(line: 36, column: 20, scope: !7)
!22 = !DILocation(line: 38, column: 31, scope: !7)
!23 = !DILocation(line: 38, column: 20, scope: !7)
!24 = !DILocation(line: 40, column: 31, scope: !7)
!25 = !DILocation(line: 40, column: 20, scope: !7)
!26 = !DILocation(line: 42, column: 31, scope: !7)
!27 = !DILocation(line: 42, column: 20, scope: !7)
!28 = !DILocation(line: 44, column: 31, scope: !7)
!29 = !DILocation(line: 44, column: 20, scope: !7)
!30 = !DILocation(line: 46, column: 31, scope: !7)
!31 = !DILocation(line: 46, column: 20, scope: !7)
!32 = !DILocation(line: 48, column: 31, scope: !7)
!33 = !DILocation(line: 48, column: 20, scope: !7)
!34 = !DILocation(line: 50, column: 31, scope: !7)
!35 = !DILocation(line: 50, column: 20, scope: !7)
!36 = !DILocation(line: 52, column: 31, scope: !7)
!37 = !DILocation(line: 52, column: 20, scope: !7)
!38 = !DILocation(line: 54, column: 31, scope: !7)
!39 = !DILocation(line: 54, column: 20, scope: !7)
!40 = !DILocation(line: 56, column: 31, scope: !7)
!41 = !DILocation(line: 56, column: 20, scope: !7)
!42 = !DILocation(line: 58, column: 31, scope: !7)
!43 = !DILocation(line: 58, column: 20, scope: !7)
!44 = !DILocation(line: 60, column: 31, scope: !7)
!45 = !DILocation(line: 60, column: 20, scope: !7)
!46 = !DILocation(line: 62, column: 31, scope: !7)
!47 = !DILocation(line: 62, column: 20, scope: !7)
!48 = !DILocation(line: 64, column: 20, scope: !7)
!49 = !DILocation(line: 66, column: 31, scope: !7)
!50 = !DILocation(line: 66, column: 20, scope: !7)
!51 = !DILocation(line: 68, column: 31, scope: !7)
!52 = !DILocation(line: 68, column: 20, scope: !7)
!53 = !DILocation(line: 70, column: 31, scope: !7)
!54 = !DILocation(line: 70, column: 20, scope: !7)
!55 = !DILocation(line: 72, column: 32, scope: !7)
!56 = !DILocation(line: 72, column: 21, scope: !7)
!57 = !DILocation(line: 74, column: 32, scope: !7)
!58 = !DILocation(line: 74, column: 21, scope: !7)
!59 = !DILocation(line: 76, column: 32, scope: !7)
!60 = !DILocation(line: 76, column: 21, scope: !7)
!61 = !DILocation(line: 78, column: 32, scope: !7)
!62 = !DILocation(line: 78, column: 21, scope: !7)
!63 = !DILocation(line: 80, column: 32, scope: !7)
!64 = !DILocation(line: 80, column: 21, scope: !7)
!65 = !DILocation(line: 82, column: 32, scope: !7)
!66 = !DILocation(line: 82, column: 21, scope: !7)
!67 = !DILocation(line: 84, column: 32, scope: !7)
!68 = !DILocation(line: 84, column: 21, scope: !7)
!69 = !DILocation(line: 86, column: 32, scope: !7)
!70 = !DILocation(line: 86, column: 21, scope: !7)
!71 = !DILocation(line: 88, column: 32, scope: !7)
!72 = !DILocation(line: 88, column: 21, scope: !7)
!73 = !DILocation(line: 90, column: 32, scope: !7)
!74 = !DILocation(line: 90, column: 21, scope: !7)
!75 = !DILocation(line: 92, column: 32, scope: !7)
!76 = !DILocation(line: 92, column: 21, scope: !7)
!77 = !DILocation(line: 94, column: 32, scope: !7)
!78 = !DILocation(line: 94, column: 21, scope: !7)
!79 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !82)
!80 = distinct !DILexicalBlockFile(scope: !7, file: !81, discriminator: 0)
!81 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!82 = !DILocation(line: 100, column: 41, scope: !7)
!83 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !82)
!84 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !82)
!85 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !82)
!86 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !87)
!87 = !DILocation(line: 102, column: 42, scope: !7)
!88 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !87)
!89 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !87)
!90 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !87)
!91 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !92)
!92 = !DILocation(line: 104, column: 42, scope: !7)
!93 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !92)
!94 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !92)
!95 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !92)
!96 = !DILocation(line: 106, column: 13, scope: !7)
!97 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !98)
!98 = !DILocation(line: 110, column: 42, scope: !7)
!99 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !98)
!100 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !98)
!101 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !98)
!102 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !103)
!103 = !DILocation(line: 112, column: 42, scope: !7)
!104 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !103)
!105 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !103)
!106 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !103)
!107 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !108)
!108 = !DILocation(line: 114, column: 42, scope: !7)
!109 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !108)
!110 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !108)
!111 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !108)
!112 = !DILocation(line: 116, column: 13, scope: !7)
!113 = !DILocation(line: 117, column: 20, scope: !7)
!114 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !115)
!115 = !DILocation(line: 121, column: 42, scope: !7)
!116 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !115)
!117 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !115)
!118 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !115)
!119 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !120)
!120 = !DILocation(line: 123, column: 42, scope: !7)
!121 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !120)
!122 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !120)
!123 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !120)
!124 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !125)
!125 = !DILocation(line: 125, column: 42, scope: !7)
!126 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !125)
!127 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !125)
!128 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !125)
!129 = !DILocation(line: 127, column: 13, scope: !7)
!130 = !DILocation(line: 128, column: 20, scope: !7)
!131 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !132)
!132 = !DILocation(line: 132, column: 42, scope: !7)
!133 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !132)
!134 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !132)
!135 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !132)
!136 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !137)
!137 = !DILocation(line: 134, column: 42, scope: !7)
!138 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !137)
!139 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !137)
!140 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !137)
!141 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !142)
!142 = !DILocation(line: 136, column: 42, scope: !7)
!143 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !142)
!144 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !142)
!145 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !142)
!146 = !DILocation(line: 138, column: 13, scope: !7)
!147 = !DILocation(line: 139, column: 20, scope: !7)
!148 = !DILocation(line: 141, column: 20, scope: !7)
!149 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !150)
!150 = !DILocation(line: 142, column: 42, scope: !7)
!151 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !150)
!152 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !150)
!153 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !150)
!154 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !155)
!155 = !DILocation(line: 143, column: 42, scope: !7)
!156 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !155)
!157 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !155)
!158 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !155)
!159 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !160)
!160 = !DILocation(line: 144, column: 42, scope: !7)
!161 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !160)
!162 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !160)
!163 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !160)
!164 = !DILocation(line: 145, column: 24, scope: !7)
!165 = !DILocation(line: 147, column: 21, scope: !7)
!166 = !DILocation(line: 149, column: 37, scope: !7)
!167 = !DILocation(line: 150, column: 21, scope: !7)
!168 = !DILocation(line: 151, column: 25, scope: !7)
!169 = !DILocation(line: 152, column: 21, scope: !7)
!170 = !DILocation(line: 153, column: 25, scope: !7)
!171 = !DILocation(line: 154, column: 22, scope: !7)
!172 = !DILocation(line: 155, column: 21, scope: !7)
!173 = !DILocation(line: 156, column: 25, scope: !7)
!174 = !DILocation(line: 157, column: 22, scope: !7)
!175 = !DILocation(line: 158, column: 21, scope: !7)
!176 = !DILocation(line: 159, column: 25, scope: !7)
!177 = !DILocation(line: 160, column: 22, scope: !7)
!178 = !DILocation(line: 161, column: 25, scope: !7)
!179 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !180)
!180 = !DILocation(line: 163, column: 44, scope: !7)
!181 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !180)
!182 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !180)
!183 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !180)
!184 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !185)
!185 = !DILocation(line: 164, column: 44, scope: !7)
!186 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !185)
!187 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !185)
!188 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !185)
!189 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !190)
!190 = !DILocation(line: 165, column: 44, scope: !7)
!191 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !190)
!192 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !190)
!193 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !190)
!194 = !DILocation(line: 166, column: 25, scope: !7)
!195 = !DILocation(line: 167, column: 23, scope: !7)
!196 = !DILocation(line: 168, column: 38, scope: !7)
!197 = !DILocation(line: 169, column: 22, scope: !7)
!198 = !DILocation(line: 170, column: 25, scope: !7)
!199 = !DILocation(line: 171, column: 22, scope: !7)
!200 = !DILocation(line: 172, column: 25, scope: !7)
!201 = !DILocation(line: 173, column: 22, scope: !7)
!202 = !DILocation(line: 174, column: 22, scope: !7)
!203 = !DILocation(line: 175, column: 25, scope: !7)
!204 = !DILocation(line: 176, column: 22, scope: !7)
!205 = !DILocation(line: 177, column: 22, scope: !7)
!206 = !DILocation(line: 178, column: 25, scope: !7)
!207 = !DILocation(line: 179, column: 22, scope: !7)
!208 = !DILocation(line: 180, column: 25, scope: !7)
!209 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !210)
!210 = !DILocation(line: 183, column: 44, scope: !7)
!211 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !210)
!212 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !210)
!213 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !210)
!214 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !215)
!215 = !DILocation(line: 184, column: 44, scope: !7)
!216 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !215)
!217 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !215)
!218 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !215)
!219 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !220)
!220 = !DILocation(line: 185, column: 44, scope: !7)
!221 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !220)
!222 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !220)
!223 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !220)
!224 = !DILocation(line: 186, column: 25, scope: !7)
!225 = !DILocation(line: 187, column: 23, scope: !7)
!226 = !DILocation(line: 188, column: 38, scope: !7)
!227 = !DILocation(line: 189, column: 22, scope: !7)
!228 = !DILocation(line: 190, column: 25, scope: !7)
!229 = !DILocation(line: 191, column: 22, scope: !7)
!230 = !DILocation(line: 192, column: 25, scope: !7)
!231 = !DILocation(line: 193, column: 22, scope: !7)
!232 = !DILocation(line: 194, column: 22, scope: !7)
!233 = !DILocation(line: 195, column: 25, scope: !7)
!234 = !DILocation(line: 196, column: 22, scope: !7)
!235 = !DILocation(line: 197, column: 22, scope: !7)
!236 = !DILocation(line: 198, column: 25, scope: !7)
!237 = !DILocation(line: 199, column: 22, scope: !7)
!238 = !DILocation(line: 200, column: 25, scope: !7)
!239 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !240)
!240 = !DILocation(line: 203, column: 44, scope: !7)
!241 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !240)
!242 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !240)
!243 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !240)
!244 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !245)
!245 = !DILocation(line: 204, column: 44, scope: !7)
!246 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !245)
!247 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !245)
!248 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !245)
!249 = !DILocation(line: 118, column: 15, scope: !80, inlinedAt: !250)
!250 = !DILocation(line: 205, column: 44, scope: !7)
!251 = !DILocation(line: 120, column: 21, scope: !80, inlinedAt: !250)
!252 = !DILocation(line: 120, column: 16, scope: !80, inlinedAt: !250)
!253 = !DILocation(line: 121, column: 29, scope: !80, inlinedAt: !250)
!254 = !DILocation(line: 206, column: 25, scope: !7)
!255 = !DILocation(line: 207, column: 23, scope: !7)
!256 = !DILocation(line: 208, column: 38, scope: !7)
!257 = !DILocation(line: 209, column: 22, scope: !7)
!258 = !DILocation(line: 210, column: 25, scope: !7)
!259 = !DILocation(line: 211, column: 22, scope: !7)
!260 = !DILocation(line: 212, column: 25, scope: !7)
!261 = !DILocation(line: 213, column: 22, scope: !7)
!262 = !DILocation(line: 214, column: 22, scope: !7)
!263 = !DILocation(line: 215, column: 25, scope: !7)
!264 = !DILocation(line: 216, column: 22, scope: !7)
!265 = !DILocation(line: 217, column: 22, scope: !7)
!266 = !DILocation(line: 218, column: 25, scope: !7)
!267 = !DILocation(line: 219, column: 22, scope: !7)
!268 = !DILocation(line: 220, column: 25, scope: !7)
!269 = !DILocation(line: 162, column: 22, scope: !7)
!270 = !DILocation(line: 182, column: 22, scope: !7)
!271 = !DILocation(line: 201, column: 22, scope: !7)
!272 = !DILocation(line: 202, column: 22, scope: !7)
!273 = !DILocation(line: 222, column: 22, scope: !7)
!274 = !DILocation(line: 223, column: 22, scope: !7)
!275 = !DILocation(line: 224, column: 21, scope: !7)
!276 = !DILocation(line: 225, column: 65, scope: !7)
!277 = !DILocation(line: 226, column: 66, scope: !7)
!278 = !DILocation(line: 227, column: 66, scope: !7)
!279 = !DILocation(line: 227, column: 4, scope: !7)
