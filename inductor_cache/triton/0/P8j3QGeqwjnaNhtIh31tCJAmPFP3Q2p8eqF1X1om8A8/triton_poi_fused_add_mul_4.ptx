//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_4 // -- Begin function triton_poi_fused_add_mul_4
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_mul_4
.visible .entry triton_poi_fused_add_mul_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_4_param_3,
	.param .u32 triton_poi_fused_add_mul_4_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<41>;
	.reg .f32 	%f<28>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:19:0

// %bb.0:
	ld.param.u64 	%rd2, [triton_poi_fused_add_mul_4_param_3];
	ld.param.u64 	%rd6, [triton_poi_fused_add_mul_4_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_add_mul_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:21:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:21:33
	shl.b32 	%r8, %r4, 7;
	ld.param.u64 	%rd8, [triton_poi_fused_add_mul_4_param_2];
	.loc	1 22 36                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:22:36
	mov.u32 	%r9, %tid.x;
	and.b32  	%r10, %r9, 127;
	.loc	1 22 23                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:22:23
	or.b32  	%r11, %r8, %r10;
	.loc	1 23 21                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:23:21
	setp.lt.s32 	%p1, %r11, 256;
	.loc	1 25 19                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:25:19
	bfe.s32 	%r12, %r4, 24, 1;
	shr.u32 	%r13, %r12, 30;
	add.s32 	%r14, %r11, %r13;
	and.b32  	%r15, %r14, -4;
	sub.s32 	%r16, %r11, %r15;
	.loc	1 28 19                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:28:19
	shr.u32 	%r17, %r12, 26;
	add.s32 	%r18, %r11, %r17;
	shr.s32 	%r19, %r18, 6;
	.loc	1 29 30                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:29:30
	cvt.s64.s32 	%rd1, %r11;
	mul.wide.s32 	%rd9, %r11, 4;
	add.s64 	%rd3, %rd6, %rd9;
	.loc	1 29 35                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:29:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:30:30
	mul.wide.s32 	%rd10, %r16, 4;
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 30 35                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:30:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 27 21                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:27:21
	shr.u32 	%r20, %r12, 28;
	add.s32 	%r21, %r11, %r20;
	shr.s32 	%r22, %r21, 4;
	shr.s32 	%r23, %r14, 2;
	.loc	1 27 27                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:27:27
	shr.u32 	%r24, %r23, 30;
	add.s32 	%r25, %r23, %r24;
	and.b32  	%r26, %r25, 268435452;
	sub.s32 	%r27, %r23, %r26;
	shr.u32 	%r28, %r22, 30;
	add.s32 	%r29, %r22, %r28;
	and.b32  	%r30, %r29, 1073741820;
	sub.s32 	%r31, %r22, %r30;
	.loc	1 31 37                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:31:37
	shl.b32 	%r32, %r31, 2;
	.loc	1 31 35                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:31:35
	add.s32 	%r33, %r32, %r19;
	.loc	1 31 42                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:31:42
	shl.b32 	%r34, %r27, 4;
	add.s32 	%r35, %r33, %r34;
	.loc	1 31 30                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:31:30
	mul.wide.s32 	%rd11, %r35, 4;
	add.s64 	%rd5, %rd8, %rd11;
	.loc	1 31 50                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:31:50
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r7;
	.loc	1 32 26                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:32:26
	abs.ftz.f32 	%f2, %f1;
	setp.ltu.f32 	%p4, %f2, 0f3F19999A;
	@%p4 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f14, %f1, %f1;
	mov.f32 	%f15, 0fBD563CAE;
	mov.f32 	%f16, 0f3C80F082;
	fma.rn.ftz.f32 	%f17, %f16, %f14, %f15;
	mov.f32 	%f18, 0f3E085941;
	fma.rn.ftz.f32 	%f19, %f17, %f14, %f18;
	mov.f32 	%f20, 0fBEAAA9ED;
	fma.rn.ftz.f32 	%f21, %f19, %f14, %f20;
	mov.f32 	%f22, 0f00000000;
	fma.rn.ftz.f32 	%f23, %f21, %f14, %f22;
	fma.rn.ftz.f32 	%f27, %f23, %f1, %f1;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f8, %f2, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f9, %f8;
	add.f32 	%f7, %f9, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f6,%f7;
	// end inline asm
	mov.f32 	%f10, 0f3F800000;
	mov.f32 	%f11, 0fC0000000;
	fma.rn.ftz.f32 	%f12, %f6, %f11, %f10;
	setp.ge.f32 	%p5, %f2, 0f41102CB4;
	selp.f32 	%f13, 0f3F800000, %f12, %p5;
	mov.b32 	%r36, %f13;
	and.b32  	%r37, %r7, -2147483648;
	or.b32  	%r38, %r37, %r36;
	mov.b32 	%f27, %r38;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 26                          // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:0:26
	cvt.u32.u64 	%r40, %rd1;
	.loc	1 23 21                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:23:21
	setp.lt.s32 	%p6, %r40, 256;
	.loc	1 30 35                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:30:35
	mov.b32 	%f24, %r6;
	.loc	1 29 35                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:29:35
	mov.b32 	%f25, %r5;
	.loc	1 34 18                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:34:18
	fma.rn.f32 	%f26, %f27, %f24, %f25;
	.loc	1 35 25                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:35:25
	shl.b64 	%rd13, %rd1, 2;
	add.s64 	%rd12, %rd2, %rd13;
	.loc	1 35 36                         // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:35:36
	mov.b32 	%r39, %f26;
	// begin inline asm
	@%p6 st.global.b32 [ %rd12 + 0 ], { %r39 };
	// end inline asm
	.loc	1 35 4                          // cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/y6/cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 54
.b8 98
.b8 112
.b8 51
.b8 109
.b8 53
.b8 106
.b8 111
.b8 100
.b8 121
.b8 51
.b8 110
.b8 98
.b8 109
.b8 115
.b8 107
.b8 106
.b8 109
.b8 119
.b8 101
.b8 107
.b8 109
.b8 51
.b8 104
.b8 100
.b8 101
.b8 105
.b8 112
.b8 121
.b8 55
.b8 113
.b8 98
.b8 53
.b8 111
.b8 53
.b8 99
.b8 111
.b8 55
.b8 110
.b8 111
.b8 118
.b8 99
.b8 115
.b8 118
.b8 113
.b8 121
.b8 102
.b8 102
.b8 112
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 54
.b8 0
	}
	.section	.debug_macinfo	{	}
