; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %12 = srem i32 %10, 4, !dbg !15
  %13 = sdiv i32 %10, 64, !dbg !16
  %14 = sext i32 %10 to i64, !dbg !17
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !17
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %11) #3, !dbg !18
  %17 = sext i32 %12 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %11) #3, !dbg !20
  %20 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !21
  %21 = shufflevector <2 x i32> %20, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !21
  %22 = sdiv <2 x i32> %21, <i32 16, i32 4>, !dbg !21
  %23 = srem <2 x i32> %22, splat (i32 4), !dbg !22
  %24 = shl nsw <2 x i32> %23, <i32 2, i32 4>, !dbg !23
  %25 = extractelement <2 x i32> %24, i64 0, !dbg !24
  %26 = add nsw i32 %25, %13, !dbg !24
  %27 = extractelement <2 x i32> %24, i64 1, !dbg !25
  %28 = add nsw i32 %26, %27, !dbg !25
  %29 = sext i32 %28 to i64, !dbg !26
  %30 = getelementptr float, ptr addrspace(1) %2, i64 %29, !dbg !26
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %11) #3, !dbg !27
  %32 = bitcast i32 %31 to float, !dbg !27
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not.i = icmp eq i32 %33, 0, !dbg !28
  %34 = tail call float @llvm.nvvm.fabs.ftz.f(float %32) #3, !dbg !28
  %35 = tail call float @llvm.nvvm.fabs.f(float %32) #3, !dbg !28
  %.01.i = select i1 %.not.i, float %35, float %34, !dbg !28
  %36 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !28
  br i1 %36, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !28

__internal_fmad.exit1.i:                          ; preds = %5
  %37 = fmul float %.01.i, 0x4007154760000000, !dbg !28
  %38 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %37) #3, !dbg !28
  %39 = fadd float %38, 1.000000e+00, !dbg !28
  %40 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %39) #4, !dbg !28, !srcloc !29
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not6.i = icmp eq i32 %41, 0, !dbg !28
  %42 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %40, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %43 = tail call float @llvm.nvvm.fma.rn.f(float %40, float -2.000000e+00, float 1.000000e+00) #3, !dbg !28
  %.03.i = select i1 %.not6.i, float %43, float %42, !dbg !28
  %44 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !28
  %s.0.i = select i1 %44, float 1.000000e+00, float %.03.i, !dbg !28
  %45 = bitcast float %s.0.i to i32, !dbg !28
  %46 = and i32 %31, -2147483648, !dbg !28
  %47 = or i32 %46, %45, !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  br label %__nv_tanhf.exit, !dbg !28

__internal_fmad.exit3.i:                          ; preds = %5
  %49 = fmul float %32, %32, !dbg !28
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not1.i = icmp eq i32 %50, 0, !dbg !28
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %49, float 0xBFAAC795C0000000) #3, !dbg !28
  %52 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %49, float 0xBFAAC795C0000000) #3, !dbg !28
  %.06.i = select i1 %.not1.i, float %52, float %51, !dbg !28
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not2.i = icmp eq i32 %53, 0, !dbg !28
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %49, float 0x3FC10B2820000000) #3, !dbg !28
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %49, float 0x3FC10B2820000000) #3, !dbg !28
  %.05.i = select i1 %.not2.i, float %55, float %54, !dbg !28
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not3.i = icmp eq i32 %56, 0, !dbg !28
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %49, float 0xBFD5553DA0000000) #3, !dbg !28
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %49, float 0xBFD5553DA0000000) #3, !dbg !28
  %.0.i = select i1 %.not3.i, float %58, float %57, !dbg !28
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not4.i = icmp eq i32 %59, 0, !dbg !28
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %49, float 0.000000e+00) #3, !dbg !28
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %49, float 0.000000e+00) #3, !dbg !28
  %.04.i = select i1 %.not4.i, float %61, float %60, !dbg !28
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !28
  %.not5.i = icmp eq i32 %62, 0, !dbg !28
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %32, float %32) #3, !dbg !28
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %32, float %32) #3, !dbg !28
  %.02.i = select i1 %.not5.i, float %64, float %63, !dbg !28
  br label %__nv_tanhf.exit, !dbg !28

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %48, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !28
  %65 = bitcast i32 %19 to float, !dbg !20
  %66 = bitcast i32 %16 to float, !dbg !18
  %67 = fmul float %s.1.i, %65, !dbg !30
  %68 = fadd float %67, %66, !dbg !31
  %69 = getelementptr float, ptr addrspace(1) %3, i64 %14, !dbg !32
  %70 = bitcast float %68 to i32, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %70, ptr addrspace(1) %69, i1 %11) #3, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cy6bp3m5jody3nbmskjmwekm3hdeipy7qb5o5co7novcsvqyffpf.py", directory: "inductor_cache/y6")
!4 = !{ptr @triton_poi_fused_add_mul_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_4", linkageName: "triton_poi_fused_add_mul_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 30, scope: !7)
!18 = !DILocation(line: 29, column: 35, scope: !7)
!19 = !DILocation(line: 30, column: 30, scope: !7)
!20 = !DILocation(line: 30, column: 35, scope: !7)
!21 = !DILocation(line: 27, column: 21, scope: !7)
!22 = !DILocation(line: 27, column: 27, scope: !7)
!23 = !DILocation(line: 31, column: 37, scope: !7)
!24 = !DILocation(line: 31, column: 35, scope: !7)
!25 = !DILocation(line: 31, column: 42, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 50, scope: !7)
!28 = !DILocation(line: 32, column: 26, scope: !7)
!29 = !{i32 21046}
!30 = !DILocation(line: 33, column: 18, scope: !7)
!31 = !DILocation(line: 34, column: 18, scope: !7)
!32 = !DILocation(line: 35, column: 25, scope: !7)
!33 = !DILocation(line: 35, column: 36, scope: !7)
!34 = !DILocation(line: 35, column: 4, scope: !7)
