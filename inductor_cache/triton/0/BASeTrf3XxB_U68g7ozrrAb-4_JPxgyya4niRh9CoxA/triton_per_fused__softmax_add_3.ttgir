#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [2, 1], order = [1, 0]}>
#loc = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":19:0)
#loc1 = loc(unknown)
#loc32 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":44:39)
#loc42 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":49:26)
#loc50 = loc(callsite(#loc1 at #loc32))
#loc56 = loc(callsite(#loc1 at #loc42))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__softmax_add_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x32xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<1x32xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<1x32xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x32xi64, #blocked> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<343> : tensor<1x32xi64, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc4)
    %4 = arith.remsi %0, %c32_i32 : i32 loc(#loc5)
    %5 = arith.divsi %0, %c32_i32 : i32 loc(#loc6)
    %6 = arith.remsi %5, %c4_i32 : i32 loc(#loc7)
    %7 = arith.muli %0, %c32_i32 : i32 loc(#loc8)
    %8 = tt.splat %7 : i32 -> tensor<1x32xi32, #blocked> loc(#loc9)
    %9 = arith.addi %3, %8 : tensor<1x32xi32, #blocked> loc(#loc9)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc10)
    %11 = tt.addptr %10, %9 : tensor<1x32x!tt.ptr<f32>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc10)
    %12 = tt.splat %1 : i1 -> tensor<1x32xi1, #blocked> loc(#loc11)
    %13 = tt.load %11, %12, %cst : tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = arith.muli %4, %c32_i32 : i32 loc(#loc12)
    %15 = tt.splat %14 : i32 -> tensor<1x32xi32, #blocked> loc(#loc13)
    %16 = arith.addi %3, %15 : tensor<1x32xi32, #blocked> loc(#loc13)
    %17 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<1x32x!tt.ptr<i64>, #blocked> loc(#loc14)
    %18 = tt.addptr %17, %16 : tensor<1x32x!tt.ptr<i64>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc14)
    %19 = tt.load %18, %12, %cst_2 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<i64>, #blocked> loc(#loc15)
    %20 = arith.addi %19, %cst_3 : tensor<1x32xi64, #blocked> loc(#loc16)
    %21 = arith.cmpi slt, %19, %cst_2 : tensor<1x32xi64, #blocked> loc(#loc17)
    %22 = arith.select %21, %20, %19 : tensor<1x32xi1, #blocked>, tensor<1x32xi64, #blocked> loc(#loc18)
    %23 = arith.cmpi sge, %22, %cst_2 : tensor<1x32xi64, #blocked> loc(#loc19)
    %24 = arith.cmpi slt, %22, %cst_3 : tensor<1x32xi64, #blocked> loc(#loc20)
    %25 = arith.andi %23, %24 : tensor<1x32xi1, #blocked> loc(#loc21)
    %26 = arith.cmpi sge, %0, %c512_i32 : i32 loc(#loc48)
    %27 = tt.splat %26 : i1 -> tensor<1x32xi1, #blocked> loc(#loc23)
    %28 = arith.ori %25, %27 : tensor<1x32xi1, #blocked> loc(#loc23)
    tt.assert %28, "index out of bounds: 0 <= tmp5 < 343" : tensor<1x32xi1, #blocked> loc(#loc24)
    %29 = arith.muli %22, %cst_0 : tensor<1x32xi64, #blocked> loc(#loc25)
    %30 = arith.extsi %6 : i32 to i64 loc(#loc26)
    %31 = tt.splat %30 : i64 -> tensor<1x32xi64, #blocked> loc(#loc26)
    %32 = arith.addi %31, %29 : tensor<1x32xi64, #blocked> loc(#loc26)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc27)
    %34 = tt.addptr %33, %32 : tensor<1x32x!tt.ptr<f32>, #blocked>, tensor<1x32xi64, #blocked> loc(#loc27)
    %35 = tt.load %34, %12 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc28)
    %36 = arith.addf %13, %35 : tensor<1x32xf32, #blocked> loc(#loc29)
    %37 = arith.select %12, %36, %cst_1 : tensor<1x32xi1, #blocked>, tensor<1x32xf32, #blocked> loc(#loc30)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc32)), %arg6: f32 loc(callsite(#loc1 at #loc32))):
      %48 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc58)
      %49 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc59)
      %50 = arith.ori %48, %49 : i1 loc(#loc60)
      %51 = arith.select %50, %arg5, %arg6 : f32 loc(#loc61)
      tt.reduce.return %51 : f32 loc(#loc49)
    }) : (tensor<1x32xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc49)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc37)
    %40 = tt.broadcast %39 : tensor<1x1xf32, #blocked> -> tensor<1x32xf32, #blocked> loc(#loc38)
    %41 = arith.subf %36, %40 : tensor<1x32xf32, #blocked> loc(#loc38)
    %42 = math.exp %41 : tensor<1x32xf32, #blocked> loc(#loc39)
    %43 = arith.select %12, %42, %cst : tensor<1x32xi1, #blocked>, tensor<1x32xf32, #blocked> loc(#loc40)
    %44 = "tt.reduce"(%43) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc42)), %arg6: f32 loc(callsite(#loc1 at #loc42))):
      %48 = arith.addf %arg5, %arg6 : f32 loc(#loc62)
      tt.reduce.return %48 : f32 loc(#loc55)
    }) : (tensor<1x32xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc55)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc44)
    %46 = tt.broadcast %45 : tensor<1x1xf32, #blocked> -> tensor<1x32xf32, #blocked> loc(#loc45)
    %47 = arith.divf %42, %46 : tensor<1x32xf32, #blocked> loc(#loc45)
    tt.store %11, %47, %12 : tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc46)
    tt.return loc(#loc47)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":23:28)
#loc3 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":25:21)
#loc4 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":26:34)
#loc5 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":31:19)
#loc6 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":32:21)
#loc7 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":32:27)
#loc8 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":33:42)
#loc9 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":33:39)
#loc10 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":33:34)
#loc11 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":33:47)
#loc12 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":34:38)
#loc13 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":34:35)
#loc14 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":34:30)
#loc15 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":34:43)
#loc16 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":36:18)
#loc17 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":37:18)
#loc18 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":38:32)
#loc19 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":39:28)
#loc20 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":39:44)
#loc21 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":39:37)
#loc22 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":39:54)
#loc23 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":39:52)
#loc24 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":39:62)
#loc25 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":40:37)
#loc26 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":40:35)
#loc27 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":40:30)
#loc28 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":40:44)
#loc29 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":41:18)
#loc30 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":43:34)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc37 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":44:42)
#loc38 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":45:19)
#loc39 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":46:24)
#loc40 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":48:35)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":49:29)
#loc45 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":50:20)
#loc46 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":51:48)
#loc47 = loc("inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py":51:4)
#loc48 = loc(fused[#loc22, #loc3])
#loc49 = loc(callsite(#loc31 at #loc32))
#loc51 = loc(callsite(#loc33 at #loc31))
#loc52 = loc(callsite(#loc34 at #loc31))
#loc53 = loc(callsite(#loc35 at #loc31))
#loc54 = loc(callsite(#loc36 at #loc31))
#loc55 = loc(callsite(#loc41 at #loc42))
#loc57 = loc(callsite(#loc43 at #loc41))
#loc58 = loc(callsite(#loc51 at #loc32))
#loc59 = loc(callsite(#loc52 at #loc32))
#loc60 = loc(callsite(#loc53 at #loc32))
#loc61 = loc(callsite(#loc54 at #loc32))
#loc62 = loc(callsite(#loc57 at #loc42))
