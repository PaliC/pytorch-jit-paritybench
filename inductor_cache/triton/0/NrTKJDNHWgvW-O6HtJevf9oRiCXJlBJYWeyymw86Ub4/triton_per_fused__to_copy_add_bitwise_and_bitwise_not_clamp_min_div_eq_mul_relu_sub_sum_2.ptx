//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2 // -- Begin function triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2
.visible .entry triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2_param_2,
	.param .u32 triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<58>;
	.reg .f32 	%f<41>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2_param_0];
	ld.param.u64 	%rd6, [triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2_param_1];
$L__tmp0:
	.loc	1 26 34                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:26:34
	mov.u32 	%r21, %tid.x;
	and.b32  	%r22, %r21, 31;
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2_param_2];
	.loc	1 29 19                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:29:19
	shr.u32 	%r23, %r21, 2;
	bfe.u32 	%r24, %r21, 2, 4;
	.loc	1 30 19                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:30:19
	and.b32  	%r25, %r21, 15;
	.loc	1 31 19                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:31:19
	and.b32  	%r26, %r21, 3;
	.loc	1 33 30                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:33:30
	mul.wide.u32 	%rd8, %r24, 4;
	add.s64 	%rd1, %rd6, %rd8;
	mov.pred 	%p1, -1;
	.loc	1 33 35                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:33:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	.loc	1 34 30                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:34:30
	mul.wide.u32 	%rd9, %r25, 4;
	add.s64 	%rd2, %rd6, %rd9;
	.loc	1 34 35                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:34:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 35 38                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:35:38
	and.b32  	%r27, %r23, 12;
	.loc	1 35 36                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:35:36
	or.b32  	%r28, %r27, %r26;
	.loc	1 35 31                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:35:31
	mul.wide.u32 	%rd10, %r28, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 35 43                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:35:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 36 31                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:36:31
	add.s64 	%rd4, %rd7, %rd9;
	.loc	1 36 36                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:36:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 38 19                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:38:19
	setp.neu.f32 	%p12, %f1, 0fBF800000;
	.loc	1 41 19                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:41:19
	setp.neu.f32 	%p13, %f2, 0fBF800000;
	.loc	1 45 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:45:20
	or.pred  	%p14, %p12, %p13;
	.loc	1 46 21                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:46:21
	selp.u32 	%r29, 1, 0, %p14;
	cvt.rn.f32.u32 	%f5, %r29;
	.loc	1 47 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:47:20
	setp.eq.f32 	%p15, %f2, %f3;
	.loc	1 48 21                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:48:21
	selp.f32 	%f6, 0f3F800000, 0f00000000, %p15;
	.loc	1 52 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:52:20
	fma.rn.f32 	%f7, %f6, 0f40000000, 0fBF800000;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p16, %f4, 0f00000000;
	selp.f32 	%f8, 0f00000000, %f4, %p16;
$L__tmp2:
	.loc	1 55 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:55:20
	add.f32 	%f9, %f8, 0fBF800000;
	.loc	1 58 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:58:20
	fma.rn.f32 	%f10, %f7, %f9, 0f3E4CCCCD;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p17, %f10, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f11, 0f00000000, %f10, %p17;
$L__tmp4:
	.loc	1 61 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:61:20
	mul.f32 	%f12, %f11, %f5;
$L__tmp5:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r30, %f12;
	shfl.sync.bfly.b32	%r31, %r30, 16, 31, -1;
	mov.b32 	%f13, %r31;
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f14, %f11, %f5, %f13;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f14;
	shfl.sync.bfly.b32	%r33, %r32, 8, 31, -1;
	mov.b32 	%f15, %r33;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r34, %f16;
	shfl.sync.bfly.b32	%r35, %r34, 4, 31, -1;
	mov.b32 	%f17, %r35;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f18;
	shfl.sync.bfly.b32	%r37, %r36, 2, 31, -1;
	mov.b32 	%f19, %r37;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r38, %f20;
	shfl.sync.bfly.b32	%r39, %r38, 1, 31, -1;
	mov.b32 	%f21, %r39;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p5, %r22, 0;
	shr.u32 	%r40, %r21, 3;
	and.b32  	%r41, %r40, 4;
	mov.u32 	%r42, global_smem;
	add.s32 	%r5, %r42, %r41;
	mov.b32 	%r6, %f22;
	// begin inline asm
	@%p5 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r21, 2;
	shl.b32 	%r43, %r21, 2;
	add.s32 	%r8, %r42, %r43;
	// begin inline asm
	@%p6 ld.shared.b32 %r7, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r7;
	shfl.sync.bfly.b32	%r44, %r7, 1, 31, -1;
	mov.b32 	%f24, %r44;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r45, %r21, 1;
	setp.eq.b32 	%p18, %r45, 1;
	not.pred 	%p19, %p18;
	and.pred  	%p7, %p6, %p19;
	mov.b32 	%r10, %f25;
	// begin inline asm
	@%p7 st.shared.b32 [ %r8 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
$L__tmp6:
	.loc	1 68 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:68:20
	ld.shared.u32 	%r18, [global_smem];
$L__tmp7:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r46, %f5;
	shfl.sync.bfly.b32	%r47, %r46, 16, 31, -1;
	mov.b32 	%f26, %r47;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f27, %f5, %f26;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f27;
	shfl.sync.bfly.b32	%r49, %r48, 8, 31, -1;
	mov.b32 	%f28, %r49;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f29;
	shfl.sync.bfly.b32	%r51, %r50, 4, 31, -1;
	mov.b32 	%f30, %r51;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f31;
	shfl.sync.bfly.b32	%r53, %r52, 2, 31, -1;
	mov.b32 	%f32, %r53;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f33;
	shfl.sync.bfly.b32	%r55, %r54, 1, 31, -1;
	mov.b32 	%f34, %r55;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r12, %f35;
	// begin inline asm
	@%p5 st.shared.b32 [ %r5 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r13, [ %r8 + 0 ];
	// end inline asm
	mov.b32 	%f36, %r13;
	shfl.sync.bfly.b32	%r56, %r13, 1, 31, -1;
	mov.b32 	%f37, %r56;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f38;
	// begin inline asm
	@%p7 st.shared.b32 [ %r8 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f39, [global_smem];
$L__tmp8:
	.loc	1 67 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:67:20
	add.f32 	%f40, %f39, 0f322BCC77;
	.loc	1 68 20                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:68:20
	mov.b32 	%r19, %f40;
	// begin inline asm
	div.full.f32 %r20, %r18, %r19;
	// end inline asm
	.loc	1 69 4                          // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:69:4
	bar.sync 	0;
	.loc	1 70 71                         // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:70:71
	and.b32  	%r57, %r21, 63;
	setp.eq.s32 	%p11, %r57, 0;
	// begin inline asm
	@%p11 st.global.b32 [ %rd5 + 0 ], { %r20 };
	// end inline asm
	.loc	1 70 4                          // cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py:70:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 306                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x12b DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 100
.b8 110
.b8 106
.b8 53
.b8 112
.b8 99
.b8 114
.b8 113
.b8 117
.b8 120
.b8 104
.b8 111
.b8 52
.b8 101
.b8 50
.b8 115
.b8 110
.b8 116
.b8 105
.b8 121
.b8 108
.b8 101
.b8 52
.b8 99
.b8 109
.b8 109
.b8 102
.b8 108
.b8 115
.b8 120
.b8 98
.b8 110
.b8 104
.b8 116
.b8 55
.b8 122
.b8 122
.b8 99
.b8 112
.b8 116
.b8 102
.b8 97
.b8 53
.b8 122
.b8 53
.b8 121
.b8 121
.b8 50
.b8 104
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 98
.b8 105
.b8 116
.b8 119
.b8 105
.b8 115
.b8 101
.b8 95
.b8 97
.b8 110
.b8 100
.b8 95
.b8 98
.b8 105
.b8 116
.b8 119
.b8 105
.b8 115
.b8 101
.b8 95
.b8 110
.b8 111
.b8 116
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 109
.b8 105
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 101
.b8 113
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xbf:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xec:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x104:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x11c:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
