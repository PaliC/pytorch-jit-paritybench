#loc = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":19:0)
#loc1 = loc(unknown)
#loc42 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":63:26)
#loc45 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":65:26)
#loc60 = loc(callsite(#loc1 at #loc42))
#loc63 = loc(callsite(#loc1 at #loc45))
module {
  tt.func public @triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999993E-9> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e-01> : tensor<1x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<2.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<-1.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.divsi %1, %cst_8 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.remsi %1, %cst_7 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.remsi %1, %cst_8 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.divsi %1, %cst_7 : tensor<1x64xi32> loc(#loc7)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %7 = tt.addptr %6, %2 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc8)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %6, %3 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc10)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %11 = arith.muli %5, %cst_8 : tensor<1x64xi32> loc(#loc12)
    %12 = arith.addi %4, %11 : tensor<1x64xi32> loc(#loc13)
    %13 = tt.addptr %6, %12 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc14)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %15 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc16)
    %16 = tt.addptr %15, %3 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.cmpf oeq, %8, %cst_6 : tensor<1x64xf32> loc(#loc18)
    %19 = arith.extui %18 : tensor<1x64xi1> to tensor<1x64xi64> loc(#loc19)
    %20 = arith.cmpi ne, %19, %cst_0 : tensor<1x64xi64> loc(#loc20)
    %21 = arith.cmpf oeq, %10, %cst_6 : tensor<1x64xf32> loc(#loc21)
    %22 = arith.extui %21 : tensor<1x64xi1> to tensor<1x64xi64> loc(#loc22)
    %23 = arith.cmpi ne, %22, %cst_0 : tensor<1x64xi64> loc(#loc23)
    %24 = arith.andi %20, %23 : tensor<1x64xi1> loc(#loc24)
    %25 = arith.extui %24 : tensor<1x64xi1> to tensor<1x64xi32> loc(#loc25)
    %26 = arith.cmpi eq, %25, %cst_5 : tensor<1x64xi32> loc(#loc25)
    %27 = arith.uitofp %26 : tensor<1x64xi1> to tensor<1x64xf32> loc(#loc26)
    %28 = arith.cmpf oeq, %10, %14 : tensor<1x64xf32> loc(#loc27)
    %29 = arith.uitofp %28 : tensor<1x64xi1> to tensor<1x64xf32> loc(#loc28)
    %30 = arith.mulf %29, %cst_4 : tensor<1x64xf32> loc(#loc29)
    %31 = arith.subf %30, %cst_3 : tensor<1x64xf32> loc(#loc30)
    %32 = arith.cmpf ogt, %17, %cst : tensor<1x64xf32> loc(#loc53)
    %33 = arith.cmpf une, %17, %17 : tensor<1x64xf32> loc(#loc54)
    %34 = arith.ori %32, %33 : tensor<1x64xi1> loc(#loc55)
    %35 = arith.select %34, %17, %cst : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc56)
    %36 = arith.subf %35, %cst_3 : tensor<1x64xf32> loc(#loc36)
    %37 = arith.mulf %31, %36 : tensor<1x64xf32> loc(#loc37)
    %38 = arith.addf %37, %cst_2 : tensor<1x64xf32> loc(#loc38)
    %39 = arith.cmpf ogt, %cst, %38 : tensor<1x64xf32> loc(#loc57)
    %40 = arith.select %39, %cst, %38 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc58)
    %41 = arith.mulf %27, %40 : tensor<1x64xf32> loc(#loc40)
    %42 = "tt.reduce"(%41) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc42)), %arg5: f32 loc(callsite(#loc1 at #loc42))):
      %50 = arith.addf %arg4, %arg5 : f32 loc(#loc64)
      tt.reduce.return %50 : f32 loc(#loc59)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc59)
    %43 = tt.expand_dims %42 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc44)
    %44 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc45)), %arg5: f32 loc(callsite(#loc1 at #loc45))):
      %50 = arith.addf %arg4, %arg5 : f32 loc(#loc65)
      tt.reduce.return %50 : f32 loc(#loc62)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc62)
    %45 = tt.expand_dims %44 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc46)
    %46 = arith.addf %45, %cst_1 : tensor<1x1xf32> loc(#loc47)
    %47 = arith.divf %43, %46 : tensor<1x1xf32> loc(#loc48)
    gpu.barrier loc(#loc49)
    %48 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc50)
    %49 = tt.splat %48 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc50)
    tt.store %49, %47 : tensor<1x1x!tt.ptr<f32>> loc(#loc51)
    tt.return loc(#loc52)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":26:26)
#loc3 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":26:34)
#loc4 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":29:19)
#loc5 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":30:19)
#loc6 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":31:19)
#loc7 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":32:19)
#loc8 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":33:30)
#loc9 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":33:35)
#loc10 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":34:30)
#loc11 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":34:35)
#loc12 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":35:38)
#loc13 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":35:36)
#loc14 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":35:31)
#loc15 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":35:43)
#loc16 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":36:31)
#loc17 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":36:36)
#loc18 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":38:19)
#loc19 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":39:19)
#loc20 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":40:20)
#loc21 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":41:19)
#loc22 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":42:19)
#loc23 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":43:20)
#loc24 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":44:18)
#loc25 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":45:20)
#loc26 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":46:21)
#loc27 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":47:20)
#loc28 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":48:21)
#loc29 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":50:20)
#loc30 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":52:20)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc32 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":54:42)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc36 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":55:20)
#loc37 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":56:20)
#loc38 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":58:20)
#loc39 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":60:42)
#loc40 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":61:20)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc44 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":63:29)
#loc46 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":65:29)
#loc47 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":67:20)
#loc48 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":68:20)
#loc49 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":69:4)
#loc50 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":70:28)
#loc51 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":70:71)
#loc52 = loc("inductor_cache/fd/cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py":70:4)
#loc53 = loc(callsite(#loc31 at #loc32))
#loc54 = loc(callsite(#loc33 at #loc32))
#loc55 = loc(callsite(#loc34 at #loc32))
#loc56 = loc(callsite(#loc35 at #loc32))
#loc57 = loc(callsite(#loc31 at #loc39))
#loc58 = loc(callsite(#loc35 at #loc39))
#loc59 = loc(callsite(#loc41 at #loc42))
#loc61 = loc(callsite(#loc43 at #loc41))
#loc62 = loc(callsite(#loc41 at #loc45))
#loc64 = loc(callsite(#loc61 at #loc42))
#loc65 = loc(callsite(#loc61 at #loc45))
