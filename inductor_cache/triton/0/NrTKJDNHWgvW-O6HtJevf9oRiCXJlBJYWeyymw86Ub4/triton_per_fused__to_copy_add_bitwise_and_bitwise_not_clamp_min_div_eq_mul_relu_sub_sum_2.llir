; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 31, !dbg !10
  %7 = lshr i32 %5, 5, !dbg !10
  %8 = lshr i32 %5, 2, !dbg !11
  %9 = and i32 %8, 15, !dbg !11
  %10 = and i32 %5, 15, !dbg !12
  %11 = and i32 %5, 3, !dbg !13
  %12 = zext nneg i32 %9 to i64, !dbg !14
  %13 = getelementptr float, ptr addrspace(1) %1, i64 %12, !dbg !14
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 true) #3, !dbg !15
  %15 = bitcast i32 %14 to float, !dbg !15
  %16 = zext nneg i32 %10 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #3, !dbg !17
  %19 = bitcast i32 %18 to float, !dbg !17
  %20 = and i32 %8, 12, !dbg !18
  %21 = or disjoint i32 %20, %11, !dbg !19
  %22 = zext nneg i32 %21 to i64, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #3, !dbg !21
  %25 = bitcast i32 %24 to float, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %16, !dbg !22
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #3, !dbg !23
  %28 = bitcast i32 %27 to float, !dbg !23
  %29 = fcmp une float %15, -1.000000e+00, !dbg !24
  %30 = fcmp une float %19, -1.000000e+00, !dbg !25
  %.not2 = or i1 %29, %30, !dbg !26
  %31 = uitofp i1 %.not2 to float, !dbg !27
  %32 = fcmp oeq float %19, %25, !dbg !28
  %33 = uitofp i1 %32 to float, !dbg !29
  %34 = fmul float %33, 2.000000e+00, !dbg !30
  %35 = fadd float %34, -1.000000e+00, !dbg !31
  %.inv = fcmp ole float %28, 0.000000e+00, !dbg !32
  %36 = select i1 %.inv, float 0.000000e+00, float %28, !dbg !32
  %37 = fadd float %36, -1.000000e+00, !dbg !36
  %38 = fmul float %35, %37, !dbg !37
  %39 = fadd float %38, 0x3FC99999A0000000, !dbg !38
  %40 = fcmp olt float %39, 0.000000e+00, !dbg !39
  %41 = select i1 %40, float 0.000000e+00, float %39, !dbg !41
  %42 = fmul float %41, %31, !dbg !42
  %43 = bitcast float %42 to i32, !dbg !43
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %43, i32 16, i32 31), !dbg !43
  %45 = bitcast i32 %44 to float, !dbg !43
  %46 = fadd float %42, %45, !dbg !47
  %47 = bitcast float %46 to i32, !dbg !43
  %48 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %47, i32 8, i32 31), !dbg !43
  %49 = bitcast i32 %48 to float, !dbg !43
  %50 = fadd float %46, %49, !dbg !47
  %51 = bitcast float %50 to i32, !dbg !43
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %51, i32 4, i32 31), !dbg !43
  %53 = bitcast i32 %52 to float, !dbg !43
  %54 = fadd float %50, %53, !dbg !47
  %55 = bitcast float %54 to i32, !dbg !43
  %56 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %55, i32 2, i32 31), !dbg !43
  %57 = bitcast i32 %56 to float, !dbg !43
  %58 = fadd float %54, %57, !dbg !47
  %59 = bitcast float %58 to i32, !dbg !43
  %60 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %59, i32 1, i32 31), !dbg !43
  %61 = bitcast i32 %60 to float, !dbg !43
  %62 = fadd float %58, %61, !dbg !47
  %63 = icmp eq i32 %6, 0, !dbg !43
  %64 = and i32 %7, 1, !dbg !43
  %65 = zext nneg i32 %64 to i64, !dbg !43
  %66 = getelementptr float, ptr addrspace(3) @global_smem, i64 %65, !dbg !43
  %67 = bitcast float %62 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %66, <1 x i32> %67, i1 %63) #3, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %68 = icmp slt i32 %5, 2, !dbg !43
  %69 = sext i32 %5 to i64, !dbg !43
  %70 = getelementptr float, ptr addrspace(3) @global_smem, i64 %69, !dbg !43
  %71 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %70, i1 %68) #3, !dbg !43
  %72 = bitcast i32 %71 to float, !dbg !43
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 1, i32 31), !dbg !43
  %74 = bitcast i32 %73 to float, !dbg !43
  %75 = fadd float %72, %74, !dbg !47
  %76 = and i32 %5, 1, !dbg !43
  %77 = icmp eq i32 %76, 0, !dbg !43
  %78 = and i1 %68, %77, !dbg !43
  %79 = bitcast float %75 to <1 x i32>, !dbg !43
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %70, <1 x i32> %79, i1 %78) #3, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %80 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %81 = bitcast float %31 to i32, !dbg !49
  %82 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %81, i32 16, i32 31), !dbg !49
  %83 = bitcast i32 %82 to float, !dbg !49
  %84 = fadd float %31, %83, !dbg !51
  %85 = bitcast float %84 to i32, !dbg !49
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 8, i32 31), !dbg !49
  %87 = bitcast i32 %86 to float, !dbg !49
  %88 = fadd float %84, %87, !dbg !51
  %89 = bitcast float %88 to i32, !dbg !49
  %90 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %89, i32 4, i32 31), !dbg !49
  %91 = bitcast i32 %90 to float, !dbg !49
  %92 = fadd float %88, %91, !dbg !51
  %93 = bitcast float %92 to i32, !dbg !49
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 2, i32 31), !dbg !49
  %95 = bitcast i32 %94 to float, !dbg !49
  %96 = fadd float %92, %95, !dbg !51
  %97 = bitcast float %96 to i32, !dbg !49
  %98 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %97, i32 1, i32 31), !dbg !49
  %99 = bitcast i32 %98 to float, !dbg !49
  %100 = fadd float %96, %99, !dbg !51
  %101 = bitcast float %100 to <1 x i32>, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %66, <1 x i32> %101, i1 %63) #3, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %102 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %70, i1 %68) #3, !dbg !49
  %103 = bitcast i32 %102 to float, !dbg !49
  %104 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %102, i32 1, i32 31), !dbg !49
  %105 = bitcast i32 %104 to float, !dbg !49
  %106 = fadd float %103, %105, !dbg !51
  %107 = bitcast float %106 to <1 x i32>, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %70, <1 x i32> %107, i1 %78) #3, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %108 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !49
  %109 = fadd float %108, 0x3E45798EE0000000, !dbg !52
  %110 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %80, float %109) #3, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %urem = and i32 %5, 63, !dbg !55
  %111 = icmp eq i32 %urem, 0, !dbg !55
  %112 = bitcast float %110 to i32, !dbg !55
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %112, ptr addrspace(1) %0, i1 %111) #3, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfdnj5pcrquxho4e2sntiyle4cmmflsxbnht7zzcptfa5z5yy2hi.py", directory: "inductor_cache/fd")
!4 = !{ptr @triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2", linkageName: "triton_per_fused__to_copy_add_bitwise_and_bitwise_not_clamp_min_div_eq_mul_relu_sub_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 26, column: 34, scope: !7)
!11 = !DILocation(line: 29, column: 19, scope: !7)
!12 = !DILocation(line: 30, column: 19, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 33, column: 30, scope: !7)
!15 = !DILocation(line: 33, column: 35, scope: !7)
!16 = !DILocation(line: 34, column: 30, scope: !7)
!17 = !DILocation(line: 34, column: 35, scope: !7)
!18 = !DILocation(line: 35, column: 38, scope: !7)
!19 = !DILocation(line: 35, column: 36, scope: !7)
!20 = !DILocation(line: 35, column: 31, scope: !7)
!21 = !DILocation(line: 35, column: 43, scope: !7)
!22 = !DILocation(line: 36, column: 31, scope: !7)
!23 = !DILocation(line: 36, column: 36, scope: !7)
!24 = !DILocation(line: 38, column: 19, scope: !7)
!25 = !DILocation(line: 41, column: 19, scope: !7)
!26 = !DILocation(line: 45, column: 20, scope: !7)
!27 = !DILocation(line: 46, column: 21, scope: !7)
!28 = !DILocation(line: 47, column: 20, scope: !7)
!29 = !DILocation(line: 48, column: 21, scope: !7)
!30 = !DILocation(line: 50, column: 20, scope: !7)
!31 = !DILocation(line: 52, column: 20, scope: !7)
!32 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 54, column: 42, scope: !7)
!36 = !DILocation(line: 55, column: 20, scope: !7)
!37 = !DILocation(line: 56, column: 20, scope: !7)
!38 = !DILocation(line: 58, column: 20, scope: !7)
!39 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !40)
!40 = !DILocation(line: 60, column: 42, scope: !7)
!41 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !40)
!42 = !DILocation(line: 61, column: 20, scope: !7)
!43 = !DILocation(line: 267, column: 36, scope: !44, inlinedAt: !46)
!44 = distinct !DILexicalBlockFile(scope: !7, file: !45, discriminator: 0)
!45 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!46 = !DILocation(line: 63, column: 26, scope: !7)
!47 = !DILocation(line: 256, column: 15, scope: !48, inlinedAt: !46)
!48 = distinct !DILexicalBlockFile(scope: !44, file: !45, discriminator: 0)
!49 = !DILocation(line: 267, column: 36, scope: !44, inlinedAt: !50)
!50 = !DILocation(line: 65, column: 26, scope: !7)
!51 = !DILocation(line: 256, column: 15, scope: !48, inlinedAt: !50)
!52 = !DILocation(line: 67, column: 20, scope: !7)
!53 = !DILocation(line: 68, column: 20, scope: !7)
!54 = !DILocation(line: 69, column: 4, scope: !7)
!55 = !DILocation(line: 70, column: 71, scope: !7)
!56 = !DILocation(line: 70, column: 4, scope: !7)
