//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b16 	%rs<7>;
	.reg .b32 	%r<50>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<34>;
	.loc	1 19 0                          // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_0];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:21:33
	shl.b32 	%r30, %r1, 9;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_2];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_3];
	.loc	1 22 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:22:36
	mov.u32 	%r31, %tid.x;
	shl.b32 	%r32, %r31, 1;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_4];
	and.b32  	%r33, %r32, 510;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_5];
	.loc	1 22 23                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:22:23
	or.b32  	%r34, %r30, %r33;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_6];
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_7];
	.loc	1 25 21                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:25:21
	shr.s32 	%r36, %r34, 31;
	shr.u32 	%r37, %r36, 14;
	add.s32 	%r38, %r34, %r37;
	shr.s32 	%r39, %r38, 18;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_4_param_8];
	.loc	1 25 31                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:25:31
	cvt.u16.u32 	%rs1, %r39;
	shr.s16 	%rs2, %rs1, 15;
	shr.u16 	%rs3, %rs2, 11;
	add.s16 	%rs4, %rs1, %rs3;
	and.b16  	%rs5, %rs4, -32;
	sub.s16 	%rs6, %rs1, %rs5;
	cvt.s32.s16 	%r40, %rs6;
	.loc	1 26 19                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:26:19
	and.b32  	%r41, %r38, -262144;
	sub.s32 	%r42, %r34, %r41;
	.loc	1 27 19                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:27:19
	bfe.s32 	%r43, %r1, 22, 1;
	shr.u32 	%r44, %r43, 9;
	add.s32 	%r45, %r34, %r44;
	shr.s32 	%r46, %r45, 23;
	.loc	1 28 34                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:28:34
	mul.wide.s32 	%rd25, %r34, 4;
	add.s64 	%rd1, %rd16, %rd25;
	mov.pred 	%p1, -1;
	.loc	1 28 39                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:28:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 29 30                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:29:30
	mul.wide.s32 	%rd26, %r40, 4;
	add.s64 	%rd2, %rd17, %rd26;
	.loc	1 29 35                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:29:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 31                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:30:31
	add.s64 	%rd4, %rd19, %rd26;
	.loc	1 30 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:30:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 31 31                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:31:31
	add.s64 	%rd6, %rd20, %rd26;
	.loc	1 31 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:31:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r9;
	.loc	1 32 31                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:32:31
	add.s64 	%rd8, %rd21, %rd26;
	.loc	1 32 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:32:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 33 31                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:33:31
	add.s64 	%rd10, %rd22, %rd26;
	.loc	1 33 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:33:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 46 20                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:46:20
	add.s32 	%r47, %r40, -8;
	setp.lt.u32 	%p12, %r47, 16;
	.loc	1 47 44                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:47:44
	shl.b32 	%r48, %r40, 18;
	.loc	1 47 65                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:47:65
	shl.b32 	%r49, %r46, 22;
	.loc	1 47 31                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:47:31
	cvt.s64.s32 	%rd27, %r48;
	cvt.s64.s32 	%rd28, %r49;
	cvt.s64.s32 	%rd29, %r42;
	add.s64 	%rd30, %rd29, %rd28;
	add.s64 	%rd31, %rd30, %rd27;
	shl.b64 	%rd32, %rd31, 2;
	add.s64 	%rd33, %rd18, %rd32;
	add.s64 	%rd12, %rd33, -8388608;
	mov.b32 	%r16, 0;
	.loc	1 47 70                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:47:70
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p12 ld.global.v2.b32 { %r14, %r15 }, [ %rd12 + 0 ];
	@!%p12 mov.u32 %r14, %r16;
	@!%p12 mov.u32 %r15, %r16;
	// end inline asm
	.loc	1 59 20                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:59:20
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 60 27                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:60:27
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 28 39                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:28:39
	mov.b32 	%f7, %r3;
	.loc	1 29 35                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:29:35
	mov.b32 	%f8, %r5;
	.loc	1 34 18                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:34:18
	add.f32 	%f9, %f7, %f8;
	.loc	1 39 18                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:39:18
	setp.lt.s16 	%p18, %rs6, 8;
	.loc	1 47 70                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:47:70
	mov.b32 	%f10, %r15;
	.loc	1 54 35                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:54:35
	selp.f32 	%f11, %f10, 0f00000000, %p12;
	.loc	1 55 34                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:55:34
	selp.f32 	%f12, 0f00000000, %f11, %p18;
	.loc	1 56 19                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:56:19
	add.f32 	%f13, %f9, %f12;
	.loc	1 30 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:30:36
	mov.b32 	%f14, %r7;
	.loc	1 57 20                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:57:20
	sub.f32 	%f15, %f13, %f14;
	.loc	1 28 39                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:28:39
	mov.b32 	%f16, %r2;
	.loc	1 29 35                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:29:35
	mov.b32 	%f17, %r4;
	.loc	1 34 18                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:34:18
	add.f32 	%f18, %f16, %f17;
	.loc	1 47 70                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:47:70
	mov.b32 	%f19, %r14;
	.loc	1 54 35                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:54:35
	selp.f32 	%f20, %f19, 0f00000000, %p12;
	.loc	1 55 34                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:55:34
	selp.f32 	%f21, 0f00000000, %f20, %p18;
	.loc	1 56 19                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:56:19
	add.f32 	%f22, %f18, %f21;
	.loc	1 30 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:30:36
	mov.b32 	%f23, %r6;
	.loc	1 57 20                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:57:20
	sub.f32 	%f24, %f22, %f23;
	.loc	1 33 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:33:36
	mov.b32 	%f25, %r13;
	mov.b32 	%f26, %r12;
	.loc	1 32 36                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:32:36
	mov.b32 	%f27, %r11;
	mov.b32 	%f28, %r10;
	.loc	1 62 20                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:62:20
	mov.b32 	%r20, %f5;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f29, %r18;
	mov.b32 	%r23, %f6;
	// begin inline asm
	div.full.f32 %r21, %r19, %r23;
	// end inline asm
	mov.b32 	%f30, %r21;
	.loc	1 65 20                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:65:20
	mul.f32 	%f31, %f24, %f29;
	mul.f32 	%f32, %f15, %f30;
	.loc	1 67 20                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:67:20
	fma.rn.f32 	%f33, %f31, %f28, %f26;
	fma.rn.f32 	%f34, %f32, %f27, %f25;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p19, %f33, 0f00000000;
	setp.lt.f32 	%p20, %f34, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f35, 0f00000000, %f33, %p19;
	selp.f32 	%f36, 0f00000000, %f34, %p20;
$L__tmp2:
	.loc	1 70 39                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:70:39
	mov.b32 	%r24, %f18;
	mov.b32 	%r25, %f9;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r24, %r25 };
	// end inline asm
	.loc	1 71 25                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:71:25
	add.s64 	%rd14, %rd23, %rd25;
	.loc	1 71 37                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:71:37
	mov.b32 	%r26, %f21;
	mov.b32 	%r27, %f12;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd14 + 0 ], { %r26, %r27 };
	// end inline asm
	.loc	1 72 25                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:72:25
	add.s64 	%rd15, %rd24, %rd25;
	.loc	1 72 37                         // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:72:37
	mov.b32 	%r28, %f35;
	mov.b32 	%r29, %f36;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd15 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 72 4                          // ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py:72:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e4/ce4tkmmks4az3eyc4wng36asltlp5tynhyor3awq4uxuhf256jeo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 225                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xda DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 52
.b8 116
.b8 107
.b8 109
.b8 109
.b8 107
.b8 115
.b8 52
.b8 97
.b8 122
.b8 51
.b8 101
.b8 121
.b8 99
.b8 52
.b8 119
.b8 110
.b8 103
.b8 51
.b8 54
.b8 97
.b8 115
.b8 108
.b8 116
.b8 108
.b8 112
.b8 53
.b8 116
.b8 121
.b8 110
.b8 104
.b8 121
.b8 111
.b8 114
.b8 51
.b8 97
.b8 119
.b8 113
.b8 52
.b8 117
.b8 120
.b8 117
.b8 104
.b8 102
.b8 50
.b8 53
.b8 54
.b8 106
.b8 101
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x53 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb6:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 69                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
