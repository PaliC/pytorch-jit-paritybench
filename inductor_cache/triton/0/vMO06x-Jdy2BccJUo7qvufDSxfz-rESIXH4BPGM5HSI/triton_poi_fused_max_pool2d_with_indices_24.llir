; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_24(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 18432, !dbg !14
  %11 = srem i32 %9, 512, !dbg !15
  %12 = sdiv i32 %9, 4608, !dbg !16
  %13 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !17
  %14 = shufflevector <2 x i32> %13, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !17
  %15 = sdiv <2 x i32> %14, <i32 512, i32 1536>, !dbg !17
  %16 = srem <2 x i32> %15, splat (i32 3), !dbg !18
  %17 = mul nsw <2 x i32> %16, <i32 1024, i32 7168>, !dbg !19
  %18 = mul i32 %12, 25088, !dbg !20
  %19 = add i32 %18, %11, !dbg !21
  %20 = extractelement <2 x i32> %17, i64 0, !dbg !22
  %21 = add i32 %19, %20, !dbg !23
  %22 = extractelement <2 x i32> %17, i64 1, !dbg !24
  %23 = add i32 %21, %22, !dbg !25
  %24 = sext i32 %23 to i64, !dbg !26
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !26
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %10) #1, !dbg !27
  %27 = bitcast i32 %26 to float, !dbg !27
  %28 = add i32 %19, 512, !dbg !28
  %29 = add i32 %28, %20, !dbg !29
  %30 = add i32 %29, %22, !dbg !30
  %31 = sext i32 %30 to i64, !dbg !31
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !31
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %10) #1, !dbg !32
  %34 = bitcast i32 %33 to float, !dbg !32
  %35 = add i32 %19, 1024, !dbg !33
  %36 = add i32 %35, %20, !dbg !34
  %37 = add i32 %36, %22, !dbg !35
  %38 = sext i32 %37 to i64, !dbg !36
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !36
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %10) #1, !dbg !37
  %41 = bitcast i32 %40 to float, !dbg !37
  %42 = add i32 %19, 3584, !dbg !38
  %43 = add i32 %42, %20, !dbg !39
  %44 = add i32 %43, %22, !dbg !40
  %45 = sext i32 %44 to i64, !dbg !41
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !41
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %10) #1, !dbg !42
  %48 = bitcast i32 %47 to float, !dbg !42
  %49 = add i32 %19, 4096, !dbg !43
  %50 = add i32 %49, %20, !dbg !44
  %51 = add i32 %50, %22, !dbg !45
  %52 = sext i32 %51 to i64, !dbg !46
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !46
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %10) #1, !dbg !47
  %55 = bitcast i32 %54 to float, !dbg !47
  %56 = add i32 %19, 4608, !dbg !48
  %57 = add i32 %56, %20, !dbg !49
  %58 = add i32 %57, %22, !dbg !50
  %59 = sext i32 %58 to i64, !dbg !51
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !51
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %10) #1, !dbg !52
  %62 = bitcast i32 %61 to float, !dbg !52
  %63 = add i32 %19, 7168, !dbg !53
  %64 = add i32 %63, %20, !dbg !54
  %65 = add i32 %64, %22, !dbg !55
  %66 = sext i32 %65 to i64, !dbg !56
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !56
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %10) #1, !dbg !57
  %69 = bitcast i32 %68 to float, !dbg !57
  %70 = add i32 %19, 7680, !dbg !58
  %71 = add i32 %70, %20, !dbg !59
  %72 = add i32 %71, %22, !dbg !60
  %73 = sext i32 %72 to i64, !dbg !61
  %74 = getelementptr float, ptr addrspace(1) %0, i64 %73, !dbg !61
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %74, i1 %10) #1, !dbg !62
  %76 = bitcast i32 %75 to float, !dbg !62
  %77 = add i32 %19, 8192, !dbg !63
  %78 = add i32 %77, %20, !dbg !22
  %79 = add i32 %78, %22, !dbg !24
  %80 = sext i32 %79 to i64, !dbg !64
  %81 = getelementptr float, ptr addrspace(1) %0, i64 %80, !dbg !64
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 %10) #1, !dbg !65
  %83 = bitcast i32 %82 to float, !dbg !65
  %84 = fcmp ogt float %34, %27, !dbg !66
  %85 = fcmp uno float %34, 0.000000e+00, !dbg !70
  %86 = or i1 %84, %85, !dbg !71
  %87 = select i1 %86, float %34, float %27, !dbg !72
  %88 = fcmp olt float %87, %41, !dbg !73
  %89 = fcmp uno float %41, 0.000000e+00, !dbg !75
  %90 = or i1 %89, %88, !dbg !76
  %91 = select i1 %90, float %41, float %87, !dbg !77
  %92 = fcmp olt float %91, %48, !dbg !78
  %93 = fcmp uno float %48, 0.000000e+00, !dbg !80
  %94 = or i1 %93, %92, !dbg !81
  %95 = select i1 %94, float %48, float %91, !dbg !82
  %96 = fcmp olt float %95, %55, !dbg !83
  %97 = fcmp uno float %55, 0.000000e+00, !dbg !85
  %98 = or i1 %97, %96, !dbg !86
  %99 = select i1 %98, float %55, float %95, !dbg !87
  %100 = fcmp olt float %99, %62, !dbg !88
  %101 = fcmp uno float %62, 0.000000e+00, !dbg !90
  %102 = or i1 %101, %100, !dbg !91
  %103 = select i1 %102, float %62, float %99, !dbg !92
  %104 = fcmp olt float %103, %69, !dbg !93
  %105 = fcmp uno float %69, 0.000000e+00, !dbg !95
  %106 = or i1 %105, %104, !dbg !96
  %107 = select i1 %106, float %69, float %103, !dbg !97
  %108 = fcmp olt float %107, %76, !dbg !98
  %109 = fcmp uno float %76, 0.000000e+00, !dbg !100
  %110 = or i1 %109, %108, !dbg !101
  %111 = select i1 %110, float %76, float %107, !dbg !102
  %112 = fcmp olt float %111, %83, !dbg !103
  %113 = fcmp uno float %83, 0.000000e+00, !dbg !105
  %114 = or i1 %113, %112, !dbg !106
  %115 = zext i1 %84 to i8, !dbg !107
  %116 = select i1 %88, i8 2, i8 %115, !dbg !108
  %117 = select i1 %92, i8 3, i8 %116, !dbg !109
  %118 = select i1 %96, i8 4, i8 %117, !dbg !110
  %119 = select i1 %100, i8 5, i8 %118, !dbg !111
  %120 = select i1 %104, i8 6, i8 %119, !dbg !112
  %121 = select i1 %108, i8 7, i8 %120, !dbg !113
  %122 = select i1 %112, i8 8, i8 %121, !dbg !114
  %123 = sext i32 %9 to i64, !dbg !115
  %124 = getelementptr float, ptr addrspace(1) %1, i64 %123, !dbg !115
  %125 = bitcast float %111 to i32, !dbg !116
  %126 = select i1 %114, i32 %82, i32 %125, !dbg !117
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %126, ptr addrspace(1) %124, i1 %10) #1, !dbg !116
  %127 = getelementptr i8, ptr addrspace(1) %2, i64 %123, !dbg !118
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %122, ptr addrspace(1) %127, i1 %10) #1, !dbg !119
  ret void, !dbg !120
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clvacdauzbvcok72mggc6upbcv2wnxg4xjjzlmnrnkapvi76skck.py", directory: "inductor_cache/lv")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_24, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_24, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_24", linkageName: "triton_poi_fused_max_pool2d_with_indices_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 21, scope: !7)
!18 = !DILocation(line: 25, column: 28, scope: !7)
!19 = !DILocation(line: 29, column: 40, scope: !7)
!20 = !DILocation(line: 29, column: 61, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 37, column: 53, scope: !7)
!23 = !DILocation(line: 29, column: 45, scope: !7)
!24 = !DILocation(line: 37, column: 63, scope: !7)
!25 = !DILocation(line: 29, column: 55, scope: !7)
!26 = !DILocation(line: 29, column: 30, scope: !7)
!27 = !DILocation(line: 29, column: 66, scope: !7)
!28 = !DILocation(line: 30, column: 41, scope: !7)
!29 = !DILocation(line: 30, column: 51, scope: !7)
!30 = !DILocation(line: 30, column: 61, scope: !7)
!31 = !DILocation(line: 30, column: 30, scope: !7)
!32 = !DILocation(line: 30, column: 72, scope: !7)
!33 = !DILocation(line: 31, column: 42, scope: !7)
!34 = !DILocation(line: 31, column: 52, scope: !7)
!35 = !DILocation(line: 31, column: 62, scope: !7)
!36 = !DILocation(line: 31, column: 30, scope: !7)
!37 = !DILocation(line: 31, column: 73, scope: !7)
!38 = !DILocation(line: 32, column: 42, scope: !7)
!39 = !DILocation(line: 32, column: 52, scope: !7)
!40 = !DILocation(line: 32, column: 62, scope: !7)
!41 = !DILocation(line: 32, column: 30, scope: !7)
!42 = !DILocation(line: 32, column: 73, scope: !7)
!43 = !DILocation(line: 33, column: 42, scope: !7)
!44 = !DILocation(line: 33, column: 52, scope: !7)
!45 = !DILocation(line: 33, column: 62, scope: !7)
!46 = !DILocation(line: 33, column: 30, scope: !7)
!47 = !DILocation(line: 33, column: 73, scope: !7)
!48 = !DILocation(line: 34, column: 42, scope: !7)
!49 = !DILocation(line: 34, column: 52, scope: !7)
!50 = !DILocation(line: 34, column: 62, scope: !7)
!51 = !DILocation(line: 34, column: 30, scope: !7)
!52 = !DILocation(line: 34, column: 73, scope: !7)
!53 = !DILocation(line: 35, column: 43, scope: !7)
!54 = !DILocation(line: 35, column: 53, scope: !7)
!55 = !DILocation(line: 35, column: 63, scope: !7)
!56 = !DILocation(line: 35, column: 31, scope: !7)
!57 = !DILocation(line: 35, column: 74, scope: !7)
!58 = !DILocation(line: 36, column: 43, scope: !7)
!59 = !DILocation(line: 36, column: 53, scope: !7)
!60 = !DILocation(line: 36, column: 63, scope: !7)
!61 = !DILocation(line: 36, column: 31, scope: !7)
!62 = !DILocation(line: 36, column: 74, scope: !7)
!63 = !DILocation(line: 37, column: 43, scope: !7)
!64 = !DILocation(line: 37, column: 31, scope: !7)
!65 = !DILocation(line: 37, column: 74, scope: !7)
!66 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !69)
!67 = distinct !DILexicalBlockFile(scope: !7, file: !68, discriminator: 0)
!68 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!69 = !DILocation(line: 38, column: 40, scope: !7)
!70 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !69)
!71 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !69)
!72 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !69)
!73 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !74)
!74 = !DILocation(line: 39, column: 40, scope: !7)
!75 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !74)
!76 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !74)
!77 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !74)
!78 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !79)
!79 = !DILocation(line: 40, column: 40, scope: !7)
!80 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !79)
!81 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !79)
!82 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !79)
!83 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !84)
!84 = !DILocation(line: 41, column: 40, scope: !7)
!85 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !84)
!86 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !84)
!87 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !84)
!88 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !89)
!89 = !DILocation(line: 42, column: 41, scope: !7)
!90 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !89)
!91 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !89)
!92 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !89)
!93 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !94)
!94 = !DILocation(line: 43, column: 42, scope: !7)
!95 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !94)
!96 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !94)
!97 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !94)
!98 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !99)
!99 = !DILocation(line: 44, column: 42, scope: !7)
!100 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !99)
!101 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !99)
!102 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !99)
!103 = !DILocation(line: 118, column: 15, scope: !67, inlinedAt: !104)
!104 = !DILocation(line: 45, column: 42, scope: !7)
!105 = !DILocation(line: 120, column: 21, scope: !67, inlinedAt: !104)
!106 = !DILocation(line: 120, column: 16, scope: !67, inlinedAt: !104)
!107 = !DILocation(line: 49, column: 35, scope: !7)
!108 = !DILocation(line: 52, column: 35, scope: !7)
!109 = !DILocation(line: 55, column: 35, scope: !7)
!110 = !DILocation(line: 58, column: 35, scope: !7)
!111 = !DILocation(line: 61, column: 35, scope: !7)
!112 = !DILocation(line: 64, column: 35, scope: !7)
!113 = !DILocation(line: 67, column: 35, scope: !7)
!114 = !DILocation(line: 70, column: 35, scope: !7)
!115 = !DILocation(line: 71, column: 25, scope: !7)
!116 = !DILocation(line: 71, column: 37, scope: !7)
!117 = !DILocation(line: 121, column: 29, scope: !67, inlinedAt: !104)
!118 = !DILocation(line: 72, column: 25, scope: !7)
!119 = !DILocation(line: 72, column: 37, scope: !7)
!120 = !DILocation(line: 72, column: 4, scope: !7)
