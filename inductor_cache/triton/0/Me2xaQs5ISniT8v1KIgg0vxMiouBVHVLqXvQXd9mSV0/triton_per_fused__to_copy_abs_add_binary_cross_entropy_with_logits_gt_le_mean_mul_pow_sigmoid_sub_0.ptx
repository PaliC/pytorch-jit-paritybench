//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0 // -- Begin function triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0
.visible .entry triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0_param_2,
	.param .u32 triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<278>;
	.reg .b64 	%rd<8>;
$L__func_begin0:

// %bb.0:
	.loc	1 27 26                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:27:26
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd4, [triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0_param_1];
	shl.b32 	%r22, %r1, 2;
	ld.param.u64 	%rd5, [triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0_param_2];
	and.b32  	%r23, %r22, 252;
	.loc	1 31 30                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:31:30
	mul.wide.u32 	%rd6, %r23, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:31:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:32:30
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 32 35                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:32:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 38 23                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:38:23
	mov.b32 	%f1, %r18;
	abs.f32 	%f37, %f1;
	mov.b32 	%f2, %r19;
	abs.f32 	%f38, %f2;
	mov.b32 	%f3, %r20;
	abs.f32 	%f39, %f3;
	mov.b32 	%f4, %r21;
	abs.f32 	%f40, %f4;
	mov.f32 	%f41, 0f00000000;
	.loc	1 39 12                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:39:12
	sub.f32 	%f42, %f41, %f37;
	sub.f32 	%f43, %f41, %f38;
	sub.f32 	%f44, %f41, %f39;
	sub.f32 	%f45, %f41, %f40;
	.loc	1 40 23                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:40:23
	mul.f32 	%f30, %f42, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f29, %f30;
	// end inline asm
	mul.f32 	%f32, %f43, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f31, %f32;
	// end inline asm
	mul.f32 	%f34, %f44, 0f3FB8AA3B;
	mov.f32 	%f46, 0f3F800000;
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	add.rz.ftz.f32 	%f47, %f29, %f46;
	mov.b32 	%r24, %f47;
	add.s32 	%r25, %r24, -1061158912;
	and.b32  	%r26, %r25, -8388608;
	mov.b32 	%r10, %f29;
	sub.s32 	%r27, %r10, %r26;
	mov.b32 	%f48, %r27;
	mov.b32 	%r28, 1082130432;
	sub.s32 	%r29, %r28, %r26;
	mov.b32 	%f49, %r29;
	mov.f32 	%f50, 0fBF800000;
	mov.f32 	%f51, 0f3E800000;
	fma.rn.ftz.f32 	%f52, %f51, %f49, %f50;
	add.f32 	%f53, %f52, %f48;
	cvt.rn.f32.s32 	%f54, %r26;
	mul.f32 	%f55, %f54, 0f34000000;
	mov.f32 	%f56, 0f3DD80012;
	mov.f32 	%f57, 0fBD39BF78;
	fma.rn.ftz.f32 	%f58, %f57, %f53, %f56;
	mov.f32 	%f59, 0fBE0778E0;
	fma.rn.ftz.f32 	%f60, %f58, %f53, %f59;
	mov.f32 	%f61, 0f3E146475;
	fma.rn.ftz.f32 	%f62, %f60, %f53, %f61;
	mov.f32 	%f63, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f64, %f62, %f53, %f63;
	mov.f32 	%f65, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f66, %f64, %f53, %f65;
	mov.f32 	%f67, 0fBE800042;
	fma.rn.ftz.f32 	%f68, %f66, %f53, %f67;
	mov.f32 	%f69, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f70, %f68, %f53, %f69;
	mov.f32 	%f71, 0fBF000000;
	fma.rn.ftz.f32 	%f72, %f70, %f53, %f71;
	mul.f32 	%f73, %f53, %f72;
	fma.rn.ftz.f32 	%f74, %f73, %f53, %f53;
	mov.f32 	%f75, 0f3F317218;
	fma.rn.ftz.f32 	%f271, %f55, %f75, %f74;
	setp.lt.u32 	%p3, %r10, 2139095040;
	mov.f32 	%f269, 0f7F800000;
	@%p3 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p4, %r10, -1082130431;
	@%p4 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 28                          // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:0:28
	fma.rn.ftz.f32 	%f271, %f29, %f269, %f269;
$L__BB0_3:
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	setp.eq.f32 	%p5, %f29, 0f00000000;
	selp.f32 	%f271, 0f80000000, %f271, %p5;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 0                           // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:0:0
	mul.f32 	%f36, %f45, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f33, %f34;
	// end inline asm
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	add.rz.ftz.f32 	%f78, %f31, %f46;
	mov.b32 	%r30, %f78;
	add.s32 	%r31, %r30, -1061158912;
	and.b32  	%r32, %r31, -8388608;
	mov.b32 	%r11, %f31;
	sub.s32 	%r33, %r11, %r32;
	mov.b32 	%f79, %r33;
	sub.s32 	%r35, %r28, %r32;
	mov.b32 	%f80, %r35;
	fma.rn.ftz.f32 	%f83, %f51, %f80, %f50;
	add.f32 	%f84, %f83, %f79;
	cvt.rn.f32.s32 	%f85, %r32;
	mul.f32 	%f86, %f85, 0f34000000;
	fma.rn.ftz.f32 	%f89, %f57, %f84, %f56;
	fma.rn.ftz.f32 	%f91, %f89, %f84, %f59;
	fma.rn.ftz.f32 	%f93, %f91, %f84, %f61;
	fma.rn.ftz.f32 	%f95, %f93, %f84, %f63;
	fma.rn.ftz.f32 	%f97, %f95, %f84, %f65;
	fma.rn.ftz.f32 	%f99, %f97, %f84, %f67;
	fma.rn.ftz.f32 	%f101, %f99, %f84, %f69;
	fma.rn.ftz.f32 	%f103, %f101, %f84, %f71;
	mul.f32 	%f104, %f84, %f103;
	fma.rn.ftz.f32 	%f105, %f104, %f84, %f84;
	fma.rn.ftz.f32 	%f272, %f86, %f75, %f105;
	setp.lt.u32 	%p6, %r11, 2139095040;
	@%p6 bra 	$L__BB0_8;
// %bb.5:
	setp.lt.s32 	%p7, %r11, -1082130431;
	@%p7 bra 	$L__BB0_7;
// %bb.6:                               // %__nv_fmaf_rn.exit.i28
	.loc	1 0 28                          // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:0:28
	fma.rn.ftz.f32 	%f272, %f31, %f269, %f269;
$L__BB0_7:
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	setp.eq.f32 	%p8, %f31, 0f00000000;
	selp.f32 	%f272, 0f80000000, %f272, %p8;
$L__BB0_8:                              // %__nv_log1pf.exit31
	.loc	1 0 0                           // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:0:0
	// begin inline asm
	ex2.approx.f32 %f35, %f36;
	// end inline asm
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	add.rz.ftz.f32 	%f109, %f33, %f46;
	mov.b32 	%r36, %f109;
	add.s32 	%r37, %r36, -1061158912;
	and.b32  	%r38, %r37, -8388608;
	mov.b32 	%r12, %f33;
	sub.s32 	%r39, %r12, %r38;
	mov.b32 	%f110, %r39;
	sub.s32 	%r41, %r28, %r38;
	mov.b32 	%f111, %r41;
	fma.rn.ftz.f32 	%f114, %f51, %f111, %f50;
	add.f32 	%f115, %f114, %f110;
	cvt.rn.f32.s32 	%f116, %r38;
	mul.f32 	%f117, %f116, 0f34000000;
	fma.rn.ftz.f32 	%f120, %f57, %f115, %f56;
	fma.rn.ftz.f32 	%f122, %f120, %f115, %f59;
	fma.rn.ftz.f32 	%f124, %f122, %f115, %f61;
	fma.rn.ftz.f32 	%f126, %f124, %f115, %f63;
	fma.rn.ftz.f32 	%f128, %f126, %f115, %f65;
	fma.rn.ftz.f32 	%f130, %f128, %f115, %f67;
	fma.rn.ftz.f32 	%f132, %f130, %f115, %f69;
	fma.rn.ftz.f32 	%f134, %f132, %f115, %f71;
	mul.f32 	%f135, %f115, %f134;
	fma.rn.ftz.f32 	%f136, %f135, %f115, %f115;
	fma.rn.ftz.f32 	%f274, %f117, %f75, %f136;
	setp.lt.u32 	%p9, %r12, 2139095040;
	@%p9 bra 	$L__BB0_12;
// %bb.9:
	setp.lt.s32 	%p10, %r12, -1082130431;
	@%p10 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fmaf_rn.exit.i59
	.loc	1 0 28                          // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:0:28
	fma.rn.ftz.f32 	%f274, %f33, %f269, %f269;
$L__BB0_11:
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	setp.eq.f32 	%p11, %f33, 0f00000000;
	selp.f32 	%f274, 0f80000000, %f274, %p11;
$L__BB0_12:                             // %__nv_log1pf.exit62
	.loc	1 0 28                          // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:0:28
	ld.param.u64 	%rd7, [triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0_param_0];
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	add.rz.ftz.f32 	%f140, %f35, %f46;
	mov.b32 	%r42, %f140;
	add.s32 	%r43, %r42, -1061158912;
	and.b32  	%r44, %r43, -8388608;
	mov.b32 	%r13, %f35;
	sub.s32 	%r45, %r13, %r44;
	mov.b32 	%f141, %r45;
	sub.s32 	%r47, %r28, %r44;
	mov.b32 	%f142, %r47;
	fma.rn.ftz.f32 	%f145, %f51, %f142, %f50;
	add.f32 	%f146, %f145, %f141;
	cvt.rn.f32.s32 	%f147, %r44;
	mul.f32 	%f148, %f147, 0f34000000;
	fma.rn.ftz.f32 	%f151, %f57, %f146, %f56;
	fma.rn.ftz.f32 	%f153, %f151, %f146, %f59;
	fma.rn.ftz.f32 	%f155, %f153, %f146, %f61;
	fma.rn.ftz.f32 	%f157, %f155, %f146, %f63;
	fma.rn.ftz.f32 	%f159, %f157, %f146, %f65;
	fma.rn.ftz.f32 	%f161, %f159, %f146, %f67;
	fma.rn.ftz.f32 	%f163, %f161, %f146, %f69;
	fma.rn.ftz.f32 	%f165, %f163, %f146, %f71;
	mul.f32 	%f166, %f146, %f165;
	fma.rn.ftz.f32 	%f167, %f166, %f146, %f146;
	fma.rn.ftz.f32 	%f276, %f148, %f75, %f167;
	setp.lt.u32 	%p12, %r13, 2139095040;
	@%p12 bra 	$L__BB0_16;
// %bb.13:
	setp.lt.s32 	%p13, %r13, -1082130431;
	@%p13 bra 	$L__BB0_15;
// %bb.14:                              // %__nv_fmaf_rn.exit.i90
	.loc	1 0 28                          // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:0:28
	fma.rn.ftz.f32 	%f276, %f35, %f269, %f269;
$L__BB0_15:
	.loc	1 41 28                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:41:28
	setp.eq.f32 	%p14, %f35, 0f00000000;
	selp.f32 	%f276, 0f80000000, %f276, %p14;
$L__BB0_16:                             // %__nv_log1pf.exit93
$L__tmp0:
	.loc	2 110 15                        // triton_helpers.py:110:15
	setp.gt.f32 	%p19, %f3, 0f00000000;
	setp.gt.f32 	%p20, %f4, 0f00000000;
	setp.gt.f32 	%p21, %f2, 0f00000000;
	setp.gt.f32 	%p22, %f1, 0f00000000;
$L__tmp1:
	.loc	1 27 26                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:27:26
	and.b32  	%r70, %r1, 31;
$L__tmp2:
	.loc	3 47 30                         // standard.py:47:30
	sub.f32 	%f183, %f41, %f1;
	sub.f32 	%f184, %f41, %f2;
	sub.f32 	%f185, %f41, %f3;
	sub.f32 	%f186, %f41, %f4;
	.loc	3 47 29                         // standard.py:47:29
	mul.f32 	%f171, %f183, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f170, %f171;
	// end inline asm
	mul.f32 	%f173, %f184, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f172, %f173;
	// end inline asm
	mul.f32 	%f175, %f185, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f174, %f175;
	// end inline asm
	mul.f32 	%f177, %f186, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f176, %f177;
	// end inline asm
	.loc	3 47 20                         // standard.py:47:20
	add.f32 	%f187, %f170, 0f3F800000;
	add.f32 	%f188, %f172, 0f3F800000;
	add.f32 	%f189, %f174, 0f3F800000;
	add.f32 	%f190, %f176, 0f3F800000;
	.loc	3 47 16                         // standard.py:47:16
	mov.b32 	%r50, %f187;
	mov.b32 	%r49, 1065353216;
	// begin inline asm
	div.full.f32 %r48, %r49, %r50;
	// end inline asm
	mov.b32 	%f191, %r48;
	mov.b32 	%r53, %f188;
	// begin inline asm
	div.full.f32 %r51, %r49, %r53;
	// end inline asm
	mov.b32 	%f192, %r51;
	mov.b32 	%r56, %f189;
	// begin inline asm
	div.full.f32 %r54, %r49, %r56;
	// end inline asm
	mov.b32 	%f193, %r54;
	mov.b32 	%r59, %f190;
	// begin inline asm
	div.full.f32 %r57, %r49, %r59;
	// end inline asm
	mov.b32 	%f194, %r57;
$L__tmp3:
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.f32 	%f195, 0f00000000, %f1, %p22;
	selp.f32 	%f196, 0f00000000, %f2, %p21;
$L__tmp4:
	.loc	1 31 35                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:31:35
	mov.b32 	%f197, %r14;
	mov.b32 	%f198, %r15;
	.loc	1 34 18                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:34:18
	sub.f32 	%f200, %f46, %f198;
	sub.f32 	%f201, %f46, %f197;
	.loc	1 42 19                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:42:19
	sub.f32 	%f202, %f196, %f272;
	sub.f32 	%f203, %f195, %f271;
	.loc	1 43 19                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:43:19
	neg.f32 	%f204, %f203;
	fma.rn.f32 	%f205, %f201, %f1, %f204;
	neg.f32 	%f206, %f202;
	fma.rn.f32 	%f207, %f200, %f2, %f206;
	.loc	1 44 19                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:44:19
	setp.gt.f32 	%p23, %f197, 0f00000000;
	setp.gt.f32 	%p24, %f198, 0f00000000;
	.loc	1 45 21                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:45:21
	selp.f32 	%f208, 0f3F800000, 0f00000000, %p24;
	selp.f32 	%f209, 0f3F800000, 0f00000000, %p23;
	.loc	1 48 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:48:20
	sub.f32 	%f210, %f191, %f197;
	sub.f32 	%f211, %f192, %f198;
	.loc	1 50 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:50:20
	mul.f32 	%f212, %f211, %f211;
	mul.f32 	%f213, %f210, %f210;
	.loc	1 52 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:52:20
	mul.f32 	%f214, %f213, 0f3F400000;
	mul.f32 	%f215, %f212, 0f3F400000;
	.loc	1 53 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:53:20
	setp.le.f32 	%p25, %f198, 0f00000000;
	setp.le.f32 	%p26, %f197, 0f00000000;
	.loc	1 54 21                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:54:21
	selp.f32 	%f216, 0f3F800000, 0f00000000, %p26;
	selp.f32 	%f217, 0f3F800000, 0f00000000, %p25;
	.loc	1 55 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:55:20
	mul.f32 	%f218, %f215, %f217;
	mul.f32 	%f219, %f214, %f216;
	.loc	1 56 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:56:20
	fma.rn.f32 	%f220, %f197, %f209, %f219;
	fma.rn.f32 	%f221, %f198, %f208, %f218;
	.loc	1 57 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:57:20
	mul.f32 	%f222, %f207, %f221;
$L__tmp5:
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.f32 	%f223, 0f00000000, %f4, %p20;
	selp.f32 	%f224, 0f00000000, %f3, %p19;
$L__tmp6:
	.loc	1 31 35                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:31:35
	mov.b32 	%f225, %r17;
	mov.b32 	%f226, %r16;
	.loc	1 34 18                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:34:18
	sub.f32 	%f227, %f46, %f226;
	sub.f32 	%f228, %f46, %f225;
	.loc	1 42 19                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:42:19
	sub.f32 	%f229, %f224, %f274;
	sub.f32 	%f230, %f223, %f276;
	.loc	1 43 19                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:43:19
	neg.f32 	%f231, %f230;
	fma.rn.f32 	%f232, %f228, %f4, %f231;
	neg.f32 	%f233, %f229;
	fma.rn.f32 	%f234, %f227, %f3, %f233;
	.loc	1 44 19                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:44:19
	setp.gt.f32 	%p27, %f225, 0f00000000;
	setp.gt.f32 	%p28, %f226, 0f00000000;
	.loc	1 45 21                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:45:21
	selp.f32 	%f235, 0f3F800000, 0f00000000, %p28;
	selp.f32 	%f236, 0f3F800000, 0f00000000, %p27;
	.loc	1 48 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:48:20
	sub.f32 	%f237, %f194, %f225;
	sub.f32 	%f238, %f193, %f226;
	.loc	1 50 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:50:20
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f240, %f237, %f237;
	.loc	1 52 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:52:20
	mul.f32 	%f241, %f240, 0f3F400000;
	mul.f32 	%f242, %f239, 0f3F400000;
	.loc	1 53 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:53:20
	setp.le.f32 	%p29, %f226, 0f00000000;
	setp.le.f32 	%p30, %f225, 0f00000000;
	.loc	1 54 21                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:54:21
	selp.f32 	%f243, 0f3F800000, 0f00000000, %p30;
	selp.f32 	%f244, 0f3F800000, 0f00000000, %p29;
	.loc	1 55 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:55:20
	mul.f32 	%f245, %f242, %f244;
	mul.f32 	%f246, %f241, %f243;
	.loc	1 56 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:56:20
	fma.rn.f32 	%f247, %f225, %f236, %f246;
	fma.rn.f32 	%f248, %f226, %f235, %f245;
$L__tmp7:
	.loc	3 256 15                        // standard.py:256:15
	fma.rn.f32 	%f249, %f205, %f220, %f222;
	fma.rn.f32 	%f250, %f234, %f248, %f249;
	fma.rn.f32 	%f251, %f232, %f247, %f250;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f251;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	mov.b32 	%f252, %r72;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f253, %f251, %f252;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f253;
	shfl.sync.bfly.b32	%r74, %r73, 8, 31, -1;
	mov.b32 	%f254, %r74;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f255, %f253, %f254;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f255;
	shfl.sync.bfly.b32	%r76, %r75, 4, 31, -1;
	mov.b32 	%f256, %r76;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f257, %f255, %f256;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f257;
	shfl.sync.bfly.b32	%r78, %r77, 2, 31, -1;
	mov.b32 	%f258, %r78;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f259, %f257, %f258;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f259;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f260, %r80;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f261, %f259, %f260;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p15, %r70, 0;
	shr.u32 	%r81, %r1, 3;
	and.b32  	%r82, %r81, 4;
	mov.u32 	%r83, global_smem;
	add.s32 	%r60, %r83, %r82;
	mov.b32 	%r61, %f261;
	// begin inline asm
	@%p15 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p16, %r1, 2;
	add.s32 	%r63, %r83, %r22;
	// begin inline asm
	@%p16 ld.shared.b32 %r62, [ %r63 + 0 ];
	// end inline asm
	mov.b32 	%f262, %r62;
	shfl.sync.bfly.b32	%r85, %r62, 1, 31, -1;
	mov.b32 	%f263, %r85;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f264, %f262, %f263;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r86, %r1, 1;
	setp.eq.b32 	%p31, %r86, 1;
	not.pred 	%p32, %p31;
	and.pred  	%p17, %p16, %p32;
	mov.b32 	%r65, %f264;
	// begin inline asm
	@%p17 st.shared.b32 [ %r63 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f265, [global_smem];
$L__tmp8:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f266, %f265, 0f00000000;
$L__tmp9:
	.loc	1 61 20                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:61:20
	mov.b32 	%r67, %f266;
	mov.b32 	%r68, 1132462080;
	// begin inline asm
	div.full.f32 %r69, %r67, %r68;
	// end inline asm
	.loc	1 63 4                          // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:63:4
	bar.sync 	0;
	.loc	1 64 63                         // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:64:63
	and.b32  	%r87, %r1, 63;
	setp.eq.s32 	%p18, %r87, 0;
	// begin inline asm
	@%p18 st.global.b32 [ %rd7 + 0 ], { %r69 };
	// end inline asm
	.loc	1 64 4                          // ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py:64:4
	ret;
$L__tmp10:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 316                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x135 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 112
.b8 119
.b8 113
.b8 51
.b8 97
.b8 108
.b8 103
.b8 103
.b8 54
.b8 119
.b8 108
.b8 111
.b8 114
.b8 110
.b8 110
.b8 118
.b8 112
.b8 104
.b8 115
.b8 98
.b8 53
.b8 114
.b8 111
.b8 117
.b8 118
.b8 117
.b8 54
.b8 119
.b8 100
.b8 106
.b8 99
.b8 114
.b8 108
.b8 119
.b8 121
.b8 112
.b8 104
.b8 117
.b8 52
.b8 118
.b8 108
.b8 97
.b8 100
.b8 53
.b8 114
.b8 106
.b8 114
.b8 109
.b8 50
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x66 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 98
.b8 105
.b8 110
.b8 97
.b8 114
.b8 121
.b8 95
.b8 99
.b8 114
.b8 111
.b8 115
.b8 115
.b8 95
.b8 101
.b8 110
.b8 116
.b8 114
.b8 111
.b8 112
.b8 121
.b8 95
.b8 119
.b8 105
.b8 116
.b8 104
.b8 95
.b8 108
.b8 111
.b8 103
.b8 105
.b8 116
.b8 115
.b8 95
.b8 103
.b8 116
.b8 95
.b8 108
.b8 101
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc9:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xde:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 59                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x126:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp8                           // DW_AT_low_pc
.b64 $L__tmp9                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 59                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
