#loc = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":19:0)
#loc1 = loc(unknown)
#loc36 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":59:59)
#loc52 = loc(callsite(#loc1 at #loc36))
module {
  tt.func public @triton_per_fused__to_copy_abs_add_binary_cross_entropy_with_logits_gt_le_mean_mul_pow_sigmoid_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<7.500000e-01> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.subf %cst_3, %3 : tensor<256xf32> loc(#loc7)
    %8 = arith.mulf %7, %6 : tensor<256xf32> loc(#loc8)
    %9 = arith.cmpf olt, %cst_2, %6 : tensor<256xf32> loc(#loc45)
    %10 = arith.select %9, %cst_2, %6 : tensor<256xi1>, tensor<256xf32> loc(#loc46)
    %11 = math.absf %6 : tensor<256xf32> loc(#loc12)
    %12 = arith.subf %cst_2, %11 : tensor<256xf32> loc(#loc13)
    %13 = math.exp %12 : tensor<256xf32> loc(#loc14)
    %14 = tt.extern_elementwise %13 {libname = "", libpath = "", pure = true, symbol = "__nv_log1pf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc15)
    %15 = arith.subf %10, %14 : tensor<256xf32> loc(#loc16)
    %16 = arith.subf %8, %15 : tensor<256xf32> loc(#loc17)
    %17 = arith.cmpf ogt, %3, %cst_2 : tensor<256xf32> loc(#loc18)
    %18 = arith.uitofp %17 : tensor<256xi1> to tensor<256xf32> loc(#loc19)
    %19 = arith.mulf %3, %18 : tensor<256xf32> loc(#loc20)
    %20 = arith.subf %cst_2, %6 : tensor<256xf32> loc(#loc47)
    %21 = math.exp %20 : tensor<256xf32> loc(#loc48)
    %22 = arith.addf %21, %cst_3 : tensor<256xf32> loc(#loc49)
    %23 = arith.divf %cst_3, %22 : tensor<256xf32> loc(#loc50)
    %24 = arith.subf %23, %3 : tensor<256xf32> loc(#loc26)
    %25 = math.absf %24 : tensor<256xf32> loc(#loc27)
    %26 = arith.mulf %25, %25 : tensor<256xf32> loc(#loc28)
    %27 = arith.mulf %26, %cst_1 : tensor<256xf32> loc(#loc29)
    %28 = arith.cmpf ole, %3, %cst_2 : tensor<256xf32> loc(#loc30)
    %29 = arith.uitofp %28 : tensor<256xi1> to tensor<256xf32> loc(#loc31)
    %30 = arith.mulf %27, %29 : tensor<256xf32> loc(#loc32)
    %31 = arith.addf %19, %30 : tensor<256xf32> loc(#loc33)
    %32 = arith.mulf %16, %31 : tensor<256xf32> loc(#loc34)
    %33 = "tt.reduce"(%32) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc36)), %arg5: f32 loc(callsite(#loc1 at #loc36))):
      %39 = arith.addf %arg4, %arg5 : f32 loc(#loc55)
      tt.reduce.return %39 : f32 loc(#loc51)
    }) : (tensor<256xf32>) -> f32 loc(#loc51)
    %34 = arith.addf %33, %cst_0 : f32 loc(#loc54)
    %35 = arith.divf %34, %cst : f32 loc(#loc40)
    %36 = tt.splat %35 : f32 -> tensor<1xf32> loc(#loc40)
    gpu.barrier loc(#loc41)
    %37 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc42)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc42)
    tt.store %38, %36 : tensor<1x!tt.ptr<f32>> loc(#loc43)
    tt.return loc(#loc44)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":27:26)
#loc3 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":31:30)
#loc4 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":31:35)
#loc5 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":32:30)
#loc6 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":32:35)
#loc7 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":34:18)
#loc8 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":35:18)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc10 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":37:40)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc12 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":38:23)
#loc13 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":39:12)
#loc14 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":40:23)
#loc15 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":41:28)
#loc16 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":42:19)
#loc17 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":43:19)
#loc18 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":44:19)
#loc19 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":45:21)
#loc20 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":46:19)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc22 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":47:23)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc26 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":48:20)
#loc27 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":49:24)
#loc28 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":50:20)
#loc29 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":52:20)
#loc30 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":53:20)
#loc31 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":54:21)
#loc32 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":55:20)
#loc33 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":56:20)
#loc34 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":57:20)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc39 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":59:45)
#loc40 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":61:20)
#loc41 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":63:4)
#loc42 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":64:28)
#loc43 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":64:63)
#loc44 = loc("inductor_cache/kp/ckpwq3algg6wlornnvphsb5rouvu6wdjcrlwyphu4vlad5rjrm27.py":64:4)
#loc45 = loc(callsite(#loc9 at #loc10))
#loc46 = loc(callsite(#loc11 at #loc10))
#loc47 = loc(callsite(#loc21 at #loc22))
#loc48 = loc(callsite(#loc23 at #loc22))
#loc49 = loc(callsite(#loc24 at #loc22))
#loc50 = loc(callsite(#loc25 at #loc22))
#loc51 = loc(callsite(#loc35 at #loc36))
#loc53 = loc(callsite(#loc37 at #loc35))
#loc54 = loc(callsite(#loc38 at #loc39))
#loc55 = loc(callsite(#loc53 at #loc36))
