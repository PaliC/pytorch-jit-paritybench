//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25 // -- Begin function triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25
.visible .entry triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_11
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<83>;
	.reg .b32 	%r<196>;
	.reg .f32 	%f<152>;
	.reg .b64 	%rd<78>;
	.loc	1 19 0                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd54, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_0];
	ld.param.u64 	%rd55, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_1];
$L__tmp0:
	.loc	1 23 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:23:33
	shl.b32 	%r127, %r1, 5;
	ld.param.u64 	%rd56, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_2];
	ld.param.u64 	%rd57, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_3];
	.loc	1 24 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:24:44
	mov.u32 	%r128, %tid.x;
	ld.param.u64 	%rd58, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_4];
	bfe.u32 	%r129, %r128, 4, 4;
	ld.param.u64 	%rd59, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_5];
	ld.param.u64 	%rd60, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_6];
	and.b32  	%r130, %r128, 31;
	ld.param.u64 	%rd61, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_7];
	.loc	1 24 23                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:24:23
	or.b32  	%r131, %r127, %r129;
	ld.param.u64 	%rd62, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_8];
	or.b32  	%r132, %r131, 16;
	ld.param.u64 	%rd63, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25_param_9];
	or.b32  	%r133, %r127, %r130;
	.loc	1 25 21                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:25:21
	setp.lt.s32 	%p1, %r131, 2048;
	setp.lt.s32 	%p5, %r132, 2048;
	setp.lt.s32 	%p9, %r133, 2048;
	.loc	1 26 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:26:34
	shl.b32 	%r134, %r128, 2;
	and.b32  	%r135, %r134, 60;
	.loc	1 30 19                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:30:19
	bfe.s32 	%r136, %r1, 26, 1;
	shr.u32 	%r137, %r136, 23;
	add.s32 	%r138, %r131, %r137;
	and.b32  	%r139, %r138, -512;
	sub.s32 	%r140, %r131, %r139;
	add.s32 	%r141, %r132, %r137;
	and.b32  	%r142, %r141, -512;
	sub.s32 	%r143, %r132, %r142;
	add.s32 	%r144, %r133, %r137;
	and.b32  	%r145, %r144, -512;
	sub.s32 	%r146, %r133, %r145;
	.loc	1 32 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:34
	mul.wide.s32 	%rd64, %r131, 4;
	add.s64 	%rd1, %rd54, %rd64;
	cvt.s64.s32 	%rd65, %r127;
	cvt.u64.u32 	%rd66, %r129;
	or.b64  	%rd67, %rd65, %rd66;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd69, %rd54, %rd68;
	add.s64 	%rd5, %rd69, 64;
	mul.wide.s32 	%rd70, %r133, 4;
	add.s64 	%rd9, %rd54, %rd70;
	.loc	1 32 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:30
	mul.wide.s32 	%rd71, %r140, 4;
	add.s64 	%rd10, %rd56, %rd71;
	mul.wide.s32 	%rd72, %r143, 4;
	add.s64 	%rd14, %rd56, %rd72;
	mul.wide.s32 	%rd73, %r146, 4;
	add.s64 	%rd18, %rd56, %rd73;
	.loc	1 33 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r16 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r17 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r18 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r18;
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r19 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 34 42                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:42
	shl.b32 	%r147, %r131, 6;
	shl.b32 	%r148, %r132, 6;
	.loc	1 34 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:39
	or.b32  	%r149, %r147, %r135;
	or.b32  	%r150, %r148, %r135;
	.loc	1 34 34                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:34
	mul.wide.s32 	%rd74, %r149, 4;
	add.s64 	%rd19, %rd55, %rd74;
	mul.wide.s32 	%rd75, %r150, 4;
	add.s64 	%rd20, %rd55, %rd75;
	mov.b32 	%r24, 0;
	.loc	1 34 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:47
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd19 + 0 ];
	@!%p1 mov.u32 %r20, %r24;
	@!%p1 mov.u32 %r21, %r24;
	@!%p1 mov.u32 %r22, %r24;
	@!%p1 mov.u32 %r23, %r24;
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p5 ld.global.v4.b32 { %r28, %r29, %r30, %r31 }, [ %rd20 + 0 ];
	@!%p5 mov.u32 %r28, %r24;
	@!%p5 mov.u32 %r29, %r24;
	@!%p5 mov.u32 %r30, %r24;
	@!%p5 mov.u32 %r31, %r24;
	// end inline asm
	.loc	1 35 30                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:35:30
	add.s64 	%rd21, %rd57, %rd71;
	add.s64 	%rd25, %rd57, %rd72;
	.loc	1 35 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:35:35
	// begin inline asm
	mov.u32 %r36, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r36 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r37 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r38 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r39 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r40 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r41 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r42 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r43 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:31
	add.s64 	%rd29, %rd58, %rd74;
	add.s64 	%rd30, %rd58, %rd75;
	.loc	1 36 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:44
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	@%p1 ld.global.v4.b32 { %r44, %r45, %r46, %r47 }, [ %rd29 + 0 ];
	@!%p1 mov.u32 %r44, %r24;
	@!%p1 mov.u32 %r45, %r24;
	@!%p1 mov.u32 %r46, %r24;
	@!%p1 mov.u32 %r47, %r24;
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	@%p5 ld.global.v4.b32 { %r52, %r53, %r54, %r55 }, [ %rd30 + 0 ];
	@!%p5 mov.u32 %r52, %r24;
	@!%p5 mov.u32 %r53, %r24;
	@!%p5 mov.u32 %r54, %r24;
	@!%p5 mov.u32 %r55, %r24;
	// end inline asm
	.loc	1 37 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:31
	add.s64 	%rd31, %rd59, %rd64;
	add.s64 	%rd76, %rd59, %rd68;
	add.s64 	%rd35, %rd76, 64;
	.loc	1 37 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:36
	// begin inline asm
	mov.u32 %r60, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r60 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r61, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r61 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r62, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r62 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r63 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r64 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r65 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r66 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r67, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r67 }, [ %rd35 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:31
	add.s64 	%rd39, %rd60, %rd64;
	add.s64 	%rd77, %rd60, %rd68;
	add.s64 	%rd43, %rd77, 64;
	.loc	1 38 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:36
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r68 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r69 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r70, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r70 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r71, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r71 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r72 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r73, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r73 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r74, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r74 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r75, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r75 }, [ %rd43 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:39:18
	add.f32 	%f9, %f5, %f7;
	add.f32 	%f10, %f6, %f8;
	.loc	1 48 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:48:20
	shl.b32 	%r151, %r129, 2;
	mov.u32 	%r152, global_smem;
	add.s32 	%r76, %r152, %r151;
	add.s32 	%r78, %r76, 64;
	shl.b32 	%r153, %r130, 2;
	add.s32 	%r154, %r152, %r153;
	.loc	1 34 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:34:47
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	mov.b32 	%f13, %r22;
	mov.b32 	%f14, %r23;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	mov.b32 	%f17, %r30;
	mov.b32 	%f18, %r31;
	.loc	1 35 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:35:35
	mov.b32 	%f19, %r39;
	mov.b32 	%f20, %r43;
	.loc	1 40 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:40:18
	add.f32 	%f21, %f20, %f18;
	add.f32 	%f22, %f20, %f17;
	add.f32 	%f23, %f20, %f16;
	add.f32 	%f24, %f20, %f15;
	add.f32 	%f25, %f19, %f14;
	add.f32 	%f26, %f19, %f13;
	add.f32 	%f27, %f19, %f12;
	add.f32 	%f28, %f19, %f11;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f28, %f27;
	add.f32 	%f30, %f26, %f29;
	add.f32 	%f31, %f25, %f30;
	selp.f32 	%f32, %f31, 0f00000000, %p1;
	add.f32 	%f33, %f24, %f23;
	add.f32 	%f34, %f22, %f33;
	add.f32 	%f35, %f21, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f32;
	shfl.sync.bfly.b32	%r156, %r155, 8, 31, -1;
	mov.b32 	%f37, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f32, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f38;
	shfl.sync.bfly.b32	%r158, %r157, 4, 31, -1;
	mov.b32 	%f39, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f40;
	shfl.sync.bfly.b32	%r160, %r159, 2, 31, -1;
	mov.b32 	%f41, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r161, %f42;
	shfl.sync.bfly.b32	%r162, %r161, 1, 31, -1;
	mov.b32 	%f43, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r163, %f36;
	shfl.sync.bfly.b32	%r164, %r163, 8, 31, -1;
	mov.b32 	%f45, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f36, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f46;
	shfl.sync.bfly.b32	%r166, %r165, 4, 31, -1;
	mov.b32 	%f47, %r166;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f48;
	shfl.sync.bfly.b32	%r168, %r167, 2, 31, -1;
	mov.b32 	%f49, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r169, %f50;
	shfl.sync.bfly.b32	%r170, %r169, 1, 31, -1;
	mov.b32 	%f51, %r170;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
$L__tmp2:
	.loc	1 48 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:48:20
	mov.b32 	%r77, %f44;
	mov.pred 	%p63, -1;
	// begin inline asm
	@%p63 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	mov.b32 	%r79, %f52;
	// begin inline asm
	@%p63 st.shared.b32 [ %r78 + 0 ], %r79;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r81, [%r154];
	mov.b32 	%r82, 1115684864;
	// begin inline asm
	div.full.f32 %r126, %r81, %r82;
	// end inline asm
	// begin inline asm
	div.full.f32 %r83, %r77, %r82;
	// end inline asm
	mov.b32 	%f53, %r83;
	// begin inline asm
	div.full.f32 %r86, %r79, %r82;
	// end inline asm
	mov.b32 	%f54, %r86;
	.loc	1 49 19                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:49:19
	sub.f32 	%f55, %f21, %f54;
	sub.f32 	%f56, %f22, %f54;
	sub.f32 	%f57, %f23, %f54;
	sub.f32 	%f58, %f25, %f53;
	sub.f32 	%f59, %f26, %f53;
	sub.f32 	%f60, %f27, %f53;
	sub.f32 	%f61, %f28, %f53;
	sub.f32 	%f62, %f24, %f54;
	.loc	1 50 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:50:20
	mul.f32 	%f63, %f62, %f62;
	mul.f32 	%f64, %f61, %f61;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f65, %f60, %f60, %f64;
	fma.rn.f32 	%f66, %f59, %f59, %f65;
	fma.rn.f32 	%f67, %f58, %f58, %f66;
	selp.f32 	%f68, %f67, 0f00000000, %p1;
	fma.rn.f32 	%f69, %f57, %f57, %f63;
	fma.rn.f32 	%f70, %f56, %f56, %f69;
	fma.rn.f32 	%f71, %f55, %f55, %f70;
	selp.f32 	%f72, %f71, 0f00000000, %p5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r171, %f68;
	shfl.sync.bfly.b32	%r172, %r171, 8, 31, -1;
	mov.b32 	%f73, %r172;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f68, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r173, %f74;
	shfl.sync.bfly.b32	%r174, %r173, 4, 31, -1;
	mov.b32 	%f75, %r174;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r175, %f76;
	shfl.sync.bfly.b32	%r176, %r175, 2, 31, -1;
	mov.b32 	%f77, %r176;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r177, %f78;
	shfl.sync.bfly.b32	%r178, %r177, 1, 31, -1;
	mov.b32 	%f79, %r178;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f80, %f78, %f79;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r179, %f72;
	shfl.sync.bfly.b32	%r180, %r179, 8, 31, -1;
	mov.b32 	%f81, %r180;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f82, %f72, %f81;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r181, %f82;
	shfl.sync.bfly.b32	%r182, %r181, 4, 31, -1;
	mov.b32 	%f83, %r182;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f82, %f83;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r183, %f84;
	shfl.sync.bfly.b32	%r184, %r183, 2, 31, -1;
	mov.b32 	%f85, %r184;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f86, %f84, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r185, %f86;
	shfl.sync.bfly.b32	%r186, %r185, 1, 31, -1;
	mov.b32 	%f87, %r186;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
$L__tmp4:
	.loc	1 63 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:63:28
	bar.sync 	0;
	mov.b32 	%r90, %f80;
	// begin inline asm
	@%p63 st.shared.b32 [ %r76 + 0 ], %r90;
	// end inline asm
	mov.b32 	%r92, %f88;
	// begin inline asm
	@%p63 st.shared.b32 [ %r78 + 0 ], %r92;
	// end inline asm
	bar.sync 	0;
	mov.f32 	%f89, 0f00000000;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f90, %f89, %f9;
	sub.f32 	%f91, %f89, %f10;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f90, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f91, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f92, %f1, 0f3F800000;
	add.f32 	%f93, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r95, %f92;
	mov.b32 	%r94, 1065353216;
	// begin inline asm
	div.full.f32 %r93, %r94, %r95;
	// end inline asm
	mov.b32 	%f94, %r93;
	mov.b32 	%r98, %f93;
	// begin inline asm
	div.full.f32 %r96, %r94, %r98;
	// end inline asm
	mov.b32 	%f95, %r96;
$L__tmp6:
	.loc	1 60 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:60:20
	ld.shared.u32 	%r100, [%r154];
	// begin inline asm
	div.full.f32 %r99, %r100, %r82;
	// end inline asm
	mov.b32 	%f96, %r99;
	// begin inline asm
	div.full.f32 %r102, %r90, %r82;
	// end inline asm
	mov.b32 	%f97, %r102;
	// begin inline asm
	div.full.f32 %r105, %r92, %r82;
	// end inline asm
	mov.b32 	%f98, %r105;
	.loc	1 62 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:62:20
	add.f32 	%f99, %f96, 0f3727C5AC;
	add.f32 	%f100, %f97, 0f3727C5AC;
	add.f32 	%f101, %f98, 0f3727C5AC;
	.loc	1 63 28                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:63:28
	rsqrt.approx.ftz.f32 	%f102, %f99;
	rsqrt.approx.ftz.f32 	%f103, %f100;
	rsqrt.approx.ftz.f32 	%f104, %f101;
	.loc	1 37 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:37:36
	mov.b32 	%f105, %r67;
	mov.b32 	%f106, %r63;
	.loc	1 38 36                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:38:36
	mov.b32 	%f107, %r71;
	mov.b32 	%f108, %r75;
	.loc	1 32 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:32:39
	mov.b32 	%f109, %r10;
	.loc	1 33 35                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:33:35
	mov.b32 	%f110, %r19;
	.loc	1 39 18                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:39:18
	add.f32 	%f111, %f109, %f110;
	.loc	1 64 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:64:20
	mul.f32 	%f112, %f55, %f104;
	mul.f32 	%f113, %f56, %f104;
	mul.f32 	%f114, %f57, %f104;
	mul.f32 	%f115, %f62, %f104;
	mul.f32 	%f116, %f58, %f103;
	mul.f32 	%f117, %f59, %f103;
	mul.f32 	%f118, %f60, %f103;
	mul.f32 	%f119, %f61, %f103;
	.loc	1 36 44                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:36:44
	mov.b32 	%f120, %r55;
	mov.b32 	%f121, %r54;
	mov.b32 	%f122, %r53;
	mov.b32 	%f123, %r52;
	mov.b32 	%f124, %r47;
	mov.b32 	%f125, %r46;
	mov.b32 	%f126, %r45;
	mov.b32 	%f127, %r44;
	.loc	1 54 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:54:20
	sub.f32 	%f128, %f127, %f106;
	sub.f32 	%f129, %f126, %f106;
	sub.f32 	%f130, %f125, %f106;
	sub.f32 	%f131, %f124, %f106;
	sub.f32 	%f132, %f123, %f105;
	sub.f32 	%f133, %f122, %f105;
	sub.f32 	%f134, %f121, %f105;
	sub.f32 	%f135, %f120, %f105;
	.loc	1 55 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:55:20
	mul.f32 	%f136, %f135, %f108;
	mul.f32 	%f137, %f134, %f108;
	mul.f32 	%f138, %f133, %f108;
	mul.f32 	%f139, %f132, %f108;
	mul.f32 	%f140, %f131, %f107;
	mul.f32 	%f141, %f130, %f107;
	mul.f32 	%f142, %f129, %f107;
	mul.f32 	%f143, %f128, %f107;
	.loc	1 65 20                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:65:20
	fma.rn.f32 	%f144, %f143, %f94, %f119;
	fma.rn.f32 	%f145, %f142, %f94, %f118;
	fma.rn.f32 	%f146, %f141, %f94, %f117;
	fma.rn.f32 	%f147, %f140, %f94, %f116;
	fma.rn.f32 	%f148, %f139, %f95, %f115;
	fma.rn.f32 	%f149, %f138, %f95, %f114;
	fma.rn.f32 	%f150, %f137, %f95, %f113;
	fma.rn.f32 	%f151, %f136, %f95, %f112;
$L__tmp7:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p74, %f151, 0f00000000;
	setp.lt.f32 	%p75, %f150, 0f00000000;
	setp.lt.f32 	%p76, %f149, 0f00000000;
	setp.lt.f32 	%p77, %f148, 0f00000000;
	setp.lt.f32 	%p78, %f147, 0f00000000;
	setp.lt.f32 	%p79, %f146, 0f00000000;
	setp.lt.f32 	%p80, %f145, 0f00000000;
	setp.lt.f32 	%p81, %f144, 0f00000000;
$L__tmp8:
	.loc	1 68 4                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:68:4
	bar.sync 	0;
	.loc	1 69 39                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:69:39
	and.b32  	%r187, %r128, 224;
	setp.eq.s32 	%p82, %r187, 0;
	mov.b32 	%r108, %f111;
	and.pred  	%p67, %p82, %p9;
	// begin inline asm
	@%p67 st.global.b32 [ %rd9 + 0 ], { %r108 };
	// end inline asm
	.loc	1 70 47                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:70:47
	mov.b32 	%r109, %f28;
	mov.b32 	%r110, %f27;
	mov.b32 	%r111, %f26;
	mov.b32 	%r112, %f25;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd19 + 0 ], { %r109, %r110, %r111, %r112 };
	// end inline asm
	mov.b32 	%r113, %f24;
	mov.b32 	%r114, %f23;
	mov.b32 	%r115, %f22;
	mov.b32 	%r116, %f21;
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd20 + 0 ], { %r113, %r114, %r115, %r116 };
	// end inline asm
	.loc	1 71 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:25
	add.s64 	%rd50, %rd62, %rd74;
	add.s64 	%rd51, %rd62, %rd75;
	.loc	1 71 45                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:45
	mov.b32 	%r188, %f151;
	mov.b32 	%r189, %f150;
	mov.b32 	%r190, %f149;
	mov.b32 	%r191, %f148;
	mov.b32 	%r192, %f147;
	mov.b32 	%r193, %f146;
	mov.b32 	%r194, %f145;
	mov.b32 	%r195, %f144;
$L__tmp9:
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r117, 0, %r195, %p81;
	selp.b32 	%r118, 0, %r194, %p80;
	selp.b32 	%r119, 0, %r193, %p79;
	selp.b32 	%r120, 0, %r192, %p78;
$L__tmp10:
	.loc	1 71 45                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:45
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd50 + 0 ], { %r117, %r118, %r119, %r120 };
	// end inline asm
$L__tmp11:
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r121, 0, %r191, %p77;
	selp.b32 	%r122, 0, %r190, %p76;
	selp.b32 	%r123, 0, %r189, %p75;
	selp.b32 	%r124, 0, %r188, %p74;
$L__tmp12:
	.loc	1 71 45                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:71:45
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd51 + 0 ], { %r121, %r122, %r123, %r124 };
	// end inline asm
	.loc	1 72 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:72:25
	add.s64 	%rd52, %rd63, %rd70;
	.loc	1 72 37                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:72:37
	mov.b32 	%r125, %f102;
	// begin inline asm
	@%p67 st.global.b32 [ %rd52 + 0 ], { %r125 };
	// end inline asm
	.loc	1 73 25                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:25
	add.s64 	%rd53, %rd61, %rd70;
	.loc	1 73 37                         // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:37
	// begin inline asm
	@%p67 st.global.b32 [ %rd53 + 0 ], { %r126 };
	// end inline asm
	.loc	1 73 4                          // cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py:73:4
	ret;
$L__tmp13:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 294                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x11f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 52
.b8 100
.b8 51
.b8 103
.b8 101
.b8 114
.b8 104
.b8 104
.b8 51
.b8 101
.b8 120
.b8 112
.b8 101
.b8 106
.b8 103
.b8 101
.b8 120
.b8 110
.b8 114
.b8 119
.b8 50
.b8 51
.b8 97
.b8 50
.b8 51
.b8 101
.b8 100
.b8 119
.b8 99
.b8 108
.b8 119
.b8 99
.b8 113
.b8 52
.b8 110
.b8 117
.b8 117
.b8 101
.b8 119
.b8 50
.b8 99
.b8 121
.b8 117
.b8 54
.b8 52
.b8 54
.b8 105
.b8 105
.b8 120
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 50
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 56                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x110:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
