#loc = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0)
#loc1 = loc(unknown)
#loc31 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":45:26)
#loc38 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":53:26)
#loc67 = loc(callsite(#loc1 at #loc31))
#loc70 = loc(callsite(#loc1 at #loc38))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_25(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<32x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<32x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<32x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<6.400000e+01> : tensor<32x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<32x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<32x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<2048> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_5 : tensor<32x1xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc11)
    %12 = tt.load %11, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %9 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc13)
    %15 = tt.load %14, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc14)
    %16 = arith.muli %5, %cst_4 : tensor<32x1xi32> loc(#loc15)
    %17 = tt.broadcast %8 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc16)
    %18 = tt.broadcast %16 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc16)
    %19 = arith.addi %17, %18 : tensor<32x64xi32> loc(#loc16)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc17)
    %21 = tt.addptr %20, %19 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc17)
    %22 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc18)
    %23 = tt.load %21, %22, %cst_3 : tensor<32x64x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.addptr %24, %9 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc19)
    %26 = tt.load %25, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc20)
    %27 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc21)
    %28 = tt.addptr %27, %19 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc21)
    %29 = tt.load %28, %22, %cst_3 : tensor<32x64x!tt.ptr<f32>> loc(#loc22)
    %30 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc23)
    %31 = tt.addptr %30, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc23)
    %32 = tt.load %31, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc24)
    %33 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc25)
    %34 = tt.addptr %33, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc25)
    %35 = tt.load %34, %6 evictionPolicy = evict_last : tensor<32x1x!tt.ptr<f32>> loc(#loc26)
    %36 = arith.addf %12, %15 : tensor<32x1xf32> loc(#loc27)
    %37 = tt.broadcast %26 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc28)
    %38 = arith.addf %23, %37 : tensor<32x64xf32> loc(#loc28)
    %39 = arith.select %22, %38, %cst_3 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc29)
    %40 = "tt.reduce"(%39) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc31)), %arg13: f32 loc(callsite(#loc1 at #loc31))):
      %73 = arith.addf %arg12, %arg13 : f32 loc(#loc77)
      tt.reduce.return %73 : f32 loc(#loc66)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc66)
    %41 = tt.expand_dims %40 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc33)
    %42 = arith.divf %41, %cst_2 : tensor<32x1xf32> loc(#loc34)
    %43 = tt.broadcast %42 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc35)
    %44 = arith.subf %38, %43 : tensor<32x64xf32> loc(#loc35)
    %45 = arith.mulf %44, %44 : tensor<32x64xf32> loc(#loc36)
    %46 = arith.select %22, %45, %cst_3 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc37)
    %47 = "tt.reduce"(%46) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc38)), %arg13: f32 loc(callsite(#loc1 at #loc38))):
      %73 = arith.addf %arg12, %arg13 : f32 loc(#loc78)
      tt.reduce.return %73 : f32 loc(#loc69)
    }) : (tensor<32x64xf32>) -> tensor<32xf32> loc(#loc69)
    %48 = tt.expand_dims %47 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc39)
    %49 = tt.broadcast %32 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc40)
    %50 = arith.subf %29, %49 : tensor<32x64xf32> loc(#loc40)
    %51 = tt.broadcast %35 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc41)
    %52 = arith.mulf %50, %51 : tensor<32x64xf32> loc(#loc41)
    %53 = arith.subf %cst, %36 : tensor<32x1xf32> loc(#loc71)
    %54 = math.exp %53 : tensor<32x1xf32> loc(#loc72)
    %55 = arith.addf %54, %cst_0 : tensor<32x1xf32> loc(#loc73)
    %56 = arith.divf %cst_0, %55 : tensor<32x1xf32> loc(#loc74)
    %57 = tt.broadcast %56 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc47)
    %58 = arith.mulf %52, %57 : tensor<32x64xf32> loc(#loc47)
    %59 = arith.divf %48, %cst_2 : tensor<32x1xf32> loc(#loc48)
    %60 = arith.addf %59, %cst_1 : tensor<32x1xf32> loc(#loc49)
    %61 = tt.extern_elementwise %60 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<32x1xf32>) -> tensor<32x1xf32> loc(#loc50)
    %62 = tt.broadcast %61 : tensor<32x1xf32> -> tensor<32x64xf32> loc(#loc51)
    %63 = arith.mulf %44, %62 : tensor<32x64xf32> loc(#loc51)
    %64 = arith.addf %58, %63 : tensor<32x64xf32> loc(#loc52)
    %65 = arith.cmpf ogt, %cst_3, %64 : tensor<32x64xf32> loc(#loc75)
    %66 = arith.select %65, %cst_3, %64 : tensor<32x64xi1>, tensor<32x64xf32> loc(#loc76)
    gpu.barrier loc(#loc56)
    tt.store %11, %36, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc57)
    tt.store %21, %38, %22 : tensor<32x64x!tt.ptr<f32>> loc(#loc58)
    %67 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc59)
    %68 = tt.addptr %67, %19 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc59)
    tt.store %68, %66, %22 : tensor<32x64x!tt.ptr<f32>> loc(#loc60)
    %69 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc61)
    %70 = tt.addptr %69, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc61)
    tt.store %70, %61, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc62)
    %71 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc63)
    %72 = tt.addptr %71, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc63)
    tt.store %72, %42, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc64)
    tt.return loc(#loc65)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":23:28)
#loc3 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":23:33)
#loc4 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":24:36)
#loc5 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":24:44)
#loc6 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":24:23)
#loc7 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":25:21)
#loc8 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":26:26)
#loc9 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":26:34)
#loc10 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":30:19)
#loc11 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":32:34)
#loc12 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":32:39)
#loc13 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":33:30)
#loc14 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":33:35)
#loc15 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:42)
#loc16 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:39)
#loc17 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:34)
#loc18 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":34:47)
#loc19 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":35:30)
#loc20 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":35:35)
#loc21 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":36:31)
#loc22 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":36:44)
#loc23 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":37:31)
#loc24 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":37:36)
#loc25 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":38:31)
#loc26 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":38:36)
#loc27 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":39:18)
#loc28 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":40:18)
#loc29 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":44:34)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc33 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":45:29)
#loc34 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":48:20)
#loc35 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":49:19)
#loc36 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":50:20)
#loc37 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":52:35)
#loc39 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":53:29)
#loc40 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":54:20)
#loc41 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":55:20)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc43 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":56:23)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc47 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":57:20)
#loc48 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":60:20)
#loc49 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":62:20)
#loc50 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":63:28)
#loc51 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":64:20)
#loc52 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":65:20)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc54 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":67:42)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc56 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":68:4)
#loc57 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":69:39)
#loc58 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":70:47)
#loc59 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":71:25)
#loc60 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":71:45)
#loc61 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":72:25)
#loc62 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":72:37)
#loc63 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":73:25)
#loc64 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":73:37)
#loc65 = loc("inductor_cache/v4/cv4d3gerhh3expejgexnrw23a23edwclwcq4nuuew2cyu646iixg.py":73:4)
#loc66 = loc(callsite(#loc30 at #loc31))
#loc68 = loc(callsite(#loc32 at #loc30))
#loc69 = loc(callsite(#loc30 at #loc38))
#loc71 = loc(callsite(#loc42 at #loc43))
#loc72 = loc(callsite(#loc44 at #loc43))
#loc73 = loc(callsite(#loc45 at #loc43))
#loc74 = loc(callsite(#loc46 at #loc43))
#loc75 = loc(callsite(#loc53 at #loc54))
#loc76 = loc(callsite(#loc55 at #loc54))
#loc77 = loc(callsite(#loc68 at #loc31))
#loc78 = loc(callsite(#loc68 at #loc38))
