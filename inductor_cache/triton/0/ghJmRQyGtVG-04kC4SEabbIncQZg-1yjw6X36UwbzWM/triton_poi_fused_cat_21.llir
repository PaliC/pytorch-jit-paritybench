; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_21(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 7, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 127, !dbg !12
  %12 = or disjoint i32 %9, %11, !dbg !13
  %.frozen = freeze i32 %12, !dbg !14
  %13 = sdiv i32 %.frozen, 256, !dbg !14
  %14 = srem i32 %13, 20, !dbg !15
  %15 = mul i32 %13, 256, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %.frozen1 = freeze i32 %12, !dbg !17
  %16 = sdiv i32 %.frozen1, 5120, !dbg !17
  %17 = icmp slt i32 %14, 4, !dbg !18
  %18 = mul i32 %16, 5120, !dbg !19
  %srem.decomposed = sub i32 %.frozen1, %18, !dbg !19
  %19 = shl nsw i32 %16, 10, !dbg !20
  %20 = add nsw i32 %19, %srem.decomposed, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %17, i32 0, i1 %17) #1, !dbg !23
  %24 = and i32 %14, -4, !dbg !24
  %25 = icmp eq i32 %24, 4, !dbg !24
  %26 = shl nsw i32 %14, 8, !dbg !25
  %27 = add nsw i32 %19, %.decomposed, !dbg !25
  %28 = add nsw i32 %27, -1024, !dbg !26
  %29 = add nsw i32 %28, %26, !dbg !27
  %30 = sext i32 %29 to i64, !dbg !28
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !28
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %25, i32 0, i1 %25) #1, !dbg !29
  %33 = icmp eq i32 %24, 8, !dbg !30
  %34 = add nsw i32 %27, -2048, !dbg !31
  %35 = add nsw i32 %34, %26, !dbg !32
  %36 = sext i32 %35 to i64, !dbg !33
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !33
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %33, i32 0, i1 %33) #1, !dbg !34
  %39 = bitcast i32 %38 to float, !dbg !34
  %40 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !35
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %33, i32 0, i1 %33) #1, !dbg !36
  %42 = bitcast i32 %41 to float, !dbg !36
  %43 = fadd float %39, %42, !dbg !37
  %44 = icmp eq i32 %24, 12, !dbg !38
  %45 = add nsw i32 %27, -3072, !dbg !39
  %46 = add nsw i32 %45, %26, !dbg !40
  %47 = sext i32 %46 to i64, !dbg !41
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !41
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %44, i32 0, i1 %44) #1, !dbg !42
  %50 = bitcast i32 %49 to float, !dbg !42
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !43
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %44, i32 0, i1 %44) #1, !dbg !44
  %53 = bitcast i32 %52 to float, !dbg !44
  %54 = fadd float %50, %53, !dbg !45
  %55 = getelementptr float, ptr addrspace(1) %3, i64 %47, !dbg !46
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %44, i32 0, i1 %44) #1, !dbg !47
  %57 = bitcast i32 %56 to float, !dbg !47
  %58 = fadd float %54, %57, !dbg !48
  %59 = icmp sgt i32 %14, 15, !dbg !49
  %60 = add nsw i32 %27, -4096, !dbg !50
  %61 = add nsw i32 %60, %26, !dbg !51
  %62 = sext i32 %61 to i64, !dbg !52
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %62, !dbg !52
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %59, i32 0, i1 %59) #1, !dbg !53
  %65 = bitcast i32 %64 to float, !dbg !53
  %66 = getelementptr float, ptr addrspace(1) %2, i64 %62, !dbg !54
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %59, i32 0, i1 %59) #1, !dbg !55
  %68 = bitcast i32 %67 to float, !dbg !55
  %69 = fadd float %65, %68, !dbg !56
  %70 = getelementptr float, ptr addrspace(1) %3, i64 %62, !dbg !57
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %59, i32 0, i1 %59) #1, !dbg !58
  %72 = bitcast i32 %71 to float, !dbg !58
  %73 = fadd float %69, %72, !dbg !59
  %74 = getelementptr float, ptr addrspace(1) %4, i64 %62, !dbg !60
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %59, i32 0, i1 %59) #1, !dbg !61
  %76 = bitcast i32 %75 to float, !dbg !61
  %77 = fadd float %73, %76, !dbg !62
  %78 = select i1 %59, float %77, float 0.000000e+00, !dbg !63
  %79 = select i1 %44, float %58, float %78, !dbg !64
  %80 = select i1 %33, float %43, float %79, !dbg !64
  %81 = sext i32 %12 to i64, !dbg !65
  %82 = getelementptr float, ptr addrspace(1) %5, i64 %81, !dbg !65
  %83 = bitcast float %80 to i32, !dbg !66
  %84 = select i1 %25, i32 %32, i32 %83, !dbg !67
  %85 = select i1 %17, i32 %23, i32 %84, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %85, ptr addrspace(1) %82, i1 true) #1, !dbg !66
  ret void, !dbg !69
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3zydpti4wamxr2auqa3jims72vewwyufdzfkhozxxg54tf7nzqc.py", directory: "inductor_cache/3z")
!4 = !{ptr @triton_poi_fused_cat_21, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_21, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_21", linkageName: "triton_poi_fused_cat_21", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 33, column: 51, scope: !7)
!21 = !DILocation(line: 33, column: 46, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 56, scope: !7)
!24 = !DILocation(line: 37, column: 18, scope: !7)
!25 = !DILocation(line: 38, column: 41, scope: !7)
!26 = !DILocation(line: 38, column: 36, scope: !7)
!27 = !DILocation(line: 38, column: 54, scope: !7)
!28 = !DILocation(line: 38, column: 31, scope: !7)
!29 = !DILocation(line: 38, column: 64, scope: !7)
!30 = !DILocation(line: 42, column: 20, scope: !7)
!31 = !DILocation(line: 43, column: 36, scope: !7)
!32 = !DILocation(line: 43, column: 54, scope: !7)
!33 = !DILocation(line: 43, column: 31, scope: !7)
!34 = !DILocation(line: 43, column: 64, scope: !7)
!35 = !DILocation(line: 44, column: 31, scope: !7)
!36 = !DILocation(line: 44, column: 64, scope: !7)
!37 = !DILocation(line: 45, column: 20, scope: !7)
!38 = !DILocation(line: 51, column: 20, scope: !7)
!39 = !DILocation(line: 52, column: 36, scope: !7)
!40 = !DILocation(line: 52, column: 55, scope: !7)
!41 = !DILocation(line: 52, column: 31, scope: !7)
!42 = !DILocation(line: 52, column: 65, scope: !7)
!43 = !DILocation(line: 53, column: 31, scope: !7)
!44 = !DILocation(line: 53, column: 65, scope: !7)
!45 = !DILocation(line: 54, column: 20, scope: !7)
!46 = !DILocation(line: 55, column: 31, scope: !7)
!47 = !DILocation(line: 55, column: 65, scope: !7)
!48 = !DILocation(line: 56, column: 20, scope: !7)
!49 = !DILocation(line: 59, column: 20, scope: !7)
!50 = !DILocation(line: 62, column: 36, scope: !7)
!51 = !DILocation(line: 62, column: 55, scope: !7)
!52 = !DILocation(line: 62, column: 31, scope: !7)
!53 = !DILocation(line: 62, column: 65, scope: !7)
!54 = !DILocation(line: 63, column: 31, scope: !7)
!55 = !DILocation(line: 63, column: 65, scope: !7)
!56 = !DILocation(line: 64, column: 20, scope: !7)
!57 = !DILocation(line: 65, column: 31, scope: !7)
!58 = !DILocation(line: 65, column: 65, scope: !7)
!59 = !DILocation(line: 66, column: 20, scope: !7)
!60 = !DILocation(line: 67, column: 31, scope: !7)
!61 = !DILocation(line: 67, column: 65, scope: !7)
!62 = !DILocation(line: 68, column: 20, scope: !7)
!63 = !DILocation(line: 70, column: 35, scope: !7)
!64 = !DILocation(line: 0, scope: !7)
!65 = !DILocation(line: 75, column: 25, scope: !7)
!66 = !DILocation(line: 75, column: 37, scope: !7)
!67 = !DILocation(line: 73, column: 34, scope: !7)
!68 = !DILocation(line: 74, column: 33, scope: !7)
!69 = !DILocation(line: 75, column: 4, scope: !7)
