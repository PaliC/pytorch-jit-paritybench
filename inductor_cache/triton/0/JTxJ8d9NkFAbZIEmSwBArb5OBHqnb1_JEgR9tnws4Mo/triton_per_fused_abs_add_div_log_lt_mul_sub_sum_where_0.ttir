#loc = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":19:0)
#loc1 = loc(unknown)
#loc34 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":52:26)
#loc41 = loc(callsite(#loc1 at #loc34))
module {
  tt.func public @triton_per_fused_abs_add_div_log_lt_mul_sub_sum_where_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-30.1887589> : tensor<8x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<2.000000e+01> : tensor<8x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<8x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<8x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<8x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<8x1xi32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32> -> tensor<8x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<8x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_7 : tensor<8x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_6 : tensor<8x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_6 : tensor<8x1xi32> loc(#loc11)
    %11 = arith.muli %8, %cst_5 : tensor<1x16xi32> loc(#loc12)
    %12 = tt.broadcast %9 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc13)
    %13 = tt.broadcast %11 : tensor<1x16xi32> -> tensor<8x16xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<8x16xi32> loc(#loc13)
    %15 = arith.muli %10, %cst_4 : tensor<8x1xi32> loc(#loc14)
    %16 = tt.broadcast %15 : tensor<8x1xi32> -> tensor<8x16xi32> loc(#loc15)
    %17 = arith.addi %14, %16 : tensor<8x16xi32> loc(#loc15)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.addptr %18, %17 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc16)
    %20 = tt.broadcast %6 : tensor<8x1xi1> -> tensor<8x16xi1> loc(#loc17)
    %21 = tt.load %19, %20, %cst_3 : tensor<8x16x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.addptr %22, %17 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc18)
    %24 = tt.load %23, %20, %cst_3 : tensor<8x16x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x16x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.addptr %25, %17 : tensor<8x16x!tt.ptr<f32>>, tensor<8x16xi32> loc(#loc20)
    %27 = tt.load %26, %20, %cst_3 : tensor<8x16x!tt.ptr<f32>> loc(#loc21)
    %28 = arith.subf %21, %24 : tensor<8x16xf32> loc(#loc22)
    %29 = math.absf %28 : tensor<8x16xf32> loc(#loc23)
    %30 = arith.mulf %29, %27 : tensor<8x16xf32> loc(#loc24)
    %31 = arith.cmpf olt, %30, %cst_2 : tensor<8x16xf32> loc(#loc25)
    %32 = arith.mulf %30, %cst_2 : tensor<8x16xf32> loc(#loc26)
    %33 = arith.addf %32, %cst_1 : tensor<8x16xf32> loc(#loc27)
    %34 = math.log %33 : tensor<8x16xf32> loc(#loc28)
    %35 = arith.mulf %34, %cst_0 : tensor<8x16xf32> loc(#loc29)
    %36 = arith.addf %35, %cst : tensor<8x16xf32> loc(#loc30)
    %37 = arith.select %31, %30, %36 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc31)
    %38 = arith.select %20, %37, %cst_3 : tensor<8x16xi1>, tensor<8x16xf32> loc(#loc32)
    %39 = "tt.reduce"(%38) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc34)), %arg7: f32 loc(callsite(#loc1 at #loc34))):
      %43 = arith.addf %arg6, %arg7 : f32 loc(#loc43)
      tt.reduce.return %43 : f32 loc(#loc40)
    }) : (tensor<8x16xf32>) -> tensor<8xf32> loc(#loc40)
    %40 = tt.expand_dims %39 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc36)
    %41 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>> loc(#loc37)
    %42 = tt.addptr %41, %5 : tensor<8x1x!tt.ptr<f32>>, tensor<8x1xi32> loc(#loc37)
    tt.store %42, %40, %6 : tensor<8x1x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":23:28)
#loc3 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":23:33)
#loc4 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":24:36)
#loc5 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":24:44)
#loc6 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":24:23)
#loc7 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":25:21)
#loc8 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":26:26)
#loc9 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":26:34)
#loc10 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":30:19)
#loc11 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":31:19)
#loc12 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":33:37)
#loc13 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":33:35)
#loc14 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":33:45)
#loc15 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":33:42)
#loc16 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":33:30)
#loc17 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":33:50)
#loc18 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":34:30)
#loc19 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":34:50)
#loc20 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":35:30)
#loc21 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":35:50)
#loc22 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":36:18)
#loc23 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":37:23)
#loc24 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":38:18)
#loc25 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":40:18)
#loc26 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":41:18)
#loc27 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":43:19)
#loc28 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":44:24)
#loc29 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":46:20)
#loc30 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":48:20)
#loc31 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":49:33)
#loc32 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":51:35)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc36 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":52:29)
#loc37 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":53:25)
#loc38 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":53:37)
#loc39 = loc("inductor_cache/7c/c7csfpzjut534rbqd65pbxrgkgzfwil44otngcdmwoskrf325yh6.py":53:4)
#loc40 = loc(callsite(#loc33 at #loc34))
#loc42 = loc(callsite(#loc35 at #loc33))
#loc43 = loc(callsite(#loc42 at #loc34))
