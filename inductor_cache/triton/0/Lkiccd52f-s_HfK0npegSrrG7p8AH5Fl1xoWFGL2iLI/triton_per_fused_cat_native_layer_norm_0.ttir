#loc = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0)
#loc1 = loc(unknown)
#loc46 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":60:26)
#loc53 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":68:26)
#loc72 = loc(callsite(#loc1 at #loc46))
#loc75 = loc(callsite(#loc1 at #loc53))
module {
  tt.func public @triton_per_fused_cat_native_layer_norm_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":19:0)) attributes {noinline = false} {
    %c12_i32 = arith.constant 12 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-12> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-8> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<12> : tensor<1x16xi64> loc(#loc1)
    %cst_4 = arith.constant dense<-4> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<1x16xi64> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<1x16xi64> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc6)
    %7 = tt.load %6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %11 = arith.extsi %4 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc10)
    %12 = arith.cmpi slt, %11, %cst_7 : tensor<1x16xi64> loc(#loc10)
    %13 = arith.muli %0, %c16_i32 : i32 loc(#loc11)
    %14 = tt.splat %13 : i32 -> tensor<1x16xi32> loc(#loc12)
    %15 = arith.addi %14, %4 : tensor<1x16xi32> loc(#loc12)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.addptr %16, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc13)
    %18 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc14)
    %19 = arith.andi %12, %18 : tensor<1x16xi1> loc(#loc14)
    %20 = tt.load %17, %19, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %21 = arith.cmpi sge, %11, %cst_7 : tensor<1x16xi64> loc(#loc16)
    %22 = arith.cmpi slt, %11, %cst_5 : tensor<1x16xi64> loc(#loc17)
    %23 = arith.andi %21, %22 : tensor<1x16xi1> loc(#loc18)
    %24 = arith.addi %13, %c4_i32 : i32 loc(#loc19)
    %25 = arith.addi %4, %cst_4 : tensor<1x16xi32> loc(#loc20)
    %26 = tt.splat %24 : i32 -> tensor<1x16xi32> loc(#loc21)
    %27 = arith.addi %26, %25 : tensor<1x16xi32> loc(#loc21)
    %28 = tt.addptr %16, %27 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc22)
    %29 = arith.andi %23, %18 : tensor<1x16xi1> loc(#loc23)
    %30 = tt.load %28, %29, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc24)
    %31 = arith.cmpi sge, %11, %cst_5 : tensor<1x16xi64> loc(#loc25)
    %32 = arith.cmpi slt, %11, %cst_3 : tensor<1x16xi64> loc(#loc26)
    %33 = arith.andi %31, %32 : tensor<1x16xi1> loc(#loc27)
    %34 = arith.addi %13, %c8_i32 : i32 loc(#loc28)
    %35 = arith.addi %4, %cst_2 : tensor<1x16xi32> loc(#loc29)
    %36 = tt.splat %34 : i32 -> tensor<1x16xi32> loc(#loc30)
    %37 = arith.addi %36, %35 : tensor<1x16xi32> loc(#loc30)
    %38 = tt.addptr %16, %37 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc31)
    %39 = arith.andi %33, %18 : tensor<1x16xi1> loc(#loc32)
    %40 = tt.load %38, %39, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc33)
    %41 = arith.cmpi sge, %11, %cst_3 : tensor<1x16xi64> loc(#loc34)
    %42 = arith.addi %13, %c12_i32 : i32 loc(#loc35)
    %43 = arith.addi %4, %cst_1 : tensor<1x16xi32> loc(#loc36)
    %44 = tt.splat %42 : i32 -> tensor<1x16xi32> loc(#loc37)
    %45 = arith.addi %44, %43 : tensor<1x16xi32> loc(#loc37)
    %46 = tt.addptr %16, %45 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc38)
    %47 = arith.andi %41, %18 : tensor<1x16xi1> loc(#loc39)
    %48 = tt.load %46, %47, %cst_6 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc40)
    %49 = arith.select %33, %40, %48 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc41)
    %50 = arith.select %23, %30, %49 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc42)
    %51 = arith.select %12, %20, %50 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc43)
    %52 = arith.select %18, %51, %cst_6 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc44)
    %53 = "tt.reduce"(%52) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc46)), %arg10: f32 loc(callsite(#loc1 at #loc46))):
      %77 = arith.addf %arg9, %arg10 : f32 loc(#loc76)
      tt.reduce.return %77 : f32 loc(#loc71)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc71)
    %54 = tt.expand_dims %53 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc48)
    %55 = arith.divf %54, %cst_0 : tensor<1x1xf32> loc(#loc49)
    %56 = tt.broadcast %55 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc50)
    %57 = arith.subf %51, %56 : tensor<1x16xf32> loc(#loc50)
    %58 = arith.mulf %57, %57 : tensor<1x16xf32> loc(#loc51)
    %59 = arith.select %18, %58, %cst_6 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc52)
    %60 = "tt.reduce"(%59) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc53)), %arg10: f32 loc(callsite(#loc1 at #loc53))):
      %77 = arith.addf %arg9, %arg10 : f32 loc(#loc77)
      tt.reduce.return %77 : f32 loc(#loc74)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc74)
    %61 = tt.expand_dims %60 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc54)
    %62 = arith.divf %61, %cst_0 : tensor<1x1xf32> loc(#loc55)
    %63 = arith.addf %62, %cst : tensor<1x1xf32> loc(#loc56)
    %64 = tt.extern_elementwise %63 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc57)
    %65 = tt.broadcast %64 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc58)
    %66 = arith.mulf %57, %65 : tensor<1x16xf32> loc(#loc58)
    %67 = arith.mulf %66, %7 : tensor<1x16xf32> loc(#loc59)
    %68 = arith.addf %67, %10 : tensor<1x16xf32> loc(#loc60)
    %69 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc61)
    %70 = tt.addptr %69, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc61)
    tt.store %70, %51, %18 : tensor<1x16x!tt.ptr<f32>> loc(#loc62)
    gpu.barrier loc(#loc63)
    %71 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc64)
    %72 = tt.splat %71 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc64)
    tt.store %72, %64, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc65)
    %73 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc66)
    %74 = tt.addptr %73, %15 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc66)
    tt.store %74, %68, %18 : tensor<1x16x!tt.ptr<f32>> loc(#loc67)
    %75 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc68)
    %76 = tt.splat %75 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc68)
    tt.store %76, %55, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc69)
    tt.return loc(#loc70)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":23:28)
#loc3 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":25:21)
#loc4 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":26:26)
#loc5 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":26:34)
#loc6 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":31:31)
#loc7 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":31:36)
#loc8 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":32:31)
#loc9 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":32:36)
#loc10 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":37:18)
#loc11 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":38:33)
#loc12 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":38:39)
#loc13 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":38:30)
#loc14 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":38:52)
#loc15 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":38:45)
#loc16 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":39:19)
#loc17 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":41:18)
#loc18 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":42:18)
#loc19 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":43:35)
#loc20 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":43:51)
#loc21 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":43:44)
#loc22 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":43:31)
#loc23 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":43:64)
#loc24 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":43:57)
#loc25 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":44:20)
#loc26 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":46:19)
#loc27 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":47:20)
#loc28 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":48:35)
#loc29 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":48:51)
#loc30 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":48:44)
#loc31 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":48:31)
#loc32 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":48:65)
#loc33 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":48:57)
#loc34 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":49:20)
#loc35 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":52:36)
#loc36 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":52:53)
#loc37 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":52:45)
#loc38 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":52:31)
#loc39 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":52:67)
#loc40 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":52:59)
#loc41 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":53:35)
#loc42 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":54:34)
#loc43 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":55:33)
#loc44 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":59:35)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc48 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":60:29)
#loc49 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":63:20)
#loc50 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":64:20)
#loc51 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":65:20)
#loc52 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":67:35)
#loc54 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":68:29)
#loc55 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":70:20)
#loc56 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":72:20)
#loc57 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":73:28)
#loc58 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":75:20)
#loc59 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":76:20)
#loc60 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":77:20)
#loc61 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":78:25)
#loc62 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":78:45)
#loc63 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":79:4)
#loc64 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":80:28)
#loc65 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":80:40)
#loc66 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":81:25)
#loc67 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":81:45)
#loc68 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":82:25)
#loc69 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":82:37)
#loc70 = loc("inductor_cache/rz/crz36ccqgiyb2nm4fbsqgqt6k2nolo7caqesm3sybn2hop6h7oqt.py":82:4)
#loc71 = loc(callsite(#loc45 at #loc46))
#loc73 = loc(callsite(#loc47 at #loc45))
#loc74 = loc(callsite(#loc45 at #loc53))
#loc76 = loc(callsite(#loc73 at #loc46))
#loc77 = loc(callsite(#loc73 at #loc53))
