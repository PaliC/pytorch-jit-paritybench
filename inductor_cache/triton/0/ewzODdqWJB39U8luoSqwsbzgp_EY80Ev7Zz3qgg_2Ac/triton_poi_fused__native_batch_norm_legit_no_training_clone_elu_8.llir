; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 9, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 2, !dbg !12
  %12 = and i32 %11, 508, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %.frozen = freeze i32 %13, !dbg !14
  %14 = sdiv i32 %.frozen, 16384, !dbg !14
  %15 = mul i32 %14, 16384, !dbg !15
  %.decomposed = sub i32 %.frozen, %15, !dbg !15
  %16 = sdiv i32 %13, 64, !dbg !16
  %17 = srem i32 %16, 256, !dbg !17
  %18 = add nsw i32 %.decomposed, 32768, !dbg !18
  %19 = mul i32 %14, 49152, !dbg !19
  %20 = add i32 %18, %19, !dbg !20
  %21 = sext i32 %20 to i64, !dbg !21
  %22 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !21
  %23 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %22, i1 true) #3, !dbg !22
  %24 = extractvalue { i32, i32, i32, i32 } %23, 0, !dbg !22
  %25 = extractvalue { i32, i32, i32, i32 } %23, 1, !dbg !22
  %26 = extractvalue { i32, i32, i32, i32 } %23, 2, !dbg !22
  %27 = extractvalue { i32, i32, i32, i32 } %23, 3, !dbg !22
  %28 = sext i32 %17 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #3, !dbg !24
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #3, !dbg !24
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #3, !dbg !24
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #3, !dbg !24
  %34 = insertelement <4 x i32> poison, i32 %27, i64 0, !dbg !22
  %35 = insertelement <4 x i32> %34, i32 %24, i64 1, !dbg !22
  %36 = insertelement <4 x i32> %35, i32 %25, i64 2, !dbg !22
  %37 = insertelement <4 x i32> %36, i32 %26, i64 3, !dbg !22
  %38 = bitcast <4 x i32> %37 to <4 x float>, !dbg !22
  %39 = insertelement <4 x i32> poison, i32 %33, i64 0, !dbg !24
  %40 = insertelement <4 x i32> %39, i32 %30, i64 1, !dbg !24
  %41 = insertelement <4 x i32> %40, i32 %31, i64 2, !dbg !24
  %42 = insertelement <4 x i32> %41, i32 %32, i64 3, !dbg !24
  %43 = bitcast <4 x i32> %42 to <4 x float>, !dbg !24
  %44 = getelementptr float, ptr addrspace(1) %3, i64 %28, !dbg !25
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !26
  %46 = bitcast i32 %45 to float, !dbg !26
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !26
  %48 = bitcast i32 %47 to float, !dbg !26
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !26
  %50 = bitcast i32 %49 to float, !dbg !26
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !26
  %52 = bitcast i32 %51 to float, !dbg !26
  %53 = getelementptr float, ptr addrspace(1) %4, i64 %28, !dbg !27
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #3, !dbg !28
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #3, !dbg !28
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #3, !dbg !28
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 true) #3, !dbg !28
  %58 = insertelement <4 x i32> poison, i32 %57, i64 0, !dbg !28
  %59 = insertelement <4 x i32> %58, i32 %54, i64 1, !dbg !28
  %60 = insertelement <4 x i32> %59, i32 %55, i64 2, !dbg !28
  %61 = insertelement <4 x i32> %60, i32 %56, i64 3, !dbg !28
  %62 = bitcast <4 x i32> %61 to <4 x float>, !dbg !28
  %63 = getelementptr float, ptr addrspace(1) %5, i64 %28, !dbg !29
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #3, !dbg !30
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #3, !dbg !30
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #3, !dbg !30
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #3, !dbg !30
  %68 = insertelement <4 x i32> poison, i32 %67, i64 0, !dbg !30
  %69 = insertelement <4 x i32> %68, i32 %64, i64 1, !dbg !30
  %70 = insertelement <4 x i32> %69, i32 %65, i64 2, !dbg !30
  %71 = insertelement <4 x i32> %70, i32 %66, i64 3, !dbg !30
  %72 = bitcast <4 x i32> %71 to <4 x float>, !dbg !30
  %73 = fsub <4 x float> %38, %43, !dbg !31
  %74 = fadd float %46, 0x3F1A36E2E0000000, !dbg !32
  %75 = fadd float %48, 0x3F1A36E2E0000000, !dbg !32
  %76 = fadd float %50, 0x3F1A36E2E0000000, !dbg !32
  %77 = fadd float %52, 0x3F1A36E2E0000000, !dbg !32
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i = icmp eq i32 %78, 0, !dbg !33
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !33
  %.not1.i = icmp eq i32 %79, 0, !dbg !33
  br i1 %.not.i, label %85, label %80, !dbg !33

80:                                               ; preds = %7
  br i1 %.not1.i, label %83, label %81, !dbg !33

81:                                               ; preds = %80
  %82 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %74) #3, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

83:                                               ; preds = %80
  %84 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %74) #3, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

85:                                               ; preds = %7
  br i1 %.not1.i, label %88, label %86, !dbg !33

86:                                               ; preds = %85
  %87 = tail call float @llvm.nvvm.sqrt.rn.f(float %74) #3, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

88:                                               ; preds = %85
  %89 = tail call float @llvm.nvvm.sqrt.approx.f(float %74) #3, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

__nv_sqrtf.exit:                                  ; preds = %81, %83, %86, %88
  %.0.i = phi float [ %82, %81 ], [ %84, %83 ], [ %87, %86 ], [ %89, %88 ], !dbg !33
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i1 = icmp eq i32 %90, 0, !dbg !33
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !33
  %.not1.i4 = icmp eq i32 %91, 0, !dbg !33
  br i1 %.not.i1, label %97, label %92, !dbg !33

92:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %95, label %93, !dbg !33

93:                                               ; preds = %92
  %94 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %75) #3, !dbg !33
  br label %__nv_sqrtf.exit5, !dbg !33

95:                                               ; preds = %92
  %96 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %75) #3, !dbg !33
  br label %__nv_sqrtf.exit5, !dbg !33

97:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %100, label %98, !dbg !33

98:                                               ; preds = %97
  %99 = tail call float @llvm.nvvm.sqrt.rn.f(float %75) #3, !dbg !33
  br label %__nv_sqrtf.exit5, !dbg !33

100:                                              ; preds = %97
  %101 = tail call float @llvm.nvvm.sqrt.approx.f(float %75) #3, !dbg !33
  br label %__nv_sqrtf.exit5, !dbg !33

__nv_sqrtf.exit5:                                 ; preds = %93, %95, %98, %100
  %.0.i3 = phi float [ %94, %93 ], [ %96, %95 ], [ %99, %98 ], [ %101, %100 ], !dbg !33
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i6 = icmp eq i32 %102, 0, !dbg !33
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !33
  %.not1.i9 = icmp eq i32 %103, 0, !dbg !33
  br i1 %.not.i6, label %109, label %104, !dbg !33

104:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %107, label %105, !dbg !33

105:                                              ; preds = %104
  %106 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %76) #3, !dbg !33
  br label %__nv_sqrtf.exit10, !dbg !33

107:                                              ; preds = %104
  %108 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %76) #3, !dbg !33
  br label %__nv_sqrtf.exit10, !dbg !33

109:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %112, label %110, !dbg !33

110:                                              ; preds = %109
  %111 = tail call float @llvm.nvvm.sqrt.rn.f(float %76) #3, !dbg !33
  br label %__nv_sqrtf.exit10, !dbg !33

112:                                              ; preds = %109
  %113 = tail call float @llvm.nvvm.sqrt.approx.f(float %76) #3, !dbg !33
  br label %__nv_sqrtf.exit10, !dbg !33

__nv_sqrtf.exit10:                                ; preds = %105, %107, %110, %112
  %.0.i8 = phi float [ %106, %105 ], [ %108, %107 ], [ %111, %110 ], [ %113, %112 ], !dbg !33
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i11 = icmp eq i32 %114, 0, !dbg !33
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !33
  %.not1.i14 = icmp eq i32 %115, 0, !dbg !33
  br i1 %.not.i11, label %121, label %116, !dbg !33

116:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %119, label %117, !dbg !33

117:                                              ; preds = %116
  %118 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %77) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

119:                                              ; preds = %116
  %120 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %77) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

121:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %124, label %122, !dbg !33

122:                                              ; preds = %121
  %123 = tail call float @llvm.nvvm.sqrt.rn.f(float %77) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

124:                                              ; preds = %121
  %125 = tail call float @llvm.nvvm.sqrt.approx.f(float %77) #3, !dbg !33
  br label %__nv_sqrtf.exit15, !dbg !33

__nv_sqrtf.exit15:                                ; preds = %117, %119, %122, %124
  %.0.i13 = phi float [ %118, %117 ], [ %120, %119 ], [ %123, %122 ], [ %125, %124 ], !dbg !33
  %126 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !34
  %127 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !34
  %128 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !34
  %129 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !34
  %130 = insertelement <4 x float> poison, float %129, i64 0, !dbg !35
  %131 = insertelement <4 x float> %130, float %126, i64 1, !dbg !35
  %132 = insertelement <4 x float> %131, float %127, i64 2, !dbg !35
  %133 = insertelement <4 x float> %132, float %128, i64 3, !dbg !35
  %134 = fmul <4 x float> %73, %133, !dbg !35
  %135 = fmul <4 x float> %134, %62, !dbg !36
  %136 = fadd <4 x float> %135, %72, !dbg !37
  %137 = extractelement <4 x float> %136, i64 1, !dbg !38
  %138 = fmul float %137, 0x3FF7154760000000, !dbg !38
  %139 = tail call float @llvm.nvvm.round.f(float %138) #3, !dbg !38
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i16 = icmp eq i32 %140, 0, !dbg !38
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float %137) #3, !dbg !38
  %142 = tail call float @llvm.nvvm.fabs.f(float %137) #3, !dbg !38
  %.03.i = select i1 %.not.i16, float %142, float %141, !dbg !38
  %143 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !38
  %t.0.i = select i1 %143, float 0.000000e+00, float %139, !dbg !38
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %146 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !38
  %j.0.i = select i1 %146, float 1.270000e+02, float %t.0.i, !dbg !38
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not8.i = icmp eq i32 %152, 0, !dbg !38
  br i1 %.not8.i, label %155, label %153, !dbg !38

153:                                              ; preds = %__nv_sqrtf.exit15
  %154 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !38
  br label %__nv_expm1f.exit, !dbg !38

155:                                              ; preds = %__nv_sqrtf.exit15
  %156 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !38
  br label %__nv_expm1f.exit, !dbg !38

__nv_expm1f.exit:                                 ; preds = %153, %155
  %.0.i17 = phi float [ %154, %153 ], [ %156, %155 ], !dbg !38
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %158 = extractelement <4 x float> %136, i64 2, !dbg !38
  %159 = fmul float %158, 0x3FF7154760000000, !dbg !38
  %160 = tail call float @llvm.nvvm.round.f(float %159) #3, !dbg !38
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i20 = icmp eq i32 %161, 0, !dbg !38
  %162 = tail call float @llvm.nvvm.fabs.ftz.f(float %158) #3, !dbg !38
  %163 = tail call float @llvm.nvvm.fabs.f(float %158) #3, !dbg !38
  %.03.i21 = select i1 %.not.i20, float %163, float %162, !dbg !38
  %164 = fcmp olt float %.03.i21, 0x3FDA3D70A0000000, !dbg !38
  %t.0.i22 = select i1 %164, float 0.000000e+00, float %160, !dbg !38
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %167 = fcmp oeq float %t.0.i22, 1.280000e+02, !dbg !38
  %j.0.i23 = select i1 %167, float 1.270000e+02, float %t.0.i22, !dbg !38
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not8.i24 = icmp eq i32 %173, 0, !dbg !38
  br i1 %.not8.i24, label %176, label %174, !dbg !38

174:                                              ; preds = %__nv_expm1f.exit
  %175 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i23) #3, !dbg !38
  br label %__nv_expm1f.exit46, !dbg !38

176:                                              ; preds = %__nv_expm1f.exit
  %177 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i23) #3, !dbg !38
  br label %__nv_expm1f.exit46, !dbg !38

__nv_expm1f.exit46:                               ; preds = %174, %176
  %.0.i25 = phi float [ %175, %174 ], [ %177, %176 ], !dbg !38
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %179 = extractelement <4 x float> %136, i64 3, !dbg !38
  %180 = fmul float %179, 0x3FF7154760000000, !dbg !38
  %181 = tail call float @llvm.nvvm.round.f(float %180) #3, !dbg !38
  %182 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i47 = icmp eq i32 %182, 0, !dbg !38
  %183 = tail call float @llvm.nvvm.fabs.ftz.f(float %179) #3, !dbg !38
  %184 = tail call float @llvm.nvvm.fabs.f(float %179) #3, !dbg !38
  %.03.i48 = select i1 %.not.i47, float %184, float %183, !dbg !38
  %185 = fcmp olt float %.03.i48, 0x3FDA3D70A0000000, !dbg !38
  %t.0.i49 = select i1 %185, float 0.000000e+00, float %181, !dbg !38
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %188 = fcmp oeq float %t.0.i49, 1.280000e+02, !dbg !38
  %j.0.i50 = select i1 %188, float 1.270000e+02, float %t.0.i49, !dbg !38
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not8.i51 = icmp eq i32 %194, 0, !dbg !38
  br i1 %.not8.i51, label %197, label %195, !dbg !38

195:                                              ; preds = %__nv_expm1f.exit46
  %196 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i50) #3, !dbg !38
  br label %__nv_expm1f.exit73, !dbg !38

197:                                              ; preds = %__nv_expm1f.exit46
  %198 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i50) #3, !dbg !38
  br label %__nv_expm1f.exit73, !dbg !38

__nv_expm1f.exit73:                               ; preds = %195, %197
  %.0.i52 = phi float [ %196, %195 ], [ %198, %197 ], !dbg !38
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %200 = extractelement <4 x float> %136, i64 0, !dbg !38
  %201 = fmul float %200, 0x3FF7154760000000, !dbg !38
  %202 = tail call float @llvm.nvvm.round.f(float %201) #3, !dbg !38
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i74 = icmp eq i32 %203, 0, !dbg !38
  %204 = tail call float @llvm.nvvm.fabs.ftz.f(float %200) #3, !dbg !38
  %205 = tail call float @llvm.nvvm.fabs.f(float %200) #3, !dbg !38
  %.03.i75 = select i1 %.not.i74, float %205, float %204, !dbg !38
  %206 = fcmp olt float %.03.i75, 0x3FDA3D70A0000000, !dbg !38
  %t.0.i76 = select i1 %206, float 0.000000e+00, float %202, !dbg !38
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %208 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %209 = fcmp oeq float %t.0.i76, 1.280000e+02, !dbg !38
  %j.0.i77 = select i1 %209, float 1.270000e+02, float %t.0.i76, !dbg !38
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not8.i78 = icmp eq i32 %215, 0, !dbg !38
  br i1 %.not8.i78, label %218, label %216, !dbg !38

216:                                              ; preds = %__nv_expm1f.exit73
  %217 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i77) #3, !dbg !38
  br label %__nv_expm1f.exit100, !dbg !38

218:                                              ; preds = %__nv_expm1f.exit73
  %219 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i77) #3, !dbg !38
  br label %__nv_expm1f.exit100, !dbg !38

__nv_expm1f.exit100:                              ; preds = %216, %218
  %.0.i79 = phi float [ %217, %216 ], [ %219, %218 ], !dbg !38
  %220 = fcmp oeq <4 x float> %136, zeroinitializer, !dbg !38
  %221 = fadd float %179, %179, !dbg !38
  %222 = fcmp olt float %j.0.i50, -2.500000e+01, !dbg !38
  %223 = fcmp ogt float %j.0.i50, 1.280000e+02, !dbg !38
  %.not9.i67 = icmp eq i32 %199, 0, !dbg !38
  %.not7.i53 = icmp eq i32 %193, 0, !dbg !38
  %.not6.i54 = icmp eq i32 %192, 0, !dbg !38
  %.not5.i55 = icmp eq i32 %191, 0, !dbg !38
  %.not4.i56 = icmp eq i32 %190, 0, !dbg !38
  %.not3.i57 = icmp eq i32 %189, 0, !dbg !38
  %.not2.i58 = icmp eq i32 %187, 0, !dbg !38
  %224 = fneg float %t.0.i49, !dbg !38
  %.not1.i59 = icmp eq i32 %186, 0, !dbg !38
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %224, float 0x3FE62E4000000000, float %179) #3, !dbg !38
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %224, float 0x3FE62E4000000000, float %179) #3, !dbg !38
  %.04.i60 = select i1 %.not1.i59, float %225, float %226, !dbg !38
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %224, float 0x3EB7F7D1C0000000, float %.04.i60) #3, !dbg !38
  %228 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %224, float 0x3EB7F7D1C0000000, float %.04.i60) #3, !dbg !38
  %.05.i61 = select i1 %.not2.i58, float %227, float %228, !dbg !38
  %229 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i61, float 0x3F812ACC60000000) #3, !dbg !38
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i61, float 0x3F812ACC60000000) #3, !dbg !38
  %.07.i62 = select i1 %.not3.i57, float %229, float %230, !dbg !38
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i62, float %.05.i61, float 0x3FA5557C60000000) #3, !dbg !38
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i62, float %.05.i61, float 0x3FA5557C60000000) #3, !dbg !38
  %.08.i63 = select i1 %.not4.i56, float %231, float %232, !dbg !38
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i63, float %.05.i61, float 0x3FC5553EC0000000) #3, !dbg !38
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i63, float %.05.i61, float 0x3FC5553EC0000000) #3, !dbg !38
  %.09.i64 = select i1 %.not5.i55, float %233, float %234, !dbg !38
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i64, float %.05.i61, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i64, float %.05.i61, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %.06.i65 = select i1 %.not6.i54, float %235, float %236, !dbg !38
  %237 = fmul float %.05.i61, %.06.i65, !dbg !38
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %237, float %.05.i61, float %.05.i61) #3, !dbg !38
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %237, float %.05.i61, float %.05.i61) #3, !dbg !38
  %.01.i66 = select i1 %.not7.i53, float %238, float %239, !dbg !38
  %240 = fadd float %.0.i52, -1.000000e+00, !dbg !38
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i66, float %.0.i52, float %240) #3, !dbg !38
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i66, float %.0.i52, float %240) #3, !dbg !38
  %.02.i68 = select i1 %.not9.i67, float %241, float %242, !dbg !38
  %243 = fadd float %.02.i68, %.02.i68, !dbg !38
  %u.0.i69 = select i1 %188, float %243, float %.02.i68, !dbg !38
  %u.1.i70 = select i1 %223, float 0x7FF0000000000000, float %u.0.i69, !dbg !38
  %u.2.i71 = select i1 %222, float -1.000000e+00, float %u.1.i70, !dbg !38
  %244 = extractelement <4 x i1> %220, i64 3, !dbg !38
  %u.3.i72 = select i1 %244, float %221, float %u.2.i71, !dbg !38
  %245 = fadd float %158, %158, !dbg !38
  %246 = fcmp olt float %j.0.i23, -2.500000e+01, !dbg !38
  %247 = fcmp ogt float %j.0.i23, 1.280000e+02, !dbg !38
  %.not9.i40 = icmp eq i32 %178, 0, !dbg !38
  %.not7.i26 = icmp eq i32 %172, 0, !dbg !38
  %.not6.i27 = icmp eq i32 %171, 0, !dbg !38
  %.not5.i28 = icmp eq i32 %170, 0, !dbg !38
  %.not4.i29 = icmp eq i32 %169, 0, !dbg !38
  %.not3.i30 = icmp eq i32 %168, 0, !dbg !38
  %.not2.i31 = icmp eq i32 %166, 0, !dbg !38
  %248 = fneg float %t.0.i22, !dbg !38
  %.not1.i32 = icmp eq i32 %165, 0, !dbg !38
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %248, float 0x3FE62E4000000000, float %158) #3, !dbg !38
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %248, float 0x3FE62E4000000000, float %158) #3, !dbg !38
  %.04.i33 = select i1 %.not1.i32, float %249, float %250, !dbg !38
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %248, float 0x3EB7F7D1C0000000, float %.04.i33) #3, !dbg !38
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %248, float 0x3EB7F7D1C0000000, float %.04.i33) #3, !dbg !38
  %.05.i34 = select i1 %.not2.i31, float %251, float %252, !dbg !38
  %253 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i34, float 0x3F812ACC60000000) #3, !dbg !38
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i34, float 0x3F812ACC60000000) #3, !dbg !38
  %.07.i35 = select i1 %.not3.i30, float %253, float %254, !dbg !38
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i35, float %.05.i34, float 0x3FA5557C60000000) #3, !dbg !38
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i35, float %.05.i34, float 0x3FA5557C60000000) #3, !dbg !38
  %.08.i36 = select i1 %.not4.i29, float %255, float %256, !dbg !38
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i36, float %.05.i34, float 0x3FC5553EC0000000) #3, !dbg !38
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i36, float %.05.i34, float 0x3FC5553EC0000000) #3, !dbg !38
  %.09.i37 = select i1 %.not5.i28, float %257, float %258, !dbg !38
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i37, float %.05.i34, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i37, float %.05.i34, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %.06.i38 = select i1 %.not6.i27, float %259, float %260, !dbg !38
  %261 = fmul float %.05.i34, %.06.i38, !dbg !38
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %261, float %.05.i34, float %.05.i34) #3, !dbg !38
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float %.05.i34, float %.05.i34) #3, !dbg !38
  %.01.i39 = select i1 %.not7.i26, float %262, float %263, !dbg !38
  %264 = fadd float %.0.i25, -1.000000e+00, !dbg !38
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i39, float %.0.i25, float %264) #3, !dbg !38
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i39, float %.0.i25, float %264) #3, !dbg !38
  %.02.i41 = select i1 %.not9.i40, float %265, float %266, !dbg !38
  %267 = fadd float %.02.i41, %.02.i41, !dbg !38
  %u.0.i42 = select i1 %167, float %267, float %.02.i41, !dbg !38
  %u.1.i43 = select i1 %247, float 0x7FF0000000000000, float %u.0.i42, !dbg !38
  %u.2.i44 = select i1 %246, float -1.000000e+00, float %u.1.i43, !dbg !38
  %268 = extractelement <4 x i1> %220, i64 2, !dbg !38
  %u.3.i45 = select i1 %268, float %245, float %u.2.i44, !dbg !38
  %269 = fadd float %137, %137, !dbg !38
  %270 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !38
  %271 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !38
  %.not9.i = icmp eq i32 %157, 0, !dbg !38
  %.not7.i = icmp eq i32 %151, 0, !dbg !38
  %.not6.i = icmp eq i32 %150, 0, !dbg !38
  %.not5.i = icmp eq i32 %149, 0, !dbg !38
  %.not4.i = icmp eq i32 %148, 0, !dbg !38
  %.not3.i = icmp eq i32 %147, 0, !dbg !38
  %.not2.i18 = icmp eq i32 %145, 0, !dbg !38
  %272 = fneg float %t.0.i, !dbg !38
  %.not1.i19 = icmp eq i32 %144, 0, !dbg !38
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %272, float 0x3FE62E4000000000, float %137) #3, !dbg !38
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %272, float 0x3FE62E4000000000, float %137) #3, !dbg !38
  %.04.i = select i1 %.not1.i19, float %273, float %274, !dbg !38
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %272, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !38
  %276 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %272, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !38
  %.05.i = select i1 %.not2.i18, float %275, float %276, !dbg !38
  %277 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !38
  %278 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !38
  %.07.i = select i1 %.not3.i, float %277, float %278, !dbg !38
  %279 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !38
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !38
  %.08.i = select i1 %.not4.i, float %279, float %280, !dbg !38
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !38
  %282 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !38
  %.09.i = select i1 %.not5.i, float %281, float %282, !dbg !38
  %283 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %284 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %.06.i = select i1 %.not6.i, float %283, float %284, !dbg !38
  %285 = fmul float %.05.i, %.06.i, !dbg !38
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %285, float %.05.i, float %.05.i) #3, !dbg !38
  %287 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %285, float %.05.i, float %.05.i) #3, !dbg !38
  %.01.i = select i1 %.not7.i, float %286, float %287, !dbg !38
  %288 = fadd float %.0.i17, -1.000000e+00, !dbg !38
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i17, float %288) #3, !dbg !38
  %290 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i17, float %288) #3, !dbg !38
  %.02.i = select i1 %.not9.i, float %289, float %290, !dbg !38
  %291 = fadd float %.02.i, %.02.i, !dbg !38
  %u.0.i = select i1 %146, float %291, float %.02.i, !dbg !38
  %u.1.i = select i1 %271, float 0x7FF0000000000000, float %u.0.i, !dbg !38
  %u.2.i = select i1 %270, float -1.000000e+00, float %u.1.i, !dbg !38
  %292 = extractelement <4 x i1> %220, i64 1, !dbg !38
  %u.3.i = select i1 %292, float %269, float %u.2.i, !dbg !38
  %293 = fcmp ogt float %200, 0.000000e+00, !dbg !39
  %294 = fcmp ogt float %179, 0.000000e+00, !dbg !39
  %295 = fcmp ogt float %158, 0.000000e+00, !dbg !39
  %296 = fcmp ogt float %137, 0.000000e+00, !dbg !39
  %.not7.i80 = icmp eq i32 %214, 0, !dbg !38
  %.not6.i81 = icmp eq i32 %213, 0, !dbg !38
  %.not5.i82 = icmp eq i32 %212, 0, !dbg !38
  %.not4.i83 = icmp eq i32 %211, 0, !dbg !38
  %.not3.i84 = icmp eq i32 %210, 0, !dbg !38
  %.not2.i85 = icmp eq i32 %208, 0, !dbg !38
  %297 = fneg float %t.0.i76, !dbg !38
  %.not1.i86 = icmp eq i32 %207, 0, !dbg !38
  %298 = tail call float @llvm.nvvm.fma.rn.f(float %297, float 0x3FE62E4000000000, float %200) #3, !dbg !38
  %299 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float 0x3FE62E4000000000, float %200) #3, !dbg !38
  %.04.i87 = select i1 %.not1.i86, float %298, float %299, !dbg !38
  %300 = tail call float @llvm.nvvm.fma.rn.f(float %297, float 0x3EB7F7D1C0000000, float %.04.i87) #3, !dbg !38
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %297, float 0x3EB7F7D1C0000000, float %.04.i87) #3, !dbg !38
  %.05.i88 = select i1 %.not2.i85, float %300, float %301, !dbg !38
  %302 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i88, float 0x3F812ACC60000000) #3, !dbg !38
  %303 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i88, float 0x3F812ACC60000000) #3, !dbg !38
  %.07.i89 = select i1 %.not3.i84, float %302, float %303, !dbg !38
  %304 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i89, float %.05.i88, float 0x3FA5557C60000000) #3, !dbg !38
  %305 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i89, float %.05.i88, float 0x3FA5557C60000000) #3, !dbg !38
  %.08.i90 = select i1 %.not4.i83, float %304, float %305, !dbg !38
  %306 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i90, float %.05.i88, float 0x3FC5553EC0000000) #3, !dbg !38
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i90, float %.05.i88, float 0x3FC5553EC0000000) #3, !dbg !38
  %.09.i91 = select i1 %.not5.i82, float %306, float %307, !dbg !38
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i91, float %.05.i88, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i91, float %.05.i88, float 0x3FDFFFFFC0000000) #3, !dbg !38
  %.06.i92 = select i1 %.not6.i81, float %308, float %309, !dbg !38
  %310 = fmul float %.05.i88, %.06.i92, !dbg !38
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %310, float %.05.i88, float %.05.i88) #3, !dbg !38
  %312 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %310, float %.05.i88, float %.05.i88) #3, !dbg !38
  %.01.i93 = select i1 %.not7.i80, float %311, float %312, !dbg !38
  %313 = fadd float %.0.i79, -1.000000e+00, !dbg !38
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not9.i94 = icmp eq i32 %314, 0, !dbg !38
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i93, float %.0.i79, float %313) #3, !dbg !38
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i93, float %.0.i79, float %313) #3, !dbg !38
  %.02.i95 = select i1 %.not9.i94, float %316, float %315, !dbg !38
  %317 = fadd float %.02.i95, %.02.i95, !dbg !38
  %u.0.i96 = select i1 %209, float %317, float %.02.i95, !dbg !38
  %318 = fcmp ogt float %j.0.i77, 1.280000e+02, !dbg !38
  %u.1.i97 = select i1 %318, float 0x7FF0000000000000, float %u.0.i96, !dbg !38
  %319 = fcmp olt float %j.0.i77, -2.500000e+01, !dbg !38
  %u.2.i98 = select i1 %319, float -1.000000e+00, float %u.1.i97, !dbg !38
  %320 = fadd float %200, %200, !dbg !38
  %321 = extractelement <4 x i1> %220, i64 0, !dbg !38
  %u.3.i99 = select i1 %321, float %320, float %u.2.i98, !dbg !38
  %322 = select i1 %296, float %137, float %u.3.i, !dbg !40
  %323 = select i1 %295, float %158, float %u.3.i45, !dbg !40
  %324 = select i1 %294, float %179, float %u.3.i72, !dbg !40
  %325 = select i1 %293, float %200, float %u.3.i99, !dbg !40
  %326 = sext i32 %13 to i64, !dbg !41
  %327 = getelementptr float, ptr addrspace(1) %0, i64 %326, !dbg !41
  %328 = bitcast float %322 to i32, !dbg !42
  %329 = bitcast float %323 to i32, !dbg !42
  %330 = bitcast float %324 to i32, !dbg !42
  %331 = bitcast float %325 to i32, !dbg !42
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %328, i32 %329, i32 %330, i32 %331, ptr addrspace(1) %327, i1 true) #3, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c44vvev7pfn2myaiipstwel3s5edvcd3wuhyyb43lhdp6uk753ud.py", directory: "inductor_cache/44")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_8", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_clone_elu_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 27, scope: !7)
!18 = !DILocation(line: 28, column: 38, scope: !7)
!19 = !DILocation(line: 28, column: 49, scope: !7)
!20 = !DILocation(line: 28, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 54, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 35, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 32, column: 31, scope: !7)
!30 = !DILocation(line: 32, column: 36, scope: !7)
!31 = !DILocation(line: 33, column: 18, scope: !7)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 26, scope: !7)
!34 = !DILocation(line: 38, column: 18, scope: !7)
!35 = !DILocation(line: 41, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 20, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 47, column: 28, scope: !7)
!39 = !DILocation(line: 45, column: 20, scope: !7)
!40 = !DILocation(line: 49, column: 35, scope: !7)
!41 = !DILocation(line: 50, column: 28, scope: !7)
!42 = !DILocation(line: 50, column: 40, scope: !7)
!43 = !DILocation(line: 50, column: 4, scope: !7)
