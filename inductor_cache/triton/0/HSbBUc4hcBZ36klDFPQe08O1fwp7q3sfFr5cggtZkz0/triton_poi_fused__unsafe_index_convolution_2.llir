; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_convolution_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 10, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 2, !dbg !12
  %11 = and i32 %10, 508, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 2, !dbg !13
  %14 = or disjoint i32 %12, 512, !dbg !13
  %15 = or disjoint i32 %12, 514, !dbg !13
  %.frozen = freeze i32 %12, !dbg !14
  %16 = sdiv i32 %.frozen, 248, !dbg !14
  %.frozen1 = freeze i32 %14, !dbg !14
  %17 = sdiv i32 %.frozen1, 248, !dbg !14
  %18 = srem i32 %16, 248, !dbg !15
  %19 = srem i32 %17, 248, !dbg !15
  %20 = mul i32 %16, 248, !dbg !16
  %.decomposed = sub i32 %.frozen, %20, !dbg !16
  %21 = srem i32 %13, 248, !dbg !16
  %22 = mul i32 %17, 248, !dbg !16
  %.decomposed2 = sub i32 %.frozen1, %22, !dbg !16
  %23 = srem i32 %15, 248, !dbg !16
  %24 = sdiv i32 %12, 61504, !dbg !17
  %25 = sdiv i32 %14, 61504, !dbg !17
  %26 = srem i32 %24, 16, !dbg !18
  %27 = srem i32 %25, 16, !dbg !18
  %28 = sext i32 %18 to i64, !dbg !19
  %29 = getelementptr i64, ptr addrspace(1) %0, i64 %28, !dbg !19
  %30 = sext i32 %19 to i64, !dbg !19
  %31 = getelementptr i64, ptr addrspace(1) %0, i64 %30, !dbg !19
  %32 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !20
  %33 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !20
  %34 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !20
  %35 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !20
  %36 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !20
  %37 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !20
  %38 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !20
  %39 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !20
  %40 = sext i32 %.decomposed to i64, !dbg !21
  %41 = getelementptr i64, ptr addrspace(1) %0, i64 %40, !dbg !21
  %42 = sext i32 %21 to i64, !dbg !21
  %43 = getelementptr i64, ptr addrspace(1) %0, i64 %42, !dbg !21
  %44 = sext i32 %.decomposed2 to i64, !dbg !21
  %45 = getelementptr i64, ptr addrspace(1) %0, i64 %44, !dbg !21
  %46 = sext i32 %23 to i64, !dbg !21
  %47 = getelementptr i64, ptr addrspace(1) %0, i64 %46, !dbg !21
  %48 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %41, i1 true) #1, !dbg !22
  %49 = extractvalue { i64, i64 } %48, 0, !dbg !22
  %50 = extractvalue { i64, i64 } %48, 1, !dbg !22
  %51 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !22
  %52 = extractvalue { i64, i64 } %51, 0, !dbg !22
  %53 = extractvalue { i64, i64 } %51, 1, !dbg !22
  %54 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !22
  %55 = extractvalue { i64, i64 } %54, 0, !dbg !22
  %56 = extractvalue { i64, i64 } %54, 1, !dbg !22
  %57 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !22
  %58 = extractvalue { i64, i64 } %57, 0, !dbg !22
  %59 = extractvalue { i64, i64 } %57, 1, !dbg !22
  %60 = sext i32 %26 to i64, !dbg !23
  %61 = getelementptr float, ptr addrspace(1) %3, i64 %60, !dbg !23
  %62 = sext i32 %27 to i64, !dbg !23
  %63 = getelementptr float, ptr addrspace(1) %3, i64 %62, !dbg !23
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !24
  %65 = bitcast i32 %64 to float, !dbg !24
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !24
  %67 = bitcast i32 %66 to float, !dbg !24
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !24
  %69 = bitcast i32 %68 to float, !dbg !24
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %61, i1 true) #1, !dbg !24
  %71 = bitcast i32 %70 to float, !dbg !24
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #1, !dbg !24
  %73 = bitcast i32 %72 to float, !dbg !24
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #1, !dbg !24
  %75 = bitcast i32 %74 to float, !dbg !24
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #1, !dbg !24
  %77 = bitcast i32 %76 to float, !dbg !24
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 true) #1, !dbg !24
  %79 = bitcast i32 %78 to float, !dbg !24
  %80 = add i64 %32, 124, !dbg !25
  %81 = add i64 %36, 124, !dbg !25
  %82 = icmp slt i64 %32, 0, !dbg !26
  %83 = icmp slt i64 %36, 0, !dbg !26
  %84 = select i1 %82, i64 %80, i64 %32, !dbg !27
  %85 = select i1 %83, i64 %81, i64 %36, !dbg !27
  %86 = add i64 %49, 124, !dbg !28
  %87 = add i64 %50, 124, !dbg !28
  %88 = add i64 %52, 124, !dbg !28
  %89 = add i64 %53, 124, !dbg !28
  %90 = add i64 %55, 124, !dbg !28
  %91 = add i64 %56, 124, !dbg !28
  %92 = add i64 %58, 124, !dbg !28
  %93 = add i64 %59, 124, !dbg !28
  %94 = icmp slt i64 %49, 0, !dbg !29
  %95 = icmp slt i64 %50, 0, !dbg !29
  %96 = icmp slt i64 %52, 0, !dbg !29
  %97 = icmp slt i64 %53, 0, !dbg !29
  %98 = icmp slt i64 %55, 0, !dbg !29
  %99 = icmp slt i64 %56, 0, !dbg !29
  %100 = icmp slt i64 %58, 0, !dbg !29
  %101 = icmp slt i64 %59, 0, !dbg !29
  %102 = select i1 %94, i64 %86, i64 %49, !dbg !30
  %103 = select i1 %95, i64 %87, i64 %50, !dbg !30
  %104 = select i1 %96, i64 %88, i64 %52, !dbg !30
  %105 = select i1 %97, i64 %89, i64 %53, !dbg !30
  %106 = select i1 %98, i64 %90, i64 %55, !dbg !30
  %107 = select i1 %99, i64 %91, i64 %56, !dbg !30
  %108 = select i1 %100, i64 %92, i64 %58, !dbg !30
  %109 = select i1 %101, i64 %93, i64 %59, !dbg !30
  %110 = getelementptr i64, ptr addrspace(1) %1, i64 %84, !dbg !31
  %111 = getelementptr i64, ptr addrspace(1) %1, i64 %85, !dbg !31
  %112 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %110, i1 true) #1, !dbg !32
  %113 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %110, i1 true) #1, !dbg !32
  %114 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %110, i1 true) #1, !dbg !32
  %115 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %110, i1 true) #1, !dbg !32
  %116 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %111, i1 true) #1, !dbg !32
  %117 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %111, i1 true) #1, !dbg !32
  %118 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %111, i1 true) #1, !dbg !32
  %119 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %111, i1 true) #1, !dbg !32
  %120 = add i64 %112, 62, !dbg !33
  %121 = add i64 %116, 62, !dbg !33
  %122 = icmp slt i64 %112, 0, !dbg !34
  %123 = icmp slt i64 %116, 0, !dbg !34
  %124 = select i1 %122, i64 %120, i64 %112, !dbg !35
  %125 = select i1 %123, i64 %121, i64 %116, !dbg !35
  %126 = getelementptr i64, ptr addrspace(1) %1, i64 %102, !dbg !36
  %127 = getelementptr i64, ptr addrspace(1) %1, i64 %103, !dbg !36
  %128 = getelementptr i64, ptr addrspace(1) %1, i64 %104, !dbg !36
  %129 = getelementptr i64, ptr addrspace(1) %1, i64 %105, !dbg !36
  %130 = getelementptr i64, ptr addrspace(1) %1, i64 %106, !dbg !36
  %131 = getelementptr i64, ptr addrspace(1) %1, i64 %107, !dbg !36
  %132 = getelementptr i64, ptr addrspace(1) %1, i64 %108, !dbg !36
  %133 = getelementptr i64, ptr addrspace(1) %1, i64 %109, !dbg !36
  %134 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %126, i1 true) #1, !dbg !37
  %135 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %127, i1 true) #1, !dbg !37
  %136 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %128, i1 true) #1, !dbg !37
  %137 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %129, i1 true) #1, !dbg !37
  %138 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %130, i1 true) #1, !dbg !37
  %139 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %131, i1 true) #1, !dbg !37
  %140 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %132, i1 true) #1, !dbg !37
  %141 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %133, i1 true) #1, !dbg !37
  %142 = add i64 %134, 62, !dbg !38
  %143 = add i64 %135, 62, !dbg !38
  %144 = add i64 %136, 62, !dbg !38
  %145 = add i64 %137, 62, !dbg !38
  %146 = add i64 %138, 62, !dbg !38
  %147 = add i64 %139, 62, !dbg !38
  %148 = add i64 %140, 62, !dbg !38
  %149 = add i64 %141, 62, !dbg !38
  %150 = icmp slt i64 %134, 0, !dbg !39
  %151 = icmp slt i64 %135, 0, !dbg !39
  %152 = icmp slt i64 %136, 0, !dbg !39
  %153 = icmp slt i64 %137, 0, !dbg !39
  %154 = icmp slt i64 %138, 0, !dbg !39
  %155 = icmp slt i64 %139, 0, !dbg !39
  %156 = icmp slt i64 %140, 0, !dbg !39
  %157 = icmp slt i64 %141, 0, !dbg !39
  %158 = select i1 %150, i64 %142, i64 %134, !dbg !40
  %159 = select i1 %151, i64 %143, i64 %135, !dbg !40
  %160 = select i1 %152, i64 %144, i64 %136, !dbg !40
  %161 = select i1 %153, i64 %145, i64 %137, !dbg !40
  %162 = select i1 %154, i64 %146, i64 %138, !dbg !40
  %163 = select i1 %155, i64 %147, i64 %139, !dbg !40
  %164 = select i1 %156, i64 %148, i64 %140, !dbg !40
  %165 = select i1 %157, i64 %149, i64 %141, !dbg !40
  %166 = mul i64 %124, 62, !dbg !41
  %167 = mul i64 %125, 62, !dbg !41
  %168 = mul nsw i32 %24, 3844, !dbg !42
  %169 = mul nsw i32 %25, 3844, !dbg !42
  %170 = sext i32 %168 to i64, !dbg !43
  %171 = sext i32 %169 to i64, !dbg !43
  %172 = getelementptr float, ptr addrspace(1) %2, i64 %158, !dbg !44
  %173 = getelementptr float, ptr addrspace(1) %172, i64 %166, !dbg !44
  %174 = getelementptr float, ptr addrspace(1) %173, i64 %170, !dbg !44
  %175 = getelementptr float, ptr addrspace(1) %2, i64 %159, !dbg !44
  %176 = getelementptr float, ptr addrspace(1) %175, i64 %166, !dbg !44
  %177 = getelementptr float, ptr addrspace(1) %176, i64 %170, !dbg !44
  %178 = getelementptr float, ptr addrspace(1) %2, i64 %160, !dbg !44
  %179 = getelementptr float, ptr addrspace(1) %178, i64 %166, !dbg !44
  %180 = getelementptr float, ptr addrspace(1) %179, i64 %170, !dbg !44
  %181 = getelementptr float, ptr addrspace(1) %2, i64 %161, !dbg !44
  %182 = getelementptr float, ptr addrspace(1) %181, i64 %166, !dbg !44
  %183 = getelementptr float, ptr addrspace(1) %182, i64 %170, !dbg !44
  %184 = getelementptr float, ptr addrspace(1) %2, i64 %162, !dbg !44
  %185 = getelementptr float, ptr addrspace(1) %184, i64 %167, !dbg !44
  %186 = getelementptr float, ptr addrspace(1) %185, i64 %171, !dbg !44
  %187 = getelementptr float, ptr addrspace(1) %2, i64 %163, !dbg !44
  %188 = getelementptr float, ptr addrspace(1) %187, i64 %167, !dbg !44
  %189 = getelementptr float, ptr addrspace(1) %188, i64 %171, !dbg !44
  %190 = getelementptr float, ptr addrspace(1) %2, i64 %164, !dbg !44
  %191 = getelementptr float, ptr addrspace(1) %190, i64 %167, !dbg !44
  %192 = getelementptr float, ptr addrspace(1) %191, i64 %171, !dbg !44
  %193 = getelementptr float, ptr addrspace(1) %2, i64 %165, !dbg !44
  %194 = getelementptr float, ptr addrspace(1) %193, i64 %167, !dbg !44
  %195 = getelementptr float, ptr addrspace(1) %194, i64 %171, !dbg !44
  %196 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %174, i1 true) #1, !dbg !45
  %197 = bitcast i32 %196 to float, !dbg !45
  %198 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %177, i1 true) #1, !dbg !45
  %199 = bitcast i32 %198 to float, !dbg !45
  %200 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %180, i1 true) #1, !dbg !45
  %201 = bitcast i32 %200 to float, !dbg !45
  %202 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %183, i1 true) #1, !dbg !45
  %203 = bitcast i32 %202 to float, !dbg !45
  %204 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %186, i1 true) #1, !dbg !45
  %205 = bitcast i32 %204 to float, !dbg !45
  %206 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %189, i1 true) #1, !dbg !45
  %207 = bitcast i32 %206 to float, !dbg !45
  %208 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %192, i1 true) #1, !dbg !45
  %209 = bitcast i32 %208 to float, !dbg !45
  %210 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %195, i1 true) #1, !dbg !45
  %211 = bitcast i32 %210 to float, !dbg !45
  %212 = fadd float %65, %197, !dbg !46
  %213 = fadd float %67, %199, !dbg !46
  %214 = fadd float %69, %201, !dbg !46
  %215 = fadd float %71, %203, !dbg !46
  %216 = fadd float %73, %205, !dbg !46
  %217 = fadd float %75, %207, !dbg !46
  %218 = fadd float %77, %209, !dbg !46
  %219 = fadd float %79, %211, !dbg !46
  %220 = sext i32 %12 to i64, !dbg !47
  %221 = getelementptr float, ptr addrspace(1) %4, i64 %220, !dbg !47
  %222 = sext i32 %14 to i64, !dbg !47
  %223 = getelementptr float, ptr addrspace(1) %4, i64 %222, !dbg !47
  %224 = bitcast float %212 to i32, !dbg !48
  %225 = bitcast float %213 to i32, !dbg !48
  %226 = bitcast float %214 to i32, !dbg !48
  %227 = bitcast float %215 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %224, i32 %225, i32 %226, i32 %227, ptr addrspace(1) %221, i1 true) #1, !dbg !48
  %228 = bitcast float %216 to i32, !dbg !48
  %229 = bitcast float %217 to i32, !dbg !48
  %230 = bitcast float %218 to i32, !dbg !48
  %231 = bitcast float %219 to i32, !dbg !48
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %228, i32 %229, i32 %230, i32 %231, ptr addrspace(1) %223, i1 true) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cadshbg6noxmxhgdglrg6qgs6leecxam3u4ny5ynkg7ns7v56khw.py", directory: "inductor_cache/ad")
!4 = !{ptr @triton_poi_fused__unsafe_index_convolution_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_convolution_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_convolution_2", linkageName: "triton_poi_fused__unsafe_index_convolution_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 29, column: 30, scope: !7)
!20 = !DILocation(line: 29, column: 35, scope: !7)
!21 = !DILocation(line: 30, column: 30, scope: !7)
!22 = !DILocation(line: 30, column: 35, scope: !7)
!23 = !DILocation(line: 31, column: 31, scope: !7)
!24 = !DILocation(line: 31, column: 36, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 34, column: 18, scope: !7)
!27 = !DILocation(line: 35, column: 32, scope: !7)
!28 = !DILocation(line: 36, column: 18, scope: !7)
!29 = !DILocation(line: 37, column: 18, scope: !7)
!30 = !DILocation(line: 38, column: 32, scope: !7)
!31 = !DILocation(line: 39, column: 30, scope: !7)
!32 = !DILocation(line: 39, column: 37, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 19, scope: !7)
!35 = !DILocation(line: 43, column: 35, scope: !7)
!36 = !DILocation(line: 44, column: 31, scope: !7)
!37 = !DILocation(line: 44, column: 38, scope: !7)
!38 = !DILocation(line: 45, column: 20, scope: !7)
!39 = !DILocation(line: 46, column: 20, scope: !7)
!40 = !DILocation(line: 47, column: 35, scope: !7)
!41 = !DILocation(line: 48, column: 42, scope: !7)
!42 = !DILocation(line: 48, column: 55, scope: !7)
!43 = !DILocation(line: 48, column: 50, scope: !7)
!44 = !DILocation(line: 48, column: 31, scope: !7)
!45 = !DILocation(line: 48, column: 60, scope: !7)
!46 = !DILocation(line: 49, column: 20, scope: !7)
!47 = !DILocation(line: 50, column: 25, scope: !7)
!48 = !DILocation(line: 50, column: 37, scope: !7)
!49 = !DILocation(line: 50, column: 4, scope: !7)
