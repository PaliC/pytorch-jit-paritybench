//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_pow_sum_5 // -- Begin function triton_per_fused_pow_sum_5
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_pow_sum_5
.visible .entry triton_per_fused_pow_sum_5(
	.param .u64 .ptr .global .align 1 triton_per_fused_pow_sum_5_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_pow_sum_5_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_pow_sum_5_param_2,
	.param .u32 triton_per_fused_pow_sum_5_param_3,
	.param .u32 triton_per_fused_pow_sum_5_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<54>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_per_fused_pow_sum_5_param_0];
	ld.param.u64 	%rd13, [triton_per_fused_pow_sum_5_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:23:33
	shl.b32 	%r44, %r1, 5;
	ld.param.u64 	%rd14, [triton_per_fused_pow_sum_5_param_2];
	.loc	1 24 44                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:24:44
	mov.u32 	%r45, %tid.x;
	and.b32  	%r46, %r45, 24;
	shl.b32 	%r47, %r45, 2;
	and.b32  	%r48, %r47, 28;
	and.b32  	%r49, %r45, 31;
	.loc	1 24 23                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:24:23
	or.b32  	%r50, %r44, %r48;
	or.b32  	%r51, %r44, %r49;
	.loc	1 25 21                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:25:21
	setp.lt.s32 	%p1, %r50, 1024;
	setp.lt.s32 	%p27, %r51, 1024;
	.loc	1 26 34                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:26:34
	bfe.u32 	%r52, %r45, 3, 5;
	shl.b32 	%r53, %r52, 8;
	.loc	1 31 52                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:31:52
	shr.s32 	%r55, %r50, 31;
	shr.u32 	%r56, %r55, 24;
	add.s32 	%r57, %r50, %r56;
	.loc	1 31 46                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:31:46
	shl.b32 	%r58, %r57, 6;
	and.b32  	%r59, %r58, -16384;
	.loc	1 31 66                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:31:66
	and.b32  	%r60, %r57, -256;
	sub.s32 	%r61, %r50, %r60;
	.loc	1 31 39                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:31:39
	add.s32 	%r62, %r61, %r53;
	.loc	1 31 61                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:31:61
	add.s32 	%r63, %r62, %r59;
	add.s32 	%r64, %r63, 8192;
	.loc	1 31 30                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:31:30
	mul.wide.s32 	%rd15, %r63, 4;
	add.s64 	%rd1, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r64, 4;
	add.s64 	%rd2, %rd12, %rd16;
	mov.b32 	%r6, 0;
	.loc	1 31 74                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:31:74
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 32 30                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:32:30
	mul.wide.u32 	%rd17, %r52, 4;
	add.s64 	%rd3, %rd13, %rd17;
	add.s64 	%rd7, %rd3, 128;
	mov.pred 	%p11, -1;
	.loc	1 32 35                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:32:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r19 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r21 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r21;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r22 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r23 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r24 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r25 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r25;
	.loc	1 33 18                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:33:18
	add.f32 	%f11, %f1, %f9;
	add.f32 	%f12, %f2, %f9;
	add.f32 	%f13, %f3, %f9;
	add.f32 	%f14, %f4, %f9;
	add.f32 	%f15, %f5, %f10;
	add.f32 	%f16, %f6, %f10;
	add.f32 	%f17, %f7, %f10;
	add.f32 	%f18, %f8, %f10;
	.loc	1 34 18                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:34:18
	mul.f32 	%f19, %f15, %f15;
	mul.f32 	%f20, %f16, %f16;
	mul.f32 	%f21, %f17, %f17;
	mul.f32 	%f22, %f18, %f18;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f23, %f11, %f11, %f19;
	selp.f32 	%f24, %f23, 0f00000000, %p1;
	fma.rn.f32 	%f25, %f12, %f12, %f20;
	selp.f32 	%f26, %f25, 0f00000000, %p1;
	fma.rn.f32 	%f27, %f13, %f13, %f21;
	selp.f32 	%f28, %f27, 0f00000000, %p1;
	fma.rn.f32 	%f29, %f14, %f14, %f22;
	selp.f32 	%f30, %f29, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f24;
	shfl.sync.bfly.b32	%r66, %r65, 16, 31, -1;
	mov.b32 	%f31, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f24, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f32;
	shfl.sync.bfly.b32	%r68, %r67, 8, 31, -1;
	mov.b32 	%f33, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f26;
	shfl.sync.bfly.b32	%r70, %r69, 16, 31, -1;
	mov.b32 	%f35, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f26, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f36;
	shfl.sync.bfly.b32	%r72, %r71, 8, 31, -1;
	mov.b32 	%f37, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f28;
	shfl.sync.bfly.b32	%r74, %r73, 16, 31, -1;
	mov.b32 	%f39, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f28, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f40;
	shfl.sync.bfly.b32	%r76, %r75, 8, 31, -1;
	mov.b32 	%f41, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f30;
	shfl.sync.bfly.b32	%r78, %r77, 16, 31, -1;
	mov.b32 	%f43, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f30, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f44;
	shfl.sync.bfly.b32	%r80, %r79, 8, 31, -1;
	mov.b32 	%f45, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p19, %r46, 0;
	bfe.u32 	%r81, %r45, 5, 3;
	shl.b32 	%r82, %r81, 2;
	shl.b32 	%r83, %r48, 5;
	or.b32  	%r84, %r83, %r82;
	mov.u32 	%r85, global_smem;
	add.s32 	%r26, %r85, %r84;
	mov.b32 	%r27, %f34;
	// begin inline asm
	@%p19 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	add.s32 	%r28, %r26, 32;
	mov.b32 	%r29, %f38;
	// begin inline asm
	@%p19 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	add.s32 	%r30, %r26, 64;
	mov.b32 	%r31, %f42;
	// begin inline asm
	@%p19 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	add.s32 	%r32, %r26, 96;
	mov.b32 	%r33, %f46;
	// begin inline asm
	@%p19 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p23, %r45, 256;
	add.s32 	%r35, %r85, %r47;
	// begin inline asm
	@%p23 ld.shared.b32 %r34, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r34;
	shfl.sync.bfly.b32	%r86, %r34, 4, 31, -1;
	mov.b32 	%f48, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f49;
	shfl.sync.bfly.b32	%r88, %r87, 2, 31, -1;
	mov.b32 	%f50, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f51;
	shfl.sync.bfly.b32	%r90, %r89, 1, 31, -1;
	mov.b32 	%f52, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r91, %r45, 7;
	setp.eq.s32 	%p28, %r91, 0;
	and.pred  	%p24, %p23, %p28;
	mov.b32 	%r37, %f53;
	// begin inline asm
	@%p24 st.shared.b32 [ %r35 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r92, %r85, %r83;
	ld.shared.u32 	%r39, [%r92];
	ld.shared.u32 	%r40, [%r92+32];
	ld.shared.u32 	%r41, [%r92+64];
	ld.shared.u32 	%r42, [%r92+96];
$L__tmp2:
	.loc	1 37 27                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:37:27
	bar.sync 	0;
	mad.lo.s32 	%r38, %r48, -28, %r92;
	// begin inline asm
	@%p11 st.shared.v4.b32 [ %r38 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r93, %r49, 2;
	add.s32 	%r94, %r85, %r93;
	ld.shared.u32 	%r43, [%r94];
	.loc	1 38 25                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:38:25
	mul.wide.s32 	%rd18, %r51, 4;
	add.s64 	%rd11, %rd14, %rd18;
	.loc	1 38 36                         // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:38:36
	setp.eq.s32 	%p29, %r81, 0;
	and.pred  	%p26, %p29, %p27;
	// begin inline asm
	@%p26 st.global.b32 [ %rd11 + 0 ], { %r43 };
	// end inline asm
	.loc	1 38 4                          // c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py:38:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6j/c6j57r5tibhajbljk6dxihukym2iyhniltt7eaxup2voqjkigbuj.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 171                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa4 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 106
.b8 53
.b8 55
.b8 114
.b8 53
.b8 116
.b8 105
.b8 98
.b8 104
.b8 97
.b8 106
.b8 98
.b8 108
.b8 106
.b8 107
.b8 54
.b8 100
.b8 120
.b8 105
.b8 104
.b8 117
.b8 107
.b8 121
.b8 109
.b8 50
.b8 105
.b8 121
.b8 104
.b8 110
.b8 105
.b8 108
.b8 116
.b8 116
.b8 55
.b8 101
.b8 97
.b8 120
.b8 117
.b8 112
.b8 50
.b8 118
.b8 111
.b8 113
.b8 106
.b8 107
.b8 105
.b8 103
.b8 98
.b8 117
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1d DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x80:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x95:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
