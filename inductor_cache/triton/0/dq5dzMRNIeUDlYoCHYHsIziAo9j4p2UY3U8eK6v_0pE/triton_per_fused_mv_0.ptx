//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mv_0   // -- Begin function triton_per_fused_mv_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mv_0
.visible .entry triton_per_fused_mv_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mv_0_param_2,
	.param .u32 triton_per_fused_mv_0_param_3,
	.param .u32 triton_per_fused_mv_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<46>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_mv_0_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_mv_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:23:33
	shl.b32 	%r21, %r1, 5;
	ld.param.u64 	%rd9, [triton_per_fused_mv_0_param_2];
	.loc	1 24 44                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:24:44
	mov.u32 	%r22, %tid.x;
	bfe.u32 	%r23, %r22, 4, 3;
	and.b32  	%r24, %r22, 15;
	and.b32  	%r25, %r22, 31;
	.loc	1 24 23                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:24:23
	or.b32  	%r26, %r21, %r23;
	or.b32  	%r27, %r26, 8;
	or.b32  	%r28, %r26, 16;
	or.b32  	%r29, %r26, 24;
	or.b32  	%r30, %r21, %r25;
	.loc	1 25 21                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:25:21
	setp.lt.s32 	%p16, %r26, 128;
	setp.lt.s32 	%p17, %r27, 128;
	setp.lt.s32 	%p18, %r28, 128;
	setp.lt.s32 	%p19, %r29, 128;
	setp.lt.s32 	%p20, %r30, 128;
	.loc	1 28 21                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:28:21
	setp.ne.s32 	%p9, %r24, 15;
	.loc	1 31 35                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:31:35
	mad.lo.s32 	%r31, %r26, 15, %r24;
	mad.lo.s32 	%r32, %r27, 15, %r24;
	mad.lo.s32 	%r33, %r28, 15, %r24;
	mad.lo.s32 	%r34, %r29, 15, %r24;
	.loc	1 31 30                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:31:30
	mul.wide.s32 	%rd10, %r31, 4;
	add.s64 	%rd1, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r32, 4;
	add.s64 	%rd2, %rd7, %rd11;
	mul.wide.s32 	%rd12, %r33, 4;
	add.s64 	%rd3, %rd7, %rd12;
	mul.wide.s32 	%rd13, %r34, 4;
	add.s64 	%rd4, %rd7, %rd13;
	.loc	1 31 51                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:31:51
	and.pred  	%p1, %p9, %p16;
	and.pred  	%p3, %p9, %p17;
	and.pred  	%p5, %p9, %p18;
	and.pred  	%p7, %p9, %p19;
	mov.b32 	%r3, 0;
	.loc	1 31 43                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:31:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f4, %r8;
	.loc	1 32 30                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:32:30
	mul.wide.u32 	%rd14, %r24, 4;
	add.s64 	%rd5, %rd8, %rd14;
	.loc	1 32 35                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:32:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f5, %r10;
	.loc	1 33 18                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:33:18
	mul.f32 	%f6, %f1, %f5;
	mul.f32 	%f7, %f2, %f5;
	mul.f32 	%f8, %f3, %f5;
	mul.f32 	%f9, %f4, %f5;
	.loc	1 35 41                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:35:41
	selp.f32 	%f10, %f6, 0f00000000, %p1;
	selp.f32 	%f11, %f7, 0f00000000, %p3;
	selp.f32 	%f12, %f8, 0f00000000, %p5;
	selp.f32 	%f13, %f9, 0f00000000, %p7;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f10;
	shfl.sync.bfly.b32	%r36, %r35, 8, 31, -1;
	mov.b32 	%f14, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f10, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f15;
	shfl.sync.bfly.b32	%r38, %r37, 4, 31, -1;
	mov.b32 	%f16, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f17;
	shfl.sync.bfly.b32	%r40, %r39, 2, 31, -1;
	mov.b32 	%f18, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f19;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f20, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f11;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f22, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f11, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f23;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f24, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f25;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f26, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f27;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f28, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f12;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f30, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f12, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f31;
	shfl.sync.bfly.b32	%r54, %r53, 4, 31, -1;
	mov.b32 	%f32, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f33;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f34, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f35;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f36, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f13;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f38, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f13, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f39;
	shfl.sync.bfly.b32	%r62, %r61, 4, 31, -1;
	mov.b32 	%f40, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f41;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f42, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f43;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f44, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
$L__tmp2:
	.loc	1 36 27                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:36:27
	shl.b32 	%r67, %r23, 2;
	mov.u32 	%r68, global_smem;
	add.s32 	%r12, %r68, %r67;
	mov.b32 	%r13, %f21;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r12, 32;
	mov.b32 	%r15, %f29;
	// begin inline asm
	@%p11 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r12, 64;
	mov.b32 	%r17, %f37;
	// begin inline asm
	@%p11 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	add.s32 	%r18, %r12, 96;
	mov.b32 	%r19, %f45;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r69, %r25, 2;
	add.s32 	%r70, %r68, %r69;
	ld.shared.u32 	%r20, [%r70];
	.loc	1 37 25                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:37:25
	mul.wide.s32 	%rd15, %r30, 4;
	add.s64 	%rd6, %rd9, %rd15;
	.loc	1 37 36                         // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:37:36
	and.b32  	%r71, %r22, 96;
	setp.eq.s32 	%p21, %r71, 0;
	and.pred  	%p15, %p21, %p20;
	// begin inline asm
	@%p15 st.global.b32 [ %rd6 + 0 ], { %r20 };
	// end inline asm
	.loc	1 37 4                          // cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/li/cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 166                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 105
.b8 113
.b8 102
.b8 54
.b8 118
.b8 119
.b8 118
.b8 107
.b8 103
.b8 113
.b8 122
.b8 97
.b8 122
.b8 108
.b8 98
.b8 50
.b8 117
.b8 116
.b8 113
.b8 50
.b8 103
.b8 52
.b8 54
.b8 116
.b8 55
.b8 106
.b8 104
.b8 107
.b8 107
.b8 114
.b8 50
.b8 100
.b8 101
.b8 100
.b8 114
.b8 54
.b8 116
.b8 120
.b8 107
.b8 102
.b8 111
.b8 111
.b8 114
.b8 101
.b8 50
.b8 118
.b8 53
.b8 118
.b8 109
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x18 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 118
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x90:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
