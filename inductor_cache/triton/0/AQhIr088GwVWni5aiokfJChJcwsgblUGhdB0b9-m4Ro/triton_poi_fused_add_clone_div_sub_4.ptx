//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_clone_div_sub_4 // -- Begin function triton_poi_fused_add_clone_div_sub_4
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 108, 105, 47, 99, 108, 105, 50, 97, 54, 97, 55, 109, 104, 116, 109, 110, 106, 109, 114, 105, 97, 111, 111, 53, 103, 54, 54, 111, 55, 101, 120, 105, 54, 100, 116, 117, 102, 54, 108, 52, 101, 100, 98, 114, 97, 119, 52, 51, 109, 101, 117, 116, 50, 100, 118, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 48, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused_add_clone_div_sub_4
.visible .entry triton_poi_fused_add_clone_div_sub_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_div_sub_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_div_sub_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_div_sub_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_div_sub_4_param_3,
	.param .u32 triton_poi_fused_add_clone_div_sub_4_param_4,
	.param .u32 triton_poi_fused_add_clone_div_sub_4_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<91>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<42>;
	.loc	1 19 0                          // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd13, [triton_poi_fused_add_clone_div_sub_4_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused_add_clone_div_sub_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:22:33
	shl.b32 	%r1, %r10, 4;
	.loc	1 23 44                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:23:44
	mov.u32 	%r32, %tid.x;
	bfe.u32 	%r2, %r32, 3, 4;
	shl.b32 	%r3, %r32, 1;
	and.b32  	%r4, %r3, 14;
	.loc	1 23 23                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:23:23
	or.b32  	%r33, %r1, %r2;
	.loc	1 25 28                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:25:28
	// begin inline asm
	mov.u32 %r11, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:25:33
	shl.b32 	%r5, %r11, 4;
	.loc	1 26 23                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:26:23
	or.b32  	%r34, %r5, %r4;
	.loc	1 30 19                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:30:19
	shr.s32 	%r35, %r33, 31;
	shr.u32 	%r36, %r35, 30;
	add.s32 	%r37, %r33, %r36;
	shr.s32 	%r7, %r37, 2;
	.loc	1 32 38                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:32:38
	shl.b32 	%r38, %r33, 4;
	.loc	1 32 35                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:32:35
	add.s32 	%r39, %r34, %r38;
	.loc	1 32 30                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:32:30
	mul.wide.s32 	%rd15, %r39, 4;
	add.s64 	%rd5, %rd13, %rd15;
	.loc	1 32 51                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:32:51
	max.s32 	%r40, %r33, %r34;
	setp.gt.s32 	%p9, %r40, 15;
	setp.lt.s32 	%p2, %r40, 16;
	.loc	1 32 43                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:32:43
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p2 ld.global.v2.b32 { %r12, %r13 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 33 38                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:33:38
	shl.b32 	%r41, %r7, 6;
	.loc	1 33 35                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:33:35
	add.s32 	%r42, %r41, %r34;
	.loc	1 33 30                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:33:30
	mul.wide.s32 	%rd16, %r42, 4;
	add.s64 	%rd6, %rd13, %rd16;
	.loc	1 33 43                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:33:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r14, %r15 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r14;
	mov.b32 	%f2, %r15;
	.loc	1 34 40                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:34:40
	add.s32 	%r43, %r42, 16;
	.loc	1 34 30                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:34:30
	mul.wide.s32 	%rd17, %r43, 4;
	add.s64 	%rd7, %rd13, %rd17;
	.loc	1 34 48                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:34:48
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r16;
	mov.b32 	%f4, %r17;
	.loc	1 35 40                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:35:40
	add.s32 	%r44, %r42, 32;
	.loc	1 35 30                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:35:30
	mul.wide.s32 	%rd18, %r44, 4;
	add.s64 	%rd8, %rd13, %rd18;
	.loc	1 35 48                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:35:48
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r18, %r19 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r18;
	mov.b32 	%f6, %r19;
	.loc	1 36 40                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:36:40
	add.s32 	%r45, %r42, 48;
	.loc	1 36 30                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:36:30
	mul.wide.s32 	%rd19, %r45, 4;
	add.s64 	%rd9, %rd13, %rd19;
	.loc	1 36 48                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:36:48
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r20, %r21 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r20;
	mov.b32 	%f8, %r21;
	.loc	1 37 36                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:37:36
	mad.lo.s32 	%r46, %r7, -48, %r42;
	.loc	1 37 31                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:37:31
	mul.wide.s32 	%rd20, %r46, 8;
	add.s64 	%rd12, %rd14, %rd20;
	.loc	1 37 44                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:37:44
	// begin inline asm
	mov.u64 %rd10, 0x0;
	mov.u64 %rd11, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b64 { %rd10, %rd11 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:39:18
	mul.f32 	%f9, %f3, %f3;
	mul.f32 	%f10, %f4, %f4;
	.loc	1 40 18                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:40:18
	fma.rn.f32 	%f11, %f1, %f1, %f9;
	fma.rn.f32 	%f12, %f2, %f2, %f10;
	.loc	1 42 18                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:42:18
	fma.rn.f32 	%f13, %f5, %f5, %f11;
	fma.rn.f32 	%f14, %f6, %f6, %f12;
	.loc	1 44 19                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:44:19
	fma.rn.f32 	%f15, %f7, %f7, %f13;
	fma.rn.f32 	%f16, %f8, %f8, %f14;
	.loc	1 45 27                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:45:27
	sqrt.approx.ftz.f32 	%f17, %f15;
	sqrt.approx.ftz.f32 	%f18, %f16;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p10, %f17, 0f2B8CBCCC;
	setp.gt.f32 	%p11, %f18, 0f2B8CBCCC;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p12, %f17, %f17;
	setp.nan.f32 	%p13, %f18, %f18;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f19, %f17, 0f2B8CBCCC, %p12;
	selp.f32 	%f20, %f17, %f19, %p10;
	selp.f32 	%f21, %f18, 0f2B8CBCCC, %p13;
	selp.f32 	%f22, %f18, %f21, %p11;
$L__tmp2:
	.loc	1 48 19                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:48:19
	mov.b32 	%r24, %f20;
	// begin inline asm
	div.full.f32 %r22, %r12, %r24;
	// end inline asm
	mov.b32 	%r27, %f22;
	// begin inline asm
	div.full.f32 %r25, %r13, %r27;
	// end inline asm
	shl.b32 	%r47, %r32, 5;
	and.b32  	%r48, %r47, 224;
	or.b32  	%r49, %r48, %r2;
	shr.u32 	%r50, %r48, 3;
	add.s32 	%r8, %r50, %r49;
	shl.b32 	%r51, %r8, 2;
	mov.u32 	%r52, global_smem;
	add.s32 	%r28, %r52, %r51;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.b32 [ %r28 + 0 ], %r22;
	// end inline asm
	or.b32  	%r53, %r48, 16;
	shr.u32 	%r54, %r53, 3;
	add.s32 	%r9, %r54, %r49;
	shl.b32 	%r55, %r9, 2;
	add.s32 	%r56, %r52, %r55;
	add.s32 	%r30, %r56, 64;
	// begin inline asm
	@%p8 st.shared.b32 [ %r30 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	.loc	1 52 35                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:52:35
	shr.u64 	%rd21, %rd10, 61;
	shr.u64 	%rd22, %rd11, 61;
	and.b64  	%rd23, %rd22, 4;
	and.b64  	%rd24, %rd21, 4;
	add.s64 	%rd1, %rd24, %rd10;
	add.s64 	%rd2, %rd23, %rd11;
	.loc	1 53 70                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:53:70
	or.b64  	%rd25, %rd1, %rd2;
	setp.lt.u64 	%p14, %rd25, 4;
	or.pred  	%p15, %p9, %p14;
	@%p15 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 70                          // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:0:70
	ld.param.u64 	%rd4, [triton_poi_fused_add_clone_div_sub_4_param_3];
	ld.param.u64 	%rd3, [triton_poi_fused_add_clone_div_sub_4_param_2];
	.loc	1 48 19                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:48:19
	shr.u32 	%r63, %r3, 3;
	and.b32  	%r64, %r63, 30;
	and.b32  	%r65, %r3, 254;
	add.s32 	%r66, %r64, %r65;
	shl.b32 	%r67, %r66, 2;
	add.s32 	%r69, %r52, %r67;
	ld.shared.v2.f32 	{%f23, %f24}, [%r69];
	.loc	1 23 23                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:23:23
	or.b32  	%r70, %r1, %r4;
	.loc	1 30 19                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:30:19
	shr.s32 	%r72, %r70, 31;
	shr.u32 	%r73, %r72, 30;
	add.s32 	%r74, %r70, %r73;
	.loc	1 33 38                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:33:38
	shl.b32 	%r75, %r74, 4;
	and.b32  	%r76, %r75, -64;
	.loc	1 26 23                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:26:23
	or.b32  	%r77, %r5, %r2;
	.loc	1 32 51                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:32:51
	max.s32 	%r78, %r70, %r77;
	setp.lt.s32 	%p19, %r78, 16;
	.loc	1 31 19                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:31:19
	and.b32  	%r79, %r74, -4;
	sub.s32 	%r80, %r70, %r79;
	shl.b32 	%r81, %r7, 2;
	sub.s32 	%r82, %r33, %r81;
	.loc	1 53 70                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:53:70
	bar.sync 	0;
	.loc	1 54 31                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:54:31
	shl.b64 	%rd30, %rd1, 4;
	add.s64 	%rd31, %rd3, %rd30;
	mul.wide.s32 	%rd32, %r82, 4;
	add.s64 	%rd26, %rd31, %rd32;
	shl.b64 	%rd33, %rd2, 4;
	add.s64 	%rd34, %rd3, %rd33;
	add.s64 	%rd27, %rd34, %rd32;
	.loc	1 54 46                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:54:46
	bar.sync 	0;
	shl.b32 	%r83, %r8, 3;
	add.s32 	%r57, %r52, %r83;
	// begin inline asm
	@%p8 st.shared.b64 [ %r57 + 0 ], %rd26;
	// end inline asm
	shl.b32 	%r84, %r9, 3;
	add.s32 	%r85, %r52, %r84;
	add.s32 	%r58, %r85, 128;
	// begin inline asm
	@%p8 st.shared.b64 [ %r58 + 0 ], %rd27;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r86, %r66, 3;
	add.s32 	%r87, %r52, %r86;
	ld.shared.u64 	%rd28, [%r87];
	// begin inline asm
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	@%p19 ld.global.v2.b32 { %r59, %r60 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r59;
	mov.b32 	%f26, %r60;
	.loc	1 55 20                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:55:20
	sub.f32 	%f27, %f25, %f23;
	sub.f32 	%f28, %f26, %f24;
	.loc	1 56 20                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:56:20
	add.f32 	%f29, %f23, %f27;
	add.f32 	%f30, %f24, %f28;
	.loc	1 57 32                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:57:32
	shl.b32 	%r88, %r77, 2;
	.loc	1 57 30                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:57:30
	add.s32 	%r89, %r88, %r80;
	.loc	1 57 37                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:57:37
	add.s32 	%r90, %r89, %r76;
	.loc	1 57 25                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:57:25
	mul.wide.s32 	%rd35, %r90, 4;
	add.s64 	%rd29, %rd4, %rd35;
	.loc	1 57 52                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:57:52
	mov.b32 	%r61, %f29;
	mov.b32 	%r62, %f30;
	// begin inline asm
	@%p19 st.global.v2.b32 [ %rd29 + 0 ], { %r61, %r62 };
	// end inline asm
	.loc	1 57 4                          // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:57:4
	ret;
$L__BB0_1:
	.loc	1 53 70                         // cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py:53:70
	mov.u64 	%rd36, assertMessage_0;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, assertFile_0;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, assertFunc_0;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd37;
	.param .b64 param1;
	st.param.b64 	[param1], %rd39;
	.param .b32 param2;
	st.param.b32 	[param2], 53;
	.param .b64 param3;
	st.param.b64 	[param3], %rd41;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 181                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xae DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 105
.b8 50
.b8 97
.b8 54
.b8 97
.b8 55
.b8 109
.b8 104
.b8 116
.b8 109
.b8 110
.b8 106
.b8 109
.b8 114
.b8 105
.b8 97
.b8 111
.b8 111
.b8 53
.b8 103
.b8 54
.b8 54
.b8 111
.b8 55
.b8 101
.b8 120
.b8 105
.b8 54
.b8 100
.b8 116
.b8 117
.b8 102
.b8 54
.b8 108
.b8 52
.b8 101
.b8 100
.b8 98
.b8 114
.b8 97
.b8 119
.b8 52
.b8 51
.b8 109
.b8 101
.b8 117
.b8 116
.b8 50
.b8 100
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 105
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x27 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8a:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9f:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
