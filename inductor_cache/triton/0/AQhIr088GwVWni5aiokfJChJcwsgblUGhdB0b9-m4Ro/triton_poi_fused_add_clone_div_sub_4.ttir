#loc = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":19:0)
module {
  tt.func public @triton_poi_fused_add_clone_div_sub_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999996E-13> : tensor<16x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<16x16xi64> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<16x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<16x16xi64> loc(#loc1)
    %cst_3 = arith.constant dense<true> : tensor<16x16xi1> loc(#loc1)
    %cst_4 = arith.constant dense<48> : tensor<16x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<32> : tensor<16x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<1x16xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<16x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<1x16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_9 : tensor<1x16xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c16_i32 : i32 loc(#loc9)
    %9 = tt.expand_dims %2 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc10)
    %10 = tt.splat %8 : i32 -> tensor<16x1xi32> loc(#loc11)
    %11 = arith.addi %10, %9 : tensor<16x1xi32> loc(#loc11)
    %12 = arith.cmpi slt, %11, %cst_8 : tensor<16x1xi32> loc(#loc12)
    %13 = arith.divsi %5, %cst_7 : tensor<1x16xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_7 : tensor<1x16xi32> loc(#loc14)
    %15 = arith.muli %5, %cst_9 : tensor<1x16xi32> loc(#loc15)
    %16 = tt.broadcast %11 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc16)
    %17 = tt.broadcast %15 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc16)
    %18 = arith.addi %16, %17 : tensor<16x16xi32> loc(#loc16)
    %19 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %18 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc17)
    %21 = tt.broadcast %12 : tensor<16x1xi1> -> tensor<16x16xi1> loc(#loc18)
    %22 = tt.broadcast %6 : tensor<1x16xi1> -> tensor<16x16xi1> loc(#loc18)
    %23 = arith.andi %21, %22 : tensor<16x16xi1> loc(#loc18)
    %24 = tt.load %20, %23 : tensor<16x16x!tt.ptr<f32>> loc(#loc19)
    %25 = arith.muli %13, %cst_6 : tensor<1x16xi32> loc(#loc20)
    %26 = tt.broadcast %25 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc21)
    %27 = arith.addi %16, %26 : tensor<16x16xi32> loc(#loc21)
    %28 = tt.addptr %19, %27 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc22)
    %29 = tt.load %28, %23 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc23)
    %30 = arith.addi %11, %cst_8 : tensor<16x1xi32> loc(#loc24)
    %31 = tt.broadcast %30 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc25)
    %32 = arith.addi %31, %26 : tensor<16x16xi32> loc(#loc25)
    %33 = tt.addptr %19, %32 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc26)
    %34 = tt.load %33, %23 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc27)
    %35 = arith.addi %11, %cst_5 : tensor<16x1xi32> loc(#loc28)
    %36 = tt.broadcast %35 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc29)
    %37 = arith.addi %36, %26 : tensor<16x16xi32> loc(#loc29)
    %38 = tt.addptr %19, %37 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc30)
    %39 = tt.load %38, %23 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc31)
    %40 = arith.addi %11, %cst_4 : tensor<16x1xi32> loc(#loc32)
    %41 = tt.broadcast %40 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc33)
    %42 = arith.addi %41, %26 : tensor<16x16xi32> loc(#loc33)
    %43 = tt.addptr %19, %42 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc34)
    %44 = tt.load %43, %23 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc35)
    %45 = arith.muli %13, %cst_9 : tensor<1x16xi32> loc(#loc36)
    %46 = tt.broadcast %45 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc37)
    %47 = arith.addi %16, %46 : tensor<16x16xi32> loc(#loc37)
    %48 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<16x16x!tt.ptr<i64>> loc(#loc38)
    %49 = tt.addptr %48, %47 : tensor<16x16x!tt.ptr<i64>>, tensor<16x16xi32> loc(#loc38)
    %50 = tt.load %49, %23 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<i64>> loc(#loc39)
    %51 = arith.mulf %29, %29 : tensor<16x16xf32> loc(#loc40)
    %52 = arith.mulf %34, %34 : tensor<16x16xf32> loc(#loc41)
    %53 = arith.addf %51, %52 : tensor<16x16xf32> loc(#loc42)
    %54 = arith.mulf %39, %39 : tensor<16x16xf32> loc(#loc43)
    %55 = arith.addf %53, %54 : tensor<16x16xf32> loc(#loc44)
    %56 = arith.mulf %44, %44 : tensor<16x16xf32> loc(#loc45)
    %57 = arith.addf %55, %56 : tensor<16x16xf32> loc(#loc46)
    %58 = tt.extern_elementwise %57 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<16x16xf32>) -> tensor<16x16xf32> loc(#loc47)
    %59 = arith.cmpf ogt, %58, %cst : tensor<16x16xf32> loc(#loc75)
    %60 = arith.cmpf une, %58, %58 : tensor<16x16xf32> loc(#loc76)
    %61 = arith.ori %59, %60 : tensor<16x16xi1> loc(#loc77)
    %62 = arith.select %61, %58, %cst : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc78)
    %63 = arith.divf %24, %62 : tensor<16x16xf32> loc(#loc53)
    %64 = arith.addi %50, %cst_2 : tensor<16x16xi64> loc(#loc54)
    %65 = arith.cmpi slt, %50, %cst_0 : tensor<16x16xi64> loc(#loc55)
    %66 = arith.select %65, %64, %50 : tensor<16x16xi1>, tensor<16x16xi64> loc(#loc56)
    %67 = arith.cmpi sge, %66, %cst_0 : tensor<16x16xi64> loc(#loc57)
    %68 = arith.cmpi slt, %66, %cst_2 : tensor<16x16xi64> loc(#loc58)
    %69 = arith.andi %67, %68 : tensor<16x16xi1> loc(#loc59)
    %70 = arith.xori %23, %cst_3 : tensor<16x16xi1> loc(#loc60)
    %71 = arith.ori %69, %70 : tensor<16x16xi1> loc(#loc61)
    tt.assert %71, "index out of bounds: 0 <= tmp20 < 4" : tensor<16x16xi1> loc(#loc62)
    %72 = arith.muli %66, %cst_2 : tensor<16x16xi64> loc(#loc63)
    %73 = arith.extsi %14 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc64)
    %74 = tt.broadcast %73 : tensor<1x16xi64> -> tensor<16x16xi64> loc(#loc64)
    %75 = arith.addi %74, %72 : tensor<16x16xi64> loc(#loc64)
    %76 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc65)
    %77 = tt.addptr %76, %75 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi64> loc(#loc65)
    %78 = tt.load %77, %23 : tensor<16x16x!tt.ptr<f32>> loc(#loc66)
    %79 = arith.subf %78, %63 : tensor<16x16xf32> loc(#loc67)
    %80 = arith.addf %63, %79 : tensor<16x16xf32> loc(#loc68)
    %81 = arith.muli %11, %cst_1 : tensor<16x1xi32> loc(#loc69)
    %82 = tt.broadcast %14 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc70)
    %83 = tt.broadcast %81 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc70)
    %84 = arith.addi %82, %83 : tensor<16x16xi32> loc(#loc70)
    %85 = arith.addi %84, %26 : tensor<16x16xi32> loc(#loc71)
    %86 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc72)
    %87 = tt.addptr %86, %85 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc72)
    tt.store %87, %80, %23 : tensor<16x16x!tt.ptr<f32>> loc(#loc73)
    tt.return loc(#loc74)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":22:28)
#loc3 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":22:33)
#loc4 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":23:36)
#loc5 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":23:44)
#loc6 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":23:23)
#loc7 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":24:21)
#loc8 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":25:28)
#loc9 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":25:33)
#loc10 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":26:44)
#loc11 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":26:23)
#loc12 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":27:21)
#loc13 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":30:19)
#loc14 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":31:19)
#loc15 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":32:38)
#loc16 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":32:35)
#loc17 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":32:30)
#loc18 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":32:51)
#loc19 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":32:43)
#loc20 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":33:38)
#loc21 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":33:35)
#loc22 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":33:30)
#loc23 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":33:43)
#loc24 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":34:35)
#loc25 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":34:40)
#loc26 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":34:30)
#loc27 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":34:48)
#loc28 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":35:35)
#loc29 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":35:40)
#loc30 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":35:30)
#loc31 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":35:48)
#loc32 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":36:35)
#loc33 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":36:40)
#loc34 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":36:30)
#loc35 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":36:48)
#loc36 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":37:39)
#loc37 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":37:36)
#loc38 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":37:31)
#loc39 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":37:44)
#loc40 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":38:18)
#loc41 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":39:18)
#loc42 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":40:18)
#loc43 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":41:18)
#loc44 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":42:18)
#loc45 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":43:19)
#loc46 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":44:19)
#loc47 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":45:27)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc49 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":47:42)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc53 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":48:19)
#loc54 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":50:20)
#loc55 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":51:20)
#loc56 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":52:35)
#loc57 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":53:28)
#loc58 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":53:46)
#loc59 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":53:38)
#loc60 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":53:54)
#loc61 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":53:52)
#loc62 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":53:70)
#loc63 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":54:38)
#loc64 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":54:36)
#loc65 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":54:31)
#loc66 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":54:46)
#loc67 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":55:20)
#loc68 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":56:20)
#loc69 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":57:32)
#loc70 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":57:30)
#loc71 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":57:37)
#loc72 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":57:25)
#loc73 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":57:52)
#loc74 = loc("inductor_cache/li/cli2a6a7mhtmnjmriaoo5g66o7exi6dtuf6l4edbraw43meut2dv.py":57:4)
#loc75 = loc(callsite(#loc48 at #loc49))
#loc76 = loc(callsite(#loc50 at #loc49))
#loc77 = loc(callsite(#loc51 at #loc49))
#loc78 = loc(callsite(#loc52 at #loc49))
