; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_div_mul_neg_repeat_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = sdiv i32 %9, 32, !dbg !14
  %11 = srem i32 %9, 16, !dbg !15
  %12 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %13 = shufflevector <2 x i32> %12, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %14 = sdiv <2 x i32> %13, <i32 16, i32 4>, !dbg !16
  %15 = extractelement <2 x i32> %14, i64 1, !dbg !17
  %16 = srem i32 %15, 8, !dbg !17
  %17 = srem <2 x i32> %14, <i32 2, i32 4>, !dbg !18
  %18 = srem i32 %9, 4, !dbg !19
  %19 = shl nsw i32 %10, 4, !dbg !20
  %20 = add nsw i32 %19, %11, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !23
  %24 = extractelement <2 x i32> %14, i64 0, !dbg !24
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !24
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !25
  %28 = bitcast i32 %27 to float, !dbg !25
  %29 = extractelement <2 x i32> %17, i64 0, !dbg !26
  %30 = icmp eq i32 %29, 0, !dbg !27
  %31 = icmp slt i32 %16, 4, !dbg !28
  %32 = shl nsw i32 %29, 2, !dbg !26
  %33 = extractelement <2 x i32> %17, i64 1, !dbg !29
  %34 = add nsw i32 %32, %33, !dbg !29
  %.v = select i1 %31, i32 %34, i32 %18, !dbg !30
  %35 = sitofp i32 %.v to float, !dbg !30
  %36 = fsub float 0.000000e+00, %28, !dbg !31
  %37 = fadd float %36, %35, !dbg !32
  %38 = fmul float %37, 2.500000e-01, !dbg !33
  %39 = fmul float %38, %38, !dbg !34
  %40 = sext i32 %9 to i64, !dbg !35
  %41 = getelementptr float, ptr addrspace(1) %2, i64 %40, !dbg !35
  %42 = bitcast float %39 to i32, !dbg !36
  %43 = select i1 %30, i32 %23, i32 %42, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %43, ptr addrspace(1) %41, i1 true) #1, !dbg !36
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfe4mlbuzacknwhsxfipzpepmwu5ytqmxs7altrexiw4266pcwfc.py", directory: "inductor_cache/fe")
!4 = !{ptr @triton_poi_fused_add_div_mul_neg_repeat_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_mul_neg_repeat_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_mul_neg_repeat_1", linkageName: "triton_poi_fused_add_div_mul_neg_repeat_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 21, scope: !7)
!17 = !DILocation(line: 27, column: 26, scope: !7)
!18 = !DILocation(line: 24, column: 27, scope: !7)
!19 = !DILocation(line: 29, column: 19, scope: !7)
!20 = !DILocation(line: 32, column: 38, scope: !7)
!21 = !DILocation(line: 32, column: 35, scope: !7)
!22 = !DILocation(line: 32, column: 30, scope: !7)
!23 = !DILocation(line: 32, column: 43, scope: !7)
!24 = !DILocation(line: 33, column: 31, scope: !7)
!25 = !DILocation(line: 33, column: 36, scope: !7)
!26 = !DILocation(line: 42, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 19, scope: !7)
!28 = !DILocation(line: 41, column: 18, scope: !7)
!29 = !DILocation(line: 42, column: 16, scope: !7)
!30 = !DILocation(line: 0, scope: !7)
!31 = !DILocation(line: 56, column: 13, scope: !7)
!32 = !DILocation(line: 57, column: 20, scope: !7)
!33 = !DILocation(line: 59, column: 20, scope: !7)
!34 = !DILocation(line: 60, column: 20, scope: !7)
!35 = !DILocation(line: 62, column: 25, scope: !7)
!36 = !DILocation(line: 62, column: 37, scope: !7)
!37 = !DILocation(line: 61, column: 33, scope: !7)
!38 = !DILocation(line: 62, column: 4, scope: !7)
