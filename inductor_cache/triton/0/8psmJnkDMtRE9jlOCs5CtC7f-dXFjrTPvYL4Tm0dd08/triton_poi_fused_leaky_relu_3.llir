; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_leaky_relu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 3, !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = shl i32 %8, 1, !dbg !12
  %12 = and i32 %11, 14, !dbg !12
  %13 = or disjoint i32 %7, %10, !dbg !13
  %14 = or disjoint i32 %7, %12, !dbg !13
  %15 = icmp slt i32 %13, 256, !dbg !14
  %16 = icmp slt i32 %14, 256, !dbg !14
  %17 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %18 = shl i32 %17, 4, !dbg !16
  %19 = or disjoint i32 %18, %12, !dbg !17
  %20 = or disjoint i32 %18, %10, !dbg !17
  %21 = icmp slt i32 %19, 16, !dbg !18
  %22 = icmp slt i32 %20, 16, !dbg !18
  %23 = sdiv i32 %13, 4, !dbg !19
  %.frozen = freeze i32 %14, !dbg !19
  %24 = sdiv i32 %.frozen, 4, !dbg !19
  %25 = mul i32 %24, 4, !dbg !20
  %.decomposed = sub i32 %.frozen, %25, !dbg !20
  %26 = shl i32 %13, 4, !dbg !21
  %27 = add i32 %19, %26, !dbg !22
  %28 = sext i32 %27 to i64, !dbg !23
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !23
  %30 = and i1 %15, %21, !dbg !24
  %31 = and i1 %16, %22, !dbg !24
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %29, i1 %30) #2, !dbg !25
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !25
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !25
  %35 = bitcast i32 %33 to float, !dbg !25
  %36 = bitcast i32 %34 to float, !dbg !25
  %37 = sext i32 %23 to i64, !dbg !26
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %15) #2, !dbg !27
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %15) #2, !dbg !27
  %41 = bitcast i32 %40 to float, !dbg !27
  %42 = fadd float %35, %41, !dbg !28
  %43 = fadd float %36, %41, !dbg !28
  %44 = fcmp ogt float %42, 0.000000e+00, !dbg !29
  %45 = fcmp ogt float %43, 0.000000e+00, !dbg !29
  %46 = fmul float %42, 0x3FC99999A0000000, !dbg !30
  %47 = fmul float %43, 0x3FC99999A0000000, !dbg !30
  %48 = select i1 %44, float %42, float %46, !dbg !31
  %49 = select i1 %45, float %43, float %47, !dbg !31
  %50 = shl i32 %20, 2, !dbg !32
  %51 = add i32 %50, %.decomposed, !dbg !33
  %52 = shl i32 %24, 6, !dbg !34
  %53 = add i32 %51, %52, !dbg !35
  %54 = sext i32 %53 to i64, !dbg !36
  %55 = getelementptr i1, ptr addrspace(1) %2, i64 %54, !dbg !36
  %56 = zext i1 %44 to i8, !dbg !37
  %57 = zext i1 %45 to i8, !dbg !37
  %58 = shl i32 %8, 5, !dbg !37
  %59 = and i32 %58, 224, !dbg !37
  %60 = or disjoint i32 %59, %10, !dbg !37
  %61 = and i32 %11, 254, !dbg !37
  %62 = lshr exact i32 %59, 3, !dbg !37
  %63 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %62, !dbg !37
  %64 = getelementptr i8, ptr addrspace(3) %63, i32 %60, !dbg !37
  %65 = insertelement <1 x i8> poison, i8 %56, i64 0, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b8 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) %64, <1 x i8> %65, i1 true) #2, !dbg !37
  %66 = or disjoint i32 %60, 16, !dbg !37
  %67 = lshr i32 %66, 3, !dbg !37
  %68 = and i32 %67, 30, !dbg !37
  %69 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %68, !dbg !37
  %70 = getelementptr i8, ptr addrspace(3) %69, i32 %66, !dbg !37
  %71 = insertelement <1 x i8> poison, i8 %57, i64 0, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b8 [ $0 + 0 ], $1;", "r,h,b"(ptr addrspace(3) %70, <1 x i8> %71, i1 true) #2, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %72 = lshr i32 %11, 3, !dbg !37
  %73 = and i32 %72, 30, !dbg !37
  %74 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %73, !dbg !37
  %75 = getelementptr inbounds i8, ptr addrspace(3) %74, i32 %61, !dbg !37
  %76 = load <16 x i1>, ptr addrspace(3) %75, align 2, !dbg !37
  %77 = shufflevector <16 x i1> %76, <16 x i1> poison, <2 x i32> <i32 0, i32 8>, !dbg !37
  %78 = zext <2 x i1> %77 to <2 x i8>, !dbg !37
  %79 = bitcast <2 x i8> %78 to i16, !dbg !37
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %79, ptr addrspace(1) %55, i1 %31) #2, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !38
  %80 = bitcast float %48 to i32, !dbg !39
  %81 = bitcast float %49 to i32, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %80, i32 %81, ptr addrspace(1) %29, i1 %30) #2, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7cqfwnowe5murzy4swx4xim5ahkvyyw23p7xfqmxg4jxhm7ckbs.py", directory: "inductor_cache/7c")
!4 = !{ptr @triton_poi_fused_leaky_relu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_leaky_relu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_leaky_relu_3", linkageName: "triton_poi_fused_leaky_relu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 31, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 42, scope: !7)
!22 = !DILocation(line: 32, column: 39, scope: !7)
!23 = !DILocation(line: 32, column: 34, scope: !7)
!24 = !DILocation(line: 32, column: 55, scope: !7)
!25 = !DILocation(line: 32, column: 47, scope: !7)
!26 = !DILocation(line: 33, column: 30, scope: !7)
!27 = !DILocation(line: 33, column: 35, scope: !7)
!28 = !DILocation(line: 34, column: 18, scope: !7)
!29 = !DILocation(line: 36, column: 18, scope: !7)
!30 = !DILocation(line: 38, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 32, scope: !7)
!32 = !DILocation(line: 40, column: 32, scope: !7)
!33 = !DILocation(line: 40, column: 30, scope: !7)
!34 = !DILocation(line: 40, column: 40, scope: !7)
!35 = !DILocation(line: 40, column: 37, scope: !7)
!36 = !DILocation(line: 40, column: 25, scope: !7)
!37 = !DILocation(line: 40, column: 51, scope: !7)
!38 = !DILocation(line: 41, column: 4, scope: !7)
!39 = !DILocation(line: 42, column: 47, scope: !7)
!40 = !DILocation(line: 42, column: 4, scope: !7)
