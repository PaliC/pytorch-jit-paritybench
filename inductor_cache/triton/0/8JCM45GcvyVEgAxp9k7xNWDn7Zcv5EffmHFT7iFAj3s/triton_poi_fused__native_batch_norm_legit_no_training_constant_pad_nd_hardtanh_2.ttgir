#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_constant_pad_nd_hardtanh_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<6.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<139392> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<1056> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<33> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<32> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<34848> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<-1> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<0> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<31> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<-1024> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<992> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<30752> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_4 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_5 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_6 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %8, %cst_5 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = arith.divsi %4, %cst_7 : tensor<512xi32, #blocked> loc(#loc11)
    %11 = arith.remsi %4, %cst_4 : tensor<512xi32, #blocked> loc(#loc12)
    %12 = arith.remsi %4, %cst_6 : tensor<512xi32, #blocked> loc(#loc13)
    %13 = arith.addi %7, %cst_8 : tensor<512xi32, #blocked> loc(#loc14)
    %14 = arith.extsi %13 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc15)
    %15 = arith.cmpi sge, %14, %cst_9 : tensor<512xi64, #blocked> loc(#loc15)
    %16 = arith.cmpi slt, %14, %cst_10 : tensor<512xi64, #blocked> loc(#loc16)
    %17 = arith.addi %9, %cst_8 : tensor<512xi32, #blocked> loc(#loc17)
    %18 = arith.extsi %17 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc18)
    %19 = arith.cmpi sge, %18, %cst_9 : tensor<512xi64, #blocked> loc(#loc18)
    %20 = arith.cmpi slt, %18, %cst_10 : tensor<512xi64, #blocked> loc(#loc19)
    %21 = arith.andi %15, %16 : tensor<512xi1, #blocked> loc(#loc20)
    %22 = arith.andi %21, %19 : tensor<512xi1, #blocked> loc(#loc21)
    %23 = arith.andi %22, %20 : tensor<512xi1, #blocked> loc(#loc22)
    %24 = arith.addi %11, %cst_11 : tensor<512xi32, #blocked> loc(#loc23)
    %25 = arith.muli %7, %cst_12 : tensor<512xi32, #blocked> loc(#loc24)
    %26 = arith.addi %24, %25 : tensor<512xi32, #blocked> loc(#loc25)
    %27 = arith.muli %10, %cst_13 : tensor<512xi32, #blocked> loc(#loc26)
    %28 = arith.addi %26, %27 : tensor<512xi32, #blocked> loc(#loc27)
    %29 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %30 = tt.addptr %29, %28 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc28)
    %31 = arith.andi %23, %5 : tensor<512xi1, #blocked> loc(#loc29)
    %32 = tt.load %30, %31, %cst : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc30)
    %33 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc31)
    %34 = tt.addptr %33, %12 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc31)
    %35 = tt.load %34, %31, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc32)
    %36 = arith.subf %32, %35 : tensor<512xf32, #blocked> loc(#loc33)
    %37 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc34)
    %38 = tt.addptr %37, %12 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc34)
    %39 = tt.load %38, %31, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc35)
    %40 = arith.addf %39, %cst_0 : tensor<512xf32, #blocked> loc(#loc36)
    %41 = tt.extern_elementwise %40 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc37)
    %42 = arith.divf %cst_1, %41 : tensor<512xf32, #blocked> loc(#loc38)
    %43 = arith.mulf %36, %42 : tensor<512xf32, #blocked> loc(#loc39)
    %44 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc40)
    %45 = tt.addptr %44, %12 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc40)
    %46 = tt.load %45, %31, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc41)
    %47 = arith.mulf %43, %46 : tensor<512xf32, #blocked> loc(#loc42)
    %48 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %49 = tt.addptr %48, %12 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc43)
    %50 = tt.load %49, %31, %cst evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc44)
    %51 = arith.addf %47, %50 : tensor<512xf32, #blocked> loc(#loc45)
    %52 = arith.cmpf ogt, %51, %cst : tensor<512xf32, #blocked> loc(#loc60)
    %53 = arith.cmpf une, %51, %51 : tensor<512xf32, #blocked> loc(#loc61)
    %54 = arith.ori %52, %53 : tensor<512xi1, #blocked> loc(#loc62)
    %55 = arith.select %54, %51, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc63)
    %56 = arith.cmpf olt, %55, %cst_2 : tensor<512xf32, #blocked> loc(#loc64)
    %57 = arith.cmpf une, %55, %55 : tensor<512xf32, #blocked> loc(#loc65)
    %58 = arith.ori %56, %57 : tensor<512xi1, #blocked> loc(#loc66)
    %59 = arith.select %58, %55, %cst_2 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc67)
    %60 = arith.select %23, %59, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc56)
    %61 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc57)
    %62 = tt.addptr %61, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc57)
    tt.store %62, %60, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":21:28)
#loc3 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":21:33)
#loc4 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":22:36)
#loc5 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":22:23)
#loc6 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":23:21)
#loc7 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":24:21)
#loc8 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":24:29)
#loc9 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":25:21)
#loc10 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":25:27)
#loc11 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":26:19)
#loc12 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":27:19)
#loc13 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":28:19)
#loc14 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":30:18)
#loc15 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":32:19)
#loc16 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":34:18)
#loc17 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":35:18)
#loc18 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":36:19)
#loc19 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":37:18)
#loc20 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":38:18)
#loc21 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":39:18)
#loc22 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":40:19)
#loc23 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:41)
#loc24 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:50)
#loc25 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:46)
#loc26 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:61)
#loc27 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:55)
#loc28 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:31)
#loc29 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:74)
#loc30 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":41:66)
#loc31 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":42:31)
#loc32 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":42:36)
#loc33 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":43:20)
#loc34 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":44:31)
#loc35 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":44:36)
#loc36 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":46:20)
#loc37 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":47:27)
#loc38 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":49:20)
#loc39 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":52:20)
#loc40 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":53:31)
#loc41 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":53:36)
#loc42 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":54:20)
#loc43 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":55:31)
#loc44 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":55:36)
#loc45 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":56:20)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc47 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":58:42)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc52 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":60:42)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc56 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":62:35)
#loc57 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":63:25)
#loc58 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":63:37)
#loc59 = loc("inductor_cache/k7/ck7x4qsvhtr35t2tmlqh5ibtsedyestsjev53yxkuw5okiexyt3f.py":63:4)
#loc60 = loc(callsite(#loc46 at #loc47))
#loc61 = loc(callsite(#loc48 at #loc47))
#loc62 = loc(callsite(#loc49 at #loc47))
#loc63 = loc(callsite(#loc50 at #loc47))
#loc64 = loc(callsite(#loc51 at #loc52))
#loc65 = loc(callsite(#loc53 at #loc52))
#loc66 = loc(callsite(#loc54 at #loc52))
#loc67 = loc(callsite(#loc55 at #loc52))
