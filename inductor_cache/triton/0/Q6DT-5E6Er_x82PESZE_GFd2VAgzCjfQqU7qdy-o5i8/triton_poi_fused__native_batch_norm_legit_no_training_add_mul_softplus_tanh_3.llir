; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 6, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 62, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 64, !dbg !14
  %16 = sdiv i32 %14, 4, !dbg !15
  %17 = srem i32 %16, 4, !dbg !16
  %18 = sext i32 %14 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !17
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %15) #3, !dbg !18
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !18
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = bitcast i32 %22 to float, !dbg !18
  %25 = sext i32 %17 to i64, !dbg !19
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !19
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %15) #3, !dbg !20
  %28 = bitcast i32 %27 to float, !dbg !20
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %15) #3, !dbg !20
  %30 = bitcast i32 %29 to float, !dbg !20
  %31 = getelementptr float, ptr addrspace(1) %3, i64 %25, !dbg !21
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %15) #3, !dbg !22
  %33 = bitcast i32 %32 to float, !dbg !22
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %15) #3, !dbg !22
  %35 = bitcast i32 %34 to float, !dbg !22
  %36 = getelementptr float, ptr addrspace(1) %4, i64 %25, !dbg !23
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #3, !dbg !24
  %38 = bitcast i32 %37 to float, !dbg !24
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %15) #3, !dbg !24
  %40 = bitcast i32 %39 to float, !dbg !24
  %41 = getelementptr float, ptr addrspace(1) %5, i64 %25, !dbg !25
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %15) #3, !dbg !26
  %43 = bitcast i32 %42 to float, !dbg !26
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %15) #3, !dbg !26
  %45 = bitcast i32 %44 to float, !dbg !26
  %46 = getelementptr float, ptr addrspace(1) %6, i64 %18, !dbg !27
  %47 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %46, i1 %15) #3, !dbg !28
  %48 = fsub float %23, %28, !dbg !29
  %49 = fsub float %24, %30, !dbg !29
  %50 = fadd float %33, 0x3EE4F8B580000000, !dbg !30
  %51 = fadd float %35, 0x3EE4F8B580000000, !dbg !30
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %52, 0, !dbg !31
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i = icmp eq i32 %53, 0, !dbg !31
  br i1 %.not.i, label %59, label %54, !dbg !31

54:                                               ; preds = %8
  br i1 %.not1.i, label %57, label %55, !dbg !31

55:                                               ; preds = %54
  %56 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %50) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

57:                                               ; preds = %54
  %58 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %50) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

59:                                               ; preds = %8
  br i1 %.not1.i, label %62, label %60, !dbg !31

60:                                               ; preds = %59
  %61 = tail call float @llvm.nvvm.sqrt.rn.f(float %50) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

62:                                               ; preds = %59
  %63 = tail call float @llvm.nvvm.sqrt.approx.f(float %50) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %55, %57, %60, %62
  %.0.i = phi float [ %56, %55 ], [ %58, %57 ], [ %61, %60 ], [ %63, %62 ], !dbg !31
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %64, 0, !dbg !31
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i4 = icmp eq i32 %65, 0, !dbg !31
  br i1 %.not.i1, label %71, label %66, !dbg !31

66:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %69, label %67, !dbg !31

67:                                               ; preds = %66
  %68 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %51) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

69:                                               ; preds = %66
  %70 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %51) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

71:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %74, label %72, !dbg !31

72:                                               ; preds = %71
  %73 = tail call float @llvm.nvvm.sqrt.rn.f(float %51) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

74:                                               ; preds = %71
  %75 = tail call float @llvm.nvvm.sqrt.approx.f(float %51) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

__nv_sqrtf.exit5:                                 ; preds = %67, %69, %72, %74
  %.0.i3 = phi float [ %68, %67 ], [ %70, %69 ], [ %73, %72 ], [ %75, %74 ], !dbg !31
  %76 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !32
  %77 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !32
  %78 = fmul float %48, %76, !dbg !33
  %79 = fmul float %49, %77, !dbg !33
  %80 = fmul float %78, %38, !dbg !34
  %81 = fmul float %79, %40, !dbg !34
  %82 = fadd float %80, %43, !dbg !35
  %83 = fadd float %81, %45, !dbg !35
  %84 = fcmp ogt float %82, 2.000000e+01, !dbg !36
  %85 = fcmp ogt float %83, 2.000000e+01, !dbg !36
  %86 = fmul float %82, 0x3FF7154760000000, !dbg !37
  %87 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %86) #3, !dbg !37
  %88 = fmul float %83, 0x3FF7154760000000, !dbg !37
  %89 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %88) #3, !dbg !37
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i29 = icmp eq i32 %90, 0, !dbg !38
  %91 = tail call float @llvm.nvvm.add.rz.ftz.f(float %87, float 1.000000e+00) #3, !dbg !38
  %92 = tail call float @llvm.nvvm.add.rz.f(float %87, float 1.000000e+00) #3, !dbg !38
  %.01.i30 = select i1 %.not.i29, float %92, float %91, !dbg !38
  %93 = bitcast float %.01.i30 to i32, !dbg !38
  %94 = add i32 %93, -1061158912, !dbg !38
  %95 = and i32 %94, -8388608, !dbg !38
  %96 = bitcast float %87 to i32, !dbg !38
  %97 = sub i32 %96, %95, !dbg !38
  %98 = bitcast i32 %97 to float, !dbg !38
  %99 = sub i32 1082130432, %95, !dbg !38
  %100 = bitcast i32 %99 to float, !dbg !38
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not14.i = icmp eq i32 %101, 0, !dbg !38
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %100, float -1.000000e+00) #3, !dbg !38
  %103 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %100, float -1.000000e+00) #3, !dbg !38
  %.09.i = select i1 %.not14.i, float %103, float %102, !dbg !38
  %104 = fadd float %.09.i, %98, !dbg !38
  %105 = sitofp i32 %95 to float, !dbg !38
  %106 = fmul float %105, 0x3E80000000000000, !dbg !38
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not15.i = icmp eq i32 %107, 0, !dbg !38
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %104, float 0x3FBB000240000000) #3, !dbg !38
  %109 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %104, float 0x3FBB000240000000) #3, !dbg !38
  %.012.i = select i1 %.not15.i, float %109, float %108, !dbg !38
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not16.i = icmp eq i32 %110, 0, !dbg !38
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %104, float 0xBFC0EF1C00000000) #3, !dbg !38
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %104, float 0xBFC0EF1C00000000) #3, !dbg !38
  %.010.i = select i1 %.not16.i, float %112, float %111, !dbg !38
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not17.i = icmp eq i32 %113, 0, !dbg !38
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %104, float 0x3FC28C8EA0000000) #3, !dbg !38
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %104, float 0x3FC28C8EA0000000) #3, !dbg !38
  %.06.i31 = select i1 %.not17.i, float %115, float %114, !dbg !38
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not18.i = icmp eq i32 %116, 0, !dbg !38
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %104, float 0xBFC54D1BA0000000) #3, !dbg !38
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %104, float 0xBFC54D1BA0000000) #3, !dbg !38
  %.02.i32 = select i1 %.not18.i, float %118, float %117, !dbg !38
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not19.i = icmp eq i32 %119, 0, !dbg !38
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i32, float %104, float 0x3FC995F3C0000000) #3, !dbg !38
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i32, float %104, float 0x3FC995F3C0000000) #3, !dbg !38
  %.0.i33 = select i1 %.not19.i, float %121, float %120, !dbg !38
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not20.i = icmp eq i32 %122, 0, !dbg !38
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %104, float 0xBFD0000840000000) #3, !dbg !38
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %104, float 0xBFD0000840000000) #3, !dbg !38
  %.011.i = select i1 %.not20.i, float %124, float %123, !dbg !38
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not21.i = icmp eq i32 %125, 0, !dbg !38
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %104, float 0x3FD5555CC0000000) #3, !dbg !38
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %104, float 0x3FD5555CC0000000) #3, !dbg !38
  %.08.i = select i1 %.not21.i, float %127, float %126, !dbg !38
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not22.i = icmp eq i32 %128, 0, !dbg !38
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %104, float -5.000000e-01) #3, !dbg !38
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %104, float -5.000000e-01) #3, !dbg !38
  %.07.i = select i1 %.not22.i, float %130, float %129, !dbg !38
  %131 = fmul float %104, %.07.i, !dbg !38
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not23.i = icmp eq i32 %132, 0, !dbg !38
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %131, float %104, float %104) #3, !dbg !38
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %131, float %104, float %104) #3, !dbg !38
  %.05.i34 = select i1 %.not23.i, float %134, float %133, !dbg !38
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not24.i = icmp eq i32 %135, 0, !dbg !38
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %106, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !38
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %106, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !38
  %.04.i35 = select i1 %.not24.i, float %137, float %136, !dbg !38
  %138 = icmp ugt i32 %96, 2139095039, !dbg !38
  br i1 %138, label %139, label %__nv_log1pf.exit, !dbg !38

139:                                              ; preds = %__nv_sqrtf.exit5
  %140 = icmp sgt i32 %96, -1082130432, !dbg !38
  br i1 %140, label %__nv_fmaf_rn.exit.i, label %144, !dbg !38

__nv_fmaf_rn.exit.i:                              ; preds = %139
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not25.i = icmp eq i32 %141, 0, !dbg !38
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %87, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !38
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %87, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !38
  %.03.i36 = select i1 %.not25.i, float %143, float %142, !dbg !38
  br label %144, !dbg !38

144:                                              ; preds = %__nv_fmaf_rn.exit.i, %139
  %r.0.i = phi float [ %.03.i36, %__nv_fmaf_rn.exit.i ], [ %.04.i35, %139 ], !dbg !38
  %145 = fcmp oeq float %87, 0.000000e+00, !dbg !38
  %r.1.i = select i1 %145, float -0.000000e+00, float %r.0.i, !dbg !38
  br label %__nv_log1pf.exit, !dbg !38

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit5, %144
  %r.2.i = phi float [ %r.1.i, %144 ], [ %.04.i35, %__nv_sqrtf.exit5 ], !dbg !38
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not.i37 = icmp eq i32 %146, 0, !dbg !38
  %147 = tail call float @llvm.nvvm.add.rz.ftz.f(float %89, float 1.000000e+00) #3, !dbg !38
  %148 = tail call float @llvm.nvvm.add.rz.f(float %89, float 1.000000e+00) #3, !dbg !38
  %.01.i38 = select i1 %.not.i37, float %148, float %147, !dbg !38
  %149 = bitcast float %.01.i38 to i32, !dbg !38
  %150 = add i32 %149, -1061158912, !dbg !38
  %151 = and i32 %150, -8388608, !dbg !38
  %152 = bitcast float %89 to i32, !dbg !38
  %153 = sub i32 %152, %151, !dbg !38
  %154 = bitcast i32 %153 to float, !dbg !38
  %155 = sub i32 1082130432, %151, !dbg !38
  %156 = bitcast i32 %155 to float, !dbg !38
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not14.i39 = icmp eq i32 %157, 0, !dbg !38
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %156, float -1.000000e+00) #3, !dbg !38
  %159 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %156, float -1.000000e+00) #3, !dbg !38
  %.09.i40 = select i1 %.not14.i39, float %159, float %158, !dbg !38
  %160 = fadd float %.09.i40, %154, !dbg !38
  %161 = sitofp i32 %151 to float, !dbg !38
  %162 = fmul float %161, 0x3E80000000000000, !dbg !38
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not15.i41 = icmp eq i32 %163, 0, !dbg !38
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %160, float 0x3FBB000240000000) #3, !dbg !38
  %165 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %160, float 0x3FBB000240000000) #3, !dbg !38
  %.012.i42 = select i1 %.not15.i41, float %165, float %164, !dbg !38
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not16.i43 = icmp eq i32 %166, 0, !dbg !38
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i42, float %160, float 0xBFC0EF1C00000000) #3, !dbg !38
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i42, float %160, float 0xBFC0EF1C00000000) #3, !dbg !38
  %.010.i44 = select i1 %.not16.i43, float %168, float %167, !dbg !38
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not17.i45 = icmp eq i32 %169, 0, !dbg !38
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i44, float %160, float 0x3FC28C8EA0000000) #3, !dbg !38
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i44, float %160, float 0x3FC28C8EA0000000) #3, !dbg !38
  %.06.i46 = select i1 %.not17.i45, float %171, float %170, !dbg !38
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not18.i47 = icmp eq i32 %172, 0, !dbg !38
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i46, float %160, float 0xBFC54D1BA0000000) #3, !dbg !38
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i46, float %160, float 0xBFC54D1BA0000000) #3, !dbg !38
  %.02.i48 = select i1 %.not18.i47, float %174, float %173, !dbg !38
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not19.i49 = icmp eq i32 %175, 0, !dbg !38
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i48, float %160, float 0x3FC995F3C0000000) #3, !dbg !38
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i48, float %160, float 0x3FC995F3C0000000) #3, !dbg !38
  %.0.i50 = select i1 %.not19.i49, float %177, float %176, !dbg !38
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not20.i51 = icmp eq i32 %178, 0, !dbg !38
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i50, float %160, float 0xBFD0000840000000) #3, !dbg !38
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i50, float %160, float 0xBFD0000840000000) #3, !dbg !38
  %.011.i52 = select i1 %.not20.i51, float %180, float %179, !dbg !38
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not21.i53 = icmp eq i32 %181, 0, !dbg !38
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i52, float %160, float 0x3FD5555CC0000000) #3, !dbg !38
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i52, float %160, float 0x3FD5555CC0000000) #3, !dbg !38
  %.08.i54 = select i1 %.not21.i53, float %183, float %182, !dbg !38
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not22.i55 = icmp eq i32 %184, 0, !dbg !38
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i54, float %160, float -5.000000e-01) #3, !dbg !38
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i54, float %160, float -5.000000e-01) #3, !dbg !38
  %.07.i56 = select i1 %.not22.i55, float %186, float %185, !dbg !38
  %187 = fmul float %160, %.07.i56, !dbg !38
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not23.i57 = icmp eq i32 %188, 0, !dbg !38
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float %160, float %160) #3, !dbg !38
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %187, float %160, float %160) #3, !dbg !38
  %.05.i58 = select i1 %.not23.i57, float %190, float %189, !dbg !38
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not24.i59 = icmp eq i32 %191, 0, !dbg !38
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %162, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !38
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %162, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !38
  %.04.i60 = select i1 %.not24.i59, float %193, float %192, !dbg !38
  %194 = icmp ugt i32 %152, 2139095039, !dbg !38
  br i1 %194, label %195, label %__nv_log1pf.exit67, !dbg !38

195:                                              ; preds = %__nv_log1pf.exit
  %196 = icmp sgt i32 %152, -1082130432, !dbg !38
  br i1 %196, label %__nv_fmaf_rn.exit.i64, label %200, !dbg !38

__nv_fmaf_rn.exit.i64:                            ; preds = %195
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !38
  %.not25.i65 = icmp eq i32 %197, 0, !dbg !38
  %198 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %89, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !38
  %199 = tail call float @llvm.nvvm.fma.rn.f(float %89, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !38
  %.03.i66 = select i1 %.not25.i65, float %199, float %198, !dbg !38
  br label %200, !dbg !38

200:                                              ; preds = %__nv_fmaf_rn.exit.i64, %195
  %r.0.i62 = phi float [ %.03.i66, %__nv_fmaf_rn.exit.i64 ], [ %.04.i60, %195 ], !dbg !38
  %201 = fcmp oeq float %89, 0.000000e+00, !dbg !38
  %r.1.i63 = select i1 %201, float -0.000000e+00, float %r.0.i62, !dbg !38
  br label %__nv_log1pf.exit67, !dbg !38

__nv_log1pf.exit67:                               ; preds = %__nv_log1pf.exit, %200
  %r.2.i61 = phi float [ %r.1.i63, %200 ], [ %.04.i60, %__nv_log1pf.exit ], !dbg !38
  %202 = select i1 %84, float %82, float %r.2.i, !dbg !39
  %203 = select i1 %85, float %83, float %r.2.i61, !dbg !39
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i6 = icmp eq i32 %204, 0, !dbg !40
  %205 = tail call float @llvm.nvvm.fabs.ftz.f(float %202) #3, !dbg !40
  %206 = tail call float @llvm.nvvm.fabs.f(float %202) #3, !dbg !40
  %.01.i = select i1 %.not.i6, float %206, float %205, !dbg !40
  %207 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !40
  br i1 %207, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !40

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit67
  %208 = fmul float %.01.i, 0x4007154760000000, !dbg !40
  %209 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %208) #3, !dbg !40
  %210 = fadd float %209, 1.000000e+00, !dbg !40
  %211 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %210) #4, !dbg !40, !srcloc !41
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not6.i = icmp eq i32 %212, 0, !dbg !40
  %213 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %211, float -2.000000e+00, float 1.000000e+00) #3, !dbg !40
  %214 = tail call float @llvm.nvvm.fma.rn.f(float %211, float -2.000000e+00, float 1.000000e+00) #3, !dbg !40
  %.03.i = select i1 %.not6.i, float %214, float %213, !dbg !40
  %215 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !40
  %s.0.i = select i1 %215, float 1.000000e+00, float %.03.i, !dbg !40
  %216 = bitcast float %s.0.i to i32, !dbg !40
  %217 = bitcast float %202 to i32, !dbg !40
  %218 = and i32 %217, -2147483648, !dbg !40
  %219 = or i32 %218, %216, !dbg !40
  %220 = bitcast i32 %219 to float, !dbg !40
  br label %__nv_tanhf.exit, !dbg !40

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit67
  %221 = fmul float %202, %202, !dbg !40
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not1.i7 = icmp eq i32 %222, 0, !dbg !40
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #3, !dbg !40
  %224 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %221, float 0xBFAAC795C0000000) #3, !dbg !40
  %.06.i = select i1 %.not1.i7, float %224, float %223, !dbg !40
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not2.i8 = icmp eq i32 %225, 0, !dbg !40
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %221, float 0x3FC10B2820000000) #3, !dbg !40
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %221, float 0x3FC10B2820000000) #3, !dbg !40
  %.05.i = select i1 %.not2.i8, float %227, float %226, !dbg !40
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not3.i = icmp eq i32 %228, 0, !dbg !40
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %221, float 0xBFD5553DA0000000) #3, !dbg !40
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %221, float 0xBFD5553DA0000000) #3, !dbg !40
  %.0.i9 = select i1 %.not3.i, float %230, float %229, !dbg !40
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not4.i = icmp eq i32 %231, 0, !dbg !40
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i9, float %221, float 0.000000e+00) #3, !dbg !40
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i9, float %221, float 0.000000e+00) #3, !dbg !40
  %.04.i = select i1 %.not4.i, float %233, float %232, !dbg !40
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not5.i = icmp eq i32 %234, 0, !dbg !40
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %202, float %202) #3, !dbg !40
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %202, float %202) #3, !dbg !40
  %.02.i = select i1 %.not5.i, float %236, float %235, !dbg !40
  br label %__nv_tanhf.exit, !dbg !40

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %220, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !40
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i10 = icmp eq i32 %237, 0, !dbg !40
  %238 = tail call float @llvm.nvvm.fabs.ftz.f(float %203) #3, !dbg !40
  %239 = tail call float @llvm.nvvm.fabs.f(float %203) #3, !dbg !40
  %.01.i11 = select i1 %.not.i10, float %239, float %238, !dbg !40
  %240 = fcmp ult float %.01.i11, 0x3FE3333340000000, !dbg !40
  br i1 %240, label %__internal_fmad.exit3.i17, label %__internal_fmad.exit1.i12, !dbg !40

__internal_fmad.exit1.i12:                        ; preds = %__nv_tanhf.exit
  %241 = fmul float %.01.i11, 0x4007154760000000, !dbg !40
  %242 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %241) #3, !dbg !40
  %243 = fadd float %242, 1.000000e+00, !dbg !40
  %244 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %243) #4, !dbg !40, !srcloc !41
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not6.i13 = icmp eq i32 %245, 0, !dbg !40
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %244, float -2.000000e+00, float 1.000000e+00) #3, !dbg !40
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %244, float -2.000000e+00, float 1.000000e+00) #3, !dbg !40
  %.03.i14 = select i1 %.not6.i13, float %247, float %246, !dbg !40
  %248 = fcmp oge float %.01.i11, 0x4022059680000000, !dbg !40
  %s.0.i15 = select i1 %248, float 1.000000e+00, float %.03.i14, !dbg !40
  %249 = bitcast float %s.0.i15 to i32, !dbg !40
  %250 = bitcast float %203 to i32, !dbg !40
  %251 = and i32 %250, -2147483648, !dbg !40
  %252 = or i32 %251, %249, !dbg !40
  %253 = bitcast i32 %252 to float, !dbg !40
  br label %__nv_tanhf.exit28, !dbg !40

__internal_fmad.exit3.i17:                        ; preds = %__nv_tanhf.exit
  %254 = fmul float %203, %203, !dbg !40
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not1.i18 = icmp eq i32 %255, 0, !dbg !40
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #3, !dbg !40
  %257 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %254, float 0xBFAAC795C0000000) #3, !dbg !40
  %.06.i19 = select i1 %.not1.i18, float %257, float %256, !dbg !40
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not2.i20 = icmp eq i32 %258, 0, !dbg !40
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i19, float %254, float 0x3FC10B2820000000) #3, !dbg !40
  %260 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i19, float %254, float 0x3FC10B2820000000) #3, !dbg !40
  %.05.i21 = select i1 %.not2.i20, float %260, float %259, !dbg !40
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not3.i22 = icmp eq i32 %261, 0, !dbg !40
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i21, float %254, float 0xBFD5553DA0000000) #3, !dbg !40
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i21, float %254, float 0xBFD5553DA0000000) #3, !dbg !40
  %.0.i23 = select i1 %.not3.i22, float %263, float %262, !dbg !40
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not4.i24 = icmp eq i32 %264, 0, !dbg !40
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i23, float %254, float 0.000000e+00) #3, !dbg !40
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i23, float %254, float 0.000000e+00) #3, !dbg !40
  %.04.i25 = select i1 %.not4.i24, float %266, float %265, !dbg !40
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not5.i26 = icmp eq i32 %267, 0, !dbg !40
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i25, float %203, float %203) #3, !dbg !40
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i25, float %203, float %203) #3, !dbg !40
  %.02.i27 = select i1 %.not5.i26, float %269, float %268, !dbg !40
  br label %__nv_tanhf.exit28, !dbg !40

__nv_tanhf.exit28:                                ; preds = %__internal_fmad.exit1.i12, %__internal_fmad.exit3.i17
  %s.1.i16 = phi float [ %253, %__internal_fmad.exit1.i12 ], [ %.02.i27, %__internal_fmad.exit3.i17 ], !dbg !40
  %270 = extractvalue { i32, i32 } %47, 1, !dbg !28
  %271 = bitcast i32 %270 to float, !dbg !28
  %272 = extractvalue { i32, i32 } %47, 0, !dbg !28
  %273 = bitcast i32 %272 to float, !dbg !28
  %274 = fmul float %82, %s.1.i, !dbg !42
  %275 = fmul float %83, %s.1.i16, !dbg !42
  %276 = fadd float %274, %273, !dbg !43
  %277 = fadd float %275, %271, !dbg !43
  %278 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !44
  %279 = bitcast float %276 to i32, !dbg !45
  %280 = bitcast float %277 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %279, i32 %280, ptr addrspace(1) %278, i1 %15) #3, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crgjopjmfgnfep2np624242dabgfdn52xpa3fct6yzwjxcfatfsq.py", directory: "inductor_cache/rg")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_3, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_3", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 31, scope: !7)
!24 = !DILocation(line: 29, column: 36, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 31, scope: !7)
!28 = !DILocation(line: 31, column: 36, scope: !7)
!29 = !DILocation(line: 32, column: 18, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 35, column: 26, scope: !7)
!32 = !DILocation(line: 37, column: 18, scope: !7)
!33 = !DILocation(line: 40, column: 19, scope: !7)
!34 = !DILocation(line: 41, column: 20, scope: !7)
!35 = !DILocation(line: 42, column: 20, scope: !7)
!36 = !DILocation(line: 44, column: 20, scope: !7)
!37 = !DILocation(line: 45, column: 24, scope: !7)
!38 = !DILocation(line: 46, column: 28, scope: !7)
!39 = !DILocation(line: 47, column: 35, scope: !7)
!40 = !DILocation(line: 48, column: 27, scope: !7)
!41 = !{i32 21046}
!42 = !DILocation(line: 49, column: 20, scope: !7)
!43 = !DILocation(line: 50, column: 20, scope: !7)
!44 = !DILocation(line: 51, column: 28, scope: !7)
!45 = !DILocation(line: 51, column: 40, scope: !7)
!46 = !DILocation(line: 51, column: 4, scope: !7)
