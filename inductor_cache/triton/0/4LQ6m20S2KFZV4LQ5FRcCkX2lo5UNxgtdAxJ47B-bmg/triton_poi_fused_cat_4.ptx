//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_4  // -- Begin function triton_poi_fused_cat_4
                                        // @triton_poi_fused_cat_4
.visible .entry triton_poi_fused_cat_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_4_param_1,
	.param .u32 triton_poi_fused_cat_4_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_cat_4_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_cat_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:21:33
	shl.b32 	%r19, %r1, 7;
	.loc	1 22 36                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:22:36
	mov.u32 	%r20, %tid.x;
	and.b32  	%r21, %r20, 127;
	.loc	1 22 23                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:22:23
	or.b32  	%r22, %r19, %r21;
	.loc	1 23 21                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:23:21
	setp.lt.s32 	%p17, %r22, 512;
	.loc	1 25 19                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:25:19
	shr.s32 	%r24, %r22, 31;
	shr.u32 	%r25, %r24, 27;
	add.s32 	%r26, %r22, %r25;
	shr.s32 	%r27, %r26, 5;
	.loc	1 24 19                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:24:19
	and.b32  	%r28, %r26, -32;
	sub.s32 	%r29, %r22, %r28;
	.loc	1 31 18                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:31:18
	setp.lt.s32 	%p18, %r29, 4;
	.loc	1 32 32                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:32:32
	shl.b32 	%r30, %r27, 2;
	.loc	1 32 38                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:32:38
	add.s32 	%r31, %r30, %r29;
	.loc	1 32 30                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:32:30
	mul.wide.s32 	%rd12, %r31, 4;
	add.s64 	%rd1, %rd10, %rd12;
	.loc	1 32 51                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:32:51
	and.pred  	%p1, %p17, %p18;
	mov.b32 	%r3, 0;
	.loc	1 32 44                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:32:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	.loc	1 36 18                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:36:18
	and.b32  	%r32, %r29, -4;
	setp.eq.s32 	%p19, %r32, 4;
	.loc	1 37 31                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:37:31
	add.s64 	%rd2, %rd1, 240;
	.loc	1 37 64                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:37:64
	and.pred  	%p3, %p17, %p19;
	.loc	1 37 57                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:37:57
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	@!%p3 mov.u32 %r4, %r3;
	// end inline asm
	.loc	1 41 20                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:41:20
	setp.eq.s32 	%p20, %r32, 8;
	.loc	1 42 31                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:42:31
	add.s64 	%rd3, %rd1, 480;
	.loc	1 42 66                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:42:66
	and.pred  	%p5, %p17, %p20;
	.loc	1 42 58                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:42:58
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	@!%p5 mov.u32 %r6, %r3;
	// end inline asm
	.loc	1 46 20                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:46:20
	setp.eq.s32 	%p21, %r32, 12;
	.loc	1 47 31                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:47:31
	add.s64 	%rd4, %rd1, 720;
	.loc	1 47 67                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:47:67
	and.pred  	%p7, %p17, %p21;
	.loc	1 47 59                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:47:59
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r8, %r3;
	// end inline asm
	.loc	1 51 20                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:51:20
	setp.eq.s32 	%p22, %r32, 16;
	.loc	1 52 31                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:52:31
	add.s64 	%rd5, %rd1, 960;
	.loc	1 52 67                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:52:67
	and.pred  	%p9, %p17, %p22;
	.loc	1 52 59                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:52:59
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p9 mov.u32 %r10, %r3;
	// end inline asm
	.loc	1 56 20                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:56:20
	setp.eq.s32 	%p23, %r32, 20;
	.loc	1 57 31                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:57:31
	add.s64 	%rd6, %rd1, 1200;
	.loc	1 57 67                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:57:67
	and.pred  	%p11, %p17, %p23;
	.loc	1 57 59                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:57:59
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.b32 { %r12 }, [ %rd6 + 0 ];
	@!%p11 mov.u32 %r12, %r3;
	// end inline asm
	.loc	1 61 20                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:61:20
	setp.eq.s32 	%p24, %r32, 24;
	.loc	1 62 31                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:62:31
	add.s64 	%rd7, %rd1, 1440;
	.loc	1 62 67                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:62:67
	and.pred  	%p13, %p17, %p24;
	.loc	1 62 59                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:62:59
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	@!%p13 mov.u32 %r14, %r3;
	// end inline asm
	.loc	1 63 20                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:63:20
	setp.gt.s32 	%p25, %r29, 27;
	.loc	1 66 31                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:66:31
	add.s64 	%rd8, %rd1, 1680;
	.loc	1 66 67                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:66:67
	and.pred  	%p15, %p17, %p25;
	.loc	1 66 59                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:66:59
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r16 }, [ %rd8 + 0 ];
	@!%p15 mov.u32 %r16, %r3;
	// end inline asm
	.loc	1 67 35                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:67:35
	selp.b32 	%r33, %r14, %r16, %p24;
	.loc	1 68 35                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:68:35
	selp.b32 	%r34, %r12, %r33, %p23;
	.loc	1 69 35                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:69:35
	selp.b32 	%r35, %r10, %r34, %p22;
	.loc	1 70 35                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:70:35
	selp.b32 	%r36, %r8, %r35, %p21;
	.loc	1 71 35                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:71:35
	selp.b32 	%r37, %r6, %r36, %p20;
	.loc	1 72 34                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:72:34
	selp.b32 	%r38, %r4, %r37, %p19;
	.loc	1 73 33                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:73:33
	selp.b32 	%r18, %r2, %r38, %p18;
	.loc	1 74 25                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:74:25
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd9, %rd11, %rd13;
	.loc	1 74 37                         // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:74:37
	// begin inline asm
	@%p17 st.global.b32 [ %rd9 + 0 ], { %r18 };
	// end inline asm
	.loc	1 74 4                          // c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py:74:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7n/c7nq62jrcev3h2by2zjkeu3yn6xkv2ww3jvj7haigkjzyyzgrvse.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 110
.b8 113
.b8 54
.b8 50
.b8 106
.b8 114
.b8 99
.b8 101
.b8 118
.b8 51
.b8 104
.b8 50
.b8 98
.b8 121
.b8 50
.b8 122
.b8 106
.b8 107
.b8 101
.b8 117
.b8 51
.b8 121
.b8 110
.b8 54
.b8 120
.b8 107
.b8 118
.b8 50
.b8 119
.b8 119
.b8 51
.b8 106
.b8 118
.b8 106
.b8 55
.b8 104
.b8 97
.b8 105
.b8 103
.b8 107
.b8 106
.b8 122
.b8 121
.b8 121
.b8 122
.b8 103
.b8 114
.b8 118
.b8 115
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
