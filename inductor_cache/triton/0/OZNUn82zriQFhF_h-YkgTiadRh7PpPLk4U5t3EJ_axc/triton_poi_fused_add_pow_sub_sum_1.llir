; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_pow_sub_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 4, !dbg !15
  %13 = mul i32 %12, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = shl nsw i32 %12, 2, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %11) #1, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %11) #1, !dbg !19
  %19 = or disjoint i32 %14, 1, !dbg !20
  %20 = sext i32 %19 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %11) #1, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %11) #1, !dbg !22
  %24 = or disjoint i32 %14, 2, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !24
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %11) #1, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %11) #1, !dbg !25
  %29 = or disjoint i32 %14, 3, !dbg !26
  %30 = sext i32 %29 to i64, !dbg !27
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !27
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %11) #1, !dbg !28
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %11) #1, !dbg !28
  %34 = sext i32 %10 to i64, !dbg !29
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !29
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %35, i1 %11) #1, !dbg !30
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !30
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !30
  %39 = bitcast i32 %37 to float, !dbg !30
  %40 = bitcast i32 %38 to float, !dbg !30
  %41 = sext i32 %.decomposed to i64, !dbg !31
  %42 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !31
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %11) #1, !dbg !32
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !32
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !32
  %46 = getelementptr i8, ptr addrspace(1) %42, i64 16, !dbg !33
  %47 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %46, i1 %11) #1, !dbg !34
  %48 = extractvalue { i32, i32 } %47, 0, !dbg !34
  %49 = extractvalue { i32, i32 } %47, 1, !dbg !34
  %50 = getelementptr i8, ptr addrspace(1) %42, i64 32, !dbg !35
  %51 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %50, i1 %11) #1, !dbg !36
  %52 = extractvalue { i32, i32 } %51, 0, !dbg !36
  %53 = extractvalue { i32, i32 } %51, 1, !dbg !36
  %54 = getelementptr i8, ptr addrspace(1) %42, i64 48, !dbg !37
  %55 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %54, i1 %11) #1, !dbg !38
  %56 = extractvalue { i32, i32 } %55, 0, !dbg !38
  %57 = extractvalue { i32, i32 } %55, 1, !dbg !38
  %58 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !19
  %59 = insertelement <2 x i32> %58, i32 %44, i64 1, !dbg !19
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !19
  %61 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !22
  %62 = insertelement <2 x i32> %61, i32 %48, i64 1, !dbg !22
  %63 = bitcast <2 x i32> %62 to <2 x float>, !dbg !22
  %64 = insertelement <2 x i32> poison, i32 %27, i64 0, !dbg !25
  %65 = insertelement <2 x i32> %64, i32 %52, i64 1, !dbg !25
  %66 = bitcast <2 x i32> %65 to <2 x float>, !dbg !25
  %67 = insertelement <2 x i32> poison, i32 %32, i64 0, !dbg !28
  %68 = insertelement <2 x i32> %67, i32 %56, i64 1, !dbg !28
  %69 = bitcast <2 x i32> %68 to <2 x float>, !dbg !28
  %70 = fmul <2 x float> %60, %60, !dbg !39
  %71 = fmul <2 x float> %63, %63, !dbg !40
  %72 = fadd <2 x float> %70, %71, !dbg !41
  %73 = fmul <2 x float> %66, %66, !dbg !42
  %74 = fadd <2 x float> %72, %73, !dbg !43
  %75 = fmul <2 x float> %69, %69, !dbg !44
  %76 = fadd <2 x float> %74, %75, !dbg !45
  %77 = extractelement <2 x float> %76, i64 0, !dbg !46
  %78 = fsub float %77, %39, !dbg !46
  %79 = insertelement <2 x i32> poison, i32 %18, i64 0, !dbg !19
  %80 = insertelement <2 x i32> %79, i32 %45, i64 1, !dbg !19
  %81 = bitcast <2 x i32> %80 to <2 x float>, !dbg !19
  %82 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !22
  %83 = insertelement <2 x i32> %82, i32 %49, i64 1, !dbg !22
  %84 = bitcast <2 x i32> %83 to <2 x float>, !dbg !22
  %85 = insertelement <2 x i32> poison, i32 %28, i64 0, !dbg !25
  %86 = insertelement <2 x i32> %85, i32 %53, i64 1, !dbg !25
  %87 = bitcast <2 x i32> %86 to <2 x float>, !dbg !25
  %88 = insertelement <2 x i32> poison, i32 %33, i64 0, !dbg !28
  %89 = insertelement <2 x i32> %88, i32 %57, i64 1, !dbg !28
  %90 = bitcast <2 x i32> %89 to <2 x float>, !dbg !28
  %91 = fmul <2 x float> %81, %81, !dbg !39
  %92 = fmul <2 x float> %84, %84, !dbg !40
  %93 = fadd <2 x float> %91, %92, !dbg !41
  %94 = fmul <2 x float> %87, %87, !dbg !42
  %95 = fadd <2 x float> %93, %94, !dbg !43
  %96 = fmul <2 x float> %90, %90, !dbg !44
  %97 = fadd <2 x float> %95, %96, !dbg !45
  %98 = extractelement <2 x float> %97, i64 0, !dbg !46
  %99 = fsub float %98, %40, !dbg !46
  %100 = extractelement <2 x float> %76, i64 1, !dbg !47
  %101 = fadd float %78, %100, !dbg !47
  %102 = extractelement <2 x float> %97, i64 1, !dbg !47
  %103 = fadd float %99, %102, !dbg !47
  %104 = bitcast float %101 to i32, !dbg !48
  %105 = bitcast float %103 to i32, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %104, i32 %105, ptr addrspace(1) %35, i1 %11) #1, !dbg !48
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chfjbdgavvzuk24upadgkxdngqw5sgqyq24ca7usdx64usgr74lq.py", directory: "inductor_cache/hf")
!4 = !{ptr @triton_poi_fused_add_pow_sub_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_pow_sub_sum_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_pow_sub_sum_1", linkageName: "triton_poi_fused_add_pow_sub_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 32, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 37, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 41, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 41, scope: !7)
!26 = !DILocation(line: 30, column: 34, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 41, scope: !7)
!29 = !DILocation(line: 31, column: 35, scope: !7)
!30 = !DILocation(line: 31, column: 40, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 36, scope: !7)
!33 = !DILocation(line: 33, column: 31, scope: !7)
!34 = !DILocation(line: 33, column: 40, scope: !7)
!35 = !DILocation(line: 34, column: 31, scope: !7)
!36 = !DILocation(line: 34, column: 40, scope: !7)
!37 = !DILocation(line: 35, column: 31, scope: !7)
!38 = !DILocation(line: 35, column: 41, scope: !7)
!39 = !DILocation(line: 36, column: 18, scope: !7)
!40 = !DILocation(line: 37, column: 18, scope: !7)
!41 = !DILocation(line: 38, column: 18, scope: !7)
!42 = !DILocation(line: 39, column: 18, scope: !7)
!43 = !DILocation(line: 40, column: 18, scope: !7)
!44 = !DILocation(line: 41, column: 18, scope: !7)
!45 = !DILocation(line: 42, column: 19, scope: !7)
!46 = !DILocation(line: 43, column: 20, scope: !7)
!47 = !DILocation(line: 51, column: 20, scope: !7)
!48 = !DILocation(line: 52, column: 40, scope: !7)
!49 = !DILocation(line: 52, column: 4, scope: !7)
