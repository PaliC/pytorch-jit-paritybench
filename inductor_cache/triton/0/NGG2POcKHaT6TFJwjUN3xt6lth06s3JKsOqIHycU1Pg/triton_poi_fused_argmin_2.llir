; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_argmin_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 64, !dbg !14
  %11 = shl i32 %9, 2, !dbg !15
  %12 = or disjoint i32 %11, 4, !dbg !15
  %13 = sext i32 %11 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = sext i32 %12 to i64, !dbg !16
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !16
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %10) #1, !dbg !17
  %18 = bitcast i32 %17 to float, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %10) #1, !dbg !17
  %20 = bitcast i32 %19 to float, !dbg !17
  %21 = or disjoint i32 %11, 1, !dbg !18
  %22 = or disjoint i32 %11, 5, !dbg !18
  %23 = sext i32 %21 to i64, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !19
  %25 = sext i32 %22 to i64, !dbg !19
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !19
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %10) #1, !dbg !20
  %28 = bitcast i32 %27 to float, !dbg !20
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %10) #1, !dbg !20
  %30 = bitcast i32 %29 to float, !dbg !20
  %31 = or disjoint i32 %11, 2, !dbg !21
  %32 = or disjoint i32 %11, 6, !dbg !21
  %33 = sext i32 %31 to i64, !dbg !22
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !22
  %35 = sext i32 %32 to i64, !dbg !22
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !22
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %10) #1, !dbg !23
  %38 = bitcast i32 %37 to float, !dbg !23
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %10) #1, !dbg !23
  %40 = bitcast i32 %39 to float, !dbg !23
  %41 = or disjoint i32 %11, 3, !dbg !24
  %42 = or disjoint i32 %11, 7, !dbg !24
  %43 = sext i32 %41 to i64, !dbg !25
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !25
  %45 = sext i32 %42 to i64, !dbg !25
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !25
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %10) #1, !dbg !26
  %48 = bitcast i32 %47 to float, !dbg !26
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %10) #1, !dbg !26
  %50 = bitcast i32 %49 to float, !dbg !26
  %51 = fcmp olt float %18, %28, !dbg !27
  %52 = fcmp olt float %20, %30, !dbg !27
  %53 = fcmp oeq float %18, %28, !dbg !28
  %54 = fcmp oeq float %20, %30, !dbg !28
  %55 = fcmp uno float %18, 0.000000e+00, !dbg !29
  %56 = fcmp uno float %20, 0.000000e+00, !dbg !29
  %57 = fcmp uno float %28, 0.000000e+00, !dbg !30
  %58 = fcmp uno float %30, 0.000000e+00, !dbg !30
  %59 = xor i1 %57, true, !dbg !31
  %60 = and i1 %55, %59, !dbg !31
  %61 = xor i1 %58, true, !dbg !31
  %62 = and i1 %56, %61, !dbg !31
  %63 = or i1 %51, %60, !dbg !32
  %64 = or i1 %52, %62, !dbg !32
  %65 = and i1 %55, %57, !dbg !33
  %66 = and i1 %56, %58, !dbg !33
  %67 = or i1 %53, %65, !dbg !34
  %68 = or i1 %54, %66, !dbg !34
  %69 = or i1 %63, %67, !dbg !35
  %70 = or i1 %64, %68, !dbg !35
  %71 = select i1 %69, float %18, float %28, !dbg !36
  %72 = select i1 %70, float %20, float %30, !dbg !36
  %not. = xor i1 %69, true, !dbg !37
  %73 = zext i1 %not. to i64, !dbg !37
  %not.1 = xor i1 %70, true, !dbg !37
  %74 = zext i1 %not.1 to i64, !dbg !37
  %75 = fcmp olt float %71, %38, !dbg !38
  %76 = fcmp olt float %72, %40, !dbg !38
  %77 = fcmp oeq float %71, %38, !dbg !39
  %78 = fcmp oeq float %72, %40, !dbg !39
  %79 = fcmp uno float %71, 0.000000e+00, !dbg !40
  %80 = fcmp uno float %72, 0.000000e+00, !dbg !40
  %81 = fcmp uno float %38, 0.000000e+00, !dbg !41
  %82 = fcmp uno float %40, 0.000000e+00, !dbg !41
  %83 = xor i1 %81, true, !dbg !42
  %84 = and i1 %79, %83, !dbg !42
  %85 = xor i1 %82, true, !dbg !42
  %86 = and i1 %80, %85, !dbg !42
  %87 = or i1 %75, %84, !dbg !43
  %88 = or i1 %76, %86, !dbg !43
  %89 = and i1 %81, %79, !dbg !44
  %90 = and i1 %82, %80, !dbg !44
  %91 = or i1 %77, %89, !dbg !45
  %92 = or i1 %78, %90, !dbg !45
  %93 = or i1 %87, %91, !dbg !46
  %94 = or i1 %88, %92, !dbg !46
  %95 = select i1 %93, float %71, float %38, !dbg !47
  %96 = select i1 %94, float %72, float %40, !dbg !47
  %97 = select i1 %93, i64 %73, i64 2, !dbg !48
  %98 = select i1 %94, i64 %74, i64 2, !dbg !48
  %99 = fcmp olt float %95, %48, !dbg !49
  %100 = fcmp olt float %96, %50, !dbg !49
  %101 = fcmp oeq float %95, %48, !dbg !50
  %102 = fcmp oeq float %96, %50, !dbg !50
  %103 = fcmp uno float %95, 0.000000e+00, !dbg !51
  %104 = fcmp uno float %96, 0.000000e+00, !dbg !51
  %105 = fcmp uno float %48, 0.000000e+00, !dbg !52
  %106 = fcmp uno float %50, 0.000000e+00, !dbg !52
  %107 = xor i1 %105, true, !dbg !53
  %108 = and i1 %103, %107, !dbg !53
  %109 = xor i1 %106, true, !dbg !53
  %110 = and i1 %104, %109, !dbg !53
  %111 = or i1 %99, %108, !dbg !54
  %112 = or i1 %100, %110, !dbg !54
  %113 = and i1 %105, %103, !dbg !55
  %114 = and i1 %106, %104, !dbg !55
  %115 = or i1 %101, %113, !dbg !56
  %116 = or i1 %102, %114, !dbg !56
  %117 = or i1 %111, %115, !dbg !57
  %118 = or i1 %112, %116, !dbg !57
  %119 = select i1 %117, i64 %97, i64 3, !dbg !58
  %120 = select i1 %118, i64 %98, i64 3, !dbg !58
  %121 = sext i32 %9 to i64, !dbg !59
  %122 = getelementptr i64, ptr addrspace(1) %1, i64 %121, !dbg !59
  tail call void asm sideeffect "@$3 st.global.v2.b64 [ $2 + 0 ], { $0, $1 };", "l,l,l,b"(i64 %119, i64 %120, ptr addrspace(1) %122, i1 %10) #1, !dbg !60
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfx226r3uxlm3mkbp6dv5on76xtl6xr2fhsfnu23xq7saafbu6tm.py", directory: "inductor_cache/fx")
!4 = !{ptr @triton_poi_fused_argmin_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_argmin_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_argmin_2", linkageName: "triton_poi_fused_argmin_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 41, scope: !7)
!21 = !DILocation(line: 27, column: 35, scope: !7)
!22 = !DILocation(line: 27, column: 31, scope: !7)
!23 = !DILocation(line: 27, column: 42, scope: !7)
!24 = !DILocation(line: 28, column: 35, scope: !7)
!25 = !DILocation(line: 28, column: 31, scope: !7)
!26 = !DILocation(line: 28, column: 42, scope: !7)
!27 = !DILocation(line: 29, column: 18, scope: !7)
!28 = !DILocation(line: 30, column: 19, scope: !7)
!29 = !DILocation(line: 31, column: 19, scope: !7)
!30 = !DILocation(line: 32, column: 19, scope: !7)
!31 = !DILocation(line: 33, column: 18, scope: !7)
!32 = !DILocation(line: 34, column: 18, scope: !7)
!33 = !DILocation(line: 35, column: 18, scope: !7)
!34 = !DILocation(line: 36, column: 18, scope: !7)
!35 = !DILocation(line: 41, column: 19, scope: !7)
!36 = !DILocation(line: 42, column: 34, scope: !7)
!37 = !DILocation(line: 43, column: 35, scope: !7)
!38 = !DILocation(line: 44, column: 20, scope: !7)
!39 = !DILocation(line: 45, column: 21, scope: !7)
!40 = !DILocation(line: 46, column: 21, scope: !7)
!41 = !DILocation(line: 47, column: 21, scope: !7)
!42 = !DILocation(line: 48, column: 20, scope: !7)
!43 = !DILocation(line: 49, column: 20, scope: !7)
!44 = !DILocation(line: 50, column: 20, scope: !7)
!45 = !DILocation(line: 51, column: 20, scope: !7)
!46 = !DILocation(line: 55, column: 20, scope: !7)
!47 = !DILocation(line: 56, column: 35, scope: !7)
!48 = !DILocation(line: 57, column: 35, scope: !7)
!49 = !DILocation(line: 58, column: 20, scope: !7)
!50 = !DILocation(line: 59, column: 21, scope: !7)
!51 = !DILocation(line: 60, column: 21, scope: !7)
!52 = !DILocation(line: 61, column: 21, scope: !7)
!53 = !DILocation(line: 62, column: 20, scope: !7)
!54 = !DILocation(line: 63, column: 20, scope: !7)
!55 = !DILocation(line: 64, column: 20, scope: !7)
!56 = !DILocation(line: 65, column: 20, scope: !7)
!57 = !DILocation(line: 69, column: 20, scope: !7)
!58 = !DILocation(line: 71, column: 35, scope: !7)
!59 = !DILocation(line: 72, column: 25, scope: !7)
!60 = !DILocation(line: 72, column: 37, scope: !7)
!61 = !DILocation(line: 72, column: 4, scope: !7)
