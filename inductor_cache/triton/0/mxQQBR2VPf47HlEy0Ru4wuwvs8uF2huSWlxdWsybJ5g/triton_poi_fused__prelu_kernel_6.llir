; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__prelu_kernel_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 10, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 512, !dbg !13
  %12 = sext i32 %10 to i64, !dbg !14
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !14
  %14 = sext i32 %11 to i64, !dbg !14
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !14
  %16 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %13, i1 true) #1, !dbg !15
  %17 = extractvalue { i32, i32, i32, i32 } %16, 0, !dbg !15
  %18 = extractvalue { i32, i32, i32, i32 } %16, 1, !dbg !15
  %19 = extractvalue { i32, i32, i32, i32 } %16, 2, !dbg !15
  %20 = extractvalue { i32, i32, i32, i32 } %16, 3, !dbg !15
  %21 = bitcast i32 %17 to float, !dbg !15
  %22 = bitcast i32 %18 to float, !dbg !15
  %23 = bitcast i32 %19 to float, !dbg !15
  %24 = bitcast i32 %20 to float, !dbg !15
  %25 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %15, i1 true) #1, !dbg !15
  %26 = extractvalue { i32, i32, i32, i32 } %25, 0, !dbg !15
  %27 = extractvalue { i32, i32, i32, i32 } %25, 1, !dbg !15
  %28 = extractvalue { i32, i32, i32, i32 } %25, 2, !dbg !15
  %29 = extractvalue { i32, i32, i32, i32 } %25, 3, !dbg !15
  %30 = bitcast i32 %26 to float, !dbg !15
  %31 = bitcast i32 %27 to float, !dbg !15
  %32 = bitcast i32 %28 to float, !dbg !15
  %33 = bitcast i32 %29 to float, !dbg !15
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !16
  %35 = bitcast i32 %34 to float, !dbg !16
  %36 = fcmp ogt float %21, 0.000000e+00, !dbg !17
  %37 = fcmp ogt float %22, 0.000000e+00, !dbg !17
  %38 = fcmp ogt float %23, 0.000000e+00, !dbg !17
  %39 = fcmp ogt float %24, 0.000000e+00, !dbg !17
  %40 = fcmp ogt float %30, 0.000000e+00, !dbg !17
  %41 = fcmp ogt float %31, 0.000000e+00, !dbg !17
  %42 = fcmp ogt float %32, 0.000000e+00, !dbg !17
  %43 = fcmp ogt float %33, 0.000000e+00, !dbg !17
  %44 = fmul float %21, %35, !dbg !18
  %45 = fmul float %22, %35, !dbg !18
  %46 = fmul float %23, %35, !dbg !18
  %47 = fmul float %24, %35, !dbg !18
  %48 = fmul float %35, %30, !dbg !18
  %49 = fmul float %35, %31, !dbg !18
  %50 = fmul float %35, %32, !dbg !18
  %51 = fmul float %35, %33, !dbg !18
  %52 = select i1 %36, float %21, float %44, !dbg !19
  %53 = select i1 %37, float %22, float %45, !dbg !19
  %54 = select i1 %38, float %23, float %46, !dbg !19
  %55 = select i1 %39, float %24, float %47, !dbg !19
  %56 = select i1 %40, float %30, float %48, !dbg !19
  %57 = select i1 %41, float %31, float %49, !dbg !19
  %58 = select i1 %42, float %32, float %50, !dbg !19
  %59 = select i1 %43, float %33, float %51, !dbg !19
  %60 = getelementptr float, ptr addrspace(1) %2, i64 %12, !dbg !20
  %61 = getelementptr float, ptr addrspace(1) %2, i64 %14, !dbg !20
  %62 = bitcast float %52 to i32, !dbg !21
  %63 = bitcast float %53 to i32, !dbg !21
  %64 = bitcast float %54 to i32, !dbg !21
  %65 = bitcast float %55 to i32, !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %62, i32 %63, i32 %64, i32 %65, ptr addrspace(1) %60, i1 true) #1, !dbg !21
  %66 = bitcast float %56 to i32, !dbg !21
  %67 = bitcast float %57 to i32, !dbg !21
  %68 = bitcast float %58 to i32, !dbg !21
  %69 = bitcast float %59 to i32, !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %66, i32 %67, i32 %68, i32 %69, ptr addrspace(1) %61, i1 true) #1, !dbg !21
  ret void, !dbg !22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cocvhdse7pcj274pxqcf7bflklazvi4gxzrl5cipaarhu4os3lws.py", directory: "inductor_cache/oc")
!4 = !{ptr @triton_poi_fused__prelu_kernel_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__prelu_kernel_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__prelu_kernel_6", linkageName: "triton_poi_fused__prelu_kernel_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 30, scope: !7)
!15 = !DILocation(line: 25, column: 35, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 29, column: 18, scope: !7)
!18 = !DILocation(line: 30, column: 18, scope: !7)
!19 = !DILocation(line: 31, column: 32, scope: !7)
!20 = !DILocation(line: 32, column: 25, scope: !7)
!21 = !DILocation(line: 32, column: 36, scope: !7)
!22 = !DILocation(line: 32, column: 4, scope: !7)
