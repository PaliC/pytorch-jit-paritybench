; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_69(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 7, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = and i32 %13, 127, !dbg !12
  %15 = or disjoint i32 %12, %14, !dbg !13
  %16 = icmp slt i32 %15, 13312, !dbg !14
  %.frozen = freeze i32 %15, !dbg !15
  %17 = sdiv i32 %.frozen, 832, !dbg !15
  %18 = mul i32 %17, 832, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = icmp slt i32 %.decomposed, 256, !dbg !17
  %20 = shl nsw i32 %17, 8, !dbg !18
  %21 = add nsw i32 %20, %.decomposed, !dbg !19
  %22 = sext i32 %21 to i64, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !20
  %24 = and i1 %16, %19, !dbg !21
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %24, i32 0, i1 %24) #1, !dbg !22
  %26 = sext i32 %.decomposed to i64, !dbg !23
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %24, i32 0, i1 %24) #1, !dbg !24
  %29 = add nsw i32 %.decomposed, -256, !dbg !25
  %30 = icmp ult i32 %29, 320, !dbg !25
  %31 = mul nsw i32 %17, 320, !dbg !26
  %32 = add nsw i32 %31, %29, !dbg !27
  %33 = sext i32 %32 to i64, !dbg !28
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %33, !dbg !28
  %35 = and i1 %16, %30, !dbg !29
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35) #1, !dbg !30
  %37 = sext i32 %29 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %3, i64 %37, !dbg !31
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %35, i32 0, i1 %35) #1, !dbg !32
  %40 = add nsw i32 %.decomposed, -576, !dbg !33
  %41 = icmp ult i32 %40, 128, !dbg !33
  %42 = shl nsw i32 %17, 7, !dbg !34
  %43 = add nsw i32 %42, %40, !dbg !35
  %44 = sext i32 %43 to i64, !dbg !36
  %45 = getelementptr float, ptr addrspace(1) %4, i64 %44, !dbg !36
  %46 = and i1 %16, %41, !dbg !37
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %46, i32 0, i1 %46) #1, !dbg !38
  %48 = sext i32 %40 to i64, !dbg !39
  %49 = getelementptr float, ptr addrspace(1) %5, i64 %48, !dbg !39
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %46, i32 0, i1 %46) #1, !dbg !40
  %51 = icmp sgt i32 %.decomposed, 703, !dbg !41
  %52 = add nsw i32 %.decomposed, -704, !dbg !42
  %53 = add nsw i32 %42, %52, !dbg !43
  %54 = sext i32 %53 to i64, !dbg !44
  %55 = getelementptr float, ptr addrspace(1) %6, i64 %54, !dbg !44
  %56 = and i1 %16, %51, !dbg !45
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %56, i32 0, i1 %56) #1, !dbg !46
  %58 = sext i32 %52 to i64, !dbg !47
  %59 = getelementptr float, ptr addrspace(1) %7, i64 %58, !dbg !47
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %56, i32 0, i1 %56) #1, !dbg !48
  %61 = insertelement <4 x i32> poison, i32 %57, i64 0, !dbg !46
  %62 = insertelement <4 x i32> %61, i32 %47, i64 1, !dbg !46
  %63 = insertelement <4 x i32> %62, i32 %36, i64 2, !dbg !46
  %64 = insertelement <4 x i32> %63, i32 %25, i64 3, !dbg !46
  %65 = bitcast <4 x i32> %64 to <4 x float>, !dbg !46
  %66 = insertelement <4 x i32> poison, i32 %60, i64 0, !dbg !48
  %67 = insertelement <4 x i32> %66, i32 %50, i64 1, !dbg !48
  %68 = insertelement <4 x i32> %67, i32 %39, i64 2, !dbg !48
  %69 = insertelement <4 x i32> %68, i32 %28, i64 3, !dbg !48
  %70 = bitcast <4 x i32> %69 to <4 x float>, !dbg !48
  %71 = fadd <4 x float> %65, %70, !dbg !49
  %72 = fcmp olt <4 x float> %71, zeroinitializer, !dbg !50
  %73 = extractelement <4 x i1> %72, i64 3, !dbg !54
  %74 = extractelement <4 x float> %71, i64 3, !dbg !54
  %75 = select i1 %73, float 0.000000e+00, float %74, !dbg !54
  %76 = extractelement <4 x i1> %72, i64 2, !dbg !56
  %77 = extractelement <4 x float> %71, i64 2, !dbg !56
  %78 = select i1 %76, float 0.000000e+00, float %77, !dbg !56
  %79 = extractelement <4 x i1> %72, i64 1, !dbg !58
  %80 = extractelement <4 x float> %71, i64 1, !dbg !58
  %81 = select i1 %79, float 0.000000e+00, float %80, !dbg !58
  %82 = extractelement <4 x i1> %72, i64 0, !dbg !60
  %83 = extractelement <4 x float> %71, i64 0, !dbg !60
  %84 = select i1 %82, float 0.000000e+00, float %83, !dbg !60
  %85 = select i1 %51, float %84, float 0.000000e+00, !dbg !61
  %86 = select i1 %41, float %81, float %85, !dbg !62
  %87 = select i1 %30, float %78, float %86, !dbg !62
  %88 = select i1 %19, float %75, float %87, !dbg !62
  %89 = sext i32 %15 to i64, !dbg !63
  %90 = getelementptr float, ptr addrspace(1) %8, i64 %89, !dbg !63
  %91 = bitcast float %88 to i32, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %91, ptr addrspace(1) %90, i1 %16) #1, !dbg !64
  ret void, !dbg !65
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3fmiabeylzy6tlkymzx3bc7xvdvsoa6mvdyjee37iakakwds42n.py", directory: "inductor_cache/3f")
!4 = !{ptr @triton_poi_fused_cat_69, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_69, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_69", linkageName: "triton_poi_fused_cat_69", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 40, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 53, scope: !7)
!22 = !DILocation(line: 32, column: 46, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 35, scope: !7)
!25 = !DILocation(line: 42, column: 20, scope: !7)
!26 = !DILocation(line: 43, column: 35, scope: !7)
!27 = !DILocation(line: 43, column: 41, scope: !7)
!28 = !DILocation(line: 43, column: 31, scope: !7)
!29 = !DILocation(line: 43, column: 64, scope: !7)
!30 = !DILocation(line: 43, column: 56, scope: !7)
!31 = !DILocation(line: 44, column: 31, scope: !7)
!32 = !DILocation(line: 44, column: 45, scope: !7)
!33 = !DILocation(line: 53, column: 20, scope: !7)
!34 = !DILocation(line: 54, column: 35, scope: !7)
!35 = !DILocation(line: 54, column: 41, scope: !7)
!36 = !DILocation(line: 54, column: 31, scope: !7)
!37 = !DILocation(line: 54, column: 64, scope: !7)
!38 = !DILocation(line: 54, column: 56, scope: !7)
!39 = !DILocation(line: 55, column: 31, scope: !7)
!40 = !DILocation(line: 55, column: 45, scope: !7)
!41 = !DILocation(line: 61, column: 20, scope: !7)
!42 = !DILocation(line: 64, column: 50, scope: !7)
!43 = !DILocation(line: 64, column: 41, scope: !7)
!44 = !DILocation(line: 64, column: 31, scope: !7)
!45 = !DILocation(line: 64, column: 64, scope: !7)
!46 = !DILocation(line: 64, column: 56, scope: !7)
!47 = !DILocation(line: 65, column: 31, scope: !7)
!48 = !DILocation(line: 65, column: 45, scope: !7)
!49 = !DILocation(line: 66, column: 20, scope: !7)
!50 = !DILocation(line: 118, column: 15, scope: !51, inlinedAt: !53)
!51 = distinct !DILexicalBlockFile(scope: !7, file: !52, discriminator: 0)
!52 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!53 = !DILocation(line: 68, column: 42, scope: !7)
!54 = !DILocation(line: 121, column: 29, scope: !51, inlinedAt: !55)
!55 = !DILocation(line: 36, column: 40, scope: !7)
!56 = !DILocation(line: 121, column: 29, scope: !51, inlinedAt: !57)
!57 = !DILocation(line: 47, column: 42, scope: !7)
!58 = !DILocation(line: 121, column: 29, scope: !51, inlinedAt: !59)
!59 = !DILocation(line: 58, column: 42, scope: !7)
!60 = !DILocation(line: 121, column: 29, scope: !51, inlinedAt: !53)
!61 = !DILocation(line: 70, column: 35, scope: !7)
!62 = !DILocation(line: 0, scope: !7)
!63 = !DILocation(line: 74, column: 25, scope: !7)
!64 = !DILocation(line: 74, column: 37, scope: !7)
!65 = !DILocation(line: 74, column: 4, scope: !7)
