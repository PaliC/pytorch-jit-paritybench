//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_2 // -- Begin function triton_poi_fused_convolution_relu_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_2
.visible .entry triton_poi_fused_convolution_relu_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_2,
	.param .u32 triton_poi_fused_convolution_relu_2_param_3,
	.param .u32 triton_poi_fused_convolution_relu_2_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<152>;
	.reg .f32 	%f<33>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_convolution_relu_2_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_convolution_relu_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:22:33
	shl.b32 	%r41, %r1, 8;
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_relu_2_param_2];
	.loc	1 23 44                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:23:44
	mov.u32 	%r42, %tid.x;
	shl.b32 	%r43, %r42, 2;
	and.b32  	%r44, %r43, 252;
	shl.b32 	%r45, %r42, 1;
	and.b32  	%r46, %r45, 254;
	bfe.u32 	%r47, %r42, 2, 5;
	or.b32  	%r48, %r47, 32;
	or.b32  	%r49, %r47, 64;
	or.b32  	%r50, %r47, 96;
	or.b32  	%r51, %r47, 128;
	or.b32  	%r52, %r47, 160;
	or.b32  	%r53, %r47, 192;
	or.b32  	%r54, %r47, 224;
	.loc	1 23 23                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:23:23
	or.b32  	%r55, %r41, %r44;
	or.b32  	%r56, %r41, %r46;
	or.b32  	%r57, %r41, %r47;
	or.b32  	%r58, %r41, %r48;
	or.b32  	%r59, %r41, %r49;
	or.b32  	%r60, %r41, %r50;
	or.b32  	%r61, %r41, %r51;
	or.b32  	%r62, %r41, %r52;
	or.b32  	%r63, %r41, %r53;
	or.b32  	%r64, %r41, %r54;
	.loc	1 24 21                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:24:21
	setp.lt.s32 	%p22, %r55, 256;
	setp.lt.s32 	%p11, %r56, 256;
	setp.lt.s32 	%p23, %r57, 256;
	setp.lt.s32 	%p24, %r58, 256;
	setp.lt.s32 	%p25, %r59, 256;
	setp.lt.s32 	%p26, %r60, 256;
	setp.lt.s32 	%p27, %r61, 256;
	setp.lt.s32 	%p28, %r62, 256;
	setp.lt.s32 	%p29, %r63, 256;
	setp.lt.s32 	%p30, %r64, 256;
	.loc	1 25 28                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:25:33
	shl.b32 	%r65, %r2, 2;
	.loc	1 26 44                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:26:44
	bfe.u32 	%r66, %r42, 6, 1;
	and.b32  	%r67, %r42, 3;
	.loc	1 26 23                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:26:23
	or.b32  	%r68, %r65, %r66;
	or.b32  	%r69, %r68, 2;
	or.b32  	%r70, %r65, %r67;
	.loc	1 27 21                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:27:21
	setp.lt.s32 	%p31, %r68, 961;
	setp.lt.s32 	%p32, %r69, 961;
	setp.lt.s32 	%p33, %r70, 961;
	.loc	1 30 19                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:30:19
	shr.s32 	%r72, %r55, 31;
	shr.u32 	%r73, %r72, 26;
	add.s32 	%r74, %r55, %r73;
	shr.s32 	%r75, %r74, 6;
	.loc	1 29 19                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:29:19
	and.b32  	%r76, %r74, -64;
	sub.s32 	%r77, %r55, %r76;
	bfe.s32 	%r78, %r1, 23, 1;
	shr.u32 	%r79, %r78, 26;
	add.s32 	%r80, %r56, %r79;
	and.b32  	%r81, %r80, -64;
	sub.s32 	%r82, %r56, %r81;
	.loc	1 32 38                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:38
	shl.b32 	%r83, %r68, 6;
	shl.b32 	%r84, %r69, 6;
	.loc	1 32 35                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:35
	mad.lo.s32 	%r85, %r75, 61504, %r77;
	.loc	1 32 43                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:43
	add.s32 	%r86, %r85, %r83;
	add.s32 	%r87, %r85, %r84;
	.loc	1 32 30                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:30
	mul.wide.s32 	%rd15, %r86, 4;
	add.s64 	%rd1, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r87, 4;
	add.s64 	%rd2, %rd12, %rd16;
	.loc	1 32 62                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:62
	and.pred  	%p1, %p22, %p31;
	and.pred  	%p2, %p32, %p22;
	and.pred  	%p14, %p23, %p33;
	and.pred  	%p15, %p24, %p33;
	and.pred  	%p16, %p25, %p33;
	and.pred  	%p17, %p26, %p33;
	and.pred  	%p18, %p27, %p33;
	and.pred  	%p19, %p28, %p33;
	and.pred  	%p20, %p29, %p33;
	and.pred  	%p21, %p30, %p33;
	.loc	1 32 54                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:32:54
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	shl.b32 	%r88, %r42, 4;
	and.b32  	%r89, %r88, 1008;
	or.b32  	%r90, %r89, %r66;
	and.b32  	%r91, %r42, 127;
	mov.u32 	%r92, global_smem;
	add.s32 	%r93, %r92, %r89;
	shl.b32 	%r94, %r90, 2;
	add.s32 	%r11, %r93, %r94;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 20;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 40;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 60;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 48;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 68;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r95, %r42, 124;
	add.s32 	%r96, %r92, %r95;
	shl.b32 	%r97, %r91, 2;
	add.s32 	%r98, %r96, %r97;
	ld.shared.f32 	%f1, [%r98];
	or.b32  	%r99, %r91, 128;
	and.b32  	%r100, %r99, 252;
	add.s32 	%r101, %r92, %r100;
	add.s32 	%r102, %r101, %r97;
	ld.shared.f32 	%f2, [%r102+512];
	or.b32  	%r103, %r91, 256;
	and.b32  	%r104, %r103, 380;
	add.s32 	%r105, %r92, %r104;
	add.s32 	%r106, %r105, %r97;
	ld.shared.f32 	%f3, [%r106+1024];
	or.b32  	%r107, %r91, 384;
	and.b32  	%r108, %r107, 508;
	add.s32 	%r109, %r92, %r108;
	add.s32 	%r110, %r109, %r97;
	ld.shared.f32 	%f4, [%r110+1536];
	or.b32  	%r111, %r91, 512;
	and.b32  	%r112, %r111, 636;
	add.s32 	%r113, %r92, %r112;
	add.s32 	%r114, %r113, %r97;
	ld.shared.f32 	%f5, [%r114+2048];
	or.b32  	%r115, %r91, 640;
	and.b32  	%r116, %r115, 764;
	add.s32 	%r117, %r92, %r116;
	add.s32 	%r118, %r117, %r97;
	ld.shared.f32 	%f6, [%r118+2560];
	or.b32  	%r119, %r91, 768;
	and.b32  	%r120, %r119, 892;
	add.s32 	%r121, %r92, %r120;
	add.s32 	%r122, %r121, %r97;
	ld.shared.f32 	%f7, [%r122+3072];
	or.b32  	%r123, %r91, 896;
	and.b32  	%r124, %r123, 1020;
	add.s32 	%r125, %r92, %r124;
	add.s32 	%r126, %r125, %r97;
	ld.shared.f32 	%f8, [%r126+3584];
	.loc	1 33 30                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:33:30
	mul.wide.s32 	%rd17, %r82, 4;
	add.s64 	%rd3, %rd13, %rd17;
	.loc	1 33 35                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:33:35
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	@%p11 ld.global.L1::evict_last.v2.b32 { %r30, %r32 }, [ %rd3 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
	shl.b32 	%r127, %r46, 3;
	add.s32 	%r29, %r92, %r127;
	// begin inline asm
	@%p3 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r29, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r128, %r47, 3;
	add.s32 	%r129, %r92, %r128;
	ld.shared.f32 	%f9, [%r129];
	shl.b32 	%r130, %r48, 3;
	add.s32 	%r131, %r92, %r130;
	ld.shared.f32 	%f10, [%r131];
	shl.b32 	%r132, %r49, 3;
	add.s32 	%r133, %r92, %r132;
	ld.shared.f32 	%f11, [%r133];
	shl.b32 	%r134, %r50, 3;
	add.s32 	%r135, %r92, %r134;
	ld.shared.f32 	%f12, [%r135];
	shl.b32 	%r136, %r51, 3;
	add.s32 	%r137, %r92, %r136;
	ld.shared.f32 	%f13, [%r137];
	shl.b32 	%r138, %r52, 3;
	add.s32 	%r139, %r92, %r138;
	ld.shared.f32 	%f14, [%r139];
	shl.b32 	%r140, %r53, 3;
	add.s32 	%r141, %r92, %r140;
	ld.shared.f32 	%f15, [%r141];
	shl.b32 	%r142, %r54, 3;
	add.s32 	%r143, %r92, %r142;
	ld.shared.f32 	%f16, [%r143];
$L__tmp2:
	.loc	1 34 18                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:34:18
	add.f32 	%f17, %f1, %f9;
	add.f32 	%f18, %f2, %f10;
	add.f32 	%f19, %f3, %f11;
	add.f32 	%f20, %f4, %f12;
	add.f32 	%f21, %f5, %f13;
	add.f32 	%f22, %f6, %f14;
	add.f32 	%f23, %f7, %f15;
	add.f32 	%f24, %f8, %f16;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p34, %f17, 0f00000000;
	setp.lt.f32 	%p35, %f18, 0f00000000;
	setp.lt.f32 	%p36, %f19, 0f00000000;
	setp.lt.f32 	%p37, %f20, 0f00000000;
	setp.lt.f32 	%p38, %f21, 0f00000000;
	setp.lt.f32 	%p39, %f22, 0f00000000;
	setp.lt.f32 	%p40, %f23, 0f00000000;
	setp.lt.f32 	%p41, %f24, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, 0f00000000, %f17, %p34;
	selp.f32 	%f26, 0f00000000, %f18, %p35;
	selp.f32 	%f27, 0f00000000, %f19, %p36;
	selp.f32 	%f28, 0f00000000, %f20, %p37;
	selp.f32 	%f29, 0f00000000, %f21, %p38;
	selp.f32 	%f30, 0f00000000, %f22, %p39;
	selp.f32 	%f31, 0f00000000, %f23, %p40;
	selp.f32 	%f32, 0f00000000, %f24, %p41;
$L__tmp4:
	.loc	1 37 30                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:30
	mad.lo.s32 	%r144, %r57, 961, %r70;
	mad.lo.s32 	%r145, %r58, 961, %r70;
	mad.lo.s32 	%r146, %r59, 961, %r70;
	mad.lo.s32 	%r147, %r60, 961, %r70;
	mad.lo.s32 	%r148, %r61, 961, %r70;
	mad.lo.s32 	%r149, %r62, 961, %r70;
	mad.lo.s32 	%r150, %r63, 961, %r70;
	mad.lo.s32 	%r151, %r64, 961, %r70;
	.loc	1 37 25                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:25
	mul.wide.s32 	%rd18, %r144, 4;
	add.s64 	%rd4, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r145, 4;
	add.s64 	%rd5, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r146, 4;
	add.s64 	%rd6, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r147, 4;
	add.s64 	%rd7, %rd14, %rd21;
	mul.wide.s32 	%rd22, %r148, 4;
	add.s64 	%rd8, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r149, 4;
	add.s64 	%rd9, %rd14, %rd23;
	mul.wide.s32 	%rd24, %r150, 4;
	add.s64 	%rd10, %rd14, %rd24;
	mul.wide.s32 	%rd25, %r151, 4;
	add.s64 	%rd11, %rd14, %rd25;
	.loc	1 37 45                         // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:45
	mov.b32 	%r33, %f25;
	// begin inline asm
	@%p14 st.global.b32 [ %rd4 + 0 ], { %r33 };
	// end inline asm
	mov.b32 	%r34, %f26;
	// begin inline asm
	@%p15 st.global.b32 [ %rd5 + 0 ], { %r34 };
	// end inline asm
	mov.b32 	%r35, %f27;
	// begin inline asm
	@%p16 st.global.b32 [ %rd6 + 0 ], { %r35 };
	// end inline asm
	mov.b32 	%r36, %f28;
	// begin inline asm
	@%p17 st.global.b32 [ %rd7 + 0 ], { %r36 };
	// end inline asm
	mov.b32 	%r37, %f29;
	// begin inline asm
	@%p18 st.global.b32 [ %rd8 + 0 ], { %r37 };
	// end inline asm
	mov.b32 	%r38, %f30;
	// begin inline asm
	@%p19 st.global.b32 [ %rd9 + 0 ], { %r38 };
	// end inline asm
	mov.b32 	%r39, %f31;
	// begin inline asm
	@%p20 st.global.b32 [ %rd10 + 0 ], { %r39 };
	// end inline asm
	mov.b32 	%r40, %f32;
	// begin inline asm
	@%p21 st.global.b32 [ %rd11 + 0 ], { %r40 };
	// end inline asm
	.loc	1 37 4                          // cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py:37:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/st/cstaarsnbemu4daenwrw2iv3lbe5sphuamdxrw5evpkjhyzh5pvz.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 116
.b8 97
.b8 97
.b8 114
.b8 115
.b8 110
.b8 98
.b8 101
.b8 109
.b8 117
.b8 52
.b8 100
.b8 97
.b8 101
.b8 110
.b8 119
.b8 114
.b8 119
.b8 50
.b8 105
.b8 118
.b8 51
.b8 108
.b8 98
.b8 101
.b8 53
.b8 115
.b8 112
.b8 104
.b8 117
.b8 97
.b8 109
.b8 100
.b8 120
.b8 114
.b8 119
.b8 53
.b8 101
.b8 118
.b8 112
.b8 107
.b8 106
.b8 104
.b8 121
.b8 122
.b8 104
.b8 53
.b8 112
.b8 118
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
