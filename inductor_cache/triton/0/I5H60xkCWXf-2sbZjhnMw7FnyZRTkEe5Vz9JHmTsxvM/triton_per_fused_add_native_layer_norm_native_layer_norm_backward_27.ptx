//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27 // -- Begin function triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27
.visible .entry triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_4,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_5,
	.param .u32 triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<85>;
	.reg .f32 	%f<77>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd6, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_1];
$L__tmp0:
	.loc	1 24 28                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd8, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_2];
	.loc	1 27 26                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:27:26
	mov.u32 	%r49, %tid.x;
	and.b32  	%r50, %r49, 31;
	ld.param.u64 	%rd9, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_3];
	ld.param.u64 	%rd10, [triton_per_fused_add_native_layer_norm_native_layer_norm_backward_27_param_4];
	shl.b32 	%r51, %r49, 2;
	and.b32  	%r52, %r51, 508;
	.loc	1 29 21                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:29:21
	setp.lt.u32 	%p1, %r52, 384;
	.loc	1 32 35                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:32:35
	mad.lo.s32 	%r53, %r1, 384, %r52;
	.loc	1 32 30                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:32:30
	mul.wide.s32 	%rd11, %r53, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.b32 	%r6, 0;
	.loc	1 32 44                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:32:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 33 30                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:33:30
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 33 44                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:33:44
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 34 30                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:34:30
	mul.wide.u32 	%rd12, %r52, 4;
	add.s64 	%rd3, %rd8, %rd12;
	.loc	1 34 35                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:34:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 32 44                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:32:44
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 33 44                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:33:44
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r10;
	.loc	1 34 35                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:34:35
	mov.b32 	%f5, %r19;
	mov.b32 	%f6, %r18;
	.loc	1 35 18                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:35:18
	add.f32 	%f7, %f4, %f6;
	add.f32 	%f8, %f3, %f5;
	.loc	1 36 18                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:36:18
	add.f32 	%f9, %f8, %f2;
	add.f32 	%f10, %f7, %f1;
	.loc	1 32 44                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:32:44
	mov.b32 	%f11, %r4;
	mov.b32 	%f12, %r5;
	.loc	1 33 44                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:33:44
	mov.b32 	%f13, %r13;
	mov.b32 	%f14, %r12;
	.loc	1 34 35                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:34:35
	mov.b32 	%f15, %r21;
	mov.b32 	%f16, %r20;
	.loc	1 35 18                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:35:18
	add.f32 	%f17, %f14, %f16;
	add.f32 	%f18, %f13, %f15;
	.loc	1 36 18                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:36:18
	add.f32 	%f19, %f18, %f12;
	add.f32 	%f20, %f17, %f11;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f10, %f9;
	add.f32 	%f22, %f20, %f21;
	add.f32 	%f23, %f19, %f22;
	selp.f32 	%f24, %f23, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f24;
	shfl.sync.bfly.b32	%r55, %r54, 16, 31, -1;
	mov.b32 	%f25, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f26;
	shfl.sync.bfly.b32	%r57, %r56, 8, 31, -1;
	mov.b32 	%f27, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f28;
	shfl.sync.bfly.b32	%r59, %r58, 4, 31, -1;
	mov.b32 	%f29, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f30;
	shfl.sync.bfly.b32	%r61, %r60, 2, 31, -1;
	mov.b32 	%f31, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f32;
	shfl.sync.bfly.b32	%r63, %r62, 1, 31, -1;
	mov.b32 	%f33, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p16, %r50, 0;
	shr.u32 	%r64, %r49, 3;
	and.b32  	%r65, %r64, 12;
	mov.u32 	%r66, global_smem;
	add.s32 	%r26, %r66, %r65;
	mov.b32 	%r27, %f34;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p17, %r49, 4;
	add.s32 	%r29, %r66, %r51;
	// begin inline asm
	@%p17 ld.shared.b32 %r28, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r28;
	shfl.sync.bfly.b32	%r67, %r28, 2, 31, -1;
	mov.b32 	%f36, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f37;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f38, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r70, %r49, 3;
	setp.eq.s32 	%p24, %r70, 0;
	and.pred  	%p18, %p17, %p24;
	mov.b32 	%r31, %f39;
	// begin inline asm
	@%p18 st.shared.b32 [ %r29 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f40, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f41, %f40, 0f00000000;
$L__tmp3:
	.loc	1 44 20                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:44:20
	mov.b32 	%r33, %f41;
	mov.b32 	%r34, 1136656384;
	// begin inline asm
	div.full.f32 %r32, %r33, %r34;
	// end inline asm
	mov.b32 	%f42, %r32;
	.loc	1 45 19                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:45:19
	sub.f32 	%f43, %f10, %f42;
	sub.f32 	%f44, %f9, %f42;
	sub.f32 	%f45, %f20, %f42;
	sub.f32 	%f46, %f19, %f42;
	.loc	1 46 20                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:46:20
	mul.f32 	%f47, %f44, %f44;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f48, %f43, %f43, %f47;
	fma.rn.f32 	%f49, %f45, %f45, %f48;
	fma.rn.f32 	%f50, %f46, %f46, %f49;
	selp.f32 	%f51, %f50, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f51;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	mov.b32 	%f52, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f53;
	shfl.sync.bfly.b32	%r74, %r73, 8, 31, -1;
	mov.b32 	%f54, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f55;
	shfl.sync.bfly.b32	%r76, %r75, 4, 31, -1;
	mov.b32 	%f56, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f57;
	shfl.sync.bfly.b32	%r78, %r77, 2, 31, -1;
	mov.b32 	%f58, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f59;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f60, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r36, %f61;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p17 ld.shared.b32 %r37, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f62, %r37;
	shfl.sync.bfly.b32	%r81, %r37, 2, 31, -1;
	mov.b32 	%f63, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f64;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f65, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f66;
	// begin inline asm
	@%p18 st.shared.b32 [ %r29 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f67, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f68, %f67, 0f00000000;
$L__tmp6:
	.loc	1 52 20                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:52:20
	mov.b32 	%r42, %f68;
	// begin inline asm
	div.full.f32 %r41, %r42, %r34;
	// end inline asm
	mov.b32 	%f69, %r41;
	.loc	1 54 20                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:54:20
	add.f32 	%f70, %f69, 0f358637BD;
	.loc	1 55 28                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:55:28
	rsqrt.approx.ftz.f32 	%f71, %f70;
	.loc	1 56 20                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:56:20
	mul.f32 	%f72, %f43, %f71;
	mul.f32 	%f73, %f44, %f71;
	mul.f32 	%f74, %f45, %f71;
	mul.f32 	%f75, %f46, %f71;
	.loc	1 58 20                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:58:20
	mul.f32 	%f76, %f71, 0f3B2AAAAB;
	.loc	1 59 25                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:59:25
	add.s64 	%rd4, %rd9, %rd11;
	.loc	1 59 46                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:59:46
	mov.b32 	%r44, %f72;
	mov.b32 	%r45, %f73;
	mov.b32 	%r46, %f74;
	mov.b32 	%r47, %f75;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd4 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	.loc	1 60 25                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:60:25
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd5, %rd10, %rd13;
	.loc	1 60 37                         // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:60:37
	and.b32  	%r84, %r49, 127;
	setp.eq.s32 	%p23, %r84, 0;
	mov.b32 	%r48, %f76;
	// begin inline asm
	@%p23 st.global.b32 [ %rd5 + 0 ], { %r48 };
	// end inline asm
	.loc	1 60 4                          // csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py:60:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sn/csnfotk6xb5ptjvz27hmw22btzpbsvj2p6ihmk534im4xllarzk5.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 285                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x116 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 110
.b8 102
.b8 111
.b8 116
.b8 107
.b8 54
.b8 120
.b8 98
.b8 53
.b8 112
.b8 116
.b8 106
.b8 118
.b8 122
.b8 50
.b8 55
.b8 104
.b8 109
.b8 119
.b8 50
.b8 50
.b8 98
.b8 116
.b8 122
.b8 112
.b8 98
.b8 115
.b8 118
.b8 106
.b8 50
.b8 112
.b8 54
.b8 105
.b8 104
.b8 109
.b8 107
.b8 53
.b8 51
.b8 52
.b8 105
.b8 109
.b8 52
.b8 120
.b8 108
.b8 108
.b8 97
.b8 114
.b8 122
.b8 107
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x47 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 50
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaa:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xef:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x107:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
