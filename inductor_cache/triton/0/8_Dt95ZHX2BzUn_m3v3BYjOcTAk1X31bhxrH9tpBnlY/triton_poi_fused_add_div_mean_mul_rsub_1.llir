; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_div_mean_mul_rsub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !10
  %6 = bitcast i32 %5 to float, !dbg !10
  %7 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !11
  %8 = bitcast i32 %7 to float, !dbg !11
  %9 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #1, !dbg !12
  %10 = bitcast i32 %9 to float, !dbg !12
  %11 = getelementptr i8, ptr addrspace(1) %0, i64 4, !dbg !13
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 true) #1, !dbg !14
  %13 = bitcast i32 %12 to float, !dbg !14
  %14 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !15
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 true) #1, !dbg !16
  %16 = bitcast i32 %15 to float, !dbg !16
  %17 = getelementptr i8, ptr addrspace(1) %2, i64 4, !dbg !17
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !18
  %19 = bitcast i32 %18 to float, !dbg !18
  %20 = getelementptr i8, ptr addrspace(1) %0, i64 8, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !20
  %22 = bitcast i32 %21 to float, !dbg !20
  %23 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !21
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !22
  %25 = bitcast i32 %24 to float, !dbg !22
  %26 = getelementptr i8, ptr addrspace(1) %2, i64 8, !dbg !23
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !24
  %28 = bitcast i32 %27 to float, !dbg !24
  %29 = getelementptr i8, ptr addrspace(1) %0, i64 12, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !26
  %31 = bitcast i32 %30 to float, !dbg !26
  %32 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !27
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 true) #1, !dbg !28
  %34 = bitcast i32 %33 to float, !dbg !28
  %35 = getelementptr i8, ptr addrspace(1) %2, i64 12, !dbg !29
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #1, !dbg !30
  %37 = bitcast i32 %36 to float, !dbg !30
  %38 = fmul float %6, 2.000000e+00, !dbg !31
  %39 = fadd float %8, 0x3F50624DE0000000, !dbg !32
  %40 = fadd float %10, 0x3F50624DE0000000, !dbg !33
  %41 = fadd float %39, %40, !dbg !34
  %42 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %38, float %41) #1, !dbg !35
  %43 = fsub float 1.000000e+00, %42, !dbg !36
  %44 = fmul float %13, 2.000000e+00, !dbg !37
  %45 = fadd float %16, 0x3F50624DE0000000, !dbg !38
  %46 = fadd float %19, 0x3F50624DE0000000, !dbg !39
  %47 = fadd float %45, %46, !dbg !40
  %48 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %44, float %47) #1, !dbg !41
  %49 = fsub float 1.000000e+00, %48, !dbg !42
  %50 = fadd float %43, %49, !dbg !43
  %51 = fmul float %22, 2.000000e+00, !dbg !44
  %52 = fadd float %25, 0x3F50624DE0000000, !dbg !45
  %53 = fadd float %28, 0x3F50624DE0000000, !dbg !46
  %54 = fadd float %52, %53, !dbg !47
  %55 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %51, float %54) #1, !dbg !48
  %56 = fsub float 1.000000e+00, %55, !dbg !49
  %57 = fadd float %50, %56, !dbg !50
  %58 = fmul float %31, 2.000000e+00, !dbg !51
  %59 = fadd float %34, 0x3F50624DE0000000, !dbg !52
  %60 = fadd float %37, 0x3F50624DE0000000, !dbg !53
  %61 = fadd float %59, %60, !dbg !54
  %62 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %58, float %61) #1, !dbg !55
  %63 = fsub float 1.000000e+00, %62, !dbg !56
  %64 = fadd float %57, %63, !dbg !57
  %65 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %64, float 4.000000e+00) #1, !dbg !58
  %66 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !59
  %67 = and i32 %66, 31, !dbg !59
  %68 = icmp eq i32 %67, 0, !dbg !59
  %69 = bitcast float %65 to i32, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %69, ptr addrspace(1) %3, i1 %68) #1, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbvzkjankv6hpgm4muocirwwfupqy2q4muusiog7ggosh5bno44o.py", directory: "inductor_cache/bv")
!4 = !{ptr @triton_poi_fused_add_div_mean_mul_rsub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_mean_mul_rsub_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_mean_mul_rsub_1", linkageName: "triton_poi_fused_add_div_mean_mul_rsub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 24, column: 19, scope: !7)
!11 = !DILocation(line: 26, column: 19, scope: !7)
!12 = !DILocation(line: 28, column: 19, scope: !7)
!13 = !DILocation(line: 30, column: 31, scope: !7)
!14 = !DILocation(line: 30, column: 20, scope: !7)
!15 = !DILocation(line: 32, column: 31, scope: !7)
!16 = !DILocation(line: 32, column: 20, scope: !7)
!17 = !DILocation(line: 34, column: 31, scope: !7)
!18 = !DILocation(line: 34, column: 20, scope: !7)
!19 = !DILocation(line: 36, column: 31, scope: !7)
!20 = !DILocation(line: 36, column: 20, scope: !7)
!21 = !DILocation(line: 38, column: 31, scope: !7)
!22 = !DILocation(line: 38, column: 20, scope: !7)
!23 = !DILocation(line: 40, column: 31, scope: !7)
!24 = !DILocation(line: 40, column: 20, scope: !7)
!25 = !DILocation(line: 42, column: 31, scope: !7)
!26 = !DILocation(line: 42, column: 20, scope: !7)
!27 = !DILocation(line: 44, column: 31, scope: !7)
!28 = !DILocation(line: 44, column: 20, scope: !7)
!29 = !DILocation(line: 46, column: 31, scope: !7)
!30 = !DILocation(line: 46, column: 20, scope: !7)
!31 = !DILocation(line: 49, column: 18, scope: !7)
!32 = !DILocation(line: 51, column: 18, scope: !7)
!33 = !DILocation(line: 52, column: 19, scope: !7)
!34 = !DILocation(line: 53, column: 19, scope: !7)
!35 = !DILocation(line: 54, column: 19, scope: !7)
!36 = !DILocation(line: 56, column: 20, scope: !7)
!37 = !DILocation(line: 58, column: 20, scope: !7)
!38 = !DILocation(line: 59, column: 20, scope: !7)
!39 = !DILocation(line: 60, column: 20, scope: !7)
!40 = !DILocation(line: 61, column: 20, scope: !7)
!41 = !DILocation(line: 62, column: 20, scope: !7)
!42 = !DILocation(line: 63, column: 20, scope: !7)
!43 = !DILocation(line: 65, column: 20, scope: !7)
!44 = !DILocation(line: 66, column: 20, scope: !7)
!45 = !DILocation(line: 67, column: 20, scope: !7)
!46 = !DILocation(line: 68, column: 20, scope: !7)
!47 = !DILocation(line: 69, column: 20, scope: !7)
!48 = !DILocation(line: 70, column: 20, scope: !7)
!49 = !DILocation(line: 71, column: 20, scope: !7)
!50 = !DILocation(line: 73, column: 20, scope: !7)
!51 = !DILocation(line: 74, column: 20, scope: !7)
!52 = !DILocation(line: 75, column: 20, scope: !7)
!53 = !DILocation(line: 76, column: 20, scope: !7)
!54 = !DILocation(line: 77, column: 20, scope: !7)
!55 = !DILocation(line: 78, column: 20, scope: !7)
!56 = !DILocation(line: 79, column: 20, scope: !7)
!57 = !DILocation(line: 81, column: 20, scope: !7)
!58 = !DILocation(line: 83, column: 20, scope: !7)
!59 = !DILocation(line: 84, column: 65, scope: !7)
!60 = !DILocation(line: 84, column: 4, scope: !7)
