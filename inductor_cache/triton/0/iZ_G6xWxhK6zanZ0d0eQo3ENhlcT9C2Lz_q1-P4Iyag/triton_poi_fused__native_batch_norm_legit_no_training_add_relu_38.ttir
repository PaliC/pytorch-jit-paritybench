#loc = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_relu_38(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0), %arg9: i32 loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":19:0)) attributes {noinline = false} {
    %c1536_i32 = arith.constant 1536 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2048> : tensor<1x256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1x256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<1x256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<1x256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x256xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x256xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_5 : tensor<1x256xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.cmpi slt, %7, %c4_i32 : i32 loc(#loc9)
    %9 = arith.remsi %5, %cst_4 : tensor<1x256xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_4 : tensor<1x256xi32> loc(#loc11)
    %11 = arith.muli %7, %c128_i32 : i32 loc(#loc12)
    %12 = tt.splat %11 : i32 -> tensor<1x256xi32> loc(#loc13)
    %13 = arith.addi %9, %12 : tensor<1x256xi32> loc(#loc13)
    %14 = arith.muli %10, %cst_5 : tensor<1x256xi32> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<1x256xi32> loc(#loc15)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc16)
    %17 = tt.addptr %16, %15 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc16)
    %18 = tt.splat %8 : i1 -> tensor<1x256xi1> loc(#loc17)
    %19 = arith.andi %18, %6 : tensor<1x256xi1> loc(#loc17)
    %20 = tt.load %17, %19 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc18)
    %21 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc19)
    %22 = tt.addptr %21, %9 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc19)
    %23 = tt.load %22, %6 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc20)
    %24 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc21)
    %25 = tt.addptr %24, %9 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc21)
    %26 = tt.load %25, %6 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc22)
    %27 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc23)
    %28 = tt.addptr %27, %9 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc23)
    %29 = tt.load %28, %6 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc24)
    %30 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc25)
    %31 = tt.addptr %30, %9 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc25)
    %32 = tt.load %31, %6 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc26)
    %33 = arith.addi %7, %c1536_i32 : i32 loc(#loc27)
    %34 = arith.muli %9, %cst_3 : tensor<1x256xi32> loc(#loc28)
    %35 = tt.splat %33 : i32 -> tensor<1x256xi32> loc(#loc29)
    %36 = arith.addi %35, %34 : tensor<1x256xi32> loc(#loc29)
    %37 = arith.muli %10, %cst_2 : tensor<1x256xi32> loc(#loc30)
    %38 = arith.addi %36, %37 : tensor<1x256xi32> loc(#loc31)
    %39 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc32)
    %40 = tt.addptr %39, %38 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc32)
    %41 = tt.load %40, %19 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc33)
    %42 = arith.subf %20, %23 : tensor<1x256xf32> loc(#loc34)
    %43 = arith.addf %26, %cst_1 : tensor<1x256xf32> loc(#loc35)
    %44 = tt.extern_elementwise %43 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x256xf32>) -> tensor<1x256xf32> loc(#loc36)
    %45 = arith.divf %cst_0, %44 : tensor<1x256xf32> loc(#loc37)
    %46 = arith.mulf %42, %45 : tensor<1x256xf32> loc(#loc38)
    %47 = arith.mulf %46, %29 : tensor<1x256xf32> loc(#loc39)
    %48 = arith.addf %47, %32 : tensor<1x256xf32> loc(#loc40)
    %49 = arith.cmpf ogt, %cst, %48 : tensor<1x256xf32> loc(#loc52)
    %50 = arith.select %49, %cst, %48 : tensor<1x256xi1>, tensor<1x256xf32> loc(#loc53)
    %51 = arith.addf %41, %50 : tensor<1x256xf32> loc(#loc44)
    %52 = tt.splat %7 : i32 -> tensor<1x256xi32> loc(#loc45)
    %53 = arith.addi %52, %34 : tensor<1x256xi32> loc(#loc45)
    %54 = arith.addi %53, %37 : tensor<1x256xi32> loc(#loc46)
    %55 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc47)
    %56 = tt.addptr %55, %54 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc47)
    tt.store %56, %50, %19 : tensor<1x256x!tt.ptr<f32>> loc(#loc48)
    %57 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc49)
    %58 = tt.addptr %57, %15 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc49)
    tt.store %58, %51, %19 : tensor<1x256x!tt.ptr<f32>> loc(#loc50)
    tt.return loc(#loc51)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":22:28)
#loc3 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":22:33)
#loc4 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":23:36)
#loc5 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":23:44)
#loc6 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":23:23)
#loc7 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":24:21)
#loc8 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":25:28)
#loc9 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":27:21)
#loc10 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":29:19)
#loc11 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":30:19)
#loc12 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":31:39)
#loc13 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":31:35)
#loc14 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":31:48)
#loc15 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":31:44)
#loc16 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":31:30)
#loc17 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":31:61)
#loc18 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":31:53)
#loc19 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":32:30)
#loc20 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":32:35)
#loc21 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":33:30)
#loc22 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":33:35)
#loc23 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":34:31)
#loc24 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":34:36)
#loc25 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":35:31)
#loc26 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":35:36)
#loc27 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":36:38)
#loc28 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":36:45)
#loc29 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":36:43)
#loc30 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":36:55)
#loc31 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":36:50)
#loc32 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":36:31)
#loc33 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":36:60)
#loc34 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":37:18)
#loc35 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":39:18)
#loc36 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":40:26)
#loc37 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":42:18)
#loc38 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":45:19)
#loc39 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":46:20)
#loc40 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":47:20)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc42 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":49:42)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc44 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":50:20)
#loc45 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":51:30)
#loc46 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":51:37)
#loc47 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":51:25)
#loc48 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":51:54)
#loc49 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":52:25)
#loc50 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":52:55)
#loc51 = loc("inductor_cache/ki/ckirpellgtbzgcn7cxgqupt2qlfhkyj5w26v4fjwa4jqe2i53hun.py":52:4)
#loc52 = loc(callsite(#loc41 at #loc42))
#loc53 = loc(callsite(#loc43 at #loc42))
