; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_reflection_pad2d_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 512, !dbg !14
  %14 = srem i32 %12, 4, !dbg !15
  %15 = sdiv i32 %11, 128, !dbg !16
  %srem = srem i32 %11, 16, !dbg !17
  %16 = shl nsw i32 %15, 6, !dbg !18
  %17 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !19
  %18 = shufflevector <2 x i32> %17, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !19
  %19 = sdiv <2 x i32> %18, <i32 16, i32 4>, !dbg !19
  %20 = srem <2 x i32> %19, <i32 8, i32 4>, !dbg !20
  %21 = extractelement <2 x i32> %20, i64 0, !dbg !21
  %22 = icmp slt i32 %21, 4, !dbg !22
  %23 = shl nsw <2 x i32> %20, <i32 4, i32 2>, !dbg !23
  %24 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !24
  %25 = insertelement <2 x i32> %24, i32 %14, i64 1, !dbg !24
  %26 = add nsw <2 x i32> %25, %23, !dbg !24
  %27 = extractelement <2 x i32> %26, i64 0, !dbg !25
  %28 = add nsw i32 %27, %srem, !dbg !25
  %29 = extractelement <2 x i32> %26, i64 1, !dbg !26
  %30 = add nsw i32 %27, %29, !dbg !25
  %31 = sext i32 %28 to i64, !dbg !27
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !27
  %33 = sext i32 %30 to i64, !dbg !27
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !27
  %35 = and i1 %13, %22, !dbg !28
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %35, i32 0, i1 %35) #1, !dbg !29
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35) #1, !dbg !29
  %38 = sext i32 %21 to i64, !dbg !30
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %38, !dbg !30
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %35, i32 0, i1 %35) #1, !dbg !31
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %35, i32 0, i1 %35) #1, !dbg !31
  %42 = icmp sgt i32 %21, 3, !dbg !21
  %43 = add nsw i32 %21, -4, !dbg !32
  %44 = shl nsw i32 %43, 4, !dbg !33
  %45 = add nsw i32 %44, %16, !dbg !34
  %46 = add nsw i32 %45, %srem, !dbg !26
  %47 = add nsw i32 %45, %29, !dbg !26
  %48 = sext i32 %46 to i64, !dbg !35
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %48, !dbg !35
  %50 = sext i32 %47 to i64, !dbg !35
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %50, !dbg !35
  %52 = and i1 %13, %42, !dbg !36
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %52, i32 0, i1 %52) #1, !dbg !37
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %52, i32 0, i1 %52) #1, !dbg !37
  %55 = sext i32 %43 to i64, !dbg !38
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !38
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %52, i32 0, i1 %52) #1, !dbg !39
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %52, i32 0, i1 %52) #1, !dbg !39
  %59 = insertelement <4 x i32> poison, i32 %54, i64 0, !dbg !37
  %60 = insertelement <4 x i32> %59, i32 %53, i64 1, !dbg !37
  %61 = insertelement <4 x i32> %60, i32 %37, i64 2, !dbg !37
  %62 = insertelement <4 x i32> %61, i32 %36, i64 3, !dbg !37
  %63 = bitcast <4 x i32> %62 to <4 x float>, !dbg !37
  %64 = insertelement <4 x i32> poison, i32 %58, i64 0, !dbg !39
  %65 = insertelement <4 x i32> %64, i32 %57, i64 1, !dbg !39
  %66 = insertelement <4 x i32> %65, i32 %41, i64 2, !dbg !39
  %67 = insertelement <4 x i32> %66, i32 %40, i64 3, !dbg !39
  %68 = bitcast <4 x i32> %67 to <4 x float>, !dbg !39
  %69 = fadd <4 x float> %63, %68, !dbg !40
  %70 = fcmp olt <4 x float> %69, zeroinitializer, !dbg !41
  %71 = extractelement <4 x i1> %70, i64 3, !dbg !45
  %72 = extractelement <4 x float> %69, i64 3, !dbg !45
  %73 = select i1 %71, float 0.000000e+00, float %72, !dbg !45
  %74 = extractelement <4 x i1> %70, i64 2, !dbg !45
  %75 = extractelement <4 x float> %69, i64 2, !dbg !45
  %76 = select i1 %74, float 0.000000e+00, float %75, !dbg !45
  %77 = extractelement <4 x i1> %70, i64 1, !dbg !47
  %78 = extractelement <4 x float> %69, i64 1, !dbg !47
  %79 = select i1 %77, float 0.000000e+00, float %78, !dbg !47
  %80 = extractelement <4 x i1> %70, i64 0, !dbg !47
  %81 = extractelement <4 x float> %69, i64 0, !dbg !47
  %82 = select i1 %80, float 0.000000e+00, float %81, !dbg !47
  %83 = select i1 %22, float %73, float %79, !dbg !48
  %84 = select i1 %22, float %76, float %82, !dbg !48
  %85 = sext i32 %11 to i64, !dbg !49
  %86 = getelementptr float, ptr addrspace(1) %3, i64 %85, !dbg !49
  %87 = bitcast float %83 to i32, !dbg !50
  %88 = bitcast float %84 to i32, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %87, i32 %88, ptr addrspace(1) %86, i1 %13) #1, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpybxh5adxur6rhv3phgb7o6zwegzj7ehuu2hdiojxy252ycprjr.py", directory: "inductor_cache/py")
!4 = !{ptr @triton_poi_fused_cat_reflection_pad2d_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_reflection_pad2d_7, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_reflection_pad2d_7", linkageName: "triton_poi_fused_cat_reflection_pad2d_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 34, column: 68, scope: !7)
!18 = !DILocation(line: 34, column: 112, scope: !7)
!19 = !DILocation(line: 24, column: 21, scope: !7)
!20 = !DILocation(line: 24, column: 27, scope: !7)
!21 = !DILocation(line: 41, column: 20, scope: !7)
!22 = !DILocation(line: 33, column: 18, scope: !7)
!23 = !DILocation(line: 34, column: 103, scope: !7)
!24 = !DILocation(line: 34, column: 99, scope: !7)
!25 = !DILocation(line: 34, column: 109, scope: !7)
!26 = !DILocation(line: 44, column: 117, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 124, scope: !7)
!29 = !DILocation(line: 34, column: 117, scope: !7)
!30 = !DILocation(line: 35, column: 30, scope: !7)
!31 = !DILocation(line: 35, column: 35, scope: !7)
!32 = !DILocation(line: 44, column: 111, scope: !7)
!33 = !DILocation(line: 44, column: 104, scope: !7)
!34 = !DILocation(line: 44, column: 100, scope: !7)
!35 = !DILocation(line: 44, column: 31, scope: !7)
!36 = !DILocation(line: 44, column: 133, scope: !7)
!37 = !DILocation(line: 44, column: 125, scope: !7)
!38 = !DILocation(line: 45, column: 31, scope: !7)
!39 = !DILocation(line: 45, column: 43, scope: !7)
!40 = !DILocation(line: 46, column: 20, scope: !7)
!41 = !DILocation(line: 118, column: 15, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !7, file: !43, discriminator: 0)
!43 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!44 = !DILocation(line: 48, column: 42, scope: !7)
!45 = !DILocation(line: 121, column: 29, scope: !42, inlinedAt: !46)
!46 = !DILocation(line: 38, column: 40, scope: !7)
!47 = !DILocation(line: 121, column: 29, scope: !42, inlinedAt: !44)
!48 = !DILocation(line: 0, scope: !7)
!49 = !DILocation(line: 52, column: 25, scope: !7)
!50 = !DILocation(line: 52, column: 37, scope: !7)
!51 = !DILocation(line: 52, column: 4, scope: !7)
