; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_mul_sub_8(ptr addrspace(1) nocapture readnone %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) %2, ptr addrspace(1) nocapture readnone %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 8, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = shl i32 %14, 1, !dbg !12
  %16 = and i32 %15, 254, !dbg !12
  %17 = or disjoint i32 %13, %16, !dbg !13
  %18 = icmp slt i32 %17, 256, !dbg !14
  %19 = srem i32 %17, 4, !dbg !15
  %20 = sdiv i32 %17, 16, !dbg !16
  %21 = sext i32 %20 to i64, !dbg !17
  %22 = getelementptr float, ptr addrspace(1) %2, i64 %21, !dbg !17
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %18) #1, !dbg !18
  %24 = bitcast i32 %23 to float, !dbg !18
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %18) #1, !dbg !18
  %26 = bitcast i32 %25 to float, !dbg !18
  %27 = sext i32 %19 to i64, !dbg !19
  %28 = getelementptr float, ptr addrspace(1) %4, i64 %27, !dbg !19
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %18) #1, !dbg !20
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !20
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !20
  %32 = bitcast i32 %30 to float, !dbg !20
  %33 = bitcast i32 %31 to float, !dbg !20
  %34 = getelementptr float, ptr addrspace(1) %5, i64 %21, !dbg !21
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %18) #1, !dbg !22
  %36 = bitcast i32 %35 to float, !dbg !22
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %18) #1, !dbg !22
  %38 = bitcast i32 %37 to float, !dbg !22
  %39 = getelementptr float, ptr addrspace(1) %6, i64 %21, !dbg !23
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %18) #1, !dbg !24
  %41 = bitcast i32 %40 to float, !dbg !24
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %18) #1, !dbg !24
  %43 = bitcast i32 %42 to float, !dbg !24
  %44 = fsub float %24, %24, !dbg !25
  %45 = fsub float %26, %26, !dbg !25
  %46 = fmul float %44, %32, !dbg !26
  %47 = fmul float %45, %33, !dbg !26
  %48 = fadd float %46, %24, !dbg !27
  %49 = fadd float %47, %26, !dbg !27
  %50 = fsub float %36, %36, !dbg !28
  %51 = fsub float %38, %38, !dbg !28
  %52 = fmul float %50, %32, !dbg !29
  %53 = fmul float %51, %33, !dbg !29
  %54 = fadd float %52, %36, !dbg !30
  %55 = fadd float %53, %38, !dbg !30
  %56 = fsub float %41, %41, !dbg !31
  %57 = fsub float %43, %43, !dbg !31
  %58 = fmul float %56, %32, !dbg !32
  %59 = fmul float %57, %33, !dbg !32
  %60 = fadd float %58, %41, !dbg !33
  %61 = fadd float %59, %43, !dbg !33
  %62 = sext i32 %17 to i64, !dbg !34
  %63 = getelementptr float, ptr addrspace(1) %7, i64 %62, !dbg !34
  %64 = bitcast float %48 to i32, !dbg !35
  %65 = bitcast float %49 to i32, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %64, i32 %65, ptr addrspace(1) %63, i1 %18) #1, !dbg !35
  %66 = getelementptr float, ptr addrspace(1) %8, i64 %62, !dbg !36
  %67 = bitcast float %54 to i32, !dbg !37
  %68 = bitcast float %55 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %67, i32 %68, ptr addrspace(1) %66, i1 %18) #1, !dbg !37
  %69 = getelementptr float, ptr addrspace(1) %9, i64 %62, !dbg !38
  %70 = bitcast float %60 to i32, !dbg !39
  %71 = bitcast float %61 to i32, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %70, i32 %71, ptr addrspace(1) %69, i1 %18) #1, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3p4rw3p7p7gyp5claxejiqi7pdyo3fhmjmkpeflpniqb5ppjqmj.py", directory: "inductor_cache/3p")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_mul_sub_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_mul_sub_8", linkageName: "triton_poi_fused__unsafe_index_add_mul_sub_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 30, column: 30, scope: !7)
!18 = !DILocation(line: 30, column: 35, scope: !7)
!19 = !DILocation(line: 32, column: 31, scope: !7)
!20 = !DILocation(line: 32, column: 36, scope: !7)
!21 = !DILocation(line: 33, column: 31, scope: !7)
!22 = !DILocation(line: 33, column: 36, scope: !7)
!23 = !DILocation(line: 34, column: 31, scope: !7)
!24 = !DILocation(line: 34, column: 36, scope: !7)
!25 = !DILocation(line: 45, column: 19, scope: !7)
!26 = !DILocation(line: 46, column: 20, scope: !7)
!27 = !DILocation(line: 47, column: 19, scope: !7)
!28 = !DILocation(line: 48, column: 20, scope: !7)
!29 = !DILocation(line: 49, column: 20, scope: !7)
!30 = !DILocation(line: 50, column: 20, scope: !7)
!31 = !DILocation(line: 51, column: 20, scope: !7)
!32 = !DILocation(line: 52, column: 20, scope: !7)
!33 = !DILocation(line: 53, column: 20, scope: !7)
!34 = !DILocation(line: 54, column: 25, scope: !7)
!35 = !DILocation(line: 54, column: 37, scope: !7)
!36 = !DILocation(line: 55, column: 25, scope: !7)
!37 = !DILocation(line: 55, column: 37, scope: !7)
!38 = !DILocation(line: 56, column: 25, scope: !7)
!39 = !DILocation(line: 56, column: 37, scope: !7)
!40 = !DILocation(line: 56, column: 4, scope: !7)
