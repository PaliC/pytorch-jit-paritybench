; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_stack_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 128, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 2, !dbg !15
  %11 = mul i32 %10, 2, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = icmp slt i32 %.decomposed, 1, !dbg !17
  %13 = shl i32 %10, 2, !dbg !18
  %14 = sext i32 %13 to i64, !dbg !19
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !19
  %16 = and i1 %9, %12, !dbg !20
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %16, i32 0, i1 %16) #4, !dbg !21
  %18 = or disjoint i32 %13, 1, !dbg !22
  %19 = sext i32 %18 to i64, !dbg !23
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !23
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %16, i32 0, i1 %16) #4, !dbg !24
  %22 = bitcast i32 %21 to float, !dbg !24
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !25
  %23 = fmul float %22, 0x3FE45F3060000000, !dbg !25
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i2 = icmp eq i32 %24, 0, !dbg !25
  %25 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %23) #4, !dbg !25
  %26 = tail call i32 @llvm.nvvm.f2i.rn(float %23) #4, !dbg !25
  %.01.i3 = select i1 %.not.i2, i32 %26, i32 %25, !dbg !25
  %27 = sitofp i32 %.01.i3 to float, !dbg !25
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i4 = icmp eq i32 %28, 0, !dbg !25
  %29 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %27, float 0xBFF921FB40000000, float %22) #4, !dbg !25
  %30 = tail call float @llvm.nvvm.fma.rn.f(float %27, float 0xBFF921FB40000000, float %22) #4, !dbg !25
  %.02.i5 = select i1 %.not15.i4, float %30, float %29, !dbg !25
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i6 = icmp eq i32 %31, 0, !dbg !25
  %32 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %27, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !25
  %33 = tail call float @llvm.nvvm.fma.rn.f(float %27, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !25
  %.03.i7 = select i1 %.not16.i6, float %33, float %32, !dbg !25
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i8 = icmp eq i32 %34, 0, !dbg !25
  %35 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %27, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !25
  %36 = tail call float @llvm.nvvm.fma.rn.f(float %27, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !25
  %.04.i9 = select i1 %.not17.i8, float %36, float %35, !dbg !25
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i10 = icmp eq i32 %37, 0, !dbg !25
  %38 = tail call float @llvm.nvvm.fabs.ftz.f(float %22) #4, !dbg !25
  %39 = tail call float @llvm.nvvm.fabs.f(float %22) #4, !dbg !25
  %.06.i11 = select i1 %.not18.i10, float %39, float %38, !dbg !25
  %40 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !25
  br i1 %40, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !25

__nv_isinff.exit.i.i.i12:                         ; preds = %3
  %41 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i13 = icmp eq i32 %41, 0, !dbg !25
  %.07.i14 = select i1 %.not19.i13, float %39, float %38, !dbg !25
  %42 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !25
  br i1 %42, label %__nv_fmul_rn.exit.i.i.i51, label %46, !dbg !25

__nv_fmul_rn.exit.i.i.i51:                        ; preds = %__nv_isinff.exit.i.i.i12
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not27.i52 = icmp eq i32 %43, 0, !dbg !25
  %44 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %22, float 0.000000e+00) #4, !dbg !25
  %45 = tail call float @llvm.nvvm.mul.rn.f(float %22, float 0.000000e+00) #4, !dbg !25
  %.08.i53 = select i1 %.not27.i52, float %45, float %44, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !25

46:                                               ; preds = %__nv_isinff.exit.i.i.i12
  %47 = lshr i32 %21, 23, !dbg !25
  %48 = and i32 %47, 224, !dbg !25
  %49 = add nsw i32 %48, -128, !dbg !25
  %50 = shl i32 %21, 8, !dbg !25
  %51 = or i32 %50, -2147483648, !dbg !25
  %52 = lshr exact i32 %49, 5, !dbg !25
  br label %53, !dbg !25

53:                                               ; preds = %46, %53
  %indvars.iv = phi i64 [ 0, %46 ], [ %indvars.iv.next, %53 ]
  %hi.i.i.i.0.i1554 = phi i32 [ 0, %46 ], [ %58, %53 ]
  %54 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !25
  %55 = load i32, ptr addrspace(1) %54, align 4, !dbg !25
  %56 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %55, i32 %51, i32 %hi.i.i.i.0.i1554) #5, !dbg !25, !srcloc !26
  %57 = extractvalue { i32, i32 } %56, 0, !dbg !25
  %58 = extractvalue { i32, i32 } %56, 1, !dbg !25
  %59 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv, !dbg !25
  store i32 %57, ptr %59, align 4, !dbg !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !25
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !25
  br i1 %exitcond.not, label %60, label %53, !dbg !25, !llvm.loop !27

60:                                               ; preds = %53
  %61 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !25
  store i32 %58, ptr %61, align 4, !dbg !25
  %62 = and i32 %47, 31, !dbg !25
  %63 = sub nsw i32 6, %52, !dbg !25
  %64 = sext i32 %63 to i64, !dbg !25
  %65 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %64, !dbg !25
  %66 = load i32, ptr %65, align 4, !dbg !25
  %67 = sub nsw i32 5, %52, !dbg !25
  %68 = sext i32 %67 to i64, !dbg !25
  %69 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %68, !dbg !25
  %70 = load i32, ptr %69, align 4, !dbg !25
  %.not20.i17 = icmp eq i32 %62, 0, !dbg !25
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %71, !dbg !25

71:                                               ; preds = %60
  %72 = sub nsw i32 4, %52, !dbg !25
  %73 = sub nuw nsw i32 32, %62, !dbg !25
  %74 = shl i32 %66, %62, !dbg !25
  %75 = lshr i32 %70, %73, !dbg !25
  %76 = add i32 %75, %74, !dbg !25
  %77 = shl i32 %70, %62, !dbg !25
  %78 = sext i32 %72 to i64, !dbg !25
  %79 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %78, !dbg !25
  %80 = load i32, ptr %79, align 4, !dbg !25
  %81 = lshr i32 %80, %73, !dbg !25
  %82 = add i32 %81, %77, !dbg !25
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !25

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %71, %60
  %hi.i.i.i.1.i19 = phi i32 [ %76, %71 ], [ %66, %60 ], !dbg !25
  %lo.i.i.i.0.i20 = phi i32 [ %82, %71 ], [ %70, %60 ], !dbg !25
  %83 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !25
  %84 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !25
  %85 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !25
  %86 = lshr i32 %84, 31, !dbg !25
  %87 = add nuw nsw i32 %86, %83, !dbg !25
  %88 = sub nsw i32 0, %87, !dbg !25
  %.not2123.i21 = icmp slt i32 %21, 0, !dbg !25
  %spec.select.i22 = select i1 %.not2123.i21, i32 %88, i32 %87, !dbg !25
  %89 = xor i32 %84, %21, !dbg !25
  %.lobit.i23 = ashr i32 %84, 31, !dbg !25
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %84, !dbg !25
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %85, !dbg !25
  %90 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !25
  %91 = shl nuw i64 %90, 32, !dbg !25
  %92 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !25
  %93 = or disjoint i64 %91, %92, !dbg !25
  %94 = sitofp i64 %93 to double, !dbg !25
  %95 = fmul double %94, 0x3BF921FB54442D19, !dbg !25
  %96 = fptrunc double %95 to float, !dbg !25
  %97 = fneg float %96, !dbg !25
  %.not2526.i27 = icmp slt i32 %89, 0, !dbg !25
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %97, float %96, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !25

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i51, %3
  %i.i.1.i30 = phi i32 [ %.01.i3, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i51 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !25
  %t.i.i.1.i31 = phi float [ %.04.i9, %3 ], [ %.08.i53, %__nv_fmul_rn.exit.i.i.i51 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !25
  %98 = add i32 %i.i.1.i30, 1, !dbg !25
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not28.i32 = icmp eq i32 %99, 0, !dbg !25
  %100 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !25
  %101 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !25
  %.011.i33 = select i1 %.not28.i32, float %101, float %100, !dbg !25
  %102 = and i32 %i.i.1.i30, 1, !dbg !25
  %.not29.not.i = icmp eq i32 %102, 0, !dbg !25
  %103 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i31, !dbg !25
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i34 = icmp eq i32 %104, 0, !dbg !25
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %103, float 0.000000e+00) #4, !dbg !25
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %103, float 0.000000e+00) #4, !dbg !25
  %.012.i35 = select i1 %.not30.i34, float %106, float %105, !dbg !25
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i48, label %__internal_fmad.exit2.i.i.i36, !dbg !25

__internal_fmad.exit1.i.i.i48:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i49 = icmp eq i32 %107, 0, !dbg !25
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !25
  %109 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !25
  %.013.i50 = select i1 %.not31.i49, float %109, float %108, !dbg !25
  br label %__internal_fmad.exit2.i.i.i36, !dbg !25

__internal_fmad.exit2.i.i.i36:                    ; preds = %__internal_fmad.exit1.i.i.i48, %__internal_trig_reduction_kernel.exit.i.i29
  %110 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i48 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %111 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i48 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %112 = phi float [ %.013.i50, %__internal_fmad.exit1.i.i.i48 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i37 = icmp eq i32 %113, 0, !dbg !25
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float %.011.i33, float %111) #4, !dbg !25
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %112, float %.011.i33, float %111) #4, !dbg !25
  %.010.i38 = select i1 %.not32.i37, float %115, float %114, !dbg !25
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i39 = icmp eq i32 %116, 0, !dbg !25
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i38, float %.011.i33, float %110) #4, !dbg !25
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i38, float %.011.i33, float %110) #4, !dbg !25
  %.09.i40 = select i1 %.not33.i39, float %118, float %117, !dbg !25
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i41 = icmp eq i32 %119, 0, !dbg !25
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i40, float %.012.i35, float %103) #4, !dbg !25
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i40, float %.012.i35, float %103) #4, !dbg !25
  %.05.i42 = select i1 %.not34.i41, float %121, float %120, !dbg !25
  %122 = and i32 %98, 2, !dbg !25
  %.not35.i43 = icmp eq i32 %122, 0, !dbg !25
  br i1 %.not35.i43, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i44, !dbg !25

__internal_fmad.exit5.i.i.i44:                    ; preds = %__internal_fmad.exit2.i.i.i36
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i45 = icmp eq i32 %123, 0, !dbg !25
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !25
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i42, float -1.000000e+00, float 0.000000e+00) #4, !dbg !25
  %.0.i46 = select i1 %.not36.i45, float %125, float %124, !dbg !25
  br label %__nv_cosf.exit, !dbg !25

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i36, %__internal_fmad.exit5.i.i.i44
  %z.i.i.0.i47 = phi float [ %.0.i46, %__internal_fmad.exit5.i.i.i44 ], [ %.05.i42, %__internal_fmad.exit2.i.i.i36 ], !dbg !25
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !25
  %126 = icmp sgt i32 %.decomposed, 0, !dbg !29
  %127 = and i1 %9, %126, !dbg !30
  %128 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 %127, i32 0, i1 %127) #4, !dbg !31
  %129 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %127, i32 0, i1 %127) #4, !dbg !32
  %130 = bitcast i32 %129 to float, !dbg !32
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !33
  %131 = fmul float %130, 0x3FE45F3060000000, !dbg !33
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not.i = icmp eq i32 %132, 0, !dbg !33
  %133 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %131) #4, !dbg !33
  %134 = tail call i32 @llvm.nvvm.f2i.rn(float %131) #4, !dbg !33
  %.01.i = select i1 %.not.i, i32 %134, i32 %133, !dbg !33
  %135 = sitofp i32 %.01.i to float, !dbg !33
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not15.i = icmp eq i32 %136, 0, !dbg !33
  %137 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %135, float 0xBFF921FB40000000, float %130) #4, !dbg !33
  %138 = tail call float @llvm.nvvm.fma.rn.f(float %135, float 0xBFF921FB40000000, float %130) #4, !dbg !33
  %.02.i = select i1 %.not15.i, float %138, float %137, !dbg !33
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not16.i = icmp eq i32 %139, 0, !dbg !33
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %135, float 0xBE74442D00000000, float %.02.i) #4, !dbg !33
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %135, float 0xBE74442D00000000, float %.02.i) #4, !dbg !33
  %.03.i = select i1 %.not16.i, float %141, float %140, !dbg !33
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not17.i = icmp eq i32 %142, 0, !dbg !33
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %135, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !33
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %135, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !33
  %.04.i = select i1 %.not17.i, float %144, float %143, !dbg !33
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not18.i = icmp eq i32 %145, 0, !dbg !33
  %146 = tail call float @llvm.nvvm.fabs.ftz.f(float %130) #4, !dbg !33
  %147 = tail call float @llvm.nvvm.fabs.f(float %130) #4, !dbg !33
  %.06.i = select i1 %.not18.i, float %147, float %146, !dbg !33
  %148 = fcmp ult float %.06.i, 1.056150e+05, !dbg !33
  br i1 %148, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !33

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_cosf.exit
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not19.i = icmp eq i32 %149, 0, !dbg !33
  %.07.i = select i1 %.not19.i, float %147, float %146, !dbg !33
  %150 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !33
  br i1 %150, label %__nv_fmul_rn.exit.i.i.i, label %154, !dbg !33

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not27.i = icmp eq i32 %151, 0, !dbg !33
  %152 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %130, float 0.000000e+00) #4, !dbg !33
  %153 = tail call float @llvm.nvvm.mul.rn.f(float %130, float 0.000000e+00) #4, !dbg !33
  %.08.i = select i1 %.not27.i, float %153, float %152, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !33

154:                                              ; preds = %__nv_isinff.exit.i.i.i
  %155 = lshr i32 %129, 23, !dbg !33
  %156 = and i32 %155, 224, !dbg !33
  %157 = add nsw i32 %156, -128, !dbg !33
  %158 = shl i32 %129, 8, !dbg !33
  %159 = or i32 %158, -2147483648, !dbg !33
  %160 = lshr exact i32 %157, 5, !dbg !33
  br label %161, !dbg !33

161:                                              ; preds = %154, %161
  %indvars.iv61 = phi i64 [ 0, %154 ], [ %indvars.iv.next62, %161 ]
  %hi.i.i.i.0.i56 = phi i32 [ 0, %154 ], [ %166, %161 ]
  %162 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv61, !dbg !33
  %163 = load i32, ptr addrspace(1) %162, align 4, !dbg !33
  %164 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %163, i32 %159, i32 %hi.i.i.i.0.i56) #5, !dbg !33, !srcloc !26
  %165 = extractvalue { i32, i32 } %164, 0, !dbg !33
  %166 = extractvalue { i32, i32 } %164, 1, !dbg !33
  %167 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv61, !dbg !33
  store i32 %165, ptr %167, align 4, !dbg !33
  %indvars.iv.next62 = add nuw nsw i64 %indvars.iv61, 1, !dbg !33
  %exitcond63.not = icmp eq i64 %indvars.iv.next62, 6, !dbg !33
  br i1 %exitcond63.not, label %168, label %161, !dbg !33, !llvm.loop !34

168:                                              ; preds = %161
  %169 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !33
  store i32 %166, ptr %169, align 4, !dbg !33
  %170 = and i32 %155, 31, !dbg !33
  %171 = sub nsw i32 6, %160, !dbg !33
  %172 = sext i32 %171 to i64, !dbg !33
  %173 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %172, !dbg !33
  %174 = load i32, ptr %173, align 4, !dbg !33
  %175 = sub nsw i32 5, %160, !dbg !33
  %176 = sext i32 %175 to i64, !dbg !33
  %177 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %176, !dbg !33
  %178 = load i32, ptr %177, align 4, !dbg !33
  %.not20.i = icmp eq i32 %170, 0, !dbg !33
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %179, !dbg !33

179:                                              ; preds = %168
  %180 = sub nsw i32 4, %160, !dbg !33
  %181 = sub nuw nsw i32 32, %170, !dbg !33
  %182 = shl i32 %174, %170, !dbg !33
  %183 = lshr i32 %178, %181, !dbg !33
  %184 = add i32 %183, %182, !dbg !33
  %185 = shl i32 %178, %170, !dbg !33
  %186 = sext i32 %180 to i64, !dbg !33
  %187 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %186, !dbg !33
  %188 = load i32, ptr %187, align 4, !dbg !33
  %189 = lshr i32 %188, %181, !dbg !33
  %190 = add i32 %189, %185, !dbg !33
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !33

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %179, %168
  %hi.i.i.i.1.i = phi i32 [ %184, %179 ], [ %174, %168 ], !dbg !33
  %lo.i.i.i.0.i = phi i32 [ %190, %179 ], [ %178, %168 ], !dbg !33
  %191 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !33
  %192 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !33
  %193 = shl i32 %lo.i.i.i.0.i, 2, !dbg !33
  %194 = lshr i32 %192, 31, !dbg !33
  %195 = add nuw nsw i32 %194, %191, !dbg !33
  %196 = sub nsw i32 0, %195, !dbg !33
  %.not2123.i = icmp slt i32 %129, 0, !dbg !33
  %spec.select.i = select i1 %.not2123.i, i32 %196, i32 %195, !dbg !33
  %197 = xor i32 %192, %129, !dbg !33
  %.lobit.i = ashr i32 %192, 31, !dbg !33
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %192, !dbg !33
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %193, !dbg !33
  %198 = zext i32 %hi.i.i.i.2.i to i64, !dbg !33
  %199 = shl nuw i64 %198, 32, !dbg !33
  %200 = zext i32 %lo.i.i.i.1.i to i64, !dbg !33
  %201 = or disjoint i64 %199, %200, !dbg !33
  %202 = sitofp i64 %201 to double, !dbg !33
  %203 = fmul double %202, 0x3BF921FB54442D19, !dbg !33
  %204 = fptrunc double %203 to float, !dbg !33
  %205 = fneg float %204, !dbg !33
  %.not2526.i = icmp slt i32 %197, 0, !dbg !33
  %r.i.i.i.0.i = select i1 %.not2526.i, float %205, float %204, !dbg !33
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !33

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_cosf.exit
  %i.i.1.i = phi i32 [ %.01.i, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !33
  %t.i.i.1.i = phi float [ %.04.i, %__nv_cosf.exit ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !33
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not28.i = icmp eq i32 %206, 0, !dbg !33
  %207 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !33
  %208 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !33
  %.011.i = select i1 %.not28.i, float %208, float %207, !dbg !33
  %209 = and i32 %i.i.1.i, 1, !dbg !33
  %.not29.i = icmp eq i32 %209, 0, !dbg !33
  %210 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !33
  %211 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not30.i = icmp eq i32 %211, 0, !dbg !33
  %212 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %210, float 0.000000e+00) #4, !dbg !33
  %213 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %210, float 0.000000e+00) #4, !dbg !33
  %.012.i = select i1 %.not30.i, float %213, float %212, !dbg !33
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !33

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not31.i = icmp eq i32 %214, 0, !dbg !33
  %215 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !33
  %216 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !33
  %.013.i = select i1 %.not31.i, float %216, float %215, !dbg !33
  br label %__internal_fmad.exit2.i.i.i, !dbg !33

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %217 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %218 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %219 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !33
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not32.i = icmp eq i32 %220, 0, !dbg !33
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %219, float %.011.i, float %218) #4, !dbg !33
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %219, float %.011.i, float %218) #4, !dbg !33
  %.010.i = select i1 %.not32.i, float %222, float %221, !dbg !33
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not33.i = icmp eq i32 %223, 0, !dbg !33
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %217) #4, !dbg !33
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %217) #4, !dbg !33
  %.09.i = select i1 %.not33.i, float %225, float %224, !dbg !33
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not34.i = icmp eq i32 %226, 0, !dbg !33
  %227 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %210) #4, !dbg !33
  %228 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %210) #4, !dbg !33
  %.05.i = select i1 %.not34.i, float %228, float %227, !dbg !33
  %229 = and i32 %i.i.1.i, 2, !dbg !33
  %.not35.i = icmp eq i32 %229, 0, !dbg !33
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !33

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %230 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not36.i = icmp eq i32 %230, 0, !dbg !33
  %231 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !33
  %232 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !33
  %.0.i = select i1 %.not36.i, float %232, float %231, !dbg !33
  br label %__nv_sinf.exit, !dbg !33

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !33
  %233 = bitcast i32 %128 to float, !dbg !31
  %234 = bitcast i32 %17 to float, !dbg !21
  %235 = fmul float %z.i.i.0.i47, %234, !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !33
  %236 = fmul float %z.i.i.0.i, %233, !dbg !36
  %237 = select i1 %12, float %235, float %236, !dbg !37
  %238 = sext i32 %8 to i64, !dbg !38
  %239 = getelementptr float, ptr addrspace(1) %1, i64 %238, !dbg !38
  %240 = bitcast float %237 to i32, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %240, ptr addrspace(1) %239, i1 %9) #4, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbieucsmroipxwkjbaob6qljuws6r5d2vqadnw5zuorb4pgf6ac7.py", directory: "inductor_cache/bi")
!4 = !{ptr @triton_poi_fused_stack_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_stack_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_stack_0", linkageName: "triton_poi_fused_stack_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 32, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 44, scope: !7)
!21 = !DILocation(line: 32, column: 37, scope: !7)
!22 = !DILocation(line: 33, column: 34, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 41, scope: !7)
!25 = !DILocation(line: 34, column: 23, scope: !7)
!26 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.unroll.count", i32 1}
!29 = !DILocation(line: 38, column: 20, scope: !7)
!30 = !DILocation(line: 41, column: 46, scope: !7)
!31 = !DILocation(line: 41, column: 38, scope: !7)
!32 = !DILocation(line: 42, column: 42, scope: !7)
!33 = !DILocation(line: 43, column: 24, scope: !7)
!34 = distinct !{!34, !28}
!35 = !DILocation(line: 35, column: 18, scope: !7)
!36 = !DILocation(line: 44, column: 20, scope: !7)
!37 = !DILocation(line: 0, scope: !7)
!38 = !DILocation(line: 48, column: 25, scope: !7)
!39 = !DILocation(line: 48, column: 37, scope: !7)
!40 = !DILocation(line: 48, column: 4, scope: !7)
