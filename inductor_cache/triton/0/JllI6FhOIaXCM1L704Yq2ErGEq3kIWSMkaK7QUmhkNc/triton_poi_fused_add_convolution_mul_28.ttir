#loc = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0)
module {
  tt.func public @triton_poi_fused_add_convolution_mul_28(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %cst = arith.constant dense<8192> : tensor<1x256xi32> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<1x256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<1x256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<1x256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x256xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x256xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_2 : tensor<1x256xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.cmpi slt, %7, %c128_i32 : i32 loc(#loc9)
    %9 = tt.splat %8 : i1 -> tensor<1x1xi1> loc(#loc9)
    %10 = arith.remsi %5, %cst_1 : tensor<1x256xi32> loc(#loc10)
    %11 = arith.divsi %5, %cst_1 : tensor<1x256xi32> loc(#loc11)
    %12 = arith.muli %5, %cst_0 : tensor<1x256xi32> loc(#loc12)
    %13 = tt.splat %7 : i32 -> tensor<1x256xi32> loc(#loc13)
    %14 = arith.addi %13, %12 : tensor<1x256xi32> loc(#loc13)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %15, %14 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc14)
    %17 = tt.splat %8 : i1 -> tensor<1x256xi1> loc(#loc15)
    %18 = arith.andi %17, %6 : tensor<1x256xi1> loc(#loc15)
    %19 = tt.load %16, %18 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.addptr %arg1, %7 : !tt.ptr<f32>, i32 loc(#loc17)
    %21 = tt.splat %20 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.load %21, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.addptr %arg2, %7 : !tt.ptr<f32>, i32 loc(#loc19)
    %24 = tt.splat %23 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.load %24, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc21)
    %27 = tt.addptr %26, %14 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc21)
    %28 = tt.load %27, %18 evictionPolicy = evict_last : tensor<1x256x!tt.ptr<f32>> loc(#loc22)
    %29 = tt.addptr %arg4, %7 : !tt.ptr<f32>, i32 loc(#loc23)
    %30 = tt.splat %29 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    %31 = tt.load %30, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    %32 = tt.addptr %arg5, %7 : !tt.ptr<f32>, i32 loc(#loc25)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    %34 = tt.load %33, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc26)
    %35 = tt.addptr %arg6, %7 : !tt.ptr<f32>, i32 loc(#loc27)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc27)
    %37 = tt.load %36, %9 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    %38 = tt.broadcast %22 : tensor<1x1xf32> -> tensor<1x256xf32> loc(#loc29)
    %39 = arith.addf %19, %38 : tensor<1x256xf32> loc(#loc29)
    %40 = tt.broadcast %25 : tensor<1x1xf32> -> tensor<1x256xf32> loc(#loc30)
    %41 = arith.mulf %40, %28 : tensor<1x256xf32> loc(#loc30)
    %42 = tt.broadcast %31 : tensor<1x1xf32> -> tensor<1x256xf32> loc(#loc31)
    %43 = arith.addf %41, %42 : tensor<1x256xf32> loc(#loc31)
    %44 = tt.broadcast %34 : tensor<1x1xf32> -> tensor<1x256xf32> loc(#loc32)
    %45 = arith.mulf %44, %39 : tensor<1x256xf32> loc(#loc32)
    %46 = tt.broadcast %37 : tensor<1x1xf32> -> tensor<1x256xf32> loc(#loc33)
    %47 = arith.addf %45, %46 : tensor<1x256xf32> loc(#loc33)
    %48 = arith.addf %43, %47 : tensor<1x256xf32> loc(#loc34)
    gpu.barrier loc(#loc35)
    tt.store %16, %39, %18 : tensor<1x256x!tt.ptr<f32>> loc(#loc36)
    %49 = arith.muli %7, %c64_i32 : i32 loc(#loc37)
    %50 = tt.splat %49 : i32 -> tensor<1x256xi32> loc(#loc38)
    %51 = arith.addi %10, %50 : tensor<1x256xi32> loc(#loc38)
    %52 = arith.muli %11, %cst : tensor<1x256xi32> loc(#loc39)
    %53 = arith.addi %51, %52 : tensor<1x256xi32> loc(#loc40)
    %54 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc41)
    %55 = tt.addptr %54, %53 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc41)
    tt.store %55, %48, %18 : tensor<1x256x!tt.ptr<f32>> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":22:28)
#loc3 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":22:33)
#loc4 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":23:36)
#loc5 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":23:44)
#loc6 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":23:23)
#loc7 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":24:21)
#loc8 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":25:28)
#loc9 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":27:21)
#loc10 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":30:19)
#loc11 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":31:19)
#loc12 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":32:43)
#loc13 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":32:39)
#loc14 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":32:34)
#loc15 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":32:56)
#loc16 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":32:48)
#loc17 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":33:30)
#loc18 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":33:35)
#loc19 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":34:30)
#loc20 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":34:35)
#loc21 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":35:30)
#loc22 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":35:44)
#loc23 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":36:30)
#loc24 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":36:35)
#loc25 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":37:30)
#loc26 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":37:35)
#loc27 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":38:31)
#loc28 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":38:36)
#loc29 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":39:18)
#loc30 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":40:18)
#loc31 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":41:18)
#loc32 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":42:18)
#loc33 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":43:19)
#loc34 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":44:19)
#loc35 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":45:4)
#loc36 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":46:48)
#loc37 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":47:33)
#loc38 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":47:30)
#loc39 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":47:43)
#loc40 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":47:38)
#loc41 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":47:25)
#loc42 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":47:55)
#loc43 = loc("inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py":47:4)
