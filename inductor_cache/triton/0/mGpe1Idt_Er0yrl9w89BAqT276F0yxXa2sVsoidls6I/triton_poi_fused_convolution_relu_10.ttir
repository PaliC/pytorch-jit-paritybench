#loc = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":19:0)
module {
  tt.func public @triton_poi_fused_convolution_relu_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_1 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_0 : tensor<256xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc8)
    %9 = tt.load %8 : tensor<256x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %6 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %13 = arith.addf %9, %12 : tensor<256xf32> loc(#loc12)
    %14 = arith.cmpf ogt, %cst, %13 : tensor<256xf32> loc(#loc18)
    %15 = arith.select %14, %cst, %13 : tensor<256xi1>, tensor<256xf32> loc(#loc19)
    tt.store %8, %15 : tensor<256x!tt.ptr<f32>> loc(#loc16)
    tt.return loc(#loc17)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":21:28)
#loc3 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":21:33)
#loc4 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":22:36)
#loc5 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":22:23)
#loc6 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":25:21)
#loc7 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":25:27)
#loc8 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":26:34)
#loc9 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":26:39)
#loc10 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":27:30)
#loc11 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":27:35)
#loc12 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":28:18)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc14 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":30:40)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc16 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":31:39)
#loc17 = loc("inductor_cache/jg/cjgq74mk6b7syoehwumll2lxqzdhund667eqqzdkkqs7z2ivselo.py":31:4)
#loc18 = loc(callsite(#loc13 at #loc14))
#loc19 = loc(callsite(#loc15 at #loc14))
