#loc = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<128xi64> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<128xi32> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<128> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_5 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_4 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_5 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_3 : tensor<128xi32> loc(#loc10)
    %10 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc11)
    %11 = tt.load %10 : !tt.ptr<f32> loc(#loc12)
    %12 = tt.splat %11 : f32 -> tensor<128xf32> loc(#loc13)
    %13 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc14)
    %14 = tt.load %13 : !tt.ptr<f32> loc(#loc15)
    %15 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc16)
    %16 = tt.load %15 : !tt.ptr<f32> loc(#loc17)
    %17 = tt.splat %16 : f32 -> tensor<128xf32> loc(#loc18)
    %18 = tt.addptr %arg4, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %19 = tt.load %18 : !tt.ptr<f32> loc(#loc20)
    %20 = tt.splat %19 : f32 -> tensor<128xf32> loc(#loc21)
    %21 = tt.addptr %arg6, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc22)
    %22 = tt.load %21 : !tt.ptr<f32> loc(#loc23)
    %23 = tt.splat %22 : f32 -> tensor<128xf32> loc(#loc24)
    %24 = tt.addptr %arg7, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc25)
    %25 = tt.load %24 : !tt.ptr<f32> loc(#loc26)
    %26 = tt.addptr %arg8, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc27)
    %27 = tt.load %26 : !tt.ptr<f32> loc(#loc28)
    %28 = tt.splat %27 : f32 -> tensor<128xf32> loc(#loc29)
    %29 = tt.addptr %arg9, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc30)
    %30 = tt.load %29 : !tt.ptr<f32> loc(#loc31)
    %31 = tt.splat %30 : f32 -> tensor<128xf32> loc(#loc32)
    %32 = arith.extsi %7 : tensor<128xi32> to tensor<128xi64> loc(#loc33)
    %33 = arith.cmpi slt, %32, %cst_2 : tensor<128xi64> loc(#loc33)
    %34 = arith.muli %9, %cst_5 : tensor<128xi32> loc(#loc34)
    %35 = arith.addi %8, %34 : tensor<128xi32> loc(#loc35)
    %36 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc36)
    %37 = tt.addptr %36, %35 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc36)
    %38 = arith.andi %33, %5 : tensor<128xi1> loc(#loc37)
    %39 = tt.load %37, %38, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc38)
    %40 = arith.subf %39, %12 : tensor<128xf32> loc(#loc39)
    %41 = arith.addf %14, %cst_0 : f32 loc(#loc40)
    %42 = tt.extern_elementwise %41 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc41)
    %43 = arith.divf %cst, %42 : f32 loc(#loc42)
    %44 = tt.splat %43 : f32 -> tensor<128xf32> loc(#loc42)
    %45 = arith.mulf %40, %44 : tensor<128xf32> loc(#loc43)
    %46 = arith.mulf %45, %17 : tensor<128xf32> loc(#loc44)
    %47 = arith.addf %46, %20 : tensor<128xf32> loc(#loc45)
    %48 = arith.cmpf ogt, %cst_1, %47 : tensor<128xf32> loc(#loc67)
    %49 = arith.select %48, %cst_1, %47 : tensor<128xi1>, tensor<128xf32> loc(#loc68)
    %50 = arith.cmpi sge, %32, %cst_2 : tensor<128xi64> loc(#loc49)
    %51 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc50)
    %52 = tt.addptr %51, %35 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc50)
    %53 = arith.andi %50, %5 : tensor<128xi1> loc(#loc51)
    %54 = tt.load %52, %53, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc52)
    %55 = arith.subf %54, %23 : tensor<128xf32> loc(#loc53)
    %56 = arith.addf %25, %cst_0 : f32 loc(#loc54)
    %57 = tt.extern_elementwise %56 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc55)
    %58 = arith.divf %cst, %57 : f32 loc(#loc56)
    %59 = tt.splat %58 : f32 -> tensor<128xf32> loc(#loc56)
    %60 = arith.mulf %55, %59 : tensor<128xf32> loc(#loc57)
    %61 = arith.mulf %60, %28 : tensor<128xf32> loc(#loc58)
    %62 = arith.addf %61, %31 : tensor<128xf32> loc(#loc59)
    %63 = arith.cmpf ogt, %cst_1, %62 : tensor<128xf32> loc(#loc69)
    %64 = arith.select %63, %cst_1, %62 : tensor<128xi1>, tensor<128xf32> loc(#loc70)
    %65 = arith.select %50, %64, %cst_1 : tensor<128xi1>, tensor<128xf32> loc(#loc61)
    %66 = arith.select %33, %49, %65 : tensor<128xi1>, tensor<128xf32> loc(#loc71)
    %67 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc64)
    %68 = tt.addptr %67, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc64)
    tt.store %68, %66, %5 : tensor<128x!tt.ptr<f32>> loc(#loc65)
    tt.return loc(#loc66)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":21:28)
#loc3 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":21:33)
#loc4 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":22:36)
#loc5 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":22:23)
#loc6 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":23:21)
#loc7 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":24:21)
#loc8 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":24:27)
#loc9 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":25:19)
#loc10 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":26:19)
#loc11 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":28:30)
#loc12 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":28:19)
#loc13 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":29:33)
#loc14 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":30:30)
#loc15 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":30:19)
#loc16 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":32:31)
#loc17 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":32:20)
#loc18 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":33:35)
#loc19 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":34:31)
#loc20 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":34:20)
#loc21 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":35:35)
#loc22 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":36:31)
#loc23 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":36:20)
#loc24 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":37:35)
#loc25 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":38:31)
#loc26 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":38:20)
#loc27 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":40:31)
#loc28 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":40:20)
#loc29 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":41:35)
#loc30 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":42:31)
#loc31 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":42:20)
#loc32 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":43:35)
#loc33 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":48:18)
#loc34 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":49:38)
#loc35 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":49:35)
#loc36 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":49:30)
#loc37 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":49:50)
#loc38 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":49:43)
#loc39 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":50:18)
#loc40 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":52:20)
#loc41 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":53:27)
#loc42 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":55:20)
#loc43 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":58:19)
#loc44 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":59:20)
#loc45 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":60:20)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc47 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":62:42)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc49 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":65:20)
#loc50 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":68:31)
#loc51 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":68:52)
#loc52 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":68:44)
#loc53 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":69:20)
#loc54 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":71:20)
#loc55 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":72:27)
#loc56 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":74:20)
#loc57 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":77:20)
#loc58 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":78:20)
#loc59 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":79:20)
#loc60 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":81:42)
#loc61 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":83:35)
#loc62 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":84:34)
#loc63 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":64:34)
#loc64 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":85:25)
#loc65 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":85:37)
#loc66 = loc("inductor_cache/ez/cez74nes2ielzbludvzv4ttttj5meewjop3lvqmdcmkczxdnrje5.py":85:4)
#loc67 = loc(callsite(#loc46 at #loc47))
#loc68 = loc(callsite(#loc48 at #loc47))
#loc69 = loc(callsite(#loc46 at #loc60))
#loc70 = loc(callsite(#loc48 at #loc60))
#loc71 = loc(fused[#loc62, #loc63])
