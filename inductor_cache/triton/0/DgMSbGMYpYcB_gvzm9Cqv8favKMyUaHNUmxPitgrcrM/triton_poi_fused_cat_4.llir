; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 5120, !dbg !14
  %16 = sdiv i32 %14, 16, !dbg !15
  %.frozen = freeze i32 %14, !dbg !16
  %17 = sdiv i32 %.frozen, 1280, !dbg !16
  %18 = mul i32 %17, 1280, !dbg !17
  %srem.decomposed = sub i32 %.frozen, %18, !dbg !17
  %19 = shl nsw i32 %17, 9, !dbg !18
  %20 = add nsw i32 %19, %srem.decomposed, !dbg !19
  %21 = sext i32 %20 to i64, !dbg !20
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !20
  %23 = shl nsw i32 %17, 8, !dbg !21
  %24 = insertelement <2 x i32> poison, i32 %14, i64 0, !dbg !22
  %25 = insertelement <2 x i32> %24, i32 %16, i64 1, !dbg !22
  %26 = srem <2 x i32> %25, <i32 16, i32 80>, !dbg !22
  %27 = extractelement <2 x i32> %26, i64 1, !dbg !23
  %28 = icmp slt i32 %27, 32, !dbg !24
  %29 = and i1 %15, %28, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %22, i1 %29, i32 0, i1 %29) #1, !dbg !26
  %31 = and i32 %27, -16, !dbg !27
  %32 = icmp eq i32 %31, 32, !dbg !27
  %33 = insertelement <2 x i32> <i32 poison, i32 -32>, i32 %23, i64 0, !dbg !28
  %34 = add nsw <2 x i32> %33, %26, !dbg !28
  %35 = extractelement <2 x i32> %34, i64 1, !dbg !29
  %36 = shl nsw i32 %35, 4, !dbg !29
  %37 = extractelement <2 x i32> %34, i64 0, !dbg !30
  %38 = add nsw i32 %37, %36, !dbg !31
  %39 = sext i32 %38 to i64, !dbg !32
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !32
  %41 = and i1 %15, %32, !dbg !33
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41) #1, !dbg !34
  %43 = bitcast i32 %42 to float, !dbg !34
  %44 = sext i32 %35 to i64, !dbg !35
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !35
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %41, i32 0, i1 %41) #1, !dbg !36
  %47 = bitcast i32 %46 to float, !dbg !36
  %48 = fadd float %43, %47, !dbg !37
  %49 = fcmp ogt float %48, 0.000000e+00, !dbg !38
  %50 = fmul float %48, 0x3FC99999A0000000, !dbg !39
  %51 = select i1 %49, float %48, float %50, !dbg !40
  %52 = icmp eq i32 %31, 48, !dbg !41
  %53 = add nsw i32 %27, -48, !dbg !42
  %54 = shl nsw i32 %53, 4, !dbg !43
  %55 = add nsw i32 %37, %54, !dbg !44
  %56 = sext i32 %55 to i64, !dbg !45
  %57 = getelementptr float, ptr addrspace(1) %3, i64 %56, !dbg !45
  %58 = and i1 %15, %52, !dbg !46
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %58, i32 0, i1 %58) #1, !dbg !47
  %60 = bitcast i32 %59 to float, !dbg !47
  %61 = sext i32 %53 to i64, !dbg !48
  %62 = getelementptr float, ptr addrspace(1) %4, i64 %61, !dbg !48
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %58, i32 0, i1 %58) #1, !dbg !49
  %64 = bitcast i32 %63 to float, !dbg !49
  %65 = fadd float %60, %64, !dbg !50
  %66 = fcmp ogt float %65, 0.000000e+00, !dbg !51
  %67 = fmul float %65, 0x3FC99999A0000000, !dbg !52
  %68 = select i1 %66, float %65, float %67, !dbg !53
  %69 = icmp sgt i32 %27, 63, !dbg !23
  %70 = add nsw i32 %27, -64, !dbg !54
  %71 = shl nsw i32 %70, 4, !dbg !55
  %72 = add nsw i32 %37, %71, !dbg !30
  %73 = sext i32 %72 to i64, !dbg !56
  %74 = getelementptr float, ptr addrspace(1) %5, i64 %73, !dbg !56
  %75 = and i1 %15, %69, !dbg !57
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %75, i32 0, i1 %75) #1, !dbg !58
  %77 = bitcast i32 %76 to float, !dbg !58
  %78 = sext i32 %70 to i64, !dbg !59
  %79 = getelementptr float, ptr addrspace(1) %6, i64 %78, !dbg !59
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %79, i1 %75, i32 0, i1 %75) #1, !dbg !60
  %81 = bitcast i32 %80 to float, !dbg !60
  %82 = fadd float %77, %81, !dbg !61
  %83 = fcmp ogt float %82, 0.000000e+00, !dbg !62
  %84 = fmul float %82, 0x3FC99999A0000000, !dbg !63
  %85 = select i1 %83, float %82, float %84, !dbg !64
  %86 = select i1 %69, float %85, float 0.000000e+00, !dbg !65
  %87 = select i1 %52, float %68, float %86, !dbg !66
  %88 = select i1 %32, float %51, float %87, !dbg !66
  %89 = sext i32 %14 to i64, !dbg !67
  %90 = getelementptr float, ptr addrspace(1) %7, i64 %89, !dbg !67
  %91 = bitcast float %88 to i32, !dbg !68
  %92 = select i1 %28, i32 %30, i32 %91, !dbg !69
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %92, ptr addrspace(1) %90, i1 %15) #1, !dbg !68
  ret void, !dbg !70
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ck6u6cmulmjg2u2a7qyuye5yqe3lzr47l7ndfxf57zqn5qf4xzm6.py", directory: "inductor_cache/k6")
!4 = !{ptr @triton_poi_fused_cat_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_4", linkageName: "triton_poi_fused_cat_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 35, scope: !7)
!18 = !DILocation(line: 33, column: 49, scope: !7)
!19 = !DILocation(line: 33, column: 45, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 38, column: 58, scope: !7)
!22 = !DILocation(line: 25, column: 19, scope: !7)
!23 = !DILocation(line: 62, column: 20, scope: !7)
!24 = !DILocation(line: 32, column: 18, scope: !7)
!25 = !DILocation(line: 33, column: 61, scope: !7)
!26 = !DILocation(line: 33, column: 54, scope: !7)
!27 = !DILocation(line: 37, column: 18, scope: !7)
!28 = !DILocation(line: 38, column: 36, scope: !7)
!29 = !DILocation(line: 38, column: 40, scope: !7)
!30 = !DILocation(line: 65, column: 54, scope: !7)
!31 = !DILocation(line: 38, column: 54, scope: !7)
!32 = !DILocation(line: 38, column: 31, scope: !7)
!33 = !DILocation(line: 38, column: 70, scope: !7)
!34 = !DILocation(line: 38, column: 63, scope: !7)
!35 = !DILocation(line: 39, column: 31, scope: !7)
!36 = !DILocation(line: 39, column: 44, scope: !7)
!37 = !DILocation(line: 40, column: 20, scope: !7)
!38 = !DILocation(line: 42, column: 20, scope: !7)
!39 = !DILocation(line: 44, column: 20, scope: !7)
!40 = !DILocation(line: 45, column: 35, scope: !7)
!41 = !DILocation(line: 51, column: 20, scope: !7)
!42 = !DILocation(line: 52, column: 48, scope: !7)
!43 = !DILocation(line: 52, column: 40, scope: !7)
!44 = !DILocation(line: 52, column: 54, scope: !7)
!45 = !DILocation(line: 52, column: 31, scope: !7)
!46 = !DILocation(line: 52, column: 71, scope: !7)
!47 = !DILocation(line: 52, column: 63, scope: !7)
!48 = !DILocation(line: 53, column: 31, scope: !7)
!49 = !DILocation(line: 53, column: 44, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 20, scope: !7)
!53 = !DILocation(line: 59, column: 35, scope: !7)
!54 = !DILocation(line: 65, column: 48, scope: !7)
!55 = !DILocation(line: 65, column: 40, scope: !7)
!56 = !DILocation(line: 65, column: 31, scope: !7)
!57 = !DILocation(line: 65, column: 71, scope: !7)
!58 = !DILocation(line: 65, column: 63, scope: !7)
!59 = !DILocation(line: 66, column: 31, scope: !7)
!60 = !DILocation(line: 66, column: 44, scope: !7)
!61 = !DILocation(line: 67, column: 20, scope: !7)
!62 = !DILocation(line: 69, column: 20, scope: !7)
!63 = !DILocation(line: 71, column: 20, scope: !7)
!64 = !DILocation(line: 72, column: 35, scope: !7)
!65 = !DILocation(line: 74, column: 35, scope: !7)
!66 = !DILocation(line: 0, scope: !7)
!67 = !DILocation(line: 78, column: 25, scope: !7)
!68 = !DILocation(line: 78, column: 37, scope: !7)
!69 = !DILocation(line: 77, column: 33, scope: !7)
!70 = !DILocation(line: 78, column: 4, scope: !7)
