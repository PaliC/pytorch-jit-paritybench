#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [1, 0]}>
#loc = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":19:0)
#loc1 = loc(unknown)
#loc172 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":184:28)
#loc259 = loc(callsite(#loc1 at #loc172))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_clamp_div_index_max_mul_neg_pow_reciprocal_rsub_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<16> : tensor<1x64xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<1x64xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x64xi64, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<2.500000e-01> : tensor<1x64xf32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<-5.000000e-01> : tensor<1x64xf32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x64xf32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<-0.333333343> : tensor<1x64xf32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<1x64xf32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<-3.000000e+00> : tensor<1x64xf32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<48> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<32> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<64> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<1x64xi32, #blocked1> loc(#loc1)
    %cst_12 = arith.constant dense<16> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<64> : tensor<1x64xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc2)
    %2 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc2)
    %3 = tt.expand_dims %1 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x64xi32, #blocked1> loc(#loc2)
    %4 = arith.remsi %2, %cst_12 : tensor<1x64xi32, #blocked> loc(#loc3)
    %5 = arith.remsi %3, %cst_11 : tensor<1x64xi32, #blocked1> loc(#loc3)
    %6 = arith.divsi %2, %cst_12 : tensor<1x64xi32, #blocked> loc(#loc4)
    %7 = arith.divsi %3, %cst_11 : tensor<1x64xi32, #blocked1> loc(#loc4)
    %8 = arith.muli %6, %cst_13 : tensor<1x64xi32, #blocked> loc(#loc5)
    %9 = arith.muli %7, %cst_10 : tensor<1x64xi32, #blocked1> loc(#loc5)
    %10 = arith.addi %5, %9 : tensor<1x64xi32, #blocked1> loc(#loc6)
    %11 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked1> loc(#loc7)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>, #blocked> loc(#loc7)
    %13 = tt.addptr %11, %10 : tensor<1x64x!tt.ptr<f32>, #blocked1>, tensor<1x64xi32, #blocked1> loc(#loc7)
    %14 = tt.load %13 : tensor<1x64x!tt.ptr<f32>, #blocked1> loc(#loc8)
    %15 = arith.addi %5, %cst_11 : tensor<1x64xi32, #blocked1> loc(#loc9)
    %16 = arith.addi %15, %9 : tensor<1x64xi32, #blocked1> loc(#loc10)
    %17 = tt.addptr %11, %16 : tensor<1x64x!tt.ptr<f32>, #blocked1>, tensor<1x64xi32, #blocked1> loc(#loc11)
    %18 = tt.load %17 : tensor<1x64x!tt.ptr<f32>, #blocked1> loc(#loc12)
    %19 = arith.addi %5, %cst_9 : tensor<1x64xi32, #blocked1> loc(#loc13)
    %20 = arith.addi %19, %9 : tensor<1x64xi32, #blocked1> loc(#loc14)
    %21 = tt.addptr %11, %20 : tensor<1x64x!tt.ptr<f32>, #blocked1>, tensor<1x64xi32, #blocked1> loc(#loc15)
    %22 = tt.load %21 : tensor<1x64x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %23 = arith.addi %5, %cst_8 : tensor<1x64xi32, #blocked1> loc(#loc17)
    %24 = arith.addi %23, %9 : tensor<1x64xi32, #blocked1> loc(#loc18)
    %25 = tt.addptr %11, %24 : tensor<1x64x!tt.ptr<f32>, #blocked1>, tensor<1x64xi32, #blocked1> loc(#loc19)
    %26 = tt.load %25 : tensor<1x64x!tt.ptr<f32>, #blocked1> loc(#loc20)
    %27 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<1x64x!tt.ptr<i64>, #blocked> loc(#loc21)
    %28 = tt.addptr %27, %6 : tensor<1x64x!tt.ptr<i64>, #blocked>, tensor<1x64xi32, #blocked> loc(#loc21)
    %29 = tt.load %28 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<i64>, #blocked> loc(#loc22)
    %30 = arith.cmpf ogt, %14, %18 : tensor<1x64xf32, #blocked1> loc(#loc178)
    %31 = arith.cmpf une, %14, %14 : tensor<1x64xf32, #blocked1> loc(#loc179)
    %32 = arith.ori %30, %31 : tensor<1x64xi1, #blocked1> loc(#loc180)
    %33 = arith.select %32, %14, %18 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc181)
    %34 = arith.cmpf ogt, %33, %22 : tensor<1x64xf32, #blocked1> loc(#loc182)
    %35 = arith.cmpf une, %33, %33 : tensor<1x64xf32, #blocked1> loc(#loc183)
    %36 = arith.ori %34, %35 : tensor<1x64xi1, #blocked1> loc(#loc184)
    %37 = arith.select %36, %33, %22 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc185)
    %38 = arith.cmpf ogt, %37, %26 : tensor<1x64xf32, #blocked1> loc(#loc186)
    %39 = arith.cmpf une, %37, %37 : tensor<1x64xf32, #blocked1> loc(#loc187)
    %40 = arith.ori %38, %39 : tensor<1x64xi1, #blocked1> loc(#loc188)
    %41 = arith.select %40, %37, %26 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc189)
    %42 = arith.subf %14, %41 : tensor<1x64xf32, #blocked1> loc(#loc30)
    %43 = arith.mulf %42, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc31)
    %44 = arith.addf %43, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc32)
    %45 = arith.cmpf ogt, %44, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc190)
    %46 = arith.cmpf une, %44, %44 : tensor<1x64xf32, #blocked1> loc(#loc191)
    %47 = arith.ori %45, %46 : tensor<1x64xi1, #blocked1> loc(#loc192)
    %48 = arith.select %47, %44, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc193)
    %49 = tt.extern_elementwise %48, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc34)
    %50 = arith.subf %18, %41 : tensor<1x64xf32, #blocked1> loc(#loc35)
    %51 = arith.mulf %50, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc36)
    %52 = arith.addf %51, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc37)
    %53 = arith.cmpf ogt, %52, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc194)
    %54 = arith.cmpf une, %52, %52 : tensor<1x64xf32, #blocked1> loc(#loc195)
    %55 = arith.ori %53, %54 : tensor<1x64xi1, #blocked1> loc(#loc196)
    %56 = arith.select %55, %52, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc197)
    %57 = tt.extern_elementwise %56, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc39)
    %58 = arith.addf %49, %57 : tensor<1x64xf32, #blocked1> loc(#loc40)
    %59 = arith.subf %22, %41 : tensor<1x64xf32, #blocked1> loc(#loc41)
    %60 = arith.mulf %59, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc42)
    %61 = arith.addf %60, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc43)
    %62 = arith.cmpf ogt, %61, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc198)
    %63 = arith.cmpf une, %61, %61 : tensor<1x64xf32, #blocked1> loc(#loc199)
    %64 = arith.ori %62, %63 : tensor<1x64xi1, #blocked1> loc(#loc200)
    %65 = arith.select %64, %61, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc201)
    %66 = tt.extern_elementwise %65, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc45)
    %67 = arith.addf %58, %66 : tensor<1x64xf32, #blocked1> loc(#loc46)
    %68 = arith.subf %26, %41 : tensor<1x64xf32, #blocked1> loc(#loc47)
    %69 = arith.mulf %68, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc48)
    %70 = arith.addf %69, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc49)
    %71 = arith.cmpf ogt, %70, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc202)
    %72 = arith.cmpf une, %70, %70 : tensor<1x64xf32, #blocked1> loc(#loc203)
    %73 = arith.ori %71, %72 : tensor<1x64xi1, #blocked1> loc(#loc204)
    %74 = arith.select %73, %70, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc205)
    %75 = tt.extern_elementwise %74, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc51)
    %76 = arith.addf %67, %75 : tensor<1x64xf32, #blocked1> loc(#loc52)
    %77 = arith.divf %cst_6, %76 : tensor<1x64xf32, #blocked1> loc(#loc53)
    %78 = arith.mulf %77, %77 : tensor<1x64xf32, #blocked1> loc(#loc54)
    %79 = arith.mulf %78, %77 : tensor<1x64xf32, #blocked1> loc(#loc55)
    %80 = arith.mulf %79, %42 : tensor<1x64xf32, #blocked1> loc(#loc56)
    %81 = arith.mulf %80, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc57)
    %82 = arith.addf %81, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc58)
    %83 = arith.cmpf ogt, %82, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc206)
    %84 = arith.cmpf une, %82, %82 : tensor<1x64xf32, #blocked1> loc(#loc207)
    %85 = arith.ori %83, %84 : tensor<1x64xi1, #blocked1> loc(#loc208)
    %86 = arith.select %85, %82, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc209)
    %87 = tt.extern_elementwise %86, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc60)
    %88 = arith.mulf %79, %50 : tensor<1x64xf32, #blocked1> loc(#loc61)
    %89 = arith.mulf %88, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc62)
    %90 = arith.addf %89, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc63)
    %91 = arith.cmpf ogt, %90, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc210)
    %92 = arith.cmpf une, %90, %90 : tensor<1x64xf32, #blocked1> loc(#loc211)
    %93 = arith.ori %91, %92 : tensor<1x64xi1, #blocked1> loc(#loc212)
    %94 = arith.select %93, %90, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc213)
    %95 = tt.extern_elementwise %94, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc65)
    %96 = arith.addf %87, %95 : tensor<1x64xf32, #blocked1> loc(#loc66)
    %97 = arith.mulf %79, %59 : tensor<1x64xf32, #blocked1> loc(#loc67)
    %98 = arith.mulf %97, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc68)
    %99 = arith.addf %98, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc69)
    %100 = arith.cmpf ogt, %99, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc214)
    %101 = arith.cmpf une, %99, %99 : tensor<1x64xf32, #blocked1> loc(#loc215)
    %102 = arith.ori %100, %101 : tensor<1x64xi1, #blocked1> loc(#loc216)
    %103 = arith.select %102, %99, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc217)
    %104 = tt.extern_elementwise %103, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc71)
    %105 = arith.addf %96, %104 : tensor<1x64xf32, #blocked1> loc(#loc72)
    %106 = arith.mulf %79, %68 : tensor<1x64xf32, #blocked1> loc(#loc73)
    %107 = arith.mulf %106, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc74)
    %108 = arith.addf %107, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc75)
    %109 = arith.cmpf ogt, %108, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc218)
    %110 = arith.cmpf une, %108, %108 : tensor<1x64xf32, #blocked1> loc(#loc219)
    %111 = arith.ori %109, %110 : tensor<1x64xi1, #blocked1> loc(#loc220)
    %112 = arith.select %111, %108, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc221)
    %113 = tt.extern_elementwise %112, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc77)
    %114 = arith.addf %105, %113 : tensor<1x64xf32, #blocked1> loc(#loc78)
    %115 = arith.divf %cst_6, %114 : tensor<1x64xf32, #blocked1> loc(#loc79)
    %116 = arith.mulf %115, %115 : tensor<1x64xf32, #blocked1> loc(#loc80)
    %117 = arith.mulf %116, %115 : tensor<1x64xf32, #blocked1> loc(#loc81)
    %118 = arith.mulf %117, %42 : tensor<1x64xf32, #blocked1> loc(#loc82)
    %119 = arith.mulf %118, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc83)
    %120 = arith.addf %119, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc84)
    %121 = arith.cmpf ogt, %120, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc222)
    %122 = arith.cmpf une, %120, %120 : tensor<1x64xf32, #blocked1> loc(#loc223)
    %123 = arith.ori %121, %122 : tensor<1x64xi1, #blocked1> loc(#loc224)
    %124 = arith.select %123, %120, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc225)
    %125 = tt.extern_elementwise %124, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc86)
    %126 = arith.mulf %117, %50 : tensor<1x64xf32, #blocked1> loc(#loc87)
    %127 = arith.mulf %126, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc88)
    %128 = arith.addf %127, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc89)
    %129 = arith.cmpf ogt, %128, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc226)
    %130 = arith.cmpf une, %128, %128 : tensor<1x64xf32, #blocked1> loc(#loc227)
    %131 = arith.ori %129, %130 : tensor<1x64xi1, #blocked1> loc(#loc228)
    %132 = arith.select %131, %128, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc229)
    %133 = tt.extern_elementwise %132, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc91)
    %134 = arith.addf %125, %133 : tensor<1x64xf32, #blocked1> loc(#loc92)
    %135 = arith.mulf %117, %59 : tensor<1x64xf32, #blocked1> loc(#loc93)
    %136 = arith.mulf %135, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc94)
    %137 = arith.addf %136, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc95)
    %138 = arith.cmpf ogt, %137, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc230)
    %139 = arith.cmpf une, %137, %137 : tensor<1x64xf32, #blocked1> loc(#loc231)
    %140 = arith.ori %138, %139 : tensor<1x64xi1, #blocked1> loc(#loc232)
    %141 = arith.select %140, %137, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc233)
    %142 = tt.extern_elementwise %141, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc97)
    %143 = arith.addf %134, %142 : tensor<1x64xf32, #blocked1> loc(#loc98)
    %144 = arith.mulf %117, %68 : tensor<1x64xf32, #blocked1> loc(#loc99)
    %145 = arith.mulf %144, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc100)
    %146 = arith.addf %145, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc101)
    %147 = arith.cmpf ogt, %146, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc234)
    %148 = arith.cmpf une, %146, %146 : tensor<1x64xf32, #blocked1> loc(#loc235)
    %149 = arith.ori %147, %148 : tensor<1x64xi1, #blocked1> loc(#loc236)
    %150 = arith.select %149, %146, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc237)
    %151 = tt.extern_elementwise %150, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc103)
    %152 = arith.addf %143, %151 : tensor<1x64xf32, #blocked1> loc(#loc104)
    %153 = arith.divf %cst_6, %152 : tensor<1x64xf32, #blocked1> loc(#loc105)
    %154 = arith.divf %cst_6, %153 : tensor<1x64xf32, #blocked1> loc(#loc106)
    %155 = arith.mulf %154, %154 : tensor<1x64xf32, #blocked1> loc(#loc107)
    %156 = arith.mulf %155, %154 : tensor<1x64xf32, #blocked1> loc(#loc108)
    %157 = arith.subf %156, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc109)
    %158 = arith.mulf %157, %cst_5 : tensor<1x64xf32, #blocked1> loc(#loc110)
    %159 = arith.subf %cst_4, %158 : tensor<1x64xf32, #blocked1> loc(#loc111)
    %160 = arith.addf %159, %41 : tensor<1x64xf32, #blocked1> loc(#loc112)
    %161 = arith.subf %14, %160 : tensor<1x64xf32, #blocked1> loc(#loc113)
    %162 = arith.mulf %161, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc114)
    %163 = arith.addf %162, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc115)
    %164 = arith.cmpf ogt, %163, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc238)
    %165 = arith.cmpf une, %163, %163 : tensor<1x64xf32, #blocked1> loc(#loc239)
    %166 = arith.ori %164, %165 : tensor<1x64xi1, #blocked1> loc(#loc240)
    %167 = arith.select %166, %163, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc241)
    %168 = tt.extern_elementwise %167, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc117)
    %169 = arith.divf %cst_6, %168 : tensor<1x64xf32, #blocked1> loc(#loc118)
    %170 = arith.mulf %169, %169 : tensor<1x64xf32, #blocked1> loc(#loc119)
    %171 = arith.subf %18, %160 : tensor<1x64xf32, #blocked1> loc(#loc120)
    %172 = arith.mulf %171, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc121)
    %173 = arith.addf %172, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc122)
    %174 = arith.cmpf ogt, %173, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc242)
    %175 = arith.cmpf une, %173, %173 : tensor<1x64xf32, #blocked1> loc(#loc243)
    %176 = arith.ori %174, %175 : tensor<1x64xi1, #blocked1> loc(#loc244)
    %177 = arith.select %176, %173, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc245)
    %178 = tt.extern_elementwise %177, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc124)
    %179 = arith.divf %cst_6, %178 : tensor<1x64xf32, #blocked1> loc(#loc125)
    %180 = arith.mulf %179, %179 : tensor<1x64xf32, #blocked1> loc(#loc126)
    %181 = arith.addf %170, %180 : tensor<1x64xf32, #blocked1> loc(#loc127)
    %182 = arith.subf %22, %160 : tensor<1x64xf32, #blocked1> loc(#loc128)
    %183 = arith.mulf %182, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc129)
    %184 = arith.addf %183, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc130)
    %185 = arith.cmpf ogt, %184, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc246)
    %186 = arith.cmpf une, %184, %184 : tensor<1x64xf32, #blocked1> loc(#loc247)
    %187 = arith.ori %185, %186 : tensor<1x64xi1, #blocked1> loc(#loc248)
    %188 = arith.select %187, %184, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc249)
    %189 = tt.extern_elementwise %188, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc132)
    %190 = arith.divf %cst_6, %189 : tensor<1x64xf32, #blocked1> loc(#loc133)
    %191 = arith.mulf %190, %190 : tensor<1x64xf32, #blocked1> loc(#loc134)
    %192 = arith.addf %181, %191 : tensor<1x64xf32, #blocked1> loc(#loc135)
    %193 = arith.subf %26, %160 : tensor<1x64xf32, #blocked1> loc(#loc136)
    %194 = arith.mulf %193, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc137)
    %195 = arith.addf %194, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc138)
    %196 = arith.cmpf ogt, %195, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc250)
    %197 = arith.cmpf une, %195, %195 : tensor<1x64xf32, #blocked1> loc(#loc251)
    %198 = arith.ori %196, %197 : tensor<1x64xi1, #blocked1> loc(#loc252)
    %199 = arith.select %198, %195, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc253)
    %200 = tt.extern_elementwise %199, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc140)
    %201 = arith.divf %cst_6, %200 : tensor<1x64xf32, #blocked1> loc(#loc141)
    %202 = arith.mulf %201, %201 : tensor<1x64xf32, #blocked1> loc(#loc142)
    %203 = arith.addf %192, %202 : tensor<1x64xf32, #blocked1> loc(#loc143)
    %204 = arith.addi %29, %cst_0 : tensor<1x64xi64, #blocked> loc(#loc144)
    %205 = arith.cmpi slt, %29, %cst_1 : tensor<1x64xi64, #blocked> loc(#loc145)
    %206 = arith.select %205, %204, %29 : tensor<1x64xi1, #blocked>, tensor<1x64xi64, #blocked> loc(#loc146)
    %207 = arith.cmpi sge, %206, %cst_1 : tensor<1x64xi64, #blocked> loc(#loc147)
    %208 = arith.cmpi slt, %206, %cst_0 : tensor<1x64xi64, #blocked> loc(#loc148)
    %209 = arith.andi %207, %208 : tensor<1x64xi1, #blocked> loc(#loc149)
    tt.assert %209, "index out of bounds: 0 <= tmp131 < 4" : tensor<1x64xi1, #blocked> loc(#loc150)
    %210 = arith.muli %206, %cst : tensor<1x64xi64, #blocked> loc(#loc151)
    %211 = arith.extsi %4 : tensor<1x64xi32, #blocked> to tensor<1x64xi64, #blocked> loc(#loc152)
    %212 = arith.addi %211, %210 : tensor<1x64xi64, #blocked> loc(#loc152)
    %213 = arith.extsi %8 : tensor<1x64xi32, #blocked> to tensor<1x64xi64, #blocked> loc(#loc153)
    %214 = arith.addi %212, %213 : tensor<1x64xi64, #blocked> loc(#loc153)
    %215 = tt.addptr %12, %214 : tensor<1x64x!tt.ptr<f32>, #blocked>, tensor<1x64xi64, #blocked> loc(#loc154)
    %216 = triton_gpu.convert_layout %215 : tensor<1x64x!tt.ptr<f32>, #blocked> -> tensor<1x64x!tt.ptr<f32>, #blocked1> loc(#loc155)
    %217 = tt.load %216 : tensor<1x64x!tt.ptr<f32>, #blocked1> loc(#loc155)
    %218 = arith.subf %217, %160 : tensor<1x64xf32, #blocked1> loc(#loc156)
    %219 = arith.mulf %218, %cst_7 : tensor<1x64xf32, #blocked1> loc(#loc157)
    %220 = arith.addf %219, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc158)
    %221 = arith.cmpf ogt, %220, %cst_4 : tensor<1x64xf32, #blocked1> loc(#loc254)
    %222 = arith.cmpf une, %220, %220 : tensor<1x64xf32, #blocked1> loc(#loc255)
    %223 = arith.ori %221, %222 : tensor<1x64xi1, #blocked1> loc(#loc256)
    %224 = arith.select %223, %220, %cst_4 : tensor<1x64xi1, #blocked1>, tensor<1x64xf32, #blocked1> loc(#loc257)
    %225 = tt.extern_elementwise %224, %cst_5 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<1x64xf32, #blocked1>, tensor<1x64xf32, #blocked1>) -> tensor<1x64xf32, #blocked1> loc(#loc160)
    %226 = arith.divf %cst_6, %225 : tensor<1x64xf32, #blocked1> loc(#loc161)
    %227 = arith.mulf %226, %226 : tensor<1x64xf32, #blocked1> loc(#loc162)
    %228 = arith.mulf %227, %226 : tensor<1x64xf32, #blocked1> loc(#loc163)
    %229 = arith.subf %228, %cst_6 : tensor<1x64xf32, #blocked1> loc(#loc164)
    %230 = arith.mulf %229, %cst_5 : tensor<1x64xf32, #blocked1> loc(#loc165)
    %231 = arith.subf %cst_4, %230 : tensor<1x64xf32, #blocked1> loc(#loc166)
    %232 = arith.subf %cst_6, %203 : tensor<1x64xf32, #blocked1> loc(#loc167)
    %233 = arith.mulf %232, %cst_3 : tensor<1x64xf32, #blocked1> loc(#loc168)
    %234 = arith.subf %231, %233 : tensor<1x64xf32, #blocked1> loc(#loc169)
    %235 = arith.mulf %234, %cst_2 : tensor<1x64xf32, #blocked1> loc(#loc170)
    %236 = "tt.reduce"(%235) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc172)), %arg5: f32 loc(callsite(#loc1 at #loc172))):
      %241 = arith.addf %arg4, %arg5 : f32 loc(#loc261)
      tt.reduce.return %241 : f32 loc(#loc258)
    }) : (tensor<1x64xf32, #blocked1>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc258)
    %237 = triton_gpu.convert_layout %236 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc174)
    %238 = tt.expand_dims %237 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc174)
    %239 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc175)
    %240 = tt.splat %239 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc176)
    tt.store %240, %238 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc176)
    tt.return loc(#loc177)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":26:34)
#loc3 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":29:19)
#loc4 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":30:19)
#loc5 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":32:38)
#loc6 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":32:35)
#loc7 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":32:30)
#loc8 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":32:43)
#loc9 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":33:35)
#loc10 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":33:40)
#loc11 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":33:30)
#loc12 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":33:48)
#loc13 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":34:35)
#loc14 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":34:40)
#loc15 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":34:30)
#loc16 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":34:48)
#loc17 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":35:35)
#loc18 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":35:40)
#loc19 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":35:30)
#loc20 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":35:48)
#loc21 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":36:32)
#loc22 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":36:37)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc24 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":37:40)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc28 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":38:40)
#loc29 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":39:40)
#loc30 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":40:18)
#loc31 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":42:18)
#loc32 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":44:19)
#loc33 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":46:42)
#loc34 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":48:33)
#loc35 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":49:19)
#loc36 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":50:20)
#loc37 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":51:20)
#loc38 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":52:42)
#loc39 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":53:33)
#loc40 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":54:20)
#loc41 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":55:19)
#loc42 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":56:20)
#loc43 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":57:20)
#loc44 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":58:42)
#loc45 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":59:33)
#loc46 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":60:20)
#loc47 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":61:19)
#loc48 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":62:20)
#loc49 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":63:20)
#loc50 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":64:42)
#loc51 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":65:33)
#loc52 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":66:20)
#loc53 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":68:20)
#loc54 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":69:20)
#loc55 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":70:20)
#loc56 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":71:20)
#loc57 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":72:20)
#loc58 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":73:20)
#loc59 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":74:42)
#loc60 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":75:33)
#loc61 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":76:20)
#loc62 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":77:20)
#loc63 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":78:20)
#loc64 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":79:42)
#loc65 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":80:33)
#loc66 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":81:20)
#loc67 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":82:20)
#loc68 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":83:20)
#loc69 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":84:20)
#loc70 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":85:42)
#loc71 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":86:33)
#loc72 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":87:20)
#loc73 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":88:20)
#loc74 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":89:20)
#loc75 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":90:20)
#loc76 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":91:42)
#loc77 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":92:33)
#loc78 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":93:20)
#loc79 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":94:20)
#loc80 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":95:20)
#loc81 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":96:20)
#loc82 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":97:20)
#loc83 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":98:20)
#loc84 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":99:20)
#loc85 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":100:42)
#loc86 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":101:33)
#loc87 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":102:20)
#loc88 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":103:20)
#loc89 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":104:20)
#loc90 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":105:42)
#loc91 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":106:33)
#loc92 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":107:20)
#loc93 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":108:20)
#loc94 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":109:20)
#loc95 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":110:20)
#loc96 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":111:42)
#loc97 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":112:33)
#loc98 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":113:20)
#loc99 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":114:20)
#loc100 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":115:20)
#loc101 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":116:20)
#loc102 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":117:42)
#loc103 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":118:33)
#loc104 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":119:20)
#loc105 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":120:20)
#loc106 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":122:20)
#loc107 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":123:20)
#loc108 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":124:20)
#loc109 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":125:20)
#loc110 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":126:20)
#loc111 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":127:13)
#loc112 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":128:20)
#loc113 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":129:19)
#loc114 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":130:20)
#loc115 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":131:20)
#loc116 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":132:42)
#loc117 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":133:34)
#loc118 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":134:21)
#loc119 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":135:22)
#loc120 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":136:20)
#loc121 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":137:22)
#loc122 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":138:22)
#loc123 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":139:44)
#loc124 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":140:35)
#loc125 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":141:21)
#loc126 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":142:22)
#loc127 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":143:22)
#loc128 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":144:20)
#loc129 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":145:22)
#loc130 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":146:22)
#loc131 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":147:44)
#loc132 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":148:35)
#loc133 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":149:21)
#loc134 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":150:22)
#loc135 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":151:22)
#loc136 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":152:20)
#loc137 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":153:22)
#loc138 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":154:22)
#loc139 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":155:44)
#loc140 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":156:35)
#loc141 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":157:21)
#loc142 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":158:22)
#loc143 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":159:22)
#loc144 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":161:22)
#loc145 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":162:22)
#loc146 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":163:38)
#loc147 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":164:27)
#loc148 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":164:47)
#loc149 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":164:38)
#loc150 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":164:51)
#loc151 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":165:40)
#loc152 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":165:37)
#loc153 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":165:49)
#loc154 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":165:32)
#loc155 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":165:57)
#loc156 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":166:22)
#loc157 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":167:22)
#loc158 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":168:22)
#loc159 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":169:44)
#loc160 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":170:35)
#loc161 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":171:21)
#loc162 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":172:22)
#loc163 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":173:22)
#loc164 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":174:22)
#loc165 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":175:22)
#loc166 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":176:14)
#loc167 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":177:21)
#loc168 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":179:22)
#loc169 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":180:22)
#loc170 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":182:22)
#loc171 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc173 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc174 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":184:31)
#loc175 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":185:25)
#loc176 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":185:69)
#loc177 = loc("inductor_cache/i6/ci6gywcsmm6tyosu2rl27eourz5lrorkt66in5fgzrs7w2lykaw7.py":185:4)
#loc178 = loc(callsite(#loc23 at #loc24))
#loc179 = loc(callsite(#loc25 at #loc24))
#loc180 = loc(callsite(#loc26 at #loc24))
#loc181 = loc(callsite(#loc27 at #loc24))
#loc182 = loc(callsite(#loc23 at #loc28))
#loc183 = loc(callsite(#loc25 at #loc28))
#loc184 = loc(callsite(#loc26 at #loc28))
#loc185 = loc(callsite(#loc27 at #loc28))
#loc186 = loc(callsite(#loc23 at #loc29))
#loc187 = loc(callsite(#loc25 at #loc29))
#loc188 = loc(callsite(#loc26 at #loc29))
#loc189 = loc(callsite(#loc27 at #loc29))
#loc190 = loc(callsite(#loc23 at #loc33))
#loc191 = loc(callsite(#loc25 at #loc33))
#loc192 = loc(callsite(#loc26 at #loc33))
#loc193 = loc(callsite(#loc27 at #loc33))
#loc194 = loc(callsite(#loc23 at #loc38))
#loc195 = loc(callsite(#loc25 at #loc38))
#loc196 = loc(callsite(#loc26 at #loc38))
#loc197 = loc(callsite(#loc27 at #loc38))
#loc198 = loc(callsite(#loc23 at #loc44))
#loc199 = loc(callsite(#loc25 at #loc44))
#loc200 = loc(callsite(#loc26 at #loc44))
#loc201 = loc(callsite(#loc27 at #loc44))
#loc202 = loc(callsite(#loc23 at #loc50))
#loc203 = loc(callsite(#loc25 at #loc50))
#loc204 = loc(callsite(#loc26 at #loc50))
#loc205 = loc(callsite(#loc27 at #loc50))
#loc206 = loc(callsite(#loc23 at #loc59))
#loc207 = loc(callsite(#loc25 at #loc59))
#loc208 = loc(callsite(#loc26 at #loc59))
#loc209 = loc(callsite(#loc27 at #loc59))
#loc210 = loc(callsite(#loc23 at #loc64))
#loc211 = loc(callsite(#loc25 at #loc64))
#loc212 = loc(callsite(#loc26 at #loc64))
#loc213 = loc(callsite(#loc27 at #loc64))
#loc214 = loc(callsite(#loc23 at #loc70))
#loc215 = loc(callsite(#loc25 at #loc70))
#loc216 = loc(callsite(#loc26 at #loc70))
#loc217 = loc(callsite(#loc27 at #loc70))
#loc218 = loc(callsite(#loc23 at #loc76))
#loc219 = loc(callsite(#loc25 at #loc76))
#loc220 = loc(callsite(#loc26 at #loc76))
#loc221 = loc(callsite(#loc27 at #loc76))
#loc222 = loc(callsite(#loc23 at #loc85))
#loc223 = loc(callsite(#loc25 at #loc85))
#loc224 = loc(callsite(#loc26 at #loc85))
#loc225 = loc(callsite(#loc27 at #loc85))
#loc226 = loc(callsite(#loc23 at #loc90))
#loc227 = loc(callsite(#loc25 at #loc90))
#loc228 = loc(callsite(#loc26 at #loc90))
#loc229 = loc(callsite(#loc27 at #loc90))
#loc230 = loc(callsite(#loc23 at #loc96))
#loc231 = loc(callsite(#loc25 at #loc96))
#loc232 = loc(callsite(#loc26 at #loc96))
#loc233 = loc(callsite(#loc27 at #loc96))
#loc234 = loc(callsite(#loc23 at #loc102))
#loc235 = loc(callsite(#loc25 at #loc102))
#loc236 = loc(callsite(#loc26 at #loc102))
#loc237 = loc(callsite(#loc27 at #loc102))
#loc238 = loc(callsite(#loc23 at #loc116))
#loc239 = loc(callsite(#loc25 at #loc116))
#loc240 = loc(callsite(#loc26 at #loc116))
#loc241 = loc(callsite(#loc27 at #loc116))
#loc242 = loc(callsite(#loc23 at #loc123))
#loc243 = loc(callsite(#loc25 at #loc123))
#loc244 = loc(callsite(#loc26 at #loc123))
#loc245 = loc(callsite(#loc27 at #loc123))
#loc246 = loc(callsite(#loc23 at #loc131))
#loc247 = loc(callsite(#loc25 at #loc131))
#loc248 = loc(callsite(#loc26 at #loc131))
#loc249 = loc(callsite(#loc27 at #loc131))
#loc250 = loc(callsite(#loc23 at #loc139))
#loc251 = loc(callsite(#loc25 at #loc139))
#loc252 = loc(callsite(#loc26 at #loc139))
#loc253 = loc(callsite(#loc27 at #loc139))
#loc254 = loc(callsite(#loc23 at #loc159))
#loc255 = loc(callsite(#loc25 at #loc159))
#loc256 = loc(callsite(#loc26 at #loc159))
#loc257 = loc(callsite(#loc27 at #loc159))
#loc258 = loc(callsite(#loc171 at #loc172))
#loc260 = loc(callsite(#loc173 at #loc171))
#loc261 = loc(callsite(#loc260 at #loc172))
