; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %9 = shl i32 %8, 8, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 254, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %.frozen = freeze i32 %13, !dbg !14
  %14 = sdiv i32 %.frozen, 1024, !dbg !14
  %15 = srem i32 %14, 16, !dbg !15
  %16 = mul i32 %14, 1024, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %.frozen3 = freeze i32 %13, !dbg !17
  %17 = sdiv i32 %.frozen3, 16384, !dbg !17
  %18 = icmp slt i32 %15, 8, !dbg !18
  %19 = mul i32 %17, 16384, !dbg !19
  %srem.decomposed = sub i32 %.frozen3, %19, !dbg !19
  %20 = shl nsw i32 %17, 13, !dbg !20
  %21 = add nsw i32 %20, %srem.decomposed, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %23, i1 %18, i32 0, i1 %18, i32 0, i1 %18) #1, !dbg !23
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !23
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !23
  %27 = sext i32 %15 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %18, i32 0, i1 %18) #1, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %18, i32 0, i1 %18) #1, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !26
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %31, i1 %18, i32 0, i1 %18, i32 0, i1 %18) #1, !dbg !27
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !27
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !27
  %35 = getelementptr float, ptr addrspace(1) %3, i64 %27, !dbg !28
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %18, i32 0, i1 %18) #1, !dbg !29
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %18, i32 0, i1 %18) #1, !dbg !29
  %38 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !23
  %39 = insertelement <2 x i32> %38, i32 %33, i64 1, !dbg !23
  %40 = bitcast <2 x i32> %39 to <2 x float>, !dbg !23
  %41 = fcmp ogt <2 x float> %40, zeroinitializer, !dbg !30
  %42 = insertelement <2 x i32> poison, i32 %29, i64 0, !dbg !25
  %43 = insertelement <2 x i32> %42, i32 %36, i64 1, !dbg !25
  %44 = bitcast <2 x i32> %43 to <2 x float>, !dbg !25
  %45 = fmul <2 x float> %44, %40, !dbg !31
  %46 = select <2 x i1> %41, <2 x float> %40, <2 x float> %45, !dbg !32
  %47 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !23
  %48 = insertelement <2 x i32> %47, i32 %34, i64 1, !dbg !23
  %49 = bitcast <2 x i32> %48 to <2 x float>, !dbg !23
  %50 = fcmp ogt <2 x float> %49, zeroinitializer, !dbg !30
  %51 = insertelement <2 x i32> poison, i32 %30, i64 0, !dbg !25
  %52 = insertelement <2 x i32> %51, i32 %37, i64 1, !dbg !25
  %53 = bitcast <2 x i32> %52 to <2 x float>, !dbg !25
  %54 = fmul <2 x float> %49, %53, !dbg !31
  %55 = select <2 x i1> %50, <2 x float> %49, <2 x float> %54, !dbg !32
  %shift = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !33
  %56 = fadd <2 x float> %46, %shift, !dbg !33
  %shift1 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !33
  %57 = fadd <2 x float> %55, %shift1, !dbg !33
  %58 = icmp sgt i32 %15, 7, !dbg !34
  %59 = shl nsw i32 %15, 10, !dbg !35
  %60 = add nsw i32 %.decomposed, -8192, !dbg !35
  %61 = add nsw i32 %60, %20, !dbg !36
  %62 = add nsw i32 %61, %59, !dbg !37
  %63 = sext i32 %62 to i64, !dbg !38
  %64 = getelementptr float, ptr addrspace(1) %4, i64 %63, !dbg !38
  %65 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %64, i1 %58, i32 0, i1 %58, i32 0, i1 %58) #1, !dbg !39
  %66 = extractvalue { i32, i32 } %65, 0, !dbg !39
  %67 = extractvalue { i32, i32 } %65, 1, !dbg !39
  %68 = sext i32 %13 to i64, !dbg !40
  %69 = getelementptr float, ptr addrspace(1) %5, i64 %68, !dbg !40
  %bc = bitcast <2 x float> %56 to <2 x i32>, !dbg !41
  %70 = extractelement <2 x i32> %bc, i64 0, !dbg !41
  %71 = select i1 %18, i32 %70, i32 %66, !dbg !42
  %bc2 = bitcast <2 x float> %57 to <2 x i32>, !dbg !41
  %72 = extractelement <2 x i32> %bc2, i64 0, !dbg !41
  %73 = select i1 %18, i32 %72, i32 %67, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %71, i32 %73, ptr addrspace(1) %69, i1 true) #1, !dbg !41
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ck77liuz4s3gbesf2d67naqvzqumcjm7cu4kmwfael5n3qh32xqa.py", directory: "inductor_cache/k7")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 29, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 33, column: 52, scope: !7)
!21 = !DILocation(line: 33, column: 47, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 57, scope: !7)
!24 = !DILocation(line: 36, column: 30, scope: !7)
!25 = !DILocation(line: 36, column: 35, scope: !7)
!26 = !DILocation(line: 39, column: 31, scope: !7)
!27 = !DILocation(line: 39, column: 58, scope: !7)
!28 = !DILocation(line: 41, column: 31, scope: !7)
!29 = !DILocation(line: 41, column: 36, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 38, column: 33, scope: !7)
!33 = !DILocation(line: 44, column: 20, scope: !7)
!34 = !DILocation(line: 47, column: 20, scope: !7)
!35 = !DILocation(line: 50, column: 42, scope: !7)
!36 = !DILocation(line: 50, column: 36, scope: !7)
!37 = !DILocation(line: 50, column: 55, scope: !7)
!38 = !DILocation(line: 50, column: 31, scope: !7)
!39 = !DILocation(line: 50, column: 65, scope: !7)
!40 = !DILocation(line: 52, column: 25, scope: !7)
!41 = !DILocation(line: 52, column: 37, scope: !7)
!42 = !DILocation(line: 0, scope: !7)
!43 = !DILocation(line: 52, column: 4, scope: !7)
