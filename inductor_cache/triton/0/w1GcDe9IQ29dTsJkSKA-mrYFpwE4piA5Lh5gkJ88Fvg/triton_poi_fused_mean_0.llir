; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mean_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 16, !dbg !12
  %8 = and i32 %6, 15, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 16, !dbg !14
  %11 = shl i32 %9, 4, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %13, i1 %10) #1, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = or disjoint i32 %11, 1, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %10) #1, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = or disjoint i32 %11, 2, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %10) #1, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = or disjoint i32 %11, 3, !dbg !24
  %27 = sext i32 %26 to i64, !dbg !25
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %10) #1, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = or disjoint i32 %11, 4, !dbg !27
  %32 = sext i32 %31 to i64, !dbg !28
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !28
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %10) #1, !dbg !29
  %35 = bitcast i32 %34 to float, !dbg !29
  %36 = or disjoint i32 %11, 5, !dbg !30
  %37 = sext i32 %36 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !31
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #1, !dbg !32
  %40 = bitcast i32 %39 to float, !dbg !32
  %41 = or disjoint i32 %11, 6, !dbg !33
  %42 = sext i32 %41 to i64, !dbg !34
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !34
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 %10) #1, !dbg !35
  %45 = bitcast i32 %44 to float, !dbg !35
  %46 = or disjoint i32 %11, 7, !dbg !36
  %47 = sext i32 %46 to i64, !dbg !37
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !37
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 %10) #1, !dbg !38
  %50 = bitcast i32 %49 to float, !dbg !38
  %51 = or disjoint i32 %11, 8, !dbg !39
  %52 = sext i32 %51 to i64, !dbg !40
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !40
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %10) #1, !dbg !41
  %55 = bitcast i32 %54 to float, !dbg !41
  %56 = or disjoint i32 %11, 9, !dbg !42
  %57 = sext i32 %56 to i64, !dbg !43
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !43
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %10) #1, !dbg !44
  %60 = bitcast i32 %59 to float, !dbg !44
  %61 = or disjoint i32 %11, 10, !dbg !45
  %62 = sext i32 %61 to i64, !dbg !46
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !46
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %10) #1, !dbg !47
  %65 = bitcast i32 %64 to float, !dbg !47
  %66 = or disjoint i32 %11, 11, !dbg !48
  %67 = sext i32 %66 to i64, !dbg !49
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !49
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %10) #1, !dbg !50
  %70 = bitcast i32 %69 to float, !dbg !50
  %71 = or disjoint i32 %11, 12, !dbg !51
  %72 = sext i32 %71 to i64, !dbg !52
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !52
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %10) #1, !dbg !53
  %75 = bitcast i32 %74 to float, !dbg !53
  %76 = or disjoint i32 %11, 13, !dbg !54
  %77 = sext i32 %76 to i64, !dbg !55
  %78 = getelementptr float, ptr addrspace(1) %0, i64 %77, !dbg !55
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %78, i1 %10) #1, !dbg !56
  %80 = bitcast i32 %79 to float, !dbg !56
  %81 = or disjoint i32 %11, 14, !dbg !57
  %82 = sext i32 %81 to i64, !dbg !58
  %83 = getelementptr float, ptr addrspace(1) %0, i64 %82, !dbg !58
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %83, i1 %10) #1, !dbg !59
  %85 = bitcast i32 %84 to float, !dbg !59
  %86 = or disjoint i32 %11, 15, !dbg !60
  %87 = sext i32 %86 to i64, !dbg !61
  %88 = getelementptr float, ptr addrspace(1) %0, i64 %87, !dbg !61
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %88, i1 %10) #1, !dbg !62
  %90 = bitcast i32 %89 to float, !dbg !62
  %91 = fadd float %15, %20, !dbg !63
  %92 = fadd float %91, %25, !dbg !64
  %93 = fadd float %92, %30, !dbg !65
  %94 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %93, float 4.000000e+00) #1, !dbg !66
  %95 = fadd float %35, %40, !dbg !67
  %96 = fadd float %95, %45, !dbg !68
  %97 = fadd float %96, %50, !dbg !69
  %98 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %97, float 4.000000e+00) #1, !dbg !70
  %99 = fadd float %94, %98, !dbg !71
  %100 = fadd float %55, %60, !dbg !72
  %101 = fadd float %100, %65, !dbg !73
  %102 = fadd float %101, %70, !dbg !74
  %103 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %102, float 4.000000e+00) #1, !dbg !75
  %104 = fadd float %99, %103, !dbg !76
  %105 = fadd float %75, %80, !dbg !77
  %106 = fadd float %105, %85, !dbg !78
  %107 = fadd float %106, %90, !dbg !79
  %108 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %107, float 4.000000e+00) #1, !dbg !80
  %109 = fadd float %104, %108, !dbg !81
  %110 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %109, float 4.000000e+00) #1, !dbg !82
  %111 = sext i32 %9 to i64, !dbg !83
  %112 = getelementptr float, ptr addrspace(1) %1, i64 %111, !dbg !83
  %113 = icmp eq i32 %7, 0, !dbg !84
  %114 = bitcast float %110 to i32, !dbg !84
  %115 = and i1 %113, %10, !dbg !84
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %114, ptr addrspace(1) %112, i1 %115) #1, !dbg !84
  ret void, !dbg !85
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cg7dlh23rtb4aevthswzwc4tgxn5rgvfdujqhcwas2obetr4v5id.py", directory: "inductor_cache/g7")
!4 = !{ptr @triton_poi_fused_mean_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mean_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mean_0", linkageName: "triton_poi_fused_mean_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 38, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 42, scope: !7)
!21 = !DILocation(line: 27, column: 34, scope: !7)
!22 = !DILocation(line: 27, column: 30, scope: !7)
!23 = !DILocation(line: 27, column: 42, scope: !7)
!24 = !DILocation(line: 28, column: 34, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 42, scope: !7)
!27 = !DILocation(line: 29, column: 34, scope: !7)
!28 = !DILocation(line: 29, column: 30, scope: !7)
!29 = !DILocation(line: 29, column: 42, scope: !7)
!30 = !DILocation(line: 30, column: 35, scope: !7)
!31 = !DILocation(line: 30, column: 31, scope: !7)
!32 = !DILocation(line: 30, column: 43, scope: !7)
!33 = !DILocation(line: 31, column: 35, scope: !7)
!34 = !DILocation(line: 31, column: 31, scope: !7)
!35 = !DILocation(line: 31, column: 43, scope: !7)
!36 = !DILocation(line: 32, column: 35, scope: !7)
!37 = !DILocation(line: 32, column: 31, scope: !7)
!38 = !DILocation(line: 32, column: 43, scope: !7)
!39 = !DILocation(line: 33, column: 35, scope: !7)
!40 = !DILocation(line: 33, column: 31, scope: !7)
!41 = !DILocation(line: 33, column: 43, scope: !7)
!42 = !DILocation(line: 34, column: 35, scope: !7)
!43 = !DILocation(line: 34, column: 31, scope: !7)
!44 = !DILocation(line: 34, column: 43, scope: !7)
!45 = !DILocation(line: 35, column: 36, scope: !7)
!46 = !DILocation(line: 35, column: 31, scope: !7)
!47 = !DILocation(line: 35, column: 44, scope: !7)
!48 = !DILocation(line: 36, column: 36, scope: !7)
!49 = !DILocation(line: 36, column: 31, scope: !7)
!50 = !DILocation(line: 36, column: 44, scope: !7)
!51 = !DILocation(line: 37, column: 36, scope: !7)
!52 = !DILocation(line: 37, column: 31, scope: !7)
!53 = !DILocation(line: 37, column: 44, scope: !7)
!54 = !DILocation(line: 38, column: 36, scope: !7)
!55 = !DILocation(line: 38, column: 31, scope: !7)
!56 = !DILocation(line: 38, column: 44, scope: !7)
!57 = !DILocation(line: 39, column: 36, scope: !7)
!58 = !DILocation(line: 39, column: 31, scope: !7)
!59 = !DILocation(line: 39, column: 44, scope: !7)
!60 = !DILocation(line: 40, column: 36, scope: !7)
!61 = !DILocation(line: 40, column: 31, scope: !7)
!62 = !DILocation(line: 40, column: 44, scope: !7)
!63 = !DILocation(line: 41, column: 18, scope: !7)
!64 = !DILocation(line: 42, column: 18, scope: !7)
!65 = !DILocation(line: 43, column: 18, scope: !7)
!66 = !DILocation(line: 45, column: 18, scope: !7)
!67 = !DILocation(line: 46, column: 19, scope: !7)
!68 = !DILocation(line: 47, column: 20, scope: !7)
!69 = !DILocation(line: 48, column: 20, scope: !7)
!70 = !DILocation(line: 49, column: 20, scope: !7)
!71 = !DILocation(line: 50, column: 19, scope: !7)
!72 = !DILocation(line: 51, column: 20, scope: !7)
!73 = !DILocation(line: 52, column: 20, scope: !7)
!74 = !DILocation(line: 53, column: 20, scope: !7)
!75 = !DILocation(line: 54, column: 20, scope: !7)
!76 = !DILocation(line: 55, column: 20, scope: !7)
!77 = !DILocation(line: 56, column: 20, scope: !7)
!78 = !DILocation(line: 57, column: 20, scope: !7)
!79 = !DILocation(line: 58, column: 20, scope: !7)
!80 = !DILocation(line: 59, column: 20, scope: !7)
!81 = !DILocation(line: 60, column: 20, scope: !7)
!82 = !DILocation(line: 61, column: 20, scope: !7)
!83 = !DILocation(line: 62, column: 25, scope: !7)
!84 = !DILocation(line: 62, column: 37, scope: !7)
!85 = !DILocation(line: 62, column: 4, scope: !7)
