; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_stack_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = icmp slt i32 %9, 1024, !dbg !14
  %12 = srem i32 %10, 2, !dbg !15
  %13 = sdiv i32 %9, 64, !dbg !16
  %14 = ashr exact i32 %9, 1, !dbg !17
  %15 = srem i32 %14, 32, !dbg !18
  %16 = icmp slt i32 %12, 1, !dbg !19
  %17 = sext i32 %13 to i64, !dbg !20
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !20
  %19 = and i1 %11, %16, !dbg !21
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %11, i32 0, i1 %11) #5, !dbg !22
  %21 = bitcast i32 %20 to float, !dbg !22
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %19, i32 0, i1 %19) #5, !dbg !22
  %23 = bitcast i32 %22 to float, !dbg !22
  %24 = shl nsw i32 %15, 1, !dbg !23
  %25 = sitofp i32 %24 to float, !dbg !24
  %26 = fmul float %25, 5.000000e-01, !dbg !25
  %27 = tail call float @llvm.nvvm.trunc.f(float %26), !dbg !26
  %28 = fmul float %27, 2.000000e+00, !dbg !27
  %29 = fmul float %28, 1.562500e-02, !dbg !28
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i164 = icmp eq i32 %31, 0, !dbg !29
  %32 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.000000e+04) #5, !dbg !29
  %33 = tail call float @llvm.nvvm.fabs.f(float 1.000000e+04) #5, !dbg !29
  %.09.i165 = select i1 %.not.i164, float %33, float %32, !dbg !29
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not12.i = icmp eq i32 %34, 0, !dbg !29
  %35 = fcmp olt float %.09.i165, 0x3810000000000000, !dbg !29
  %36 = fmul float %.09.i165, 0x4170000000000000, !dbg !29
  %37 = select i1 %.not12.i, i1 %35, i1 false, !dbg !29
  %.116.i = select i1 %37, float %36, float %.09.i165, !dbg !29
  %expo.i.i.1.i = select i1 %37, float -1.510000e+02, float -1.270000e+02, !dbg !29
  %38 = bitcast float %.116.i to i32, !dbg !29
  %39 = and i32 %38, 8388607, !dbg !29
  %40 = or disjoint i32 %39, 1065353216, !dbg !29
  %41 = bitcast i32 %40 to float, !dbg !29
  %42 = lshr i32 %38, 23, !dbg !29
  %43 = uitofp nneg i32 %42 to float, !dbg !29
  %44 = fadd float %expo.i.i.1.i, %43, !dbg !29
  %45 = fcmp ogt float %41, 0x3FF6A09E60000000, !dbg !29
  %46 = fmul float %41, 5.000000e-01, !dbg !29
  %47 = fadd float %44, 1.000000e+00, !dbg !29
  %expo.i.i.2.i = select i1 %45, float %47, float %44, !dbg !29
  %m.i.i.0.i = select i1 %45, float %46, float %41, !dbg !29
  %48 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !29
  %49 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !29
  %50 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %49) #6, !dbg !29, !srcloc !30
  %51 = fmul float %48, 2.000000e+00, !dbg !29
  %52 = fmul float %50, %51, !dbg !29
  %53 = fmul float %52, %52, !dbg !29
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not13.i = icmp eq i32 %54, 0, !dbg !29
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %53, float 0x3F8995EC60000000) #5, !dbg !29
  %56 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %53, float 0x3F8995EC60000000) #5, !dbg !29
  %.020.i = select i1 %.not13.i, float %56, float %55, !dbg !29
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not14.i = icmp eq i32 %57, 0, !dbg !29
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %53, float 0x3FB55557A0000000) #5, !dbg !29
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %53, float 0x3FB55557A0000000) #5, !dbg !29
  %.021.i = select i1 %.not14.i, float %59, float %58, !dbg !29
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not15.i166 = icmp eq i32 %60, 0, !dbg !29
  %61 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %53) #5, !dbg !29
  %62 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %53) #5, !dbg !29
  %.022.i = select i1 %.not15.i166, float %62, float %61, !dbg !29
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not16.i167 = icmp eq i32 %63, 0, !dbg !29
  %64 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %52) #5, !dbg !29
  %65 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %52) #5, !dbg !29
  %.024.i = select i1 %.not16.i167, float %65, float %64, !dbg !29
  %66 = fsub float %48, %52, !dbg !29
  %67 = fmul float %66, 2.000000e+00, !dbg !29
  %68 = fneg float %52, !dbg !29
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not17.i168 = icmp eq i32 %69, 0, !dbg !29
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %68, float %48, float %67) #5, !dbg !29
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %68, float %48, float %67) #5, !dbg !29
  %.025.i = select i1 %.not17.i168, float %71, float %70, !dbg !29
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not18.i169 = icmp eq i32 %72, 0, !dbg !29
  %73 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %50, float %.025.i) #5, !dbg !29
  %74 = tail call float @llvm.nvvm.mul.rn.f(float %50, float %.025.i) #5, !dbg !29
  %.026.i = select i1 %.not18.i169, float %74, float %73, !dbg !29
  %75 = fadd float %52, %.024.i, !dbg !29
  %76 = fsub float %52, %75, !dbg !29
  %77 = fadd float %.024.i, %76, !dbg !29
  %78 = fadd float %.026.i, %77, !dbg !29
  %79 = fadd float %75, %78, !dbg !29
  %80 = fsub float %75, %79, !dbg !29
  %81 = fadd float %78, %80, !dbg !29
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not19.i170 = icmp eq i32 %82, 0, !dbg !29
  %83 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !29
  %84 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !29
  %.019.i = select i1 %.not19.i170, float %84, float %83, !dbg !29
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not20.i171 = icmp eq i32 %85, 0, !dbg !29
  %86 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !29
  %87 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !29
  %.018.i = select i1 %.not20.i171, float %87, float %86, !dbg !29
  %88 = fadd float %.019.i, %79, !dbg !29
  %89 = fsub float %.019.i, %88, !dbg !29
  %90 = fadd float %79, %89, !dbg !29
  %91 = fadd float %81, %90, !dbg !29
  %92 = fadd float %.018.i, %91, !dbg !29
  %93 = fadd float %88, %92, !dbg !29
  %94 = fsub float %88, %93, !dbg !29
  %95 = fadd float %92, %94, !dbg !29
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not21.i = icmp eq i32 %96, 0, !dbg !29
  %97 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #5, !dbg !29
  %98 = tail call float @llvm.nvvm.fabs.f(float %29) #5, !dbg !29
  %.027.i = select i1 %.not21.i, float %98, float %97, !dbg !29
  %99 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !29
  %100 = fmul float %29, 0x3F20000000000000, !dbg !29
  %.013.i172 = select i1 %99, float %100, float %29, !dbg !29
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not22.i = icmp eq i32 %101, 0, !dbg !29
  %102 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i172, float %93) #5, !dbg !29
  %103 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i172, float %93) #5, !dbg !29
  %.028.i = select i1 %.not22.i, float %103, float %102, !dbg !29
  %104 = fneg float %.028.i, !dbg !29
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not23.i = icmp eq i32 %105, 0, !dbg !29
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i172, float %93, float %104) #5, !dbg !29
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i172, float %93, float %104) #5, !dbg !29
  %.029.i = select i1 %.not23.i, float %107, float %106, !dbg !29
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not24.i = icmp eq i32 %108, 0, !dbg !29
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i172, float %95, float %.029.i) #5, !dbg !29
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i172, float %95, float %.029.i) #5, !dbg !29
  %.030.i = select i1 %.not24.i, float %110, float %109, !dbg !29
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not25.i = icmp eq i32 %111, 0, !dbg !29
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %93, float %.030.i) #5, !dbg !29
  %113 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %93, float %.030.i) #5, !dbg !29
  %.031.i = select i1 %.not25.i, float %113, float %112, !dbg !29
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not26.i = icmp eq i32 %114, 0, !dbg !29
  %115 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #5, !dbg !29
  %116 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #5, !dbg !29
  %.032.i = select i1 %.not26.i, float %116, float %115, !dbg !29
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %119 = bitcast float %.032.i to i32, !dbg !29
  %120 = icmp eq i32 %119, 1118925336, !dbg !29
  %prod.i.145.0.i = select i1 %120, float 0x40562E42E0000000, float %.032.i, !dbg !29
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not29.i175 = icmp eq i32 %121, 0, !dbg !29
  %122 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !29
  %123 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !29
  %.017.i = select i1 %.not29.i175, float %123, float %122, !dbg !29
  %124 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #5, !dbg !29
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not30.i176 = icmp eq i32 %125, 0, !dbg !29
  %126 = tail call float @llvm.nvvm.fabs.ftz.f(float %124) #5, !dbg !29
  %127 = tail call float @llvm.nvvm.fabs.f(float %124) #5, !dbg !29
  %.023.i = select i1 %.not30.i176, float %127, float %126, !dbg !29
  %128 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !29
  %129 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %124), !dbg !29
  %j.i.i.0.i = select i1 %128, float %129, float %124, !dbg !29
  %130 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not31.i177 = icmp eq i32 %130, 0, !dbg !29
  %131 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !29
  %132 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !29
  %.035.i = select i1 %.not31.i177, float %132, float %131, !dbg !29
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not32.i178 = icmp eq i32 %133, 0, !dbg !29
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !29
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !29
  %.036.i = select i1 %.not32.i178, float %135, float %134, !dbg !29
  %136 = fmul float %.036.i, 0x3FF7154760000000, !dbg !29
  %137 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !29
  %138 = bitcast float %137 to i32, !dbg !29
  %139 = shl i32 %138, 23, !dbg !29
  %140 = bitcast i32 %139 to float, !dbg !29
  %141 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %136) #5, !dbg !29
  %142 = fmul float %141, %140, !dbg !29
  %143 = fcmp une float %142, 0x7FF0000000000000, !dbg !29
  br i1 %143, label %__internal_fmad.exit.i.i, label %__internal_powf_corner_cases.exit.i, !dbg !29

__internal_fmad.exit.i.i:                         ; preds = %3
  %.not28.i174 = icmp eq i32 %118, 0, !dbg !29
  %.not27.i173 = icmp eq i32 %117, 0, !dbg !29
  %144 = fneg float %.032.i, !dbg !29
  %145 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %144) #5, !dbg !29
  %146 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %144) #5, !dbg !29
  %.033.i = select i1 %.not27.i173, float %145, float %146, !dbg !29
  %147 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #5, !dbg !29
  %148 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #5, !dbg !29
  %.034.i = select i1 %.not28.i174, float %147, float %148, !dbg !29
  %149 = fadd float %.034.i, 0x3EE0000000000000, !dbg !29
  %prod.i.044.0.i = select i1 %120, float %149, float %.034.i, !dbg !29
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not33.i189 = icmp eq i32 %150, 0, !dbg !29
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float %prod.i.044.0.i, float %142) #5, !dbg !29
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %142, float %prod.i.044.0.i, float %142) #5, !dbg !29
  %.014.i = select i1 %.not33.i189, float %152, float %151, !dbg !29
  br label %__internal_powf_corner_cases.exit.i, !dbg !29

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_fmad.exit.i.i, %3
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %3 ], !dbg !29
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not34.i179 = icmp eq i32 %153, 0, !dbg !29
  %.01.i180 = select i1 %.not34.i179, float %33, float %32, !dbg !29
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not35.i181 = icmp eq i32 %154, 0, !dbg !29
  %.02.i182 = select i1 %.not35.i181, float %98, float %97, !dbg !29
  %155 = fadd float %.01.i180, %.02.i182, !dbg !29
  %156 = bitcast float %155 to i32, !dbg !29
  %157 = icmp sgt i32 %156, 2139095039, !dbg !29
  br i1 %157, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !29

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not36.i183 = icmp eq i32 %158, 0, !dbg !29
  %.06.i184 = select i1 %.not36.i183, float %33, float %32, !dbg !29
  %159 = fcmp uno float %.06.i184, 0.000000e+00, !dbg !29
  br i1 %159, label %162, label %__nv_isnanf.exit11.i.i, !dbg !29

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not37.i = icmp eq i32 %160, 0, !dbg !29
  %.07.i185 = select i1 %.not37.i, float %98, float %97, !dbg !29
  %161 = fcmp uno float %.07.i185, 0.000000e+00, !dbg !29
  br i1 %161, label %162, label %__nv_isinff.exit8.i.i, !dbg !29

162:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %163 = fadd float %29, 1.000000e+04, !dbg !29
  br label %__nv_powf.exit, !dbg !29

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not38.i = icmp eq i32 %164, 0, !dbg !29
  %.05.i186 = select i1 %.not38.i, float %98, float %97, !dbg !29
  %165 = fcmp oeq float %.05.i186, 0x7FF0000000000000, !dbg !29
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not40.i = icmp eq i32 %166, 0, !dbg !29
  %.04.i188 = select i1 %.not40.i, float %33, float %32, !dbg !29
  br i1 %165, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !29

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %167 = fcmp ogt float %.04.i188, 1.000000e+00, !dbg !29
  %ti.i.0.i = select i1 %167, i32 2139095040, i32 0, !dbg !29
  %168 = fcmp olt float %29, 0.000000e+00, !dbg !29
  %169 = xor i32 %ti.i.0.i, 2139095040, !dbg !29
  %ti.i.1.i = select i1 %168, i32 %169, i32 %ti.i.0.i, !dbg !29
  %170 = bitcast i32 %ti.i.1.i to float, !dbg !29
  br label %__nv_powf.exit, !dbg !29

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %171 = fcmp oeq float %.04.i188, 0x7FF0000000000000, !dbg !29
  br i1 %171, label %172, label %__nv_powf.exit, !dbg !29

172:                                              ; preds = %__nv_isinff.exit.i.i
  %173 = fcmp oge float %29, 0.000000e+00, !dbg !29
  %174 = select i1 %173, float 0x7FF0000000000000, float 0.000000e+00, !dbg !29
  br label %__nv_powf.exit, !dbg !29

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %162, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %172
  %.3.i = phi float [ %t.i.0.i, %__internal_powf_corner_cases.exit.i ], [ %163, %162 ], [ %170, %__nv_fabsf.exit5.i.i ], [ %174, %172 ], [ %t.i.0.i, %__nv_isinff.exit.i.i ], !dbg !29
  %175 = fcmp oeq float %29, 0.000000e+00, !dbg !29
  %t.0.i = select i1 %175, float 1.000000e+00, float %.3.i, !dbg !29
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not.i190 = icmp eq i32 %177, 0, !dbg !29
  %.09.i191 = select i1 %.not.i190, float %33, float %32, !dbg !29
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not12.i192 = icmp eq i32 %178, 0, !dbg !29
  %179 = fcmp olt float %.09.i191, 0x3810000000000000, !dbg !29
  %180 = fmul float %.09.i191, 0x4170000000000000, !dbg !29
  %181 = select i1 %.not12.i192, i1 %179, i1 false, !dbg !29
  %.116.i195 = select i1 %181, float %180, float %.09.i191, !dbg !29
  %expo.i.i.1.i196 = select i1 %181, float -1.510000e+02, float -1.270000e+02, !dbg !29
  %182 = bitcast float %.116.i195 to i32, !dbg !29
  %183 = and i32 %182, 8388607, !dbg !29
  %184 = or disjoint i32 %183, 1065353216, !dbg !29
  %185 = bitcast i32 %184 to float, !dbg !29
  %186 = lshr i32 %182, 23, !dbg !29
  %187 = uitofp nneg i32 %186 to float, !dbg !29
  %188 = fadd float %expo.i.i.1.i196, %187, !dbg !29
  %189 = fcmp ogt float %185, 0x3FF6A09E60000000, !dbg !29
  %190 = fmul float %185, 5.000000e-01, !dbg !29
  %191 = fadd float %188, 1.000000e+00, !dbg !29
  %expo.i.i.2.i197 = select i1 %189, float %191, float %188, !dbg !29
  %m.i.i.0.i198 = select i1 %189, float %190, float %185, !dbg !29
  %192 = fadd float %m.i.i.0.i198, -1.000000e+00, !dbg !29
  %193 = fadd float %m.i.i.0.i198, 1.000000e+00, !dbg !29
  %194 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %193) #6, !dbg !29, !srcloc !30
  %195 = fmul float %192, 2.000000e+00, !dbg !29
  %196 = fmul float %194, %195, !dbg !29
  %197 = fmul float %196, %196, !dbg !29
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not13.i199 = icmp eq i32 %198, 0, !dbg !29
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %197, float 0x3F8995EC60000000) #5, !dbg !29
  %200 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %197, float 0x3F8995EC60000000) #5, !dbg !29
  %.020.i200 = select i1 %.not13.i199, float %200, float %199, !dbg !29
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not14.i201 = icmp eq i32 %201, 0, !dbg !29
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i200, float %197, float 0x3FB55557A0000000) #5, !dbg !29
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i200, float %197, float 0x3FB55557A0000000) #5, !dbg !29
  %.021.i202 = select i1 %.not14.i201, float %203, float %202, !dbg !29
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not15.i203 = icmp eq i32 %204, 0, !dbg !29
  %205 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i202, float %197) #5, !dbg !29
  %206 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i202, float %197) #5, !dbg !29
  %.022.i204 = select i1 %.not15.i203, float %206, float %205, !dbg !29
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not16.i205 = icmp eq i32 %207, 0, !dbg !29
  %208 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i204, float %196) #5, !dbg !29
  %209 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i204, float %196) #5, !dbg !29
  %.024.i206 = select i1 %.not16.i205, float %209, float %208, !dbg !29
  %210 = fsub float %192, %196, !dbg !29
  %211 = fmul float %210, 2.000000e+00, !dbg !29
  %212 = fneg float %196, !dbg !29
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not17.i207 = icmp eq i32 %213, 0, !dbg !29
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %212, float %192, float %211) #5, !dbg !29
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %212, float %192, float %211) #5, !dbg !29
  %.025.i208 = select i1 %.not17.i207, float %215, float %214, !dbg !29
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not18.i209 = icmp eq i32 %216, 0, !dbg !29
  %217 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %194, float %.025.i208) #5, !dbg !29
  %218 = tail call float @llvm.nvvm.mul.rn.f(float %194, float %.025.i208) #5, !dbg !29
  %.026.i210 = select i1 %.not18.i209, float %218, float %217, !dbg !29
  %219 = fadd float %196, %.024.i206, !dbg !29
  %220 = fsub float %196, %219, !dbg !29
  %221 = fadd float %.024.i206, %220, !dbg !29
  %222 = fadd float %.026.i210, %221, !dbg !29
  %223 = fadd float %219, %222, !dbg !29
  %224 = fsub float %219, %223, !dbg !29
  %225 = fadd float %222, %224, !dbg !29
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not19.i211 = icmp eq i32 %226, 0, !dbg !29
  %227 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i197, float 0x3FE62E4000000000) #5, !dbg !29
  %228 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i197, float 0x3FE62E4000000000) #5, !dbg !29
  %.019.i212 = select i1 %.not19.i211, float %228, float %227, !dbg !29
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not20.i213 = icmp eq i32 %229, 0, !dbg !29
  %230 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i197, float 0x3EB7F7D1C0000000) #5, !dbg !29
  %231 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i197, float 0x3EB7F7D1C0000000) #5, !dbg !29
  %.018.i214 = select i1 %.not20.i213, float %231, float %230, !dbg !29
  %232 = fadd float %.019.i212, %223, !dbg !29
  %233 = fsub float %.019.i212, %232, !dbg !29
  %234 = fadd float %223, %233, !dbg !29
  %235 = fadd float %225, %234, !dbg !29
  %236 = fadd float %.018.i214, %235, !dbg !29
  %237 = fadd float %232, %236, !dbg !29
  %238 = fsub float %232, %237, !dbg !29
  %239 = fadd float %236, %238, !dbg !29
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not21.i215 = icmp eq i32 %240, 0, !dbg !29
  %.027.i216 = select i1 %.not21.i215, float %98, float %97, !dbg !29
  %241 = fcmp ogt float %.027.i216, 0x46FED09BE0000000, !dbg !29
  %.013.i217 = select i1 %241, float %100, float %29, !dbg !29
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not22.i218 = icmp eq i32 %242, 0, !dbg !29
  %243 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i217, float %237) #5, !dbg !29
  %244 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i217, float %237) #5, !dbg !29
  %.028.i219 = select i1 %.not22.i218, float %244, float %243, !dbg !29
  %245 = fneg float %.028.i219, !dbg !29
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not23.i220 = icmp eq i32 %246, 0, !dbg !29
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i217, float %237, float %245) #5, !dbg !29
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i217, float %237, float %245) #5, !dbg !29
  %.029.i221 = select i1 %.not23.i220, float %248, float %247, !dbg !29
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not24.i222 = icmp eq i32 %249, 0, !dbg !29
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i217, float %239, float %.029.i221) #5, !dbg !29
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i217, float %239, float %.029.i221) #5, !dbg !29
  %.030.i223 = select i1 %.not24.i222, float %251, float %250, !dbg !29
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not25.i224 = icmp eq i32 %252, 0, !dbg !29
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %237, float %.030.i223) #5, !dbg !29
  %254 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %237, float %.030.i223) #5, !dbg !29
  %.031.i225 = select i1 %.not25.i224, float %254, float %253, !dbg !29
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not26.i226 = icmp eq i32 %255, 0, !dbg !29
  %256 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i219, float %.031.i225) #5, !dbg !29
  %257 = tail call float @llvm.nvvm.add.rn.f(float %.028.i219, float %.031.i225) #5, !dbg !29
  %.032.i227 = select i1 %.not26.i226, float %257, float %256, !dbg !29
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %260 = bitcast float %.032.i227 to i32, !dbg !29
  %261 = icmp eq i32 %260, 1118925336, !dbg !29
  %prod.i.145.0.i233 = select i1 %261, float 0x40562E42E0000000, float %.032.i227, !dbg !29
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not29.i234 = icmp eq i32 %262, 0, !dbg !29
  %263 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i233, float 0x3FF7154760000000) #5, !dbg !29
  %264 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i233, float 0x3FF7154760000000) #5, !dbg !29
  %.017.i235 = select i1 %.not29.i234, float %264, float %263, !dbg !29
  %265 = tail call float @llvm.nvvm.trunc.f(float %.017.i235) #5, !dbg !29
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not30.i236 = icmp eq i32 %266, 0, !dbg !29
  %267 = tail call float @llvm.nvvm.fabs.ftz.f(float %265) #5, !dbg !29
  %268 = tail call float @llvm.nvvm.fabs.f(float %265) #5, !dbg !29
  %.023.i237 = select i1 %.not30.i236, float %268, float %267, !dbg !29
  %269 = fcmp ogt float %.023.i237, 1.260000e+02, !dbg !29
  %270 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %265), !dbg !29
  %j.i.i.0.i238 = select i1 %269, float %270, float %265, !dbg !29
  %271 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not31.i239 = icmp eq i32 %271, 0, !dbg !29
  %272 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i238, float 0xBFE62E4300000000, float %prod.i.145.0.i233) #5, !dbg !29
  %273 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i238, float 0xBFE62E4300000000, float %prod.i.145.0.i233) #5, !dbg !29
  %.035.i240 = select i1 %.not31.i239, float %273, float %272, !dbg !29
  %274 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not32.i241 = icmp eq i32 %274, 0, !dbg !29
  %275 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i238, float 0x3E205C6100000000, float %.035.i240) #5, !dbg !29
  %276 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i238, float 0x3E205C6100000000, float %.035.i240) #5, !dbg !29
  %.036.i242 = select i1 %.not32.i241, float %276, float %275, !dbg !29
  %277 = fmul float %.036.i242, 0x3FF7154760000000, !dbg !29
  %278 = fadd float %j.i.i.0.i238, 0x4168000FE0000000, !dbg !29
  %279 = bitcast float %278 to i32, !dbg !29
  %280 = shl i32 %279, 23, !dbg !29
  %281 = bitcast i32 %280 to float, !dbg !29
  %282 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %277) #5, !dbg !29
  %283 = fmul float %282, %281, !dbg !29
  %284 = fcmp une float %283, 0x7FF0000000000000, !dbg !29
  br i1 %284, label %__internal_fmad.exit.i.i268, label %__internal_powf_corner_cases.exit.i243, !dbg !29

__internal_fmad.exit.i.i268:                      ; preds = %__nv_powf.exit
  %.not28.i230 = icmp eq i32 %259, 0, !dbg !29
  %.not27.i228 = icmp eq i32 %258, 0, !dbg !29
  %285 = fneg float %.032.i227, !dbg !29
  %286 = tail call float @llvm.nvvm.add.rn.f(float %.028.i219, float %285) #5, !dbg !29
  %287 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i219, float %285) #5, !dbg !29
  %.033.i229 = select i1 %.not27.i228, float %286, float %287, !dbg !29
  %288 = tail call float @llvm.nvvm.add.rn.f(float %.033.i229, float %.031.i225) #5, !dbg !29
  %289 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i229, float %.031.i225) #5, !dbg !29
  %.034.i231 = select i1 %.not28.i230, float %288, float %289, !dbg !29
  %290 = fadd float %.034.i231, 0x3EE0000000000000, !dbg !29
  %prod.i.044.0.i232 = select i1 %261, float %290, float %.034.i231, !dbg !29
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not33.i269 = icmp eq i32 %291, 0, !dbg !29
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %283, float %prod.i.044.0.i232, float %283) #5, !dbg !29
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %283, float %prod.i.044.0.i232, float %283) #5, !dbg !29
  %.014.i270 = select i1 %.not33.i269, float %293, float %292, !dbg !29
  br label %__internal_powf_corner_cases.exit.i243, !dbg !29

__internal_powf_corner_cases.exit.i243:           ; preds = %__internal_fmad.exit.i.i268, %__nv_powf.exit
  %t.i.0.i244 = phi float [ %.014.i270, %__internal_fmad.exit.i.i268 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !29
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not34.i245 = icmp eq i32 %294, 0, !dbg !29
  %.01.i246 = select i1 %.not34.i245, float %33, float %32, !dbg !29
  %295 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not35.i247 = icmp eq i32 %295, 0, !dbg !29
  %.02.i248 = select i1 %.not35.i247, float %98, float %97, !dbg !29
  %296 = fadd float %.01.i246, %.02.i248, !dbg !29
  %297 = bitcast float %296 to i32, !dbg !29
  %298 = icmp sgt i32 %297, 2139095039, !dbg !29
  br i1 %298, label %__nv_isnanf.exit.i.i251, label %__nv_powf.exit271, !dbg !29

__nv_isnanf.exit.i.i251:                          ; preds = %__internal_powf_corner_cases.exit.i243
  %299 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not36.i252 = icmp eq i32 %299, 0, !dbg !29
  %.06.i253 = select i1 %.not36.i252, float %33, float %32, !dbg !29
  %300 = fcmp uno float %.06.i253, 0.000000e+00, !dbg !29
  br i1 %300, label %303, label %__nv_isnanf.exit11.i.i254, !dbg !29

__nv_isnanf.exit11.i.i254:                        ; preds = %__nv_isnanf.exit.i.i251
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not37.i255 = icmp eq i32 %301, 0, !dbg !29
  %.07.i256 = select i1 %.not37.i255, float %98, float %97, !dbg !29
  %302 = fcmp uno float %.07.i256, 0.000000e+00, !dbg !29
  br i1 %302, label %303, label %__nv_isinff.exit8.i.i257, !dbg !29

303:                                              ; preds = %__nv_isnanf.exit11.i.i254, %__nv_isnanf.exit.i.i251
  %304 = fadd float %29, 1.000000e+04, !dbg !29
  br label %__nv_powf.exit271, !dbg !29

__nv_isinff.exit8.i.i257:                         ; preds = %__nv_isnanf.exit11.i.i254
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not38.i258 = icmp eq i32 %305, 0, !dbg !29
  %.05.i259 = select i1 %.not38.i258, float %98, float %97, !dbg !29
  %306 = fcmp oeq float %.05.i259, 0x7FF0000000000000, !dbg !29
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !29
  %.not40.i264 = icmp eq i32 %307, 0, !dbg !29
  %.04.i265 = select i1 %.not40.i264, float %33, float %32, !dbg !29
  br i1 %306, label %__nv_fabsf.exit5.i.i263, label %__nv_isinff.exit.i.i260, !dbg !29

__nv_fabsf.exit5.i.i263:                          ; preds = %__nv_isinff.exit8.i.i257
  %308 = fcmp ogt float %.04.i265, 1.000000e+00, !dbg !29
  %ti.i.0.i266 = select i1 %308, i32 2139095040, i32 0, !dbg !29
  %309 = fcmp olt float %29, 0.000000e+00, !dbg !29
  %310 = xor i32 %ti.i.0.i266, 2139095040, !dbg !29
  %ti.i.1.i267 = select i1 %309, i32 %310, i32 %ti.i.0.i266, !dbg !29
  %311 = bitcast i32 %ti.i.1.i267 to float, !dbg !29
  br label %__nv_powf.exit271, !dbg !29

__nv_isinff.exit.i.i260:                          ; preds = %__nv_isinff.exit8.i.i257
  %312 = fcmp oeq float %.04.i265, 0x7FF0000000000000, !dbg !29
  br i1 %312, label %313, label %__nv_powf.exit271, !dbg !29

313:                                              ; preds = %__nv_isinff.exit.i.i260
  %314 = fcmp oge float %29, 0.000000e+00, !dbg !29
  %315 = select i1 %314, float 0x7FF0000000000000, float 0.000000e+00, !dbg !29
  br label %__nv_powf.exit271, !dbg !29

__nv_powf.exit271:                                ; preds = %__internal_powf_corner_cases.exit.i243, %303, %__nv_fabsf.exit5.i.i263, %__nv_isinff.exit.i.i260, %313
  %.3.i249 = phi float [ %t.i.0.i244, %__internal_powf_corner_cases.exit.i243 ], [ %304, %303 ], [ %311, %__nv_fabsf.exit5.i.i263 ], [ %315, %313 ], [ %t.i.0.i244, %__nv_isinff.exit.i.i260 ], !dbg !29
  %t.0.i250 = select i1 %175, float 1.000000e+00, float %.3.i249, !dbg !29
  %316 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %21, float %t.0.i) #5, !dbg !31
  %317 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %23, float %t.0.i250) #5, !dbg !31
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  %318 = fmul float %316, 0x3FE45F3060000000, !dbg !32
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not.i = icmp eq i32 %319, 0, !dbg !32
  %320 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %318) #5, !dbg !32
  %321 = tail call i32 @llvm.nvvm.f2i.rn(float %318) #5, !dbg !32
  %.01.i = select i1 %.not.i, i32 %321, i32 %320, !dbg !32
  %322 = sitofp i32 %.01.i to float, !dbg !32
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not15.i = icmp eq i32 %323, 0, !dbg !32
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %322, float 0xBFF921FB40000000, float %316) #5, !dbg !32
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %322, float 0xBFF921FB40000000, float %316) #5, !dbg !32
  %.02.i = select i1 %.not15.i, float %325, float %324, !dbg !32
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not16.i = icmp eq i32 %326, 0, !dbg !32
  %327 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %322, float 0xBE74442D00000000, float %.02.i) #5, !dbg !32
  %328 = tail call float @llvm.nvvm.fma.rn.f(float %322, float 0xBE74442D00000000, float %.02.i) #5, !dbg !32
  %.03.i = select i1 %.not16.i, float %328, float %327, !dbg !32
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not17.i = icmp eq i32 %329, 0, !dbg !32
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %322, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !32
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %322, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !32
  %.04.i = select i1 %.not17.i, float %331, float %330, !dbg !32
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not18.i = icmp eq i32 %332, 0, !dbg !32
  %333 = tail call float @llvm.nvvm.fabs.ftz.f(float %316) #5, !dbg !32
  %334 = tail call float @llvm.nvvm.fabs.f(float %316) #5, !dbg !32
  %.06.i = select i1 %.not18.i, float %334, float %333, !dbg !32
  %335 = fcmp ult float %.06.i, 1.056150e+05, !dbg !32
  br i1 %335, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !32

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_powf.exit271
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not19.i = icmp eq i32 %336, 0, !dbg !32
  %.07.i = select i1 %.not19.i, float %334, float %333, !dbg !32
  %337 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !32
  br i1 %337, label %__nv_fmul_rn.exit.i.i.i, label %341, !dbg !32

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not27.i = icmp eq i32 %338, 0, !dbg !32
  %339 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %316, float 0.000000e+00) #5, !dbg !32
  %340 = tail call float @llvm.nvvm.mul.rn.f(float %316, float 0.000000e+00) #5, !dbg !32
  %.08.i = select i1 %.not27.i, float %340, float %339, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

341:                                              ; preds = %__nv_isinff.exit.i.i.i
  %342 = bitcast float %316 to i32, !dbg !32
  %343 = lshr i32 %342, 23, !dbg !32
  %344 = and i32 %343, 224, !dbg !32
  %345 = add nsw i32 %344, -128, !dbg !32
  %346 = shl i32 %342, 8, !dbg !32
  %347 = or i32 %346, -2147483648, !dbg !32
  %348 = lshr exact i32 %345, 5, !dbg !32
  br label %349, !dbg !32

349:                                              ; preds = %341, %349
  %indvars.iv = phi i64 [ 0, %341 ], [ %indvars.iv.next, %349 ]
  %hi.i.i.i.0.i436 = phi i32 [ 0, %341 ], [ %354, %349 ]
  %350 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !32
  %351 = load i32, ptr addrspace(1) %350, align 4, !dbg !32
  %352 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %351, i32 %347, i32 %hi.i.i.i.0.i436) #6, !dbg !32, !srcloc !33
  %353 = extractvalue { i32, i32 } %352, 0, !dbg !32
  %354 = extractvalue { i32, i32 } %352, 1, !dbg !32
  %355 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !32
  store i32 %353, ptr %355, align 4, !dbg !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !32
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !32
  br i1 %exitcond.not, label %356, label %349, !dbg !32, !llvm.loop !34

356:                                              ; preds = %349
  %357 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !32
  store i32 %354, ptr %357, align 4, !dbg !32
  %358 = and i32 %343, 31, !dbg !32
  %359 = sub nsw i32 6, %348, !dbg !32
  %360 = sext i32 %359 to i64, !dbg !32
  %361 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %360, !dbg !32
  %362 = load i32, ptr %361, align 4, !dbg !32
  %363 = sub nsw i32 5, %348, !dbg !32
  %364 = sext i32 %363 to i64, !dbg !32
  %365 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %364, !dbg !32
  %366 = load i32, ptr %365, align 4, !dbg !32
  %.not20.i = icmp eq i32 %358, 0, !dbg !32
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %367, !dbg !32

367:                                              ; preds = %356
  %368 = sub nsw i32 4, %348, !dbg !32
  %369 = sub nuw nsw i32 32, %358, !dbg !32
  %370 = shl i32 %362, %358, !dbg !32
  %371 = lshr i32 %366, %369, !dbg !32
  %372 = add i32 %371, %370, !dbg !32
  %373 = shl i32 %366, %358, !dbg !32
  %374 = sext i32 %368 to i64, !dbg !32
  %375 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %374, !dbg !32
  %376 = load i32, ptr %375, align 4, !dbg !32
  %377 = lshr i32 %376, %369, !dbg !32
  %378 = add i32 %377, %373, !dbg !32
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !32

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %367, %356
  %hi.i.i.i.1.i = phi i32 [ %372, %367 ], [ %362, %356 ], !dbg !32
  %lo.i.i.i.0.i = phi i32 [ %378, %367 ], [ %366, %356 ], !dbg !32
  %379 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !32
  %380 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !32
  %381 = shl i32 %lo.i.i.i.0.i, 2, !dbg !32
  %382 = lshr i32 %380, 31, !dbg !32
  %383 = add nuw nsw i32 %382, %379, !dbg !32
  %384 = sub nsw i32 0, %383, !dbg !32
  %.not2123.i = icmp slt i32 %342, 0, !dbg !32
  %spec.select.i = select i1 %.not2123.i, i32 %384, i32 %383, !dbg !32
  %385 = xor i32 %380, %342, !dbg !32
  %.lobit.i = ashr i32 %380, 31, !dbg !32
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %380, !dbg !32
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %381, !dbg !32
  %386 = zext i32 %hi.i.i.i.2.i to i64, !dbg !32
  %387 = shl nuw i64 %386, 32, !dbg !32
  %388 = zext i32 %lo.i.i.i.1.i to i64, !dbg !32
  %389 = or disjoint i64 %387, %388, !dbg !32
  %390 = sitofp i64 %389 to double, !dbg !32
  %391 = fmul double %390, 0x3BF921FB54442D19, !dbg !32
  %392 = fptrunc double %391 to float, !dbg !32
  %393 = fneg float %392, !dbg !32
  %.not2526.i = icmp slt i32 %385, 0, !dbg !32
  %r.i.i.i.0.i = select i1 %.not2526.i, float %393, float %392, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_powf.exit271
  %i.i.1.i = phi i32 [ %.01.i, %__nv_powf.exit271 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %t.i.i.1.i = phi float [ %.04.i, %__nv_powf.exit271 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not28.i = icmp eq i32 %394, 0, !dbg !32
  %395 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !32
  %396 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !32
  %.011.i = select i1 %.not28.i, float %396, float %395, !dbg !32
  %397 = and i32 %i.i.1.i, 1, !dbg !32
  %.not29.i = icmp eq i32 %397, 0, !dbg !32
  %398 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !32
  %399 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not30.i = icmp eq i32 %399, 0, !dbg !32
  %400 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %398, float 0.000000e+00) #5, !dbg !32
  %401 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %398, float 0.000000e+00) #5, !dbg !32
  %.012.i = select i1 %.not30.i, float %401, float %400, !dbg !32
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !32

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %402 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not31.i = icmp eq i32 %402, 0, !dbg !32
  %403 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !32
  %404 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !32
  %.013.i = select i1 %.not31.i, float %404, float %403, !dbg !32
  br label %__internal_fmad.exit2.i.i.i, !dbg !32

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %405 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %406 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %407 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not32.i = icmp eq i32 %408, 0, !dbg !32
  %409 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %407, float %.011.i, float %406) #5, !dbg !32
  %410 = tail call float @llvm.nvvm.fma.rn.f(float %407, float %.011.i, float %406) #5, !dbg !32
  %.010.i = select i1 %.not32.i, float %410, float %409, !dbg !32
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not33.i = icmp eq i32 %411, 0, !dbg !32
  %412 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %405) #5, !dbg !32
  %413 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %405) #5, !dbg !32
  %.09.i = select i1 %.not33.i, float %413, float %412, !dbg !32
  %414 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not34.i = icmp eq i32 %414, 0, !dbg !32
  %415 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %398) #5, !dbg !32
  %416 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %398) #5, !dbg !32
  %.05.i = select i1 %.not34.i, float %416, float %415, !dbg !32
  %417 = and i32 %i.i.1.i, 2, !dbg !32
  %.not35.i = icmp eq i32 %417, 0, !dbg !32
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !32

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %418 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not36.i = icmp eq i32 %418, 0, !dbg !32
  %419 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %420 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %.0.i = select i1 %.not36.i, float %420, float %419, !dbg !32
  br label %__nv_sinf.exit, !dbg !32

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !32
  %421 = fmul float %317, 0x3FE45F3060000000, !dbg !32
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not.i2 = icmp eq i32 %422, 0, !dbg !32
  %423 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %421) #5, !dbg !32
  %424 = tail call i32 @llvm.nvvm.f2i.rn(float %421) #5, !dbg !32
  %.01.i3 = select i1 %.not.i2, i32 %424, i32 %423, !dbg !32
  %425 = sitofp i32 %.01.i3 to float, !dbg !32
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not15.i4 = icmp eq i32 %426, 0, !dbg !32
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %425, float 0xBFF921FB40000000, float %317) #5, !dbg !32
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %425, float 0xBFF921FB40000000, float %317) #5, !dbg !32
  %.02.i5 = select i1 %.not15.i4, float %428, float %427, !dbg !32
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not16.i6 = icmp eq i32 %429, 0, !dbg !32
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %425, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !32
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %425, float 0xBE74442D00000000, float %.02.i5) #5, !dbg !32
  %.03.i7 = select i1 %.not16.i6, float %431, float %430, !dbg !32
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not17.i8 = icmp eq i32 %432, 0, !dbg !32
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %425, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !32
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %425, float 0xBCF84698A0000000, float %.03.i7) #5, !dbg !32
  %.04.i9 = select i1 %.not17.i8, float %434, float %433, !dbg !32
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not18.i10 = icmp eq i32 %435, 0, !dbg !32
  %436 = tail call float @llvm.nvvm.fabs.ftz.f(float %317) #5, !dbg !32
  %437 = tail call float @llvm.nvvm.fabs.f(float %317) #5, !dbg !32
  %.06.i11 = select i1 %.not18.i10, float %437, float %436, !dbg !32
  %438 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !32
  br i1 %438, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !32

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not19.i13 = icmp eq i32 %439, 0, !dbg !32
  %.07.i14 = select i1 %.not19.i13, float %437, float %436, !dbg !32
  %440 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !32
  br i1 %440, label %__nv_fmul_rn.exit.i.i.i52, label %444, !dbg !32

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not27.i53 = icmp eq i32 %441, 0, !dbg !32
  %442 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %317, float 0.000000e+00) #5, !dbg !32
  %443 = tail call float @llvm.nvvm.mul.rn.f(float %317, float 0.000000e+00) #5, !dbg !32
  %.08.i54 = select i1 %.not27.i53, float %443, float %442, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !32

444:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %445 = bitcast float %317 to i32, !dbg !32
  %446 = lshr i32 %445, 23, !dbg !32
  %447 = and i32 %446, 224, !dbg !32
  %448 = add nsw i32 %447, -128, !dbg !32
  %449 = shl i32 %445, 8, !dbg !32
  %450 = or i32 %449, -2147483648, !dbg !32
  %451 = lshr exact i32 %448, 5, !dbg !32
  br label %452, !dbg !32

452:                                              ; preds = %444, %452
  %indvars.iv451 = phi i64 [ 0, %444 ], [ %indvars.iv.next452, %452 ]
  %hi.i.i.i.0.i15438 = phi i32 [ 0, %444 ], [ %457, %452 ]
  %453 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv451, !dbg !32
  %454 = load i32, ptr addrspace(1) %453, align 4, !dbg !32
  %455 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %454, i32 %450, i32 %hi.i.i.i.0.i15438) #6, !dbg !32, !srcloc !33
  %456 = extractvalue { i32, i32 } %455, 0, !dbg !32
  %457 = extractvalue { i32, i32 } %455, 1, !dbg !32
  %458 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv451, !dbg !32
  store i32 %456, ptr %458, align 4, !dbg !32
  %indvars.iv.next452 = add nuw nsw i64 %indvars.iv451, 1, !dbg !32
  %exitcond453.not = icmp eq i64 %indvars.iv.next452, 6, !dbg !32
  br i1 %exitcond453.not, label %459, label %452, !dbg !32, !llvm.loop !36

459:                                              ; preds = %452
  %460 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !32
  store i32 %457, ptr %460, align 4, !dbg !32
  %461 = and i32 %446, 31, !dbg !32
  %462 = sub nsw i32 6, %451, !dbg !32
  %463 = sext i32 %462 to i64, !dbg !32
  %464 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %463, !dbg !32
  %465 = load i32, ptr %464, align 4, !dbg !32
  %466 = sub nsw i32 5, %451, !dbg !32
  %467 = sext i32 %466 to i64, !dbg !32
  %468 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %467, !dbg !32
  %469 = load i32, ptr %468, align 4, !dbg !32
  %.not20.i17 = icmp eq i32 %461, 0, !dbg !32
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %470, !dbg !32

470:                                              ; preds = %459
  %471 = sub nsw i32 4, %451, !dbg !32
  %472 = sub nuw nsw i32 32, %461, !dbg !32
  %473 = shl i32 %465, %461, !dbg !32
  %474 = lshr i32 %469, %472, !dbg !32
  %475 = add i32 %474, %473, !dbg !32
  %476 = shl i32 %469, %461, !dbg !32
  %477 = sext i32 %471 to i64, !dbg !32
  %478 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %477, !dbg !32
  %479 = load i32, ptr %478, align 4, !dbg !32
  %480 = lshr i32 %479, %472, !dbg !32
  %481 = add i32 %480, %476, !dbg !32
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !32

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %470, %459
  %hi.i.i.i.1.i19 = phi i32 [ %475, %470 ], [ %465, %459 ], !dbg !32
  %lo.i.i.i.0.i20 = phi i32 [ %481, %470 ], [ %469, %459 ], !dbg !32
  %482 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !32
  %483 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !32
  %484 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !32
  %485 = lshr i32 %483, 31, !dbg !32
  %486 = add nuw nsw i32 %485, %482, !dbg !32
  %487 = sub nsw i32 0, %486, !dbg !32
  %.not2123.i21 = icmp slt i32 %445, 0, !dbg !32
  %spec.select.i22 = select i1 %.not2123.i21, i32 %487, i32 %486, !dbg !32
  %488 = xor i32 %483, %445, !dbg !32
  %.lobit.i23 = ashr i32 %483, 31, !dbg !32
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %483, !dbg !32
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %484, !dbg !32
  %489 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !32
  %490 = shl nuw i64 %489, 32, !dbg !32
  %491 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !32
  %492 = or disjoint i64 %490, %491, !dbg !32
  %493 = sitofp i64 %492 to double, !dbg !32
  %494 = fmul double %493, 0x3BF921FB54442D19, !dbg !32
  %495 = fptrunc double %494 to float, !dbg !32
  %496 = fneg float %495, !dbg !32
  %.not2526.i27 = icmp slt i32 %488, 0, !dbg !32
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %496, float %495, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !32

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !32
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !32
  %497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not28.i32 = icmp eq i32 %497, 0, !dbg !32
  %498 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !32
  %499 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #5, !dbg !32
  %.011.i33 = select i1 %.not28.i32, float %499, float %498, !dbg !32
  %500 = and i32 %i.i.1.i30, 1, !dbg !32
  %.not29.i34 = icmp eq i32 %500, 0, !dbg !32
  %501 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !32
  %502 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not30.i35 = icmp eq i32 %502, 0, !dbg !32
  %503 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %501, float 0.000000e+00) #5, !dbg !32
  %504 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %501, float 0.000000e+00) #5, !dbg !32
  %.012.i36 = select i1 %.not30.i35, float %504, float %503, !dbg !32
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !32

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not31.i38 = icmp eq i32 %505, 0, !dbg !32
  %506 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !32
  %507 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #5, !dbg !32
  %.013.i39 = select i1 %.not31.i38, float %507, float %506, !dbg !32
  br label %__internal_fmad.exit2.i.i.i40, !dbg !32

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %508 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !32
  %509 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !32
  %510 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !32
  %511 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not32.i41 = icmp eq i32 %511, 0, !dbg !32
  %512 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %510, float %.011.i33, float %509) #5, !dbg !32
  %513 = tail call float @llvm.nvvm.fma.rn.f(float %510, float %.011.i33, float %509) #5, !dbg !32
  %.010.i42 = select i1 %.not32.i41, float %513, float %512, !dbg !32
  %514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not33.i43 = icmp eq i32 %514, 0, !dbg !32
  %515 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %508) #5, !dbg !32
  %516 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %508) #5, !dbg !32
  %.09.i44 = select i1 %.not33.i43, float %516, float %515, !dbg !32
  %517 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not34.i45 = icmp eq i32 %517, 0, !dbg !32
  %518 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %501) #5, !dbg !32
  %519 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %501) #5, !dbg !32
  %.05.i46 = select i1 %.not34.i45, float %519, float %518, !dbg !32
  %520 = and i32 %i.i.1.i30, 2, !dbg !32
  %.not35.i47 = icmp eq i32 %520, 0, !dbg !32
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !32

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %521 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not36.i49 = icmp eq i32 %521, 0, !dbg !32
  %522 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %523 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %.0.i50 = select i1 %.not36.i49, float %523, float %522, !dbg !32
  br label %__nv_sinf.exit55, !dbg !32

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !32
  %524 = icmp sgt i32 %12, 0, !dbg !37
  %525 = and i1 %11, %524, !dbg !38
  %526 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 false, i32 0, i1 false) #5, !dbg !39
  %527 = bitcast i32 %526 to float, !dbg !39
  %528 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %525, i32 0, i1 %525) #5, !dbg !39
  %529 = bitcast i32 %528 to float, !dbg !39
  %530 = or disjoint i32 %24, 1, !dbg !40
  %531 = sitofp i32 %530 to float, !dbg !41
  %532 = fmul float %531, 5.000000e-01, !dbg !42
  %533 = tail call float @llvm.nvvm.trunc.f(float %532), !dbg !43
  %534 = fmul float %533, 2.000000e+00, !dbg !44
  %535 = fmul float %534, 1.562500e-02, !dbg !45
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %537 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not.i272 = icmp eq i32 %537, 0, !dbg !46
  %.09.i273 = select i1 %.not.i272, float %33, float %32, !dbg !46
  %538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not12.i274 = icmp eq i32 %538, 0, !dbg !46
  %539 = fcmp olt float %.09.i273, 0x3810000000000000, !dbg !46
  %540 = fmul float %.09.i273, 0x4170000000000000, !dbg !46
  %541 = select i1 %.not12.i274, i1 %539, i1 false, !dbg !46
  %.116.i277 = select i1 %541, float %540, float %.09.i273, !dbg !46
  %expo.i.i.1.i278 = select i1 %541, float -1.510000e+02, float -1.270000e+02, !dbg !46
  %542 = bitcast float %.116.i277 to i32, !dbg !46
  %543 = and i32 %542, 8388607, !dbg !46
  %544 = or disjoint i32 %543, 1065353216, !dbg !46
  %545 = bitcast i32 %544 to float, !dbg !46
  %546 = lshr i32 %542, 23, !dbg !46
  %547 = uitofp nneg i32 %546 to float, !dbg !46
  %548 = fadd float %expo.i.i.1.i278, %547, !dbg !46
  %549 = fcmp ogt float %545, 0x3FF6A09E60000000, !dbg !46
  %550 = fmul float %545, 5.000000e-01, !dbg !46
  %551 = fadd float %548, 1.000000e+00, !dbg !46
  %expo.i.i.2.i279 = select i1 %549, float %551, float %548, !dbg !46
  %m.i.i.0.i280 = select i1 %549, float %550, float %545, !dbg !46
  %552 = fadd float %m.i.i.0.i280, -1.000000e+00, !dbg !46
  %553 = fadd float %m.i.i.0.i280, 1.000000e+00, !dbg !46
  %554 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %553) #6, !dbg !46, !srcloc !30
  %555 = fmul float %552, 2.000000e+00, !dbg !46
  %556 = fmul float %554, %555, !dbg !46
  %557 = fmul float %556, %556, !dbg !46
  %558 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not13.i281 = icmp eq i32 %558, 0, !dbg !46
  %559 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %557, float 0x3F8995EC60000000) #5, !dbg !46
  %560 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %557, float 0x3F8995EC60000000) #5, !dbg !46
  %.020.i282 = select i1 %.not13.i281, float %560, float %559, !dbg !46
  %561 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not14.i283 = icmp eq i32 %561, 0, !dbg !46
  %562 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i282, float %557, float 0x3FB55557A0000000) #5, !dbg !46
  %563 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i282, float %557, float 0x3FB55557A0000000) #5, !dbg !46
  %.021.i284 = select i1 %.not14.i283, float %563, float %562, !dbg !46
  %564 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not15.i285 = icmp eq i32 %564, 0, !dbg !46
  %565 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i284, float %557) #5, !dbg !46
  %566 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i284, float %557) #5, !dbg !46
  %.022.i286 = select i1 %.not15.i285, float %566, float %565, !dbg !46
  %567 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not16.i287 = icmp eq i32 %567, 0, !dbg !46
  %568 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i286, float %556) #5, !dbg !46
  %569 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i286, float %556) #5, !dbg !46
  %.024.i288 = select i1 %.not16.i287, float %569, float %568, !dbg !46
  %570 = fsub float %552, %556, !dbg !46
  %571 = fmul float %570, 2.000000e+00, !dbg !46
  %572 = fneg float %556, !dbg !46
  %573 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not17.i289 = icmp eq i32 %573, 0, !dbg !46
  %574 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %572, float %552, float %571) #5, !dbg !46
  %575 = tail call float @llvm.nvvm.fma.rn.f(float %572, float %552, float %571) #5, !dbg !46
  %.025.i290 = select i1 %.not17.i289, float %575, float %574, !dbg !46
  %576 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not18.i291 = icmp eq i32 %576, 0, !dbg !46
  %577 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %554, float %.025.i290) #5, !dbg !46
  %578 = tail call float @llvm.nvvm.mul.rn.f(float %554, float %.025.i290) #5, !dbg !46
  %.026.i292 = select i1 %.not18.i291, float %578, float %577, !dbg !46
  %579 = fadd float %556, %.024.i288, !dbg !46
  %580 = fsub float %556, %579, !dbg !46
  %581 = fadd float %.024.i288, %580, !dbg !46
  %582 = fadd float %.026.i292, %581, !dbg !46
  %583 = fadd float %579, %582, !dbg !46
  %584 = fsub float %579, %583, !dbg !46
  %585 = fadd float %582, %584, !dbg !46
  %586 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not19.i293 = icmp eq i32 %586, 0, !dbg !46
  %587 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i279, float 0x3FE62E4000000000) #5, !dbg !46
  %588 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i279, float 0x3FE62E4000000000) #5, !dbg !46
  %.019.i294 = select i1 %.not19.i293, float %588, float %587, !dbg !46
  %589 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not20.i295 = icmp eq i32 %589, 0, !dbg !46
  %590 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i279, float 0x3EB7F7D1C0000000) #5, !dbg !46
  %591 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i279, float 0x3EB7F7D1C0000000) #5, !dbg !46
  %.018.i296 = select i1 %.not20.i295, float %591, float %590, !dbg !46
  %592 = fadd float %.019.i294, %583, !dbg !46
  %593 = fsub float %.019.i294, %592, !dbg !46
  %594 = fadd float %583, %593, !dbg !46
  %595 = fadd float %585, %594, !dbg !46
  %596 = fadd float %.018.i296, %595, !dbg !46
  %597 = fadd float %592, %596, !dbg !46
  %598 = fsub float %592, %597, !dbg !46
  %599 = fadd float %596, %598, !dbg !46
  %600 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not21.i297 = icmp eq i32 %600, 0, !dbg !46
  %601 = tail call float @llvm.nvvm.fabs.ftz.f(float %535) #5, !dbg !46
  %602 = tail call float @llvm.nvvm.fabs.f(float %535) #5, !dbg !46
  %.027.i298 = select i1 %.not21.i297, float %602, float %601, !dbg !46
  %603 = fcmp ogt float %.027.i298, 0x46FED09BE0000000, !dbg !46
  %604 = fmul float %535, 0x3F20000000000000, !dbg !46
  %.013.i299 = select i1 %603, float %604, float %535, !dbg !46
  %605 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not22.i300 = icmp eq i32 %605, 0, !dbg !46
  %606 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i299, float %597) #5, !dbg !46
  %607 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i299, float %597) #5, !dbg !46
  %.028.i301 = select i1 %.not22.i300, float %607, float %606, !dbg !46
  %608 = fneg float %.028.i301, !dbg !46
  %609 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not23.i302 = icmp eq i32 %609, 0, !dbg !46
  %610 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i299, float %597, float %608) #5, !dbg !46
  %611 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i299, float %597, float %608) #5, !dbg !46
  %.029.i303 = select i1 %.not23.i302, float %611, float %610, !dbg !46
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not24.i304 = icmp eq i32 %612, 0, !dbg !46
  %613 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i299, float %599, float %.029.i303) #5, !dbg !46
  %614 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i299, float %599, float %.029.i303) #5, !dbg !46
  %.030.i305 = select i1 %.not24.i304, float %614, float %613, !dbg !46
  %615 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not25.i306 = icmp eq i32 %615, 0, !dbg !46
  %616 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %597, float %.030.i305) #5, !dbg !46
  %617 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %597, float %.030.i305) #5, !dbg !46
  %.031.i307 = select i1 %.not25.i306, float %617, float %616, !dbg !46
  %618 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not26.i308 = icmp eq i32 %618, 0, !dbg !46
  %619 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i301, float %.031.i307) #5, !dbg !46
  %620 = tail call float @llvm.nvvm.add.rn.f(float %.028.i301, float %.031.i307) #5, !dbg !46
  %.032.i309 = select i1 %.not26.i308, float %620, float %619, !dbg !46
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %623 = bitcast float %.032.i309 to i32, !dbg !46
  %624 = icmp eq i32 %623, 1118925336, !dbg !46
  %prod.i.145.0.i315 = select i1 %624, float 0x40562E42E0000000, float %.032.i309, !dbg !46
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not29.i316 = icmp eq i32 %625, 0, !dbg !46
  %626 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i315, float 0x3FF7154760000000) #5, !dbg !46
  %627 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i315, float 0x3FF7154760000000) #5, !dbg !46
  %.017.i317 = select i1 %.not29.i316, float %627, float %626, !dbg !46
  %628 = tail call float @llvm.nvvm.trunc.f(float %.017.i317) #5, !dbg !46
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not30.i318 = icmp eq i32 %629, 0, !dbg !46
  %630 = tail call float @llvm.nvvm.fabs.ftz.f(float %628) #5, !dbg !46
  %631 = tail call float @llvm.nvvm.fabs.f(float %628) #5, !dbg !46
  %.023.i319 = select i1 %.not30.i318, float %631, float %630, !dbg !46
  %632 = fcmp ogt float %.023.i319, 1.260000e+02, !dbg !46
  %633 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %628), !dbg !46
  %j.i.i.0.i320 = select i1 %632, float %633, float %628, !dbg !46
  %634 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not31.i321 = icmp eq i32 %634, 0, !dbg !46
  %635 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i320, float 0xBFE62E4300000000, float %prod.i.145.0.i315) #5, !dbg !46
  %636 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i320, float 0xBFE62E4300000000, float %prod.i.145.0.i315) #5, !dbg !46
  %.035.i322 = select i1 %.not31.i321, float %636, float %635, !dbg !46
  %637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not32.i323 = icmp eq i32 %637, 0, !dbg !46
  %638 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i320, float 0x3E205C6100000000, float %.035.i322) #5, !dbg !46
  %639 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i320, float 0x3E205C6100000000, float %.035.i322) #5, !dbg !46
  %.036.i324 = select i1 %.not32.i323, float %639, float %638, !dbg !46
  %640 = fmul float %.036.i324, 0x3FF7154760000000, !dbg !46
  %641 = fadd float %j.i.i.0.i320, 0x4168000FE0000000, !dbg !46
  %642 = bitcast float %641 to i32, !dbg !46
  %643 = shl i32 %642, 23, !dbg !46
  %644 = bitcast i32 %643 to float, !dbg !46
  %645 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %640) #5, !dbg !46
  %646 = fmul float %645, %644, !dbg !46
  %647 = fcmp une float %646, 0x7FF0000000000000, !dbg !46
  br i1 %647, label %__internal_fmad.exit.i.i350, label %__internal_powf_corner_cases.exit.i325, !dbg !46

__internal_fmad.exit.i.i350:                      ; preds = %__nv_sinf.exit55
  %.not28.i312 = icmp eq i32 %622, 0, !dbg !46
  %.not27.i310 = icmp eq i32 %621, 0, !dbg !46
  %648 = fneg float %.032.i309, !dbg !46
  %649 = tail call float @llvm.nvvm.add.rn.f(float %.028.i301, float %648) #5, !dbg !46
  %650 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i301, float %648) #5, !dbg !46
  %.033.i311 = select i1 %.not27.i310, float %649, float %650, !dbg !46
  %651 = tail call float @llvm.nvvm.add.rn.f(float %.033.i311, float %.031.i307) #5, !dbg !46
  %652 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i311, float %.031.i307) #5, !dbg !46
  %.034.i313 = select i1 %.not28.i312, float %651, float %652, !dbg !46
  %653 = fadd float %.034.i313, 0x3EE0000000000000, !dbg !46
  %prod.i.044.0.i314 = select i1 %624, float %653, float %.034.i313, !dbg !46
  %654 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not33.i351 = icmp eq i32 %654, 0, !dbg !46
  %655 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %646, float %prod.i.044.0.i314, float %646) #5, !dbg !46
  %656 = tail call float @llvm.nvvm.fma.rn.f(float %646, float %prod.i.044.0.i314, float %646) #5, !dbg !46
  %.014.i352 = select i1 %.not33.i351, float %656, float %655, !dbg !46
  br label %__internal_powf_corner_cases.exit.i325, !dbg !46

__internal_powf_corner_cases.exit.i325:           ; preds = %__internal_fmad.exit.i.i350, %__nv_sinf.exit55
  %t.i.0.i326 = phi float [ %.014.i352, %__internal_fmad.exit.i.i350 ], [ 0x7FF0000000000000, %__nv_sinf.exit55 ], !dbg !46
  %657 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not34.i327 = icmp eq i32 %657, 0, !dbg !46
  %.01.i328 = select i1 %.not34.i327, float %33, float %32, !dbg !46
  %658 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not35.i329 = icmp eq i32 %658, 0, !dbg !46
  %.02.i330 = select i1 %.not35.i329, float %602, float %601, !dbg !46
  %659 = fadd float %.01.i328, %.02.i330, !dbg !46
  %660 = bitcast float %659 to i32, !dbg !46
  %661 = icmp sgt i32 %660, 2139095039, !dbg !46
  br i1 %661, label %__nv_isnanf.exit.i.i333, label %__nv_powf.exit353, !dbg !46

__nv_isnanf.exit.i.i333:                          ; preds = %__internal_powf_corner_cases.exit.i325
  %662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not36.i334 = icmp eq i32 %662, 0, !dbg !46
  %.06.i335 = select i1 %.not36.i334, float %33, float %32, !dbg !46
  %663 = fcmp uno float %.06.i335, 0.000000e+00, !dbg !46
  br i1 %663, label %666, label %__nv_isnanf.exit11.i.i336, !dbg !46

__nv_isnanf.exit11.i.i336:                        ; preds = %__nv_isnanf.exit.i.i333
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not37.i337 = icmp eq i32 %664, 0, !dbg !46
  %.07.i338 = select i1 %.not37.i337, float %602, float %601, !dbg !46
  %665 = fcmp uno float %.07.i338, 0.000000e+00, !dbg !46
  br i1 %665, label %666, label %__nv_isinff.exit8.i.i339, !dbg !46

666:                                              ; preds = %__nv_isnanf.exit11.i.i336, %__nv_isnanf.exit.i.i333
  %667 = fadd float %535, 1.000000e+04, !dbg !46
  br label %__nv_powf.exit353, !dbg !46

__nv_isinff.exit8.i.i339:                         ; preds = %__nv_isnanf.exit11.i.i336
  %668 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not38.i340 = icmp eq i32 %668, 0, !dbg !46
  %.05.i341 = select i1 %.not38.i340, float %602, float %601, !dbg !46
  %669 = fcmp oeq float %.05.i341, 0x7FF0000000000000, !dbg !46
  %670 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not40.i346 = icmp eq i32 %670, 0, !dbg !46
  %.04.i347 = select i1 %.not40.i346, float %33, float %32, !dbg !46
  br i1 %669, label %__nv_fabsf.exit5.i.i345, label %__nv_isinff.exit.i.i342, !dbg !46

__nv_fabsf.exit5.i.i345:                          ; preds = %__nv_isinff.exit8.i.i339
  %671 = fcmp ogt float %.04.i347, 1.000000e+00, !dbg !46
  %ti.i.0.i348 = select i1 %671, i32 2139095040, i32 0, !dbg !46
  %672 = fcmp olt float %535, 0.000000e+00, !dbg !46
  %673 = xor i32 %ti.i.0.i348, 2139095040, !dbg !46
  %ti.i.1.i349 = select i1 %672, i32 %673, i32 %ti.i.0.i348, !dbg !46
  %674 = bitcast i32 %ti.i.1.i349 to float, !dbg !46
  br label %__nv_powf.exit353, !dbg !46

__nv_isinff.exit.i.i342:                          ; preds = %__nv_isinff.exit8.i.i339
  %675 = fcmp oeq float %.04.i347, 0x7FF0000000000000, !dbg !46
  br i1 %675, label %676, label %__nv_powf.exit353, !dbg !46

676:                                              ; preds = %__nv_isinff.exit.i.i342
  %677 = fcmp oge float %535, 0.000000e+00, !dbg !46
  %678 = select i1 %677, float 0x7FF0000000000000, float 0.000000e+00, !dbg !46
  br label %__nv_powf.exit353, !dbg !46

__nv_powf.exit353:                                ; preds = %__internal_powf_corner_cases.exit.i325, %666, %__nv_fabsf.exit5.i.i345, %__nv_isinff.exit.i.i342, %676
  %.3.i331 = phi float [ %t.i.0.i326, %__internal_powf_corner_cases.exit.i325 ], [ %667, %666 ], [ %674, %__nv_fabsf.exit5.i.i345 ], [ %678, %676 ], [ %t.i.0.i326, %__nv_isinff.exit.i.i342 ], !dbg !46
  %679 = fcmp oeq float %535, 0.000000e+00, !dbg !46
  %t.0.i332 = select i1 %679, float 1.000000e+00, float %.3.i331, !dbg !46
  %680 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %681 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not.i354 = icmp eq i32 %681, 0, !dbg !46
  %.09.i355 = select i1 %.not.i354, float %33, float %32, !dbg !46
  %682 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not12.i356 = icmp eq i32 %682, 0, !dbg !46
  %683 = fcmp olt float %.09.i355, 0x3810000000000000, !dbg !46
  %684 = fmul float %.09.i355, 0x4170000000000000, !dbg !46
  %685 = select i1 %.not12.i356, i1 %683, i1 false, !dbg !46
  %.116.i359 = select i1 %685, float %684, float %.09.i355, !dbg !46
  %expo.i.i.1.i360 = select i1 %685, float -1.510000e+02, float -1.270000e+02, !dbg !46
  %686 = bitcast float %.116.i359 to i32, !dbg !46
  %687 = and i32 %686, 8388607, !dbg !46
  %688 = or disjoint i32 %687, 1065353216, !dbg !46
  %689 = bitcast i32 %688 to float, !dbg !46
  %690 = lshr i32 %686, 23, !dbg !46
  %691 = uitofp nneg i32 %690 to float, !dbg !46
  %692 = fadd float %expo.i.i.1.i360, %691, !dbg !46
  %693 = fcmp ogt float %689, 0x3FF6A09E60000000, !dbg !46
  %694 = fmul float %689, 5.000000e-01, !dbg !46
  %695 = fadd float %692, 1.000000e+00, !dbg !46
  %expo.i.i.2.i361 = select i1 %693, float %695, float %692, !dbg !46
  %m.i.i.0.i362 = select i1 %693, float %694, float %689, !dbg !46
  %696 = fadd float %m.i.i.0.i362, -1.000000e+00, !dbg !46
  %697 = fadd float %m.i.i.0.i362, 1.000000e+00, !dbg !46
  %698 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %697) #6, !dbg !46, !srcloc !30
  %699 = fmul float %696, 2.000000e+00, !dbg !46
  %700 = fmul float %698, %699, !dbg !46
  %701 = fmul float %700, %700, !dbg !46
  %702 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not13.i363 = icmp eq i32 %702, 0, !dbg !46
  %703 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %701, float 0x3F8995EC60000000) #5, !dbg !46
  %704 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %701, float 0x3F8995EC60000000) #5, !dbg !46
  %.020.i364 = select i1 %.not13.i363, float %704, float %703, !dbg !46
  %705 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not14.i365 = icmp eq i32 %705, 0, !dbg !46
  %706 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i364, float %701, float 0x3FB55557A0000000) #5, !dbg !46
  %707 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i364, float %701, float 0x3FB55557A0000000) #5, !dbg !46
  %.021.i366 = select i1 %.not14.i365, float %707, float %706, !dbg !46
  %708 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not15.i367 = icmp eq i32 %708, 0, !dbg !46
  %709 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i366, float %701) #5, !dbg !46
  %710 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i366, float %701) #5, !dbg !46
  %.022.i368 = select i1 %.not15.i367, float %710, float %709, !dbg !46
  %711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not16.i369 = icmp eq i32 %711, 0, !dbg !46
  %712 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i368, float %700) #5, !dbg !46
  %713 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i368, float %700) #5, !dbg !46
  %.024.i370 = select i1 %.not16.i369, float %713, float %712, !dbg !46
  %714 = fsub float %696, %700, !dbg !46
  %715 = fmul float %714, 2.000000e+00, !dbg !46
  %716 = fneg float %700, !dbg !46
  %717 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not17.i371 = icmp eq i32 %717, 0, !dbg !46
  %718 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %716, float %696, float %715) #5, !dbg !46
  %719 = tail call float @llvm.nvvm.fma.rn.f(float %716, float %696, float %715) #5, !dbg !46
  %.025.i372 = select i1 %.not17.i371, float %719, float %718, !dbg !46
  %720 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not18.i373 = icmp eq i32 %720, 0, !dbg !46
  %721 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %698, float %.025.i372) #5, !dbg !46
  %722 = tail call float @llvm.nvvm.mul.rn.f(float %698, float %.025.i372) #5, !dbg !46
  %.026.i374 = select i1 %.not18.i373, float %722, float %721, !dbg !46
  %723 = fadd float %700, %.024.i370, !dbg !46
  %724 = fsub float %700, %723, !dbg !46
  %725 = fadd float %.024.i370, %724, !dbg !46
  %726 = fadd float %.026.i374, %725, !dbg !46
  %727 = fadd float %723, %726, !dbg !46
  %728 = fsub float %723, %727, !dbg !46
  %729 = fadd float %726, %728, !dbg !46
  %730 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not19.i375 = icmp eq i32 %730, 0, !dbg !46
  %731 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i361, float 0x3FE62E4000000000) #5, !dbg !46
  %732 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i361, float 0x3FE62E4000000000) #5, !dbg !46
  %.019.i376 = select i1 %.not19.i375, float %732, float %731, !dbg !46
  %733 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not20.i377 = icmp eq i32 %733, 0, !dbg !46
  %734 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i361, float 0x3EB7F7D1C0000000) #5, !dbg !46
  %735 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i361, float 0x3EB7F7D1C0000000) #5, !dbg !46
  %.018.i378 = select i1 %.not20.i377, float %735, float %734, !dbg !46
  %736 = fadd float %.019.i376, %727, !dbg !46
  %737 = fsub float %.019.i376, %736, !dbg !46
  %738 = fadd float %727, %737, !dbg !46
  %739 = fadd float %729, %738, !dbg !46
  %740 = fadd float %.018.i378, %739, !dbg !46
  %741 = fadd float %736, %740, !dbg !46
  %742 = fsub float %736, %741, !dbg !46
  %743 = fadd float %740, %742, !dbg !46
  %744 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not21.i379 = icmp eq i32 %744, 0, !dbg !46
  %.027.i380 = select i1 %.not21.i379, float %602, float %601, !dbg !46
  %745 = fcmp ogt float %.027.i380, 0x46FED09BE0000000, !dbg !46
  %.013.i381 = select i1 %745, float %604, float %535, !dbg !46
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not22.i382 = icmp eq i32 %746, 0, !dbg !46
  %747 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i381, float %741) #5, !dbg !46
  %748 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i381, float %741) #5, !dbg !46
  %.028.i383 = select i1 %.not22.i382, float %748, float %747, !dbg !46
  %749 = fneg float %.028.i383, !dbg !46
  %750 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not23.i384 = icmp eq i32 %750, 0, !dbg !46
  %751 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i381, float %741, float %749) #5, !dbg !46
  %752 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i381, float %741, float %749) #5, !dbg !46
  %.029.i385 = select i1 %.not23.i384, float %752, float %751, !dbg !46
  %753 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not24.i386 = icmp eq i32 %753, 0, !dbg !46
  %754 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i381, float %743, float %.029.i385) #5, !dbg !46
  %755 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i381, float %743, float %.029.i385) #5, !dbg !46
  %.030.i387 = select i1 %.not24.i386, float %755, float %754, !dbg !46
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not25.i388 = icmp eq i32 %756, 0, !dbg !46
  %757 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %741, float %.030.i387) #5, !dbg !46
  %758 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %741, float %.030.i387) #5, !dbg !46
  %.031.i389 = select i1 %.not25.i388, float %758, float %757, !dbg !46
  %759 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not26.i390 = icmp eq i32 %759, 0, !dbg !46
  %760 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i383, float %.031.i389) #5, !dbg !46
  %761 = tail call float @llvm.nvvm.add.rn.f(float %.028.i383, float %.031.i389) #5, !dbg !46
  %.032.i391 = select i1 %.not26.i390, float %761, float %760, !dbg !46
  %762 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %763 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %764 = bitcast float %.032.i391 to i32, !dbg !46
  %765 = icmp eq i32 %764, 1118925336, !dbg !46
  %prod.i.145.0.i397 = select i1 %765, float 0x40562E42E0000000, float %.032.i391, !dbg !46
  %766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not29.i398 = icmp eq i32 %766, 0, !dbg !46
  %767 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i397, float 0x3FF7154760000000) #5, !dbg !46
  %768 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i397, float 0x3FF7154760000000) #5, !dbg !46
  %.017.i399 = select i1 %.not29.i398, float %768, float %767, !dbg !46
  %769 = tail call float @llvm.nvvm.trunc.f(float %.017.i399) #5, !dbg !46
  %770 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not30.i400 = icmp eq i32 %770, 0, !dbg !46
  %771 = tail call float @llvm.nvvm.fabs.ftz.f(float %769) #5, !dbg !46
  %772 = tail call float @llvm.nvvm.fabs.f(float %769) #5, !dbg !46
  %.023.i401 = select i1 %.not30.i400, float %772, float %771, !dbg !46
  %773 = fcmp ogt float %.023.i401, 1.260000e+02, !dbg !46
  %774 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %769), !dbg !46
  %j.i.i.0.i402 = select i1 %773, float %774, float %769, !dbg !46
  %775 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not31.i403 = icmp eq i32 %775, 0, !dbg !46
  %776 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i402, float 0xBFE62E4300000000, float %prod.i.145.0.i397) #5, !dbg !46
  %777 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i402, float 0xBFE62E4300000000, float %prod.i.145.0.i397) #5, !dbg !46
  %.035.i404 = select i1 %.not31.i403, float %777, float %776, !dbg !46
  %778 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not32.i405 = icmp eq i32 %778, 0, !dbg !46
  %779 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i402, float 0x3E205C6100000000, float %.035.i404) #5, !dbg !46
  %780 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i402, float 0x3E205C6100000000, float %.035.i404) #5, !dbg !46
  %.036.i406 = select i1 %.not32.i405, float %780, float %779, !dbg !46
  %781 = fmul float %.036.i406, 0x3FF7154760000000, !dbg !46
  %782 = fadd float %j.i.i.0.i402, 0x4168000FE0000000, !dbg !46
  %783 = bitcast float %782 to i32, !dbg !46
  %784 = shl i32 %783, 23, !dbg !46
  %785 = bitcast i32 %784 to float, !dbg !46
  %786 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %781) #5, !dbg !46
  %787 = fmul float %786, %785, !dbg !46
  %788 = fcmp une float %787, 0x7FF0000000000000, !dbg !46
  br i1 %788, label %__internal_fmad.exit.i.i432, label %__internal_powf_corner_cases.exit.i407, !dbg !46

__internal_fmad.exit.i.i432:                      ; preds = %__nv_powf.exit353
  %.not28.i394 = icmp eq i32 %763, 0, !dbg !46
  %.not27.i392 = icmp eq i32 %762, 0, !dbg !46
  %789 = fneg float %.032.i391, !dbg !46
  %790 = tail call float @llvm.nvvm.add.rn.f(float %.028.i383, float %789) #5, !dbg !46
  %791 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i383, float %789) #5, !dbg !46
  %.033.i393 = select i1 %.not27.i392, float %790, float %791, !dbg !46
  %792 = tail call float @llvm.nvvm.add.rn.f(float %.033.i393, float %.031.i389) #5, !dbg !46
  %793 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i393, float %.031.i389) #5, !dbg !46
  %.034.i395 = select i1 %.not28.i394, float %792, float %793, !dbg !46
  %794 = fadd float %.034.i395, 0x3EE0000000000000, !dbg !46
  %prod.i.044.0.i396 = select i1 %765, float %794, float %.034.i395, !dbg !46
  %795 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not33.i433 = icmp eq i32 %795, 0, !dbg !46
  %796 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %787, float %prod.i.044.0.i396, float %787) #5, !dbg !46
  %797 = tail call float @llvm.nvvm.fma.rn.f(float %787, float %prod.i.044.0.i396, float %787) #5, !dbg !46
  %.014.i434 = select i1 %.not33.i433, float %797, float %796, !dbg !46
  br label %__internal_powf_corner_cases.exit.i407, !dbg !46

__internal_powf_corner_cases.exit.i407:           ; preds = %__internal_fmad.exit.i.i432, %__nv_powf.exit353
  %t.i.0.i408 = phi float [ %.014.i434, %__internal_fmad.exit.i.i432 ], [ 0x7FF0000000000000, %__nv_powf.exit353 ], !dbg !46
  %798 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not34.i409 = icmp eq i32 %798, 0, !dbg !46
  %.01.i410 = select i1 %.not34.i409, float %33, float %32, !dbg !46
  %799 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not35.i411 = icmp eq i32 %799, 0, !dbg !46
  %.02.i412 = select i1 %.not35.i411, float %602, float %601, !dbg !46
  %800 = fadd float %.01.i410, %.02.i412, !dbg !46
  %801 = bitcast float %800 to i32, !dbg !46
  %802 = icmp sgt i32 %801, 2139095039, !dbg !46
  br i1 %802, label %__nv_isnanf.exit.i.i415, label %__nv_powf.exit435, !dbg !46

__nv_isnanf.exit.i.i415:                          ; preds = %__internal_powf_corner_cases.exit.i407
  %803 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not36.i416 = icmp eq i32 %803, 0, !dbg !46
  %.06.i417 = select i1 %.not36.i416, float %33, float %32, !dbg !46
  %804 = fcmp uno float %.06.i417, 0.000000e+00, !dbg !46
  br i1 %804, label %807, label %__nv_isnanf.exit11.i.i418, !dbg !46

__nv_isnanf.exit11.i.i418:                        ; preds = %__nv_isnanf.exit.i.i415
  %805 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not37.i419 = icmp eq i32 %805, 0, !dbg !46
  %.07.i420 = select i1 %.not37.i419, float %602, float %601, !dbg !46
  %806 = fcmp uno float %.07.i420, 0.000000e+00, !dbg !46
  br i1 %806, label %807, label %__nv_isinff.exit8.i.i421, !dbg !46

807:                                              ; preds = %__nv_isnanf.exit11.i.i418, %__nv_isnanf.exit.i.i415
  %808 = fadd float %535, 1.000000e+04, !dbg !46
  br label %__nv_powf.exit435, !dbg !46

__nv_isinff.exit8.i.i421:                         ; preds = %__nv_isnanf.exit11.i.i418
  %809 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not38.i422 = icmp eq i32 %809, 0, !dbg !46
  %.05.i423 = select i1 %.not38.i422, float %602, float %601, !dbg !46
  %810 = fcmp oeq float %.05.i423, 0x7FF0000000000000, !dbg !46
  %811 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !46
  %.not40.i428 = icmp eq i32 %811, 0, !dbg !46
  %.04.i429 = select i1 %.not40.i428, float %33, float %32, !dbg !46
  br i1 %810, label %__nv_fabsf.exit5.i.i427, label %__nv_isinff.exit.i.i424, !dbg !46

__nv_fabsf.exit5.i.i427:                          ; preds = %__nv_isinff.exit8.i.i421
  %812 = fcmp ogt float %.04.i429, 1.000000e+00, !dbg !46
  %ti.i.0.i430 = select i1 %812, i32 2139095040, i32 0, !dbg !46
  %813 = fcmp olt float %535, 0.000000e+00, !dbg !46
  %814 = xor i32 %ti.i.0.i430, 2139095040, !dbg !46
  %ti.i.1.i431 = select i1 %813, i32 %814, i32 %ti.i.0.i430, !dbg !46
  %815 = bitcast i32 %ti.i.1.i431 to float, !dbg !46
  br label %__nv_powf.exit435, !dbg !46

__nv_isinff.exit.i.i424:                          ; preds = %__nv_isinff.exit8.i.i421
  %816 = fcmp oeq float %.04.i429, 0x7FF0000000000000, !dbg !46
  br i1 %816, label %817, label %__nv_powf.exit435, !dbg !46

817:                                              ; preds = %__nv_isinff.exit.i.i424
  %818 = fcmp oge float %535, 0.000000e+00, !dbg !46
  %819 = select i1 %818, float 0x7FF0000000000000, float 0.000000e+00, !dbg !46
  br label %__nv_powf.exit435, !dbg !46

__nv_powf.exit435:                                ; preds = %__internal_powf_corner_cases.exit.i407, %807, %__nv_fabsf.exit5.i.i427, %__nv_isinff.exit.i.i424, %817
  %.3.i413 = phi float [ %t.i.0.i408, %__internal_powf_corner_cases.exit.i407 ], [ %808, %807 ], [ %815, %__nv_fabsf.exit5.i.i427 ], [ %819, %817 ], [ %t.i.0.i408, %__nv_isinff.exit.i.i424 ], !dbg !46
  %t.0.i414 = select i1 %679, float 1.000000e+00, float %.3.i413, !dbg !46
  %820 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %527, float %t.0.i332) #5, !dbg !47
  %821 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %529, float %t.0.i414) #5, !dbg !47
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !48
  %822 = fmul float %820, 0x3FE45F3060000000, !dbg !48
  %823 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not.i57 = icmp eq i32 %823, 0, !dbg !48
  %824 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %822) #5, !dbg !48
  %825 = tail call i32 @llvm.nvvm.f2i.rn(float %822) #5, !dbg !48
  %.01.i58 = select i1 %.not.i57, i32 %825, i32 %824, !dbg !48
  %826 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %827 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %828 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not18.i65 = icmp eq i32 %829, 0, !dbg !48
  %830 = tail call float @llvm.nvvm.fabs.ftz.f(float %820) #5, !dbg !48
  %831 = tail call float @llvm.nvvm.fabs.f(float %820) #5, !dbg !48
  %.06.i66 = select i1 %.not18.i65, float %831, float %830, !dbg !48
  %832 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !48
  br i1 %832, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !48

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_powf.exit435
  %833 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not19.i68 = icmp eq i32 %833, 0, !dbg !48
  %.07.i69 = select i1 %.not19.i68, float %831, float %830, !dbg !48
  %834 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !48
  br i1 %834, label %__nv_fmul_rn.exit.i.i.i106, label %836, !dbg !48

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %835 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !48

836:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %837 = bitcast float %820 to i32, !dbg !48
  %838 = lshr i32 %837, 23, !dbg !48
  %839 = and i32 %838, 224, !dbg !48
  %840 = shl i32 %837, 8, !dbg !48
  %841 = or i32 %840, -2147483648, !dbg !48
  br label %842, !dbg !48

842:                                              ; preds = %836, %842
  %indvars.iv454 = phi i64 [ 0, %836 ], [ %indvars.iv.next455, %842 ]
  %hi.i.i.i.0.i70440 = phi i32 [ 0, %836 ], [ %847, %842 ]
  %843 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv454, !dbg !48
  %844 = load i32, ptr addrspace(1) %843, align 4, !dbg !48
  %845 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %844, i32 %841, i32 %hi.i.i.i.0.i70440) #6, !dbg !48, !srcloc !33
  %846 = extractvalue { i32, i32 } %845, 0, !dbg !48
  %847 = extractvalue { i32, i32 } %845, 1, !dbg !48
  %848 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv454, !dbg !48
  store i32 %846, ptr %848, align 4, !dbg !48
  %indvars.iv.next455 = add nuw nsw i64 %indvars.iv454, 1, !dbg !48
  %exitcond456.not = icmp eq i64 %indvars.iv.next455, 6, !dbg !48
  br i1 %exitcond456.not, label %849, label %842, !dbg !48, !llvm.loop !49

849:                                              ; preds = %842
  %850 = add nsw i32 %839, -128, !dbg !48
  %851 = lshr exact i32 %850, 5, !dbg !48
  %852 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !48
  store i32 %847, ptr %852, align 4, !dbg !48
  %853 = and i32 %838, 31, !dbg !48
  %854 = sub nsw i32 6, %851, !dbg !48
  %855 = sext i32 %854 to i64, !dbg !48
  %856 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %855, !dbg !48
  %857 = load i32, ptr %856, align 4, !dbg !48
  %.not20.i72 = icmp eq i32 %853, 0, !dbg !48
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %858, !dbg !48

858:                                              ; preds = %849
  %859 = sub nsw i32 5, %851, !dbg !48
  %860 = sext i32 %859 to i64, !dbg !48
  %861 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %860, !dbg !48
  %862 = load i32, ptr %861, align 4, !dbg !48
  %863 = sub nuw nsw i32 32, %853, !dbg !48
  %864 = shl i32 %857, %853, !dbg !48
  %865 = lshr i32 %862, %863, !dbg !48
  %866 = add i32 %865, %864, !dbg !48
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !48

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %858, %849
  %hi.i.i.i.1.i74 = phi i32 [ %866, %858 ], [ %857, %849 ], !dbg !48
  %867 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !48
  %868 = lshr i32 %hi.i.i.i.1.i74, 29, !dbg !48
  %869 = and i32 %868, 1, !dbg !48
  %870 = add nuw nsw i32 %869, %867, !dbg !48
  %871 = sub nsw i32 0, %870, !dbg !48
  %.not2123.i76 = icmp slt i32 %837, 0, !dbg !48
  %spec.select.i77 = select i1 %.not2123.i76, i32 %871, i32 %870, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !48

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_powf.exit435
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_powf.exit435 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !48
  %872 = add i32 %i.i.1.i85, 1, !dbg !48
  %873 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %874 = and i32 %i.i.1.i85, 1, !dbg !48
  %.not29.not.i = icmp eq i32 %874, 0, !dbg !48
  %875 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !48

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %876 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  br label %__internal_fmad.exit2.i.i.i91, !dbg !48

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %877 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %878 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %879 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %880 = and i32 %872, 2, !dbg !48
  %.not35.i98 = icmp eq i32 %880, 0, !dbg !48
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !48

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %881 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  br label %__nv_cosf.exit, !dbg !48

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !48
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !48
  %882 = fmul float %821, 0x3FE45F3060000000, !dbg !48
  %883 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not.i110 = icmp eq i32 %883, 0, !dbg !48
  %884 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %882) #5, !dbg !48
  %885 = tail call i32 @llvm.nvvm.f2i.rn(float %882) #5, !dbg !48
  %.01.i111 = select i1 %.not.i110, i32 %885, i32 %884, !dbg !48
  %886 = sitofp i32 %.01.i111 to float, !dbg !48
  %887 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not15.i112 = icmp eq i32 %887, 0, !dbg !48
  %888 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %886, float 0xBFF921FB40000000, float %821) #5, !dbg !48
  %889 = tail call float @llvm.nvvm.fma.rn.f(float %886, float 0xBFF921FB40000000, float %821) #5, !dbg !48
  %.02.i113 = select i1 %.not15.i112, float %889, float %888, !dbg !48
  %890 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not16.i114 = icmp eq i32 %890, 0, !dbg !48
  %891 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %886, float 0xBE74442D00000000, float %.02.i113) #5, !dbg !48
  %892 = tail call float @llvm.nvvm.fma.rn.f(float %886, float 0xBE74442D00000000, float %.02.i113) #5, !dbg !48
  %.03.i115 = select i1 %.not16.i114, float %892, float %891, !dbg !48
  %893 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not17.i116 = icmp eq i32 %893, 0, !dbg !48
  %894 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %886, float 0xBCF84698A0000000, float %.03.i115) #5, !dbg !48
  %895 = tail call float @llvm.nvvm.fma.rn.f(float %886, float 0xBCF84698A0000000, float %.03.i115) #5, !dbg !48
  %.04.i117 = select i1 %.not17.i116, float %895, float %894, !dbg !48
  %896 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not18.i118 = icmp eq i32 %896, 0, !dbg !48
  %897 = tail call float @llvm.nvvm.fabs.ftz.f(float %821) #5, !dbg !48
  %898 = tail call float @llvm.nvvm.fabs.f(float %821) #5, !dbg !48
  %.06.i119 = select i1 %.not18.i118, float %898, float %897, !dbg !48
  %899 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !48
  br i1 %899, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !48

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %900 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not19.i121 = icmp eq i32 %900, 0, !dbg !48
  %.07.i122 = select i1 %.not19.i121, float %898, float %897, !dbg !48
  %901 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !48
  br i1 %901, label %__nv_fmul_rn.exit.i.i.i160, label %905, !dbg !48

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %902 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not27.i161 = icmp eq i32 %902, 0, !dbg !48
  %903 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %821, float 0.000000e+00) #5, !dbg !48
  %904 = tail call float @llvm.nvvm.mul.rn.f(float %821, float 0.000000e+00) #5, !dbg !48
  %.08.i162 = select i1 %.not27.i161, float %904, float %903, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !48

905:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %906 = bitcast float %821 to i32, !dbg !48
  %907 = lshr i32 %906, 23, !dbg !48
  %908 = and i32 %907, 224, !dbg !48
  %909 = add nsw i32 %908, -128, !dbg !48
  %910 = shl i32 %906, 8, !dbg !48
  %911 = or i32 %910, -2147483648, !dbg !48
  %912 = lshr exact i32 %909, 5, !dbg !48
  br label %913, !dbg !48

913:                                              ; preds = %905, %913
  %indvars.iv457 = phi i64 [ 0, %905 ], [ %indvars.iv.next458, %913 ]
  %hi.i.i.i.0.i123442 = phi i32 [ 0, %905 ], [ %918, %913 ]
  %914 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv457, !dbg !48
  %915 = load i32, ptr addrspace(1) %914, align 4, !dbg !48
  %916 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %915, i32 %911, i32 %hi.i.i.i.0.i123442) #6, !dbg !48, !srcloc !33
  %917 = extractvalue { i32, i32 } %916, 0, !dbg !48
  %918 = extractvalue { i32, i32 } %916, 1, !dbg !48
  %919 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv457, !dbg !48
  store i32 %917, ptr %919, align 4, !dbg !48
  %indvars.iv.next458 = add nuw nsw i64 %indvars.iv457, 1, !dbg !48
  %exitcond459.not = icmp eq i64 %indvars.iv.next458, 6, !dbg !48
  br i1 %exitcond459.not, label %920, label %913, !dbg !48, !llvm.loop !50

920:                                              ; preds = %913
  %921 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !48
  store i32 %918, ptr %921, align 4, !dbg !48
  %922 = and i32 %907, 31, !dbg !48
  %923 = sub nsw i32 6, %912, !dbg !48
  %924 = sext i32 %923 to i64, !dbg !48
  %925 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %924, !dbg !48
  %926 = load i32, ptr %925, align 4, !dbg !48
  %927 = sub nsw i32 5, %912, !dbg !48
  %928 = sext i32 %927 to i64, !dbg !48
  %929 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %928, !dbg !48
  %930 = load i32, ptr %929, align 4, !dbg !48
  %.not20.i125 = icmp eq i32 %922, 0, !dbg !48
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %931, !dbg !48

931:                                              ; preds = %920
  %932 = sub nsw i32 4, %912, !dbg !48
  %933 = sub nuw nsw i32 32, %922, !dbg !48
  %934 = shl i32 %926, %922, !dbg !48
  %935 = lshr i32 %930, %933, !dbg !48
  %936 = add i32 %935, %934, !dbg !48
  %937 = shl i32 %930, %922, !dbg !48
  %938 = sext i32 %932 to i64, !dbg !48
  %939 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %938, !dbg !48
  %940 = load i32, ptr %939, align 4, !dbg !48
  %941 = lshr i32 %940, %933, !dbg !48
  %942 = add i32 %941, %937, !dbg !48
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !48

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %931, %920
  %hi.i.i.i.1.i127 = phi i32 [ %936, %931 ], [ %926, %920 ], !dbg !48
  %lo.i.i.i.0.i128 = phi i32 [ %942, %931 ], [ %930, %920 ], !dbg !48
  %943 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !48
  %944 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !48
  %945 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !48
  %946 = lshr i32 %944, 31, !dbg !48
  %947 = add nuw nsw i32 %946, %943, !dbg !48
  %948 = sub nsw i32 0, %947, !dbg !48
  %.not2123.i129 = icmp slt i32 %906, 0, !dbg !48
  %spec.select.i130 = select i1 %.not2123.i129, i32 %948, i32 %947, !dbg !48
  %949 = xor i32 %944, %906, !dbg !48
  %.lobit.i131 = ashr i32 %944, 31, !dbg !48
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %944, !dbg !48
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %945, !dbg !48
  %950 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !48
  %951 = shl nuw i64 %950, 32, !dbg !48
  %952 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !48
  %953 = or disjoint i64 %951, %952, !dbg !48
  %954 = sitofp i64 %953 to double, !dbg !48
  %955 = fmul double %954, 0x3BF921FB54442D19, !dbg !48
  %956 = fptrunc double %955 to float, !dbg !48
  %957 = fneg float %956, !dbg !48
  %.not2526.i135 = icmp slt i32 %949, 0, !dbg !48
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %957, float %956, !dbg !48
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !48

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !48
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !48
  %958 = add i32 %i.i.1.i138, 1, !dbg !48
  %959 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not28.i140 = icmp eq i32 %959, 0, !dbg !48
  %960 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #5, !dbg !48
  %961 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #5, !dbg !48
  %.011.i141 = select i1 %.not28.i140, float %961, float %960, !dbg !48
  %962 = and i32 %i.i.1.i138, 1, !dbg !48
  %.not29.not.i142 = icmp eq i32 %962, 0, !dbg !48
  %963 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !48
  %964 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not30.i143 = icmp eq i32 %964, 0, !dbg !48
  %965 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %963, float 0.000000e+00) #5, !dbg !48
  %966 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %963, float 0.000000e+00) #5, !dbg !48
  %.012.i144 = select i1 %.not30.i143, float %966, float %965, !dbg !48
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !48

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %967 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not31.i158 = icmp eq i32 %967, 0, !dbg !48
  %968 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #5, !dbg !48
  %969 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #5, !dbg !48
  %.013.i159 = select i1 %.not31.i158, float %969, float %968, !dbg !48
  br label %__internal_fmad.exit2.i.i.i145, !dbg !48

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %970 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !48
  %971 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !48
  %972 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !48
  %973 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not32.i146 = icmp eq i32 %973, 0, !dbg !48
  %974 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %972, float %.011.i141, float %971) #5, !dbg !48
  %975 = tail call float @llvm.nvvm.fma.rn.f(float %972, float %.011.i141, float %971) #5, !dbg !48
  %.010.i147 = select i1 %.not32.i146, float %975, float %974, !dbg !48
  %976 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not33.i148 = icmp eq i32 %976, 0, !dbg !48
  %977 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %970) #5, !dbg !48
  %978 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %970) #5, !dbg !48
  %.09.i149 = select i1 %.not33.i148, float %978, float %977, !dbg !48
  %979 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not34.i150 = icmp eq i32 %979, 0, !dbg !48
  %980 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %963) #5, !dbg !48
  %981 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %963) #5, !dbg !48
  %.05.i151 = select i1 %.not34.i150, float %981, float %980, !dbg !48
  %982 = and i32 %958, 2, !dbg !48
  %.not35.i152 = icmp eq i32 %982, 0, !dbg !48
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !48

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %983 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !48
  %.not36.i154 = icmp eq i32 %983, 0, !dbg !48
  %984 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %985 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #5, !dbg !48
  %.0.i155 = select i1 %.not36.i154, float %985, float %984, !dbg !48
  br label %__nv_cosf.exit163, !dbg !48

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !48
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !48
  %986 = select i1 %16, float %z.i.i.0.i51, float %z.i.i.0.i156, !dbg !51
  %987 = sext i32 %9 to i64, !dbg !52
  %988 = getelementptr float, ptr addrspace(1) %1, i64 %987, !dbg !52
  %989 = bitcast float %z.i.i.0.i to i32, !dbg !53
  %990 = bitcast float %986 to i32, !dbg !53
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %989, i32 %990, ptr addrspace(1) %988, i1 %11) #5, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c63dpgoyvwfmakpepb3k5wnb4dof5fensptkvywzcgx2dxfwtgtw.py", directory: "inductor_cache/63")
!4 = !{ptr @triton_poi_fused_stack_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_stack_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_stack_1", linkageName: "triton_poi_fused_stack_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 26, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 33, column: 42, scope: !7)
!22 = !DILocation(line: 33, column: 35, scope: !7)
!23 = !DILocation(line: 34, column: 13, scope: !7)
!24 = !DILocation(line: 35, column: 19, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 28, scope: !7)
!27 = !DILocation(line: 40, column: 20, scope: !7)
!28 = !DILocation(line: 42, column: 20, scope: !7)
!29 = !DILocation(line: 44, column: 33, scope: !7)
!30 = !{i32 21046}
!31 = !DILocation(line: 45, column: 19, scope: !7)
!32 = !DILocation(line: 46, column: 24, scope: !7)
!33 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.unroll.count", i32 1}
!36 = distinct !{!36, !35}
!37 = !DILocation(line: 49, column: 20, scope: !7)
!38 = !DILocation(line: 52, column: 44, scope: !7)
!39 = !DILocation(line: 52, column: 36, scope: !7)
!40 = !DILocation(line: 53, column: 16, scope: !7)
!41 = !DILocation(line: 54, column: 21, scope: !7)
!42 = !DILocation(line: 56, column: 20, scope: !7)
!43 = !DILocation(line: 57, column: 28, scope: !7)
!44 = !DILocation(line: 59, column: 20, scope: !7)
!45 = !DILocation(line: 61, column: 20, scope: !7)
!46 = !DILocation(line: 63, column: 33, scope: !7)
!47 = !DILocation(line: 64, column: 20, scope: !7)
!48 = !DILocation(line: 65, column: 24, scope: !7)
!49 = distinct !{!49, !35}
!50 = distinct !{!50, !35}
!51 = !DILocation(line: 0, scope: !7)
!52 = !DILocation(line: 69, column: 25, scope: !7)
!53 = !DILocation(line: 69, column: 37, scope: !7)
!54 = !DILocation(line: 69, column: 4, scope: !7)
