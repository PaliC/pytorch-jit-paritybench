; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__safe_softmax_6(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = sdiv i32 %9, 4, !dbg !15
  %12 = shl nsw i32 %11, 2, !dbg !16
  %13 = sext i32 %12 to i64, !dbg !17
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !17
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %10) #1, !dbg !18
  %16 = or disjoint i32 %12, 1, !dbg !19
  %17 = sext i32 %16 to i64, !dbg !20
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !20
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %10) #1, !dbg !21
  %20 = or disjoint i32 %12, 2, !dbg !22
  %21 = sext i32 %20 to i64, !dbg !23
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !23
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %10) #1, !dbg !24
  %24 = or disjoint i32 %12, 3, !dbg !25
  %25 = sext i32 %24 to i64, !dbg !26
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !26
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %10) #1, !dbg !27
  %28 = sext i32 %9 to i64, !dbg !28
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !28
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %10) #1, !dbg !29
  %31 = bitcast i32 %30 to float, !dbg !29
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %13, !dbg !30
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %10) #1, !dbg !31
  %34 = bitcast i32 %33 to float, !dbg !31
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !32
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %10) #1, !dbg !33
  %37 = bitcast i32 %36 to float, !dbg !33
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %21, !dbg !34
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %10) #1, !dbg !35
  %40 = bitcast i32 %39 to float, !dbg !35
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !36
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %10) #1, !dbg !37
  %43 = bitcast i32 %42 to float, !dbg !37
  %44 = insertelement <4 x i32> poison, i32 %15, i64 0, !dbg !18
  %45 = insertelement <4 x i32> %44, i32 %19, i64 1, !dbg !18
  %46 = insertelement <4 x i32> %45, i32 %23, i64 2, !dbg !18
  %47 = insertelement <4 x i32> %46, i32 %27, i64 3, !dbg !18
  %48 = bitcast <4 x i32> %47 to <4 x float>, !dbg !18
  %49 = fcmp une <4 x float> %48, splat (float 0xFFF0000000000000), !dbg !38
  %50 = bitcast <4 x i1> %49 to i4, !dbg !38
  %51 = icmp eq i4 %50, 0, !dbg !38
  %52 = fadd float %34, %37, !dbg !39
  %53 = fadd float %52, %40, !dbg !40
  %54 = fadd float %53, %43, !dbg !41
  %55 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %31, float %54) #1, !dbg !42
  %56 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !43
  %57 = bitcast float %55 to i32, !dbg !44
  %58 = select i1 %51, i32 0, i32 %57, !dbg !45
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %58, ptr addrspace(1) %56, i1 %10) #1, !dbg !44
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqdbchclta55ofc5wn5qw2qy45sa6ahpqjrswopjtckltqwud7zr.py", directory: "inductor_cache/qd")
!4 = !{ptr @triton_poi_fused__safe_softmax_6, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__safe_softmax_6, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__safe_softmax_6", linkageName: "triton_poi_fused__safe_softmax_6", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 32, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 37, scope: !7)
!19 = !DILocation(line: 27, column: 34, scope: !7)
!20 = !DILocation(line: 27, column: 30, scope: !7)
!21 = !DILocation(line: 27, column: 41, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 28, column: 31, scope: !7)
!24 = !DILocation(line: 28, column: 42, scope: !7)
!25 = !DILocation(line: 29, column: 35, scope: !7)
!26 = !DILocation(line: 29, column: 31, scope: !7)
!27 = !DILocation(line: 29, column: 42, scope: !7)
!28 = !DILocation(line: 30, column: 31, scope: !7)
!29 = !DILocation(line: 30, column: 36, scope: !7)
!30 = !DILocation(line: 31, column: 31, scope: !7)
!31 = !DILocation(line: 31, column: 38, scope: !7)
!32 = !DILocation(line: 32, column: 31, scope: !7)
!33 = !DILocation(line: 32, column: 42, scope: !7)
!34 = !DILocation(line: 33, column: 31, scope: !7)
!35 = !DILocation(line: 33, column: 42, scope: !7)
!36 = !DILocation(line: 34, column: 31, scope: !7)
!37 = !DILocation(line: 34, column: 42, scope: !7)
!38 = !DILocation(line: 55, column: 21, scope: !7)
!39 = !DILocation(line: 56, column: 20, scope: !7)
!40 = !DILocation(line: 57, column: 20, scope: !7)
!41 = !DILocation(line: 58, column: 20, scope: !7)
!42 = !DILocation(line: 59, column: 20, scope: !7)
!43 = !DILocation(line: 62, column: 25, scope: !7)
!44 = !DILocation(line: 62, column: 37, scope: !7)
!45 = !DILocation(line: 61, column: 35, scope: !7)
!46 = !DILocation(line: 62, column: 4, scope: !7)
