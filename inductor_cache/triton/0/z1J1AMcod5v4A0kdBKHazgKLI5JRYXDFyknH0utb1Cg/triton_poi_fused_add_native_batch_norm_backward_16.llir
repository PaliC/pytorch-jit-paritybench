; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_native_batch_norm_backward_16(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 9, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 1, !dbg !12
  %15 = and i32 %14, 510, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = srem i32 %16, 32, !dbg !14
  %18 = sext i32 %16 to i64, !dbg !15
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !15
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !16
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !16
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !16
  %23 = bitcast i32 %21 to float, !dbg !16
  %24 = bitcast i32 %22 to float, !dbg !16
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !17
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !18
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !18
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !18
  %29 = bitcast i32 %27 to float, !dbg !18
  %30 = bitcast i32 %28 to float, !dbg !18
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !19
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !20
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !20
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !20
  %35 = bitcast i32 %33 to float, !dbg !20
  %36 = bitcast i32 %34 to float, !dbg !20
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !21
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 true) #1, !dbg !22
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !22
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !22
  %41 = bitcast i32 %39 to float, !dbg !22
  %42 = bitcast i32 %40 to float, !dbg !22
  %43 = sext i32 %17 to i64, !dbg !23
  %44 = getelementptr float, ptr addrspace(1) %4, i64 %43, !dbg !23
  %45 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !24
  %46 = extractvalue { i32, i32 } %45, 0, !dbg !24
  %47 = extractvalue { i32, i32 } %45, 1, !dbg !24
  %48 = bitcast i32 %46 to float, !dbg !24
  %49 = bitcast i32 %47 to float, !dbg !24
  %50 = getelementptr float, ptr addrspace(1) %5, i64 %43, !dbg !25
  %51 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %50, i1 true) #1, !dbg !26
  %52 = extractvalue { i32, i32 } %51, 0, !dbg !26
  %53 = extractvalue { i32, i32 } %51, 1, !dbg !26
  %54 = bitcast i32 %52 to float, !dbg !26
  %55 = bitcast i32 %53 to float, !dbg !26
  %56 = getelementptr float, ptr addrspace(1) %6, i64 %43, !dbg !27
  %57 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %56, i1 true) #1, !dbg !28
  %58 = extractvalue { i32, i32 } %57, 0, !dbg !28
  %59 = extractvalue { i32, i32 } %57, 1, !dbg !28
  %60 = bitcast i32 %58 to float, !dbg !28
  %61 = bitcast i32 %59 to float, !dbg !28
  %62 = fadd float %35, %41, !dbg !29
  %63 = fadd float %36, %42, !dbg !29
  %64 = fadd float %62, %29, !dbg !30
  %65 = fadd float %63, %30, !dbg !30
  %66 = fadd float %64, %23, !dbg !31
  %67 = fadd float %65, %24, !dbg !31
  %68 = fsub float %66, %48, !dbg !32
  %69 = fsub float %67, %49, !dbg !32
  %70 = fsub float %64, %54, !dbg !33
  %71 = fsub float %65, %55, !dbg !33
  %72 = fsub float %62, %60, !dbg !34
  %73 = fsub float %63, %61, !dbg !34
  %74 = bitcast float %68 to i32, !dbg !35
  %75 = bitcast float %69 to i32, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %74, i32 %75, ptr addrspace(1) %19, i1 true) #1, !dbg !35
  %76 = getelementptr float, ptr addrspace(1) %7, i64 %18, !dbg !36
  %77 = bitcast float %70 to i32, !dbg !37
  %78 = bitcast float %71 to i32, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %77, i32 %78, ptr addrspace(1) %76, i1 true) #1, !dbg !37
  %79 = getelementptr float, ptr addrspace(1) %8, i64 %18, !dbg !38
  %80 = bitcast float %72 to i32, !dbg !39
  %81 = bitcast float %73 to i32, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %80, i32 %81, ptr addrspace(1) %79, i1 true) #1, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctqb7uvw6c73imsbsotf7b3k4cqqm6xor43vduy4i3pddspq22ig.py", directory: "inductor_cache/tq")
!4 = !{ptr @triton_poi_fused_add_native_batch_norm_backward_16, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_native_batch_norm_backward_16, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_native_batch_norm_backward_16", linkageName: "triton_poi_fused_add_native_batch_norm_backward_16", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 26, column: 39, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 30, scope: !7)
!20 = !DILocation(line: 28, column: 35, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 31, column: 30, scope: !7)
!26 = !DILocation(line: 31, column: 35, scope: !7)
!27 = !DILocation(line: 32, column: 31, scope: !7)
!28 = !DILocation(line: 32, column: 36, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 34, column: 18, scope: !7)
!31 = !DILocation(line: 35, column: 18, scope: !7)
!32 = !DILocation(line: 36, column: 18, scope: !7)
!33 = !DILocation(line: 37, column: 19, scope: !7)
!34 = !DILocation(line: 38, column: 19, scope: !7)
!35 = !DILocation(line: 39, column: 39, scope: !7)
!36 = !DILocation(line: 40, column: 25, scope: !7)
!37 = !DILocation(line: 40, column: 37, scope: !7)
!38 = !DILocation(line: 41, column: 25, scope: !7)
!39 = !DILocation(line: 41, column: 37, scope: !7)
!40 = !DILocation(line: 41, column: 4, scope: !7)
