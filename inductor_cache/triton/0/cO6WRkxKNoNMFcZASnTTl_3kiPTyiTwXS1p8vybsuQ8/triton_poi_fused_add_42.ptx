//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_42 // -- Begin function triton_poi_fused_add_42
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_42
.visible .entry triton_poi_fused_add_42(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_42_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_42_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_42_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_42_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_42_param_4,
	.param .u32 triton_poi_fused_add_42_param_5,
	.param .u32 triton_poi_fused_add_42_param_6
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b32 	%r<194>;
	.reg .f32 	%f<101>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused_add_42_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused_add_42_param_1];
$L__tmp0:
	.loc	1 22 28                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:22:33
	shl.b32 	%r102, %r1, 8;
	ld.param.u64 	%rd20, [triton_poi_fused_add_42_param_2];
	ld.param.u64 	%rd21, [triton_poi_fused_add_42_param_3];
	.loc	1 23 44                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:23:44
	mov.u32 	%r103, %tid.x;
	ld.param.u64 	%rd22, [triton_poi_fused_add_42_param_4];
	bfe.u32 	%r104, %r103, 2, 6;
	or.b32  	%r105, %r104, 64;
	or.b32  	%r106, %r104, 128;
	or.b32  	%r107, %r104, 192;
	shl.b32 	%r108, %r103, 2;
	and.b32  	%r109, %r108, 12;
	and.b32  	%r110, %r108, 252;
	and.b32  	%r111, %r103, 255;
	.loc	1 23 23                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:23:23
	or.b32  	%r112, %r102, %r104;
	or.b32  	%r113, %r102, %r105;
	or.b32  	%r114, %r102, %r106;
	or.b32  	%r115, %r102, %r107;
	or.b32  	%r116, %r102, %r110;
	or.b32  	%r117, %r102, %r111;
	.loc	1 25 28                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:25:33
	shl.b32 	%r118, %r2, 4;
	.loc	1 26 44                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:26:44
	bfe.u32 	%r119, %r103, 6, 2;
	.loc	1 26 23                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:26:23
	or.b32  	%r120, %r118, %r109;
	or.b32  	%r121, %r118, %r119;
	or.b32  	%r122, %r121, 4;
	or.b32  	%r123, %r121, 8;
	or.b32  	%r124, %r121, 12;
	.loc	1 27 21                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:27:21
	setp.lt.s32 	%p1, %r120, 16;
	setp.lt.s32 	%p9, %r121, 16;
	setp.lt.s32 	%p10, %r122, 16;
	setp.lt.s32 	%p11, %r123, 16;
	setp.lt.s32 	%p12, %r124, 16;
	.loc	1 30 19                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:30:19
	bfe.s32 	%r125, %r1, 23, 1;
	shr.u32 	%r126, %r125, 23;
	add.s32 	%r127, %r117, %r126;
	and.b32  	%r128, %r127, -512;
	sub.s32 	%r129, %r117, %r128;
	.loc	1 31 38                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:31:38
	shl.b32 	%r130, %r112, 4;
	shl.b32 	%r131, %r113, 4;
	shl.b32 	%r132, %r114, 4;
	shl.b32 	%r133, %r115, 4;
	.loc	1 31 35                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:31:35
	add.s32 	%r134, %r120, %r130;
	add.s32 	%r135, %r120, %r131;
	add.s32 	%r136, %r120, %r132;
	add.s32 	%r137, %r120, %r133;
	.loc	1 31 30                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:31:30
	mul.wide.s32 	%rd23, %r134, 4;
	add.s64 	%rd1, %rd18, %rd23;
	mul.wide.s32 	%rd24, %r135, 4;
	add.s64 	%rd2, %rd18, %rd24;
	mul.wide.s32 	%rd25, %r136, 4;
	add.s64 	%rd3, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r137, 4;
	add.s64 	%rd4, %rd18, %rd26;
	.loc	1 31 43                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:31:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 32 30                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:32:30
	add.s64 	%rd5, %rd19, %rd23;
	add.s64 	%rd6, %rd19, %rd24;
	add.s64 	%rd7, %rd19, %rd25;
	add.s64 	%rd8, %rd19, %rd26;
	.loc	1 32 43                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:32:43
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r23;
	mov.b32 	%f22, %r24;
	mov.b32 	%f23, %r25;
	mov.b32 	%f24, %r26;
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r27;
	mov.b32 	%f26, %r28;
	mov.b32 	%f27, %r29;
	mov.b32 	%f28, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r31;
	mov.b32 	%f30, %r32;
	mov.b32 	%f31, %r33;
	mov.b32 	%f32, %r34;
	.loc	1 33 40                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:33:40
	shl.b32 	%r138, %r121, 11;
	shl.b32 	%r139, %r122, 11;
	shl.b32 	%r140, %r123, 11;
	shl.b32 	%r141, %r124, 11;
	.loc	1 33 35                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:33:35
	add.s32 	%r142, %r138, %r116;
	add.s32 	%r143, %r116, %r139;
	add.s32 	%r144, %r116, %r140;
	add.s32 	%r145, %r116, %r141;
	.loc	1 33 30                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:33:30
	mul.wide.s32 	%rd27, %r142, 4;
	add.s64 	%rd9, %rd20, %rd27;
	mul.wide.s32 	%rd28, %r143, 4;
	add.s64 	%rd10, %rd20, %rd28;
	mul.wide.s32 	%rd29, %r144, 4;
	add.s64 	%rd11, %rd20, %rd29;
	mul.wide.s32 	%rd30, %r145, 4;
	add.s64 	%rd12, %rd20, %rd30;
	.loc	1 33 45                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:33:45
	// begin inline asm
	mov.u32 %r52, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r58, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r52, %r54, %r56, %r58 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	mov.u32 %r62, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r66, 0x0;
	@%p10 ld.global.L1::evict_last.v4.b32 { %r60, %r62, %r64, %r66 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r68, 0x0;
	mov.u32 %r70, 0x0;
	mov.u32 %r72, 0x0;
	mov.u32 %r74, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r68, %r70, %r72, %r74 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r76, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r82, 0x0;
	@%p12 ld.global.L1::evict_last.v4.b32 { %r76, %r78, %r80, %r82 }, [ %rd12 + 0 ];
	// end inline asm
	shl.b32 	%r146, %r103, 6;
	and.b32  	%r147, %r146, 4032;
	or.b32  	%r148, %r147, %r119;
	and.b32  	%r149, %r108, 1020;
	shr.u32 	%r150, %r147, 2;
	mov.u32 	%r151, global_smem;
	add.s32 	%r152, %r151, %r150;
	shl.b32 	%r153, %r148, 2;
	add.s32 	%r51, %r152, %r153;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	or.b32  	%r154, %r147, 16;
	shr.u32 	%r155, %r154, 2;
	add.s32 	%r156, %r151, %r155;
	add.s32 	%r157, %r156, %r153;
	add.s32 	%r53, %r157, 64;
	// begin inline asm
	@%p13 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	or.b32  	%r158, %r147, 32;
	shr.u32 	%r159, %r158, 2;
	add.s32 	%r160, %r151, %r159;
	add.s32 	%r161, %r160, %r153;
	add.s32 	%r55, %r161, 128;
	// begin inline asm
	@%p13 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	or.b32  	%r162, %r147, 48;
	shr.u32 	%r163, %r162, 2;
	add.s32 	%r164, %r151, %r163;
	add.s32 	%r165, %r164, %r153;
	add.s32 	%r57, %r165, 192;
	// begin inline asm
	@%p13 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r51, 16;
	// begin inline asm
	@%p13 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r157, 80;
	// begin inline asm
	@%p13 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r161, 144;
	// begin inline asm
	@%p13 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r65, %r165, 208;
	// begin inline asm
	@%p13 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r51, 32;
	// begin inline asm
	@%p13 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r157, 96;
	// begin inline asm
	@%p13 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r161, 160;
	// begin inline asm
	@%p13 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	add.s32 	%r73, %r165, 224;
	// begin inline asm
	@%p13 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	add.s32 	%r75, %r51, 48;
	// begin inline asm
	@%p13 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	add.s32 	%r77, %r157, 112;
	// begin inline asm
	@%p13 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	add.s32 	%r79, %r161, 176;
	// begin inline asm
	@%p13 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	add.s32 	%r81, %r165, 240;
	// begin inline asm
	@%p13 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r166, %r103, 252;
	add.s32 	%r167, %r151, %r166;
	shl.b32 	%r168, %r149, 2;
	add.s32 	%r169, %r167, %r168;
	ld.shared.f32 	%f33, [%r169];
	ld.shared.f32 	%f34, [%r169+4];
	ld.shared.f32 	%f35, [%r169+8];
	ld.shared.f32 	%f36, [%r169+12];
	or.b32  	%r170, %r149, 1024;
	shr.u32 	%r171, %r170, 2;
	and.b32  	%r172, %r171, 508;
	add.s32 	%r173, %r151, %r172;
	add.s32 	%r174, %r173, %r168;
	ld.shared.f32 	%f37, [%r174+4096];
	ld.shared.f32 	%f38, [%r174+4100];
	ld.shared.f32 	%f39, [%r174+4104];
	ld.shared.f32 	%f40, [%r174+4108];
	or.b32  	%r175, %r149, 2048;
	shr.u32 	%r176, %r175, 2;
	and.b32  	%r177, %r176, 764;
	add.s32 	%r178, %r151, %r177;
	add.s32 	%r179, %r178, %r168;
	ld.shared.f32 	%f41, [%r179+8192];
	ld.shared.f32 	%f42, [%r179+8196];
	ld.shared.f32 	%f43, [%r179+8200];
	ld.shared.f32 	%f44, [%r179+8204];
	or.b32  	%r180, %r149, 3072;
	shr.u32 	%r181, %r180, 2;
	and.b32  	%r182, %r181, 1020;
	add.s32 	%r183, %r151, %r182;
	add.s32 	%r184, %r183, %r168;
	ld.shared.f32 	%f45, [%r184+12288];
	ld.shared.f32 	%f46, [%r184+12292];
	ld.shared.f32 	%f47, [%r184+12296];
	ld.shared.f32 	%f48, [%r184+12300];
	.loc	1 34 30                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:34:30
	mul.wide.s32 	%rd31, %r129, 4;
	add.s64 	%rd13, %rd21, %rd31;
	.loc	1 34 35                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:34:35
	// begin inline asm
	mov.u32 %r85, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r85 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 35 18                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:35:18
	add.f32 	%f49, %f1, %f17;
	add.f32 	%f50, %f2, %f18;
	add.f32 	%f51, %f3, %f19;
	add.f32 	%f52, %f4, %f20;
	add.f32 	%f53, %f5, %f21;
	add.f32 	%f54, %f6, %f22;
	add.f32 	%f55, %f7, %f23;
	add.f32 	%f56, %f8, %f24;
	add.f32 	%f57, %f9, %f25;
	add.f32 	%f58, %f10, %f26;
	add.f32 	%f59, %f11, %f27;
	add.f32 	%f60, %f12, %f28;
	add.f32 	%f61, %f13, %f29;
	add.f32 	%f62, %f14, %f30;
	add.f32 	%f63, %f15, %f31;
	add.f32 	%f64, %f16, %f32;
	.loc	1 37 18                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:37:18
	bar.sync 	0;
	shl.b32 	%r185, %r111, 3;
	add.s32 	%r84, %r151, %r185;
	// begin inline asm
	@%p13 st.shared.b32 [ %r84 + 0 ], %r85;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r186, %r104, 3;
	add.s32 	%r187, %r151, %r186;
	ld.shared.f32 	%f65, [%r187];
	shl.b32 	%r188, %r105, 3;
	add.s32 	%r189, %r151, %r188;
	ld.shared.f32 	%f66, [%r189];
	shl.b32 	%r190, %r106, 3;
	add.s32 	%r191, %r151, %r190;
	ld.shared.f32 	%f67, [%r191];
	shl.b32 	%r192, %r107, 3;
	add.s32 	%r193, %r151, %r192;
	ld.shared.f32 	%f68, [%r193];
	.loc	1 36 18                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:36:18
	add.f32 	%f69, %f33, %f65;
	add.f32 	%f70, %f34, %f65;
	add.f32 	%f71, %f35, %f65;
	add.f32 	%f72, %f36, %f65;
	add.f32 	%f73, %f37, %f66;
	add.f32 	%f74, %f38, %f66;
	add.f32 	%f75, %f39, %f66;
	add.f32 	%f76, %f40, %f66;
	add.f32 	%f77, %f41, %f67;
	add.f32 	%f78, %f42, %f67;
	add.f32 	%f79, %f43, %f67;
	add.f32 	%f80, %f44, %f67;
	add.f32 	%f81, %f45, %f68;
	add.f32 	%f82, %f46, %f68;
	add.f32 	%f83, %f47, %f68;
	add.f32 	%f84, %f48, %f68;
	.loc	1 37 18                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:37:18
	add.f32 	%f85, %f49, %f69;
	add.f32 	%f86, %f50, %f70;
	add.f32 	%f87, %f51, %f71;
	add.f32 	%f88, %f52, %f72;
	add.f32 	%f89, %f53, %f73;
	add.f32 	%f90, %f54, %f74;
	add.f32 	%f91, %f55, %f75;
	add.f32 	%f92, %f56, %f76;
	add.f32 	%f93, %f57, %f77;
	add.f32 	%f94, %f58, %f78;
	add.f32 	%f95, %f59, %f79;
	add.f32 	%f96, %f60, %f80;
	add.f32 	%f97, %f61, %f81;
	add.f32 	%f98, %f62, %f82;
	add.f32 	%f99, %f63, %f83;
	add.f32 	%f100, %f64, %f84;
	.loc	1 38 25                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:38:25
	add.s64 	%rd14, %rd22, %rd23;
	add.s64 	%rd15, %rd22, %rd24;
	add.s64 	%rd16, %rd22, %rd25;
	add.s64 	%rd17, %rd22, %rd26;
	.loc	1 38 44                         // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:38:44
	mov.b32 	%r86, %f85;
	mov.b32 	%r87, %f86;
	mov.b32 	%r88, %f87;
	mov.b32 	%r89, %f88;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd14 + 0 ], { %r86, %r87, %r88, %r89 };
	// end inline asm
	mov.b32 	%r90, %f89;
	mov.b32 	%r91, %f90;
	mov.b32 	%r92, %f91;
	mov.b32 	%r93, %f92;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd15 + 0 ], { %r90, %r91, %r92, %r93 };
	// end inline asm
	mov.b32 	%r94, %f93;
	mov.b32 	%r95, %f94;
	mov.b32 	%r96, %f95;
	mov.b32 	%r97, %f96;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd16 + 0 ], { %r94, %r95, %r96, %r97 };
	// end inline asm
	mov.b32 	%r98, %f97;
	mov.b32 	%r99, %f98;
	mov.b32 	%r100, %f99;
	mov.b32 	%r101, %f100;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r98, %r99, %r100, %r101 };
	// end inline asm
	.loc	1 38 4                          // cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qu/cqu6pfeqhesuehadha3fbvu5ike2tefs5qdw24uibtx4gnv7njy7.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 117
.b8 54
.b8 112
.b8 102
.b8 101
.b8 113
.b8 104
.b8 101
.b8 115
.b8 117
.b8 101
.b8 104
.b8 97
.b8 100
.b8 104
.b8 97
.b8 51
.b8 102
.b8 98
.b8 118
.b8 117
.b8 53
.b8 105
.b8 107
.b8 101
.b8 50
.b8 116
.b8 101
.b8 102
.b8 115
.b8 53
.b8 113
.b8 100
.b8 119
.b8 50
.b8 52
.b8 117
.b8 105
.b8 98
.b8 116
.b8 120
.b8 52
.b8 103
.b8 110
.b8 118
.b8 55
.b8 110
.b8 106
.b8 121
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
