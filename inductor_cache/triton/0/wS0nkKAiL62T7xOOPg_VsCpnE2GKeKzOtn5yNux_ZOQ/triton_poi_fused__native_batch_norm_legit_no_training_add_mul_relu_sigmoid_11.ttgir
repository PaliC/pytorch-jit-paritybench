#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_relu_sigmoid_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg15: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg16: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg17: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg18: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg19: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg20: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg21: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg22: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg23: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg24: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0), %arg25: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %4, %cst_2 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc7)
    %8 = tt.load %7 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = tt.addptr %9, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc9)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc11)
    %13 = tt.addptr %12, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc11)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc12)
    %15 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc13)
    %16 = tt.addptr %15, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc13)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc14)
    %18 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %19 = tt.addptr %18, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %21 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %22 = tt.addptr %21, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc17)
    %23 = tt.load %22 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %24 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc19)
    %25 = tt.addptr %24, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %27 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc21)
    %28 = tt.addptr %27, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc21)
    %29 = tt.load %28 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc22)
    %30 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc23)
    %31 = tt.addptr %30, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc23)
    %32 = tt.load %31 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc24)
    %33 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc25)
    %34 = tt.addptr %33, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc25)
    %35 = tt.load %34 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc26)
    %36 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc27)
    %37 = tt.addptr %36, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc27)
    %38 = tt.load %37 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc28)
    %39 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc29)
    %40 = tt.addptr %39, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc29)
    %41 = tt.load %40 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc30)
    %42 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc31)
    %43 = tt.addptr %42, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc31)
    %44 = tt.load %43 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc32)
    %45 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc33)
    %46 = tt.addptr %45, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc33)
    %47 = tt.load %46 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc34)
    %48 = tt.splat %arg15 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc35)
    %49 = tt.addptr %48, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc35)
    %50 = tt.load %49 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc36)
    %51 = tt.splat %arg16 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc37)
    %52 = tt.addptr %51, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc37)
    %53 = tt.load %52 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc38)
    %54 = tt.splat %arg17 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc39)
    %55 = tt.addptr %54, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc39)
    %56 = tt.load %55 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc40)
    %57 = tt.splat %arg18 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc41)
    %58 = tt.addptr %57, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc41)
    %59 = tt.load %58 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc42)
    %60 = tt.splat %arg19 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %61 = tt.addptr %60, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc43)
    %62 = tt.load %61 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc44)
    %63 = tt.splat %arg20 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc45)
    %64 = tt.addptr %63, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc45)
    %65 = tt.load %64 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc46)
    %66 = tt.splat %arg21 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc47)
    %67 = tt.addptr %66, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc47)
    %68 = tt.load %67 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc48)
    %69 = tt.splat %arg22 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc49)
    %70 = tt.addptr %69, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc49)
    %71 = tt.load %70 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc50)
    %72 = tt.splat %arg23 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc51)
    %73 = tt.addptr %72, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc51)
    %74 = tt.load %73 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc52)
    %75 = tt.splat %arg24 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc53)
    %76 = tt.addptr %75, %5 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc53)
    %77 = tt.load %76 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc54)
    %78 = arith.subf %8, %11 : tensor<512xf32, #blocked> loc(#loc55)
    %79 = arith.addf %14, %cst : tensor<512xf32, #blocked> loc(#loc56)
    %80 = tt.extern_elementwise %79 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc57)
    %81 = arith.divf %cst_0, %80 : tensor<512xf32, #blocked> loc(#loc58)
    %82 = arith.mulf %78, %81 : tensor<512xf32, #blocked> loc(#loc59)
    %83 = arith.mulf %82, %17 : tensor<512xf32, #blocked> loc(#loc60)
    %84 = arith.addf %83, %20 : tensor<512xf32, #blocked> loc(#loc61)
    %85 = arith.subf %23, %26 : tensor<512xf32, #blocked> loc(#loc62)
    %86 = arith.addf %29, %cst : tensor<512xf32, #blocked> loc(#loc63)
    %87 = tt.extern_elementwise %86 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc64)
    %88 = arith.divf %cst_0, %87 : tensor<512xf32, #blocked> loc(#loc65)
    %89 = arith.mulf %85, %88 : tensor<512xf32, #blocked> loc(#loc66)
    %90 = arith.mulf %89, %32 : tensor<512xf32, #blocked> loc(#loc67)
    %91 = arith.addf %90, %35 : tensor<512xf32, #blocked> loc(#loc68)
    %92 = arith.addf %84, %91 : tensor<512xf32, #blocked> loc(#loc69)
    %93 = arith.subf %38, %41 : tensor<512xf32, #blocked> loc(#loc70)
    %94 = arith.addf %44, %cst : tensor<512xf32, #blocked> loc(#loc71)
    %95 = tt.extern_elementwise %94 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc72)
    %96 = arith.divf %cst_0, %95 : tensor<512xf32, #blocked> loc(#loc73)
    %97 = arith.mulf %93, %96 : tensor<512xf32, #blocked> loc(#loc74)
    %98 = arith.mulf %97, %47 : tensor<512xf32, #blocked> loc(#loc75)
    %99 = arith.addf %98, %50 : tensor<512xf32, #blocked> loc(#loc76)
    %100 = arith.subf %cst_1, %92 : tensor<512xf32, #blocked> loc(#loc104)
    %101 = math.exp %100 : tensor<512xf32, #blocked> loc(#loc105)
    %102 = arith.addf %101, %cst_0 : tensor<512xf32, #blocked> loc(#loc106)
    %103 = arith.divf %cst_0, %102 : tensor<512xf32, #blocked> loc(#loc107)
    %104 = arith.mulf %99, %103 : tensor<512xf32, #blocked> loc(#loc82)
    %105 = arith.subf %104, %53 : tensor<512xf32, #blocked> loc(#loc83)
    %106 = arith.addf %56, %cst : tensor<512xf32, #blocked> loc(#loc84)
    %107 = tt.extern_elementwise %106 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc85)
    %108 = arith.divf %cst_0, %107 : tensor<512xf32, #blocked> loc(#loc86)
    %109 = arith.mulf %105, %108 : tensor<512xf32, #blocked> loc(#loc87)
    %110 = arith.mulf %109, %59 : tensor<512xf32, #blocked> loc(#loc88)
    %111 = arith.subf %62, %65 : tensor<512xf32, #blocked> loc(#loc89)
    %112 = arith.addf %68, %cst : tensor<512xf32, #blocked> loc(#loc90)
    %113 = tt.extern_elementwise %112 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc91)
    %114 = arith.divf %cst_0, %113 : tensor<512xf32, #blocked> loc(#loc92)
    %115 = arith.mulf %111, %114 : tensor<512xf32, #blocked> loc(#loc93)
    %116 = arith.mulf %115, %71 : tensor<512xf32, #blocked> loc(#loc94)
    %117 = arith.addf %116, %74 : tensor<512xf32, #blocked> loc(#loc95)
    %118 = arith.addf %110, %77 : tensor<512xf32, #blocked> loc(#loc96)
    %119 = arith.addf %117, %118 : tensor<512xf32, #blocked> loc(#loc97)
    %120 = arith.cmpf ogt, %cst_1, %119 : tensor<512xf32, #blocked> loc(#loc108)
    %121 = arith.select %120, %cst_1, %119 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc109)
    %122 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc101)
    %123 = tt.addptr %122, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc101)
    tt.store %123, %121 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc102)
    tt.return loc(#loc103)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":21:28)
#loc3 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":21:33)
#loc4 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":22:36)
#loc5 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":22:23)
#loc6 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":25:19)
#loc7 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":26:30)
#loc8 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":26:35)
#loc9 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":27:30)
#loc10 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":27:35)
#loc11 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":28:30)
#loc12 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":28:35)
#loc13 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":29:31)
#loc14 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":29:36)
#loc15 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":30:31)
#loc16 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":30:36)
#loc17 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":31:31)
#loc18 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":31:36)
#loc19 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":32:31)
#loc20 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":32:36)
#loc21 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":33:31)
#loc22 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":33:36)
#loc23 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":34:31)
#loc24 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":34:36)
#loc25 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":35:31)
#loc26 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":35:36)
#loc27 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":36:32)
#loc28 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":36:37)
#loc29 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":37:32)
#loc30 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":37:37)
#loc31 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":38:32)
#loc32 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":38:37)
#loc33 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":39:32)
#loc34 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":39:37)
#loc35 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":40:32)
#loc36 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":40:37)
#loc37 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":41:32)
#loc38 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":41:37)
#loc39 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":42:32)
#loc40 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":42:37)
#loc41 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":43:32)
#loc42 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":43:37)
#loc43 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":44:32)
#loc44 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":44:37)
#loc45 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":45:32)
#loc46 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":45:37)
#loc47 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":46:32)
#loc48 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":46:37)
#loc49 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":47:32)
#loc50 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":47:37)
#loc51 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":48:32)
#loc52 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":48:37)
#loc53 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":49:32)
#loc54 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":49:37)
#loc55 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":50:18)
#loc56 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":52:18)
#loc57 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":53:26)
#loc58 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":55:18)
#loc59 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":58:19)
#loc60 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":59:20)
#loc61 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":60:20)
#loc62 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":61:20)
#loc63 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":62:20)
#loc64 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":63:27)
#loc65 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":64:19)
#loc66 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":66:20)
#loc67 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":67:20)
#loc68 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":68:20)
#loc69 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":69:20)
#loc70 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":70:20)
#loc71 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":71:20)
#loc72 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":72:27)
#loc73 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":73:19)
#loc74 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":75:20)
#loc75 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":76:20)
#loc76 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":77:20)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc78 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":78:23)
#loc79 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc80 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc81 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc82 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":79:20)
#loc83 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":80:20)
#loc84 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":81:20)
#loc85 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":82:27)
#loc86 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":83:19)
#loc87 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":85:20)
#loc88 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":86:20)
#loc89 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":87:20)
#loc90 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":88:20)
#loc91 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":89:27)
#loc92 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":90:19)
#loc93 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":92:20)
#loc94 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":93:20)
#loc95 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":94:20)
#loc96 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":95:20)
#loc97 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":96:20)
#loc98 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc99 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":98:42)
#loc100 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc101 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":99:28)
#loc102 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":99:40)
#loc103 = loc("inductor_cache/a4/ca4aiznb5sxjpumiln2y5myvzgphbfb5iinkc2mlyqsl5f57sm5w.py":99:4)
#loc104 = loc(callsite(#loc77 at #loc78))
#loc105 = loc(callsite(#loc79 at #loc78))
#loc106 = loc(callsite(#loc80 at #loc78))
#loc107 = loc(callsite(#loc81 at #loc78))
#loc108 = loc(callsite(#loc98 at #loc99))
#loc109 = loc(callsite(#loc100 at #loc99))
