//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_9,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_10,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<114>;
	.reg .f32 	%f<70>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:22:33
	shl.b32 	%r64, %r1, 5;
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_2];
	.loc	1 23 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:44
	mov.u32 	%r65, %tid.x;
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_3];
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_4];
	bfe.u32 	%r67, %r65, 2, 5;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_5];
	shl.b32 	%r68, %r65, 2;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_6];
	and.b32  	%r69, %r68, 12;
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_7];
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	or.b32  	%r70, %r64, %r67;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_8];
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training__prelu_kernel_add_convolution_32_param_9];
	.loc	1 25 28                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:25:33
	shl.b32 	%r71, %r2, 4;
	.loc	1 26 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:26:23
	or.b32  	%r72, %r71, %r69;
	.loc	1 27 21                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:27:21
	setp.lt.s32 	%p1, %r72, 16;
	.loc	1 32 42                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:42
	shl.b32 	%r73, %r70, 4;
	.loc	1 32 39                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:39
	add.s32 	%r74, %r72, %r73;
	.loc	1 32 34                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:34
	mul.wide.s32 	%rd21, %r74, 4;
	add.s64 	%rd1, %rd12, %rd21;
	.loc	1 32 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:47
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:30
	mul.wide.s32 	%rd22, %r72, 4;
	add.s64 	%rd2, %rd13, %rd22;
	.loc	1 33 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:30
	add.s64 	%rd3, %rd14, %rd22;
	.loc	1 34 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:35:30
	add.s64 	%rd4, %rd15, %rd22;
	.loc	1 35 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:35:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r15;
	mov.b32 	%f2, %r16;
	mov.b32 	%f3, %r17;
	mov.b32 	%f4, %r18;
	.loc	1 36 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:31
	add.s64 	%rd5, %rd16, %rd22;
	.loc	1 36 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:36
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:31
	add.s64 	%rd6, %rd17, %rd22;
	.loc	1 37 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:36
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:31
	add.s64 	%rd7, %rd18, %rd21;
	.loc	1 38 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:44
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	mov.pred 	%p8, -1;
	.loc	1 39 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:39:20
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p8 ld.global.b32 { %r31 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 44 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:44:18
	add.f32 	%f5, %f1, 0f3727C5AC;
	add.f32 	%f6, %f2, 0f3727C5AC;
	add.f32 	%f7, %f3, 0f3727C5AC;
	add.f32 	%f8, %f4, 0f3727C5AC;
	.loc	1 45 26                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:45:26
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 39 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:39:20
	mov.b32 	%f13, %r31;
	.loc	1 23 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:44
	and.b32  	%r75, %r68, 28;
	.loc	1 23 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:23:23
	or.b32  	%r76, %r64, %r75;
	.loc	1 31 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:31:19
	bfe.s32 	%r77, %r1, 26, 1;
	shr.u32 	%r78, %r77, 22;
	add.s32 	%r79, %r76, %r78;
	.loc	1 30 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:30:19
	and.b32  	%r80, %r79, -1024;
	sub.s32 	%r81, %r76, %r80;
	.loc	1 26 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:26:44
	bfe.u32 	%r82, %r65, 3, 4;
	.loc	1 26 23                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:26:23
	or.b32  	%r83, %r71, %r82;
	.loc	1 27 21                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:27:21
	setp.lt.s32 	%p15, %r83, 16;
	.loc	1 47 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:47:19
	mov.b32 	%r34, %f9;
	mov.b32 	%r33, 1065353216;
	// begin inline asm
	div.full.f32 %r32, %r33, %r34;
	// end inline asm
	mov.b32 	%f14, %r32;
	mov.b32 	%r37, %f10;
	// begin inline asm
	div.full.f32 %r35, %r33, %r37;
	// end inline asm
	mov.b32 	%f15, %r35;
	mov.b32 	%r40, %f11;
	// begin inline asm
	div.full.f32 %r38, %r33, %r40;
	// end inline asm
	mov.b32 	%f16, %r38;
	mov.b32 	%r43, %f12;
	// begin inline asm
	div.full.f32 %r41, %r33, %r43;
	// end inline asm
	mov.b32 	%f17, %r41;
	.loc	1 32 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:32:47
	mov.b32 	%f18, %r6;
	mov.b32 	%f19, %r5;
	mov.b32 	%f20, %r4;
	mov.b32 	%f21, %r3;
	.loc	1 33 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:33:35
	mov.b32 	%f22, %r10;
	mov.b32 	%f23, %r9;
	mov.b32 	%f24, %r8;
	mov.b32 	%f25, %r7;
	.loc	1 41 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:41:18
	add.f32 	%f26, %f21, %f25;
	add.f32 	%f27, %f20, %f24;
	add.f32 	%f28, %f19, %f23;
	add.f32 	%f29, %f18, %f22;
	.loc	1 34 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:34:35
	mov.b32 	%f30, %r11;
	mov.b32 	%f31, %r12;
	mov.b32 	%f32, %r13;
	mov.b32 	%f33, %r14;
	.loc	1 42 18                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:42:18
	sub.f32 	%f34, %f29, %f33;
	sub.f32 	%f35, %f28, %f32;
	sub.f32 	%f36, %f27, %f31;
	sub.f32 	%f37, %f26, %f30;
	.loc	1 38 44                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:38:44
	mov.b32 	%f38, %r30;
	mov.b32 	%f39, %r29;
	mov.b32 	%f40, %r28;
	mov.b32 	%f41, %r27;
	.loc	1 37 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:37:36
	mov.b32 	%f42, %r23;
	mov.b32 	%f43, %r24;
	mov.b32 	%f44, %r25;
	mov.b32 	%f45, %r26;
	.loc	1 36 36                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:36:36
	mov.b32 	%f46, %r19;
	mov.b32 	%f47, %r20;
	mov.b32 	%f48, %r21;
	mov.b32 	%f49, %r22;
	.loc	1 50 19                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:50:19
	mul.f32 	%f50, %f37, %f14;
	mul.f32 	%f51, %f36, %f15;
	mul.f32 	%f52, %f35, %f16;
	mul.f32 	%f53, %f34, %f17;
	.loc	1 52 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:52:20
	fma.rn.f32 	%f54, %f53, %f49, %f45;
	fma.rn.f32 	%f55, %f52, %f48, %f44;
	fma.rn.f32 	%f56, %f51, %f47, %f43;
	fma.rn.f32 	%f57, %f50, %f46, %f42;
	.loc	1 53 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:53:20
	add.f32 	%f58, %f57, %f41;
	add.f32 	%f59, %f56, %f40;
	add.f32 	%f60, %f55, %f39;
	add.f32 	%f61, %f54, %f38;
	.loc	1 55 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:55:20
	setp.gt.f32 	%p16, %f61, 0f00000000;
	setp.gt.f32 	%p17, %f60, 0f00000000;
	setp.gt.f32 	%p18, %f59, 0f00000000;
	setp.gt.f32 	%p19, %f58, 0f00000000;
	.loc	1 56 20                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:56:20
	mul.f32 	%f62, %f58, %f13;
	mul.f32 	%f63, %f59, %f13;
	mul.f32 	%f64, %f60, %f13;
	mul.f32 	%f65, %f61, %f13;
	.loc	1 57 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:57:35
	selp.f32 	%f66, %f58, %f62, %p19;
	selp.f32 	%f67, %f59, %f63, %p18;
	selp.f32 	%f68, %f60, %f64, %p17;
	selp.f32 	%f69, %f61, %f65, %p16;
	.loc	1 58 4                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:58:4
	bar.sync 	0;
	.loc	1 59 47                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:59:47
	mov.b32 	%r44, %f26;
	mov.b32 	%r45, %f27;
	mov.b32 	%r46, %f28;
	mov.b32 	%r47, %f29;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	.loc	1 60 25                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:60:25
	add.s64 	%rd10, %rd19, %rd21;
	.loc	1 60 45                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:60:45
	mov.b32 	%r48, %f58;
	mov.b32 	%r49, %f59;
	mov.b32 	%r50, %f60;
	mov.b32 	%r51, %f61;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r48, %r49, %r50, %r51 };
	// end inline asm
	.loc	1 61 35                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:35
	shl.b32 	%r84, %r83, 10;
	.loc	1 61 30                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:30
	add.s32 	%r85, %r84, %r81;
	.loc	1 61 46                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:46
	shl.b32 	%r86, %r79, 4;
	and.b32  	%r87, %r86, -16384;
	.loc	1 61 40                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:40
	add.s32 	%r88, %r85, %r87;
	.loc	1 61 25                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:25
	mul.wide.s32 	%rd23, %r88, 4;
	add.s64 	%rd11, %rd20, %rd23;
	.loc	1 61 58                         // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:58
	shl.b32 	%r89, %r65, 7;
	and.b32  	%r90, %r89, 384;
	or.b32  	%r91, %r90, %r67;
	shr.u32 	%r92, %r90, 1;
	mov.u32 	%r93, global_smem;
	add.s32 	%r94, %r93, %r92;
	shl.b32 	%r95, %r91, 2;
	add.s32 	%r52, %r94, %r95;
	mov.b32 	%r53, %f66;
	// begin inline asm
	@%p8 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	or.b32  	%r96, %r90, 32;
	shr.u32 	%r97, %r96, 1;
	add.s32 	%r98, %r93, %r97;
	add.s32 	%r99, %r98, %r95;
	add.s32 	%r54, %r99, 128;
	mov.b32 	%r55, %f67;
	// begin inline asm
	@%p8 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	or.b32  	%r100, %r90, 64;
	shr.u32 	%r101, %r100, 1;
	add.s32 	%r102, %r93, %r101;
	add.s32 	%r103, %r102, %r95;
	add.s32 	%r56, %r103, 256;
	mov.b32 	%r57, %f68;
	// begin inline asm
	@%p8 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	or.b32  	%r104, %r90, 96;
	shr.u32 	%r105, %r104, 1;
	add.s32 	%r106, %r93, %r105;
	add.s32 	%r107, %r106, %r95;
	add.s32 	%r58, %r107, 384;
	mov.b32 	%r59, %f69;
	// begin inline asm
	@%p8 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r108, %r65, 1;
	and.b32  	%r109, %r108, 240;
	add.s32 	%r110, %r93, %r109;
	shl.b32 	%r111, %r65, 4;
	and.b32  	%r112, %r111, 2032;
	add.s32 	%r113, %r110, %r112;
	ld.shared.v4.u32 	{%r60, %r61, %r62, %r63}, [%r113];
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd11 + 0 ], { %r60, %r61, %r62, %r63 };
	// end inline asm
	.loc	1 61 4                          // cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py:61:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fq/cfqt4pmzsz6crjntf63rptlcqidr5wxw62teq4xaps3knv2ujq7j.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 113
.b8 116
.b8 52
.b8 112
.b8 109
.b8 122
.b8 115
.b8 122
.b8 54
.b8 99
.b8 114
.b8 106
.b8 110
.b8 116
.b8 102
.b8 54
.b8 51
.b8 114
.b8 112
.b8 116
.b8 108
.b8 99
.b8 113
.b8 105
.b8 100
.b8 114
.b8 53
.b8 119
.b8 120
.b8 119
.b8 54
.b8 50
.b8 116
.b8 101
.b8 113
.b8 52
.b8 120
.b8 97
.b8 112
.b8 115
.b8 51
.b8 107
.b8 110
.b8 118
.b8 50
.b8 117
.b8 106
.b8 113
.b8 55
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
