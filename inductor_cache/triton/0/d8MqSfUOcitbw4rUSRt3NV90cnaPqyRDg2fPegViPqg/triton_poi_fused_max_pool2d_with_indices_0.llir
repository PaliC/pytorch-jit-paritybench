; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 62, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = icmp slt i32 %9, 64, !dbg !14
  %12 = srem i32 %10, 2, !dbg !15
  %13 = shl nsw i32 %12, 1, !dbg !16
  %14 = shl i32 %9, 2, !dbg !17
  %15 = add i32 %13, %14, !dbg !18
  %16 = sext i32 %14 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = sext i32 %15 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %11) #1, !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #1, !dbg !20
  %23 = bitcast i32 %22 to float, !dbg !20
  %24 = or disjoint i32 %14, 1, !dbg !21
  %25 = or disjoint i32 %15, 1, !dbg !21
  %26 = sext i32 %24 to i64, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !22
  %28 = sext i32 %25 to i64, !dbg !22
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !22
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %11) #1, !dbg !23
  %31 = bitcast i32 %30 to float, !dbg !23
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #1, !dbg !23
  %33 = bitcast i32 %32 to float, !dbg !23
  %34 = or disjoint i32 %14, 4, !dbg !24
  %35 = add i32 %15, 4, !dbg !24
  %36 = sext i32 %34 to i64, !dbg !25
  %37 = getelementptr float, ptr addrspace(1) %0, i64 %36, !dbg !25
  %38 = sext i32 %35 to i64, !dbg !25
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !25
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %11) #1, !dbg !26
  %41 = bitcast i32 %40 to float, !dbg !26
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %11) #1, !dbg !26
  %43 = bitcast i32 %42 to float, !dbg !26
  %44 = or disjoint i32 %14, 5, !dbg !27
  %45 = add i32 %15, 5, !dbg !27
  %46 = sext i32 %44 to i64, !dbg !28
  %47 = getelementptr float, ptr addrspace(1) %0, i64 %46, !dbg !28
  %48 = sext i32 %45 to i64, !dbg !28
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !28
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 %11) #1, !dbg !29
  %51 = bitcast i32 %50 to float, !dbg !29
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 %11) #1, !dbg !29
  %53 = bitcast i32 %52 to float, !dbg !29
  %54 = fcmp ogt float %31, %21, !dbg !30
  %55 = fcmp ogt float %33, %23, !dbg !30
  %56 = fcmp uno float %31, 0.000000e+00, !dbg !34
  %57 = fcmp uno float %33, 0.000000e+00, !dbg !34
  %58 = or i1 %54, %56, !dbg !35
  %59 = or i1 %55, %57, !dbg !35
  %60 = select i1 %58, float %31, float %21, !dbg !36
  %61 = select i1 %59, float %33, float %23, !dbg !36
  %62 = fcmp olt float %60, %41, !dbg !37
  %63 = fcmp olt float %61, %43, !dbg !37
  %64 = fcmp uno float %41, 0.000000e+00, !dbg !39
  %65 = fcmp uno float %43, 0.000000e+00, !dbg !39
  %66 = or i1 %64, %62, !dbg !40
  %67 = or i1 %65, %63, !dbg !40
  %68 = select i1 %66, float %41, float %60, !dbg !41
  %69 = select i1 %67, float %43, float %61, !dbg !41
  %70 = fcmp olt float %68, %51, !dbg !42
  %71 = fcmp olt float %69, %53, !dbg !42
  %72 = fcmp uno float %51, 0.000000e+00, !dbg !44
  %73 = fcmp uno float %53, 0.000000e+00, !dbg !44
  %74 = or i1 %72, %70, !dbg !45
  %75 = or i1 %73, %71, !dbg !45
  %76 = sext i32 %9 to i64, !dbg !46
  %77 = getelementptr float, ptr addrspace(1) %1, i64 %76, !dbg !46
  %78 = bitcast float %68 to i32, !dbg !47
  %79 = select i1 %74, i32 %50, i32 %78, !dbg !48
  %80 = bitcast float %69 to i32, !dbg !47
  %81 = select i1 %75, i32 %52, i32 %80, !dbg !48
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %79, i32 %81, ptr addrspace(1) %77, i1 %11) #1, !dbg !47
  ret void, !dbg !49
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cvqdu672qqyjicnsem257ubvfvi6bwo2mvvumme4tfnktxih2qyw.py", directory: "inductor_cache/vq")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 32, scope: !7)
!17 = !DILocation(line: 27, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 37, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 44, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 48, scope: !7)
!24 = !DILocation(line: 29, column: 41, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 48, scope: !7)
!27 = !DILocation(line: 30, column: 41, scope: !7)
!28 = !DILocation(line: 30, column: 30, scope: !7)
!29 = !DILocation(line: 30, column: 48, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 31, column: 40, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !38)
!38 = !DILocation(line: 32, column: 40, scope: !7)
!39 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !38)
!40 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !38)
!41 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !38)
!42 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !43)
!43 = !DILocation(line: 33, column: 40, scope: !7)
!44 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !43)
!45 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !43)
!46 = !DILocation(line: 34, column: 25, scope: !7)
!47 = !DILocation(line: 34, column: 36, scope: !7)
!48 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !43)
!49 = !DILocation(line: 34, column: 4, scope: !7)
