//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_35 // -- Begin function triton_poi_fused_cat_35
                                        // @triton_poi_fused_cat_35
.visible .entry triton_poi_fused_cat_35(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_35_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_35_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_35_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_35_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_35_param_4,
	.param .u32 triton_poi_fused_cat_35_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<48>;
	.reg .f32 	%f<42>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_cat_35_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_cat_35_param_1];
$L__tmp0:
	.loc	1 21 28                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:21:33
	shl.b32 	%r32, %r1, 8;
	ld.param.u64 	%rd8, [triton_poi_fused_cat_35_param_2];
	ld.param.u64 	%rd9, [triton_poi_fused_cat_35_param_3];
	.loc	1 22 36                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:22:36
	mov.u32 	%r33, %tid.x;
	shl.b32 	%r34, %r33, 1;
	ld.param.u64 	%rd10, [triton_poi_fused_cat_35_param_4];
	and.b32  	%r35, %r34, 254;
	.loc	1 22 23                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:22:23
	or.b32  	%r36, %r32, %r35;
	.loc	1 25 19                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:25:19
	mul.hi.s32 	%r38, %r36, 715827883;
	shr.u32 	%r39, %r38, 31;
	shr.s32 	%r40, %r38, 8;
	add.s32 	%r41, %r40, %r39;
	.loc	1 24 19                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:24:19
	mul.lo.s32 	%r42, %r41, 1536;
	sub.s32 	%r43, %r36, %r42;
	.loc	1 31 18                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:31:18
	setp.lt.s32 	%p1, %r43, 384;
	.loc	1 32 34                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:32:34
	mul.lo.s32 	%r44, %r41, 384;
	.loc	1 32 40                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:32:40
	add.s32 	%r45, %r44, %r43;
	.loc	1 32 30                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:32:30
	mul.wide.s32 	%rd11, %r45, 4;
	add.s64 	%rd1, %rd6, %rd11;
	mov.b32 	%r4, 0;
	.loc	1 32 46                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:32:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f9, %r2;
	mov.b32 	%f10, %r3;
	mov.f32 	%f11, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f12, %f11, %f9;
	sub.f32 	%f13, %f11, %f10;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f12, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f13, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f14, %f1, 0f3F800000;
	add.f32 	%f15, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r8, %f14;
	mov.b32 	%r7, 1065353216;
	// begin inline asm
	div.full.f32 %r6, %r7, %r8;
	// end inline asm
	mov.b32 	%f16, %r6;
	mov.b32 	%r11, %f15;
	// begin inline asm
	div.full.f32 %r9, %r7, %r11;
	// end inline asm
	mov.b32 	%f17, %r9;
$L__tmp2:
	.loc	1 34 18                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:34:18
	mul.f32 	%f18, %f16, %f9;
	mul.f32 	%f19, %f17, %f10;
	.loc	1 40 20                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:40:20
	add.s32 	%r46, %r43, -384;
	setp.lt.u32 	%p4, %r46, 384;
	.loc	1 41 31                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:41:31
	cvt.s64.s32 	%rd12, %r44;
	cvt.s64.s32 	%rd13, %r43;
	add.s64 	%rd14, %rd12, %rd13;
	shl.b64 	%rd15, %rd14, 2;
	add.s64 	%rd16, %rd7, %rd15;
	add.s64 	%rd2, %rd16, -1536;
	.loc	1 41 56                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:41:56
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r12, %r4;
	@!%p4 mov.u32 %r13, %r4;
	// end inline asm
	mov.b32 	%f20, %r12;
	mov.b32 	%f21, %r13;
	.loc	1 45 20                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:45:20
	add.s32 	%r47, %r43, -768;
	setp.lt.u32 	%p7, %r47, 384;
	.loc	1 46 31                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:46:31
	add.s64 	%rd17, %rd8, %rd15;
	add.s64 	%rd3, %rd17, -3072;
	.loc	1 46 56                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:46:56
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r16, %r17 }, [ %rd3 + 0 ];
	@!%p7 mov.u32 %r16, %r4;
	@!%p7 mov.u32 %r17, %r4;
	// end inline asm
	mov.b32 	%f22, %r16;
	mov.b32 	%f23, %r17;
	.loc	1 47 20                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:47:20
	setp.gt.s32 	%p10, %r43, 1151;
	.loc	1 50 31                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:50:31
	add.s64 	%rd18, %rd9, %rd11;
	add.s64 	%rd4, %rd18, -4608;
	.loc	1 50 57                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:50:57
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p10 ld.global.L1::evict_last.v2.b32 { %r20, %r21 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r20, %r4;
	@!%p10 mov.u32 %r21, %r4;
	// end inline asm
	mov.b32 	%f24, %r20;
	mov.b32 	%f25, %r21;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f26, %f11, %f24;
	sub.f32 	%f27, %f11, %f25;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f6, %f26, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f27, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f28, %f5, 0f3F800000;
	add.f32 	%f29, %f7, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r26, %f28;
	// begin inline asm
	div.full.f32 %r24, %r7, %r26;
	// end inline asm
	mov.b32 	%f30, %r24;
	mov.b32 	%r29, %f29;
	// begin inline asm
	div.full.f32 %r27, %r7, %r29;
	// end inline asm
	mov.b32 	%f31, %r27;
$L__tmp4:
	.loc	1 52 20                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:52:20
	mul.f32 	%f32, %f30, %f24;
	mul.f32 	%f33, %f31, %f25;
	.loc	1 54 35                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:54:35
	selp.f32 	%f34, %f32, 0f00000000, %p10;
	selp.f32 	%f35, %f33, 0f00000000, %p10;
	.loc	1 55 35                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:55:35
	selp.f32 	%f36, %f22, %f34, %p7;
	selp.f32 	%f37, %f23, %f35, %p7;
	.loc	1 56 35                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:56:35
	selp.f32 	%f38, %f20, %f36, %p4;
	selp.f32 	%f39, %f21, %f37, %p4;
	.loc	1 0 0                           // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:0:0
	selp.f32 	%f40, %f18, %f38, %p1;
	selp.f32 	%f41, %f19, %f39, %p1;
	.loc	1 58 25                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:58:25
	mul.wide.s32 	%rd19, %r36, 4;
	add.s64 	%rd5, %rd10, %rd19;
	.loc	1 58 37                         // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:58:37
	mov.b32 	%r30, %f40;
	mov.b32 	%r31, %f41;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd5 + 0 ], { %r30, %r31 };
	// end inline asm
	.loc	1 58 4                          // cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py:58:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/r5/cr53t4z6h5ogxdy33y4bvcv25u4khpmkyvt4qvdtdn7ztnbzkdlp.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 192                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 53
.b8 51
.b8 116
.b8 52
.b8 122
.b8 54
.b8 104
.b8 53
.b8 111
.b8 103
.b8 120
.b8 100
.b8 121
.b8 51
.b8 51
.b8 121
.b8 52
.b8 98
.b8 118
.b8 99
.b8 118
.b8 50
.b8 53
.b8 117
.b8 52
.b8 107
.b8 104
.b8 112
.b8 109
.b8 107
.b8 121
.b8 118
.b8 116
.b8 52
.b8 113
.b8 118
.b8 100
.b8 116
.b8 100
.b8 110
.b8 55
.b8 122
.b8 116
.b8 110
.b8 98
.b8 122
.b8 107
.b8 100
.b8 108
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 51
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
