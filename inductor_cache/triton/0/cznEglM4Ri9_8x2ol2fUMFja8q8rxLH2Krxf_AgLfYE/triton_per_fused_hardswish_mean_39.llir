; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_hardswish_mean_39(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = icmp slt i32 %5, 576, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %.frozen = freeze i32 %5, !dbg !13
  %9 = sdiv i32 %.frozen, 144, !dbg !13
  %10 = mul i32 %9, 144, !dbg !14
  %.decomposed = sub i32 %.frozen, %10, !dbg !14
  %11 = mul nuw nsw i32 %8, 144, !dbg !15
  %12 = add nsw i32 %.decomposed, %11, !dbg !16
  %13 = mul i32 %9, 2304, !dbg !17
  %14 = add i32 %12, %13, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !19
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %6, i32 0, i1 %6) #3, !dbg !20
  %18 = bitcast i32 %17 to float, !dbg !20
  %19 = fadd float %18, 3.000000e+00, !dbg !21
  %.inv = fcmp ole float %19, 0.000000e+00, !dbg !22
  %20 = select i1 %.inv, float 0.000000e+00, float %19, !dbg !22
  %21 = fcmp olt float %20, 6.000000e+00, !dbg !26
  %22 = fcmp uno float %20, 0.000000e+00, !dbg !28
  %23 = or i1 %21, %22, !dbg !29
  %24 = select i1 %23, float %20, float 6.000000e+00, !dbg !30
  %25 = fmul float %24, %18, !dbg !31
  %26 = fmul float %25, 0x3FC5555560000000, !dbg !32
  %27 = select i1 %6, float %26, float 0.000000e+00, !dbg !33
  %28 = bitcast float %27 to i32, !dbg !34
  %29 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %28, i32 8, i32 31), !dbg !34
  %30 = bitcast i32 %29 to float, !dbg !34
  %31 = fadd float %27, %30, !dbg !38
  %32 = bitcast float %31 to i32, !dbg !34
  %33 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %32, i32 4, i32 31), !dbg !34
  %34 = bitcast i32 %33 to float, !dbg !34
  %35 = fadd float %31, %34, !dbg !38
  %36 = bitcast float %35 to i32, !dbg !34
  %37 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %36, i32 2, i32 31), !dbg !34
  %38 = bitcast i32 %37 to float, !dbg !34
  %39 = fadd float %35, %38, !dbg !38
  %40 = bitcast float %39 to i32, !dbg !34
  %41 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %40, i32 1, i32 31), !dbg !34
  %42 = bitcast i32 %41 to float, !dbg !34
  %43 = fadd float %39, %42, !dbg !38
  %44 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %43, float 1.600000e+01) #3, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !41
  %45 = sext i32 %5 to i64, !dbg !42
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !42
  %47 = and i32 %7, 63, !dbg !43
  %48 = icmp eq i32 %47, 0, !dbg !43
  %49 = bitcast float %44 to i32, !dbg !43
  %50 = and i1 %48, %6, !dbg !43
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %49, ptr addrspace(1) %46, i1 %50) #3, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwogdzzc5jm4spoudg363iqojg7n4hiaf2l6qzgrdif23wgmxelt.py", directory: "inductor_cache/wo")
!4 = !{ptr @triton_per_fused_hardswish_mean_39, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_hardswish_mean_39, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_hardswish_mean_39", linkageName: "triton_per_fused_hardswish_mean_39", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 19, scope: !7)
!14 = !DILocation(line: 30, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 39, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 49, scope: !7)
!18 = !DILocation(line: 33, column: 44, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 54, scope: !7)
!21 = !DILocation(line: 35, column: 18, scope: !7)
!22 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!25 = !DILocation(line: 37, column: 40, scope: !7)
!26 = !DILocation(line: 110, column: 15, scope: !23, inlinedAt: !27)
!27 = !DILocation(line: 39, column: 40, scope: !7)
!28 = !DILocation(line: 112, column: 21, scope: !23, inlinedAt: !27)
!29 = !DILocation(line: 112, column: 16, scope: !23, inlinedAt: !27)
!30 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !27)
!31 = !DILocation(line: 40, column: 18, scope: !7)
!32 = !DILocation(line: 42, column: 18, scope: !7)
!33 = !DILocation(line: 44, column: 35, scope: !7)
!34 = !DILocation(line: 267, column: 36, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!37 = !DILocation(line: 45, column: 26, scope: !7)
!38 = !DILocation(line: 256, column: 15, scope: !39, inlinedAt: !37)
!39 = distinct !DILexicalBlockFile(scope: !35, file: !36, discriminator: 0)
!40 = !DILocation(line: 47, column: 20, scope: !7)
!41 = !DILocation(line: 48, column: 4, scope: !7)
!42 = !DILocation(line: 49, column: 28, scope: !7)
!43 = !DILocation(line: 49, column: 40, scope: !7)
!44 = !DILocation(line: 49, column: 4, scope: !7)
