//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0 // -- Begin function triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0
.visible .entry triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0_param_2,
	.param .u32 triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<88>;
	.reg .b64 	%rd<37>;
	.loc	1 19 0                          // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd34, [triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0_param_0];
	ld.param.u64 	%rd35, [triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0_param_1];
$L__tmp0:
	.loc	1 26 34                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:26:34
	mov.u32 	%r58, %tid.x;
	.loc	1 29 19                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:29:19
	and.b32  	%r59, %r58, 3;
	ld.param.u64 	%rd33, [triton_per_fused_add_index_put_lift_fresh_linalg_vector_norm_mean_pow_rsub_0_param_2];
	.loc	1 32 38                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:32:38
	shl.b32 	%r60, %r58, 4;
	and.b32  	%r61, %r60, 192;
	.loc	1 32 35                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:32:35
	or.b32  	%r62, %r61, %r59;
	.loc	1 32 30                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:32:30
	mul.wide.u32 	%rd36, %r62, 4;
	add.s64 	%rd1, %rd34, %rd36;
	mov.pred 	%p1, -1;
	.loc	1 32 43                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:32:43
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	.loc	1 33 30                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:33:30
	add.s64 	%rd2, %rd1, 64;
	.loc	1 33 48                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:33:48
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 34 30                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:34:30
	add.s64 	%rd3, %rd1, 128;
	.loc	1 34 48                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:34:48
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 35 30                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:35:30
	add.s64 	%rd4, %rd1, 192;
	.loc	1 35 48                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:35:48
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 36 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:36:31
	add.s64 	%rd5, %rd1, 16;
	.loc	1 36 48                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:36:48
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	.loc	1 37 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:37:31
	add.s64 	%rd6, %rd1, 80;
	.loc	1 37 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:37:49
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r6;
	.loc	1 38 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:38:31
	add.s64 	%rd7, %rd1, 144;
	.loc	1 38 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:38:49
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r7;
	.loc	1 39 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:39:31
	add.s64 	%rd8, %rd1, 208;
	.loc	1 39 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:39:49
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r8;
	.loc	1 40 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:40:31
	add.s64 	%rd9, %rd1, 32;
	.loc	1 40 48                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:40:48
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r9;
	.loc	1 41 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:41:31
	add.s64 	%rd10, %rd1, 96;
	.loc	1 41 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:41:49
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r10;
	.loc	1 42 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:42:31
	add.s64 	%rd11, %rd1, 160;
	.loc	1 42 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:42:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r11;
	.loc	1 43 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:43:31
	add.s64 	%rd12, %rd1, 224;
	.loc	1 43 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:43:49
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r12;
	.loc	1 44 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:44:31
	add.s64 	%rd13, %rd1, 48;
	.loc	1 44 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:44:49
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.b32 { %r13 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r13;
	.loc	1 45 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:45:31
	add.s64 	%rd14, %rd1, 112;
	.loc	1 45 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:45:49
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r14;
	.loc	1 46 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:46:31
	add.s64 	%rd15, %rd1, 176;
	.loc	1 46 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:46:49
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.b32 { %r15 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r15;
	.loc	1 47 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:47:31
	add.s64 	%rd16, %rd1, 240;
	.loc	1 47 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:47:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.b32 { %r16 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r16;
	.loc	1 48 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:48:31
	add.s64 	%rd17, %rd35, %rd36;
	.loc	1 48 44                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:48:44
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.b32 { %r17 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r17;
	.loc	1 49 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:49:31
	add.s64 	%rd18, %rd17, 64;
	.loc	1 49 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:49:49
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.b32 { %r18 }, [ %rd18 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r18;
	.loc	1 50 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:50:31
	add.s64 	%rd19, %rd17, 128;
	.loc	1 50 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:50:49
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.b32 { %r19 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r19;
	.loc	1 51 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:51:31
	add.s64 	%rd20, %rd17, 192;
	.loc	1 51 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:51:49
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.b32 { %r20 }, [ %rd20 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r20;
	.loc	1 52 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:52:31
	add.s64 	%rd21, %rd17, 16;
	.loc	1 52 48                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:52:48
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.b32 { %r21 }, [ %rd21 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r21;
	.loc	1 53 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:53:31
	add.s64 	%rd22, %rd17, 80;
	.loc	1 53 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:53:49
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.b32 { %r22 }, [ %rd22 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r22;
	.loc	1 54 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:54:31
	add.s64 	%rd23, %rd17, 144;
	.loc	1 54 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:54:49
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.b32 { %r23 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r23;
	.loc	1 55 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:55:31
	add.s64 	%rd24, %rd17, 208;
	.loc	1 55 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:55:49
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.b32 { %r24 }, [ %rd24 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r24;
	.loc	1 56 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:56:31
	add.s64 	%rd25, %rd17, 32;
	.loc	1 56 48                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:56:48
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.b32 { %r25 }, [ %rd25 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r25;
	.loc	1 57 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:57:31
	add.s64 	%rd26, %rd17, 96;
	.loc	1 57 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:57:49
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.b32 { %r26 }, [ %rd26 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r26;
	.loc	1 58 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:58:31
	add.s64 	%rd27, %rd17, 160;
	.loc	1 58 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:58:49
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.b32 { %r27 }, [ %rd27 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r27;
	.loc	1 59 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:59:31
	add.s64 	%rd28, %rd17, 224;
	.loc	1 59 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:59:49
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.b32 { %r28 }, [ %rd28 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r28;
	.loc	1 60 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:60:31
	add.s64 	%rd29, %rd17, 48;
	.loc	1 60 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:60:49
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.b32 { %r29 }, [ %rd29 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r29;
	.loc	1 61 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:61:31
	add.s64 	%rd30, %rd17, 112;
	.loc	1 61 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:61:49
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.b32 { %r30 }, [ %rd30 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r30;
	.loc	1 62 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:62:31
	add.s64 	%rd31, %rd17, 176;
	.loc	1 62 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:62:49
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.b32 { %r31 }, [ %rd31 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r31;
	.loc	1 63 31                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:63:31
	add.s64 	%rd32, %rd17, 240;
	.loc	1 63 49                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:63:49
	// begin inline asm
	mov.u32 %r32, 0x0;
	@%p1 ld.global.b32 { %r32 }, [ %rd32 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r32;
	.loc	1 64 18                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:64:18
	add.f32 	%f33, %f1, %f2;
	.loc	1 65 18                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:65:18
	add.f32 	%f34, %f33, %f3;
	.loc	1 66 18                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:66:18
	add.f32 	%f35, %f34, %f4;
	.loc	1 68 18                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:68:18
	mov.b32 	%r34, %f35;
	mov.b32 	%r35, 1082130432;
	// begin inline asm
	div.full.f32 %r33, %r34, %r35;
	// end inline asm
	mov.b32 	%f36, %r33;
	.loc	1 70 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:70:20
	add.f32 	%f37, %f5, %f6;
	.loc	1 71 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:71:20
	add.f32 	%f38, %f37, %f7;
	.loc	1 72 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:72:20
	add.f32 	%f39, %f38, %f8;
	.loc	1 73 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:73:20
	mov.b32 	%r37, %f39;
	// begin inline asm
	div.full.f32 %r36, %r37, %r35;
	// end inline asm
	mov.b32 	%f40, %r36;
	.loc	1 74 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:74:20
	mul.f32 	%f41, %f40, %f40;
	.loc	1 75 19                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:75:19
	fma.rn.f32 	%f42, %f36, %f36, %f41;
	.loc	1 76 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:76:20
	add.f32 	%f43, %f9, %f10;
	.loc	1 77 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:77:20
	add.f32 	%f44, %f43, %f11;
	.loc	1 78 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:78:20
	add.f32 	%f45, %f44, %f12;
	.loc	1 79 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:79:20
	mov.b32 	%r40, %f45;
	// begin inline asm
	div.full.f32 %r39, %r40, %r35;
	// end inline asm
	mov.b32 	%f46, %r39;
	.loc	1 81 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:81:20
	fma.rn.f32 	%f47, %f46, %f46, %f42;
	.loc	1 82 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:82:20
	add.f32 	%f48, %f13, %f14;
	.loc	1 83 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:83:20
	add.f32 	%f49, %f48, %f15;
	.loc	1 84 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:84:20
	add.f32 	%f50, %f49, %f16;
	.loc	1 85 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:85:20
	mov.b32 	%r43, %f50;
	// begin inline asm
	div.full.f32 %r42, %r43, %r35;
	// end inline asm
	mov.b32 	%f51, %r42;
	.loc	1 87 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:87:20
	fma.rn.f32 	%f52, %f51, %f51, %f47;
	.loc	1 88 27                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:88:27
	sqrt.approx.ftz.f32 	%f53, %f52;
	.loc	1 93 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:93:20
	add.f32 	%f54, %f17, %f18;
	.loc	1 94 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:94:20
	add.f32 	%f55, %f54, %f19;
	.loc	1 95 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:95:20
	add.f32 	%f56, %f55, %f20;
	.loc	1 96 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:96:20
	mov.b32 	%r46, %f56;
	// begin inline asm
	div.full.f32 %r45, %r46, %r35;
	// end inline asm
	mov.b32 	%f57, %r45;
	.loc	1 98 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:98:20
	add.f32 	%f58, %f21, %f22;
	.loc	1 99 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:99:20
	add.f32 	%f59, %f58, %f23;
	.loc	1 100 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:100:20
	add.f32 	%f60, %f59, %f24;
	.loc	1 101 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:101:20
	mov.b32 	%r49, %f60;
	// begin inline asm
	div.full.f32 %r48, %r49, %r35;
	// end inline asm
	mov.b32 	%f61, %r48;
	.loc	1 102 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:102:20
	mul.f32 	%f62, %f61, %f61;
	.loc	1 103 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:103:20
	fma.rn.f32 	%f63, %f57, %f57, %f62;
	.loc	1 104 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:104:20
	add.f32 	%f64, %f25, %f26;
	.loc	1 105 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:105:20
	add.f32 	%f65, %f64, %f27;
	.loc	1 106 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:106:20
	add.f32 	%f66, %f65, %f28;
	.loc	1 107 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:107:20
	mov.b32 	%r52, %f66;
	// begin inline asm
	div.full.f32 %r51, %r52, %r35;
	// end inline asm
	mov.b32 	%f67, %r51;
	.loc	1 109 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:109:20
	fma.rn.f32 	%f68, %f67, %f67, %f63;
	.loc	1 110 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:110:20
	add.f32 	%f69, %f29, %f30;
	.loc	1 111 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:111:20
	add.f32 	%f70, %f69, %f31;
	.loc	1 112 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:112:20
	add.f32 	%f71, %f70, %f32;
	.loc	1 113 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:113:20
	mov.b32 	%r55, %f71;
	// begin inline asm
	div.full.f32 %r54, %r55, %r35;
	// end inline asm
	mov.b32 	%f72, %r54;
	.loc	1 115 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:115:20
	fma.rn.f32 	%f73, %f72, %f72, %f68;
	.loc	1 116 27                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:116:27
	sqrt.approx.ftz.f32 	%f74, %f73;
	mov.f32 	%f75, 0f40800000;
	.loc	1 89 19                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:89:19
	sub.f32 	%f76, %f75, %f53;
	.loc	1 91 20                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:91:20
	setp.lt.f32 	%p34, %f76, 0f00000000;
	.loc	1 92 35                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:92:35
	selp.f32 	%f77, 0f00000000, %f76, %p34;
	.loc	1 117 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:117:20
	add.f32 	%f78, %f77, %f74;
	.loc	1 118 20                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:118:20
	mul.f32 	%f79, %f78, %f78;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f79;
	shfl.sync.bfly.b32	%r64, %r63, 8, 31, -1;
	mov.b32 	%f80, %r64;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f81, %f78, %f78, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f81;
	shfl.sync.bfly.b32	%r66, %r65, 4, 31, -1;
	mov.b32 	%f82, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f83;
	shfl.sync.bfly.b32	%r68, %r67, 2, 31, -1;
	mov.b32 	%f84, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f85;
	shfl.sync.bfly.b32	%r70, %r69, 1, 31, -1;
	mov.b32 	%f86, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f85, %f86;
$L__tmp2:
	.loc	1 121 68                        // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:121:68
	and.b32  	%r71, %r58, 63;
	setp.eq.s32 	%p33, %r71, 0;
	mov.b32 	%r57, %f87;
	// begin inline asm
	@%p33 st.global.b32 [ %rd33 + 0 ], { %r57 };
	// end inline asm
	.loc	1 121 4                         // cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py:121:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yt/cytstzv6lfzr5d77mxh24lzxtskyr4i3awdbirvabogkvngt4q4f.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 221                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 116
.b8 115
.b8 116
.b8 122
.b8 118
.b8 54
.b8 108
.b8 102
.b8 122
.b8 114
.b8 53
.b8 100
.b8 55
.b8 55
.b8 109
.b8 120
.b8 104
.b8 50
.b8 52
.b8 108
.b8 122
.b8 120
.b8 116
.b8 115
.b8 107
.b8 121
.b8 114
.b8 52
.b8 105
.b8 51
.b8 97
.b8 119
.b8 100
.b8 98
.b8 105
.b8 114
.b8 118
.b8 97
.b8 98
.b8 111
.b8 103
.b8 107
.b8 118
.b8 110
.b8 103
.b8 116
.b8 52
.b8 113
.b8 52
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 112
.b8 117
.b8 116
.b8 95
.b8 108
.b8 105
.b8 102
.b8 116
.b8 95
.b8 102
.b8 114
.b8 101
.b8 115
.b8 104
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb2:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 120                                 // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
