//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mean_pow_0 // -- Begin function triton_poi_fused_mean_pow_0
                                        // @triton_poi_fused_mean_pow_0
.visible .entry triton_poi_fused_mean_pow_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mean_pow_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mean_pow_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mean_pow_0_param_2,
	.param .u32 triton_poi_fused_mean_pow_0_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:19:0

// %bb.0:
	ld.param.u64 	%rd19, [triton_poi_fused_mean_pow_0_param_0];
	ld.param.u64 	%rd20, [triton_poi_fused_mean_pow_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:21:33
	shl.b32 	%r50, %r1, 2;
	ld.param.u64 	%rd21, [triton_poi_fused_mean_pow_0_param_2];
	.loc	1 22 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:22:36
	mov.u32 	%r51, %tid.x;
	and.b32  	%r52, %r51, 28;
	and.b32  	%r53, %r51, 3;
	.loc	1 22 23                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:22:23
	or.b32  	%r54, %r50, %r53;
	.loc	1 23 21                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:23:21
	setp.lt.s32 	%p1, %r54, 4;
	.loc	1 25 32                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:25:32
	shl.b32 	%r55, %r54, 2;
	.loc	1 25 30                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:25:30
	mul.wide.s32 	%rd22, %r55, 4;
	add.s64 	%rd1, %rd19, %rd22;
	.loc	1 25 37                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:25:37
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 26 30                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:26:30
	add.s64 	%rd2, %rd1, 4;
	.loc	1 26 41                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:26:41
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 27 30                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:27:30
	add.s64 	%rd3, %rd1, 8;
	.loc	1 27 41                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:27:41
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 28 30                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:28:30
	add.s64 	%rd4, %rd1, 12;
	.loc	1 28 41                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:28:41
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 29 35                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:29:35
	add.s32 	%r56, %r55, 16;
	.loc	1 29 30                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:29:30
	mul.wide.s32 	%rd23, %r56, 4;
	add.s64 	%rd5, %rd19, %rd23;
	.loc	1 29 42                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:29:42
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 30 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:30:36
	add.s32 	%r57, %r55, 17;
	.loc	1 30 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:30:31
	mul.wide.s32 	%rd24, %r57, 4;
	add.s64 	%rd6, %rd19, %rd24;
	.loc	1 30 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:30:43
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 31 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:31:36
	add.s32 	%r58, %r55, 18;
	.loc	1 31 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:31:31
	mul.wide.s32 	%rd25, %r58, 4;
	add.s64 	%rd7, %rd19, %rd25;
	.loc	1 31 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:31:43
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	.loc	1 32 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:32:36
	add.s32 	%r59, %r55, 19;
	.loc	1 32 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:32:31
	mul.wide.s32 	%rd26, %r59, 4;
	add.s64 	%rd8, %rd19, %rd26;
	.loc	1 32 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:32:43
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 33 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:33:36
	add.s32 	%r60, %r55, 32;
	.loc	1 33 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:33:31
	mul.wide.s32 	%rd27, %r60, 4;
	add.s64 	%rd9, %rd19, %rd27;
	.loc	1 33 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:33:43
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	.loc	1 34 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:34:36
	add.s32 	%r61, %r55, 33;
	.loc	1 34 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:34:31
	mul.wide.s32 	%rd28, %r61, 4;
	add.s64 	%rd10, %rd19, %rd28;
	.loc	1 34 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:34:43
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	.loc	1 35 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:35:36
	add.s32 	%r62, %r55, 34;
	.loc	1 35 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:35:31
	mul.wide.s32 	%rd29, %r62, 4;
	add.s64 	%rd11, %rd19, %rd29;
	.loc	1 35 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:35:43
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	.loc	1 36 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:36:36
	add.s32 	%r63, %r55, 35;
	.loc	1 36 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:36:31
	mul.wide.s32 	%rd30, %r63, 4;
	add.s64 	%rd12, %rd19, %rd30;
	.loc	1 36 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:36:43
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 37 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:37:36
	add.s32 	%r64, %r55, 48;
	.loc	1 37 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:37:31
	mul.wide.s32 	%rd31, %r64, 4;
	add.s64 	%rd13, %rd19, %rd31;
	.loc	1 37 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:37:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	.loc	1 38 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:38:36
	add.s32 	%r65, %r55, 49;
	.loc	1 38 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:38:31
	mul.wide.s32 	%rd32, %r65, 4;
	add.s64 	%rd14, %rd19, %rd32;
	.loc	1 38 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:38:43
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r15;
	.loc	1 39 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:39:36
	add.s32 	%r66, %r55, 50;
	.loc	1 39 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:39:31
	mul.wide.s32 	%rd33, %r66, 4;
	add.s64 	%rd15, %rd19, %rd33;
	.loc	1 39 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:39:43
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r16;
	.loc	1 40 36                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:40:36
	add.s32 	%r67, %r55, 51;
	.loc	1 40 31                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:40:31
	mul.wide.s32 	%rd34, %r67, 4;
	add.s64 	%rd16, %rd19, %rd34;
	.loc	1 40 43                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:40:43
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r17;
	.loc	1 41 18                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:41:18
	add.f32 	%f17, %f1, %f2;
	.loc	1 42 18                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:42:18
	add.f32 	%f18, %f17, %f3;
	.loc	1 43 18                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:43:18
	add.f32 	%f19, %f18, %f4;
	.loc	1 45 18                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:45:18
	mov.b32 	%r19, %f19;
	mov.b32 	%r20, 1082130432;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f20, %r18;
	.loc	1 46 19                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:46:19
	add.f32 	%f21, %f5, %f6;
	.loc	1 47 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:47:20
	add.f32 	%f22, %f21, %f7;
	.loc	1 48 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:48:20
	add.f32 	%f23, %f22, %f8;
	.loc	1 49 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:49:20
	mov.b32 	%r22, %f23;
	// begin inline asm
	div.full.f32 %r21, %r22, %r20;
	// end inline asm
	mov.b32 	%f24, %r21;
	.loc	1 50 19                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:50:19
	add.f32 	%f25, %f20, %f24;
	.loc	1 51 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:51:20
	add.f32 	%f26, %f9, %f10;
	.loc	1 52 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:52:20
	add.f32 	%f27, %f26, %f11;
	.loc	1 53 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:53:20
	add.f32 	%f28, %f27, %f12;
	.loc	1 54 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:54:20
	mov.b32 	%r25, %f28;
	// begin inline asm
	div.full.f32 %r24, %r25, %r20;
	// end inline asm
	mov.b32 	%f29, %r24;
	.loc	1 55 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:55:20
	add.f32 	%f30, %f25, %f29;
	.loc	1 56 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:56:20
	add.f32 	%f31, %f13, %f14;
	.loc	1 57 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:57:20
	add.f32 	%f32, %f31, %f15;
	.loc	1 58 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:58:20
	add.f32 	%f33, %f32, %f16;
	.loc	1 59 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:59:20
	mov.b32 	%r28, %f33;
	// begin inline asm
	div.full.f32 %r27, %r28, %r20;
	// end inline asm
	mov.b32 	%f34, %r27;
	.loc	1 60 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:60:20
	add.f32 	%f35, %f30, %f34;
	.loc	1 61 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:61:20
	mov.b32 	%r31, %f35;
	// begin inline asm
	div.full.f32 %r48, %r31, %r20;
	// end inline asm
	.loc	1 63 19                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:63:19
	mul.f32 	%f36, %f2, %f2;
	.loc	1 64 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:64:20
	fma.rn.f32 	%f37, %f1, %f1, %f36;
	.loc	1 66 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:66:20
	fma.rn.f32 	%f38, %f3, %f3, %f37;
	.loc	1 68 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:68:20
	fma.rn.f32 	%f39, %f4, %f4, %f38;
	.loc	1 69 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:69:20
	mov.b32 	%r34, %f39;
	// begin inline asm
	div.full.f32 %r33, %r34, %r20;
	// end inline asm
	mov.b32 	%f40, %r33;
	.loc	1 71 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:71:20
	mul.f32 	%f41, %f6, %f6;
	.loc	1 72 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:72:20
	fma.rn.f32 	%f42, %f5, %f5, %f41;
	.loc	1 74 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:74:20
	fma.rn.f32 	%f43, %f7, %f7, %f42;
	.loc	1 76 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:76:20
	fma.rn.f32 	%f44, %f8, %f8, %f43;
	.loc	1 77 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:77:20
	mov.b32 	%r37, %f44;
	// begin inline asm
	div.full.f32 %r36, %r37, %r20;
	// end inline asm
	mov.b32 	%f45, %r36;
	.loc	1 78 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:78:20
	add.f32 	%f46, %f40, %f45;
	.loc	1 80 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:80:20
	mul.f32 	%f47, %f10, %f10;
	.loc	1 81 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:81:20
	fma.rn.f32 	%f48, %f9, %f9, %f47;
	.loc	1 83 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:83:20
	fma.rn.f32 	%f49, %f11, %f11, %f48;
	.loc	1 85 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:85:20
	fma.rn.f32 	%f50, %f12, %f12, %f49;
	.loc	1 86 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:86:20
	mov.b32 	%r40, %f50;
	// begin inline asm
	div.full.f32 %r39, %r40, %r20;
	// end inline asm
	mov.b32 	%f51, %r39;
	.loc	1 87 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:87:20
	add.f32 	%f52, %f46, %f51;
	.loc	1 89 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:89:20
	mul.f32 	%f53, %f14, %f14;
	.loc	1 90 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:90:20
	fma.rn.f32 	%f54, %f13, %f13, %f53;
	.loc	1 92 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:92:20
	fma.rn.f32 	%f55, %f15, %f15, %f54;
	.loc	1 94 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:94:20
	fma.rn.f32 	%f56, %f16, %f16, %f55;
	.loc	1 95 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:95:20
	mov.b32 	%r43, %f56;
	// begin inline asm
	div.full.f32 %r42, %r43, %r20;
	// end inline asm
	mov.b32 	%f57, %r42;
	.loc	1 96 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:96:20
	add.f32 	%f58, %f52, %f57;
	.loc	1 97 20                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:97:20
	mov.b32 	%r46, %f58;
	// begin inline asm
	div.full.f32 %r49, %r46, %r20;
	// end inline asm
	.loc	1 98 25                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:98:25
	mul.wide.s32 	%rd35, %r54, 4;
	add.s64 	%rd17, %rd20, %rd35;
	.loc	1 98 37                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:98:37
	setp.eq.s32 	%p19, %r52, 0;
	and.pred  	%p17, %p19, %p1;
	// begin inline asm
	@%p17 st.global.b32 [ %rd17 + 0 ], { %r48 };
	// end inline asm
	.loc	1 99 25                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:99:25
	add.s64 	%rd18, %rd21, %rd35;
	.loc	1 99 37                         // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:99:37
	// begin inline asm
	@%p17 st.global.b32 [ %rd18 + 0 ], { %r49 };
	// end inline asm
	.loc	1 99 4                          // ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py:99:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/k4/ck4ahisgyfsvq2lxnvggfqrbeiwrepmaavjlrittpsnyyqirn5bh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 52
.b8 97
.b8 104
.b8 105
.b8 115
.b8 103
.b8 121
.b8 102
.b8 115
.b8 118
.b8 113
.b8 50
.b8 108
.b8 120
.b8 110
.b8 118
.b8 103
.b8 103
.b8 102
.b8 113
.b8 114
.b8 98
.b8 101
.b8 105
.b8 119
.b8 114
.b8 101
.b8 112
.b8 109
.b8 97
.b8 97
.b8 118
.b8 106
.b8 108
.b8 114
.b8 105
.b8 116
.b8 116
.b8 112
.b8 115
.b8 110
.b8 121
.b8 121
.b8 113
.b8 105
.b8 114
.b8 110
.b8 53
.b8 98
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
