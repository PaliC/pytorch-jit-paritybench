#loc = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":19:0)
#loc1 = loc(unknown)
#loc84 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":90:26)
#loc137 = loc(callsite(#loc1 at #loc84))
module {
  tt.func public @triton_per_fused_add_div_mean_mul_pow_rsub_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999997E-7> : tensor<1x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<2.500000e-01> : tensor<1x64xf32> loc(#loc1)
    %cst_4 = arith.constant dense<48> : tensor<1x64xi32> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<32> : tensor<1x64xi32> loc(#loc1)
    %cst_7 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.remsi %1, %cst_7 : tensor<1x64xi32> loc(#loc4)
    %3 = arith.divsi %1, %cst_7 : tensor<1x64xi32> loc(#loc5)
    %4 = arith.addi %2, %cst_6 : tensor<1x64xi32> loc(#loc6)
    %5 = arith.muli %3, %cst_5 : tensor<1x64xi32> loc(#loc7)
    %6 = arith.addi %4, %5 : tensor<1x64xi32> loc(#loc8)
    %7 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc9)
    %8 = tt.addptr %7, %6 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc9)
    %9 = tt.load %8 : tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %6 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc11)
    %12 = tt.load %11 : tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.addi %2, %5 : tensor<1x64xi32> loc(#loc13)
    %14 = tt.addptr %7, %13 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc14)
    %15 = tt.load %14 : tensor<1x64x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %10, %13 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc16)
    %17 = tt.load %16 : tensor<1x64x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.addi %2, %cst_4 : tensor<1x64xi32> loc(#loc18)
    %19 = arith.addi %18, %5 : tensor<1x64xi32> loc(#loc19)
    %20 = tt.addptr %7, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc20)
    %21 = tt.load %20 : tensor<1x64x!tt.ptr<f32>> loc(#loc21)
    %22 = tt.addptr %10, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc22)
    %23 = tt.load %22 : tensor<1x64x!tt.ptr<f32>> loc(#loc23)
    %24 = arith.addi %2, %cst_7 : tensor<1x64xi32> loc(#loc24)
    %25 = arith.addi %24, %5 : tensor<1x64xi32> loc(#loc25)
    %26 = tt.addptr %7, %25 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc26)
    %27 = tt.load %26 : tensor<1x64x!tt.ptr<f32>> loc(#loc27)
    %28 = tt.addptr %10, %25 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc28)
    %29 = tt.load %28 : tensor<1x64x!tt.ptr<f32>> loc(#loc29)
    %30 = arith.cmpf olt, %9, %12 : tensor<1x64xf32> loc(#loc92)
    %31 = arith.cmpf une, %9, %9 : tensor<1x64xf32> loc(#loc93)
    %32 = arith.ori %30, %31 : tensor<1x64xi1> loc(#loc94)
    %33 = arith.select %32, %9, %12 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc95)
    %34 = arith.cmpf ogt, %15, %17 : tensor<1x64xf32> loc(#loc96)
    %35 = arith.cmpf une, %15, %15 : tensor<1x64xf32> loc(#loc97)
    %36 = arith.ori %34, %35 : tensor<1x64xi1> loc(#loc98)
    %37 = arith.select %36, %15, %17 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc99)
    %38 = arith.subf %33, %37 : tensor<1x64xf32> loc(#loc40)
    %39 = arith.cmpf ogt, %38, %cst : tensor<1x64xf32> loc(#loc100)
    %40 = arith.cmpf une, %38, %38 : tensor<1x64xf32> loc(#loc101)
    %41 = arith.ori %39, %40 : tensor<1x64xi1> loc(#loc102)
    %42 = arith.select %41, %38, %cst : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc103)
    %43 = arith.cmpf olt, %21, %23 : tensor<1x64xf32> loc(#loc104)
    %44 = arith.cmpf une, %21, %21 : tensor<1x64xf32> loc(#loc105)
    %45 = arith.ori %43, %44 : tensor<1x64xi1> loc(#loc106)
    %46 = arith.select %45, %21, %23 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc107)
    %47 = arith.cmpf ogt, %27, %29 : tensor<1x64xf32> loc(#loc108)
    %48 = arith.cmpf une, %27, %27 : tensor<1x64xf32> loc(#loc109)
    %49 = arith.ori %47, %48 : tensor<1x64xi1> loc(#loc110)
    %50 = arith.select %49, %27, %29 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc111)
    %51 = arith.subf %46, %50 : tensor<1x64xf32> loc(#loc44)
    %52 = arith.cmpf ogt, %51, %cst : tensor<1x64xf32> loc(#loc112)
    %53 = arith.cmpf une, %51, %51 : tensor<1x64xf32> loc(#loc113)
    %54 = arith.ori %52, %53 : tensor<1x64xi1> loc(#loc114)
    %55 = arith.select %54, %51, %cst : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc115)
    %56 = arith.mulf %42, %55 : tensor<1x64xf32> loc(#loc46)
    %57 = arith.subf %9, %15 : tensor<1x64xf32> loc(#loc47)
    %58 = arith.subf %21, %27 : tensor<1x64xf32> loc(#loc48)
    %59 = arith.mulf %57, %58 : tensor<1x64xf32> loc(#loc49)
    %60 = arith.subf %12, %17 : tensor<1x64xf32> loc(#loc50)
    %61 = arith.subf %23, %29 : tensor<1x64xf32> loc(#loc51)
    %62 = arith.mulf %60, %61 : tensor<1x64xf32> loc(#loc52)
    %63 = arith.addf %59, %62 : tensor<1x64xf32> loc(#loc53)
    %64 = arith.subf %63, %56 : tensor<1x64xf32> loc(#loc54)
    %65 = arith.addf %17, %12 : tensor<1x64xf32> loc(#loc55)
    %66 = arith.addf %15, %9 : tensor<1x64xf32> loc(#loc56)
    %67 = arith.subf %65, %66 : tensor<1x64xf32> loc(#loc57)
    %68 = arith.mulf %67, %67 : tensor<1x64xf32> loc(#loc58)
    %69 = arith.mulf %68, %cst_3 : tensor<1x64xf32> loc(#loc59)
    %70 = arith.addf %29, %23 : tensor<1x64xf32> loc(#loc60)
    %71 = arith.addf %27, %21 : tensor<1x64xf32> loc(#loc61)
    %72 = arith.subf %70, %71 : tensor<1x64xf32> loc(#loc62)
    %73 = arith.mulf %72, %72 : tensor<1x64xf32> loc(#loc63)
    %74 = arith.mulf %73, %cst_3 : tensor<1x64xf32> loc(#loc64)
    %75 = arith.addf %69, %74 : tensor<1x64xf32> loc(#loc65)
    %76 = arith.cmpf ogt, %9, %12 : tensor<1x64xf32> loc(#loc116)
    %77 = arith.ori %76, %31 : tensor<1x64xi1> loc(#loc117)
    %78 = arith.select %77, %9, %12 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc118)
    %79 = arith.cmpf olt, %15, %17 : tensor<1x64xf32> loc(#loc119)
    %80 = arith.ori %79, %35 : tensor<1x64xi1> loc(#loc120)
    %81 = arith.select %80, %15, %17 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc121)
    %82 = arith.subf %78, %81 : tensor<1x64xf32> loc(#loc68)
    %83 = arith.cmpf ogt, %82, %cst : tensor<1x64xf32> loc(#loc122)
    %84 = arith.cmpf une, %82, %82 : tensor<1x64xf32> loc(#loc123)
    %85 = arith.ori %83, %84 : tensor<1x64xi1> loc(#loc124)
    %86 = arith.select %85, %82, %cst : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc125)
    %87 = arith.mulf %86, %86 : tensor<1x64xf32> loc(#loc70)
    %88 = arith.cmpf ogt, %21, %23 : tensor<1x64xf32> loc(#loc126)
    %89 = arith.ori %88, %44 : tensor<1x64xi1> loc(#loc127)
    %90 = arith.select %89, %21, %23 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc128)
    %91 = arith.cmpf olt, %27, %29 : tensor<1x64xf32> loc(#loc129)
    %92 = arith.ori %91, %48 : tensor<1x64xi1> loc(#loc130)
    %93 = arith.select %92, %27, %29 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc131)
    %94 = arith.subf %90, %93 : tensor<1x64xf32> loc(#loc73)
    %95 = arith.cmpf ogt, %94, %cst : tensor<1x64xf32> loc(#loc132)
    %96 = arith.cmpf une, %94, %94 : tensor<1x64xf32> loc(#loc133)
    %97 = arith.ori %95, %96 : tensor<1x64xi1> loc(#loc134)
    %98 = arith.select %97, %94, %cst : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc135)
    %99 = arith.mulf %98, %98 : tensor<1x64xf32> loc(#loc75)
    %100 = arith.addf %87, %99 : tensor<1x64xf32> loc(#loc76)
    %101 = arith.addf %100, %cst_2 : tensor<1x64xf32> loc(#loc77)
    %102 = arith.divf %75, %101 : tensor<1x64xf32> loc(#loc78)
    %103 = arith.addf %64, %cst_2 : tensor<1x64xf32> loc(#loc79)
    %104 = arith.divf %56, %103 : tensor<1x64xf32> loc(#loc80)
    %105 = arith.subf %104, %102 : tensor<1x64xf32> loc(#loc81)
    %106 = arith.subf %cst_1, %105 : tensor<1x64xf32> loc(#loc82)
    %107 = "tt.reduce"(%106) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc84)), %arg5: f32 loc(callsite(#loc1 at #loc84))):
      %112 = arith.addf %arg4, %arg5 : f32 loc(#loc139)
      tt.reduce.return %112 : f32 loc(#loc136)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc136)
    %108 = tt.expand_dims %107 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc86)
    %109 = arith.divf %108, %cst_0 : tensor<1x1xf32> loc(#loc87)
    gpu.barrier loc(#loc88)
    %110 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc89)
    %111 = tt.splat %110 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc89)
    tt.store %111, %109 : tensor<1x1x!tt.ptr<f32>> loc(#loc90)
    tt.return loc(#loc91)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":26:26)
#loc3 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":26:34)
#loc4 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":29:19)
#loc5 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":30:19)
#loc6 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":32:35)
#loc7 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":32:43)
#loc8 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":32:40)
#loc9 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":32:30)
#loc10 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":32:48)
#loc11 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":33:30)
#loc12 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":33:48)
#loc13 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":34:35)
#loc14 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":34:30)
#loc15 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":34:43)
#loc16 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":35:30)
#loc17 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":35:43)
#loc18 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":36:35)
#loc19 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":36:40)
#loc20 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":36:30)
#loc21 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":36:48)
#loc22 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":37:31)
#loc23 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":37:49)
#loc24 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":38:36)
#loc25 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":38:41)
#loc26 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":38:31)
#loc27 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":38:49)
#loc28 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":39:31)
#loc29 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":39:49)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc31 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":40:40)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc36 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":41:40)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc40 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":42:18)
#loc41 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":44:40)
#loc42 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":45:41)
#loc43 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":46:42)
#loc44 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":47:20)
#loc45 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":48:42)
#loc46 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":49:19)
#loc47 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":50:19)
#loc48 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":51:19)
#loc49 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":52:20)
#loc50 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":53:19)
#loc51 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":54:20)
#loc52 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":55:20)
#loc53 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":56:20)
#loc54 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":57:20)
#loc55 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":58:19)
#loc56 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":59:19)
#loc57 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":60:20)
#loc58 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":61:20)
#loc59 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":63:20)
#loc60 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":64:20)
#loc61 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":65:20)
#loc62 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":66:20)
#loc63 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":67:20)
#loc64 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":68:20)
#loc65 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":69:20)
#loc66 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":70:41)
#loc67 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":71:41)
#loc68 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":72:20)
#loc69 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":73:42)
#loc70 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":74:20)
#loc71 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":75:41)
#loc72 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":76:42)
#loc73 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":77:20)
#loc74 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":78:42)
#loc75 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":79:20)
#loc76 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":80:20)
#loc77 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":82:20)
#loc78 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":83:20)
#loc79 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":84:20)
#loc80 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":85:20)
#loc81 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":86:20)
#loc82 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":88:20)
#loc83 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc85 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc86 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":90:29)
#loc87 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":92:20)
#loc88 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":94:4)
#loc89 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":95:28)
#loc90 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":95:71)
#loc91 = loc("inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py":95:4)
#loc92 = loc(callsite(#loc30 at #loc31))
#loc93 = loc(callsite(#loc32 at #loc31))
#loc94 = loc(callsite(#loc33 at #loc31))
#loc95 = loc(callsite(#loc34 at #loc31))
#loc96 = loc(callsite(#loc35 at #loc36))
#loc97 = loc(callsite(#loc37 at #loc36))
#loc98 = loc(callsite(#loc38 at #loc36))
#loc99 = loc(callsite(#loc39 at #loc36))
#loc100 = loc(callsite(#loc35 at #loc41))
#loc101 = loc(callsite(#loc37 at #loc41))
#loc102 = loc(callsite(#loc38 at #loc41))
#loc103 = loc(callsite(#loc39 at #loc41))
#loc104 = loc(callsite(#loc30 at #loc42))
#loc105 = loc(callsite(#loc32 at #loc42))
#loc106 = loc(callsite(#loc33 at #loc42))
#loc107 = loc(callsite(#loc34 at #loc42))
#loc108 = loc(callsite(#loc35 at #loc43))
#loc109 = loc(callsite(#loc37 at #loc43))
#loc110 = loc(callsite(#loc38 at #loc43))
#loc111 = loc(callsite(#loc39 at #loc43))
#loc112 = loc(callsite(#loc35 at #loc45))
#loc113 = loc(callsite(#loc37 at #loc45))
#loc114 = loc(callsite(#loc38 at #loc45))
#loc115 = loc(callsite(#loc39 at #loc45))
#loc116 = loc(callsite(#loc35 at #loc66))
#loc117 = loc(callsite(#loc38 at #loc66))
#loc118 = loc(callsite(#loc39 at #loc66))
#loc119 = loc(callsite(#loc30 at #loc67))
#loc120 = loc(callsite(#loc33 at #loc67))
#loc121 = loc(callsite(#loc34 at #loc67))
#loc122 = loc(callsite(#loc35 at #loc69))
#loc123 = loc(callsite(#loc37 at #loc69))
#loc124 = loc(callsite(#loc38 at #loc69))
#loc125 = loc(callsite(#loc39 at #loc69))
#loc126 = loc(callsite(#loc35 at #loc71))
#loc127 = loc(callsite(#loc38 at #loc71))
#loc128 = loc(callsite(#loc39 at #loc71))
#loc129 = loc(callsite(#loc30 at #loc72))
#loc130 = loc(callsite(#loc33 at #loc72))
#loc131 = loc(callsite(#loc34 at #loc72))
#loc132 = loc(callsite(#loc35 at #loc74))
#loc133 = loc(callsite(#loc37 at #loc74))
#loc134 = loc(callsite(#loc38 at #loc74))
#loc135 = loc(callsite(#loc39 at #loc74))
#loc136 = loc(callsite(#loc83 at #loc84))
#loc138 = loc(callsite(#loc85 at #loc83))
#loc139 = loc(callsite(#loc138 at #loc84))
