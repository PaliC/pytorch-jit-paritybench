//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_mean_mul_pow_rsub_sub_0 // -- Begin function triton_per_fused_add_div_mean_mul_pow_rsub_sub_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_div_mean_mul_pow_rsub_sub_0
.visible .entry triton_per_fused_add_div_mean_mul_pow_rsub_sub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_rsub_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_rsub_sub_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mean_mul_pow_rsub_sub_0_param_2,
	.param .u32 triton_per_fused_add_div_mean_mul_pow_rsub_sub_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<63>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_per_fused_add_div_mean_mul_pow_rsub_sub_0_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_add_div_mean_mul_pow_rsub_sub_0_param_1];
$L__tmp0:
	.loc	1 26 34                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:26:34
	mov.u32 	%r25, %tid.x;
	and.b32  	%r26, %r25, 31;
	ld.param.u64 	%rd11, [triton_per_fused_add_div_mean_mul_pow_rsub_sub_0_param_2];
	.loc	1 29 19                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:29:19
	and.b32  	%r27, %r25, 15;
	.loc	1 32 43                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:32:43
	shl.b32 	%r28, %r25, 2;
	and.b32  	%r29, %r28, 192;
	.loc	1 32 40                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:32:40
	or.b32  	%r30, %r29, %r27;
	.loc	1 32 30                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:32:30
	mul.wide.u32 	%rd12, %r30, 4;
	add.s64 	%rd3, %rd10, %rd12;
	add.s64 	%rd1, %rd3, 128;
	mov.pred 	%p1, -1;
	.loc	1 32 48                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:32:48
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:33:30
	add.s64 	%rd4, %rd11, %rd12;
	add.s64 	%rd2, %rd4, 128;
	.loc	1 33 48                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:33:48
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 43                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:34:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 35 43                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:35:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:36:30
	add.s64 	%rd5, %rd3, 192;
	.loc	1 36 48                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:36:48
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:37:31
	add.s64 	%rd6, %rd4, 192;
	.loc	1 37 49                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:37:49
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:38:31
	add.s64 	%rd7, %rd3, 64;
	.loc	1 38 49                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:38:49
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:39:31
	add.s64 	%rd8, %rd4, 64;
	.loc	1 39 49                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:39:49
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 32 48                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:32:48
	mov.b32 	%f1, %r5;
	.loc	1 33 48                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:33:48
	mov.b32 	%f2, %r6;
$L__tmp1:
	.loc	2 110 15                        // triton_helpers.py:110:15
	setp.lt.f32 	%p13, %f1, %f2;
$L__tmp2:
	.loc	1 32 48                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:32:48
	mov.b32 	%f3, %r1;
	.loc	1 33 48                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:33:48
	mov.b32 	%f4, %r2;
$L__tmp3:
	.loc	2 110 15                        // triton_helpers.py:110:15
	setp.lt.f32 	%p14, %f3, %f4;
	.loc	2 112 21                        // triton_helpers.py:112:21
	setp.nan.f32 	%p15, %f1, %f1;
	setp.nan.f32 	%p16, %f3, %f3;
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.b32 	%r31, %r1, %r2, %p14;
	selp.b32 	%r32, %r1, %r31, %p16;
	selp.b32 	%r33, %r5, %r6, %p13;
	selp.b32 	%r34, %r5, %r33, %p15;
	mov.b32 	%f5, %r34;
	mov.b32 	%f6, %r32;
$L__tmp4:
	.loc	1 34 43                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:34:43
	mov.b32 	%f7, %r7;
	.loc	1 35 43                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:35:43
	mov.b32 	%f8, %r8;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p17, %f7, %f8;
$L__tmp6:
	.loc	1 34 43                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:34:43
	mov.b32 	%f9, %r3;
	.loc	1 35 43                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:35:43
	mov.b32 	%f10, %r4;
$L__tmp7:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p18, %f9, %f10;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p19, %f7, %f7;
	setp.nan.f32 	%p20, %f9, %f9;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r35, %r3, %r4, %p18;
	selp.b32 	%r36, %r3, %r35, %p20;
	selp.b32 	%r37, %r7, %r8, %p17;
	selp.b32 	%r38, %r7, %r37, %p19;
	mov.b32 	%f11, %r38;
	mov.b32 	%f12, %r36;
$L__tmp8:
	.loc	1 42 18                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:42:18
	sub.f32 	%f13, %f6, %f12;
	sub.f32 	%f14, %f5, %f11;
$L__tmp9:
	.loc	2 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p21, %f14, 0f00000000;
	setp.le.f32 	%p22, %f13, 0f00000000;
	selp.f32 	%f15, 0f00000000, %f13, %p22;
	selp.f32 	%f16, 0f00000000, %f14, %p21;
$L__tmp10:
	.loc	1 49 19                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:49:19
	mul.f32 	%f17, %f15, %f16;
	.loc	1 50 19                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:50:19
	sub.f32 	%f18, %f3, %f9;
	.loc	1 51 19                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:51:19
	sub.f32 	%f19, %f1, %f7;
	.loc	1 53 19                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:53:19
	sub.f32 	%f20, %f4, %f10;
	.loc	1 54 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:54:20
	sub.f32 	%f21, %f2, %f8;
	.loc	1 55 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:55:20
	mul.f32 	%f22, %f20, %f21;
	.loc	1 56 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:56:20
	fma.rn.f32 	%f23, %f18, %f19, %f22;
	.loc	1 57 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:57:20
	neg.f32 	%f24, %f15;
	fma.rn.f32 	%f25, %f24, %f16, %f23;
	.loc	1 58 19                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:58:19
	add.f32 	%f26, %f4, %f10;
	.loc	1 59 19                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:59:19
	add.f32 	%f27, %f3, %f9;
	.loc	1 60 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:60:20
	sub.f32 	%f28, %f26, %f27;
	.loc	1 61 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:61:20
	mul.f32 	%f29, %f28, %f28;
	.loc	1 64 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:64:20
	add.f32 	%f30, %f2, %f8;
	.loc	1 65 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:65:20
	add.f32 	%f31, %f1, %f7;
	.loc	1 66 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:66:20
	sub.f32 	%f32, %f30, %f31;
	.loc	1 67 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:67:20
	mul.f32 	%f33, %f32, %f32;
	.loc	1 68 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:68:20
	mul.f32 	%f34, %f33, 0f3E800000;
	.loc	1 69 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:69:20
	fma.rn.f32 	%f35, %f29, 0f3E800000, %f34;
$L__tmp11:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p23, %f1, %f2;
	setp.gt.f32 	%p24, %f3, %f4;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r39, %r1, %r2, %p24;
	selp.b32 	%r40, %r1, %r39, %p16;
	selp.b32 	%r41, %r5, %r6, %p23;
	selp.b32 	%r42, %r5, %r41, %p15;
	mov.b32 	%f36, %r42;
	mov.b32 	%f37, %r40;
$L__tmp12:
	.loc	2 110 15                        // triton_helpers.py:110:15
	setp.lt.f32 	%p25, %f7, %f8;
	setp.lt.f32 	%p26, %f9, %f10;
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.b32 	%r43, %r3, %r4, %p26;
	selp.b32 	%r44, %r3, %r43, %p20;
	selp.b32 	%r45, %r7, %r8, %p25;
	selp.b32 	%r46, %r7, %r45, %p19;
	mov.b32 	%f38, %r46;
	mov.b32 	%f39, %r44;
$L__tmp13:
	.loc	1 72 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:72:20
	sub.f32 	%f40, %f37, %f39;
	sub.f32 	%f41, %f36, %f38;
$L__tmp14:
	.loc	2 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p27, %f41, 0f00000000;
	setp.le.f32 	%p28, %f40, 0f00000000;
	selp.f32 	%f42, 0f00000000, %f40, %p28;
	selp.f32 	%f43, 0f00000000, %f41, %p27;
$L__tmp15:
	.loc	1 74 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:74:20
	mul.f32 	%f44, %f43, %f43;
	.loc	1 80 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:80:20
	fma.rn.f32 	%f45, %f42, %f42, %f44;
	.loc	1 82 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:82:20
	add.f32 	%f46, %f45, 0f358637BD;
	.loc	1 83 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:83:20
	mov.b32 	%r11, %f46;
	mov.b32 	%r10, %f35;
	// begin inline asm
	div.full.f32 %r9, %r10, %r11;
	// end inline asm
	mov.b32 	%f47, %r9;
	.loc	1 84 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:84:20
	add.f32 	%f48, %f25, 0f358637BD;
	.loc	1 85 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:85:20
	mov.b32 	%r13, %f17;
	mov.b32 	%r14, %f48;
	// begin inline asm
	div.full.f32 %r12, %r13, %r14;
	// end inline asm
	mov.b32 	%f49, %r12;
	.loc	1 88 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:88:20
	sub.f32 	%f50, %f47, %f49;
	add.f32 	%f51, %f50, 0f3F800000;
$L__tmp16:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f51;
	shfl.sync.bfly.b32	%r48, %r47, 16, 31, -1;
	mov.b32 	%f52, %r48;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f53;
	shfl.sync.bfly.b32	%r50, %r49, 8, 31, -1;
	mov.b32 	%f54, %r50;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f55;
	shfl.sync.bfly.b32	%r52, %r51, 4, 31, -1;
	mov.b32 	%f56, %r52;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f57;
	shfl.sync.bfly.b32	%r54, %r53, 2, 31, -1;
	mov.b32 	%f58, %r54;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f59;
	shfl.sync.bfly.b32	%r56, %r55, 1, 31, -1;
	mov.b32 	%f60, %r56;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r26, 0;
	shr.u32 	%r57, %r25, 3;
	and.b32  	%r58, %r57, 4;
	mov.u32 	%r59, global_smem;
	add.s32 	%r15, %r59, %r58;
	mov.b32 	%r16, %f61;
	// begin inline asm
	@%p9 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r25, 2;
	add.s32 	%r18, %r59, %r28;
	// begin inline asm
	@%p10 ld.shared.b32 %r17, [ %r18 + 0 ];
	// end inline asm
	mov.b32 	%f62, %r17;
	shfl.sync.bfly.b32	%r60, %r17, 1, 31, -1;
	mov.b32 	%f63, %r60;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r61, %r25, 1;
	setp.eq.b32 	%p29, %r61, 1;
	not.pred 	%p30, %p29;
	and.pred  	%p11, %p10, %p30;
	mov.b32 	%r20, %f64;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
$L__tmp17:
	.loc	1 92 20                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:92:20
	ld.shared.u32 	%r22, [global_smem];
	mov.b32 	%r23, 1115684864;
	// begin inline asm
	div.full.f32 %r24, %r22, %r23;
	// end inline asm
	.loc	1 94 4                          // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:94:4
	bar.sync 	0;
	.loc	1 95 71                         // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:95:71
	and.b32  	%r62, %r25, 63;
	setp.eq.s32 	%p12, %r62, 0;
	// begin inline asm
	@%p12 st.global.b32 [ %rd9 + 0 ], { %r24 };
	// end inline asm
	.loc	1 95 4                          // cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py:95:4
	ret;
$L__tmp18:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ur/cur4fmtg4ivdf5pgip5klclyjcrtht6jzcfnfvkpjwzpgy2cx4nc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 337                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x14a DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 114
.b8 52
.b8 102
.b8 109
.b8 116
.b8 103
.b8 52
.b8 105
.b8 118
.b8 100
.b8 102
.b8 53
.b8 112
.b8 103
.b8 105
.b8 112
.b8 53
.b8 107
.b8 108
.b8 99
.b8 108
.b8 121
.b8 106
.b8 99
.b8 114
.b8 116
.b8 104
.b8 116
.b8 54
.b8 106
.b8 122
.b8 99
.b8 102
.b8 110
.b8 102
.b8 118
.b8 107
.b8 112
.b8 106
.b8 119
.b8 122
.b8 112
.b8 103
.b8 121
.b8 50
.b8 99
.b8 120
.b8 52
.b8 110
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0xbe DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp11                          // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 70                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x10b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp12                          // DW_AT_low_pc
.b64 $L__tmp13                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 71                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x123:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp14                          // DW_AT_low_pc
.b64 $L__tmp15                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 73                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x13b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp16                          // DW_AT_low_pc
.b64 $L__tmp17                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 90                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
