//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_threshold_backward_12 // -- Begin function triton_poi_fused_convolution_relu_threshold_backward_12
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_threshold_backward_12
.visible .entry triton_poi_fused_convolution_relu_threshold_backward_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_12_param_3,
	.param .u32 triton_poi_fused_convolution_relu_threshold_backward_12_param_4,
	.param .u32 triton_poi_fused_convolution_relu_threshold_backward_12_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<62>;
	.reg .b32 	%r<249>;
	.reg .f32 	%f<65>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_relu_threshold_backward_12_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_convolution_relu_threshold_backward_12_param_1];
$L__tmp0:
	.loc	1 22 28                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:22:33
	shl.b32 	%r87, %r1, 6;
	ld.param.u64 	%rd16, [triton_poi_fused_convolution_relu_threshold_backward_12_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused_convolution_relu_threshold_backward_12_param_3];
	.loc	1 23 44                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:23:44
	mov.u32 	%r88, %tid.x;
	shl.b32 	%r89, %r88, 4;
	and.b32  	%r90, %r89, 48;
	bfe.u32 	%r91, %r88, 4, 4;
	.loc	1 23 23                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:23:23
	or.b32  	%r92, %r87, %r90;
	or.b32  	%r93, %r92, 4;
	or.b32  	%r94, %r92, 8;
	or.b32  	%r95, %r92, 12;
	or.b32  	%r96, %r87, %r91;
	.loc	1 25 28                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:25:33
	shl.b32 	%r97, %r2, 6;
	.loc	1 26 44                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:26:44
	shr.u32 	%r98, %r88, 2;
	bfe.u32 	%r99, %r88, 2, 6;
	shl.b32 	%r100, %r88, 2;
	and.b32  	%r101, %r100, 60;
	.loc	1 26 23                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:26:23
	or.b32  	%r102, %r97, %r99;
	or.b32  	%r103, %r97, %r101;
	.loc	1 27 21                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:27:21
	setp.lt.s32 	%p1, %r102, 256;
	setp.lt.s32 	%p25, %r103, 256;
	.loc	1 30 19                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:30:19
	shr.s32 	%r105, %r92, 31;
	shr.u32 	%r106, %r105, 24;
	add.s32 	%r107, %r92, %r106;
	.loc	1 29 19                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:29:19
	and.b32  	%r108, %r107, -256;
	sub.s32 	%r109, %r92, %r108;
	bfe.s32 	%r110, %r1, 25, 1;
	shr.u32 	%r111, %r110, 24;
	add.s32 	%r112, %r93, %r111;
	and.b32  	%r113, %r112, -256;
	sub.s32 	%r114, %r93, %r113;
	add.s32 	%r115, %r94, %r111;
	and.b32  	%r116, %r115, -256;
	sub.s32 	%r117, %r94, %r116;
	add.s32 	%r118, %r95, %r111;
	and.b32  	%r119, %r118, -256;
	sub.s32 	%r120, %r95, %r119;
	.loc	1 32 39                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:39
	shl.b32 	%r121, %r102, 8;
	.loc	1 32 50                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:50
	shl.b32 	%r122, %r107, 8;
	and.b32  	%r123, %r122, -65536;
	.loc	1 32 35                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:35
	add.s32 	%r124, %r123, %r121;
	.loc	1 32 44                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:44
	add.s32 	%r125, %r124, %r109;
	add.s32 	%r126, %r124, %r114;
	add.s32 	%r127, %r124, %r117;
	add.s32 	%r128, %r124, %r120;
	.loc	1 32 30                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:30
	cvt.s64.s32 	%rd18, %r125;
	mul.wide.s32 	%rd19, %r125, 4;
	add.s64 	%rd1, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r126, 4;
	add.s64 	%rd2, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r127, 4;
	add.s64 	%rd3, %rd14, %rd21;
	mul.wide.s32 	%rd22, %r128, 4;
	add.s64 	%rd4, %rd14, %rd22;
	.loc	1 32 55                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:55
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 33 30                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:33:30
	mul.wide.s32 	%rd23, %r109, 4;
	add.s64 	%rd5, %rd15, %rd23;
	mul.wide.s32 	%rd24, %r114, 4;
	add.s64 	%rd6, %rd15, %rd24;
	mul.wide.s32 	%rd25, %r117, 4;
	add.s64 	%rd7, %rd15, %rd25;
	mul.wide.s32 	%rd26, %r120, 4;
	add.s64 	%rd8, %rd15, %rd26;
	mov.pred 	%p5, -1;
	.loc	1 33 35                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:33:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 23 23                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:23:23
	shl.b32 	%r129, %r96, 8;
	.loc	1 39 30                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:39:30
	add.s32 	%r130, %r103, %r129;
	add.s32 	%r131, %r130, 4096;
	add.s32 	%r132, %r130, 8192;
	add.s32 	%r133, %r130, 12288;
	.loc	1 39 25                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:39:25
	mul.wide.s32 	%rd27, %r130, 4;
	add.s64 	%rd9, %rd16, %rd27;
	mul.wide.s32 	%rd28, %r131, 4;
	add.s64 	%rd10, %rd16, %rd28;
	mul.wide.s32 	%rd29, %r132, 4;
	add.s64 	%rd11, %rd16, %rd29;
	mul.wide.s32 	%rd30, %r133, 4;
	add.s64 	%rd12, %rd16, %rd30;
	.loc	1 39 45                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:39:45
	shl.b32 	%r134, %r88, 10;
	and.b32  	%r135, %r134, 3072;
	or.b32  	%r136, %r135, %r99;
	and.b32  	%r137, %r100, 1020;
	shr.u32 	%r138, %r135, 4;
	mov.u32 	%r139, global_smem;
	add.s32 	%r140, %r139, %r138;
	shl.b32 	%r141, %r136, 2;
	add.s32 	%r35, %r140, %r141;
	or.b32  	%r142, %r135, 64;
	shr.u32 	%r143, %r142, 4;
	add.s32 	%r144, %r139, %r143;
	add.s32 	%r145, %r144, %r141;
	add.s32 	%r37, %r145, 256;
	or.b32  	%r146, %r135, 128;
	shr.u32 	%r147, %r146, 4;
	add.s32 	%r148, %r139, %r147;
	add.s32 	%r149, %r148, %r141;
	add.s32 	%r39, %r149, 512;
	or.b32  	%r150, %r135, 192;
	shr.u32 	%r151, %r150, 4;
	add.s32 	%r152, %r139, %r151;
	add.s32 	%r153, %r152, %r141;
	add.s32 	%r41, %r153, 768;
	or.b32  	%r154, %r135, 256;
	shr.u32 	%r155, %r154, 4;
	add.s32 	%r156, %r139, %r155;
	add.s32 	%r157, %r156, %r141;
	add.s32 	%r43, %r157, 1024;
	or.b32  	%r158, %r135, 320;
	shr.u32 	%r159, %r158, 4;
	add.s32 	%r160, %r139, %r159;
	add.s32 	%r161, %r160, %r141;
	add.s32 	%r45, %r161, 1280;
	or.b32  	%r162, %r135, 384;
	shr.u32 	%r163, %r162, 4;
	add.s32 	%r164, %r139, %r163;
	add.s32 	%r165, %r164, %r141;
	add.s32 	%r47, %r165, 1536;
	or.b32  	%r166, %r135, 448;
	shr.u32 	%r167, %r166, 4;
	add.s32 	%r168, %r139, %r167;
	add.s32 	%r169, %r168, %r141;
	add.s32 	%r49, %r169, 1792;
	or.b32  	%r170, %r135, 512;
	shr.u32 	%r171, %r170, 4;
	add.s32 	%r172, %r139, %r171;
	add.s32 	%r173, %r172, %r141;
	add.s32 	%r51, %r173, 2048;
	or.b32  	%r174, %r135, 576;
	shr.u32 	%r175, %r174, 4;
	add.s32 	%r176, %r139, %r175;
	add.s32 	%r177, %r176, %r141;
	add.s32 	%r53, %r177, 2304;
	or.b32  	%r178, %r135, 640;
	shr.u32 	%r179, %r178, 4;
	add.s32 	%r180, %r139, %r179;
	add.s32 	%r181, %r180, %r141;
	add.s32 	%r55, %r181, 2560;
	or.b32  	%r182, %r135, 704;
	shr.u32 	%r183, %r182, 4;
	add.s32 	%r184, %r139, %r183;
	add.s32 	%r185, %r184, %r141;
	add.s32 	%r57, %r185, 2816;
	or.b32  	%r186, %r135, 768;
	shr.u32 	%r187, %r186, 4;
	add.s32 	%r188, %r139, %r187;
	add.s32 	%r189, %r188, %r141;
	add.s32 	%r59, %r189, 3072;
	or.b32  	%r190, %r135, 832;
	shr.u32 	%r191, %r190, 4;
	add.s32 	%r192, %r139, %r191;
	add.s32 	%r193, %r192, %r141;
	add.s32 	%r61, %r193, 3328;
	or.b32  	%r194, %r135, 896;
	shr.u32 	%r195, %r194, 4;
	add.s32 	%r196, %r139, %r195;
	add.s32 	%r197, %r196, %r141;
	add.s32 	%r63, %r197, 3584;
	or.b32  	%r198, %r135, 960;
	shr.u32 	%r199, %r198, 4;
	add.s32 	%r200, %r139, %r199;
	add.s32 	%r201, %r200, %r141;
	add.s32 	%r65, %r201, 3840;
	and.b32  	%r202, %r98, 60;
	add.s32 	%r203, %r139, %r202;
	shl.b32 	%r204, %r137, 2;
	add.s32 	%r205, %r203, %r204;
	or.b32  	%r206, %r137, 1024;
	shr.u32 	%r207, %r206, 4;
	and.b32  	%r208, %r207, 124;
	add.s32 	%r209, %r139, %r208;
	add.s32 	%r210, %r209, %r204;
	or.b32  	%r211, %r137, 2048;
	shr.u32 	%r212, %r211, 4;
	and.b32  	%r213, %r212, 188;
	add.s32 	%r214, %r139, %r213;
	add.s32 	%r215, %r214, %r204;
	or.b32  	%r216, %r137, 3072;
	shr.u32 	%r217, %r216, 4;
	and.b32  	%r218, %r217, 252;
	add.s32 	%r219, %r139, %r218;
	add.s32 	%r220, %r219, %r204;
	.loc	1 40 25                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:40:25
	add.s64 	%rd13, %rd17, %rd18;
	.loc	1 32 55                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:55
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 33 35                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:33:35
	mov.b32 	%f5, %r19;
	mov.b32 	%f6, %r20;
	mov.b32 	%f7, %r21;
	mov.b32 	%f8, %r22;
	.loc	1 34 18                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:34:18
	add.f32 	%f9, %f4, %f8;
	add.f32 	%f10, %f3, %f7;
	add.f32 	%f11, %f2, %f6;
	add.f32 	%f12, %f1, %f5;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p30, %f12, 0f00000000;
	setp.lt.f32 	%p31, %f11, 0f00000000;
	setp.lt.f32 	%p32, %f10, 0f00000000;
	setp.lt.f32 	%p33, %f9, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f13, 0f00000000, %f9, %p33;
	selp.f32 	%f14, 0f00000000, %f10, %p32;
	selp.f32 	%f15, 0f00000000, %f11, %p31;
	selp.f32 	%f16, 0f00000000, %f12, %p30;
$L__tmp2:
	.loc	1 38 19                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:38:19
	setp.le.f32 	%p34, %f16, 0f00000000;
	setp.le.f32 	%p35, %f15, 0f00000000;
	setp.le.f32 	%p36, %f14, 0f00000000;
	setp.le.f32 	%p37, %f13, 0f00000000;
	.loc	1 39 45                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:39:45
	mov.b32 	%r36, %f16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	mov.b32 	%r38, %f15;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	mov.b32 	%r40, %f14;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	mov.b32 	%r42, %f13;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	.loc	1 32 55                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:55
	mov.b32 	%f17, %r7;
	mov.b32 	%f18, %r8;
	mov.b32 	%f19, %r9;
	mov.b32 	%f20, %r10;
	.loc	1 33 35                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:33:35
	mov.b32 	%f21, %r23;
	mov.b32 	%f22, %r24;
	mov.b32 	%f23, %r25;
	mov.b32 	%f24, %r26;
	.loc	1 34 18                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:34:18
	add.f32 	%f25, %f20, %f24;
	add.f32 	%f26, %f19, %f23;
	add.f32 	%f27, %f18, %f22;
	add.f32 	%f28, %f17, %f21;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p38, %f28, 0f00000000;
	setp.lt.f32 	%p39, %f27, 0f00000000;
	setp.lt.f32 	%p40, %f26, 0f00000000;
	setp.lt.f32 	%p41, %f25, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f29, 0f00000000, %f25, %p41;
	selp.f32 	%f30, 0f00000000, %f26, %p40;
	selp.f32 	%f31, 0f00000000, %f27, %p39;
	selp.f32 	%f32, 0f00000000, %f28, %p38;
$L__tmp4:
	.loc	1 38 19                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:38:19
	setp.le.f32 	%p42, %f32, 0f00000000;
	setp.le.f32 	%p43, %f31, 0f00000000;
	setp.le.f32 	%p44, %f30, 0f00000000;
	setp.le.f32 	%p45, %f29, 0f00000000;
	.loc	1 39 45                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:39:45
	mov.b32 	%r44, %f32;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	mov.b32 	%r46, %f31;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	mov.b32 	%r48, %f30;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	mov.b32 	%r50, %f29;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	.loc	1 32 55                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:55
	mov.b32 	%f33, %r11;
	mov.b32 	%f34, %r12;
	mov.b32 	%f35, %r13;
	mov.b32 	%f36, %r14;
	.loc	1 33 35                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:33:35
	mov.b32 	%f37, %r27;
	mov.b32 	%f38, %r28;
	mov.b32 	%f39, %r29;
	mov.b32 	%f40, %r30;
	.loc	1 34 18                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:34:18
	add.f32 	%f41, %f36, %f40;
	add.f32 	%f42, %f35, %f39;
	add.f32 	%f43, %f34, %f38;
	add.f32 	%f44, %f33, %f37;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p46, %f44, 0f00000000;
	setp.lt.f32 	%p47, %f43, 0f00000000;
	setp.lt.f32 	%p48, %f42, 0f00000000;
	setp.lt.f32 	%p49, %f41, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f45, 0f00000000, %f41, %p49;
	selp.f32 	%f46, 0f00000000, %f42, %p48;
	selp.f32 	%f47, 0f00000000, %f43, %p47;
	selp.f32 	%f48, 0f00000000, %f44, %p46;
$L__tmp6:
	.loc	1 38 19                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:38:19
	setp.le.f32 	%p50, %f48, 0f00000000;
	setp.le.f32 	%p51, %f47, 0f00000000;
	setp.le.f32 	%p52, %f46, 0f00000000;
	setp.le.f32 	%p53, %f45, 0f00000000;
	.loc	1 39 45                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:39:45
	mov.b32 	%r52, %f48;
	// begin inline asm
	@%p5 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	mov.b32 	%r54, %f47;
	// begin inline asm
	@%p5 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	mov.b32 	%r56, %f46;
	// begin inline asm
	@%p5 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	mov.b32 	%r58, %f45;
	// begin inline asm
	@%p5 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	.loc	1 32 55                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:32:55
	mov.b32 	%f49, %r15;
	mov.b32 	%f50, %r16;
	mov.b32 	%f51, %r17;
	mov.b32 	%f52, %r18;
	.loc	1 33 35                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:33:35
	mov.b32 	%f53, %r31;
	mov.b32 	%f54, %r32;
	mov.b32 	%f55, %r33;
	mov.b32 	%f56, %r34;
	.loc	1 34 18                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:34:18
	add.f32 	%f57, %f52, %f56;
	add.f32 	%f58, %f51, %f55;
	add.f32 	%f59, %f50, %f54;
	add.f32 	%f60, %f49, %f53;
$L__tmp7:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p54, %f60, 0f00000000;
	setp.lt.f32 	%p55, %f59, 0f00000000;
	setp.lt.f32 	%p56, %f58, 0f00000000;
	setp.lt.f32 	%p57, %f57, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f61, 0f00000000, %f57, %p57;
	selp.f32 	%f62, 0f00000000, %f58, %p56;
	selp.f32 	%f63, 0f00000000, %f59, %p55;
	selp.f32 	%f64, 0f00000000, %f60, %p54;
$L__tmp8:
	.loc	1 38 19                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:38:19
	setp.le.f32 	%p58, %f64, 0f00000000;
	setp.le.f32 	%p59, %f63, 0f00000000;
	setp.le.f32 	%p60, %f62, 0f00000000;
	setp.le.f32 	%p61, %f61, 0f00000000;
	.loc	1 39 45                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:39:45
	mov.b32 	%r60, %f64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	mov.b32 	%r62, %f63;
	// begin inline asm
	@%p5 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	mov.b32 	%r64, %f62;
	// begin inline asm
	@%p5 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	mov.b32 	%r66, %f61;
	// begin inline asm
	@%p5 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r67, [%r205];
	ld.shared.u32 	%r68, [%r205+4];
	ld.shared.u32 	%r69, [%r205+8];
	ld.shared.u32 	%r70, [%r205+12];
	ld.shared.u32 	%r71, [%r210+4096];
	ld.shared.u32 	%r72, [%r210+4100];
	ld.shared.u32 	%r73, [%r210+4104];
	ld.shared.u32 	%r74, [%r210+4108];
	ld.shared.u32 	%r75, [%r215+8192];
	ld.shared.u32 	%r76, [%r215+8196];
	ld.shared.u32 	%r77, [%r215+8200];
	ld.shared.u32 	%r78, [%r215+8204];
	ld.shared.u32 	%r79, [%r220+12288];
	ld.shared.u32 	%r80, [%r220+12292];
	ld.shared.u32 	%r81, [%r220+12296];
	ld.shared.u32 	%r82, [%r220+12300];
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd9 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd10 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd11 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd12 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	.loc	1 40 56                         // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:40:56
	selp.u32 	%r221, 1, 0, %p37;
	selp.u32 	%r222, 1, 0, %p36;
	prmt.b32 	%r223, %r222, %r221, 0x3340U;
	selp.u32 	%r224, 1, 0, %p35;
	selp.u32 	%r225, 1, 0, %p34;
	prmt.b32 	%r226, %r225, %r224, 0x3340U;
	prmt.b32 	%r227, %r226, %r223, 0x5410U;
	selp.u32 	%r228, 1, 0, %p45;
	selp.u32 	%r229, 1, 0, %p44;
	prmt.b32 	%r230, %r229, %r228, 0x3340U;
	selp.u32 	%r231, 1, 0, %p43;
	selp.u32 	%r232, 1, 0, %p42;
	prmt.b32 	%r233, %r232, %r231, 0x3340U;
	prmt.b32 	%r234, %r233, %r230, 0x5410U;
	selp.u32 	%r235, 1, 0, %p53;
	selp.u32 	%r236, 1, 0, %p52;
	prmt.b32 	%r237, %r236, %r235, 0x3340U;
	selp.u32 	%r238, 1, 0, %p51;
	selp.u32 	%r239, 1, 0, %p50;
	prmt.b32 	%r240, %r239, %r238, 0x3340U;
	prmt.b32 	%r241, %r240, %r237, 0x5410U;
	selp.u32 	%r242, 1, 0, %p61;
	selp.u32 	%r243, 1, 0, %p60;
	prmt.b32 	%r244, %r243, %r242, 0x3340U;
	selp.u32 	%r245, 1, 0, %p59;
	selp.u32 	%r246, 1, 0, %p58;
	prmt.b32 	%r247, %r246, %r245, 0x3340U;
	prmt.b32 	%r248, %r247, %r244, 0x5410U;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r227, %r234, %r241, %r248 };
	// end inline asm
	.loc	1 40 4                          // coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py:40:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/oe/coe5l3k7y6o4xusfk3vwn4yvyx444tvovt7e7bdekr63y6glyhme.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 200                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 101
.b8 53
.b8 108
.b8 51
.b8 107
.b8 55
.b8 121
.b8 54
.b8 111
.b8 52
.b8 120
.b8 117
.b8 115
.b8 102
.b8 107
.b8 51
.b8 118
.b8 119
.b8 110
.b8 52
.b8 121
.b8 118
.b8 121
.b8 120
.b8 52
.b8 52
.b8 52
.b8 116
.b8 118
.b8 111
.b8 118
.b8 116
.b8 55
.b8 101
.b8 55
.b8 98
.b8 100
.b8 101
.b8 107
.b8 114
.b8 54
.b8 51
.b8 121
.b8 54
.b8 103
.b8 108
.b8 121
.b8 104
.b8 109
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
