//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__softmax_mean_1 // -- Begin function triton_poi_fused__softmax_mean_1
                                        // @triton_poi_fused__softmax_mean_1
.visible .entry triton_poi_fused__softmax_mean_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mean_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_mean_1_param_1,
	.param .u32 triton_poi_fused__softmax_mean_1_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<51>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_poi_fused__softmax_mean_1_param_0];
	ld.param.u64 	%rd19, [triton_poi_fused__softmax_mean_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:21:33
	shl.b32 	%r31, %r1, 2;
	.loc	1 22 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:22:36
	mov.u32 	%r32, %tid.x;
	and.b32  	%r33, %r32, 28;
	and.b32  	%r34, %r32, 3;
	.loc	1 22 23                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:22:23
	or.b32  	%r35, %r31, %r34;
	.loc	1 23 21                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:23:21
	setp.lt.s32 	%p1, %r35, 4;
	.loc	1 25 30                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:25:30
	mul.wide.s32 	%rd20, %r35, 4;
	add.s64 	%rd1, %rd18, %rd20;
	.loc	1 25 35                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:25:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 26 35                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:26:35
	add.s32 	%r36, %r35, 16;
	.loc	1 26 30                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:26:30
	mul.wide.s32 	%rd21, %r36, 4;
	add.s64 	%rd2, %rd18, %rd21;
	.loc	1 26 40                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:26:40
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 27 35                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:27:35
	add.s32 	%r37, %r35, 32;
	.loc	1 27 30                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:27:30
	mul.wide.s32 	%rd22, %r37, 4;
	add.s64 	%rd3, %rd18, %rd22;
	.loc	1 27 40                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:27:40
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 28 35                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:28:35
	add.s32 	%r38, %r35, 48;
	.loc	1 28 30                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:28:30
	mul.wide.s32 	%rd23, %r38, 4;
	add.s64 	%rd4, %rd18, %rd23;
	.loc	1 28 40                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:28:40
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 29 34                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:29:34
	add.s32 	%r39, %r35, 4;
	.loc	1 29 30                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:29:30
	mul.wide.s32 	%rd24, %r39, 4;
	add.s64 	%rd5, %rd18, %rd24;
	.loc	1 29 39                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:29:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	.loc	1 30 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:30:36
	add.s32 	%r40, %r35, 20;
	.loc	1 30 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:30:31
	mul.wide.s32 	%rd25, %r40, 4;
	add.s64 	%rd6, %rd18, %rd25;
	.loc	1 30 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:30:41
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	.loc	1 31 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:31:36
	add.s32 	%r41, %r35, 36;
	.loc	1 31 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:31:31
	mul.wide.s32 	%rd26, %r41, 4;
	add.s64 	%rd7, %rd18, %rd26;
	.loc	1 31 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:31:41
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	.loc	1 32 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:32:36
	add.s32 	%r42, %r35, 52;
	.loc	1 32 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:32:31
	mul.wide.s32 	%rd27, %r42, 4;
	add.s64 	%rd8, %rd18, %rd27;
	.loc	1 32 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:32:41
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 33 35                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:33:35
	add.s32 	%r43, %r35, 8;
	.loc	1 33 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:33:31
	mul.wide.s32 	%rd28, %r43, 4;
	add.s64 	%rd9, %rd18, %rd28;
	.loc	1 33 40                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:33:40
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	.loc	1 34 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:34:36
	add.s32 	%r44, %r35, 24;
	.loc	1 34 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:34:31
	mul.wide.s32 	%rd29, %r44, 4;
	add.s64 	%rd10, %rd18, %rd29;
	.loc	1 34 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:34:41
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	.loc	1 35 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:35:36
	add.s32 	%r45, %r35, 40;
	.loc	1 35 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:35:31
	mul.wide.s32 	%rd30, %r45, 4;
	add.s64 	%rd11, %rd18, %rd30;
	.loc	1 35 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:35:41
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.b32 { %r12 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	.loc	1 36 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:36:36
	add.s32 	%r46, %r35, 56;
	.loc	1 36 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:36:31
	mul.wide.s32 	%rd31, %r46, 4;
	add.s64 	%rd12, %rd18, %rd31;
	.loc	1 36 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:36:41
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 37 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:37:36
	add.s32 	%r47, %r35, 12;
	.loc	1 37 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:37:31
	mul.wide.s32 	%rd32, %r47, 4;
	add.s64 	%rd13, %rd18, %rd32;
	.loc	1 37 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:37:41
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	.loc	1 38 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:38:36
	add.s32 	%r48, %r35, 28;
	.loc	1 38 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:38:31
	mul.wide.s32 	%rd33, %r48, 4;
	add.s64 	%rd14, %rd18, %rd33;
	.loc	1 38 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:38:41
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.b32 { %r15 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r15;
	.loc	1 39 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:39:36
	add.s32 	%r49, %r35, 44;
	.loc	1 39 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:39:31
	mul.wide.s32 	%rd34, %r49, 4;
	add.s64 	%rd15, %rd18, %rd34;
	.loc	1 39 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:39:41
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.b32 { %r16 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r16;
	.loc	1 40 36                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:40:36
	add.s32 	%r50, %r35, 60;
	.loc	1 40 31                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:40:31
	mul.wide.s32 	%rd35, %r50, 4;
	add.s64 	%rd16, %rd18, %rd35;
	.loc	1 40 41                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:40:41
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.b32 { %r17 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r17;
	.loc	1 41 18                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:41:18
	add.f32 	%f17, %f1, %f2;
	.loc	1 42 18                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:42:18
	add.f32 	%f18, %f17, %f3;
	.loc	1 43 18                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:43:18
	add.f32 	%f19, %f18, %f4;
	.loc	1 45 18                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:45:18
	mov.b32 	%r19, %f19;
	mov.b32 	%r20, 1082130432;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f20, %r18;
	.loc	1 46 19                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:46:19
	add.f32 	%f21, %f5, %f6;
	.loc	1 47 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:47:20
	add.f32 	%f22, %f21, %f7;
	.loc	1 48 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:48:20
	add.f32 	%f23, %f22, %f8;
	.loc	1 49 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:49:20
	mov.b32 	%r22, %f23;
	// begin inline asm
	div.full.f32 %r21, %r22, %r20;
	// end inline asm
	mov.b32 	%f24, %r21;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p18, %f20, %f24;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p19, %f20, %f20;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, %f20, %f24, %p18;
	selp.f32 	%f26, %f20, %f25, %p19;
$L__tmp2:
	.loc	1 51 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:51:20
	add.f32 	%f27, %f9, %f10;
	.loc	1 52 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:52:20
	add.f32 	%f28, %f27, %f11;
	.loc	1 53 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:53:20
	add.f32 	%f29, %f28, %f12;
	.loc	1 54 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:54:20
	mov.b32 	%r25, %f29;
	// begin inline asm
	div.full.f32 %r24, %r25, %r20;
	// end inline asm
	mov.b32 	%f30, %r24;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p20, %f26, %f30;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p21, %f26, %f26;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f31, %f26, %f30, %p21;
	selp.f32 	%f32, %f26, %f31, %p20;
$L__tmp4:
	.loc	1 56 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:56:20
	add.f32 	%f33, %f13, %f14;
	.loc	1 57 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:57:20
	add.f32 	%f34, %f33, %f15;
	.loc	1 58 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:58:20
	add.f32 	%f35, %f34, %f16;
	.loc	1 59 20                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:59:20
	mov.b32 	%r28, %f35;
	// begin inline asm
	div.full.f32 %r27, %r28, %r20;
	// end inline asm
	mov.b32 	%f36, %r27;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p22, %f32, %f36;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p23, %f32, %f32;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f37, %f32, %f36, %p23;
	selp.f32 	%f38, %f32, %f37, %p22;
$L__tmp6:
	.loc	1 61 25                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:61:25
	add.s64 	%rd17, %rd19, %rd20;
	.loc	1 61 37                         // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:61:37
	setp.eq.s32 	%p24, %r33, 0;
	mov.b32 	%r30, %f38;
	and.pred  	%p17, %p24, %p1;
	// begin inline asm
	@%p17 st.global.b32 [ %rd17 + 0 ], { %r30 };
	// end inline asm
	.loc	1 61 4                          // cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py:61:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ng/cngmnrcdwiq7g5o6bscfs5jceydpvzbw7rct4nnsgfb5xyilb6hq.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 225                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xda DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 103
.b8 109
.b8 110
.b8 114
.b8 99
.b8 100
.b8 119
.b8 105
.b8 113
.b8 55
.b8 103
.b8 53
.b8 111
.b8 54
.b8 98
.b8 115
.b8 99
.b8 102
.b8 115
.b8 53
.b8 106
.b8 99
.b8 101
.b8 121
.b8 100
.b8 112
.b8 118
.b8 122
.b8 98
.b8 119
.b8 55
.b8 114
.b8 99
.b8 116
.b8 52
.b8 110
.b8 110
.b8 115
.b8 103
.b8 102
.b8 98
.b8 53
.b8 120
.b8 121
.b8 105
.b8 108
.b8 98
.b8 54
.b8 104
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x23 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
