; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 2048, !dbg !14
  %11 = srem i32 %9, 128, !dbg !15
  %12 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %13 = shufflevector <2 x i32> %12, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %14 = sdiv <2 x i32> %13, <i32 256, i32 128>, !dbg !16
  %15 = srem <2 x i32> %14, splat (i32 2), !dbg !17
  %16 = extractelement <2 x i32> %15, i64 0, !dbg !18
  %17 = icmp sgt i32 %16, 0, !dbg !19
  %18 = icmp sgt <2 x i32> %15, <i32 -1, i32 0>, !dbg !20
  %19 = extractelement <2 x i1> %18, i64 1, !dbg !21
  %20 = and i1 %17, %19, !dbg !21
  %21 = extractelement <2 x i32> %15, i64 1, !dbg !18
  %22 = shl nsw i32 %21, 8, !dbg !22
  %23 = extractelement <2 x i32> %14, i64 0, !dbg !23
  %24 = shl i32 %23, 10, !dbg !23
  %25 = add i32 %24, %11, !dbg !24
  %26 = add i32 %25, -640, !dbg !25
  %27 = add i32 %26, %22, !dbg !26
  %28 = sext i32 %27 to i64, !dbg !27
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !27
  %30 = and i1 %10, %20, !dbg !28
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %30, i32 -8388608, i1 %30) #1, !dbg !29
  %32 = bitcast i32 %31 to float, !dbg !29
  %33 = icmp sgt i32 %21, -1, !dbg !30
  %34 = and i1 %17, %33, !dbg !31
  %35 = add i32 %25, -512, !dbg !32
  %36 = add i32 %35, %22, !dbg !33
  %37 = sext i32 %36 to i64, !dbg !34
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !34
  %39 = and i1 %10, %34, !dbg !35
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %39, i32 -8388608, i1 %39) #1, !dbg !36
  %41 = bitcast i32 %40 to float, !dbg !36
  %42 = fcmp ogt float %41, %32, !dbg !37
  %43 = fcmp uno float %41, 0.000000e+00, !dbg !41
  %44 = or i1 %42, %43, !dbg !42
  %45 = select i1 %44, float %41, float %32, !dbg !43
  %46 = add i32 %25, -384, !dbg !44
  %47 = add i32 %46, %22, !dbg !45
  %48 = sext i32 %47 to i64, !dbg !46
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !46
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %39, i32 -8388608, i1 %39) #1, !dbg !47
  %51 = bitcast i32 %50 to float, !dbg !47
  %52 = fcmp olt float %45, %51, !dbg !48
  %53 = fcmp uno float %51, 0.000000e+00, !dbg !50
  %54 = or i1 %53, %52, !dbg !51
  %55 = select i1 %54, float %51, float %45, !dbg !52
  %56 = extractelement <2 x i1> %18, i64 0, !dbg !53
  %57 = and i1 %56, %19, !dbg !53
  %58 = add i32 %25, -128, !dbg !54
  %59 = add i32 %58, %22, !dbg !55
  %60 = sext i32 %59 to i64, !dbg !56
  %61 = getelementptr float, ptr addrspace(1) %0, i64 %60, !dbg !56
  %62 = and i1 %10, %57, !dbg !57
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %62, i32 -8388608, i1 %62) #1, !dbg !58
  %64 = bitcast i32 %63 to float, !dbg !58
  %65 = fcmp olt float %55, %64, !dbg !59
  %66 = fcmp uno float %64, 0.000000e+00, !dbg !61
  %67 = or i1 %66, %65, !dbg !62
  %68 = select i1 %67, float %64, float %55, !dbg !63
  %69 = or i32 %16, %21, !dbg !18
  %70 = icmp sgt i32 %69, -1, !dbg !18
  %71 = add i32 %25, %22, !dbg !64
  %72 = sext i32 %71 to i64, !dbg !65
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !65
  %74 = and i1 %10, %70, !dbg !66
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %74, i32 -8388608, i1 %74) #1, !dbg !67
  %76 = bitcast i32 %75 to float, !dbg !67
  %77 = fcmp olt float %68, %76, !dbg !68
  %78 = fcmp uno float %76, 0.000000e+00, !dbg !70
  %79 = or i1 %78, %77, !dbg !71
  %80 = select i1 %79, float %76, float %68, !dbg !72
  %81 = add i32 %25, 128, !dbg !73
  %82 = add i32 %81, %22, !dbg !74
  %83 = sext i32 %82 to i64, !dbg !75
  %84 = getelementptr float, ptr addrspace(1) %0, i64 %83, !dbg !75
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %84, i1 %74, i32 -8388608, i1 %74) #1, !dbg !76
  %86 = bitcast i32 %85 to float, !dbg !76
  %87 = fcmp olt float %80, %86, !dbg !77
  %88 = fcmp uno float %86, 0.000000e+00, !dbg !79
  %89 = or i1 %88, %87, !dbg !80
  %90 = select i1 %89, float %86, float %80, !dbg !81
  %91 = add i32 %25, 384, !dbg !82
  %92 = add i32 %91, %22, !dbg !83
  %93 = sext i32 %92 to i64, !dbg !84
  %94 = getelementptr float, ptr addrspace(1) %0, i64 %93, !dbg !84
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %62, i32 -8388608, i1 %62) #1, !dbg !85
  %96 = bitcast i32 %95 to float, !dbg !85
  %97 = fcmp olt float %90, %96, !dbg !86
  %98 = fcmp uno float %96, 0.000000e+00, !dbg !88
  %99 = or i1 %98, %97, !dbg !89
  %100 = select i1 %99, float %96, float %90, !dbg !90
  %101 = add i32 %25, 512, !dbg !91
  %102 = add i32 %101, %22, !dbg !92
  %103 = sext i32 %102 to i64, !dbg !93
  %104 = getelementptr float, ptr addrspace(1) %0, i64 %103, !dbg !93
  %105 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %104, i1 %74, i32 -8388608, i1 %74) #1, !dbg !94
  %106 = bitcast i32 %105 to float, !dbg !94
  %107 = fcmp olt float %100, %106, !dbg !95
  %108 = fcmp uno float %106, 0.000000e+00, !dbg !97
  %109 = or i1 %108, %107, !dbg !98
  %110 = select i1 %109, float %106, float %100, !dbg !99
  %111 = add i32 %25, 640, !dbg !100
  %112 = add i32 %111, %22, !dbg !101
  %113 = sext i32 %112 to i64, !dbg !102
  %114 = getelementptr float, ptr addrspace(1) %0, i64 %113, !dbg !102
  %115 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %114, i1 %74, i32 -8388608, i1 %74) #1, !dbg !103
  %116 = bitcast i32 %115 to float, !dbg !103
  %117 = fcmp olt float %110, %116, !dbg !104
  %118 = fcmp uno float %116, 0.000000e+00, !dbg !106
  %119 = or i1 %118, %117, !dbg !107
  %120 = zext i1 %42 to i8, !dbg !108
  %121 = select i1 %52, i8 2, i8 %120, !dbg !109
  %122 = select i1 %65, i8 3, i8 %121, !dbg !110
  %123 = select i1 %77, i8 4, i8 %122, !dbg !111
  %124 = select i1 %87, i8 5, i8 %123, !dbg !112
  %125 = select i1 %97, i8 6, i8 %124, !dbg !113
  %126 = select i1 %107, i8 7, i8 %125, !dbg !114
  %127 = select i1 %117, i8 8, i8 %126, !dbg !115
  %128 = sext i32 %9 to i64, !dbg !116
  %129 = getelementptr float, ptr addrspace(1) %1, i64 %128, !dbg !116
  %130 = bitcast float %110 to i32, !dbg !117
  %131 = select i1 %119, i32 %115, i32 %130, !dbg !118
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %131, ptr addrspace(1) %129, i1 %10) #1, !dbg !117
  %132 = getelementptr i8, ptr addrspace(1) %2, i64 %128, !dbg !119
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %127, ptr addrspace(1) %132, i1 %10) #1, !dbg !120
  ret void, !dbg !121
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6eduf6ht7p25cnpj5ogopghs5yyasqxeocyr4crmkx7zzybdwps.py", directory: "inductor_cache/6e")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_10", linkageName: "triton_poi_fused_max_pool2d_with_indices_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 21, scope: !7)
!17 = !DILocation(line: 24, column: 28, scope: !7)
!18 = !DILocation(line: 62, column: 20, scope: !7)
!19 = !DILocation(line: 31, column: 19, scope: !7)
!20 = !DILocation(line: 56, column: 21, scope: !7)
!21 = !DILocation(line: 39, column: 19, scope: !7)
!22 = !DILocation(line: 40, column: 49, scope: !7)
!23 = !DILocation(line: 40, column: 59, scope: !7)
!24 = !DILocation(line: 40, column: 40, scope: !7)
!25 = !DILocation(line: 40, column: 45, scope: !7)
!26 = !DILocation(line: 40, column: 54, scope: !7)
!27 = !DILocation(line: 40, column: 31, scope: !7)
!28 = !DILocation(line: 40, column: 72, scope: !7)
!29 = !DILocation(line: 40, column: 64, scope: !7)
!30 = !DILocation(line: 42, column: 21, scope: !7)
!31 = !DILocation(line: 45, column: 19, scope: !7)
!32 = !DILocation(line: 46, column: 45, scope: !7)
!33 = !DILocation(line: 46, column: 54, scope: !7)
!34 = !DILocation(line: 46, column: 31, scope: !7)
!35 = !DILocation(line: 46, column: 72, scope: !7)
!36 = !DILocation(line: 46, column: 64, scope: !7)
!37 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 47, column: 42, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!44 = !DILocation(line: 53, column: 45, scope: !7)
!45 = !DILocation(line: 53, column: 54, scope: !7)
!46 = !DILocation(line: 53, column: 31, scope: !7)
!47 = !DILocation(line: 53, column: 64, scope: !7)
!48 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !49)
!49 = !DILocation(line: 54, column: 42, scope: !7)
!50 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !49)
!51 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !49)
!52 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !49)
!53 = !DILocation(line: 59, column: 20, scope: !7)
!54 = !DILocation(line: 60, column: 45, scope: !7)
!55 = !DILocation(line: 60, column: 54, scope: !7)
!56 = !DILocation(line: 60, column: 31, scope: !7)
!57 = !DILocation(line: 60, column: 72, scope: !7)
!58 = !DILocation(line: 60, column: 64, scope: !7)
!59 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !60)
!60 = !DILocation(line: 61, column: 42, scope: !7)
!61 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !60)
!62 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !60)
!63 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !60)
!64 = !DILocation(line: 63, column: 45, scope: !7)
!65 = !DILocation(line: 63, column: 31, scope: !7)
!66 = !DILocation(line: 63, column: 63, scope: !7)
!67 = !DILocation(line: 63, column: 55, scope: !7)
!68 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !69)
!69 = !DILocation(line: 64, column: 42, scope: !7)
!70 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !69)
!71 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !69)
!72 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !69)
!73 = !DILocation(line: 66, column: 42, scope: !7)
!74 = !DILocation(line: 66, column: 51, scope: !7)
!75 = !DILocation(line: 66, column: 31, scope: !7)
!76 = !DILocation(line: 66, column: 61, scope: !7)
!77 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !78)
!78 = !DILocation(line: 67, column: 42, scope: !7)
!79 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !78)
!80 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !78)
!81 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !78)
!82 = !DILocation(line: 73, column: 42, scope: !7)
!83 = !DILocation(line: 73, column: 51, scope: !7)
!84 = !DILocation(line: 73, column: 31, scope: !7)
!85 = !DILocation(line: 73, column: 61, scope: !7)
!86 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !87)
!87 = !DILocation(line: 74, column: 42, scope: !7)
!88 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !87)
!89 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !87)
!90 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !87)
!91 = !DILocation(line: 76, column: 42, scope: !7)
!92 = !DILocation(line: 76, column: 51, scope: !7)
!93 = !DILocation(line: 76, column: 31, scope: !7)
!94 = !DILocation(line: 76, column: 61, scope: !7)
!95 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !96)
!96 = !DILocation(line: 77, column: 42, scope: !7)
!97 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !96)
!98 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !96)
!99 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !96)
!100 = !DILocation(line: 79, column: 42, scope: !7)
!101 = !DILocation(line: 79, column: 51, scope: !7)
!102 = !DILocation(line: 79, column: 31, scope: !7)
!103 = !DILocation(line: 79, column: 61, scope: !7)
!104 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !105)
!105 = !DILocation(line: 80, column: 42, scope: !7)
!106 = !DILocation(line: 120, column: 21, scope: !38, inlinedAt: !105)
!107 = !DILocation(line: 120, column: 16, scope: !38, inlinedAt: !105)
!108 = !DILocation(line: 84, column: 35, scope: !7)
!109 = !DILocation(line: 87, column: 35, scope: !7)
!110 = !DILocation(line: 90, column: 35, scope: !7)
!111 = !DILocation(line: 93, column: 35, scope: !7)
!112 = !DILocation(line: 96, column: 35, scope: !7)
!113 = !DILocation(line: 99, column: 35, scope: !7)
!114 = !DILocation(line: 102, column: 35, scope: !7)
!115 = !DILocation(line: 105, column: 35, scope: !7)
!116 = !DILocation(line: 106, column: 25, scope: !7)
!117 = !DILocation(line: 106, column: 37, scope: !7)
!118 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !105)
!119 = !DILocation(line: 107, column: 25, scope: !7)
!120 = !DILocation(line: 107, column: 37, scope: !7)
!121 = !DILocation(line: 107, column: 4, scope: !7)
