; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %12, 128, !dbg !12
  %14 = or disjoint i32 %10, %12, !dbg !13
  %15 = or disjoint i32 %10, %13, !dbg !13
  %16 = icmp slt i32 %14, 256, !dbg !14
  %17 = icmp slt i32 %15, 256, !dbg !14
  %18 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %19 = shl i32 %18, 1, !dbg !16
  %20 = icmp slt i32 %19, 256, !dbg !17
  %21 = shl i32 %14, 8, !dbg !18
  %22 = shl i32 %15, 8, !dbg !18
  %23 = add i32 %21, %19, !dbg !19
  %24 = add i32 %22, %19, !dbg !19
  %25 = sext i32 %23 to i64, !dbg !20
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !20
  %27 = sext i32 %24 to i64, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !20
  %29 = and i1 %20, %16, !dbg !21
  %30 = and i1 %20, %17, !dbg !21
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 %29) #4, !dbg !22
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !22
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !22
  %34 = bitcast i32 %32 to float, !dbg !22
  %35 = bitcast i32 %33 to float, !dbg !22
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %30) #4, !dbg !22
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !22
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !22
  %39 = bitcast i32 %37 to float, !dbg !22
  %40 = bitcast i32 %38 to float, !dbg !22
  %41 = sext i32 %19 to i64, !dbg !23
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !23
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %20) #4, !dbg !24
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !24
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !24
  %46 = bitcast i32 %44 to float, !dbg !24
  %47 = bitcast i32 %45 to float, !dbg !24
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !25
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %48, i1 %20) #4, !dbg !26
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !26
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !26
  %52 = bitcast i32 %50 to float, !dbg !26
  %53 = bitcast i32 %51 to float, !dbg !26
  %54 = getelementptr float, ptr addrspace(1) %3, i64 %41, !dbg !27
  %55 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %54, i1 %20) #4, !dbg !28
  %56 = extractvalue { i32, i32 } %55, 0, !dbg !28
  %57 = extractvalue { i32, i32 } %55, 1, !dbg !28
  %58 = bitcast i32 %56 to float, !dbg !28
  %59 = bitcast i32 %57 to float, !dbg !28
  %60 = getelementptr float, ptr addrspace(1) %4, i64 %41, !dbg !29
  %61 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %60, i1 %20) #4, !dbg !30
  %62 = extractvalue { i32, i32 } %61, 0, !dbg !30
  %63 = extractvalue { i32, i32 } %61, 1, !dbg !30
  %64 = bitcast i32 %62 to float, !dbg !30
  %65 = bitcast i32 %63 to float, !dbg !30
  %66 = fsub float %34, %46, !dbg !31
  %67 = fsub float %35, %47, !dbg !31
  %68 = fsub float %39, %46, !dbg !31
  %69 = fsub float %40, %47, !dbg !31
  %70 = fadd float %52, 0x3EE4F8B580000000, !dbg !32
  %71 = fadd float %53, 0x3EE4F8B580000000, !dbg !32
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not.i = icmp eq i32 %72, 0, !dbg !33
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #4, !dbg !33
  %.not1.i = icmp eq i32 %73, 0, !dbg !33
  br i1 %.not.i, label %79, label %74, !dbg !33

74:                                               ; preds = %8
  br i1 %.not1.i, label %77, label %75, !dbg !33

75:                                               ; preds = %74
  %76 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %70) #4, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

77:                                               ; preds = %74
  %78 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %70) #4, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

79:                                               ; preds = %8
  br i1 %.not1.i, label %82, label %80, !dbg !33

80:                                               ; preds = %79
  %81 = tail call float @llvm.nvvm.sqrt.rn.f(float %70) #4, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

82:                                               ; preds = %79
  %83 = tail call float @llvm.nvvm.sqrt.approx.f(float %70) #4, !dbg !33
  br label %__nv_sqrtf.exit, !dbg !33

__nv_sqrtf.exit:                                  ; preds = %75, %77, %80, %82
  %.0.i = phi float [ %76, %75 ], [ %78, %77 ], [ %81, %80 ], [ %83, %82 ], !dbg !33
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !33
  %.not.i7 = icmp eq i32 %84, 0, !dbg !33
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #4, !dbg !33
  %.not1.i10 = icmp eq i32 %85, 0, !dbg !33
  br i1 %.not.i7, label %91, label %86, !dbg !33

86:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i10, label %89, label %87, !dbg !33

87:                                               ; preds = %86
  %88 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %71) #4, !dbg !33
  br label %__nv_sqrtf.exit11, !dbg !33

89:                                               ; preds = %86
  %90 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %71) #4, !dbg !33
  br label %__nv_sqrtf.exit11, !dbg !33

91:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i10, label %94, label %92, !dbg !33

92:                                               ; preds = %91
  %93 = tail call float @llvm.nvvm.sqrt.rn.f(float %71) #4, !dbg !33
  br label %__nv_sqrtf.exit11, !dbg !33

94:                                               ; preds = %91
  %95 = tail call float @llvm.nvvm.sqrt.approx.f(float %71) #4, !dbg !33
  br label %__nv_sqrtf.exit11, !dbg !33

__nv_sqrtf.exit11:                                ; preds = %87, %89, %92, %94
  %.0.i9 = phi float [ %88, %87 ], [ %90, %89 ], [ %93, %92 ], [ %95, %94 ], !dbg !33
  %96 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #4, !dbg !34
  %97 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i9) #4, !dbg !34
  %98 = fmul float %66, %96, !dbg !35
  %99 = fmul float %67, %97, !dbg !35
  %100 = fmul float %68, %96, !dbg !35
  %101 = fmul float %69, %97, !dbg !35
  %102 = fmul float %98, %58, !dbg !36
  %103 = fmul float %99, %59, !dbg !36
  %104 = fmul float %100, %58, !dbg !36
  %105 = fmul float %101, %59, !dbg !36
  %106 = fadd float %102, %64, !dbg !37
  %107 = fadd float %103, %65, !dbg !37
  %108 = fadd float %104, %64, !dbg !37
  %109 = fadd float %105, %65, !dbg !37
  %110 = fcmp ogt float %106, 2.000000e+01, !dbg !38
  %111 = fcmp ogt float %107, 2.000000e+01, !dbg !38
  %112 = fcmp ogt float %108, 2.000000e+01, !dbg !38
  %113 = fcmp ogt float %109, 2.000000e+01, !dbg !38
  %114 = fmul float %106, 0x3FF7154760000000, !dbg !39
  %115 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %114) #4, !dbg !39
  %116 = fmul float %107, 0x3FF7154760000000, !dbg !39
  %117 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %116) #4, !dbg !39
  %118 = fmul float %108, 0x3FF7154760000000, !dbg !39
  %119 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %118) #4, !dbg !39
  %120 = fmul float %109, 0x3FF7154760000000, !dbg !39
  %121 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %120) #4, !dbg !39
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i73 = icmp eq i32 %122, 0, !dbg !40
  %123 = tail call float @llvm.nvvm.add.rz.ftz.f(float %115, float 1.000000e+00) #4, !dbg !40
  %124 = tail call float @llvm.nvvm.add.rz.f(float %115, float 1.000000e+00) #4, !dbg !40
  %.01.i74 = select i1 %.not.i73, float %124, float %123, !dbg !40
  %125 = bitcast float %.01.i74 to i32, !dbg !40
  %126 = add i32 %125, -1061158912, !dbg !40
  %127 = and i32 %126, -8388608, !dbg !40
  %128 = bitcast float %115 to i32, !dbg !40
  %129 = sub i32 %128, %127, !dbg !40
  %130 = bitcast i32 %129 to float, !dbg !40
  %131 = sub i32 1082130432, %127, !dbg !40
  %132 = bitcast i32 %131 to float, !dbg !40
  %133 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not14.i = icmp eq i32 %133, 0, !dbg !40
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %132, float -1.000000e+00) #4, !dbg !40
  %135 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %132, float -1.000000e+00) #4, !dbg !40
  %.09.i = select i1 %.not14.i, float %135, float %134, !dbg !40
  %136 = fadd float %.09.i, %130, !dbg !40
  %137 = sitofp i32 %127 to float, !dbg !40
  %138 = fmul float %137, 0x3E80000000000000, !dbg !40
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not15.i = icmp eq i32 %139, 0, !dbg !40
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %136, float 0x3FBB000240000000) #4, !dbg !40
  %141 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %136, float 0x3FBB000240000000) #4, !dbg !40
  %.012.i = select i1 %.not15.i, float %141, float %140, !dbg !40
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not16.i = icmp eq i32 %142, 0, !dbg !40
  %143 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %136, float 0xBFC0EF1C00000000) #4, !dbg !40
  %144 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %136, float 0xBFC0EF1C00000000) #4, !dbg !40
  %.010.i = select i1 %.not16.i, float %144, float %143, !dbg !40
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not17.i = icmp eq i32 %145, 0, !dbg !40
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %136, float 0x3FC28C8EA0000000) #4, !dbg !40
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %136, float 0x3FC28C8EA0000000) #4, !dbg !40
  %.06.i75 = select i1 %.not17.i, float %147, float %146, !dbg !40
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not18.i = icmp eq i32 %148, 0, !dbg !40
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i75, float %136, float 0xBFC54D1BA0000000) #4, !dbg !40
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i75, float %136, float 0xBFC54D1BA0000000) #4, !dbg !40
  %.02.i76 = select i1 %.not18.i, float %150, float %149, !dbg !40
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not19.i = icmp eq i32 %151, 0, !dbg !40
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i76, float %136, float 0x3FC995F3C0000000) #4, !dbg !40
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i76, float %136, float 0x3FC995F3C0000000) #4, !dbg !40
  %.0.i77 = select i1 %.not19.i, float %153, float %152, !dbg !40
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not20.i = icmp eq i32 %154, 0, !dbg !40
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i77, float %136, float 0xBFD0000840000000) #4, !dbg !40
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i77, float %136, float 0xBFD0000840000000) #4, !dbg !40
  %.011.i = select i1 %.not20.i, float %156, float %155, !dbg !40
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not21.i = icmp eq i32 %157, 0, !dbg !40
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %136, float 0x3FD5555CC0000000) #4, !dbg !40
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %136, float 0x3FD5555CC0000000) #4, !dbg !40
  %.08.i = select i1 %.not21.i, float %159, float %158, !dbg !40
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not22.i = icmp eq i32 %160, 0, !dbg !40
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %136, float -5.000000e-01) #4, !dbg !40
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %136, float -5.000000e-01) #4, !dbg !40
  %.07.i = select i1 %.not22.i, float %162, float %161, !dbg !40
  %163 = fmul float %136, %.07.i, !dbg !40
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not23.i = icmp eq i32 %164, 0, !dbg !40
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %163, float %136, float %136) #4, !dbg !40
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %163, float %136, float %136) #4, !dbg !40
  %.05.i78 = select i1 %.not23.i, float %166, float %165, !dbg !40
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not24.i = icmp eq i32 %167, 0, !dbg !40
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float 0x3FE62E4300000000, float %.05.i78) #4, !dbg !40
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %138, float 0x3FE62E4300000000, float %.05.i78) #4, !dbg !40
  %.04.i79 = select i1 %.not24.i, float %169, float %168, !dbg !40
  %170 = icmp ugt i32 %128, 2139095039, !dbg !40
  br i1 %170, label %171, label %__nv_log1pf.exit, !dbg !40

171:                                              ; preds = %__nv_sqrtf.exit11
  %172 = icmp sgt i32 %128, -1082130432, !dbg !40
  br i1 %172, label %__nv_fmaf_rn.exit.i, label %176, !dbg !40

__nv_fmaf_rn.exit.i:                              ; preds = %171
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not25.i = icmp eq i32 %173, 0, !dbg !40
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %115, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %115, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i80 = select i1 %.not25.i, float %175, float %174, !dbg !40
  br label %176, !dbg !40

176:                                              ; preds = %__nv_fmaf_rn.exit.i, %171
  %r.0.i = phi float [ %.03.i80, %__nv_fmaf_rn.exit.i ], [ %.04.i79, %171 ], !dbg !40
  %177 = fcmp oeq float %115, 0.000000e+00, !dbg !40
  %r.1.i = select i1 %177, float -0.000000e+00, float %r.0.i, !dbg !40
  br label %__nv_log1pf.exit, !dbg !40

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit11, %176
  %r.2.i = phi float [ %r.1.i, %176 ], [ %.04.i79, %__nv_sqrtf.exit11 ], !dbg !40
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i81 = icmp eq i32 %178, 0, !dbg !40
  %179 = tail call float @llvm.nvvm.add.rz.ftz.f(float %117, float 1.000000e+00) #4, !dbg !40
  %180 = tail call float @llvm.nvvm.add.rz.f(float %117, float 1.000000e+00) #4, !dbg !40
  %.01.i82 = select i1 %.not.i81, float %180, float %179, !dbg !40
  %181 = bitcast float %.01.i82 to i32, !dbg !40
  %182 = add i32 %181, -1061158912, !dbg !40
  %183 = and i32 %182, -8388608, !dbg !40
  %184 = bitcast float %117 to i32, !dbg !40
  %185 = sub i32 %184, %183, !dbg !40
  %186 = bitcast i32 %185 to float, !dbg !40
  %187 = sub i32 1082130432, %183, !dbg !40
  %188 = bitcast i32 %187 to float, !dbg !40
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not14.i83 = icmp eq i32 %189, 0, !dbg !40
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %188, float -1.000000e+00) #4, !dbg !40
  %191 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %188, float -1.000000e+00) #4, !dbg !40
  %.09.i84 = select i1 %.not14.i83, float %191, float %190, !dbg !40
  %192 = fadd float %.09.i84, %186, !dbg !40
  %193 = sitofp i32 %183 to float, !dbg !40
  %194 = fmul float %193, 0x3E80000000000000, !dbg !40
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not15.i85 = icmp eq i32 %195, 0, !dbg !40
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %192, float 0x3FBB000240000000) #4, !dbg !40
  %197 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %192, float 0x3FBB000240000000) #4, !dbg !40
  %.012.i86 = select i1 %.not15.i85, float %197, float %196, !dbg !40
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not16.i87 = icmp eq i32 %198, 0, !dbg !40
  %199 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i86, float %192, float 0xBFC0EF1C00000000) #4, !dbg !40
  %200 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i86, float %192, float 0xBFC0EF1C00000000) #4, !dbg !40
  %.010.i88 = select i1 %.not16.i87, float %200, float %199, !dbg !40
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not17.i89 = icmp eq i32 %201, 0, !dbg !40
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i88, float %192, float 0x3FC28C8EA0000000) #4, !dbg !40
  %203 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i88, float %192, float 0x3FC28C8EA0000000) #4, !dbg !40
  %.06.i90 = select i1 %.not17.i89, float %203, float %202, !dbg !40
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not18.i91 = icmp eq i32 %204, 0, !dbg !40
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i90, float %192, float 0xBFC54D1BA0000000) #4, !dbg !40
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i90, float %192, float 0xBFC54D1BA0000000) #4, !dbg !40
  %.02.i92 = select i1 %.not18.i91, float %206, float %205, !dbg !40
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not19.i93 = icmp eq i32 %207, 0, !dbg !40
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i92, float %192, float 0x3FC995F3C0000000) #4, !dbg !40
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i92, float %192, float 0x3FC995F3C0000000) #4, !dbg !40
  %.0.i94 = select i1 %.not19.i93, float %209, float %208, !dbg !40
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not20.i95 = icmp eq i32 %210, 0, !dbg !40
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i94, float %192, float 0xBFD0000840000000) #4, !dbg !40
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i94, float %192, float 0xBFD0000840000000) #4, !dbg !40
  %.011.i96 = select i1 %.not20.i95, float %212, float %211, !dbg !40
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not21.i97 = icmp eq i32 %213, 0, !dbg !40
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i96, float %192, float 0x3FD5555CC0000000) #4, !dbg !40
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i96, float %192, float 0x3FD5555CC0000000) #4, !dbg !40
  %.08.i98 = select i1 %.not21.i97, float %215, float %214, !dbg !40
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not22.i99 = icmp eq i32 %216, 0, !dbg !40
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i98, float %192, float -5.000000e-01) #4, !dbg !40
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i98, float %192, float -5.000000e-01) #4, !dbg !40
  %.07.i100 = select i1 %.not22.i99, float %218, float %217, !dbg !40
  %219 = fmul float %192, %.07.i100, !dbg !40
  %220 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not23.i101 = icmp eq i32 %220, 0, !dbg !40
  %221 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %219, float %192, float %192) #4, !dbg !40
  %222 = tail call float @llvm.nvvm.fma.rn.f(float %219, float %192, float %192) #4, !dbg !40
  %.05.i102 = select i1 %.not23.i101, float %222, float %221, !dbg !40
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not24.i103 = icmp eq i32 %223, 0, !dbg !40
  %224 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %194, float 0x3FE62E4300000000, float %.05.i102) #4, !dbg !40
  %225 = tail call float @llvm.nvvm.fma.rn.f(float %194, float 0x3FE62E4300000000, float %.05.i102) #4, !dbg !40
  %.04.i104 = select i1 %.not24.i103, float %225, float %224, !dbg !40
  %226 = icmp ugt i32 %184, 2139095039, !dbg !40
  br i1 %226, label %227, label %__nv_log1pf.exit111, !dbg !40

227:                                              ; preds = %__nv_log1pf.exit
  %228 = icmp sgt i32 %184, -1082130432, !dbg !40
  br i1 %228, label %__nv_fmaf_rn.exit.i108, label %232, !dbg !40

__nv_fmaf_rn.exit.i108:                           ; preds = %227
  %229 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not25.i109 = icmp eq i32 %229, 0, !dbg !40
  %230 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %117, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %231 = tail call float @llvm.nvvm.fma.rn.f(float %117, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i110 = select i1 %.not25.i109, float %231, float %230, !dbg !40
  br label %232, !dbg !40

232:                                              ; preds = %__nv_fmaf_rn.exit.i108, %227
  %r.0.i106 = phi float [ %.03.i110, %__nv_fmaf_rn.exit.i108 ], [ %.04.i104, %227 ], !dbg !40
  %233 = fcmp oeq float %117, 0.000000e+00, !dbg !40
  %r.1.i107 = select i1 %233, float -0.000000e+00, float %r.0.i106, !dbg !40
  br label %__nv_log1pf.exit111, !dbg !40

__nv_log1pf.exit111:                              ; preds = %__nv_log1pf.exit, %232
  %r.2.i105 = phi float [ %r.1.i107, %232 ], [ %.04.i104, %__nv_log1pf.exit ], !dbg !40
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i112 = icmp eq i32 %234, 0, !dbg !40
  %235 = tail call float @llvm.nvvm.add.rz.ftz.f(float %119, float 1.000000e+00) #4, !dbg !40
  %236 = tail call float @llvm.nvvm.add.rz.f(float %119, float 1.000000e+00) #4, !dbg !40
  %.01.i113 = select i1 %.not.i112, float %236, float %235, !dbg !40
  %237 = bitcast float %.01.i113 to i32, !dbg !40
  %238 = add i32 %237, -1061158912, !dbg !40
  %239 = and i32 %238, -8388608, !dbg !40
  %240 = bitcast float %119 to i32, !dbg !40
  %241 = sub i32 %240, %239, !dbg !40
  %242 = bitcast i32 %241 to float, !dbg !40
  %243 = sub i32 1082130432, %239, !dbg !40
  %244 = bitcast i32 %243 to float, !dbg !40
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not14.i114 = icmp eq i32 %245, 0, !dbg !40
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %244, float -1.000000e+00) #4, !dbg !40
  %247 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %244, float -1.000000e+00) #4, !dbg !40
  %.09.i115 = select i1 %.not14.i114, float %247, float %246, !dbg !40
  %248 = fadd float %.09.i115, %242, !dbg !40
  %249 = sitofp i32 %239 to float, !dbg !40
  %250 = fmul float %249, 0x3E80000000000000, !dbg !40
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not15.i116 = icmp eq i32 %251, 0, !dbg !40
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %248, float 0x3FBB000240000000) #4, !dbg !40
  %253 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %248, float 0x3FBB000240000000) #4, !dbg !40
  %.012.i117 = select i1 %.not15.i116, float %253, float %252, !dbg !40
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not16.i118 = icmp eq i32 %254, 0, !dbg !40
  %255 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i117, float %248, float 0xBFC0EF1C00000000) #4, !dbg !40
  %256 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i117, float %248, float 0xBFC0EF1C00000000) #4, !dbg !40
  %.010.i119 = select i1 %.not16.i118, float %256, float %255, !dbg !40
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not17.i120 = icmp eq i32 %257, 0, !dbg !40
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i119, float %248, float 0x3FC28C8EA0000000) #4, !dbg !40
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i119, float %248, float 0x3FC28C8EA0000000) #4, !dbg !40
  %.06.i121 = select i1 %.not17.i120, float %259, float %258, !dbg !40
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not18.i122 = icmp eq i32 %260, 0, !dbg !40
  %261 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i121, float %248, float 0xBFC54D1BA0000000) #4, !dbg !40
  %262 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i121, float %248, float 0xBFC54D1BA0000000) #4, !dbg !40
  %.02.i123 = select i1 %.not18.i122, float %262, float %261, !dbg !40
  %263 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not19.i124 = icmp eq i32 %263, 0, !dbg !40
  %264 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i123, float %248, float 0x3FC995F3C0000000) #4, !dbg !40
  %265 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i123, float %248, float 0x3FC995F3C0000000) #4, !dbg !40
  %.0.i125 = select i1 %.not19.i124, float %265, float %264, !dbg !40
  %266 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not20.i126 = icmp eq i32 %266, 0, !dbg !40
  %267 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i125, float %248, float 0xBFD0000840000000) #4, !dbg !40
  %268 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i125, float %248, float 0xBFD0000840000000) #4, !dbg !40
  %.011.i127 = select i1 %.not20.i126, float %268, float %267, !dbg !40
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not21.i128 = icmp eq i32 %269, 0, !dbg !40
  %270 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i127, float %248, float 0x3FD5555CC0000000) #4, !dbg !40
  %271 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i127, float %248, float 0x3FD5555CC0000000) #4, !dbg !40
  %.08.i129 = select i1 %.not21.i128, float %271, float %270, !dbg !40
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not22.i130 = icmp eq i32 %272, 0, !dbg !40
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i129, float %248, float -5.000000e-01) #4, !dbg !40
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i129, float %248, float -5.000000e-01) #4, !dbg !40
  %.07.i131 = select i1 %.not22.i130, float %274, float %273, !dbg !40
  %275 = fmul float %248, %.07.i131, !dbg !40
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not23.i132 = icmp eq i32 %276, 0, !dbg !40
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %275, float %248, float %248) #4, !dbg !40
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %275, float %248, float %248) #4, !dbg !40
  %.05.i133 = select i1 %.not23.i132, float %278, float %277, !dbg !40
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not24.i134 = icmp eq i32 %279, 0, !dbg !40
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %250, float 0x3FE62E4300000000, float %.05.i133) #4, !dbg !40
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %250, float 0x3FE62E4300000000, float %.05.i133) #4, !dbg !40
  %.04.i135 = select i1 %.not24.i134, float %281, float %280, !dbg !40
  %282 = icmp ugt i32 %240, 2139095039, !dbg !40
  br i1 %282, label %283, label %__nv_log1pf.exit142, !dbg !40

283:                                              ; preds = %__nv_log1pf.exit111
  %284 = icmp sgt i32 %240, -1082130432, !dbg !40
  br i1 %284, label %__nv_fmaf_rn.exit.i139, label %288, !dbg !40

__nv_fmaf_rn.exit.i139:                           ; preds = %283
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not25.i140 = icmp eq i32 %285, 0, !dbg !40
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %119, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %119, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i141 = select i1 %.not25.i140, float %287, float %286, !dbg !40
  br label %288, !dbg !40

288:                                              ; preds = %__nv_fmaf_rn.exit.i139, %283
  %r.0.i137 = phi float [ %.03.i141, %__nv_fmaf_rn.exit.i139 ], [ %.04.i135, %283 ], !dbg !40
  %289 = fcmp oeq float %119, 0.000000e+00, !dbg !40
  %r.1.i138 = select i1 %289, float -0.000000e+00, float %r.0.i137, !dbg !40
  br label %__nv_log1pf.exit142, !dbg !40

__nv_log1pf.exit142:                              ; preds = %__nv_log1pf.exit111, %288
  %r.2.i136 = phi float [ %r.1.i138, %288 ], [ %.04.i135, %__nv_log1pf.exit111 ], !dbg !40
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not.i143 = icmp eq i32 %290, 0, !dbg !40
  %291 = tail call float @llvm.nvvm.add.rz.ftz.f(float %121, float 1.000000e+00) #4, !dbg !40
  %292 = tail call float @llvm.nvvm.add.rz.f(float %121, float 1.000000e+00) #4, !dbg !40
  %.01.i144 = select i1 %.not.i143, float %292, float %291, !dbg !40
  %293 = bitcast float %.01.i144 to i32, !dbg !40
  %294 = add i32 %293, -1061158912, !dbg !40
  %295 = and i32 %294, -8388608, !dbg !40
  %296 = bitcast float %121 to i32, !dbg !40
  %297 = sub i32 %296, %295, !dbg !40
  %298 = bitcast i32 %297 to float, !dbg !40
  %299 = sub i32 1082130432, %295, !dbg !40
  %300 = bitcast i32 %299 to float, !dbg !40
  %301 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not14.i145 = icmp eq i32 %301, 0, !dbg !40
  %302 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %300, float -1.000000e+00) #4, !dbg !40
  %303 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %300, float -1.000000e+00) #4, !dbg !40
  %.09.i146 = select i1 %.not14.i145, float %303, float %302, !dbg !40
  %304 = fadd float %.09.i146, %298, !dbg !40
  %305 = sitofp i32 %295 to float, !dbg !40
  %306 = fmul float %305, 0x3E80000000000000, !dbg !40
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not15.i147 = icmp eq i32 %307, 0, !dbg !40
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %304, float 0x3FBB000240000000) #4, !dbg !40
  %309 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %304, float 0x3FBB000240000000) #4, !dbg !40
  %.012.i148 = select i1 %.not15.i147, float %309, float %308, !dbg !40
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not16.i149 = icmp eq i32 %310, 0, !dbg !40
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i148, float %304, float 0xBFC0EF1C00000000) #4, !dbg !40
  %312 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i148, float %304, float 0xBFC0EF1C00000000) #4, !dbg !40
  %.010.i150 = select i1 %.not16.i149, float %312, float %311, !dbg !40
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not17.i151 = icmp eq i32 %313, 0, !dbg !40
  %314 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i150, float %304, float 0x3FC28C8EA0000000) #4, !dbg !40
  %315 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i150, float %304, float 0x3FC28C8EA0000000) #4, !dbg !40
  %.06.i152 = select i1 %.not17.i151, float %315, float %314, !dbg !40
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not18.i153 = icmp eq i32 %316, 0, !dbg !40
  %317 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i152, float %304, float 0xBFC54D1BA0000000) #4, !dbg !40
  %318 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i152, float %304, float 0xBFC54D1BA0000000) #4, !dbg !40
  %.02.i154 = select i1 %.not18.i153, float %318, float %317, !dbg !40
  %319 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not19.i155 = icmp eq i32 %319, 0, !dbg !40
  %320 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i154, float %304, float 0x3FC995F3C0000000) #4, !dbg !40
  %321 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i154, float %304, float 0x3FC995F3C0000000) #4, !dbg !40
  %.0.i156 = select i1 %.not19.i155, float %321, float %320, !dbg !40
  %322 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not20.i157 = icmp eq i32 %322, 0, !dbg !40
  %323 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i156, float %304, float 0xBFD0000840000000) #4, !dbg !40
  %324 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i156, float %304, float 0xBFD0000840000000) #4, !dbg !40
  %.011.i158 = select i1 %.not20.i157, float %324, float %323, !dbg !40
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not21.i159 = icmp eq i32 %325, 0, !dbg !40
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i158, float %304, float 0x3FD5555CC0000000) #4, !dbg !40
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i158, float %304, float 0x3FD5555CC0000000) #4, !dbg !40
  %.08.i160 = select i1 %.not21.i159, float %327, float %326, !dbg !40
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not22.i161 = icmp eq i32 %328, 0, !dbg !40
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i160, float %304, float -5.000000e-01) #4, !dbg !40
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i160, float %304, float -5.000000e-01) #4, !dbg !40
  %.07.i162 = select i1 %.not22.i161, float %330, float %329, !dbg !40
  %331 = fmul float %304, %.07.i162, !dbg !40
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not23.i163 = icmp eq i32 %332, 0, !dbg !40
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %331, float %304, float %304) #4, !dbg !40
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %331, float %304, float %304) #4, !dbg !40
  %.05.i164 = select i1 %.not23.i163, float %334, float %333, !dbg !40
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not24.i165 = icmp eq i32 %335, 0, !dbg !40
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %306, float 0x3FE62E4300000000, float %.05.i164) #4, !dbg !40
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %306, float 0x3FE62E4300000000, float %.05.i164) #4, !dbg !40
  %.04.i166 = select i1 %.not24.i165, float %337, float %336, !dbg !40
  %338 = icmp ugt i32 %296, 2139095039, !dbg !40
  br i1 %338, label %339, label %__nv_log1pf.exit173, !dbg !40

339:                                              ; preds = %__nv_log1pf.exit142
  %340 = icmp sgt i32 %296, -1082130432, !dbg !40
  br i1 %340, label %__nv_fmaf_rn.exit.i170, label %344, !dbg !40

__nv_fmaf_rn.exit.i170:                           ; preds = %339
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !40
  %.not25.i171 = icmp eq i32 %341, 0, !dbg !40
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %121, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %121, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !40
  %.03.i172 = select i1 %.not25.i171, float %343, float %342, !dbg !40
  br label %344, !dbg !40

344:                                              ; preds = %__nv_fmaf_rn.exit.i170, %339
  %r.0.i168 = phi float [ %.03.i172, %__nv_fmaf_rn.exit.i170 ], [ %.04.i166, %339 ], !dbg !40
  %345 = fcmp oeq float %121, 0.000000e+00, !dbg !40
  %r.1.i169 = select i1 %345, float -0.000000e+00, float %r.0.i168, !dbg !40
  br label %__nv_log1pf.exit173, !dbg !40

__nv_log1pf.exit173:                              ; preds = %__nv_log1pf.exit142, %344
  %r.2.i167 = phi float [ %r.1.i169, %344 ], [ %.04.i166, %__nv_log1pf.exit142 ], !dbg !40
  %346 = select i1 %110, float %106, float %r.2.i, !dbg !41
  %347 = select i1 %111, float %107, float %r.2.i105, !dbg !41
  %348 = select i1 %112, float %108, float %r.2.i136, !dbg !41
  %349 = select i1 %113, float %109, float %r.2.i167, !dbg !41
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i12 = icmp eq i32 %350, 0, !dbg !42
  %351 = tail call float @llvm.nvvm.fabs.ftz.f(float %346) #4, !dbg !42
  %352 = tail call float @llvm.nvvm.fabs.f(float %346) #4, !dbg !42
  %.01.i = select i1 %.not.i12, float %352, float %351, !dbg !42
  %353 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !42
  br i1 %353, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !42

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit173
  %354 = fmul float %.01.i, 0x4007154760000000, !dbg !42
  %355 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %354) #4, !dbg !42
  %356 = fadd float %355, 1.000000e+00, !dbg !42
  %357 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %356) #5, !dbg !42, !srcloc !43
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not6.i = icmp eq i32 %358, 0, !dbg !42
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %357, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %357, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %.03.i = select i1 %.not6.i, float %360, float %359, !dbg !42
  %361 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !42
  %s.0.i = select i1 %361, float 1.000000e+00, float %.03.i, !dbg !42
  %362 = bitcast float %s.0.i to i32, !dbg !42
  %363 = bitcast float %346 to i32, !dbg !42
  %364 = and i32 %363, -2147483648, !dbg !42
  %365 = or i32 %364, %362, !dbg !42
  %366 = bitcast i32 %365 to float, !dbg !42
  br label %__nv_tanhf.exit, !dbg !42

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit173
  %367 = fmul float %346, %346, !dbg !42
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not1.i13 = icmp eq i32 %368, 0, !dbg !42
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %367, float 0xBFAAC795C0000000) #4, !dbg !42
  %370 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %367, float 0xBFAAC795C0000000) #4, !dbg !42
  %.06.i = select i1 %.not1.i13, float %370, float %369, !dbg !42
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not2.i14 = icmp eq i32 %371, 0, !dbg !42
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %367, float 0x3FC10B2820000000) #4, !dbg !42
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %367, float 0x3FC10B2820000000) #4, !dbg !42
  %.05.i = select i1 %.not2.i14, float %373, float %372, !dbg !42
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not3.i = icmp eq i32 %374, 0, !dbg !42
  %375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %367, float 0xBFD5553DA0000000) #4, !dbg !42
  %376 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %367, float 0xBFD5553DA0000000) #4, !dbg !42
  %.0.i15 = select i1 %.not3.i, float %376, float %375, !dbg !42
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not4.i = icmp eq i32 %377, 0, !dbg !42
  %378 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i15, float %367, float 0.000000e+00) #4, !dbg !42
  %379 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i15, float %367, float 0.000000e+00) #4, !dbg !42
  %.04.i = select i1 %.not4.i, float %379, float %378, !dbg !42
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not5.i = icmp eq i32 %380, 0, !dbg !42
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %346, float %346) #4, !dbg !42
  %382 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %346, float %346) #4, !dbg !42
  %.02.i = select i1 %.not5.i, float %382, float %381, !dbg !42
  br label %__nv_tanhf.exit, !dbg !42

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %366, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !42
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i16 = icmp eq i32 %383, 0, !dbg !42
  %384 = tail call float @llvm.nvvm.fabs.ftz.f(float %347) #4, !dbg !42
  %385 = tail call float @llvm.nvvm.fabs.f(float %347) #4, !dbg !42
  %.01.i17 = select i1 %.not.i16, float %385, float %384, !dbg !42
  %386 = fcmp ult float %.01.i17, 0x3FE3333340000000, !dbg !42
  br i1 %386, label %__internal_fmad.exit3.i23, label %__internal_fmad.exit1.i18, !dbg !42

__internal_fmad.exit1.i18:                        ; preds = %__nv_tanhf.exit
  %387 = fmul float %.01.i17, 0x4007154760000000, !dbg !42
  %388 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %387) #4, !dbg !42
  %389 = fadd float %388, 1.000000e+00, !dbg !42
  %390 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %389) #5, !dbg !42, !srcloc !43
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not6.i19 = icmp eq i32 %391, 0, !dbg !42
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %390, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %390, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %.03.i20 = select i1 %.not6.i19, float %393, float %392, !dbg !42
  %394 = fcmp oge float %.01.i17, 0x4022059680000000, !dbg !42
  %s.0.i21 = select i1 %394, float 1.000000e+00, float %.03.i20, !dbg !42
  %395 = bitcast float %s.0.i21 to i32, !dbg !42
  %396 = bitcast float %347 to i32, !dbg !42
  %397 = and i32 %396, -2147483648, !dbg !42
  %398 = or i32 %397, %395, !dbg !42
  %399 = bitcast i32 %398 to float, !dbg !42
  br label %__nv_tanhf.exit34, !dbg !42

__internal_fmad.exit3.i23:                        ; preds = %__nv_tanhf.exit
  %400 = fmul float %347, %347, !dbg !42
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not1.i24 = icmp eq i32 %401, 0, !dbg !42
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %400, float 0xBFAAC795C0000000) #4, !dbg !42
  %403 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %400, float 0xBFAAC795C0000000) #4, !dbg !42
  %.06.i25 = select i1 %.not1.i24, float %403, float %402, !dbg !42
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not2.i26 = icmp eq i32 %404, 0, !dbg !42
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i25, float %400, float 0x3FC10B2820000000) #4, !dbg !42
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i25, float %400, float 0x3FC10B2820000000) #4, !dbg !42
  %.05.i27 = select i1 %.not2.i26, float %406, float %405, !dbg !42
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not3.i28 = icmp eq i32 %407, 0, !dbg !42
  %408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i27, float %400, float 0xBFD5553DA0000000) #4, !dbg !42
  %409 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i27, float %400, float 0xBFD5553DA0000000) #4, !dbg !42
  %.0.i29 = select i1 %.not3.i28, float %409, float %408, !dbg !42
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not4.i30 = icmp eq i32 %410, 0, !dbg !42
  %411 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i29, float %400, float 0.000000e+00) #4, !dbg !42
  %412 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i29, float %400, float 0.000000e+00) #4, !dbg !42
  %.04.i31 = select i1 %.not4.i30, float %412, float %411, !dbg !42
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not5.i32 = icmp eq i32 %413, 0, !dbg !42
  %414 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i31, float %347, float %347) #4, !dbg !42
  %415 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i31, float %347, float %347) #4, !dbg !42
  %.02.i33 = select i1 %.not5.i32, float %415, float %414, !dbg !42
  br label %__nv_tanhf.exit34, !dbg !42

__nv_tanhf.exit34:                                ; preds = %__internal_fmad.exit1.i18, %__internal_fmad.exit3.i23
  %s.1.i22 = phi float [ %399, %__internal_fmad.exit1.i18 ], [ %.02.i33, %__internal_fmad.exit3.i23 ], !dbg !42
  %416 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i35 = icmp eq i32 %416, 0, !dbg !42
  %417 = tail call float @llvm.nvvm.fabs.ftz.f(float %348) #4, !dbg !42
  %418 = tail call float @llvm.nvvm.fabs.f(float %348) #4, !dbg !42
  %.01.i36 = select i1 %.not.i35, float %418, float %417, !dbg !42
  %419 = fcmp ult float %.01.i36, 0x3FE3333340000000, !dbg !42
  br i1 %419, label %__internal_fmad.exit3.i42, label %__internal_fmad.exit1.i37, !dbg !42

__internal_fmad.exit1.i37:                        ; preds = %__nv_tanhf.exit34
  %420 = fmul float %.01.i36, 0x4007154760000000, !dbg !42
  %421 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %420) #4, !dbg !42
  %422 = fadd float %421, 1.000000e+00, !dbg !42
  %423 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %422) #5, !dbg !42, !srcloc !43
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not6.i38 = icmp eq i32 %424, 0, !dbg !42
  %425 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %423, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %426 = tail call float @llvm.nvvm.fma.rn.f(float %423, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %.03.i39 = select i1 %.not6.i38, float %426, float %425, !dbg !42
  %427 = fcmp oge float %.01.i36, 0x4022059680000000, !dbg !42
  %s.0.i40 = select i1 %427, float 1.000000e+00, float %.03.i39, !dbg !42
  %428 = bitcast float %s.0.i40 to i32, !dbg !42
  %429 = bitcast float %348 to i32, !dbg !42
  %430 = and i32 %429, -2147483648, !dbg !42
  %431 = or i32 %430, %428, !dbg !42
  %432 = bitcast i32 %431 to float, !dbg !42
  br label %__nv_tanhf.exit53, !dbg !42

__internal_fmad.exit3.i42:                        ; preds = %__nv_tanhf.exit34
  %433 = fmul float %348, %348, !dbg !42
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not1.i43 = icmp eq i32 %434, 0, !dbg !42
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %433, float 0xBFAAC795C0000000) #4, !dbg !42
  %436 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %433, float 0xBFAAC795C0000000) #4, !dbg !42
  %.06.i44 = select i1 %.not1.i43, float %436, float %435, !dbg !42
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not2.i45 = icmp eq i32 %437, 0, !dbg !42
  %438 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i44, float %433, float 0x3FC10B2820000000) #4, !dbg !42
  %439 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i44, float %433, float 0x3FC10B2820000000) #4, !dbg !42
  %.05.i46 = select i1 %.not2.i45, float %439, float %438, !dbg !42
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not3.i47 = icmp eq i32 %440, 0, !dbg !42
  %441 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float %433, float 0xBFD5553DA0000000) #4, !dbg !42
  %442 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float %433, float 0xBFD5553DA0000000) #4, !dbg !42
  %.0.i48 = select i1 %.not3.i47, float %442, float %441, !dbg !42
  %443 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not4.i49 = icmp eq i32 %443, 0, !dbg !42
  %444 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %433, float 0.000000e+00) #4, !dbg !42
  %445 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %433, float 0.000000e+00) #4, !dbg !42
  %.04.i50 = select i1 %.not4.i49, float %445, float %444, !dbg !42
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not5.i51 = icmp eq i32 %446, 0, !dbg !42
  %447 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i50, float %348, float %348) #4, !dbg !42
  %448 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i50, float %348, float %348) #4, !dbg !42
  %.02.i52 = select i1 %.not5.i51, float %448, float %447, !dbg !42
  br label %__nv_tanhf.exit53, !dbg !42

__nv_tanhf.exit53:                                ; preds = %__internal_fmad.exit1.i37, %__internal_fmad.exit3.i42
  %s.1.i41 = phi float [ %432, %__internal_fmad.exit1.i37 ], [ %.02.i52, %__internal_fmad.exit3.i42 ], !dbg !42
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not.i54 = icmp eq i32 %449, 0, !dbg !42
  %450 = tail call float @llvm.nvvm.fabs.ftz.f(float %349) #4, !dbg !42
  %451 = tail call float @llvm.nvvm.fabs.f(float %349) #4, !dbg !42
  %.01.i55 = select i1 %.not.i54, float %451, float %450, !dbg !42
  %452 = fcmp ult float %.01.i55, 0x3FE3333340000000, !dbg !42
  br i1 %452, label %__internal_fmad.exit3.i61, label %__internal_fmad.exit1.i56, !dbg !42

__internal_fmad.exit1.i56:                        ; preds = %__nv_tanhf.exit53
  %453 = fmul float %.01.i55, 0x4007154760000000, !dbg !42
  %454 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %453) #4, !dbg !42
  %455 = fadd float %454, 1.000000e+00, !dbg !42
  %456 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %455) #5, !dbg !42, !srcloc !43
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not6.i57 = icmp eq i32 %457, 0, !dbg !42
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %456, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %459 = tail call float @llvm.nvvm.fma.rn.f(float %456, float -2.000000e+00, float 1.000000e+00) #4, !dbg !42
  %.03.i58 = select i1 %.not6.i57, float %459, float %458, !dbg !42
  %460 = fcmp oge float %.01.i55, 0x4022059680000000, !dbg !42
  %s.0.i59 = select i1 %460, float 1.000000e+00, float %.03.i58, !dbg !42
  %461 = bitcast float %s.0.i59 to i32, !dbg !42
  %462 = bitcast float %349 to i32, !dbg !42
  %463 = and i32 %462, -2147483648, !dbg !42
  %464 = or i32 %463, %461, !dbg !42
  %465 = bitcast i32 %464 to float, !dbg !42
  br label %__nv_tanhf.exit72, !dbg !42

__internal_fmad.exit3.i61:                        ; preds = %__nv_tanhf.exit53
  %466 = fmul float %349, %349, !dbg !42
  %467 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not1.i62 = icmp eq i32 %467, 0, !dbg !42
  %468 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %466, float 0xBFAAC795C0000000) #4, !dbg !42
  %469 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %466, float 0xBFAAC795C0000000) #4, !dbg !42
  %.06.i63 = select i1 %.not1.i62, float %469, float %468, !dbg !42
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not2.i64 = icmp eq i32 %470, 0, !dbg !42
  %471 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i63, float %466, float 0x3FC10B2820000000) #4, !dbg !42
  %472 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i63, float %466, float 0x3FC10B2820000000) #4, !dbg !42
  %.05.i65 = select i1 %.not2.i64, float %472, float %471, !dbg !42
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not3.i66 = icmp eq i32 %473, 0, !dbg !42
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i65, float %466, float 0xBFD5553DA0000000) #4, !dbg !42
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i65, float %466, float 0xBFD5553DA0000000) #4, !dbg !42
  %.0.i67 = select i1 %.not3.i66, float %475, float %474, !dbg !42
  %476 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not4.i68 = icmp eq i32 %476, 0, !dbg !42
  %477 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i67, float %466, float 0.000000e+00) #4, !dbg !42
  %478 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i67, float %466, float 0.000000e+00) #4, !dbg !42
  %.04.i69 = select i1 %.not4.i68, float %478, float %477, !dbg !42
  %479 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !42
  %.not5.i70 = icmp eq i32 %479, 0, !dbg !42
  %480 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i69, float %349, float %349) #4, !dbg !42
  %481 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i69, float %349, float %349) #4, !dbg !42
  %.02.i71 = select i1 %.not5.i70, float %481, float %480, !dbg !42
  br label %__nv_tanhf.exit72, !dbg !42

__nv_tanhf.exit72:                                ; preds = %__internal_fmad.exit1.i56, %__internal_fmad.exit3.i61
  %s.1.i60 = phi float [ %465, %__internal_fmad.exit1.i56 ], [ %.02.i71, %__internal_fmad.exit3.i61 ], !dbg !42
  %482 = lshr i32 %11, 6, !dbg !44
  %.lobit = and i32 %482, 1, !dbg !44
  %483 = or disjoint i32 %19, %.lobit, !dbg !45
  %484 = icmp slt i32 %483, 256, !dbg !17
  %485 = shl i32 %11, 2, !dbg !12
  %486 = and i32 %485, 252, !dbg !12
  %487 = or disjoint i32 %10, %486, !dbg !13
  %488 = icmp slt i32 %487, 256, !dbg !14
  %489 = and i1 %488, %484, !dbg !21
  %.frozen = freeze i32 %487, !dbg !46
  %490 = sdiv i32 %.frozen, 64, !dbg !46
  %491 = mul i32 %490, 64, !dbg !47
  %.decomposed = sub i32 %.frozen, %491, !dbg !47
  %492 = fmul float %106, %s.1.i, !dbg !48
  %493 = fmul float %107, %s.1.i22, !dbg !48
  %494 = fmul float %108, %s.1.i41, !dbg !48
  %495 = fmul float %109, %s.1.i60, !dbg !48
  %496 = shl i32 %483, 6, !dbg !49
  %497 = add i32 %496, %.decomposed, !dbg !50
  %498 = shl i32 %490, 14, !dbg !51
  %499 = add i32 %497, %498, !dbg !52
  %500 = sext i32 %499 to i64, !dbg !53
  %501 = getelementptr float, ptr addrspace(1) %5, i64 %500, !dbg !53
  %502 = and i32 %485, 508, !dbg !54
  %503 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !54
  %504 = bitcast float %492 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %503, <1 x i32> %504, i1 true) #4, !dbg !54
  %505 = getelementptr inbounds i8, ptr addrspace(3) %503, i32 1040, !dbg !54
  %506 = bitcast float %493 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %505, <1 x i32> %506, i1 true) #4, !dbg !54
  %507 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !54
  %508 = bitcast float %494 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %507, <1 x i32> %508, i1 true) #4, !dbg !54
  %509 = getelementptr inbounds i8, ptr addrspace(3) %503, i32 1552, !dbg !54
  %510 = bitcast float %495 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %509, <1 x i32> %510, i1 true) #4, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %511 = lshr i32 %485, 6, !dbg !54
  %512 = and i32 %511, 4, !dbg !54
  %513 = getelementptr float, ptr addrspace(3) @global_smem, i32 %512, !dbg !54
  %514 = getelementptr float, ptr addrspace(3) %513, i32 %502, !dbg !54
  %.extract = load i32, ptr addrspace(3) %514, align 16, !dbg !54
  %515 = getelementptr inbounds i8, ptr addrspace(3) %514, i32 4, !dbg !54
  %.extract4 = load i32, ptr addrspace(3) %515, align 4, !dbg !54
  %516 = getelementptr inbounds i8, ptr addrspace(3) %514, i32 8, !dbg !54
  %.extract5 = load i32, ptr addrspace(3) %516, align 8, !dbg !54
  %517 = getelementptr inbounds i8, ptr addrspace(3) %514, i32 12, !dbg !54
  %.extract6 = load i32, ptr addrspace(3) %517, align 4, !dbg !54
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract4, i32 %.extract5, i32 %.extract6, ptr addrspace(1) %501, i1 %489) #4, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctsqsqz33xavaaahcs25oxfy3xxqqkiacskihjlkgwpl7yelluaa.py", directory: "inductor_cache/ts")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_mul_softplus_tanh_27", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 32, column: 39, scope: !7)
!19 = !DILocation(line: 32, column: 35, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 52, scope: !7)
!22 = !DILocation(line: 32, column: 44, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 35, scope: !7)
!25 = !DILocation(line: 34, column: 30, scope: !7)
!26 = !DILocation(line: 34, column: 35, scope: !7)
!27 = !DILocation(line: 35, column: 31, scope: !7)
!28 = !DILocation(line: 35, column: 36, scope: !7)
!29 = !DILocation(line: 36, column: 31, scope: !7)
!30 = !DILocation(line: 36, column: 36, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 18, scope: !7)
!33 = !DILocation(line: 40, column: 26, scope: !7)
!34 = !DILocation(line: 42, column: 18, scope: !7)
!35 = !DILocation(line: 45, column: 19, scope: !7)
!36 = !DILocation(line: 46, column: 20, scope: !7)
!37 = !DILocation(line: 47, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 20, scope: !7)
!39 = !DILocation(line: 50, column: 24, scope: !7)
!40 = !DILocation(line: 51, column: 28, scope: !7)
!41 = !DILocation(line: 52, column: 35, scope: !7)
!42 = !DILocation(line: 53, column: 27, scope: !7)
!43 = !{i32 21046}
!44 = !DILocation(line: 26, column: 44, scope: !7)
!45 = !DILocation(line: 26, column: 23, scope: !7)
!46 = !DILocation(line: 31, column: 19, scope: !7)
!47 = !DILocation(line: 30, column: 19, scope: !7)
!48 = !DILocation(line: 54, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 33, scope: !7)
!50 = !DILocation(line: 55, column: 30, scope: !7)
!51 = !DILocation(line: 55, column: 44, scope: !7)
!52 = !DILocation(line: 55, column: 38, scope: !7)
!53 = !DILocation(line: 55, column: 25, scope: !7)
!54 = !DILocation(line: 55, column: 56, scope: !7)
!55 = !DILocation(line: 55, column: 4, scope: !7)
