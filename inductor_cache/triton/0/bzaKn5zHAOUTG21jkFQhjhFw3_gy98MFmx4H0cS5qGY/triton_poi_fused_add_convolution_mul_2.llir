; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_mul_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 256, !dbg !14
  %16 = sdiv i32 %14, 16, !dbg !15
  %17 = srem i32 %16, 4, !dbg !16
  %18 = sext i32 %14 to i64, !dbg !17
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %15) #1, !dbg !18
  %21 = bitcast i32 %20 to float, !dbg !18
  %22 = sext i32 %17 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %4, i64 %22, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %15) #1, !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !21
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %15) #1, !dbg !22
  %28 = bitcast i32 %27 to float, !dbg !22
  %29 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !23
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %15) #1, !dbg !24
  %31 = bitcast i32 %30 to float, !dbg !24
  %32 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !25
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %15) #1, !dbg !26
  %34 = bitcast i32 %33 to float, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %5, i64 %18, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %15) #1, !dbg !28
  %37 = bitcast i32 %36 to float, !dbg !28
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %6, i1 true) #1, !dbg !29
  %39 = bitcast i32 %38 to float, !dbg !29
  %40 = getelementptr i8, ptr addrspace(1) %6, i64 4, !dbg !30
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 true) #1, !dbg !31
  %42 = bitcast i32 %41 to float, !dbg !31
  %43 = getelementptr i8, ptr addrspace(1) %6, i64 8, !dbg !32
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #1, !dbg !33
  %45 = bitcast i32 %44 to float, !dbg !33
  %46 = getelementptr i8, ptr addrspace(1) %6, i64 12, !dbg !34
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !35
  %48 = bitcast i32 %47 to float, !dbg !35
  %49 = getelementptr i8, ptr addrspace(1) %6, i64 16, !dbg !36
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 true) #1, !dbg !37
  %51 = bitcast i32 %50 to float, !dbg !37
  %52 = fadd float %21, %25, !dbg !38
  %53 = fadd float %25, %28, !dbg !39
  %54 = fadd float %25, %31, !dbg !40
  %55 = fadd float %25, %34, !dbg !41
  %56 = fmul float %37, %39, !dbg !42
  %57 = fmul float %52, %42, !dbg !43
  %58 = fadd float %56, %57, !dbg !44
  %59 = fmul float %53, %45, !dbg !45
  %60 = fadd float %58, %59, !dbg !46
  %61 = fmul float %54, %48, !dbg !47
  %62 = fadd float %60, %61, !dbg !48
  %63 = fmul float %55, %51, !dbg !49
  %64 = fadd float %62, %63, !dbg !50
  %65 = bitcast float %52 to i32, !dbg !51
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %65, ptr addrspace(1) %19, i1 %15) #1, !dbg !51
  %66 = bitcast float %53 to i32, !dbg !52
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %66, ptr addrspace(1) %26, i1 %15) #1, !dbg !52
  %67 = bitcast float %54 to i32, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %67, ptr addrspace(1) %29, i1 %15) #1, !dbg !53
  %68 = bitcast float %55 to i32, !dbg !54
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %32, i1 %15) #1, !dbg !54
  %69 = getelementptr float, ptr addrspace(1) %7, i64 %18, !dbg !55
  %70 = bitcast float %64 to i32, !dbg !56
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %70, ptr addrspace(1) %69, i1 %15) #1, !dbg !56
  ret void, !dbg !57
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdlbmlumnaeynjatqsoaokttkv77j2s7s4chksxy5eokauemrp7k.py", directory: "inductor_cache/dl")
!4 = !{ptr @triton_poi_fused_add_convolution_mul_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_mul_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_mul_2", linkageName: "triton_poi_fused_add_convolution_mul_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 39, scope: !7)
!23 = !DILocation(line: 29, column: 34, scope: !7)
!24 = !DILocation(line: 29, column: 39, scope: !7)
!25 = !DILocation(line: 30, column: 34, scope: !7)
!26 = !DILocation(line: 30, column: 39, scope: !7)
!27 = !DILocation(line: 31, column: 30, scope: !7)
!28 = !DILocation(line: 31, column: 35, scope: !7)
!29 = !DILocation(line: 32, column: 20, scope: !7)
!30 = !DILocation(line: 34, column: 31, scope: !7)
!31 = !DILocation(line: 34, column: 20, scope: !7)
!32 = !DILocation(line: 36, column: 31, scope: !7)
!33 = !DILocation(line: 36, column: 20, scope: !7)
!34 = !DILocation(line: 38, column: 31, scope: !7)
!35 = !DILocation(line: 38, column: 20, scope: !7)
!36 = !DILocation(line: 40, column: 31, scope: !7)
!37 = !DILocation(line: 40, column: 20, scope: !7)
!38 = !DILocation(line: 42, column: 18, scope: !7)
!39 = !DILocation(line: 43, column: 18, scope: !7)
!40 = !DILocation(line: 44, column: 18, scope: !7)
!41 = !DILocation(line: 45, column: 18, scope: !7)
!42 = !DILocation(line: 46, column: 19, scope: !7)
!43 = !DILocation(line: 47, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 20, scope: !7)
!45 = !DILocation(line: 49, column: 20, scope: !7)
!46 = !DILocation(line: 50, column: 20, scope: !7)
!47 = !DILocation(line: 51, column: 20, scope: !7)
!48 = !DILocation(line: 52, column: 20, scope: !7)
!49 = !DILocation(line: 53, column: 20, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 55, column: 39, scope: !7)
!52 = !DILocation(line: 56, column: 39, scope: !7)
!53 = !DILocation(line: 57, column: 39, scope: !7)
!54 = !DILocation(line: 58, column: 39, scope: !7)
!55 = !DILocation(line: 59, column: 25, scope: !7)
!56 = !DILocation(line: 59, column: 37, scope: !7)
!57 = !DILocation(line: 59, column: 4, scope: !7)
