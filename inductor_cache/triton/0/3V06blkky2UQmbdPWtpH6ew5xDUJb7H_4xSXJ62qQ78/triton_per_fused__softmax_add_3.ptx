//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__softmax_add_3 // -- Begin function triton_per_fused__softmax_add_3
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 105, 114, 47, 99, 105, 114, 50, 111, 103, 113, 120, 100, 110, 102, 99, 104, 55, 106, 103, 104, 103, 51, 109, 104, 102, 113, 110, 52, 116, 122, 119, 111, 118, 111, 118, 98, 116, 50, 53, 112, 100, 98, 100, 99, 108, 53, 104, 116, 117, 97, 52, 118, 106, 106, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[37] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 53, 32, 60, 32, 51, 52, 51};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__softmax_add_3
.visible .entry triton_per_fused__softmax_add_3(
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_add_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_add_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_add_3_param_2,
	.param .u32 triton_per_fused__softmax_add_3_param_3,
	.param .u32 triton_per_fused__softmax_add_3_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<182>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<488>;
	.reg .f32 	%f<164>;
	.reg .b64 	%rd<183>;
	.loc	1 19 0                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:19:0

// %bb.0:
	ld.param.u64 	%rd50, [triton_per_fused__softmax_add_3_param_0];
	ld.param.u64 	%rd51, [triton_per_fused__softmax_add_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:23:28
	// begin inline asm
	mov.u32 %r38, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:23:33
	shl.b32 	%r1, %r38, 7;
	.loc	1 24 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r103, %r2, 3, 4;
	and.b32  	%r3, %r2, 128;
	shr.u32 	%r104, %r3, 3;
	.loc	1 26 34                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:26:34
	shl.b32 	%r4, %r2, 2;
	and.b32  	%r105, %r4, 28;
	.loc	1 33 47                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:47
	shl.b32 	%r106, %r2, 9;
	and.b32  	%r107, %r106, 3584;
	.loc	1 24 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:44
	or.b32  	%r108, %r103, %r104;
	.loc	1 33 47                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:47
	or.b32  	%r109, %r108, %r107;
	shr.u32 	%r111, %r107, 7;
	add.s32 	%r5, %r109, %r111;
	shl.b32 	%r112, %r5, 2;
	mov.u32 	%r113, global_smem;
	add.s32 	%r71, %r113, %r112;
	or.b32  	%r114, %r107, 128;
	shr.u32 	%r115, %r114, 7;
	add.s32 	%r9, %r115, %r109;
	shl.b32 	%r116, %r9, 2;
	add.s32 	%r117, %r113, %r116;
	add.s32 	%r73, %r117, 512;
	or.b32  	%r118, %r107, 256;
	shr.u32 	%r119, %r118, 7;
	add.s32 	%r10, %r119, %r109;
	shl.b32 	%r120, %r10, 2;
	add.s32 	%r121, %r113, %r120;
	add.s32 	%r75, %r121, 1024;
	or.b32  	%r122, %r107, 384;
	shr.u32 	%r123, %r122, 7;
	add.s32 	%r11, %r123, %r109;
	shl.b32 	%r124, %r11, 2;
	add.s32 	%r125, %r113, %r124;
	add.s32 	%r77, %r125, 1536;
	add.s32 	%r79, %r71, 128;
	add.s32 	%r81, %r117, 640;
	add.s32 	%r83, %r121, 1152;
	add.s32 	%r85, %r125, 1664;
	add.s32 	%r87, %r71, 256;
	add.s32 	%r89, %r117, 768;
	add.s32 	%r91, %r121, 1280;
	add.s32 	%r93, %r125, 1792;
	add.s32 	%r95, %r71, 384;
	add.s32 	%r97, %r117, 896;
	add.s32 	%r99, %r121, 1408;
	add.s32 	%r101, %r125, 1920;
	.loc	1 24 23                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:23
	or.b32  	%r189, %r1, %r108;
	or.b32  	%r190, %r189, 32;
	or.b32  	%r191, %r189, 64;
	or.b32  	%r192, %r189, 96;
	.loc	1 25 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:25:21
	setp.lt.s32 	%p4, %r192, 512;
	setp.lt.s32 	%p3, %r191, 512;
	setp.lt.s32 	%p2, %r190, 512;
	setp.lt.s32 	%p1, %r189, 512;
	.loc	1 32 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:32:21
	shr.s32 	%r194, %r189, 31;
	shr.u32 	%r195, %r194, 27;
	add.s32 	%r196, %r189, %r195;
	.loc	1 31 19                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:31:19
	and.b32  	%r197, %r196, 134217696;
	sub.s32 	%r198, %r189, %r197;
	.loc	1 32 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:32:21
	shr.s32 	%r200, %r190, 31;
	shr.u32 	%r201, %r200, 27;
	add.s32 	%r202, %r190, %r201;
	.loc	1 31 19                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:31:19
	and.b32  	%r203, %r202, 134217696;
	sub.s32 	%r204, %r190, %r203;
	.loc	1 32 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:32:21
	shr.s32 	%r206, %r191, 31;
	shr.u32 	%r207, %r206, 27;
	add.s32 	%r208, %r191, %r207;
	.loc	1 31 19                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:31:19
	and.b32  	%r209, %r208, 134217696;
	sub.s32 	%r210, %r191, %r209;
	.loc	1 32 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:32:21
	shr.s32 	%r212, %r192, 31;
	shr.u32 	%r213, %r212, 27;
	add.s32 	%r214, %r192, %r213;
	.loc	1 31 19                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:31:19
	and.b32  	%r215, %r214, 134217696;
	sub.s32 	%r216, %r192, %r215;
	.loc	1 33 42                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:42
	shl.b32 	%r217, %r189, 5;
	shl.b32 	%r218, %r190, 5;
	shl.b32 	%r219, %r191, 5;
	shl.b32 	%r220, %r192, 5;
	.loc	1 33 39                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:39
	or.b32  	%r221, %r217, %r105;
	or.b32  	%r222, %r218, %r105;
	or.b32  	%r223, %r219, %r105;
	or.b32  	%r224, %r220, %r105;
	.loc	1 33 34                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:34
	mul.wide.s32 	%rd52, %r221, 4;
	add.s64 	%rd22, %rd50, %rd52;
	mul.wide.s32 	%rd53, %r222, 4;
	add.s64 	%rd23, %rd50, %rd53;
	mul.wide.s32 	%rd54, %r223, 4;
	add.s64 	%rd24, %rd50, %rd54;
	mul.wide.s32 	%rd55, %r224, 4;
	add.s64 	%rd25, %rd50, %rd55;
	mov.b32 	%r43, 0;
	.loc	1 33 47                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:33:47
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p1 ld.global.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd22 + 0 ];
	@!%p1 mov.u32 %r39, %r43;
	@!%p1 mov.u32 %r40, %r43;
	@!%p1 mov.u32 %r41, %r43;
	@!%p1 mov.u32 %r42, %r43;
	// end inline asm
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p2 ld.global.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd23 + 0 ];
	@!%p2 mov.u32 %r47, %r43;
	@!%p2 mov.u32 %r48, %r43;
	@!%p2 mov.u32 %r49, %r43;
	@!%p2 mov.u32 %r50, %r43;
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	@%p3 ld.global.v4.b32 { %r55, %r56, %r57, %r58 }, [ %rd24 + 0 ];
	@!%p3 mov.u32 %r55, %r43;
	@!%p3 mov.u32 %r56, %r43;
	@!%p3 mov.u32 %r57, %r43;
	@!%p3 mov.u32 %r58, %r43;
	// end inline asm
	// begin inline asm
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	@%p4 ld.global.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd25 + 0 ];
	@!%p4 mov.u32 %r63, %r43;
	@!%p4 mov.u32 %r64, %r43;
	@!%p4 mov.u32 %r65, %r43;
	@!%p4 mov.u32 %r66, %r43;
	// end inline asm
	mov.pred 	%p40, -1;
	// begin inline asm
	@%p40 st.shared.b32 [ %r71 + 0 ], %r39;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r73 + 0 ], %r40;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r75 + 0 ], %r41;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r77 + 0 ], %r42;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r79 + 0 ], %r47;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r81 + 0 ], %r48;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r83 + 0 ], %r49;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r85 + 0 ], %r50;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r87 + 0 ], %r55;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r89 + 0 ], %r56;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r91 + 0 ], %r57;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r93 + 0 ], %r58;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r95 + 0 ], %r63;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r97 + 0 ], %r64;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r99 + 0 ], %r65;
	// end inline asm
	// begin inline asm
	@%p40 st.shared.b32 [ %r101 + 0 ], %r66;
	// end inline asm
	bar.sync 	0;
	.loc	1 34 38                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:38
	shl.b32 	%r225, %r198, 5;
	shl.b32 	%r226, %r204, 5;
	shl.b32 	%r227, %r210, 5;
	shl.b32 	%r228, %r216, 5;
	.loc	1 34 35                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:35
	or.b32  	%r229, %r225, %r105;
	or.b32  	%r230, %r226, %r105;
	or.b32  	%r231, %r227, %r105;
	or.b32  	%r232, %r228, %r105;
	.loc	1 34 30                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:30
	mul.wide.s32 	%rd56, %r229, 8;
	add.s64 	%rd28, %rd51, %rd56;
	cvt.s64.s32 	%rd57, %r225;
	cvt.u64.u32 	%rd58, %r105;
	or.b64  	%rd59, %rd57, %rd58;
	shl.b64 	%rd60, %rd59, 3;
	add.s64 	%rd61, %rd51, %rd60;
	add.s64 	%rd31, %rd61, 16;
	mul.wide.s32 	%rd62, %r230, 8;
	add.s64 	%rd34, %rd51, %rd62;
	cvt.s64.s32 	%rd63, %r226;
	or.b64  	%rd64, %rd63, %rd58;
	shl.b64 	%rd65, %rd64, 3;
	add.s64 	%rd66, %rd51, %rd65;
	add.s64 	%rd37, %rd66, 16;
	mul.wide.s32 	%rd67, %r231, 8;
	add.s64 	%rd40, %rd51, %rd67;
	cvt.s64.s32 	%rd68, %r227;
	or.b64  	%rd69, %rd68, %rd58;
	shl.b64 	%rd70, %rd69, 3;
	add.s64 	%rd71, %rd51, %rd70;
	add.s64 	%rd43, %rd71, 16;
	mul.wide.s32 	%rd72, %r232, 8;
	add.s64 	%rd46, %rd51, %rd72;
	cvt.s64.s32 	%rd73, %r228;
	or.b64  	%rd74, %rd73, %rd58;
	shl.b64 	%rd75, %rd74, 3;
	add.s64 	%rd76, %rd51, %rd75;
	add.s64 	%rd49, %rd76, 16;
	.loc	1 34 43                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:34:43
	// begin inline asm
	mov.u64 %rd26, 0x0;
	mov.u64 %rd27, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd26, %rd27 }, [ %rd28 + 0 ];
	@!%p1 mov.u64 %rd26, 0x0;
	@!%p1 mov.u64 %rd27, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	mov.u64 %rd30, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd29, %rd30 }, [ %rd31 + 0 ];
	@!%p1 mov.u64 %rd29, 0x0;
	@!%p1 mov.u64 %rd30, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	mov.u64 %rd33, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b64 { %rd32, %rd33 }, [ %rd34 + 0 ];
	@!%p2 mov.u64 %rd32, 0x0;
	@!%p2 mov.u64 %rd33, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, 0x0;
	mov.u64 %rd36, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b64 { %rd35, %rd36 }, [ %rd37 + 0 ];
	@!%p2 mov.u64 %rd35, 0x0;
	@!%p2 mov.u64 %rd36, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd38, 0x0;
	mov.u64 %rd39, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b64 { %rd38, %rd39 }, [ %rd40 + 0 ];
	@!%p3 mov.u64 %rd38, 0x0;
	@!%p3 mov.u64 %rd39, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd41, 0x0;
	mov.u64 %rd42, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b64 { %rd41, %rd42 }, [ %rd43 + 0 ];
	@!%p3 mov.u64 %rd41, 0x0;
	@!%p3 mov.u64 %rd42, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd44, 0x0;
	mov.u64 %rd45, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b64 { %rd44, %rd45 }, [ %rd46 + 0 ];
	@!%p4 mov.u64 %rd44, 0x0;
	@!%p4 mov.u64 %rd45, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd47, 0x0;
	mov.u64 %rd48, 0x0;
	@%p4 ld.global.L1::evict_last.v2.b64 { %rd47, %rd48 }, [ %rd49 + 0 ];
	@!%p4 mov.u64 %rd47, 0x0;
	@!%p4 mov.u64 %rd48, 0x0;
	// end inline asm
	.loc	1 36 18                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:36:18
	add.s64 	%rd77, %rd32, 343;
	add.s64 	%rd78, %rd26, 343;
	add.s64 	%rd79, %rd44, 343;
	add.s64 	%rd80, %rd38, 343;
	add.s64 	%rd81, %rd33, 343;
	add.s64 	%rd82, %rd27, 343;
	add.s64 	%rd83, %rd45, 343;
	add.s64 	%rd84, %rd39, 343;
	add.s64 	%rd85, %rd41, 343;
	add.s64 	%rd86, %rd47, 343;
	add.s64 	%rd87, %rd29, 343;
	add.s64 	%rd88, %rd35, 343;
	add.s64 	%rd89, %rd36, 343;
	add.s64 	%rd90, %rd30, 343;
	add.s64 	%rd91, %rd48, 343;
	add.s64 	%rd92, %rd42, 343;
	.loc	1 37 18                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:37:18
	setp.lt.s64 	%p65, %rd32, 0;
	setp.lt.s64 	%p66, %rd26, 0;
	setp.lt.s64 	%p67, %rd44, 0;
	setp.lt.s64 	%p68, %rd38, 0;
	setp.lt.s64 	%p69, %rd33, 0;
	setp.lt.s64 	%p70, %rd27, 0;
	setp.lt.s64 	%p71, %rd45, 0;
	setp.lt.s64 	%p72, %rd39, 0;
	setp.lt.s64 	%p73, %rd41, 0;
	setp.lt.s64 	%p74, %rd47, 0;
	setp.lt.s64 	%p75, %rd29, 0;
	setp.lt.s64 	%p76, %rd35, 0;
	setp.lt.s64 	%p77, %rd36, 0;
	setp.lt.s64 	%p78, %rd30, 0;
	setp.lt.s64 	%p79, %rd48, 0;
	setp.lt.s64 	%p80, %rd42, 0;
	.loc	1 38 32                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:38:32
	selp.b64 	%rd7, %rd80, %rd38, %p68;
	selp.b64 	%rd8, %rd79, %rd44, %p67;
	selp.b64 	%rd5, %rd78, %rd26, %p66;
	selp.b64 	%rd6, %rd77, %rd32, %p65;
	selp.b64 	%rd11, %rd84, %rd39, %p72;
	selp.b64 	%rd12, %rd83, %rd45, %p71;
	selp.b64 	%rd9, %rd82, %rd27, %p70;
	selp.b64 	%rd10, %rd81, %rd33, %p69;
	selp.b64 	%rd14, %rd88, %rd35, %p76;
	selp.b64 	%rd13, %rd87, %rd29, %p75;
	selp.b64 	%rd16, %rd86, %rd47, %p74;
	selp.b64 	%rd15, %rd85, %rd41, %p73;
	selp.b64 	%rd19, %rd92, %rd42, %p80;
	selp.b64 	%rd20, %rd91, %rd48, %p79;
	selp.b64 	%rd17, %rd90, %rd30, %p78;
	selp.b64 	%rd18, %rd89, %rd36, %p77;
	.loc	1 39 62                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:39:62
	max.u64 	%rd93, %rd6, %rd10;
	max.u64 	%rd94, %rd5, %rd9;
	max.u64 	%rd95, %rd8, %rd12;
	max.u64 	%rd96, %rd7, %rd11;
	max.u64 	%rd97, %rd96, %rd15;
	max.u64 	%rd98, %rd95, %rd16;
	max.u64 	%rd99, %rd94, %rd13;
	max.u64 	%rd100, %rd93, %rd14;
	max.u64 	%rd101, %rd18, %rd100;
	setp.gt.u64 	%p81, %rd101, 342;
	max.u64 	%rd102, %rd17, %rd99;
	setp.gt.u64 	%p82, %rd102, 342;
	max.u64 	%rd103, %rd20, %rd98;
	setp.gt.u64 	%p83, %rd103, 342;
	max.u64 	%rd104, %rd19, %rd97;
	setp.gt.u64 	%p84, %rd104, 342;
	and.pred  	%p85, %p3, %p84;
	selp.u16 	%rs1, 1, 0, %p85;
	shl.b16 	%rs2, %rs1, 2;
	and.pred  	%p86, %p4, %p83;
	selp.u16 	%rs3, -1, 0, %p86;
	shl.b16 	%rs4, %rs3, 3;
	or.b16  	%rs5, %rs4, %rs2;
	and.pred  	%p87, %p1, %p82;
	selp.u16 	%rs6, 1, 0, %p87;
	and.pred  	%p88, %p2, %p81;
	selp.u16 	%rs7, -1, 0, %p88;
	shl.b16 	%rs8, %rs7, 1;
	or.b16  	%rs9, %rs6, %rs8;
	and.b16  	%rs10, %rs9, 3;
	or.b16  	%rs11, %rs10, %rs5;
	and.b16  	%rs12, %rs11, 15;
	setp.eq.s16 	%p89, %rs12, 0;
	@%p89 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 62                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:0:62
	ld.param.u64 	%rd21, [triton_per_fused__softmax_add_3_param_2];
	and.b32  	%r110, %r2, 255;
	bfe.u32 	%r126, %r2, 7, 1;
	add.s32 	%r18, %r126, %r110;
	shl.b32 	%r127, %r18, 2;
	add.s32 	%r128, %r113, %r127;
	or.b32  	%r129, %r110, 256;
	shr.u32 	%r130, %r129, 7;
	add.s32 	%r19, %r130, %r110;
	shl.b32 	%r131, %r19, 2;
	add.s32 	%r132, %r113, %r131;
	or.b32  	%r133, %r110, 512;
	shr.u32 	%r134, %r133, 7;
	add.s32 	%r20, %r134, %r110;
	shl.b32 	%r135, %r20, 2;
	add.s32 	%r136, %r113, %r135;
	or.b32  	%r137, %r110, 768;
	shr.u32 	%r138, %r137, 7;
	add.s32 	%r21, %r138, %r110;
	shl.b32 	%r139, %r21, 2;
	add.s32 	%r140, %r113, %r139;
	or.b32  	%r141, %r110, 1024;
	shr.u32 	%r142, %r141, 7;
	add.s32 	%r22, %r142, %r110;
	shl.b32 	%r143, %r22, 2;
	add.s32 	%r144, %r113, %r143;
	or.b32  	%r145, %r110, 1280;
	shr.u32 	%r146, %r145, 7;
	add.s32 	%r23, %r146, %r110;
	shl.b32 	%r147, %r23, 2;
	add.s32 	%r148, %r113, %r147;
	or.b32  	%r149, %r110, 1536;
	shr.u32 	%r150, %r149, 7;
	add.s32 	%r24, %r150, %r110;
	shl.b32 	%r151, %r24, 2;
	add.s32 	%r152, %r113, %r151;
	or.b32  	%r153, %r110, 1792;
	shr.u32 	%r154, %r153, 7;
	add.s32 	%r25, %r154, %r110;
	shl.b32 	%r155, %r25, 2;
	add.s32 	%r156, %r113, %r155;
	or.b32  	%r157, %r110, 2048;
	shr.u32 	%r158, %r157, 7;
	add.s32 	%r26, %r158, %r110;
	shl.b32 	%r159, %r26, 2;
	add.s32 	%r160, %r113, %r159;
	or.b32  	%r161, %r110, 2304;
	shr.u32 	%r162, %r161, 7;
	add.s32 	%r27, %r162, %r110;
	shl.b32 	%r163, %r27, 2;
	add.s32 	%r164, %r113, %r163;
	or.b32  	%r165, %r110, 2560;
	shr.u32 	%r166, %r165, 7;
	add.s32 	%r28, %r166, %r110;
	shl.b32 	%r167, %r28, 2;
	add.s32 	%r168, %r113, %r167;
	or.b32  	%r169, %r110, 2816;
	shr.u32 	%r170, %r169, 7;
	add.s32 	%r29, %r170, %r110;
	shl.b32 	%r171, %r29, 2;
	add.s32 	%r172, %r113, %r171;
	or.b32  	%r173, %r110, 3072;
	shr.u32 	%r174, %r173, 7;
	add.s32 	%r30, %r174, %r110;
	shl.b32 	%r175, %r30, 2;
	add.s32 	%r176, %r113, %r175;
	or.b32  	%r177, %r110, 3328;
	shr.u32 	%r178, %r177, 7;
	add.s32 	%r31, %r178, %r110;
	shl.b32 	%r179, %r31, 2;
	add.s32 	%r180, %r113, %r179;
	or.b32  	%r181, %r110, 3584;
	shr.u32 	%r182, %r181, 7;
	add.s32 	%r32, %r182, %r110;
	shl.b32 	%r183, %r32, 2;
	add.s32 	%r184, %r113, %r183;
	or.b32  	%r185, %r110, 3840;
	shr.u32 	%r186, %r185, 7;
	add.s32 	%r33, %r186, %r110;
	shl.b32 	%r187, %r33, 2;
	add.s32 	%r188, %r113, %r187;
	shr.s32 	%r34, %r196, 5;
	shr.s32 	%r35, %r202, 5;
	shr.s32 	%r36, %r208, 5;
	shr.s32 	%r37, %r214, 5;
	ld.shared.f32 	%f1, [%r128];
	ld.shared.f32 	%f2, [%r132+1024];
	ld.shared.f32 	%f3, [%r136+2048];
	ld.shared.f32 	%f4, [%r140+3072];
	ld.shared.f32 	%f5, [%r144+4096];
	ld.shared.f32 	%f6, [%r148+5120];
	ld.shared.f32 	%f7, [%r152+6144];
	ld.shared.f32 	%f8, [%r156+7168];
	ld.shared.f32 	%f9, [%r160+8192];
	ld.shared.f32 	%f10, [%r164+9216];
	ld.shared.f32 	%f11, [%r168+10240];
	ld.shared.f32 	%f12, [%r172+11264];
	ld.shared.f32 	%f13, [%r176+12288];
	ld.shared.f32 	%f14, [%r180+13312];
	ld.shared.f32 	%f15, [%r184+14336];
	ld.shared.f32 	%f16, [%r188+15360];
	.loc	1 24 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:44
	and.b32  	%r373, %r2, 127;
	.loc	1 24 23                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:24:23
	or.b32  	%r374, %r1, %r373;
	.loc	1 25 21                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:25:21
	setp.lt.s32 	%p106, %r374, 512;
	.loc	1 32 27                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:32:27
	shr.u32 	%r375, %r37, 30;
	add.s32 	%r376, %r37, %r375;
	and.b32  	%r377, %r376, -4;
	sub.s32 	%r378, %r37, %r377;
	shr.u32 	%r379, %r36, 30;
	add.s32 	%r380, %r36, %r379;
	and.b32  	%r381, %r380, -4;
	sub.s32 	%r382, %r36, %r381;
	shr.u32 	%r383, %r35, 30;
	add.s32 	%r384, %r35, %r383;
	and.b32  	%r385, %r384, -4;
	sub.s32 	%r386, %r35, %r385;
	shr.u32 	%r387, %r34, 30;
	add.s32 	%r388, %r34, %r387;
	and.b32  	%r389, %r388, -4;
	sub.s32 	%r390, %r34, %r389;
	.loc	1 39 62                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:39:62
	bar.sync 	0;
	.loc	1 40 30                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:40:30
	shl.b64 	%rd147, %rd5, 4;
	add.s64 	%rd148, %rd21, %rd147;
	mul.wide.s32 	%rd149, %r390, 4;
	add.s64 	%rd111, %rd148, %rd149;
	shl.b64 	%rd150, %rd9, 4;
	add.s64 	%rd151, %rd21, %rd150;
	add.s64 	%rd112, %rd151, %rd149;
	shl.b64 	%rd152, %rd13, 4;
	add.s64 	%rd153, %rd21, %rd152;
	add.s64 	%rd113, %rd153, %rd149;
	shl.b64 	%rd154, %rd17, 4;
	add.s64 	%rd155, %rd21, %rd154;
	add.s64 	%rd114, %rd155, %rd149;
	shl.b64 	%rd156, %rd6, 4;
	add.s64 	%rd157, %rd21, %rd156;
	mul.wide.s32 	%rd158, %r386, 4;
	add.s64 	%rd115, %rd157, %rd158;
	shl.b64 	%rd159, %rd10, 4;
	add.s64 	%rd160, %rd21, %rd159;
	add.s64 	%rd116, %rd160, %rd158;
	shl.b64 	%rd161, %rd14, 4;
	add.s64 	%rd162, %rd21, %rd161;
	add.s64 	%rd117, %rd162, %rd158;
	shl.b64 	%rd163, %rd18, 4;
	add.s64 	%rd164, %rd21, %rd163;
	add.s64 	%rd118, %rd164, %rd158;
	shl.b64 	%rd165, %rd7, 4;
	add.s64 	%rd166, %rd21, %rd165;
	mul.wide.s32 	%rd167, %r382, 4;
	add.s64 	%rd119, %rd166, %rd167;
	shl.b64 	%rd168, %rd11, 4;
	add.s64 	%rd169, %rd21, %rd168;
	add.s64 	%rd120, %rd169, %rd167;
	shl.b64 	%rd170, %rd15, 4;
	add.s64 	%rd171, %rd21, %rd170;
	add.s64 	%rd121, %rd171, %rd167;
	shl.b64 	%rd172, %rd19, 4;
	add.s64 	%rd173, %rd21, %rd172;
	add.s64 	%rd122, %rd173, %rd167;
	shl.b64 	%rd174, %rd8, 4;
	add.s64 	%rd175, %rd21, %rd174;
	mul.wide.s32 	%rd176, %r378, 4;
	add.s64 	%rd123, %rd175, %rd176;
	shl.b64 	%rd177, %rd12, 4;
	add.s64 	%rd178, %rd21, %rd177;
	add.s64 	%rd124, %rd178, %rd176;
	shl.b64 	%rd179, %rd16, 4;
	add.s64 	%rd180, %rd21, %rd179;
	add.s64 	%rd125, %rd180, %rd176;
	shl.b64 	%rd181, %rd20, 4;
	add.s64 	%rd182, %rd21, %rd181;
	add.s64 	%rd126, %rd182, %rd176;
	.loc	1 40 44                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:40:44
	bar.sync 	0;
	shl.b32 	%r391, %r5, 3;
	add.s32 	%r233, %r113, %r391;
	// begin inline asm
	@%p40 st.shared.b64 [ %r233 + 0 ], %rd111;
	// end inline asm
	shl.b32 	%r393, %r9, 3;
	add.s32 	%r394, %r113, %r393;
	add.s32 	%r234, %r394, 1024;
	// begin inline asm
	@%p40 st.shared.b64 [ %r234 + 0 ], %rd112;
	// end inline asm
	shl.b32 	%r395, %r10, 3;
	add.s32 	%r396, %r113, %r395;
	add.s32 	%r235, %r396, 2048;
	// begin inline asm
	@%p40 st.shared.b64 [ %r235 + 0 ], %rd113;
	// end inline asm
	shl.b32 	%r397, %r11, 3;
	add.s32 	%r398, %r113, %r397;
	add.s32 	%r236, %r398, 3072;
	// begin inline asm
	@%p40 st.shared.b64 [ %r236 + 0 ], %rd114;
	// end inline asm
	add.s32 	%r237, %r233, 256;
	// begin inline asm
	@%p40 st.shared.b64 [ %r237 + 0 ], %rd115;
	// end inline asm
	add.s32 	%r238, %r394, 1280;
	// begin inline asm
	@%p40 st.shared.b64 [ %r238 + 0 ], %rd116;
	// end inline asm
	add.s32 	%r239, %r396, 2304;
	// begin inline asm
	@%p40 st.shared.b64 [ %r239 + 0 ], %rd117;
	// end inline asm
	add.s32 	%r240, %r398, 3328;
	// begin inline asm
	@%p40 st.shared.b64 [ %r240 + 0 ], %rd118;
	// end inline asm
	add.s32 	%r241, %r233, 512;
	// begin inline asm
	@%p40 st.shared.b64 [ %r241 + 0 ], %rd119;
	// end inline asm
	add.s32 	%r242, %r394, 1536;
	// begin inline asm
	@%p40 st.shared.b64 [ %r242 + 0 ], %rd120;
	// end inline asm
	add.s32 	%r243, %r396, 2560;
	// begin inline asm
	@%p40 st.shared.b64 [ %r243 + 0 ], %rd121;
	// end inline asm
	add.s32 	%r244, %r398, 3584;
	// begin inline asm
	@%p40 st.shared.b64 [ %r244 + 0 ], %rd122;
	// end inline asm
	add.s32 	%r245, %r233, 768;
	// begin inline asm
	@%p40 st.shared.b64 [ %r245 + 0 ], %rd123;
	// end inline asm
	add.s32 	%r246, %r394, 1792;
	// begin inline asm
	@%p40 st.shared.b64 [ %r246 + 0 ], %rd124;
	// end inline asm
	add.s32 	%r247, %r396, 2816;
	// begin inline asm
	@%p40 st.shared.b64 [ %r247 + 0 ], %rd125;
	// end inline asm
	add.s32 	%r248, %r398, 3840;
	// begin inline asm
	@%p40 st.shared.b64 [ %r248 + 0 ], %rd126;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r417, %r18, 3;
	add.s32 	%r418, %r113, %r417;
	ld.shared.u64 	%rd127, [%r418];
	shl.b32 	%r419, %r19, 3;
	add.s32 	%r420, %r113, %r419;
	ld.shared.u64 	%rd128, [%r420+2048];
	shl.b32 	%r421, %r20, 3;
	add.s32 	%r422, %r113, %r421;
	ld.shared.u64 	%rd129, [%r422+4096];
	shl.b32 	%r423, %r21, 3;
	add.s32 	%r424, %r113, %r423;
	ld.shared.u64 	%rd130, [%r424+6144];
	shl.b32 	%r425, %r22, 3;
	add.s32 	%r426, %r113, %r425;
	ld.shared.u64 	%rd131, [%r426+8192];
	shl.b32 	%r427, %r23, 3;
	add.s32 	%r428, %r113, %r427;
	ld.shared.u64 	%rd132, [%r428+10240];
	shl.b32 	%r429, %r24, 3;
	add.s32 	%r430, %r113, %r429;
	ld.shared.u64 	%rd133, [%r430+12288];
	shl.b32 	%r431, %r25, 3;
	add.s32 	%r432, %r113, %r431;
	ld.shared.u64 	%rd134, [%r432+14336];
	shl.b32 	%r433, %r26, 3;
	add.s32 	%r434, %r113, %r433;
	ld.shared.u64 	%rd135, [%r434+16384];
	shl.b32 	%r435, %r27, 3;
	add.s32 	%r436, %r113, %r435;
	ld.shared.u64 	%rd136, [%r436+18432];
	shl.b32 	%r437, %r28, 3;
	add.s32 	%r438, %r113, %r437;
	ld.shared.u64 	%rd137, [%r438+20480];
	shl.b32 	%r439, %r29, 3;
	add.s32 	%r440, %r113, %r439;
	ld.shared.u64 	%rd138, [%r440+22528];
	shl.b32 	%r441, %r30, 3;
	add.s32 	%r442, %r113, %r441;
	ld.shared.u64 	%rd139, [%r442+24576];
	shl.b32 	%r443, %r31, 3;
	add.s32 	%r444, %r113, %r443;
	ld.shared.u64 	%rd140, [%r444+26624];
	shl.b32 	%r445, %r32, 3;
	add.s32 	%r446, %r113, %r445;
	ld.shared.u64 	%rd141, [%r446+28672];
	shl.b32 	%r447, %r33, 3;
	add.s32 	%r448, %r113, %r447;
	ld.shared.u64 	%rd142, [%r448+30720];
	// begin inline asm
	mov.u32 %r249, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r249 }, [ %rd127 + 0 ];
	// end inline asm
	mov.b32 	%f49, %r249;
	// begin inline asm
	mov.u32 %r250, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r250 }, [ %rd128 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r250;
	// begin inline asm
	mov.u32 %r251, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r251 }, [ %rd129 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r251;
	// begin inline asm
	mov.u32 %r252, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r252 }, [ %rd130 + 0 ];
	// end inline asm
	mov.b32 	%f52, %r252;
	// begin inline asm
	mov.u32 %r253, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r253 }, [ %rd131 + 0 ];
	// end inline asm
	mov.b32 	%f53, %r253;
	// begin inline asm
	mov.u32 %r254, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r254 }, [ %rd132 + 0 ];
	// end inline asm
	mov.b32 	%f54, %r254;
	// begin inline asm
	mov.u32 %r255, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r255 }, [ %rd133 + 0 ];
	// end inline asm
	mov.b32 	%f55, %r255;
	// begin inline asm
	mov.u32 %r256, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r256 }, [ %rd134 + 0 ];
	// end inline asm
	mov.b32 	%f56, %r256;
	// begin inline asm
	mov.u32 %r257, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r257 }, [ %rd135 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r257;
	// begin inline asm
	mov.u32 %r258, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r258 }, [ %rd136 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r258;
	// begin inline asm
	mov.u32 %r259, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r259 }, [ %rd137 + 0 ];
	// end inline asm
	mov.b32 	%f59, %r259;
	// begin inline asm
	mov.u32 %r260, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r260 }, [ %rd138 + 0 ];
	// end inline asm
	mov.b32 	%f60, %r260;
	// begin inline asm
	mov.u32 %r261, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r261 }, [ %rd139 + 0 ];
	// end inline asm
	mov.b32 	%f61, %r261;
	// begin inline asm
	mov.u32 %r262, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r262 }, [ %rd140 + 0 ];
	// end inline asm
	mov.b32 	%f62, %r262;
	// begin inline asm
	mov.u32 %r263, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r263 }, [ %rd141 + 0 ];
	// end inline asm
	mov.b32 	%f63, %r263;
	// begin inline asm
	mov.u32 %r264, 0x0;
	@%p106 ld.global.L1::evict_last.b32 { %r264 }, [ %rd142 + 0 ];
	// end inline asm
	mov.b32 	%f64, %r264;
	.loc	1 41 18                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:41:18
	add.f32 	%f65, %f1, %f49;
	add.f32 	%f66, %f2, %f50;
	add.f32 	%f67, %f3, %f51;
	add.f32 	%f68, %f4, %f52;
	add.f32 	%f69, %f5, %f53;
	add.f32 	%f70, %f6, %f54;
	add.f32 	%f71, %f7, %f55;
	add.f32 	%f72, %f8, %f56;
	add.f32 	%f73, %f9, %f57;
	add.f32 	%f74, %f10, %f58;
	add.f32 	%f75, %f11, %f59;
	add.f32 	%f76, %f12, %f60;
	add.f32 	%f77, %f13, %f61;
	add.f32 	%f78, %f14, %f62;
	add.f32 	%f79, %f15, %f63;
	add.f32 	%f80, %f16, %f64;
	.loc	1 43 34                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:43:34
	selp.f32 	%f81, %f65, 0fFF800000, %p106;
	selp.f32 	%f82, %f66, 0fFF800000, %p106;
	selp.f32 	%f83, %f67, 0fFF800000, %p106;
	selp.f32 	%f84, %f68, 0fFF800000, %p106;
	selp.f32 	%f85, %f69, 0fFF800000, %p106;
	selp.f32 	%f86, %f70, 0fFF800000, %p106;
	selp.f32 	%f87, %f71, 0fFF800000, %p106;
	selp.f32 	%f88, %f72, 0fFF800000, %p106;
	selp.f32 	%f89, %f73, 0fFF800000, %p106;
	selp.f32 	%f90, %f74, 0fFF800000, %p106;
	selp.f32 	%f91, %f75, 0fFF800000, %p106;
	selp.f32 	%f92, %f76, 0fFF800000, %p106;
	selp.f32 	%f93, %f77, 0fFF800000, %p106;
	selp.f32 	%f94, %f78, 0fFF800000, %p106;
	selp.f32 	%f95, %f79, 0fFF800000, %p106;
	selp.f32 	%f96, %f80, 0fFF800000, %p106;
$L__tmp1:
	.loc	2 131 29                        // triton_helpers.py:131:29
	bar.sync 	0;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p148, %f81, %f82;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p149, %f81, %f81;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f97, %f81, %f82, %p148;
	selp.f32 	%f98, %f81, %f97, %p149;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p150, %f98, %f83;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p151, %f98, %f98;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f99, %f98, %f83, %p151;
	selp.f32 	%f100, %f98, %f99, %p150;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p152, %f100, %f84;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p153, %f100, %f100;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f101, %f100, %f84, %p153;
	selp.f32 	%f102, %f100, %f101, %p152;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p154, %f102, %f85;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p155, %f102, %f102;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f103, %f102, %f85, %p155;
	selp.f32 	%f104, %f102, %f103, %p154;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p156, %f104, %f86;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p157, %f104, %f104;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f105, %f104, %f86, %p157;
	selp.f32 	%f106, %f104, %f105, %p156;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p158, %f106, %f87;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p159, %f106, %f106;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f107, %f106, %f87, %p159;
	selp.f32 	%f108, %f106, %f107, %p158;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p160, %f108, %f88;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p161, %f108, %f108;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f109, %f108, %f88, %p161;
	selp.f32 	%f110, %f108, %f109, %p160;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p162, %f110, %f89;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p163, %f110, %f110;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f111, %f110, %f89, %p163;
	selp.f32 	%f112, %f110, %f111, %p162;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p164, %f112, %f90;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p165, %f112, %f112;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f113, %f112, %f90, %p165;
	selp.f32 	%f114, %f112, %f113, %p164;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p166, %f114, %f91;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p167, %f114, %f114;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f115, %f114, %f91, %p167;
	selp.f32 	%f116, %f114, %f115, %p166;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p168, %f116, %f92;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p169, %f116, %f116;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f117, %f116, %f92, %p169;
	selp.f32 	%f118, %f116, %f117, %p168;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p170, %f118, %f93;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p171, %f118, %f118;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f119, %f118, %f93, %p171;
	selp.f32 	%f120, %f118, %f119, %p170;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p172, %f120, %f94;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p173, %f120, %f120;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f121, %f120, %f94, %p173;
	selp.f32 	%f122, %f120, %f121, %p172;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p174, %f122, %f95;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p175, %f122, %f122;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f123, %f122, %f95, %p175;
	selp.f32 	%f124, %f122, %f123, %p174;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p176, %f124, %f96;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p177, %f124, %f124;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f125, %f124, %f96, %p177;
	selp.f32 	%f126, %f124, %f125, %p176;
	.loc	2 131 29                        // triton_helpers.py:131:29
	shr.u32 	%r449, %r2, 5;
	and.b32  	%r450, %r449, 4;
	shl.b32 	%r451, %r373, 3;
	or.b32  	%r452, %r451, %r450;
	add.s32 	%r265, %r113, %r452;
	mov.b32 	%r266, %f126;
	// begin inline asm
	@%p40 st.shared.b32 [ %r265 + 0 ], %r266;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p123, %r2, 256;
	add.s32 	%r268, %r113, %r4;
	// begin inline asm
	@%p123 ld.shared.b32 %r267, [ %r268 + 0 ];
	// end inline asm
	mov.b32 	%f127, %r267;
	shfl.sync.bfly.b32	%r454, %r267, 1, 31, -1;
	mov.b32 	%f128, %r454;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p178, %f127, %f128;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p179, %f127, %f127;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r455, %r2, 1;
	setp.eq.b32 	%p180, %r455, 1;
	not.pred 	%p181, %p180;
	and.pred  	%p124, %p123, %p181;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r456, %r267, %r454, %p178;
	selp.b32 	%r270, %r267, %r456, %p179;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p124 st.shared.b32 [ %r268 + 0 ], %r270;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r457, %r113, %r451;
	ld.shared.f32 	%f129, [%r457];
$L__tmp2:
	.loc	1 45 19                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:45:19
	sub.f32 	%f130, %f65, %f129;
	sub.f32 	%f131, %f66, %f129;
	sub.f32 	%f132, %f67, %f129;
	sub.f32 	%f133, %f68, %f129;
	sub.f32 	%f134, %f69, %f129;
	sub.f32 	%f135, %f70, %f129;
	sub.f32 	%f136, %f71, %f129;
	sub.f32 	%f137, %f72, %f129;
	sub.f32 	%f138, %f73, %f129;
	sub.f32 	%f139, %f74, %f129;
	sub.f32 	%f140, %f75, %f129;
	sub.f32 	%f141, %f76, %f129;
	sub.f32 	%f142, %f77, %f129;
	sub.f32 	%f143, %f78, %f129;
	sub.f32 	%f144, %f79, %f129;
	sub.f32 	%f145, %f80, %f129;
	.loc	1 46 24                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:46:24
	mul.f32 	%f18, %f130, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f17, %f18;
	// end inline asm
	mul.f32 	%f20, %f131, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f19, %f20;
	// end inline asm
	mul.f32 	%f22, %f132, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f21, %f22;
	// end inline asm
	mul.f32 	%f24, %f133, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f23, %f24;
	// end inline asm
	mul.f32 	%f26, %f134, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f25, %f26;
	// end inline asm
	mul.f32 	%f28, %f135, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f27, %f28;
	// end inline asm
	mul.f32 	%f30, %f136, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f29, %f30;
	// end inline asm
	mul.f32 	%f32, %f137, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f31, %f32;
	// end inline asm
	mul.f32 	%f34, %f138, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f33, %f34;
	// end inline asm
	mul.f32 	%f36, %f139, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f35, %f36;
	// end inline asm
	mul.f32 	%f38, %f140, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f37, %f38;
	// end inline asm
	mul.f32 	%f40, %f141, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f39, %f40;
	// end inline asm
	mul.f32 	%f42, %f142, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f41, %f42;
	// end inline asm
	mul.f32 	%f44, %f143, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f43, %f44;
	// end inline asm
	mul.f32 	%f46, %f144, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f45, %f46;
	// end inline asm
	mul.f32 	%f48, %f145, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f47, %f48;
	// end inline asm
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f146, %f17, %f19;
	add.f32 	%f147, %f146, %f21;
	add.f32 	%f148, %f147, %f23;
	add.f32 	%f149, %f148, %f25;
	add.f32 	%f150, %f149, %f27;
	add.f32 	%f151, %f150, %f29;
	add.f32 	%f152, %f151, %f31;
	add.f32 	%f153, %f152, %f33;
	add.f32 	%f154, %f153, %f35;
	add.f32 	%f155, %f154, %f37;
	add.f32 	%f156, %f155, %f39;
	add.f32 	%f157, %f156, %f41;
	add.f32 	%f158, %f157, %f43;
	add.f32 	%f159, %f158, %f45;
	add.f32 	%f160, %f159, %f47;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r458, %f160;
	.loc	3 256 15                        // standard.py:256:15
	selp.b32 	%r272, %r458, 0, %p106;
	.loc	3 267 36                        // standard.py:267:36
	// begin inline asm
	@%p40 st.shared.b32 [ %r265 + 0 ], %r272;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p123 ld.shared.b32 %r273, [ %r268 + 0 ];
	// end inline asm
	mov.b32 	%f161, %r273;
	shfl.sync.bfly.b32	%r459, %r273, 1, 31, -1;
	mov.b32 	%f162, %r459;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f163, %f161, %f162;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r276, %f163;
	// begin inline asm
	@%p124 st.shared.b32 [ %r268 + 0 ], %r276;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 50 20                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:50:20
	mov.b32 	%r278, %f17;
	ld.shared.u32 	%r279, [%r457];
	// begin inline asm
	div.full.f32 %r326, %r278, %r279;
	// end inline asm
	mov.b32 	%r281, %f19;
	// begin inline asm
	div.full.f32 %r328, %r281, %r279;
	// end inline asm
	mov.b32 	%r284, %f21;
	// begin inline asm
	div.full.f32 %r330, %r284, %r279;
	// end inline asm
	mov.b32 	%r287, %f23;
	// begin inline asm
	div.full.f32 %r332, %r287, %r279;
	// end inline asm
	mov.b32 	%r290, %f25;
	// begin inline asm
	div.full.f32 %r334, %r290, %r279;
	// end inline asm
	mov.b32 	%r293, %f27;
	// begin inline asm
	div.full.f32 %r336, %r293, %r279;
	// end inline asm
	mov.b32 	%r296, %f29;
	// begin inline asm
	div.full.f32 %r338, %r296, %r279;
	// end inline asm
	mov.b32 	%r299, %f31;
	// begin inline asm
	div.full.f32 %r340, %r299, %r279;
	// end inline asm
	mov.b32 	%r302, %f33;
	// begin inline asm
	div.full.f32 %r342, %r302, %r279;
	// end inline asm
	mov.b32 	%r305, %f35;
	// begin inline asm
	div.full.f32 %r344, %r305, %r279;
	// end inline asm
	mov.b32 	%r308, %f37;
	// begin inline asm
	div.full.f32 %r346, %r308, %r279;
	// end inline asm
	mov.b32 	%r311, %f39;
	// begin inline asm
	div.full.f32 %r348, %r311, %r279;
	// end inline asm
	mov.b32 	%r314, %f41;
	// begin inline asm
	div.full.f32 %r350, %r314, %r279;
	// end inline asm
	mov.b32 	%r317, %f43;
	// begin inline asm
	div.full.f32 %r352, %r317, %r279;
	// end inline asm
	mov.b32 	%r320, %f45;
	// begin inline asm
	div.full.f32 %r354, %r320, %r279;
	// end inline asm
	mov.b32 	%r323, %f47;
	// begin inline asm
	div.full.f32 %r356, %r323, %r279;
	// end inline asm
	.loc	1 51 48                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:51:48
	bar.sync 	0;
	shl.b32 	%r460, %r2, 5;
	and.b32  	%r461, %r460, 4064;
	shr.u32 	%r462, %r3, 7;
	or.b32  	%r463, %r461, %r462;
	and.b32  	%r464, %r4, 1020;
	shr.u32 	%r465, %r461, 1;
	add.s32 	%r466, %r113, %r465;
	shl.b32 	%r467, %r463, 2;
	add.s32 	%r325, %r466, %r467;
	// begin inline asm
	@%p40 st.shared.b32 [ %r325 + 0 ], %r326;
	// end inline asm
	add.s32 	%r327, %r325, 8;
	// begin inline asm
	@%p40 st.shared.b32 [ %r327 + 0 ], %r328;
	// end inline asm
	add.s32 	%r329, %r325, 16;
	// begin inline asm
	@%p40 st.shared.b32 [ %r329 + 0 ], %r330;
	// end inline asm
	add.s32 	%r331, %r325, 24;
	// begin inline asm
	@%p40 st.shared.b32 [ %r331 + 0 ], %r332;
	// end inline asm
	add.s32 	%r333, %r325, 32;
	// begin inline asm
	@%p40 st.shared.b32 [ %r333 + 0 ], %r334;
	// end inline asm
	add.s32 	%r335, %r325, 40;
	// begin inline asm
	@%p40 st.shared.b32 [ %r335 + 0 ], %r336;
	// end inline asm
	add.s32 	%r337, %r325, 48;
	// begin inline asm
	@%p40 st.shared.b32 [ %r337 + 0 ], %r338;
	// end inline asm
	add.s32 	%r339, %r325, 56;
	// begin inline asm
	@%p40 st.shared.b32 [ %r339 + 0 ], %r340;
	// end inline asm
	add.s32 	%r341, %r325, 64;
	// begin inline asm
	@%p40 st.shared.b32 [ %r341 + 0 ], %r342;
	// end inline asm
	add.s32 	%r343, %r325, 72;
	// begin inline asm
	@%p40 st.shared.b32 [ %r343 + 0 ], %r344;
	// end inline asm
	add.s32 	%r345, %r325, 80;
	// begin inline asm
	@%p40 st.shared.b32 [ %r345 + 0 ], %r346;
	// end inline asm
	add.s32 	%r347, %r325, 88;
	// begin inline asm
	@%p40 st.shared.b32 [ %r347 + 0 ], %r348;
	// end inline asm
	add.s32 	%r349, %r325, 96;
	// begin inline asm
	@%p40 st.shared.b32 [ %r349 + 0 ], %r350;
	// end inline asm
	add.s32 	%r351, %r325, 104;
	// begin inline asm
	@%p40 st.shared.b32 [ %r351 + 0 ], %r352;
	// end inline asm
	add.s32 	%r353, %r325, 112;
	// begin inline asm
	@%p40 st.shared.b32 [ %r353 + 0 ], %r354;
	// end inline asm
	add.s32 	%r355, %r325, 120;
	// begin inline asm
	@%p40 st.shared.b32 [ %r355 + 0 ], %r356;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r468, %r4, 1;
	and.b32  	%r469, %r468, 496;
	add.s32 	%r470, %r113, %r469;
	shl.b32 	%r471, %r464, 2;
	add.s32 	%r472, %r470, %r471;
	or.b32  	%r473, %r464, 1024;
	shr.u32 	%r474, %r473, 1;
	and.b32  	%r475, %r474, 1008;
	add.s32 	%r476, %r113, %r475;
	add.s32 	%r477, %r476, %r471;
	ld.shared.v4.u32 	{%r361, %r362, %r363, %r364}, [%r477+4096];
	or.b32  	%r478, %r464, 2048;
	shr.u32 	%r479, %r478, 1;
	and.b32  	%r480, %r479, 1520;
	add.s32 	%r481, %r113, %r480;
	add.s32 	%r482, %r481, %r471;
	ld.shared.v4.u32 	{%r365, %r366, %r367, %r368}, [%r482+8192];
	or.b32  	%r483, %r464, 3072;
	shr.u32 	%r484, %r483, 1;
	and.b32  	%r485, %r484, 2032;
	add.s32 	%r486, %r113, %r485;
	add.s32 	%r487, %r486, %r471;
	ld.shared.v4.u32 	{%r369, %r370, %r371, %r372}, [%r487+12288];
	ld.shared.v4.u32 	{%r357, %r358, %r359, %r360}, [%r472];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd22 + 0 ], { %r357, %r358, %r359, %r360 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd23 + 0 ], { %r361, %r362, %r363, %r364 };
	// end inline asm
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd24 + 0 ], { %r365, %r366, %r367, %r368 };
	// end inline asm
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd25 + 0 ], { %r369, %r370, %r371, %r372 };
	// end inline asm
	.loc	1 51 4                          // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:51:4
	ret;
$L__BB0_1:
	.loc	1 39 62                         // cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py:39:62
	mov.u64 	%rd105, assertMessage_0;
	cvta.global.u64 	%rd106, %rd105;
	mov.u64 	%rd107, assertFile_0;
	cvta.global.u64 	%rd108, %rd107;
	mov.u64 	%rd109, assertFunc_0;
	cvta.global.u64 	%rd110, %rd109;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd106;
	.param .b64 param1;
	st.param.b64 	[param1], %rd108;
	.param .b32 param2;
	st.param.b32 	[param2], 39;
	.param .b64 param3;
	st.param.b64 	[param3], %rd110;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ir/cir2ogqxdnfch7jghg3mhfqn4tzwovovbt25pdbdcl5htua4vjjl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 200                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 114
.b8 50
.b8 111
.b8 103
.b8 113
.b8 120
.b8 100
.b8 110
.b8 102
.b8 99
.b8 104
.b8 55
.b8 106
.b8 103
.b8 104
.b8 103
.b8 51
.b8 109
.b8 104
.b8 102
.b8 113
.b8 110
.b8 52
.b8 116
.b8 122
.b8 119
.b8 111
.b8 118
.b8 111
.b8 118
.b8 98
.b8 116
.b8 50
.b8 53
.b8 112
.b8 100
.b8 98
.b8 100
.b8 99
.b8 108
.b8 53
.b8 104
.b8 116
.b8 117
.b8 97
.b8 52
.b8 118
.b8 106
.b8 106
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x22 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x85:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9a:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 39                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
