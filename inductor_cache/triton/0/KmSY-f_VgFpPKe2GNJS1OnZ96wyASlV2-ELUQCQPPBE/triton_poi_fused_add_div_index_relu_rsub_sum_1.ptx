//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_div_index_relu_rsub_sum_1 // -- Begin function triton_poi_fused_add_div_index_relu_rsub_sum_1
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_3[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_3[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 53, 52, 47, 99, 53, 52, 53, 50, 122, 99, 112, 115, 55, 101, 102, 101, 55, 98, 55, 115, 105, 112, 55, 122, 107, 102, 97, 122, 108, 122, 118, 111, 99, 116, 102, 97, 98, 52, 114, 103, 51, 112, 51, 118, 106, 107, 106, 103, 51, 114, 100, 112, 113, 116, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_3[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 56, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_2[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_2[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 53, 52, 47, 99, 53, 52, 53, 50, 122, 99, 112, 115, 55, 101, 102, 101, 55, 98, 55, 115, 105, 112, 55, 122, 107, 102, 97, 122, 108, 122, 118, 111, 99, 116, 102, 97, 98, 52, 114, 103, 51, 112, 51, 118, 106, 107, 106, 103, 51, 114, 100, 112, 113, 116, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_2[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 51, 53, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_1[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_1[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 53, 52, 47, 99, 53, 52, 53, 50, 122, 99, 112, 115, 55, 101, 102, 101, 55, 98, 55, 115, 105, 112, 55, 122, 107, 102, 97, 122, 108, 122, 118, 111, 99, 116, 102, 97, 98, 52, 114, 103, 51, 112, 51, 118, 106, 107, 106, 103, 51, 114, 100, 112, 113, 116, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_1[36] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 50, 50, 32, 60, 32, 52};
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 53, 52, 47, 99, 53, 52, 53, 50, 122, 99, 112, 115, 55, 101, 102, 101, 55, 98, 55, 115, 105, 112, 55, 122, 107, 102, 97, 122, 108, 122, 118, 111, 99, 116, 102, 97, 98, 52, 114, 103, 51, 112, 51, 118, 106, 107, 106, 103, 51, 114, 100, 112, 113, 116, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 52};
                                        // @triton_poi_fused_add_div_index_relu_rsub_sum_1
.visible .entry triton_poi_fused_add_div_index_relu_rsub_sum_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_index_relu_rsub_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_index_relu_rsub_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_div_index_relu_rsub_sum_1_param_2
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<19>;
	.reg .f32 	%f<26>;
	.reg .b64 	%rd<66>;
	.loc	1 19 0                          // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_add_div_index_relu_rsub_sum_1_param_1];
	mov.pred 	%p8, -1;
$L__tmp0:
	.loc	1 24 19                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:24:19
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p8 ld.global.b32 { %r8 }, [ %rd10 + 0 ];
	// end inline asm
	ld.param.u64 	%rd12, [triton_poi_fused_add_div_index_relu_rsub_sum_1_param_2];
	.loc	1 26 19                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:26:19
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p8 ld.global.b64 { %rd11 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 28 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:28:31
	add.s64 	%rd13, %rd10, 20;
	.loc	1 28 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:28:20
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p8 ld.global.b32 { %r9 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 30 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:30:31
	add.s64 	%rd15, %rd12, 8;
	.loc	1 30 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:30:20
	// begin inline asm
	mov.u64 %rd14, 0x0;
	@%p8 ld.global.b64 { %rd14 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 32 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:32:31
	add.s64 	%rd16, %rd10, 40;
	.loc	1 32 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:32:20
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p8 ld.global.b32 { %r10 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 34 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:34:31
	add.s64 	%rd18, %rd12, 16;
	.loc	1 34 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:34:20
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p8 ld.global.b64 { %rd17 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:36:31
	add.s64 	%rd19, %rd10, 60;
	.loc	1 36 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:36:20
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p8 ld.global.b32 { %r11 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 38 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:38:31
	add.s64 	%rd21, %rd12, 24;
	.loc	1 38 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:38:20
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p8 ld.global.b64 { %rd20 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 45 32                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:45:32
	shr.u64 	%rd22, %rd11, 61;
	and.b64  	%rd23, %rd22, 4;
	add.s64 	%rd4, %rd23, %rd11;
	.loc	1 46 36                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:46:36
	setp.lt.u64 	%p9, %rd4, 4;
	.loc	1 46 47                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:46:47
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	bar.sync 	0;
	.loc	1 47 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:47:31
	shl.b64 	%rd25, %rd4, 2;
	add.s64 	%rd24, %rd10, %rd25;
	.loc	1 47 38                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:47:38
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r12 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 54 35                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:54:35
	shr.u64 	%rd26, %rd14, 61;
	and.b64  	%rd27, %rd26, 4;
	add.s64 	%rd5, %rd27, %rd14;
	.loc	1 55 37                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:55:37
	setp.lt.u64 	%p11, %rd5, 4;
	.loc	1 55 49                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:55:49
	@%p11 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:
	bar.sync 	0;
	.loc	1 56 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:56:31
	shl.b64 	%rd29, %rd5, 2;
	add.s64 	%rd30, %rd10, %rd29;
	add.s64 	%rd28, %rd30, 16;
	.loc	1 56 43                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:56:43
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r13 }, [ %rd28 + 0 ];
	// end inline asm
	.loc	1 63 35                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:63:35
	shr.u64 	%rd31, %rd17, 61;
	and.b64  	%rd32, %rd31, 4;
	add.s64 	%rd6, %rd32, %rd17;
	.loc	1 64 37                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:64:37
	setp.lt.u64 	%p13, %rd6, 4;
	.loc	1 64 49                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:64:49
	@%p13 bra 	$L__BB0_6;
	bra.uni 	$L__BB0_5;
$L__BB0_6:
	bar.sync 	0;
	.loc	1 65 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:65:31
	shl.b64 	%rd34, %rd6, 2;
	add.s64 	%rd35, %rd10, %rd34;
	add.s64 	%rd33, %rd35, 32;
	.loc	1 65 43                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:65:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r14 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 72 35                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:72:35
	shr.u64 	%rd36, %rd20, 61;
	and.b64  	%rd37, %rd36, 4;
	add.s64 	%rd7, %rd37, %rd20;
	.loc	1 73 37                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:73:37
	setp.lt.u64 	%p15, %rd7, 4;
	.loc	1 73 49                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:73:49
	@%p15 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:
	.loc	1 0 49                          // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:0:49
	ld.param.u64 	%rd39, [triton_poi_fused_add_div_index_relu_rsub_sum_1_param_0];
	.loc	1 36 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:36:20
	mov.b32 	%f1, %r11;
	mov.f32 	%f2, 0f3E99999A;
	.loc	1 69 19                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:69:19
	sub.f32 	%f3, %f2, %f1;
	.loc	1 24 19                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:24:19
	mov.b32 	%f4, %r9;
	mov.b32 	%f5, %r8;
	.loc	1 47 38                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:47:38
	mov.b32 	%f6, %r12;
	mov.b32 	%f7, %r13;
	.loc	1 41 18                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:41:18
	sub.f32 	%f8, %f2, %f5;
	sub.f32 	%f9, %f2, %f4;
	.loc	1 48 19                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:48:19
	add.f32 	%f10, %f9, %f7;
	add.f32 	%f11, %f8, %f6;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p18, %f11, 0f00000000;
	setp.lt.f32 	%p19, %f10, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f12, 0f00000000, %f10, %p19;
	selp.f32 	%f13, 0f00000000, %f11, %p18;
$L__tmp2:
	.loc	1 59 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:59:20
	add.f32 	%f14, %f13, %f12;
	.loc	1 32 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:32:20
	mov.b32 	%f15, %r10;
	.loc	1 60 19                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:60:19
	sub.f32 	%f16, %f2, %f15;
	.loc	1 65 43                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:65:43
	mov.b32 	%f17, %r14;
	.loc	1 66 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:66:20
	add.f32 	%f18, %f16, %f17;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p20, %f18, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f19, 0f00000000, %f18, %p20;
$L__tmp4:
	.loc	1 68 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:68:20
	add.f32 	%f20, %f14, %f19;
	.loc	1 73 49                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:73:49
	bar.sync 	0;
	.loc	1 74 31                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:74:31
	shl.b64 	%rd40, %rd7, 2;
	add.s64 	%rd41, %rd10, %rd40;
	add.s64 	%rd38, %rd41, 48;
	.loc	1 74 44                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:74:44
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p8 ld.global.L1::evict_last.b32 { %r15 }, [ %rd38 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r15;
	.loc	1 75 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:75:20
	add.f32 	%f22, %f3, %f21;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p21, %f22, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f23, 0f00000000, %f22, %p21;
$L__tmp6:
	.loc	1 77 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:77:20
	add.f32 	%f24, %f20, %f23;
	.loc	1 79 20                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:79:20
	mul.f32 	%f25, %f24, 0f3E800000;
	.loc	1 80 68                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:80:68
	mov.u32 	%r17, %tid.x;
	and.b32  	%r18, %r17, 31;
	setp.eq.s32 	%p17, %r18, 0;
	mov.b32 	%r16, %f25;
	// begin inline asm
	@%p17 st.global.b32 [ %rd39 + 0 ], { %r16 };
	// end inline asm
	.loc	1 80 4                          // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:80:4
	ret;
$L__BB0_1:
	.loc	1 46 47                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:46:47
	mov.u64 	%rd60, assertMessage_0;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd62, assertFile_0;
	cvta.global.u64 	%rd63, %rd62;
	mov.u64 	%rd64, assertFunc_0;
	cvta.global.u64 	%rd65, %rd64;
	{ // callseq 4, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd61;
	.param .b64 param1;
	st.param.b64 	[param1], %rd63;
	.param .b32 param2;
	st.param.b32 	[param2], 46;
	.param .b64 param3;
	st.param.b64 	[param3], %rd65;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 4
	trap;
$L__BB0_3:
	.loc	1 55 49                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:55:49
	mov.u64 	%rd54, assertMessage_1;
	cvta.global.u64 	%rd55, %rd54;
	mov.u64 	%rd56, assertFile_1;
	cvta.global.u64 	%rd57, %rd56;
	mov.u64 	%rd58, assertFunc_1;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 3, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd55;
	.param .b64 param1;
	st.param.b64 	[param1], %rd57;
	.param .b32 param2;
	st.param.b32 	[param2], 55;
	.param .b64 param3;
	st.param.b64 	[param3], %rd59;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 3
	trap;
$L__BB0_5:
	.loc	1 64 49                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:64:49
	mov.u64 	%rd48, assertMessage_2;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, assertFile_2;
	cvta.global.u64 	%rd51, %rd50;
	mov.u64 	%rd52, assertFunc_2;
	cvta.global.u64 	%rd53, %rd52;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd49;
	.param .b64 param1;
	st.param.b64 	[param1], %rd51;
	.param .b32 param2;
	st.param.b32 	[param2], 64;
	.param .b64 param3;
	st.param.b64 	[param3], %rd53;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__BB0_7:
	.loc	1 73 49                         // c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py:73:49
	mov.u64 	%rd42, assertMessage_3;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, assertFile_3;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, assertFunc_3;
	cvta.global.u64 	%rd47, %rd46;
	{ // callseq 1, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd43;
	.param .b64 param1;
	st.param.b64 	[param1], %rd45;
	.param .b32 param2;
	st.param.b32 	[param2], 73;
	.param .b64 param3;
	st.param.b64 	[param3], %rd47;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 1
	trap;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/54/c5452zcps7efe7b7sip7zkfazlzvoctfab4rg3p3vjkjg3rdpqtl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 239                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 52
.b8 53
.b8 50
.b8 122
.b8 99
.b8 112
.b8 115
.b8 55
.b8 101
.b8 102
.b8 101
.b8 55
.b8 98
.b8 55
.b8 115
.b8 105
.b8 112
.b8 55
.b8 122
.b8 107
.b8 102
.b8 97
.b8 122
.b8 108
.b8 122
.b8 118
.b8 111
.b8 99
.b8 116
.b8 102
.b8 97
.b8 98
.b8 52
.b8 114
.b8 103
.b8 51
.b8 112
.b8 51
.b8 118
.b8 106
.b8 107
.b8 106
.b8 103
.b8 51
.b8 114
.b8 100
.b8 112
.b8 113
.b8 116
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x31 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x94:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 67                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 76                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
