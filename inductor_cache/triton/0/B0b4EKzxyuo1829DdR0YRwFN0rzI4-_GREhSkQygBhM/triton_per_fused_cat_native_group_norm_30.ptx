//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_cat_native_group_norm_30 // -- Begin function triton_per_fused_cat_native_group_norm_30
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_cat_native_group_norm_30
.visible .entry triton_per_fused_cat_native_group_norm_30(
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_30_param_7,
	.param .u32 triton_per_fused_cat_native_group_norm_30_param_8,
	.param .u32 triton_per_fused_cat_native_group_norm_30_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b32 	%r<116>;
	.reg .f32 	%f<50>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_cat_native_group_norm_30_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_cat_native_group_norm_30_param_1];
$L__tmp0:
	.loc	1 23 28                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:23:33
	shl.b32 	%r56, %r1, 3;
	ld.param.u64 	%rd11, [triton_per_fused_cat_native_group_norm_30_param_2];
	ld.param.u64 	%rd12, [triton_per_fused_cat_native_group_norm_30_param_3];
	.loc	1 24 44                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:24:44
	mov.u32 	%r57, %tid.x;
	ld.param.u64 	%rd13, [triton_per_fused_cat_native_group_norm_30_param_4];
	bfe.u32 	%r58, %r57, 5, 3;
	ld.param.u64 	%rd14, [triton_per_fused_cat_native_group_norm_30_param_5];
	and.b32  	%r59, %r57, 7;
	ld.param.u64 	%rd15, [triton_per_fused_cat_native_group_norm_30_param_6];
	.loc	1 24 23                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:24:23
	or.b32  	%r60, %r56, %r58;
	ld.param.u64 	%rd16, [triton_per_fused_cat_native_group_norm_30_param_7];
	.loc	1 25 21                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:25:21
	setp.lt.s32 	%p1, %r60, 128;
	.loc	1 26 34                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:26:34
	shl.b32 	%r61, %r57, 2;
	and.b32  	%r62, %r61, 12;
	and.b32  	%r63, %r61, 124;
	.loc	1 29 19                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:29:19
	bfe.u32 	%r64, %r61, 4, 3;
	.loc	1 32 19                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:32:19
	shr.s32 	%r66, %r60, 31;
	shr.u32 	%r67, %r66, 27;
	add.s32 	%r68, %r60, %r67;
	shr.s32 	%r69, %r68, 5;
	.loc	1 30 19                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:30:19
	and.b32  	%r70, %r68, -32;
	sub.s32 	%r71, %r60, %r70;
	.loc	1 35 40                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:35:40
	shl.b32 	%r72, %r60, 7;
	.loc	1 35 36                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:35:36
	or.b32  	%r73, %r72, %r63;
	.loc	1 35 31                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:35:31
	mul.wide.s32 	%rd17, %r73, 4;
	add.s64 	%rd1, %rd12, %rd17;
	mov.b32 	%r6, 0;
	.loc	1 35 45                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:35:45
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 36 18                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:36:18
	shl.b32 	%r74, %r71, 3;
	.loc	1 36 16                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:36:16
	or.b32  	%r75, %r74, %r64;
	.loc	1 40 18                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:40:18
	setp.lt.s32 	%p28, %r75, 128;
	.loc	1 41 39                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:41:39
	shl.b32 	%r76, %r75, 4;
	.loc	1 41 57                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:41:57
	shl.b32 	%r77, %r69, 11;
	.loc	1 41 35                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:41:35
	or.b32  	%r78, %r77, %r62;
	.loc	1 41 52                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:41:52
	add.s32 	%r79, %r78, %r76;
	.loc	1 41 30                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:41:30
	mul.wide.s32 	%rd18, %r79, 4;
	add.s64 	%rd2, %rd9, %rd18;
	.loc	1 41 69                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:41:69
	and.pred  	%p6, %p1, %p28;
	.loc	1 41 62                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:41:62
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 45 18                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:45:18
	and.b32  	%r80, %r71, 536870904;
	setp.eq.s32 	%p29, %r80, 16;
	.loc	1 46 67                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:46:67
	shl.b32 	%r81, %r69, 10;
	.loc	1 46 36                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:46:36
	or.b32  	%r82, %r81, %r62;
	.loc	1 46 40                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:46:40
	add.s32 	%r83, %r76, %r82;
	.loc	1 46 62                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:46:62
	add.s32 	%r84, %r83, -2048;
	.loc	1 46 31                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:46:31
	mul.wide.s32 	%rd19, %r84, 4;
	add.s64 	%rd3, %rd10, %rd19;
	.loc	1 46 79                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:46:79
	and.pred  	%p11, %p1, %p29;
	.loc	1 46 72                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:46:72
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p11 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r18, %r6;
	@!%p11 mov.u32 %r19, %r6;
	@!%p11 mov.u32 %r20, %r6;
	@!%p11 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 47 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:47:20
	setp.gt.s32 	%p30, %r75, 191;
	.loc	1 50 62                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:50:62
	add.s32 	%r85, %r83, -3072;
	.loc	1 50 31                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:50:31
	mul.wide.s32 	%rd20, %r85, 4;
	add.s64 	%rd4, %rd11, %rd20;
	.loc	1 50 80                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:50:80
	and.pred  	%p16, %p1, %p30;
	.loc	1 50 72                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:50:72
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p16 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r26, %r6;
	@!%p16 mov.u32 %r27, %r6;
	@!%p16 mov.u32 %r28, %r6;
	@!%p16 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 51 34                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:51:34
	selp.b32 	%r86, %r18, %r26, %p29;
	selp.b32 	%r87, %r19, %r27, %p29;
	selp.b32 	%r88, %r20, %r28, %p29;
	selp.b32 	%r89, %r21, %r29, %p29;
	.loc	1 52 33                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:52:33
	selp.b32 	%r49, %r10, %r86, %p28;
	mov.b32 	%f5, %r49;
	selp.b32 	%r50, %r11, %r87, %p28;
	mov.b32 	%f6, %r50;
	selp.b32 	%r51, %r12, %r88, %p28;
	mov.b32 	%f7, %r51;
	selp.b32 	%r52, %r13, %r89, %p28;
	mov.b32 	%f8, %r52;
	.loc	1 53 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:53:20
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f9, %f10;
	add.f32 	%f14, %f11, %f13;
	add.f32 	%f15, %f12, %f14;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f16;
	shfl.sync.bfly.b32	%r91, %r90, 16, 31, -1;
	mov.b32 	%f17, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f18;
	shfl.sync.bfly.b32	%r93, %r92, 8, 31, -1;
	mov.b32 	%f19, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f20;
	shfl.sync.bfly.b32	%r95, %r94, 4, 31, -1;
	mov.b32 	%f21, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f22;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f23, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f24;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f25, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
$L__tmp2:
	.loc	1 61 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:61:20
	shl.b32 	%r100, %r58, 2;
	mov.u32 	%r101, global_smem;
	add.s32 	%r34, %r101, %r100;
	mov.b32 	%r35, %f26;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r102, %r59, 2;
	add.s32 	%r103, %r101, %r102;
	ld.shared.u32 	%r37, [%r103];
	mov.b32 	%r38, 1124073472;
	// begin inline asm
	div.full.f32 %r54, %r37, %r38;
	// end inline asm
	// begin inline asm
	div.full.f32 %r39, %r35, %r38;
	// end inline asm
	mov.b32 	%f27, %r39;
	.loc	1 62 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:62:20
	sub.f32 	%f28, %f9, %f27;
	sub.f32 	%f29, %f10, %f27;
	sub.f32 	%f30, %f11, %f27;
	sub.f32 	%f31, %f12, %f27;
	.loc	1 63 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:63:20
	mul.f32 	%f32, %f29, %f29;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f33, %f28, %f28, %f32;
	fma.rn.f32 	%f34, %f30, %f30, %f33;
	fma.rn.f32 	%f35, %f31, %f31, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f36;
	shfl.sync.bfly.b32	%r105, %r104, 16, 31, -1;
	mov.b32 	%f37, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f38;
	shfl.sync.bfly.b32	%r107, %r106, 8, 31, -1;
	mov.b32 	%f39, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f40;
	shfl.sync.bfly.b32	%r109, %r108, 4, 31, -1;
	mov.b32 	%f41, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f42;
	shfl.sync.bfly.b32	%r111, %r110, 2, 31, -1;
	mov.b32 	%f43, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f44;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f45, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
$L__tmp4:
	.loc	1 71 28                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:71:28
	bar.sync 	0;
	mov.b32 	%r43, %f46;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	.loc	1 68 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:68:20
	ld.shared.u32 	%r47, [%r103];
	.loc	1 66 29                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:66:29
	bar.sync 	0;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r55, [%r103];
	.loc	1 68 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:68:20
	// begin inline asm
	div.full.f32 %r46, %r47, %r38;
	// end inline asm
	mov.b32 	%f47, %r46;
	.loc	1 70 20                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:70:20
	add.f32 	%f48, %f47, 0f3727C5AC;
	.loc	1 71 28                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:71:28
	rsqrt.approx.ftz.f32 	%f49, %f48;
	.loc	1 24 23                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:24:23
	or.b32  	%r114, %r56, %r59;
	.loc	1 25 21                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:25:21
	setp.lt.s32 	%p31, %r114, 128;
	.loc	1 72 25                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:72:25
	add.s64 	%rd5, %rd13, %rd17;
	.loc	1 72 46                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:72:46
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r49, %r50, %r51, %r52 };
	// end inline asm
	.loc	1 73 25                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:73:25
	mul.wide.s32 	%rd21, %r114, 4;
	add.s64 	%rd6, %rd16, %rd21;
	.loc	1 73 37                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:73:37
	and.b32  	%r115, %r57, 248;
	setp.eq.s32 	%p32, %r115, 0;
	mov.b32 	%r53, %f49;
	and.pred  	%p25, %p32, %p31;
	// begin inline asm
	@%p25 st.global.b32 [ %rd6 + 0 ], { %r53 };
	// end inline asm
	.loc	1 74 25                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:74:25
	add.s64 	%rd7, %rd14, %rd21;
	.loc	1 74 37                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:74:37
	// begin inline asm
	@%p25 st.global.b32 [ %rd7 + 0 ], { %r54 };
	// end inline asm
	.loc	1 75 25                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:75:25
	add.s64 	%rd8, %rd15, %rd21;
	.loc	1 75 37                         // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:75:37
	// begin inline asm
	@%p25 st.global.b32 [ %rd8 + 0 ], { %r55 };
	// end inline asm
	.loc	1 75 4                          // c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py:75:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3y/c3y3yz5sfk7oz6kcvh2rrfcgq3jb3b42pko7ublpe6cptugbwbcj.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 121
.b8 51
.b8 121
.b8 122
.b8 53
.b8 115
.b8 102
.b8 107
.b8 55
.b8 111
.b8 122
.b8 54
.b8 107
.b8 99
.b8 118
.b8 104
.b8 50
.b8 114
.b8 114
.b8 102
.b8 99
.b8 103
.b8 113
.b8 51
.b8 106
.b8 98
.b8 51
.b8 98
.b8 52
.b8 50
.b8 112
.b8 107
.b8 111
.b8 55
.b8 117
.b8 98
.b8 108
.b8 112
.b8 101
.b8 54
.b8 99
.b8 112
.b8 116
.b8 117
.b8 103
.b8 98
.b8 119
.b8 98
.b8 99
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 121
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 66                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
