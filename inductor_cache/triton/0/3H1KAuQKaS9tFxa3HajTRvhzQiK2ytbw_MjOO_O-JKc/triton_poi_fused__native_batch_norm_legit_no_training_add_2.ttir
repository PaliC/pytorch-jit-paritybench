#loc = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0), %arg8: i32 loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":19:0)) attributes {noinline = false} {
    %c2981888_i32 = arith.constant 2981888 : i32 loc(#loc1)
    %c728_i32 = arith.constant 728 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1024x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<1024x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1024x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<728> : tensor<1024x1xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = tt.get_program_id x : i32 loc(#loc3)
    %2 = arith.muli %1, %c1024_i32 : i32 loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc5)
    %4 = tt.expand_dims %3 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc(#loc6)
    %5 = tt.splat %2 : i32 -> tensor<1024x1xi32> loc(#loc7)
    %6 = arith.addi %5, %4 : tensor<1024x1xi32> loc(#loc7)
    %7 = arith.cmpi slt, %6, %cst_2 : tensor<1024x1xi32> loc(#loc8)
    %8 = arith.remsi %0, %c4096_i32 : i32 loc(#loc9)
    %9 = arith.divsi %0, %c4096_i32 : i32 loc(#loc10)
    %10 = arith.muli %0, %c728_i32 : i32 loc(#loc11)
    %11 = tt.splat %10 : i32 -> tensor<1024x1xi32> loc(#loc12)
    %12 = arith.addi %6, %11 : tensor<1024x1xi32> loc(#loc12)
    %13 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %12 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc13)
    %15 = tt.load %14, %7 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %12 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc15)
    %18 = tt.load %17, %7 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %6 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc17)
    %21 = tt.load %20, %7 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>> loc(#loc18)
    %22 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc19)
    %23 = tt.addptr %22, %6 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc19)
    %24 = tt.load %23, %7 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>> loc(#loc20)
    %25 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc21)
    %26 = tt.addptr %25, %6 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc21)
    %27 = tt.load %26, %7 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>> loc(#loc22)
    %28 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc23)
    %29 = tt.addptr %28, %6 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc23)
    %30 = tt.load %29, %7 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>> loc(#loc24)
    %31 = arith.subf %18, %21 : tensor<1024x1xf32> loc(#loc25)
    %32 = arith.addf %24, %cst_1 : tensor<1024x1xf32> loc(#loc26)
    %33 = tt.extern_elementwise %32 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1024x1xf32>) -> tensor<1024x1xf32> loc(#loc27)
    %34 = arith.divf %cst, %33 : tensor<1024x1xf32> loc(#loc28)
    %35 = arith.mulf %31, %34 : tensor<1024x1xf32> loc(#loc29)
    %36 = arith.mulf %35, %27 : tensor<1024x1xf32> loc(#loc30)
    %37 = arith.addf %36, %30 : tensor<1024x1xf32> loc(#loc31)
    %38 = arith.addf %15, %37 : tensor<1024x1xf32> loc(#loc32)
    %39 = arith.muli %6, %cst_0 : tensor<1024x1xi32> loc(#loc33)
    %40 = tt.splat %8 : i32 -> tensor<1024x1xi32> loc(#loc34)
    %41 = arith.addi %40, %39 : tensor<1024x1xi32> loc(#loc34)
    %42 = arith.muli %9, %c2981888_i32 : i32 loc(#loc35)
    %43 = tt.splat %42 : i32 -> tensor<1024x1xi32> loc(#loc36)
    %44 = arith.addi %41, %43 : tensor<1024x1xi32> loc(#loc36)
    %45 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc37)
    %46 = tt.addptr %45, %44 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc37)
    tt.store %46, %38, %7 : tensor<1024x1x!tt.ptr<f32>> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":22:28)
#loc3 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":25:28)
#loc4 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":25:33)
#loc5 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":26:36)
#loc6 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":26:44)
#loc7 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":26:23)
#loc8 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":27:21)
#loc9 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":30:19)
#loc10 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":31:19)
#loc11 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":32:39)
#loc12 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":32:35)
#loc13 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":32:30)
#loc14 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":32:44)
#loc15 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":33:30)
#loc16 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":33:44)
#loc17 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":34:30)
#loc18 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":34:35)
#loc19 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":35:30)
#loc20 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":35:35)
#loc21 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":36:31)
#loc22 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":36:36)
#loc23 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":37:31)
#loc24 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":37:36)
#loc25 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":38:18)
#loc26 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":40:18)
#loc27 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":41:26)
#loc28 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":43:18)
#loc29 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":46:19)
#loc30 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":47:20)
#loc31 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":48:20)
#loc32 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":49:19)
#loc33 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":50:35)
#loc34 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":50:30)
#loc35 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":50:48)
#loc36 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":50:40)
#loc37 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":50:25)
#loc38 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":50:60)
#loc39 = loc("inductor_cache/vm/cvmth3ygrudsybzjvovx35umxdxag2qkqxc65wc4xawnxrgtzpmk.py":50:4)
