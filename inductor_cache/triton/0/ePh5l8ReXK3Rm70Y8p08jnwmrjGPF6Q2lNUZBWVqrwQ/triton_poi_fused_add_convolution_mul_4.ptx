//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_mul_4 // -- Begin function triton_poi_fused_add_convolution_mul_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_mul_4
.visible .entry triton_poi_fused_add_convolution_mul_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_4_param_5,
	.param .u32 triton_poi_fused_add_convolution_mul_4_param_6,
	.param .u32 triton_poi_fused_add_convolution_mul_4_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<83>;
	.reg .b32 	%r<272>;
	.reg .f32 	%f<99>;
	.reg .b64 	%rd<36>;
	.loc	1 19 0                          // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:19:0

// %bb.0:
	ld.param.u64 	%rd19, [triton_poi_fused_add_convolution_mul_4_param_0];
	ld.param.u64 	%rd20, [triton_poi_fused_add_convolution_mul_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:22:33
	shl.b32 	%r197, %r1, 8;
	ld.param.u64 	%rd21, [triton_poi_fused_add_convolution_mul_4_param_2];
	.loc	1 23 44                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:23:44
	mov.u32 	%r198, %tid.x;
	ld.param.u64 	%rd22, [triton_poi_fused_add_convolution_mul_4_param_3];
	ld.param.u64 	%rd23, [triton_poi_fused_add_convolution_mul_4_param_4];
	bfe.u32 	%r200, %r198, 2, 6;
	ld.param.u64 	%rd24, [triton_poi_fused_add_convolution_mul_4_param_5];
	shl.b32 	%r201, %r198, 2;
	and.b32  	%r202, %r201, 12;
	and.b32  	%r203, %r201, 252;
	and.b32  	%r204, %r198, 255;
	.loc	1 23 23                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:23:23
	or.b32  	%r205, %r197, %r200;
	or.b32  	%r206, %r197, %r203;
	or.b32  	%r207, %r197, %r204;
	.loc	1 25 28                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:25:33
	shl.b32 	%r208, %r2, 4;
	.loc	1 26 44                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:26:44
	bfe.u32 	%r209, %r198, 6, 2;
	.loc	1 26 23                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:26:23
	or.b32  	%r210, %r208, %r202;
	or.b32  	%r211, %r208, %r209;
	or.b32  	%r212, %r211, 4;
	or.b32  	%r213, %r211, 8;
	or.b32  	%r214, %r211, 12;
	.loc	1 27 21                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:27:21
	setp.lt.s32 	%p1, %r210, 16;
	setp.lt.s32 	%p21, %r211, 16;
	setp.lt.s32 	%p22, %r212, 16;
	setp.lt.s32 	%p23, %r213, 16;
	setp.lt.s32 	%p24, %r214, 16;
	.loc	1 31 19                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:31:19
	bfe.s32 	%r215, %r1, 23, 1;
	shr.u32 	%r216, %r215, 23;
	add.s32 	%r217, %r206, %r216;
	.loc	1 30 19                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:30:19
	and.b32  	%r218, %r217, -512;
	sub.s32 	%r219, %r206, %r218;
	.loc	1 31 19                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:31:19
	add.s32 	%r220, %r207, %r216;
	shr.s32 	%r221, %r220, 9;
	.loc	1 30 19                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:30:19
	and.b32  	%r222, %r220, -512;
	sub.s32 	%r223, %r207, %r222;
	.loc	1 23 23                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:23:23
	shl.b32 	%r224, %r205, 4;
	.loc	1 32 35                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:32:35
	add.s32 	%r225, %r210, %r224;
	add.s32 	%r226, %r225, 1024;
	add.s32 	%r227, %r225, 2048;
	add.s32 	%r228, %r225, 3072;
	.loc	1 32 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:32:30
	mul.wide.s32 	%rd25, %r225, 4;
	add.s64 	%rd1, %rd19, %rd25;
	mul.wide.s32 	%rd26, %r226, 4;
	add.s64 	%rd2, %rd19, %rd26;
	mul.wide.s32 	%rd27, %r227, 4;
	add.s64 	%rd3, %rd19, %rd27;
	mul.wide.s32 	%rd28, %r228, 4;
	add.s64 	%rd4, %rd19, %rd28;
	.loc	1 32 43                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:32:43
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	and.b32  	%r229, %r201, 1020;
	shl.b32 	%r230, %r198, 4;
	and.b32  	%r231, %r230, 1008;
	and.b32  	%r232, %r230, 4080;
	and.b32  	%r233, %r198, 252;
	mov.u32 	%r234, global_smem;
	add.s32 	%r235, %r234, %r233;
	shl.b32 	%r236, %r229, 2;
	add.s32 	%r19, %r235, %r236;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r19, 4;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r19, 8;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r19, 12;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	or.b32  	%r237, %r229, 1024;
	shr.u32 	%r238, %r237, 2;
	and.b32  	%r239, %r238, 508;
	add.s32 	%r240, %r234, %r239;
	add.s32 	%r241, %r240, %r236;
	add.s32 	%r27, %r241, 4096;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r241, 4100;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r241, 4104;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	add.s32 	%r33, %r241, 4108;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	or.b32  	%r242, %r229, 2048;
	shr.u32 	%r243, %r242, 2;
	and.b32  	%r244, %r243, 764;
	add.s32 	%r245, %r234, %r244;
	add.s32 	%r246, %r245, %r236;
	add.s32 	%r35, %r246, 8192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r246, 8196;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r246, 8200;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r246, 8204;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	or.b32  	%r247, %r229, 3072;
	shr.u32 	%r248, %r247, 2;
	and.b32  	%r249, %r248, 1020;
	add.s32 	%r250, %r234, %r249;
	add.s32 	%r251, %r250, %r236;
	add.s32 	%r43, %r251, 12288;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r251, 12292;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r251, 12296;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r251, 12300;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r252, %r232, 2;
	add.s32 	%r253, %r234, %r252;
	shl.b32 	%r254, %r232, 2;
	add.s32 	%r149, %r253, %r254;
	ld.shared.f32 	%f1, [%r149];
	add.s32 	%r151, %r149, 4;
	ld.shared.f32 	%f2, [%r149+4];
	add.s32 	%r153, %r149, 8;
	ld.shared.f32 	%f3, [%r149+8];
	add.s32 	%r155, %r149, 12;
	ld.shared.f32 	%f4, [%r149+12];
	add.s32 	%r157, %r149, 16;
	ld.shared.f32 	%f5, [%r149+16];
	add.s32 	%r159, %r149, 20;
	ld.shared.f32 	%f6, [%r149+20];
	add.s32 	%r161, %r149, 24;
	ld.shared.f32 	%f7, [%r149+24];
	add.s32 	%r163, %r149, 28;
	ld.shared.f32 	%f8, [%r149+28];
	add.s32 	%r165, %r149, 32;
	ld.shared.f32 	%f9, [%r149+32];
	add.s32 	%r167, %r149, 36;
	ld.shared.f32 	%f10, [%r149+36];
	add.s32 	%r169, %r149, 40;
	ld.shared.f32 	%f11, [%r149+40];
	add.s32 	%r171, %r149, 44;
	ld.shared.f32 	%f12, [%r149+44];
	add.s32 	%r173, %r149, 48;
	ld.shared.f32 	%f13, [%r149+48];
	add.s32 	%r175, %r149, 52;
	ld.shared.f32 	%f14, [%r149+52];
	add.s32 	%r177, %r149, 56;
	ld.shared.f32 	%f15, [%r149+56];
	add.s32 	%r179, %r149, 60;
	ld.shared.f32 	%f16, [%r149+60];
	.loc	1 33 39                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:39
	shl.b32 	%r255, %r211, 9;
	shl.b32 	%r256, %r212, 9;
	shl.b32 	%r257, %r213, 9;
	shl.b32 	%r258, %r214, 9;
	.loc	1 33 49                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:49
	shl.b32 	%r259, %r217, 4;
	and.b32  	%r260, %r259, -8192;
	.loc	1 33 35                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:35
	add.s32 	%r261, %r260, %r219;
	.loc	1 33 44                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:44
	add.s32 	%r262, %r261, %r255;
	add.s32 	%r263, %r261, %r256;
	add.s32 	%r264, %r261, %r257;
	add.s32 	%r265, %r261, %r258;
	.loc	1 33 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:30
	mul.wide.s32 	%rd29, %r262, 4;
	add.s64 	%rd5, %rd20, %rd29;
	mul.wide.s32 	%rd30, %r263, 4;
	add.s64 	%rd6, %rd20, %rd30;
	mul.wide.s32 	%rd31, %r264, 4;
	add.s64 	%rd7, %rd20, %rd31;
	mul.wide.s32 	%rd32, %r265, 4;
	add.s64 	%rd8, %rd20, %rd32;
	.loc	1 33 54                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:33:54
	// begin inline asm
	mov.u32 %r68, 0x0;
	mov.u32 %r70, 0x0;
	mov.u32 %r72, 0x0;
	mov.u32 %r74, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r68, %r70, %r72, %r74 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r76, 0x0;
	mov.u32 %r78, 0x0;
	mov.u32 %r80, 0x0;
	mov.u32 %r82, 0x0;
	@%p22 ld.global.L1::evict_last.v4.b32 { %r76, %r78, %r80, %r82 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r84, 0x0;
	mov.u32 %r86, 0x0;
	mov.u32 %r88, 0x0;
	mov.u32 %r90, 0x0;
	@%p23 ld.global.L1::evict_last.v4.b32 { %r84, %r86, %r88, %r90 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r92, 0x0;
	mov.u32 %r94, 0x0;
	mov.u32 %r96, 0x0;
	mov.u32 %r98, 0x0;
	@%p24 ld.global.L1::evict_last.v4.b32 { %r92, %r94, %r96, %r98 }, [ %rd8 + 0 ];
	// end inline asm
	bar.sync 	0;
	or.b32  	%r266, %r231, %r209;
	add.s32 	%r267, %r234, %r231;
	shl.b32 	%r268, %r266, 2;
	add.s32 	%r67, %r267, %r268;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r77, %r67, 20;
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r70;
	// end inline asm
	add.s32 	%r79, %r67, 40;
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r72;
	// end inline asm
	add.s32 	%r81, %r67, 60;
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r269, %r234, %r229;
	add.s32 	%r270, %r269, %r236;
	ld.shared.f32 	%f17, [%r270];
	ld.shared.f32 	%f18, [%r270+4];
	ld.shared.f32 	%f19, [%r270+8];
	ld.shared.f32 	%f20, [%r270+12];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r76;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f21, [%r270];
	ld.shared.f32 	%f22, [%r270+4];
	ld.shared.f32 	%f23, [%r270+8];
	ld.shared.f32 	%f24, [%r270+12];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r84;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r86;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r88;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r90;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f25, [%r270];
	ld.shared.f32 	%f26, [%r270+4];
	ld.shared.f32 	%f27, [%r270+8];
	ld.shared.f32 	%f28, [%r270+12];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r92;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r94;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r96;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r98;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f29, [%r270];
	ld.shared.f32 	%f30, [%r270+4];
	ld.shared.f32 	%f31, [%r270+8];
	ld.shared.f32 	%f32, [%r270+12];
	.loc	1 34 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:34:30
	add.s64 	%rd9, %rd21, %rd29;
	add.s64 	%rd10, %rd21, %rd30;
	add.s64 	%rd11, %rd21, %rd31;
	add.s64 	%rd12, %rd21, %rd32;
	.loc	1 34 54                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:34:54
	// begin inline asm
	mov.u32 %r116, 0x0;
	mov.u32 %r118, 0x0;
	mov.u32 %r120, 0x0;
	mov.u32 %r122, 0x0;
	@%p21 ld.global.L1::evict_last.v4.b32 { %r116, %r118, %r120, %r122 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r124, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r128, 0x0;
	mov.u32 %r130, 0x0;
	@%p22 ld.global.L1::evict_last.v4.b32 { %r124, %r126, %r128, %r130 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r132, 0x0;
	mov.u32 %r134, 0x0;
	mov.u32 %r136, 0x0;
	mov.u32 %r138, 0x0;
	@%p23 ld.global.L1::evict_last.v4.b32 { %r132, %r134, %r136, %r138 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r140, 0x0;
	mov.u32 %r142, 0x0;
	mov.u32 %r144, 0x0;
	mov.u32 %r146, 0x0;
	@%p24 ld.global.L1::evict_last.v4.b32 { %r140, %r142, %r144, %r146 }, [ %rd12 + 0 ];
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r116;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r118;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r120;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r122;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f33, [%r270];
	ld.shared.f32 	%f34, [%r270+4];
	ld.shared.f32 	%f35, [%r270+8];
	ld.shared.f32 	%f36, [%r270+12];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r124;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r126;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r128;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r130;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f37, [%r270];
	ld.shared.f32 	%f38, [%r270+4];
	ld.shared.f32 	%f39, [%r270+8];
	ld.shared.f32 	%f40, [%r270+12];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r132;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r134;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r136;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r138;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f41, [%r270];
	ld.shared.f32 	%f42, [%r270+4];
	ld.shared.f32 	%f43, [%r270+8];
	ld.shared.f32 	%f44, [%r270+12];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r67 + 0 ], %r140;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r77 + 0 ], %r142;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r79 + 0 ], %r144;
	// end inline asm
	// begin inline asm
	@%p5 st.shared.b32 [ %r81 + 0 ], %r146;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f45, [%r270];
	ld.shared.f32 	%f46, [%r270+4];
	ld.shared.f32 	%f47, [%r270+8];
	ld.shared.f32 	%f48, [%r270+12];
	.loc	1 35 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:35:30
	mul.wide.s32 	%rd33, %r223, 4;
	add.s64 	%rd13, %rd22, %rd33;
	.loc	1 35 35                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:35:35
	// begin inline asm
	mov.u32 %r147, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r147 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f49, %r147;
	.loc	1 36 36                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:36:36
	shl.b32 	%r271, %r221, 2;
	.loc	1 36 30                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:36:30
	mul.wide.s32 	%rd34, %r271, 4;
	add.s64 	%rd35, %rd23, %rd34;
	add.s64 	%rd14, %rd35, 12;
	.loc	1 36 41                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:36:41
	// begin inline asm
	mov.u32 %r148, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r148 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r148;
	.loc	1 37 18                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:37:18
	add.f32 	%f51, %f33, %f49;
	add.f32 	%f52, %f34, %f49;
	add.f32 	%f53, %f35, %f49;
	add.f32 	%f54, %f36, %f49;
	add.f32 	%f55, %f37, %f49;
	add.f32 	%f56, %f38, %f49;
	add.f32 	%f57, %f39, %f49;
	add.f32 	%f58, %f40, %f49;
	add.f32 	%f59, %f41, %f49;
	add.f32 	%f60, %f42, %f49;
	add.f32 	%f61, %f43, %f49;
	add.f32 	%f62, %f44, %f49;
	add.f32 	%f63, %f45, %f49;
	add.f32 	%f64, %f46, %f49;
	add.f32 	%f65, %f47, %f49;
	add.f32 	%f66, %f48, %f49;
	.loc	1 39 18                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:39:18
	fma.rn.f32 	%f67, %f51, %f50, %f17;
	fma.rn.f32 	%f68, %f52, %f50, %f18;
	fma.rn.f32 	%f69, %f53, %f50, %f19;
	fma.rn.f32 	%f70, %f54, %f50, %f20;
	fma.rn.f32 	%f71, %f55, %f50, %f21;
	fma.rn.f32 	%f72, %f56, %f50, %f22;
	fma.rn.f32 	%f73, %f57, %f50, %f23;
	fma.rn.f32 	%f74, %f58, %f50, %f24;
	fma.rn.f32 	%f75, %f59, %f50, %f25;
	fma.rn.f32 	%f76, %f60, %f50, %f26;
	fma.rn.f32 	%f77, %f61, %f50, %f27;
	fma.rn.f32 	%f78, %f62, %f50, %f28;
	fma.rn.f32 	%f79, %f63, %f50, %f29;
	fma.rn.f32 	%f80, %f64, %f50, %f30;
	fma.rn.f32 	%f81, %f65, %f50, %f31;
	fma.rn.f32 	%f82, %f66, %f50, %f32;
	.loc	1 40 18                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:40:18
	add.f32 	%f83, %f1, %f67;
	add.f32 	%f84, %f2, %f68;
	add.f32 	%f85, %f3, %f69;
	add.f32 	%f86, %f4, %f70;
	add.f32 	%f87, %f5, %f71;
	add.f32 	%f88, %f6, %f72;
	add.f32 	%f89, %f7, %f73;
	add.f32 	%f90, %f8, %f74;
	add.f32 	%f91, %f9, %f75;
	add.f32 	%f92, %f10, %f76;
	add.f32 	%f93, %f11, %f77;
	add.f32 	%f94, %f12, %f78;
	add.f32 	%f95, %f13, %f79;
	add.f32 	%f96, %f14, %f80;
	add.f32 	%f97, %f15, %f81;
	add.f32 	%f98, %f16, %f82;
	.loc	1 41 25                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:41:25
	add.s64 	%rd15, %rd24, %rd25;
	add.s64 	%rd16, %rd24, %rd26;
	add.s64 	%rd17, %rd24, %rd27;
	add.s64 	%rd18, %rd24, %rd28;
	.loc	1 41 44                         // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:41:44
	bar.sync 	0;
	mov.b32 	%r150, %f83;
	// begin inline asm
	@%p5 st.shared.b32 [ %r149 + 0 ], %r150;
	// end inline asm
	mov.b32 	%r152, %f84;
	// begin inline asm
	@%p5 st.shared.b32 [ %r151 + 0 ], %r152;
	// end inline asm
	mov.b32 	%r154, %f85;
	// begin inline asm
	@%p5 st.shared.b32 [ %r153 + 0 ], %r154;
	// end inline asm
	mov.b32 	%r156, %f86;
	// begin inline asm
	@%p5 st.shared.b32 [ %r155 + 0 ], %r156;
	// end inline asm
	mov.b32 	%r158, %f87;
	// begin inline asm
	@%p5 st.shared.b32 [ %r157 + 0 ], %r158;
	// end inline asm
	mov.b32 	%r160, %f88;
	// begin inline asm
	@%p5 st.shared.b32 [ %r159 + 0 ], %r160;
	// end inline asm
	mov.b32 	%r162, %f89;
	// begin inline asm
	@%p5 st.shared.b32 [ %r161 + 0 ], %r162;
	// end inline asm
	mov.b32 	%r164, %f90;
	// begin inline asm
	@%p5 st.shared.b32 [ %r163 + 0 ], %r164;
	// end inline asm
	mov.b32 	%r166, %f91;
	// begin inline asm
	@%p5 st.shared.b32 [ %r165 + 0 ], %r166;
	// end inline asm
	mov.b32 	%r168, %f92;
	// begin inline asm
	@%p5 st.shared.b32 [ %r167 + 0 ], %r168;
	// end inline asm
	mov.b32 	%r170, %f93;
	// begin inline asm
	@%p5 st.shared.b32 [ %r169 + 0 ], %r170;
	// end inline asm
	mov.b32 	%r172, %f94;
	// begin inline asm
	@%p5 st.shared.b32 [ %r171 + 0 ], %r172;
	// end inline asm
	mov.b32 	%r174, %f95;
	// begin inline asm
	@%p5 st.shared.b32 [ %r173 + 0 ], %r174;
	// end inline asm
	mov.b32 	%r176, %f96;
	// begin inline asm
	@%p5 st.shared.b32 [ %r175 + 0 ], %r176;
	// end inline asm
	mov.b32 	%r178, %f97;
	// begin inline asm
	@%p5 st.shared.b32 [ %r177 + 0 ], %r178;
	// end inline asm
	mov.b32 	%r180, %f98;
	// begin inline asm
	@%p5 st.shared.b32 [ %r179 + 0 ], %r180;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r181, [%r19];
	ld.shared.u32 	%r182, [%r19+4];
	ld.shared.u32 	%r183, [%r19+8];
	ld.shared.u32 	%r184, [%r19+12];
	ld.shared.u32 	%r185, [%r241+4096];
	ld.shared.u32 	%r186, [%r241+4100];
	ld.shared.u32 	%r187, [%r241+4104];
	ld.shared.u32 	%r188, [%r241+4108];
	ld.shared.u32 	%r189, [%r246+8192];
	ld.shared.u32 	%r190, [%r246+8196];
	ld.shared.u32 	%r191, [%r246+8200];
	ld.shared.u32 	%r192, [%r246+8204];
	ld.shared.u32 	%r193, [%r251+12288];
	ld.shared.u32 	%r194, [%r251+12292];
	ld.shared.u32 	%r195, [%r251+12296];
	ld.shared.u32 	%r196, [%r251+12300];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd15 + 0 ], { %r181, %r182, %r183, %r184 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd16 + 0 ], { %r185, %r186, %r187, %r188 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r189, %r190, %r191, %r192 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd18 + 0 ], { %r193, %r194, %r195, %r196 };
	// end inline asm
	.loc	1 41 4                          // cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ev/cevbcvbo2pygphozyqc2m3xhua7bzw3vwrslzyas422wu5ngoh2f.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 118
.b8 98
.b8 99
.b8 118
.b8 98
.b8 111
.b8 50
.b8 112
.b8 121
.b8 103
.b8 112
.b8 104
.b8 111
.b8 122
.b8 121
.b8 113
.b8 99
.b8 50
.b8 109
.b8 51
.b8 120
.b8 104
.b8 117
.b8 97
.b8 55
.b8 98
.b8 122
.b8 119
.b8 51
.b8 118
.b8 119
.b8 114
.b8 115
.b8 108
.b8 122
.b8 121
.b8 97
.b8 115
.b8 52
.b8 50
.b8 50
.b8 119
.b8 117
.b8 53
.b8 110
.b8 103
.b8 111
.b8 104
.b8 50
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 118
.b8 0
	}
	.section	.debug_macinfo	{	}
