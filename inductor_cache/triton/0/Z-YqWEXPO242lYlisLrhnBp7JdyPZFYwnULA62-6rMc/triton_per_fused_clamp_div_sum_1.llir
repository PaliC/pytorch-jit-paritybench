; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_clamp_div_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = icmp slt i32 %7, 64, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %.frozen = freeze i32 %7, !dbg !13
  %11 = sdiv i32 %.frozen, 4, !dbg !13
  %12 = mul i32 %11, 4, !dbg !14
  %.decomposed = sub i32 %.frozen, %12, !dbg !14
  %13 = shl i32 %11, 4, !dbg !15
  %14 = or disjoint i32 %13, %10, !dbg !16
  %15 = sext i32 %14 to i64, !dbg !17
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !17
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %8, i32 0, i1 %8) #3, !dbg !18
  %18 = bitcast i32 %17 to float, !dbg !18
  %19 = shl nsw i32 %.decomposed, 4, !dbg !19
  %20 = or disjoint i32 %19, %10, !dbg !20
  %21 = sdiv i32 %7, 16, !dbg !21
  %22 = shl i32 %21, 6, !dbg !22
  %23 = add i32 %20, %22, !dbg !23
  %24 = sext i32 %23 to i64, !dbg !24
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !24
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %8, i32 0, i1 %8) #3, !dbg !25
  %27 = bitcast i32 %26 to float, !dbg !25
  %28 = sext i32 %11 to i64, !dbg !26
  %29 = getelementptr float, ptr addrspace(1) %3, i64 %28, !dbg !26
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %8) #3, !dbg !27
  %31 = bitcast i32 %30 to float, !dbg !27
  %32 = fmul float %18, %27, !dbg !28
  %33 = select i1 %8, float %32, float 0.000000e+00, !dbg !29
  %34 = bitcast float %33 to i32, !dbg !30
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 8, i32 31), !dbg !30
  %36 = bitcast i32 %35 to float, !dbg !30
  %37 = fadd float %33, %36, !dbg !34
  %38 = bitcast float %37 to i32, !dbg !30
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 4, i32 31), !dbg !30
  %40 = bitcast i32 %39 to float, !dbg !30
  %41 = fadd float %37, %40, !dbg !34
  %42 = bitcast float %41 to i32, !dbg !30
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 2, i32 31), !dbg !30
  %44 = bitcast i32 %43 to float, !dbg !30
  %45 = fadd float %41, %44, !dbg !34
  %46 = bitcast float %45 to i32, !dbg !30
  %47 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %46, i32 1, i32 31), !dbg !30
  %48 = bitcast i32 %47 to float, !dbg !30
  %49 = fadd float %45, %48, !dbg !34
  %50 = fcmp ogt float %31, 0x3EB0C6F7A0000000, !dbg !36
  %51 = fcmp uno float %31, 0.000000e+00, !dbg !40
  %52 = or i1 %50, %51, !dbg !41
  %53 = select i1 %52, float %31, float 0x3EB0C6F7A0000000, !dbg !42
  %54 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %49, float %53) #3, !dbg !43
  tail call void @llvm.nvvm.barrier0(), !dbg !44
  %55 = sext i32 %7 to i64, !dbg !45
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !45
  %57 = and i32 %9, 63, !dbg !46
  %58 = icmp eq i32 %57, 0, !dbg !46
  %59 = bitcast float %54 to i32, !dbg !46
  %60 = and i1 %58, %8, !dbg !46
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %59, ptr addrspace(1) %56, i1 %60) #3, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py", directory: "inductor_cache/zl")
!4 = !{ptr @triton_per_fused_clamp_div_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_clamp_div_sum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_clamp_div_sum_1", linkageName: "triton_per_fused_clamp_div_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 30, column: 19, scope: !7)
!14 = !DILocation(line: 31, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 38, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 30, scope: !7)
!18 = !DILocation(line: 33, column: 43, scope: !7)
!19 = !DILocation(line: 34, column: 38, scope: !7)
!20 = !DILocation(line: 34, column: 35, scope: !7)
!21 = !DILocation(line: 34, column: 53, scope: !7)
!22 = !DILocation(line: 34, column: 47, scope: !7)
!23 = !DILocation(line: 34, column: 43, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 58, scope: !7)
!26 = !DILocation(line: 35, column: 30, scope: !7)
!27 = !DILocation(line: 35, column: 35, scope: !7)
!28 = !DILocation(line: 36, column: 18, scope: !7)
!29 = !DILocation(line: 38, column: 33, scope: !7)
!30 = !DILocation(line: 267, column: 36, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!33 = !DILocation(line: 39, column: 24, scope: !7)
!34 = !DILocation(line: 256, column: 15, scope: !35, inlinedAt: !33)
!35 = distinct !DILexicalBlockFile(scope: !31, file: !32, discriminator: 0)
!36 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 41, column: 40, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !39)
!43 = !DILocation(line: 42, column: 19, scope: !7)
!44 = !DILocation(line: 43, column: 4, scope: !7)
!45 = !DILocation(line: 44, column: 28, scope: !7)
!46 = !DILocation(line: 44, column: 40, scope: !7)
!47 = !DILocation(line: 44, column: 4, scope: !7)
