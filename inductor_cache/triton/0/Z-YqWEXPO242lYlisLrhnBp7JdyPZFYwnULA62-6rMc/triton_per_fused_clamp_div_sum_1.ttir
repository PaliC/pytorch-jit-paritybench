#loc = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":39:24)
#loc38 = loc(callsite(#loc1 at #loc24))
module {
  tt.func public @triton_per_fused_clamp_div_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.divsi %0, %c4_i32 : i32 loc(#loc6)
    %6 = arith.remsi %0, %c4_i32 : i32 loc(#loc7)
    %7 = arith.muli %5, %c16_i32 : i32 loc(#loc8)
    %8 = tt.splat %7 : i32 -> tensor<1x16xi32> loc(#loc9)
    %9 = arith.addi %4, %8 : tensor<1x16xi32> loc(#loc9)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %9 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc10)
    %12 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc11)
    %13 = tt.load %11, %12, %cst_0 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc11)
    %14 = arith.muli %6, %c16_i32 : i32 loc(#loc12)
    %15 = tt.splat %14 : i32 -> tensor<1x16xi32> loc(#loc13)
    %16 = arith.addi %4, %15 : tensor<1x16xi32> loc(#loc13)
    %17 = arith.divsi %5, %c4_i32 : i32 loc(#loc14)
    %18 = arith.muli %17, %c64_i32 : i32 loc(#loc15)
    %19 = tt.splat %18 : i32 -> tensor<1x16xi32> loc(#loc16)
    %20 = arith.addi %16, %19 : tensor<1x16xi32> loc(#loc16)
    %21 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.addptr %21, %20 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc17)
    %23 = tt.load %22, %12, %cst_0 : tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.addptr %arg3, %5 : !tt.ptr<f32>, i32 loc(#loc19)
    %25 = tt.splat %24 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %26 = tt.load %25, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %27 = arith.mulf %13, %23 : tensor<1x16xf32> loc(#loc21)
    %28 = arith.select %12, %27, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc22)
    %29 = "tt.reduce"(%28) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc24)), %arg7: f32 loc(callsite(#loc1 at #loc24))):
      %38 = arith.addf %arg6, %arg7 : f32 loc(#loc44)
      tt.reduce.return %38 : f32 loc(#loc37)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc37)
    %30 = tt.expand_dims %29 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc26)
    %31 = arith.cmpf ogt, %26, %cst : tensor<1x1xf32> loc(#loc40)
    %32 = arith.cmpf une, %26, %26 : tensor<1x1xf32> loc(#loc41)
    %33 = arith.ori %31, %32 : tensor<1x1xi1> loc(#loc42)
    %34 = arith.select %33, %26, %cst : tensor<1x1xi1>, tensor<1x1xf32> loc(#loc43)
    %35 = arith.divf %30, %34 : tensor<1x1xf32> loc(#loc32)
    gpu.barrier loc(#loc33)
    %36 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc34)
    %37 = tt.splat %36 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc34)
    tt.store %37, %35, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc35)
    tt.return loc(#loc36)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":23:28)
#loc3 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":25:21)
#loc4 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":26:26)
#loc5 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":26:34)
#loc6 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":30:19)
#loc7 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":31:19)
#loc8 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":33:38)
#loc9 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":33:35)
#loc10 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":33:30)
#loc11 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":33:43)
#loc12 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":34:38)
#loc13 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":34:35)
#loc14 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":34:53)
#loc15 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":34:47)
#loc16 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":34:43)
#loc17 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":34:30)
#loc18 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":34:58)
#loc19 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":35:30)
#loc20 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":35:35)
#loc21 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":36:18)
#loc22 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":38:33)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":39:27)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc28 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":41:40)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc32 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":42:19)
#loc33 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":43:4)
#loc34 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":44:28)
#loc35 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":44:40)
#loc36 = loc("inductor_cache/zl/czlqfzia5arnlynlhenq4ocgh6xoiczrlapn3foxznniqprwrzhx.py":44:4)
#loc37 = loc(callsite(#loc23 at #loc24))
#loc39 = loc(callsite(#loc25 at #loc23))
#loc40 = loc(callsite(#loc27 at #loc28))
#loc41 = loc(callsite(#loc29 at #loc28))
#loc42 = loc(callsite(#loc30 at #loc28))
#loc43 = loc(callsite(#loc31 at #loc28))
#loc44 = loc(callsite(#loc39 at #loc24))
