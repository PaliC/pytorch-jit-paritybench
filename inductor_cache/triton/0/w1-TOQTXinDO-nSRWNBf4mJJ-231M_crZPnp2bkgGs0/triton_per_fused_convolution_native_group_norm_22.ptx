//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_convolution_native_group_norm_22 // -- Begin function triton_per_fused_convolution_native_group_norm_22
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_convolution_native_group_norm_22
.visible .entry triton_per_fused_convolution_native_group_norm_22(
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_22_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_22_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_22_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_convolution_native_group_norm_22_param_3,
	.param .u32 triton_per_fused_convolution_native_group_norm_22_param_4,
	.param .u32 triton_per_fused_convolution_native_group_norm_22_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<99>;
	.reg .b32 	%r<329>;
	.reg .f32 	%f<114>;
	.reg .b64 	%rd<37>;
	.loc	1 19 0                          // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd27, [triton_per_fused_convolution_native_group_norm_22_param_0];
	ld.param.u64 	%rd28, [triton_per_fused_convolution_native_group_norm_22_param_1];
$L__tmp0:
	.loc	1 23 28                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:23:33
	shl.b32 	%r166, %r1, 5;
	ld.param.u64 	%rd29, [triton_per_fused_convolution_native_group_norm_22_param_2];
	ld.param.u64 	%rd30, [triton_per_fused_convolution_native_group_norm_22_param_3];
	.loc	1 24 44                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:24:44
	mov.u32 	%r167, %tid.x;
	bfe.u32 	%r168, %r167, 5, 3;
	and.b32  	%r169, %r167, 31;
	.loc	1 24 23                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:24:23
	or.b32  	%r170, %r166, %r168;
	or.b32  	%r171, %r170, 8;
	or.b32  	%r172, %r170, 16;
	or.b32  	%r173, %r170, 24;
	or.b32  	%r174, %r166, %r169;
	.loc	1 25 21                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:25:21
	setp.lt.s32 	%p37, %r174, 128;
	setp.lt.s32 	%p1, %r170, 128;
	setp.lt.s32 	%p6, %r171, 128;
	setp.lt.s32 	%p11, %r172, 128;
	setp.lt.s32 	%p16, %r173, 128;
	.loc	1 26 34                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:26:34
	shl.b32 	%r175, %r167, 2;
	and.b32  	%r176, %r175, 124;
	.loc	1 32 19                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:32:19
	bfe.s32 	%r177, %r1, 26, 1;
	shr.u32 	%r178, %r177, 27;
	add.s32 	%r179, %r174, %r178;
	and.b32  	%r180, %r179, 536870880;
	sub.s32 	%r181, %r174, %r180;
	.loc	1 33 43                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:33:43
	shl.b32 	%r182, %r170, 7;
	shl.b32 	%r183, %r171, 7;
	shl.b32 	%r184, %r172, 7;
	shl.b32 	%r185, %r173, 7;
	.loc	1 33 39                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:33:39
	or.b32  	%r186, %r182, %r176;
	or.b32  	%r187, %r183, %r176;
	or.b32  	%r188, %r184, %r176;
	or.b32  	%r189, %r185, %r176;
	.loc	1 33 34                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:33:34
	mul.wide.s32 	%rd31, %r186, 4;
	add.s64 	%rd1, %rd27, %rd31;
	mul.wide.s32 	%rd32, %r187, 4;
	add.s64 	%rd2, %rd27, %rd32;
	mul.wide.s32 	%rd33, %r188, 4;
	add.s64 	%rd3, %rd27, %rd33;
	mul.wide.s32 	%rd34, %r189, 4;
	add.s64 	%rd4, %rd27, %rd34;
	mov.b32 	%r6, 0;
	.loc	1 33 48                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:33:48
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r41, 0x0;
	@%p1 ld.global.v4.b32 { %r35, %r37, %r39, %r41 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r37, %r6;
	@!%p1 mov.u32 %r39, %r6;
	@!%p1 mov.u32 %r41, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r47, 0x0;
	mov.u32 %r49, 0x0;
	@%p6 ld.global.v4.b32 { %r43, %r45, %r47, %r49 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r43, %r6;
	@!%p6 mov.u32 %r45, %r6;
	@!%p6 mov.u32 %r47, %r6;
	@!%p6 mov.u32 %r49, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r57, 0x0;
	@%p11 ld.global.v4.b32 { %r51, %r53, %r55, %r57 }, [ %rd3 + 0 ];
	@!%p11 mov.u32 %r51, %r6;
	@!%p11 mov.u32 %r53, %r6;
	@!%p11 mov.u32 %r55, %r6;
	@!%p11 mov.u32 %r57, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	mov.u32 %r61, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r65, 0x0;
	@%p16 ld.global.v4.b32 { %r59, %r61, %r63, %r65 }, [ %rd4 + 0 ];
	@!%p16 mov.u32 %r59, %r6;
	@!%p16 mov.u32 %r61, %r6;
	@!%p16 mov.u32 %r63, %r6;
	@!%p16 mov.u32 %r65, %r6;
	// end inline asm
	shl.b32 	%r190, %r167, 7;
	and.b32  	%r191, %r190, 3968;
	or.b32  	%r192, %r191, %r168;
	and.b32  	%r193, %r167, 255;
	shr.u32 	%r194, %r191, 3;
	mov.u32 	%r195, global_smem;
	add.s32 	%r196, %r195, %r194;
	shl.b32 	%r197, %r192, 2;
	add.s32 	%r34, %r196, %r197;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	or.b32  	%r198, %r191, 32;
	shr.u32 	%r199, %r198, 3;
	add.s32 	%r200, %r195, %r199;
	add.s32 	%r201, %r200, %r197;
	add.s32 	%r36, %r201, 128;
	// begin inline asm
	@%p21 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	or.b32  	%r202, %r191, 64;
	shr.u32 	%r203, %r202, 3;
	add.s32 	%r204, %r195, %r203;
	add.s32 	%r205, %r204, %r197;
	add.s32 	%r38, %r205, 256;
	// begin inline asm
	@%p21 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	or.b32  	%r206, %r191, 96;
	shr.u32 	%r207, %r206, 3;
	add.s32 	%r208, %r195, %r207;
	add.s32 	%r209, %r208, %r197;
	add.s32 	%r40, %r209, 384;
	// begin inline asm
	@%p21 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	add.s32 	%r42, %r34, 32;
	// begin inline asm
	@%p21 st.shared.b32 [ %r42 + 0 ], %r43;
	// end inline asm
	add.s32 	%r44, %r201, 160;
	// begin inline asm
	@%p21 st.shared.b32 [ %r44 + 0 ], %r45;
	// end inline asm
	add.s32 	%r46, %r205, 288;
	// begin inline asm
	@%p21 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r209, 416;
	// begin inline asm
	@%p21 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r34, 64;
	// begin inline asm
	@%p21 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r201, 192;
	// begin inline asm
	@%p21 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r205, 320;
	// begin inline asm
	@%p21 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r209, 448;
	// begin inline asm
	@%p21 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r34, 96;
	// begin inline asm
	@%p21 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r201, 224;
	// begin inline asm
	@%p21 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r205, 352;
	// begin inline asm
	@%p21 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r209, 480;
	// begin inline asm
	@%p21 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r210, %r167, 3;
	and.b32  	%r211, %r210, 28;
	add.s32 	%r212, %r195, %r211;
	shl.b32 	%r213, %r193, 2;
	add.s32 	%r214, %r212, %r213;
	ld.shared.f32 	%f1, [%r214];
	or.b32  	%r215, %r193, 256;
	shr.u32 	%r216, %r215, 3;
	and.b32  	%r217, %r216, 60;
	add.s32 	%r218, %r195, %r217;
	add.s32 	%r219, %r218, %r213;
	ld.shared.f32 	%f2, [%r219+1024];
	or.b32  	%r220, %r193, 512;
	shr.u32 	%r221, %r220, 3;
	and.b32  	%r222, %r221, 92;
	add.s32 	%r223, %r195, %r222;
	add.s32 	%r224, %r223, %r213;
	ld.shared.f32 	%f3, [%r224+2048];
	or.b32  	%r225, %r193, 768;
	shr.u32 	%r226, %r225, 3;
	and.b32  	%r227, %r226, 124;
	add.s32 	%r228, %r195, %r227;
	add.s32 	%r229, %r228, %r213;
	ld.shared.f32 	%f4, [%r229+3072];
	or.b32  	%r230, %r193, 1024;
	shr.u32 	%r231, %r230, 3;
	and.b32  	%r232, %r231, 156;
	add.s32 	%r233, %r195, %r232;
	add.s32 	%r234, %r233, %r213;
	ld.shared.f32 	%f5, [%r234+4096];
	or.b32  	%r235, %r193, 1280;
	shr.u32 	%r236, %r235, 3;
	and.b32  	%r237, %r236, 188;
	add.s32 	%r238, %r195, %r237;
	add.s32 	%r239, %r238, %r213;
	ld.shared.f32 	%f6, [%r239+5120];
	or.b32  	%r240, %r193, 1536;
	shr.u32 	%r241, %r240, 3;
	and.b32  	%r242, %r241, 220;
	add.s32 	%r243, %r195, %r242;
	add.s32 	%r244, %r243, %r213;
	ld.shared.f32 	%f7, [%r244+6144];
	or.b32  	%r245, %r193, 1792;
	shr.u32 	%r246, %r245, 3;
	and.b32  	%r247, %r246, 252;
	add.s32 	%r248, %r195, %r247;
	add.s32 	%r249, %r248, %r213;
	ld.shared.f32 	%f8, [%r249+7168];
	or.b32  	%r250, %r193, 2048;
	shr.u32 	%r251, %r250, 3;
	and.b32  	%r252, %r251, 284;
	add.s32 	%r253, %r195, %r252;
	add.s32 	%r254, %r253, %r213;
	ld.shared.f32 	%f9, [%r254+8192];
	or.b32  	%r255, %r193, 2304;
	shr.u32 	%r256, %r255, 3;
	and.b32  	%r257, %r256, 316;
	add.s32 	%r258, %r195, %r257;
	add.s32 	%r259, %r258, %r213;
	ld.shared.f32 	%f10, [%r259+9216];
	or.b32  	%r260, %r193, 2560;
	shr.u32 	%r261, %r260, 3;
	and.b32  	%r262, %r261, 348;
	add.s32 	%r263, %r195, %r262;
	add.s32 	%r264, %r263, %r213;
	ld.shared.f32 	%f11, [%r264+10240];
	or.b32  	%r265, %r193, 2816;
	shr.u32 	%r266, %r265, 3;
	and.b32  	%r267, %r266, 380;
	add.s32 	%r268, %r195, %r267;
	add.s32 	%r269, %r268, %r213;
	ld.shared.f32 	%f12, [%r269+11264];
	or.b32  	%r270, %r193, 3072;
	shr.u32 	%r271, %r270, 3;
	and.b32  	%r272, %r271, 412;
	add.s32 	%r273, %r195, %r272;
	add.s32 	%r274, %r273, %r213;
	ld.shared.f32 	%f13, [%r274+12288];
	or.b32  	%r275, %r193, 3328;
	shr.u32 	%r276, %r275, 3;
	and.b32  	%r277, %r276, 444;
	add.s32 	%r278, %r195, %r277;
	add.s32 	%r279, %r278, %r213;
	ld.shared.f32 	%f14, [%r279+13312];
	or.b32  	%r280, %r193, 3584;
	shr.u32 	%r281, %r280, 3;
	and.b32  	%r282, %r281, 476;
	add.s32 	%r283, %r195, %r282;
	add.s32 	%r284, %r283, %r213;
	ld.shared.f32 	%f15, [%r284+14336];
	or.b32  	%r285, %r193, 3840;
	shr.u32 	%r286, %r285, 3;
	and.b32  	%r287, %r286, 508;
	add.s32 	%r288, %r195, %r287;
	add.s32 	%r289, %r288, %r213;
	ld.shared.f32 	%f16, [%r289+15360];
	.loc	1 34 37                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:34:37
	shl.b32 	%r290, %r181, 3;
	.loc	1 34 30                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:34:30
	mul.wide.s32 	%rd35, %r290, 4;
	add.s64 	%rd5, %rd29, %rd35;
	add.s64 	%rd7, %rd5, 4;
	add.s64 	%rd9, %rd5, 8;
	add.s64 	%rd11, %rd5, 12;
	add.s64 	%rd13, %rd5, 16;
	add.s64 	%rd15, %rd5, 20;
	add.s64 	%rd17, %rd5, 24;
	add.s64 	%rd19, %rd5, 28;
	.loc	1 34 42                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:34:42
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r66 }, [ %rd5 + 0 ];
	@!%p37 mov.u32 %r66, %r6;
	// end inline asm
	mov.b32 	%f17, %r66;
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r68 }, [ %rd5 + 0 ];
	@!%p37 mov.u32 %r68, %r6;
	// end inline asm
	mov.b32 	%f18, %r68;
	// begin inline asm
	mov.u32 %r70, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r70 }, [ %rd7 + 0 ];
	@!%p37 mov.u32 %r70, %r6;
	// end inline asm
	mov.b32 	%f19, %r70;
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r72 }, [ %rd7 + 0 ];
	@!%p37 mov.u32 %r72, %r6;
	// end inline asm
	mov.b32 	%f20, %r72;
	// begin inline asm
	mov.u32 %r74, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r74 }, [ %rd9 + 0 ];
	@!%p37 mov.u32 %r74, %r6;
	// end inline asm
	mov.b32 	%f21, %r74;
	// begin inline asm
	mov.u32 %r76, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r76 }, [ %rd9 + 0 ];
	@!%p37 mov.u32 %r76, %r6;
	// end inline asm
	mov.b32 	%f22, %r76;
	// begin inline asm
	mov.u32 %r78, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r78 }, [ %rd11 + 0 ];
	@!%p37 mov.u32 %r78, %r6;
	// end inline asm
	mov.b32 	%f23, %r78;
	// begin inline asm
	mov.u32 %r80, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r80 }, [ %rd11 + 0 ];
	@!%p37 mov.u32 %r80, %r6;
	// end inline asm
	mov.b32 	%f24, %r80;
	// begin inline asm
	mov.u32 %r82, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r82 }, [ %rd13 + 0 ];
	@!%p37 mov.u32 %r82, %r6;
	// end inline asm
	mov.b32 	%f25, %r82;
	// begin inline asm
	mov.u32 %r84, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r84 }, [ %rd13 + 0 ];
	@!%p37 mov.u32 %r84, %r6;
	// end inline asm
	mov.b32 	%f26, %r84;
	// begin inline asm
	mov.u32 %r86, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r86 }, [ %rd15 + 0 ];
	@!%p37 mov.u32 %r86, %r6;
	// end inline asm
	mov.b32 	%f27, %r86;
	// begin inline asm
	mov.u32 %r88, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r88 }, [ %rd15 + 0 ];
	@!%p37 mov.u32 %r88, %r6;
	// end inline asm
	mov.b32 	%f28, %r88;
	// begin inline asm
	mov.u32 %r90, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r90 }, [ %rd17 + 0 ];
	@!%p37 mov.u32 %r90, %r6;
	// end inline asm
	mov.b32 	%f29, %r90;
	// begin inline asm
	mov.u32 %r92, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r92 }, [ %rd17 + 0 ];
	@!%p37 mov.u32 %r92, %r6;
	// end inline asm
	mov.b32 	%f30, %r92;
	// begin inline asm
	mov.u32 %r94, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r94 }, [ %rd19 + 0 ];
	@!%p37 mov.u32 %r94, %r6;
	// end inline asm
	mov.b32 	%f31, %r94;
	// begin inline asm
	mov.u32 %r96, 0x0;
	@%p37 ld.global.L1::evict_last.b32 { %r96 }, [ %rd19 + 0 ];
	@!%p37 mov.u32 %r96, %r6;
	// end inline asm
	mov.b32 	%f32, %r96;
	.loc	1 35 18                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:35:18
	add.f32 	%f33, %f1, %f17;
	add.f32 	%f34, %f2, %f18;
	add.f32 	%f35, %f3, %f19;
	add.f32 	%f36, %f4, %f20;
	add.f32 	%f37, %f5, %f21;
	add.f32 	%f38, %f6, %f22;
	add.f32 	%f39, %f7, %f23;
	add.f32 	%f40, %f8, %f24;
	add.f32 	%f41, %f9, %f25;
	add.f32 	%f42, %f10, %f26;
	add.f32 	%f43, %f11, %f27;
	add.f32 	%f44, %f12, %f28;
	add.f32 	%f45, %f13, %f29;
	add.f32 	%f46, %f14, %f30;
	add.f32 	%f47, %f15, %f31;
	add.f32 	%f48, %f16, %f32;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f33, %f34;
	add.f32 	%f50, %f49, %f35;
	add.f32 	%f51, %f50, %f36;
	add.f32 	%f52, %f51, %f37;
	add.f32 	%f53, %f52, %f38;
	add.f32 	%f54, %f53, %f39;
	add.f32 	%f55, %f54, %f40;
	add.f32 	%f56, %f55, %f41;
	add.f32 	%f57, %f56, %f42;
	add.f32 	%f58, %f57, %f43;
	add.f32 	%f59, %f58, %f44;
	add.f32 	%f60, %f59, %f45;
	add.f32 	%f61, %f60, %f46;
	add.f32 	%f62, %f61, %f47;
	add.f32 	%f63, %f62, %f48;
	.loc	2 267 36                        // standard.py:267:36
	shl.b32 	%r291, %r168, 2;
	shl.b32 	%r292, %r169, 5;
	or.b32  	%r293, %r292, %r291;
	add.s32 	%r98, %r195, %r293;
	mov.b32 	%r294, %f63;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r99, %r294, 0, %p37;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r98 + 0 ], %r99;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p70, %r167, 256;
	add.s32 	%r101, %r195, %r175;
	// begin inline asm
	@%p70 ld.shared.b32 %r100, [ %r101 + 0 ];
	// end inline asm
	mov.b32 	%f64, %r100;
	shfl.sync.bfly.b32	%r295, %r100, 4, 31, -1;
	mov.b32 	%f65, %r295;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r296, %f66;
	shfl.sync.bfly.b32	%r297, %r296, 2, 31, -1;
	mov.b32 	%f67, %r297;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r298, %f68;
	shfl.sync.bfly.b32	%r299, %r298, 1, 31, -1;
	mov.b32 	%f69, %r299;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r300, %r167, 7;
	setp.eq.s32 	%p97, %r300, 0;
	and.pred  	%p71, %p70, %p97;
	mov.b32 	%r103, %f70;
	// begin inline asm
	@%p71 st.shared.b32 [ %r101 + 0 ], %r103;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r301, %r195, %r292;
$L__tmp2:
	.loc	1 43 19                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:43:19
	ld.shared.u32 	%r105, [%r301];
	mov.b32 	%r106, 1124073472;
	// begin inline asm
	div.full.f32 %r165, %r105, %r106;
	// end inline asm
	mov.b32 	%f71, %r165;
	.loc	1 44 19                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:44:19
	sub.f32 	%f72, %f33, %f71;
	sub.f32 	%f73, %f34, %f71;
	sub.f32 	%f74, %f35, %f71;
	sub.f32 	%f75, %f36, %f71;
	sub.f32 	%f76, %f37, %f71;
	sub.f32 	%f77, %f38, %f71;
	sub.f32 	%f78, %f39, %f71;
	sub.f32 	%f79, %f40, %f71;
	sub.f32 	%f80, %f41, %f71;
	sub.f32 	%f81, %f42, %f71;
	sub.f32 	%f82, %f43, %f71;
	sub.f32 	%f83, %f44, %f71;
	sub.f32 	%f84, %f45, %f71;
	sub.f32 	%f85, %f46, %f71;
	sub.f32 	%f86, %f47, %f71;
	sub.f32 	%f87, %f48, %f71;
	.loc	1 45 20                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:45:20
	mul.f32 	%f88, %f73, %f73;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f89, %f72, %f72, %f88;
	fma.rn.f32 	%f90, %f74, %f74, %f89;
	fma.rn.f32 	%f91, %f75, %f75, %f90;
	fma.rn.f32 	%f92, %f76, %f76, %f91;
	fma.rn.f32 	%f93, %f77, %f77, %f92;
	fma.rn.f32 	%f94, %f78, %f78, %f93;
	fma.rn.f32 	%f95, %f79, %f79, %f94;
	fma.rn.f32 	%f96, %f80, %f80, %f95;
	fma.rn.f32 	%f97, %f81, %f81, %f96;
	fma.rn.f32 	%f98, %f82, %f82, %f97;
	fma.rn.f32 	%f99, %f83, %f83, %f98;
	fma.rn.f32 	%f100, %f84, %f84, %f99;
	fma.rn.f32 	%f101, %f85, %f85, %f100;
	fma.rn.f32 	%f102, %f86, %f86, %f101;
	fma.rn.f32 	%f103, %f87, %f87, %f102;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r302, %f103;
	.loc	2 256 15                        // standard.py:256:15
	selp.b32 	%r108, %r302, 0, %p37;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p21 st.shared.b32 [ %r98 + 0 ], %r108;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p70 ld.shared.b32 %r109, [ %r101 + 0 ];
	// end inline asm
	mov.b32 	%f104, %r109;
	shfl.sync.bfly.b32	%r303, %r109, 4, 31, -1;
	mov.b32 	%f105, %r303;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r304, %f106;
	shfl.sync.bfly.b32	%r305, %r304, 2, 31, -1;
	mov.b32 	%f107, %r305;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r306, %f108;
	shfl.sync.bfly.b32	%r307, %r306, 1, 31, -1;
	mov.b32 	%f109, %r307;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f110;
	// begin inline asm
	@%p71 st.shared.b32 [ %r101 + 0 ], %r112;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 50 20                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:50:20
	ld.shared.u32 	%r114, [%r301];
	// begin inline asm
	div.full.f32 %r113, %r114, %r106;
	// end inline asm
	mov.b32 	%f111, %r113;
	.loc	1 52 20                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:52:20
	add.f32 	%f112, %f111, 0f358637BD;
	.loc	1 53 28                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:53:28
	rsqrt.approx.ftz.f32 	%f113, %f112;
	.loc	1 54 48                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:54:48
	bar.sync 	0;
	and.b32  	%r308, %r175, 1020;
	mov.b32 	%r117, %f33;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r117;
	// end inline asm
	mov.b32 	%r119, %f34;
	// begin inline asm
	@%p21 st.shared.b32 [ %r42 + 0 ], %r119;
	// end inline asm
	mov.b32 	%r121, %f35;
	// begin inline asm
	@%p21 st.shared.b32 [ %r50 + 0 ], %r121;
	// end inline asm
	mov.b32 	%r123, %f36;
	// begin inline asm
	@%p21 st.shared.b32 [ %r58 + 0 ], %r123;
	// end inline asm
	add.s32 	%r124, %r34, 128;
	mov.b32 	%r125, %f37;
	// begin inline asm
	@%p21 st.shared.b32 [ %r124 + 0 ], %r125;
	// end inline asm
	add.s32 	%r126, %r34, 160;
	mov.b32 	%r127, %f38;
	// begin inline asm
	@%p21 st.shared.b32 [ %r126 + 0 ], %r127;
	// end inline asm
	add.s32 	%r128, %r34, 192;
	mov.b32 	%r129, %f39;
	// begin inline asm
	@%p21 st.shared.b32 [ %r128 + 0 ], %r129;
	// end inline asm
	add.s32 	%r130, %r34, 224;
	mov.b32 	%r131, %f40;
	// begin inline asm
	@%p21 st.shared.b32 [ %r130 + 0 ], %r131;
	// end inline asm
	add.s32 	%r132, %r34, 256;
	mov.b32 	%r133, %f41;
	// begin inline asm
	@%p21 st.shared.b32 [ %r132 + 0 ], %r133;
	// end inline asm
	add.s32 	%r134, %r34, 288;
	mov.b32 	%r135, %f42;
	// begin inline asm
	@%p21 st.shared.b32 [ %r134 + 0 ], %r135;
	// end inline asm
	add.s32 	%r136, %r34, 320;
	mov.b32 	%r137, %f43;
	// begin inline asm
	@%p21 st.shared.b32 [ %r136 + 0 ], %r137;
	// end inline asm
	add.s32 	%r138, %r34, 352;
	mov.b32 	%r139, %f44;
	// begin inline asm
	@%p21 st.shared.b32 [ %r138 + 0 ], %r139;
	// end inline asm
	add.s32 	%r140, %r34, 384;
	mov.b32 	%r141, %f45;
	// begin inline asm
	@%p21 st.shared.b32 [ %r140 + 0 ], %r141;
	// end inline asm
	add.s32 	%r142, %r34, 416;
	mov.b32 	%r143, %f46;
	// begin inline asm
	@%p21 st.shared.b32 [ %r142 + 0 ], %r143;
	// end inline asm
	add.s32 	%r144, %r34, 448;
	mov.b32 	%r145, %f47;
	// begin inline asm
	@%p21 st.shared.b32 [ %r144 + 0 ], %r145;
	// end inline asm
	add.s32 	%r146, %r34, 480;
	mov.b32 	%r147, %f48;
	// begin inline asm
	@%p21 st.shared.b32 [ %r146 + 0 ], %r147;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r309, %r167, 1;
	and.b32  	%r310, %r309, 112;
	add.s32 	%r311, %r195, %r310;
	shl.b32 	%r312, %r308, 2;
	add.s32 	%r313, %r311, %r312;
	or.b32  	%r314, %r308, 1024;
	shr.u32 	%r315, %r314, 3;
	and.b32  	%r316, %r315, 240;
	add.s32 	%r317, %r195, %r316;
	add.s32 	%r318, %r317, %r312;
	ld.shared.v4.u32 	{%r152, %r153, %r154, %r155}, [%r318+4096];
	or.b32  	%r319, %r308, 2048;
	shr.u32 	%r320, %r319, 3;
	and.b32  	%r321, %r320, 368;
	add.s32 	%r322, %r195, %r321;
	add.s32 	%r323, %r322, %r312;
	ld.shared.v4.u32 	{%r156, %r157, %r158, %r159}, [%r323+8192];
	or.b32  	%r324, %r308, 3072;
	shr.u32 	%r325, %r324, 3;
	and.b32  	%r326, %r325, 496;
	add.s32 	%r327, %r195, %r326;
	add.s32 	%r328, %r327, %r312;
	ld.shared.v4.u32 	{%r160, %r161, %r162, %r163}, [%r328+12288];
	ld.shared.v4.u32 	{%r148, %r149, %r150, %r151}, [%r313];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r148, %r149, %r150, %r151 };
	// end inline asm
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd2 + 0 ], { %r152, %r153, %r154, %r155 };
	// end inline asm
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r156, %r157, %r158, %r159 };
	// end inline asm
	// begin inline asm
	@%p16 st.global.v4.b32 [ %rd4 + 0 ], { %r160, %r161, %r162, %r163 };
	// end inline asm
	.loc	1 55 4                          // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:55:4
	bar.sync 	0;
	.loc	1 56 28                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:56:28
	mul.wide.s32 	%rd36, %r174, 4;
	add.s64 	%rd25, %rd28, %rd36;
	.loc	1 56 40                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:56:40
	setp.eq.s32 	%p98, %r168, 0;
	mov.b32 	%r164, %f113;
	and.pred  	%p95, %p98, %p37;
	// begin inline asm
	@%p95 st.global.b32 [ %rd25 + 0 ], { %r164 };
	// end inline asm
	.loc	1 57 25                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:57:25
	add.s64 	%rd26, %rd30, %rd36;
	.loc	1 57 37                         // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:57:37
	// begin inline asm
	@%p95 st.global.b32 [ %rd26 + 0 ], { %r165 };
	// end inline asm
	.loc	1 57 4                          // c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py:57:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4t/c4tbwq3qtcmjyww4cr76t5rswtw6ghopcqvy54uwjtdhajf3a5ip.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 218                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 116
.b8 98
.b8 119
.b8 113
.b8 51
.b8 113
.b8 116
.b8 99
.b8 109
.b8 106
.b8 121
.b8 119
.b8 119
.b8 52
.b8 99
.b8 114
.b8 55
.b8 54
.b8 116
.b8 53
.b8 114
.b8 115
.b8 119
.b8 116
.b8 119
.b8 54
.b8 103
.b8 104
.b8 111
.b8 112
.b8 99
.b8 113
.b8 118
.b8 121
.b8 53
.b8 52
.b8 117
.b8 119
.b8 106
.b8 116
.b8 100
.b8 104
.b8 97
.b8 106
.b8 102
.b8 51
.b8 97
.b8 53
.b8 105
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x34 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
