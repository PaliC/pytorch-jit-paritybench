; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_affine_grid_generator_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %5, 1, !dbg !13
  %11 = ashr exact i32 %9, 1, !dbg !14
  %12 = srem i32 %10, 2, !dbg !15
  %13 = sdiv i32 %9, 100352, !dbg !16
  %14 = mul nsw i32 %12, 3, !dbg !17
  %15 = mul nsw i32 %13, 6, !dbg !18
  %16 = add nsw i32 %14, %15, !dbg !19
  %17 = sext i32 %15 to i64, !dbg !20
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !20
  %19 = sext i32 %16 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !20
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 true) #1, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !21
  %23 = or disjoint i32 %15, 1, !dbg !22
  %24 = sext i32 %23 to i64, !dbg !23
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !23
  %26 = getelementptr i8, ptr addrspace(1) %20, i64 4, !dbg !23
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 true) #1, !dbg !24
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 true) #1, !dbg !24
  %29 = getelementptr i8, ptr addrspace(1) %18, i64 8, !dbg !25
  %30 = getelementptr i8, ptr addrspace(1) %20, i64 8, !dbg !25
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 true) #1, !dbg !26
  %32 = bitcast i32 %31 to float, !dbg !26
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !26
  %34 = bitcast i32 %33 to float, !dbg !26
  %35 = srem i32 %11, 50176, !dbg !27
  %36 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !21
  %37 = insertelement <2 x i32> %36, i32 %27, i64 1, !dbg !21
  %38 = bitcast <2 x i32> %37 to <2 x float>, !dbg !21
  %.frozen = freeze i32 %35, !dbg !28
  %39 = sdiv i32 %.frozen, 224, !dbg !28
  %40 = mul i32 %39, 224, !dbg !29
  %.decomposed = sub i32 %.frozen, %40, !dbg !29
  %41 = insertelement <2 x i32> poison, i32 %.decomposed, i64 0, !dbg !30
  %42 = insertelement <2 x i32> %41, i32 %39, i64 1, !dbg !30
  %43 = sitofp <2 x i32> %42 to <2 x float>, !dbg !30
  %44 = insertelement <2 x i32> %42, i32 %35, i64 1, !dbg !31
  %45 = icmp slt <2 x i32> %44, <i32 112, i32 25088>, !dbg !31
  %46 = fmul <2 x float> %43, splat (float 0x3F824924A0000000), !dbg !32
  %47 = fadd <2 x float> %46, splat (float 0xBFEFDB6DC0000000), !dbg !33
  %48 = sub nsw <2 x i32> splat (i32 223), %42, !dbg !34
  %49 = uitofp <2 x i32> %48 to <2 x float>, !dbg !35
  %50 = fmul <2 x float> %49, splat (float 0x3F824924A0000000), !dbg !36
  %51 = fsub <2 x float> splat (float 0x3FEFDB6DC0000000), %50, !dbg !37
  %52 = select <2 x i1> %45, <2 x float> %47, <2 x float> %51, !dbg !38
  %53 = fmul <2 x float> %52, %38, !dbg !39
  %54 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !21
  %55 = insertelement <2 x i32> %54, i32 %28, i64 1, !dbg !21
  %56 = bitcast <2 x i32> %55 to <2 x float>, !dbg !21
  %57 = fmul <2 x float> %52, %56, !dbg !39
  %shift = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %58 = fadd <2 x float> %53, %shift, !dbg !40
  %59 = extractelement <2 x float> %58, i64 0, !dbg !40
  %shift1 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !40
  %60 = fadd <2 x float> %57, %shift1, !dbg !40
  %61 = extractelement <2 x float> %60, i64 0, !dbg !40
  %62 = fadd float %59, %32, !dbg !41
  %63 = fadd float %61, %34, !dbg !41
  %64 = sext i32 %9 to i64, !dbg !42
  %65 = getelementptr float, ptr addrspace(1) %1, i64 %64, !dbg !42
  %66 = bitcast float %62 to i32, !dbg !43
  %67 = bitcast float %63 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %66, i32 %67, ptr addrspace(1) %65, i1 true) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "czpn2gzkowgapo4tv7fx2fkirklqn26v63v4dgax6yr4eyh7a4bx.py", directory: "inductor_cache/zp")
!4 = !{ptr @triton_poi_fused_affine_grid_generator_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_affine_grid_generator_0, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_affine_grid_generator_0", linkageName: "triton_poi_fused_affine_grid_generator_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 33, scope: !7)
!18 = !DILocation(line: 28, column: 40, scope: !7)
!19 = !DILocation(line: 28, column: 38, scope: !7)
!20 = !DILocation(line: 28, column: 31, scope: !7)
!21 = !DILocation(line: 28, column: 45, scope: !7)
!22 = !DILocation(line: 29, column: 42, scope: !7)
!23 = !DILocation(line: 29, column: 31, scope: !7)
!24 = !DILocation(line: 29, column: 49, scope: !7)
!25 = !DILocation(line: 30, column: 32, scope: !7)
!26 = !DILocation(line: 30, column: 50, scope: !7)
!27 = !DILocation(line: 25, column: 26, scope: !7)
!28 = !DILocation(line: 97, column: 18, scope: !7)
!29 = !DILocation(line: 34, column: 36, scope: !7)
!30 = !DILocation(line: 35, column: 19, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 39, column: 18, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 19, scope: !7)
!35 = !DILocation(line: 43, column: 21, scope: !7)
!36 = !DILocation(line: 44, column: 20, scope: !7)
!37 = !DILocation(line: 46, column: 20, scope: !7)
!38 = !DILocation(line: 47, column: 34, scope: !7)
!39 = !DILocation(line: 77, column: 20, scope: !7)
!40 = !DILocation(line: 119, column: 20, scope: !7)
!41 = !DILocation(line: 162, column: 21, scope: !7)
!42 = !DILocation(line: 163, column: 25, scope: !7)
!43 = !DILocation(line: 163, column: 38, scope: !7)
!44 = !DILocation(line: 163, column: 4, scope: !7)
