//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mul_scatter_add_zero_1 // -- Begin function triton_poi_fused_mul_scatter_add_zero_1
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 54, 51, 47, 99, 54, 51, 101, 97, 112, 97, 54, 111, 105, 107, 107, 116, 121, 102, 50, 55, 55, 103, 106, 101, 118, 119, 53, 109, 100, 107, 97, 107, 54, 118, 122, 122, 109, 114, 122, 100, 121, 119, 114, 106, 105, 102, 110, 117, 120, 99, 115, 107, 119, 114, 98, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 48, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_mul_scatter_add_zero_1
.visible .entry triton_poi_fused_mul_scatter_add_zero_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_scatter_add_zero_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_scatter_add_zero_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_scatter_add_zero_1_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_scatter_add_zero_1_param_3,
	.param .u32 triton_poi_fused_mul_scatter_add_zero_1_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<41>;
	.reg .f32 	%f<7>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_poi_fused_mul_scatter_add_zero_1_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_mul_scatter_add_zero_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:21:28
	// begin inline asm
	mov.u32 %r9, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:21:33
	shl.b32 	%r1, %r9, 8;
	ld.param.u64 	%rd11, [triton_poi_fused_mul_scatter_add_zero_1_param_2];
	.loc	1 22 36                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:22:36
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r14, %r2, 1;
	and.b32  	%r3, %r14, 254;
	.loc	1 22 23                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:22:23
	or.b32  	%r15, %r1, %r3;
	.loc	1 23 21                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:23:21
	setp.gt.s32 	%p4, %r15, 255;
	setp.lt.s32 	%p1, %r15, 256;
	.loc	1 26 19                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:26:19
	shr.s32 	%r17, %r15, 31;
	shr.u32 	%r18, %r17, 30;
	add.s32 	%r19, %r15, %r18;
	.loc	1 24 19                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:24:19
	and.b32  	%r20, %r19, -4;
	sub.s32 	%r21, %r15, %r20;
	.loc	1 27 30                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:27:30
	mul.wide.s32 	%rd12, %r21, 8;
	add.s64 	%rd6, %rd9, %rd12;
	.loc	1 27 35                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:27:35
	// begin inline asm
	mov.u64 %rd4, 0x0;
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd4, %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 28 30                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:28:30
	mul.wide.s32 	%rd13, %r15, 4;
	add.s64 	%rd7, %rd10, %rd13;
	.loc	1 28 35                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:28:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.v2.b32 { %r10, %r11 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 29 30                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:29:30
	mul.wide.s32 	%rd14, %r21, 4;
	add.s64 	%rd8, %rd11, %rd14;
	.loc	1 29 35                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:29:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 30 60                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:30:60
	or.b64  	%rd15, %rd4, %rd5;
	setp.lt.u64 	%p5, %rd15, 4;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 60                          // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:0:60
	ld.param.u64 	%rd3, [triton_poi_fused_mul_scatter_add_zero_1_param_3];
	shr.s32 	%r4, %r19, 2;
	.loc	1 29 35                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:29:35
	mov.b32 	%f1, %r13;
	mov.b32 	%f2, %r12;
	.loc	1 28 35                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:28:35
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r10;
	.loc	1 22 36                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:22:36
	and.b32  	%r30, %r2, 127;
	.loc	1 22 23                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:22:23
	or.b32  	%r31, %r1, %r30;
	or.b32  	%r32, %r31, 128;
	.loc	1 23 21                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:23:21
	setp.lt.s32 	%p10, %r32, 256;
	setp.lt.s32 	%p9, %r31, 256;
	.loc	1 30 60                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:30:60
	bar.sync 	0;
	.loc	1 31 18                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:31:18
	mul.f32 	%f5, %f4, %f2;
	mul.f32 	%f6, %f3, %f1;
	.loc	1 32 39                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:32:39
	shl.b32 	%r33, %r4, 2;
	.loc	1 32 30                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:32:30
	shl.b64 	%rd20, %rd4, 2;
	add.s64 	%rd21, %rd3, %rd20;
	mul.wide.s32 	%rd22, %r33, 4;
	add.s64 	%rd16, %rd21, %rd22;
	shl.b64 	%rd23, %rd5, 2;
	add.s64 	%rd24, %rd3, %rd23;
	add.s64 	%rd17, %rd24, %rd22;
	.loc	1 32 50                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:32:50
	shl.b32 	%r34, %r3, 3;
	mov.u32 	%r35, global_smem;
	add.s32 	%r22, %r35, %r34;
	mov.pred 	%p7, -1;
	// begin inline asm
	@%p7 st.shared.v2.b64 [ %r22 + 0 ], { %rd16, %rd17 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r36, %r30, 3;
	add.s32 	%r37, %r35, %r36;
	ld.shared.u64 	%rd18, [%r37];
	ld.shared.u64 	%rd19, [%r37+1024];
	bar.sync 	0;
	shl.b32 	%r38, %r3, 2;
	add.s32 	%r23, %r35, %r38;
	mov.b32 	%r24, %f5;
	mov.b32 	%r25, %f6;
	// begin inline asm
	@%p7 st.shared.v2.b32 [ %r23 + 0 ], { %r24, %r25 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r39, %r30, 2;
	add.s32 	%r40, %r35, %r39;
	ld.shared.u32 	%r27, [%r40];
	ld.shared.u32 	%r29, [%r40+512];
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p9 atom.global.gpu.relaxed.add.f32 %r26, [ %rd18 + 0 ], %r27;
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p10 atom.global.gpu.relaxed.add.f32 %r28, [ %rd19 + 0 ], %r29;
	// end inline asm
	.loc	1 32 4                          // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:32:4
	ret;
$L__BB0_1:
	.loc	1 30 60                         // c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py:30:60
	mov.u64 	%rd25, assertMessage_0;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, assertFile_0;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, assertFunc_0;
	cvta.global.u64 	%rd30, %rd29;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd26;
	.param .b64 param1;
	st.param.b64 	[param1], %rd28;
	.param .b32 param2;
	st.param.b32 	[param2], 30;
	.param .b64 param3;
	st.param.b64 	[param3], %rd30;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/63/c63eapa6oikktyf277gjevw5mdkak6vzzmrzdywrjifnuxcskwrb.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 51
.b8 101
.b8 97
.b8 112
.b8 97
.b8 54
.b8 111
.b8 105
.b8 107
.b8 107
.b8 116
.b8 121
.b8 102
.b8 50
.b8 55
.b8 55
.b8 103
.b8 106
.b8 101
.b8 118
.b8 119
.b8 53
.b8 109
.b8 100
.b8 107
.b8 97
.b8 107
.b8 54
.b8 118
.b8 122
.b8 122
.b8 109
.b8 114
.b8 122
.b8 100
.b8 121
.b8 119
.b8 114
.b8 106
.b8 105
.b8 102
.b8 110
.b8 117
.b8 120
.b8 99
.b8 115
.b8 107
.b8 119
.b8 114
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
