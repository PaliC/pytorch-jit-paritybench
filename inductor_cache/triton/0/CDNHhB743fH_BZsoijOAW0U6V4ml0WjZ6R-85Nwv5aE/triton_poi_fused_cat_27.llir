; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_27(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = sdiv i32 %9, 64, !dbg !14
  %11 = srem i32 %10, 128, !dbg !15
  %.frozen = freeze i32 %9, !dbg !16
  %12 = sdiv i32 %.frozen, 8, !dbg !16
  %13 = mul i32 %12, 8, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %14 = srem i32 %12, 8, !dbg !18
  %15 = sdiv i32 %9, 8192, !dbg !19
  %16 = icmp slt i32 %11, 64, !dbg !20
  %17 = shl nsw i32 %.decomposed, 6, !dbg !21
  %18 = mul nsw i32 %14, 576, !dbg !22
  %19 = mul nsw i32 %15, 5184, !dbg !23
  %20 = add nsw i32 %19, %17, !dbg !24
  %21 = add nsw i32 %20, %18, !dbg !25
  %22 = add nsw i32 %21, %11, !dbg !26
  %23 = sext i32 %22 to i64, !dbg !27
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !27
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %16, i32 0, i1 %16) #1, !dbg !28
  %26 = bitcast i32 %25 to float, !dbg !28
  %27 = add nsw i32 %20, 64, !dbg !29
  %28 = add nsw i32 %27, %18, !dbg !30
  %29 = add nsw i32 %28, %11, !dbg !31
  %30 = sext i32 %29 to i64, !dbg !32
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !32
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %16, i32 0, i1 %16) #1, !dbg !33
  %33 = bitcast i32 %32 to float, !dbg !33
  %34 = fcmp ogt float %33, %26, !dbg !34
  %35 = fcmp uno float %33, 0.000000e+00, !dbg !38
  %36 = or i1 %34, %35, !dbg !39
  %37 = select i1 %36, float %33, float %26, !dbg !40
  %38 = add nsw i32 %20, 576, !dbg !41
  %39 = add nsw i32 %38, %18, !dbg !42
  %40 = add nsw i32 %39, %11, !dbg !43
  %41 = sext i32 %40 to i64, !dbg !44
  %42 = getelementptr float, ptr addrspace(1) %0, i64 %41, !dbg !44
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %42, i1 %16, i32 0, i1 %16) #1, !dbg !45
  %44 = bitcast i32 %43 to float, !dbg !45
  %45 = fcmp olt float %37, %44, !dbg !46
  %46 = fcmp uno float %44, 0.000000e+00, !dbg !48
  %47 = or i1 %46, %45, !dbg !49
  %48 = select i1 %47, float %44, float %37, !dbg !50
  %49 = add nsw i32 %20, 640, !dbg !51
  %50 = add nsw i32 %49, %18, !dbg !52
  %51 = add nsw i32 %50, %11, !dbg !53
  %52 = sext i32 %51 to i64, !dbg !54
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !54
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %16, i32 0, i1 %16) #1, !dbg !55
  %55 = bitcast i32 %54 to float, !dbg !55
  %56 = fcmp olt float %48, %55, !dbg !56
  %57 = fcmp uno float %55, 0.000000e+00, !dbg !58
  %58 = or i1 %57, %56, !dbg !59
  %59 = select i1 %58, float %55, float %48, !dbg !60
  %60 = icmp sgt i32 %11, 63, !dbg !61
  %61 = add nsw i32 %11, -64, !dbg !62
  %62 = add nsw i32 %21, %61, !dbg !63
  %63 = sext i32 %62 to i64, !dbg !64
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !64
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %60, i32 0, i1 %60) #1, !dbg !65
  %66 = bitcast i32 %65 to float, !dbg !65
  %67 = add nsw i32 %28, %61, !dbg !66
  %68 = sext i32 %67 to i64, !dbg !67
  %69 = getelementptr float, ptr addrspace(1) %1, i64 %68, !dbg !67
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %69, i1 %60, i32 0, i1 %60) #1, !dbg !68
  %71 = bitcast i32 %70 to float, !dbg !68
  %72 = fcmp ogt float %71, %66, !dbg !69
  %73 = fcmp uno float %71, 0.000000e+00, !dbg !71
  %74 = or i1 %72, %73, !dbg !72
  %75 = select i1 %74, float %71, float %66, !dbg !73
  %76 = add nsw i32 %39, %61, !dbg !74
  %77 = sext i32 %76 to i64, !dbg !75
  %78 = getelementptr float, ptr addrspace(1) %1, i64 %77, !dbg !75
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %60, i32 0, i1 %60) #1, !dbg !76
  %80 = bitcast i32 %79 to float, !dbg !76
  %81 = fcmp olt float %75, %80, !dbg !77
  %82 = fcmp uno float %80, 0.000000e+00, !dbg !79
  %83 = or i1 %82, %81, !dbg !80
  %84 = select i1 %83, float %80, float %75, !dbg !81
  %85 = add nsw i32 %50, %61, !dbg !82
  %86 = sext i32 %85 to i64, !dbg !83
  %87 = getelementptr float, ptr addrspace(1) %1, i64 %86, !dbg !83
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %87, i1 %60, i32 0, i1 %60) #1, !dbg !84
  %89 = bitcast i32 %88 to float, !dbg !84
  %90 = fcmp olt float %84, %89, !dbg !85
  %91 = fcmp uno float %89, 0.000000e+00, !dbg !87
  %92 = or i1 %91, %90, !dbg !88
  %93 = select i1 %92, float %89, float %84, !dbg !89
  %94 = select i1 %16, float %59, float %93, !dbg !90
  %95 = sext i32 %9 to i64, !dbg !91
  %96 = getelementptr float, ptr addrspace(1) %2, i64 %95, !dbg !91
  %97 = bitcast float %94 to i32, !dbg !92
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %97, ptr addrspace(1) %96, i1 true) #1, !dbg !92
  ret void, !dbg !93
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4iwqrcaa5nt7cmlb734o2j7xvhtz5o6xvgqflpnvcfgxinb6axm.py", directory: "inductor_cache/4i")
!4 = !{ptr @triton_poi_fused_cat_27, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_27, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_27", linkageName: "triton_poi_fused_cat_27", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 26, column: 21, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 26, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 33, scope: !7)
!22 = !DILocation(line: 34, column: 42, scope: !7)
!23 = !DILocation(line: 34, column: 52, scope: !7)
!24 = !DILocation(line: 34, column: 38, scope: !7)
!25 = !DILocation(line: 34, column: 47, scope: !7)
!26 = !DILocation(line: 34, column: 58, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 64, scope: !7)
!29 = !DILocation(line: 35, column: 43, scope: !7)
!30 = !DILocation(line: 35, column: 52, scope: !7)
!31 = !DILocation(line: 35, column: 63, scope: !7)
!32 = !DILocation(line: 35, column: 30, scope: !7)
!33 = !DILocation(line: 35, column: 69, scope: !7)
!34 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !37)
!35 = distinct !DILexicalBlockFile(scope: !7, file: !36, discriminator: 0)
!36 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!37 = !DILocation(line: 36, column: 40, scope: !7)
!38 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !37)
!39 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !37)
!40 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !37)
!41 = !DILocation(line: 37, column: 44, scope: !7)
!42 = !DILocation(line: 37, column: 53, scope: !7)
!43 = !DILocation(line: 37, column: 64, scope: !7)
!44 = !DILocation(line: 37, column: 30, scope: !7)
!45 = !DILocation(line: 37, column: 70, scope: !7)
!46 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !47)
!47 = !DILocation(line: 38, column: 40, scope: !7)
!48 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !47)
!49 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !47)
!50 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !47)
!51 = !DILocation(line: 39, column: 45, scope: !7)
!52 = !DILocation(line: 39, column: 54, scope: !7)
!53 = !DILocation(line: 39, column: 65, scope: !7)
!54 = !DILocation(line: 39, column: 31, scope: !7)
!55 = !DILocation(line: 39, column: 71, scope: !7)
!56 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !57)
!57 = !DILocation(line: 40, column: 42, scope: !7)
!58 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !57)
!59 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !57)
!60 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !57)
!61 = !DILocation(line: 43, column: 20, scope: !7)
!62 = !DILocation(line: 46, column: 67, scope: !7)
!63 = !DILocation(line: 46, column: 59, scope: !7)
!64 = !DILocation(line: 46, column: 31, scope: !7)
!65 = !DILocation(line: 46, column: 73, scope: !7)
!66 = !DILocation(line: 47, column: 64, scope: !7)
!67 = !DILocation(line: 47, column: 31, scope: !7)
!68 = !DILocation(line: 47, column: 78, scope: !7)
!69 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !70)
!70 = !DILocation(line: 48, column: 42, scope: !7)
!71 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !70)
!72 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !70)
!73 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !70)
!74 = !DILocation(line: 49, column: 65, scope: !7)
!75 = !DILocation(line: 49, column: 31, scope: !7)
!76 = !DILocation(line: 49, column: 79, scope: !7)
!77 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !78)
!78 = !DILocation(line: 50, column: 42, scope: !7)
!79 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !78)
!80 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !78)
!81 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !78)
!82 = !DILocation(line: 51, column: 65, scope: !7)
!83 = !DILocation(line: 51, column: 31, scope: !7)
!84 = !DILocation(line: 51, column: 79, scope: !7)
!85 = !DILocation(line: 118, column: 15, scope: !35, inlinedAt: !86)
!86 = !DILocation(line: 52, column: 42, scope: !7)
!87 = !DILocation(line: 120, column: 21, scope: !35, inlinedAt: !86)
!88 = !DILocation(line: 120, column: 16, scope: !35, inlinedAt: !86)
!89 = !DILocation(line: 121, column: 29, scope: !35, inlinedAt: !86)
!90 = !DILocation(line: 0, scope: !7)
!91 = !DILocation(line: 56, column: 25, scope: !7)
!92 = !DILocation(line: 56, column: 37, scope: !7)
!93 = !DILocation(line: 56, column: 4, scope: !7)
