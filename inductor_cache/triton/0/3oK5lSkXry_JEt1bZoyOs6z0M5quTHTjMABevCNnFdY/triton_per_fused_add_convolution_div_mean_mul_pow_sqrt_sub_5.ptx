//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5 // -- Begin function triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5
.visible .entry triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_6,
	.param .u32 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_7,
	.param .u32 triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<69>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_1];
$L__tmp0:
	.loc	1 23 28                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:23:33
	shl.b32 	%r72, %r1, 3;
	ld.param.u64 	%rd11, [triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_2];
	ld.param.u64 	%rd12, [triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_3];
	.loc	1 24 44                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:24:44
	mov.u32 	%r73, %tid.x;
	ld.param.u64 	%rd13, [triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_4];
	bfe.u32 	%r74, %r73, 5, 3;
	ld.param.u64 	%rd14, [triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_5];
	and.b32  	%r75, %r73, 7;
	ld.param.u64 	%rd15, [triton_per_fused_add_convolution_div_mean_mul_pow_sqrt_sub_5_param_6];
	.loc	1 24 23                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:24:23
	or.b32  	%r76, %r72, %r74;
	.loc	1 25 21                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:25:21
	setp.lt.s32 	%p27, %r76, 1024;
	.loc	1 26 34                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:26:34
	shl.b32 	%r77, %r73, 2;
	and.b32  	%r78, %r77, 124;
	.loc	1 28 21                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:28:21
	setp.lt.u32 	%p6, %r78, 96;
	.loc	1 31 39                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:31:39
	mad.lo.s32 	%r79, %r76, 96, %r78;
	.loc	1 31 34                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:31:34
	mul.wide.s32 	%rd16, %r79, 4;
	add.s64 	%rd1, %rd9, %rd16;
	.loc	1 31 55                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:31:55
	and.pred  	%p1, %p6, %p27;
	mov.b32 	%r6, 0;
	.loc	1 31 47                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:31:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 32 30                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:32:30
	mul.wide.u32 	%rd17, %r78, 4;
	add.s64 	%rd2, %rd12, %rd17;
	.loc	1 32 35                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:32:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	.loc	1 33 31                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:33:31
	add.s64 	%rd3, %rd13, %rd17;
	.loc	1 33 36                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:33:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p6 mov.u32 %r18, %r6;
	@!%p6 mov.u32 %r19, %r6;
	@!%p6 mov.u32 %r20, %r6;
	@!%p6 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 34 31                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:34:31
	add.s64 	%rd4, %rd14, %rd17;
	.loc	1 34 36                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:34:36
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p6 mov.u32 %r26, %r6;
	@!%p6 mov.u32 %r27, %r6;
	@!%p6 mov.u32 %r28, %r6;
	@!%p6 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 31 47                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:31:47
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 32 35                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:32:35
	mov.b32 	%f3, %r10;
	mov.b32 	%f4, %r11;
	.loc	1 35 18                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:35:18
	add.f32 	%f5, %f2, %f4;
	mov.b32 	%r63, %f5;
	add.f32 	%f6, %f1, %f3;
	.loc	1 31 47                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:31:47
	mov.b32 	%f7, %r5;
	mov.b32 	%f8, %r4;
	.loc	1 32 35                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:32:35
	mov.b32 	%f9, %r13;
	mov.b32 	%f10, %r12;
	.loc	1 35 18                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:35:18
	add.f32 	%f11, %f8, %f10;
	mov.b32 	%r64, %f11;
	add.f32 	%f12, %f7, %f9;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f6, %f5;
	add.f32 	%f14, %f11, %f13;
	add.f32 	%f15, %f12, %f14;
	selp.f32 	%f16, %f15, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f16;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f17, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f18;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	mov.b32 	%f19, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f20;
	shfl.sync.bfly.b32	%r85, %r84, 4, 31, -1;
	mov.b32 	%f21, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f22;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f23, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f24;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f25, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
$L__tmp2:
	.loc	1 40 18                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:40:18
	shl.b32 	%r90, %r74, 2;
	mov.u32 	%r91, global_smem;
	add.s32 	%r34, %r91, %r90;
	mov.b32 	%r35, %f26;
	mov.pred 	%p21, -1;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r92, %r75, 2;
	add.s32 	%r93, %r91, %r92;
	ld.shared.u32 	%r37, [%r93];
	mov.b32 	%r38, 1119879168;
	// begin inline asm
	div.full.f32 %r66, %r37, %r38;
	// end inline asm
	// begin inline asm
	div.full.f32 %r39, %r35, %r38;
	// end inline asm
	mov.b32 	%f27, %r39;
	.loc	1 41 18                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:41:18
	sub.f32 	%f28, %f6, %f27;
	sub.f32 	%f29, %f5, %f27;
	sub.f32 	%f30, %f11, %f27;
	sub.f32 	%f31, %f12, %f27;
	.loc	1 42 19                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:42:19
	mul.f32 	%f32, %f29, %f29;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f33, %f28, %f28, %f32;
	fma.rn.f32 	%f34, %f30, %f30, %f33;
	fma.rn.f32 	%f35, %f31, %f31, %f34;
	selp.f32 	%f36, %f35, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f36;
	shfl.sync.bfly.b32	%r95, %r94, 16, 31, -1;
	mov.b32 	%f37, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f38;
	shfl.sync.bfly.b32	%r97, %r96, 8, 31, -1;
	mov.b32 	%f39, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f40;
	shfl.sync.bfly.b32	%r99, %r98, 4, 31, -1;
	mov.b32 	%f41, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r100, %f42;
	shfl.sync.bfly.b32	%r101, %r100, 2, 31, -1;
	mov.b32 	%f43, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f44;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f45, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
$L__tmp4:
	.loc	1 49 27                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:49:27
	bar.sync 	0;
	mov.b32 	%r43, %f46;
	// begin inline asm
	@%p21 st.shared.b32 [ %r34 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	.loc	1 46 20                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:46:20
	ld.shared.u32 	%r45, [%r93];
	// begin inline asm
	div.full.f32 %r44, %r45, %r38;
	// end inline asm
	mov.b32 	%f47, %r44;
	// begin inline asm
	div.full.f32 %r47, %r43, %r38;
	// end inline asm
	mov.b32 	%f48, %r47;
	.loc	1 48 20                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:48:20
	add.f32 	%f49, %f47, 0f358637BD;
	add.f32 	%f50, %f48, 0f358637BD;
	.loc	1 49 27                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:49:27
	sqrt.approx.ftz.f32 	%f51, %f49;
	sqrt.approx.ftz.f32 	%f52, %f50;
	.loc	1 34 36                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:34:36
	mov.b32 	%f53, %r29;
	mov.b32 	%f54, %r28;
	mov.b32 	%f55, %r27;
	mov.b32 	%f56, %r26;
	.loc	1 33 36                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:33:36
	mov.b32 	%f57, %r21;
	mov.b32 	%f58, %r20;
	mov.b32 	%f59, %r19;
	mov.b32 	%f60, %r18;
	.loc	1 24 23                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:24:23
	or.b32  	%r104, %r72, %r75;
	.loc	1 25 21                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:25:21
	setp.lt.s32 	%p28, %r104, 1024;
	.loc	1 50 19                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:50:19
	mov.b32 	%r52, %f52;
	mov.b32 	%r51, %f28;
	// begin inline asm
	div.full.f32 %r50, %r51, %r52;
	// end inline asm
	mov.b32 	%f61, %r50;
	mov.b32 	%r54, %f29;
	// begin inline asm
	div.full.f32 %r53, %r54, %r52;
	// end inline asm
	mov.b32 	%f62, %r53;
	mov.b32 	%r57, %f30;
	// begin inline asm
	div.full.f32 %r56, %r57, %r52;
	// end inline asm
	mov.b32 	%f63, %r56;
	mov.b32 	%r60, %f31;
	// begin inline asm
	div.full.f32 %r59, %r60, %r52;
	// end inline asm
	mov.b32 	%f64, %r59;
	.loc	1 52 20                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:52:20
	fma.rn.f32 	%f65, %f61, %f60, %f56;
	fma.rn.f32 	%f66, %f62, %f59, %f55;
	fma.rn.f32 	%f67, %f63, %f58, %f54;
	fma.rn.f32 	%f68, %f64, %f57, %f53;
	.loc	1 35 18                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:35:18
	mov.b32 	%r62, %f6;
	mov.b32 	%r65, %f12;
	.loc	1 53 47                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:53:47
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r62, %r63, %r64, %r65 };
	// end inline asm
	.loc	1 54 4                          // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:54:4
	bar.sync 	0;
	.loc	1 55 28                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:55:28
	mul.wide.s32 	%rd18, %r104, 4;
	add.s64 	%rd6, %rd10, %rd18;
	.loc	1 55 39                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:55:39
	and.b32  	%r105, %r73, 248;
	setp.eq.s32 	%p29, %r105, 0;
	and.pred  	%p24, %p29, %p28;
	// begin inline asm
	@%p24 st.global.b32 [ %rd6 + 0 ], { %r66 };
	// end inline asm
	.loc	1 56 4                          // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:56:4
	bar.sync 	0;
	.loc	1 57 28                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:57:28
	add.s64 	%rd7, %rd11, %rd18;
	.loc	1 57 40                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:57:40
	mov.b32 	%r67, %f51;
	// begin inline asm
	@%p24 st.global.b32 [ %rd7 + 0 ], { %r67 };
	// end inline asm
	.loc	1 58 25                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:58:25
	add.s64 	%rd8, %rd15, %rd16;
	.loc	1 58 45                         // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:58:45
	mov.b32 	%r68, %f65;
	mov.b32 	%r69, %f66;
	mov.b32 	%r70, %f67;
	mov.b32 	%r71, %f68;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd8 + 0 ], { %r68, %r69, %r70, %r71 };
	// end inline asm
	.loc	1 58 4                          // crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py:58:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rr/crrzwwb64e3al7r3mg2qszdo6usuq5oppr4blgn5egzl4f2dxmmo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 229                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xde DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 114
.b8 122
.b8 119
.b8 119
.b8 98
.b8 54
.b8 52
.b8 101
.b8 51
.b8 97
.b8 108
.b8 55
.b8 114
.b8 51
.b8 109
.b8 103
.b8 50
.b8 113
.b8 115
.b8 122
.b8 100
.b8 111
.b8 54
.b8 117
.b8 115
.b8 117
.b8 113
.b8 53
.b8 111
.b8 112
.b8 112
.b8 114
.b8 52
.b8 98
.b8 108
.b8 103
.b8 110
.b8 53
.b8 101
.b8 103
.b8 122
.b8 108
.b8 52
.b8 102
.b8 50
.b8 100
.b8 120
.b8 109
.b8 109
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
