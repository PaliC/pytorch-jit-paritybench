; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_cat_15(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %12 = shl i32 %11, 10, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 2, !dbg !12
  %15 = and i32 %14, 508, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %17 = or disjoint i32 %16, 1, !dbg !13
  %18 = or disjoint i32 %16, 2, !dbg !13
  %19 = or disjoint i32 %16, 3, !dbg !13
  %20 = or disjoint i32 %16, 512, !dbg !13
  %.frozen = freeze i32 %16, !dbg !14
  %21 = sdiv i32 %.frozen, 256, !dbg !14
  %22 = sdiv i32 %20, 256, !dbg !14
  %23 = srem i32 %21, 320, !dbg !15
  %24 = srem i32 %22, 320, !dbg !15
  %25 = mul i32 %21, 256, !dbg !16
  %.decomposed = sub i32 %.frozen, %25, !dbg !16
  %26 = srem i32 %17, 256, !dbg !16
  %27 = srem i32 %18, 256, !dbg !16
  %28 = srem i32 %19, 256, !dbg !16
  %29 = sdiv i32 %16, 81920, !dbg !17
  %30 = sdiv i32 %20, 81920, !dbg !17
  %31 = icmp slt i32 %23, 64, !dbg !18
  %32 = icmp slt i32 %24, 64, !dbg !18
  %33 = shl nsw i32 %.decomposed, 6, !dbg !19
  %34 = shl nsw i32 %26, 6, !dbg !19
  %35 = shl nsw i32 %27, 6, !dbg !19
  %36 = shl nsw i32 %28, 6, !dbg !19
  %37 = shl nsw i32 %29, 14, !dbg !20
  %38 = shl nsw i32 %30, 14, !dbg !20
  %39 = add nsw i32 %23, %37, !dbg !21
  %40 = add nsw i32 %39, %33, !dbg !22
  %41 = add nsw i32 %39, %34, !dbg !22
  %42 = add nsw i32 %39, %35, !dbg !22
  %43 = add nsw i32 %39, %36, !dbg !22
  %44 = add nsw i32 %24, %38, !dbg !21
  %45 = add nsw i32 %44, %33, !dbg !22
  %46 = add nsw i32 %44, %34, !dbg !22
  %47 = add nsw i32 %44, %35, !dbg !22
  %48 = add nsw i32 %44, %36, !dbg !22
  %49 = sext i32 %40 to i64, !dbg !23
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !23
  %51 = sext i32 %41 to i64, !dbg !23
  %52 = getelementptr float, ptr addrspace(1) %0, i64 %51, !dbg !23
  %53 = sext i32 %42 to i64, !dbg !23
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !23
  %55 = sext i32 %43 to i64, !dbg !23
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !23
  %57 = sext i32 %45 to i64, !dbg !23
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !23
  %59 = sext i32 %46 to i64, !dbg !23
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !23
  %61 = sext i32 %47 to i64, !dbg !23
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !23
  %63 = sext i32 %48 to i64, !dbg !23
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !23
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %31, i32 0, i1 %31) #3, !dbg !24
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %31, i32 0, i1 %31) #3, !dbg !24
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %31, i32 0, i1 %31) #3, !dbg !24
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %31, i32 0, i1 %31) #3, !dbg !24
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %32, i32 0, i1 %32) #3, !dbg !24
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %32, i32 0, i1 %32) #3, !dbg !24
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %32, i32 0, i1 %32) #3, !dbg !24
  %72 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %32, i32 0, i1 %32) #3, !dbg !24
  %73 = add nsw i32 %23, -64, !dbg !25
  %74 = icmp ult i32 %73, 128, !dbg !25
  %75 = add nsw i32 %24, -64, !dbg !25
  %76 = icmp ult i32 %75, 128, !dbg !25
  %77 = shl nsw i32 %.decomposed, 7, !dbg !26
  %78 = shl nsw i32 %26, 7, !dbg !26
  %79 = shl nsw i32 %27, 7, !dbg !26
  %80 = shl nsw i32 %28, 7, !dbg !26
  %81 = shl nsw i32 %29, 15, !dbg !27
  %82 = shl nsw i32 %30, 15, !dbg !27
  %83 = add nsw i32 %77, %81, !dbg !28
  %84 = add nsw i32 %81, %78, !dbg !28
  %85 = add nsw i32 %81, %79, !dbg !28
  %86 = add nsw i32 %81, %80, !dbg !28
  %87 = add nsw i32 %77, %82, !dbg !28
  %88 = add nsw i32 %78, %82, !dbg !28
  %89 = add nsw i32 %79, %82, !dbg !28
  %90 = add nsw i32 %80, %82, !dbg !28
  %91 = add nsw i32 %83, %73, !dbg !29
  %92 = add nsw i32 %84, %73, !dbg !29
  %93 = add nsw i32 %85, %73, !dbg !29
  %94 = add nsw i32 %86, %73, !dbg !29
  %95 = add nsw i32 %87, %75, !dbg !29
  %96 = add nsw i32 %88, %75, !dbg !29
  %97 = add nsw i32 %89, %75, !dbg !29
  %98 = add nsw i32 %90, %75, !dbg !29
  %99 = sext i32 %91 to i64, !dbg !30
  %100 = getelementptr float, ptr addrspace(1) %1, i64 %99, !dbg !30
  %101 = sext i32 %92 to i64, !dbg !30
  %102 = getelementptr float, ptr addrspace(1) %1, i64 %101, !dbg !30
  %103 = sext i32 %93 to i64, !dbg !30
  %104 = getelementptr float, ptr addrspace(1) %1, i64 %103, !dbg !30
  %105 = sext i32 %94 to i64, !dbg !30
  %106 = getelementptr float, ptr addrspace(1) %1, i64 %105, !dbg !30
  %107 = sext i32 %95 to i64, !dbg !30
  %108 = getelementptr float, ptr addrspace(1) %1, i64 %107, !dbg !30
  %109 = sext i32 %96 to i64, !dbg !30
  %110 = getelementptr float, ptr addrspace(1) %1, i64 %109, !dbg !30
  %111 = sext i32 %97 to i64, !dbg !30
  %112 = getelementptr float, ptr addrspace(1) %1, i64 %111, !dbg !30
  %113 = sext i32 %98 to i64, !dbg !30
  %114 = getelementptr float, ptr addrspace(1) %1, i64 %113, !dbg !30
  %115 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %100, i1 %74, i32 0, i1 %74) #3, !dbg !31
  %116 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %102, i1 %74, i32 0, i1 %74) #3, !dbg !31
  %117 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %104, i1 %74, i32 0, i1 %74) #3, !dbg !31
  %118 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %106, i1 %74, i32 0, i1 %74) #3, !dbg !31
  %119 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %108, i1 %76, i32 0, i1 %76) #3, !dbg !31
  %120 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %110, i1 %76, i32 0, i1 %76) #3, !dbg !31
  %121 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %112, i1 %76, i32 0, i1 %76) #3, !dbg !31
  %122 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %114, i1 %76, i32 0, i1 %76) #3, !dbg !31
  %123 = icmp sgt i32 %23, 191, !dbg !32
  %124 = icmp sgt i32 %24, 191, !dbg !32
  %125 = add nsw i32 %23, -192, !dbg !33
  %126 = add nsw i32 %24, -192, !dbg !33
  %127 = add nsw i32 %83, %125, !dbg !34
  %128 = add nsw i32 %84, %125, !dbg !34
  %129 = add nsw i32 %85, %125, !dbg !34
  %130 = add nsw i32 %86, %125, !dbg !34
  %131 = add nsw i32 %87, %126, !dbg !34
  %132 = add nsw i32 %88, %126, !dbg !34
  %133 = add nsw i32 %89, %126, !dbg !34
  %134 = add nsw i32 %90, %126, !dbg !34
  %135 = sext i32 %127 to i64, !dbg !35
  %136 = getelementptr float, ptr addrspace(1) %2, i64 %135, !dbg !35
  %137 = sext i32 %128 to i64, !dbg !35
  %138 = getelementptr float, ptr addrspace(1) %2, i64 %137, !dbg !35
  %139 = sext i32 %129 to i64, !dbg !35
  %140 = getelementptr float, ptr addrspace(1) %2, i64 %139, !dbg !35
  %141 = sext i32 %130 to i64, !dbg !35
  %142 = getelementptr float, ptr addrspace(1) %2, i64 %141, !dbg !35
  %143 = sext i32 %131 to i64, !dbg !35
  %144 = getelementptr float, ptr addrspace(1) %2, i64 %143, !dbg !35
  %145 = sext i32 %132 to i64, !dbg !35
  %146 = getelementptr float, ptr addrspace(1) %2, i64 %145, !dbg !35
  %147 = sext i32 %133 to i64, !dbg !35
  %148 = getelementptr float, ptr addrspace(1) %2, i64 %147, !dbg !35
  %149 = sext i32 %134 to i64, !dbg !35
  %150 = getelementptr float, ptr addrspace(1) %2, i64 %149, !dbg !35
  %151 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %136, i1 %123, i32 0, i1 %123) #3, !dbg !36
  %152 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %138, i1 %123, i32 0, i1 %123) #3, !dbg !36
  %153 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %140, i1 %123, i32 0, i1 %123) #3, !dbg !36
  %154 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %142, i1 %123, i32 0, i1 %123) #3, !dbg !36
  %155 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %144, i1 %124, i32 0, i1 %124) #3, !dbg !36
  %156 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %146, i1 %124, i32 0, i1 %124) #3, !dbg !36
  %157 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %148, i1 %124, i32 0, i1 %124) #3, !dbg !36
  %158 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %150, i1 %124, i32 0, i1 %124) #3, !dbg !36
  %159 = sext i32 %125 to i64, !dbg !37
  %160 = getelementptr float, ptr addrspace(1) %3, i64 %159, !dbg !37
  %161 = sext i32 %126 to i64, !dbg !37
  %162 = getelementptr float, ptr addrspace(1) %3, i64 %161, !dbg !37
  %163 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %160, i1 %123, i32 0, i1 %123) #3, !dbg !38
  %164 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %160, i1 %123, i32 0, i1 %123) #3, !dbg !38
  %165 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %160, i1 %123, i32 0, i1 %123) #3, !dbg !38
  %166 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %160, i1 %123, i32 0, i1 %123) #3, !dbg !38
  %167 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %162, i1 %124, i32 0, i1 %124) #3, !dbg !38
  %168 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %162, i1 %124, i32 0, i1 %124) #3, !dbg !38
  %169 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %162, i1 %124, i32 0, i1 %124) #3, !dbg !38
  %170 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %162, i1 %124, i32 0, i1 %124) #3, !dbg !38
  %171 = getelementptr float, ptr addrspace(1) %4, i64 %159, !dbg !39
  %172 = getelementptr float, ptr addrspace(1) %4, i64 %161, !dbg !39
  %173 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %171, i1 %123, i32 0, i1 %123) #3, !dbg !40
  %174 = bitcast i32 %173 to float, !dbg !40
  %175 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %171, i1 %123, i32 0, i1 %123) #3, !dbg !40
  %176 = bitcast i32 %175 to float, !dbg !40
  %177 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %171, i1 %123, i32 0, i1 %123) #3, !dbg !40
  %178 = bitcast i32 %177 to float, !dbg !40
  %179 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %171, i1 %123, i32 0, i1 %123) #3, !dbg !40
  %180 = bitcast i32 %179 to float, !dbg !40
  %181 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %172, i1 %124, i32 0, i1 %124) #3, !dbg !40
  %182 = bitcast i32 %181 to float, !dbg !40
  %183 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %172, i1 %124, i32 0, i1 %124) #3, !dbg !40
  %184 = bitcast i32 %183 to float, !dbg !40
  %185 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %172, i1 %124, i32 0, i1 %124) #3, !dbg !40
  %186 = bitcast i32 %185 to float, !dbg !40
  %187 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %172, i1 %124, i32 0, i1 %124) #3, !dbg !40
  %188 = bitcast i32 %187 to float, !dbg !40
  %189 = fadd float %174, 0x3EE4F8B580000000, !dbg !41
  %190 = fadd float %176, 0x3EE4F8B580000000, !dbg !41
  %191 = fadd float %178, 0x3EE4F8B580000000, !dbg !41
  %192 = fadd float %180, 0x3EE4F8B580000000, !dbg !41
  %193 = fadd float %182, 0x3EE4F8B580000000, !dbg !41
  %194 = fadd float %184, 0x3EE4F8B580000000, !dbg !41
  %195 = fadd float %186, 0x3EE4F8B580000000, !dbg !41
  %196 = fadd float %188, 0x3EE4F8B580000000, !dbg !41
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i = icmp eq i32 %197, 0, !dbg !42
  %198 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i = icmp eq i32 %198, 0, !dbg !42
  br i1 %.not.i, label %204, label %199, !dbg !42

199:                                              ; preds = %10
  br i1 %.not1.i, label %202, label %200, !dbg !42

200:                                              ; preds = %199
  %201 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %189) #3, !dbg !42
  br label %__nv_sqrtf.exit, !dbg !42

202:                                              ; preds = %199
  %203 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %189) #3, !dbg !42
  br label %__nv_sqrtf.exit, !dbg !42

204:                                              ; preds = %10
  br i1 %.not1.i, label %207, label %205, !dbg !42

205:                                              ; preds = %204
  %206 = tail call float @llvm.nvvm.sqrt.rn.f(float %189) #3, !dbg !42
  br label %__nv_sqrtf.exit, !dbg !42

207:                                              ; preds = %204
  %208 = tail call float @llvm.nvvm.sqrt.approx.f(float %189) #3, !dbg !42
  br label %__nv_sqrtf.exit, !dbg !42

__nv_sqrtf.exit:                                  ; preds = %200, %202, %205, %207
  %.0.i = phi float [ %201, %200 ], [ %203, %202 ], [ %206, %205 ], [ %208, %207 ], !dbg !42
  %209 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i1 = icmp eq i32 %209, 0, !dbg !42
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i4 = icmp eq i32 %210, 0, !dbg !42
  br i1 %.not.i1, label %216, label %211, !dbg !42

211:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %214, label %212, !dbg !42

212:                                              ; preds = %211
  %213 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %190) #3, !dbg !42
  br label %__nv_sqrtf.exit5, !dbg !42

214:                                              ; preds = %211
  %215 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %190) #3, !dbg !42
  br label %__nv_sqrtf.exit5, !dbg !42

216:                                              ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %219, label %217, !dbg !42

217:                                              ; preds = %216
  %218 = tail call float @llvm.nvvm.sqrt.rn.f(float %190) #3, !dbg !42
  br label %__nv_sqrtf.exit5, !dbg !42

219:                                              ; preds = %216
  %220 = tail call float @llvm.nvvm.sqrt.approx.f(float %190) #3, !dbg !42
  br label %__nv_sqrtf.exit5, !dbg !42

__nv_sqrtf.exit5:                                 ; preds = %212, %214, %217, %219
  %.0.i3 = phi float [ %213, %212 ], [ %215, %214 ], [ %218, %217 ], [ %220, %219 ], !dbg !42
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i6 = icmp eq i32 %221, 0, !dbg !42
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i9 = icmp eq i32 %222, 0, !dbg !42
  br i1 %.not.i6, label %228, label %223, !dbg !42

223:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %226, label %224, !dbg !42

224:                                              ; preds = %223
  %225 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %191) #3, !dbg !42
  br label %__nv_sqrtf.exit10, !dbg !42

226:                                              ; preds = %223
  %227 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %191) #3, !dbg !42
  br label %__nv_sqrtf.exit10, !dbg !42

228:                                              ; preds = %__nv_sqrtf.exit5
  br i1 %.not1.i9, label %231, label %229, !dbg !42

229:                                              ; preds = %228
  %230 = tail call float @llvm.nvvm.sqrt.rn.f(float %191) #3, !dbg !42
  br label %__nv_sqrtf.exit10, !dbg !42

231:                                              ; preds = %228
  %232 = tail call float @llvm.nvvm.sqrt.approx.f(float %191) #3, !dbg !42
  br label %__nv_sqrtf.exit10, !dbg !42

__nv_sqrtf.exit10:                                ; preds = %224, %226, %229, %231
  %.0.i8 = phi float [ %225, %224 ], [ %227, %226 ], [ %230, %229 ], [ %232, %231 ], !dbg !42
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i11 = icmp eq i32 %233, 0, !dbg !42
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i14 = icmp eq i32 %234, 0, !dbg !42
  br i1 %.not.i11, label %240, label %235, !dbg !42

235:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %238, label %236, !dbg !42

236:                                              ; preds = %235
  %237 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %192) #3, !dbg !42
  br label %__nv_sqrtf.exit15, !dbg !42

238:                                              ; preds = %235
  %239 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %192) #3, !dbg !42
  br label %__nv_sqrtf.exit15, !dbg !42

240:                                              ; preds = %__nv_sqrtf.exit10
  br i1 %.not1.i14, label %243, label %241, !dbg !42

241:                                              ; preds = %240
  %242 = tail call float @llvm.nvvm.sqrt.rn.f(float %192) #3, !dbg !42
  br label %__nv_sqrtf.exit15, !dbg !42

243:                                              ; preds = %240
  %244 = tail call float @llvm.nvvm.sqrt.approx.f(float %192) #3, !dbg !42
  br label %__nv_sqrtf.exit15, !dbg !42

__nv_sqrtf.exit15:                                ; preds = %236, %238, %241, %243
  %.0.i13 = phi float [ %237, %236 ], [ %239, %238 ], [ %242, %241 ], [ %244, %243 ], !dbg !42
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i16 = icmp eq i32 %245, 0, !dbg !42
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i19 = icmp eq i32 %246, 0, !dbg !42
  br i1 %.not.i16, label %252, label %247, !dbg !42

247:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %250, label %248, !dbg !42

248:                                              ; preds = %247
  %249 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %193) #3, !dbg !42
  br label %__nv_sqrtf.exit20, !dbg !42

250:                                              ; preds = %247
  %251 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %193) #3, !dbg !42
  br label %__nv_sqrtf.exit20, !dbg !42

252:                                              ; preds = %__nv_sqrtf.exit15
  br i1 %.not1.i19, label %255, label %253, !dbg !42

253:                                              ; preds = %252
  %254 = tail call float @llvm.nvvm.sqrt.rn.f(float %193) #3, !dbg !42
  br label %__nv_sqrtf.exit20, !dbg !42

255:                                              ; preds = %252
  %256 = tail call float @llvm.nvvm.sqrt.approx.f(float %193) #3, !dbg !42
  br label %__nv_sqrtf.exit20, !dbg !42

__nv_sqrtf.exit20:                                ; preds = %248, %250, %253, %255
  %.0.i18 = phi float [ %249, %248 ], [ %251, %250 ], [ %254, %253 ], [ %256, %255 ], !dbg !42
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i21 = icmp eq i32 %257, 0, !dbg !42
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i24 = icmp eq i32 %258, 0, !dbg !42
  br i1 %.not.i21, label %264, label %259, !dbg !42

259:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %262, label %260, !dbg !42

260:                                              ; preds = %259
  %261 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %194) #3, !dbg !42
  br label %__nv_sqrtf.exit25, !dbg !42

262:                                              ; preds = %259
  %263 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %194) #3, !dbg !42
  br label %__nv_sqrtf.exit25, !dbg !42

264:                                              ; preds = %__nv_sqrtf.exit20
  br i1 %.not1.i24, label %267, label %265, !dbg !42

265:                                              ; preds = %264
  %266 = tail call float @llvm.nvvm.sqrt.rn.f(float %194) #3, !dbg !42
  br label %__nv_sqrtf.exit25, !dbg !42

267:                                              ; preds = %264
  %268 = tail call float @llvm.nvvm.sqrt.approx.f(float %194) #3, !dbg !42
  br label %__nv_sqrtf.exit25, !dbg !42

__nv_sqrtf.exit25:                                ; preds = %260, %262, %265, %267
  %.0.i23 = phi float [ %261, %260 ], [ %263, %262 ], [ %266, %265 ], [ %268, %267 ], !dbg !42
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i26 = icmp eq i32 %269, 0, !dbg !42
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i29 = icmp eq i32 %270, 0, !dbg !42
  br i1 %.not.i26, label %276, label %271, !dbg !42

271:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %274, label %272, !dbg !42

272:                                              ; preds = %271
  %273 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %195) #3, !dbg !42
  br label %__nv_sqrtf.exit30, !dbg !42

274:                                              ; preds = %271
  %275 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %195) #3, !dbg !42
  br label %__nv_sqrtf.exit30, !dbg !42

276:                                              ; preds = %__nv_sqrtf.exit25
  br i1 %.not1.i29, label %279, label %277, !dbg !42

277:                                              ; preds = %276
  %278 = tail call float @llvm.nvvm.sqrt.rn.f(float %195) #3, !dbg !42
  br label %__nv_sqrtf.exit30, !dbg !42

279:                                              ; preds = %276
  %280 = tail call float @llvm.nvvm.sqrt.approx.f(float %195) #3, !dbg !42
  br label %__nv_sqrtf.exit30, !dbg !42

__nv_sqrtf.exit30:                                ; preds = %272, %274, %277, %279
  %.0.i28 = phi float [ %273, %272 ], [ %275, %274 ], [ %278, %277 ], [ %280, %279 ], !dbg !42
  %281 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !42
  %.not.i31 = icmp eq i32 %281, 0, !dbg !42
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !42
  %.not1.i34 = icmp eq i32 %282, 0, !dbg !42
  br i1 %.not.i31, label %288, label %283, !dbg !42

283:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %286, label %284, !dbg !42

284:                                              ; preds = %283
  %285 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %196) #3, !dbg !42
  br label %__nv_sqrtf.exit35, !dbg !42

286:                                              ; preds = %283
  %287 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %196) #3, !dbg !42
  br label %__nv_sqrtf.exit35, !dbg !42

288:                                              ; preds = %__nv_sqrtf.exit30
  br i1 %.not1.i34, label %291, label %289, !dbg !42

289:                                              ; preds = %288
  %290 = tail call float @llvm.nvvm.sqrt.rn.f(float %196) #3, !dbg !42
  br label %__nv_sqrtf.exit35, !dbg !42

291:                                              ; preds = %288
  %292 = tail call float @llvm.nvvm.sqrt.approx.f(float %196) #3, !dbg !42
  br label %__nv_sqrtf.exit35, !dbg !42

__nv_sqrtf.exit35:                                ; preds = %284, %286, %289, %291
  %.0.i33 = phi float [ %285, %284 ], [ %287, %286 ], [ %290, %289 ], [ %292, %291 ], !dbg !42
  %293 = bitcast i32 %158 to float, !dbg !36
  %294 = bitcast i32 %170 to float, !dbg !38
  %295 = fsub float %293, %294, !dbg !43
  %296 = bitcast i32 %157 to float, !dbg !36
  %297 = bitcast i32 %169 to float, !dbg !38
  %298 = fsub float %296, %297, !dbg !43
  %299 = bitcast i32 %156 to float, !dbg !36
  %300 = bitcast i32 %168 to float, !dbg !38
  %301 = fsub float %299, %300, !dbg !43
  %302 = bitcast i32 %155 to float, !dbg !36
  %303 = bitcast i32 %167 to float, !dbg !38
  %304 = fsub float %302, %303, !dbg !43
  %305 = bitcast i32 %154 to float, !dbg !36
  %306 = bitcast i32 %166 to float, !dbg !38
  %307 = fsub float %305, %306, !dbg !43
  %308 = bitcast i32 %153 to float, !dbg !36
  %309 = bitcast i32 %165 to float, !dbg !38
  %310 = fsub float %308, %309, !dbg !43
  %311 = bitcast i32 %152 to float, !dbg !36
  %312 = bitcast i32 %164 to float, !dbg !38
  %313 = fsub float %311, %312, !dbg !43
  %314 = bitcast i32 %151 to float, !dbg !36
  %315 = bitcast i32 %163 to float, !dbg !38
  %316 = fsub float %314, %315, !dbg !43
  %317 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !44
  %318 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !44
  %319 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i8) #3, !dbg !44
  %320 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i13) #3, !dbg !44
  %321 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i18) #3, !dbg !44
  %322 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i23) #3, !dbg !44
  %323 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i28) #3, !dbg !44
  %324 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i33) #3, !dbg !44
  %325 = fmul float %316, %317, !dbg !45
  %326 = fmul float %313, %318, !dbg !45
  %327 = fmul float %310, %319, !dbg !45
  %328 = fmul float %307, %320, !dbg !45
  %329 = fmul float %304, %321, !dbg !45
  %330 = fmul float %301, %322, !dbg !45
  %331 = fmul float %298, %323, !dbg !45
  %332 = fmul float %295, %324, !dbg !45
  %333 = getelementptr float, ptr addrspace(1) %5, i64 %159, !dbg !46
  %334 = getelementptr float, ptr addrspace(1) %5, i64 %161, !dbg !46
  %335 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %333, i1 %123, i32 0, i1 %123) #3, !dbg !47
  %336 = bitcast i32 %335 to float, !dbg !47
  %337 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %333, i1 %123, i32 0, i1 %123) #3, !dbg !47
  %338 = bitcast i32 %337 to float, !dbg !47
  %339 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %333, i1 %123, i32 0, i1 %123) #3, !dbg !47
  %340 = bitcast i32 %339 to float, !dbg !47
  %341 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %333, i1 %123, i32 0, i1 %123) #3, !dbg !47
  %342 = bitcast i32 %341 to float, !dbg !47
  %343 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %334, i1 %124, i32 0, i1 %124) #3, !dbg !47
  %344 = bitcast i32 %343 to float, !dbg !47
  %345 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %334, i1 %124, i32 0, i1 %124) #3, !dbg !47
  %346 = bitcast i32 %345 to float, !dbg !47
  %347 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %334, i1 %124, i32 0, i1 %124) #3, !dbg !47
  %348 = bitcast i32 %347 to float, !dbg !47
  %349 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %334, i1 %124, i32 0, i1 %124) #3, !dbg !47
  %350 = bitcast i32 %349 to float, !dbg !47
  %351 = fmul float %325, %336, !dbg !48
  %352 = fmul float %326, %338, !dbg !48
  %353 = fmul float %327, %340, !dbg !48
  %354 = fmul float %328, %342, !dbg !48
  %355 = fmul float %329, %344, !dbg !48
  %356 = fmul float %330, %346, !dbg !48
  %357 = fmul float %331, %348, !dbg !48
  %358 = fmul float %332, %350, !dbg !48
  %359 = getelementptr float, ptr addrspace(1) %6, i64 %159, !dbg !49
  %360 = getelementptr float, ptr addrspace(1) %6, i64 %161, !dbg !49
  %361 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %359, i1 %123, i32 0, i1 %123) #3, !dbg !50
  %362 = bitcast i32 %361 to float, !dbg !50
  %363 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %359, i1 %123, i32 0, i1 %123) #3, !dbg !50
  %364 = bitcast i32 %363 to float, !dbg !50
  %365 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %359, i1 %123, i32 0, i1 %123) #3, !dbg !50
  %366 = bitcast i32 %365 to float, !dbg !50
  %367 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %359, i1 %123, i32 0, i1 %123) #3, !dbg !50
  %368 = bitcast i32 %367 to float, !dbg !50
  %369 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %360, i1 %124, i32 0, i1 %124) #3, !dbg !50
  %370 = bitcast i32 %369 to float, !dbg !50
  %371 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %360, i1 %124, i32 0, i1 %124) #3, !dbg !50
  %372 = bitcast i32 %371 to float, !dbg !50
  %373 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %360, i1 %124, i32 0, i1 %124) #3, !dbg !50
  %374 = bitcast i32 %373 to float, !dbg !50
  %375 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %360, i1 %124, i32 0, i1 %124) #3, !dbg !50
  %376 = bitcast i32 %375 to float, !dbg !50
  %377 = fadd float %351, %362, !dbg !51
  %378 = fadd float %352, %364, !dbg !51
  %379 = fadd float %353, %366, !dbg !51
  %380 = fadd float %354, %368, !dbg !51
  %381 = fadd float %355, %370, !dbg !51
  %382 = fadd float %356, %372, !dbg !51
  %383 = fadd float %357, %374, !dbg !51
  %384 = fadd float %358, %376, !dbg !51
  %385 = getelementptr float, ptr addrspace(1) %7, i64 %135, !dbg !52
  %386 = getelementptr float, ptr addrspace(1) %7, i64 %137, !dbg !52
  %387 = getelementptr float, ptr addrspace(1) %7, i64 %139, !dbg !52
  %388 = getelementptr float, ptr addrspace(1) %7, i64 %141, !dbg !52
  %389 = getelementptr float, ptr addrspace(1) %7, i64 %143, !dbg !52
  %390 = getelementptr float, ptr addrspace(1) %7, i64 %145, !dbg !52
  %391 = getelementptr float, ptr addrspace(1) %7, i64 %147, !dbg !52
  %392 = getelementptr float, ptr addrspace(1) %7, i64 %149, !dbg !52
  %393 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %385, i1 %123, i32 0, i1 %123) #3, !dbg !53
  %394 = bitcast i32 %393 to float, !dbg !53
  %395 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %386, i1 %123, i32 0, i1 %123) #3, !dbg !53
  %396 = bitcast i32 %395 to float, !dbg !53
  %397 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %387, i1 %123, i32 0, i1 %123) #3, !dbg !53
  %398 = bitcast i32 %397 to float, !dbg !53
  %399 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %388, i1 %123, i32 0, i1 %123) #3, !dbg !53
  %400 = bitcast i32 %399 to float, !dbg !53
  %401 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %389, i1 %124, i32 0, i1 %124) #3, !dbg !53
  %402 = bitcast i32 %401 to float, !dbg !53
  %403 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %390, i1 %124, i32 0, i1 %124) #3, !dbg !53
  %404 = bitcast i32 %403 to float, !dbg !53
  %405 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %391, i1 %124, i32 0, i1 %124) #3, !dbg !53
  %406 = bitcast i32 %405 to float, !dbg !53
  %407 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %392, i1 %124, i32 0, i1 %124) #3, !dbg !53
  %408 = bitcast i32 %407 to float, !dbg !53
  %409 = fadd float %377, %394, !dbg !54
  %410 = fadd float %378, %396, !dbg !54
  %411 = fadd float %379, %398, !dbg !54
  %412 = fadd float %380, %400, !dbg !54
  %413 = fadd float %381, %402, !dbg !54
  %414 = fadd float %382, %404, !dbg !54
  %415 = fadd float %383, %406, !dbg !54
  %416 = fadd float %384, %408, !dbg !54
  %417 = sext i32 %16 to i64, !dbg !55
  %418 = getelementptr float, ptr addrspace(1) %8, i64 %417, !dbg !55
  %419 = sext i32 %20 to i64, !dbg !55
  %420 = getelementptr float, ptr addrspace(1) %8, i64 %419, !dbg !55
  %421 = bitcast float %409 to i32, !dbg !56
  %422 = select i1 %123, i32 %421, i32 0, !dbg !57
  %423 = select i1 %74, i32 %115, i32 %422, !dbg !58
  %424 = select i1 %31, i32 %65, i32 %423, !dbg !59
  %425 = bitcast float %410 to i32, !dbg !56
  %426 = select i1 %123, i32 %425, i32 0, !dbg !57
  %427 = select i1 %74, i32 %116, i32 %426, !dbg !58
  %428 = select i1 %31, i32 %66, i32 %427, !dbg !59
  %429 = bitcast float %411 to i32, !dbg !56
  %430 = select i1 %123, i32 %429, i32 0, !dbg !57
  %431 = select i1 %74, i32 %117, i32 %430, !dbg !58
  %432 = select i1 %31, i32 %67, i32 %431, !dbg !59
  %433 = bitcast float %412 to i32, !dbg !56
  %434 = select i1 %123, i32 %433, i32 0, !dbg !57
  %435 = select i1 %74, i32 %118, i32 %434, !dbg !58
  %436 = select i1 %31, i32 %68, i32 %435, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %424, i32 %428, i32 %432, i32 %436, ptr addrspace(1) %418, i1 true) #3, !dbg !56
  %437 = bitcast float %413 to i32, !dbg !56
  %438 = select i1 %124, i32 %437, i32 0, !dbg !57
  %439 = select i1 %76, i32 %119, i32 %438, !dbg !58
  %440 = select i1 %32, i32 %69, i32 %439, !dbg !59
  %441 = bitcast float %414 to i32, !dbg !56
  %442 = select i1 %124, i32 %441, i32 0, !dbg !57
  %443 = select i1 %76, i32 %120, i32 %442, !dbg !58
  %444 = select i1 %32, i32 %70, i32 %443, !dbg !59
  %445 = bitcast float %415 to i32, !dbg !56
  %446 = select i1 %124, i32 %445, i32 0, !dbg !57
  %447 = select i1 %76, i32 %121, i32 %446, !dbg !58
  %448 = select i1 %32, i32 %71, i32 %447, !dbg !59
  %449 = bitcast float %416 to i32, !dbg !56
  %450 = select i1 %124, i32 %449, i32 0, !dbg !57
  %451 = select i1 %76, i32 %122, i32 %450, !dbg !58
  %452 = select i1 %32, i32 %72, i32 %451, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %440, i32 %444, i32 %448, i32 %452, ptr addrspace(1) %420, i1 true) #3, !dbg !56
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxqfddqnja7ltsw4gem4qynpptfgmahbnhmyaosu3bo5moy2udxh.py", directory: "inductor_cache/xq")
!4 = !{ptr @triton_poi_fused_cat_15, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_15, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_15", linkageName: "triton_poi_fused_cat_15", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 33, scope: !7)
!20 = !DILocation(line: 33, column: 44, scope: !7)
!21 = !DILocation(line: 33, column: 38, scope: !7)
!22 = !DILocation(line: 33, column: 50, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 56, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 35, scope: !7)
!27 = !DILocation(line: 38, column: 46, scope: !7)
!28 = !DILocation(line: 38, column: 40, scope: !7)
!29 = !DILocation(line: 38, column: 52, scope: !7)
!30 = !DILocation(line: 38, column: 31, scope: !7)
!31 = !DILocation(line: 38, column: 66, scope: !7)
!32 = !DILocation(line: 39, column: 20, scope: !7)
!33 = !DILocation(line: 42, column: 61, scope: !7)
!34 = !DILocation(line: 42, column: 52, scope: !7)
!35 = !DILocation(line: 42, column: 31, scope: !7)
!36 = !DILocation(line: 42, column: 67, scope: !7)
!37 = !DILocation(line: 43, column: 31, scope: !7)
!38 = !DILocation(line: 43, column: 45, scope: !7)
!39 = !DILocation(line: 45, column: 31, scope: !7)
!40 = !DILocation(line: 45, column: 45, scope: !7)
!41 = !DILocation(line: 47, column: 20, scope: !7)
!42 = !DILocation(line: 48, column: 27, scope: !7)
!43 = !DILocation(line: 44, column: 20, scope: !7)
!44 = !DILocation(line: 50, column: 20, scope: !7)
!45 = !DILocation(line: 53, column: 20, scope: !7)
!46 = !DILocation(line: 54, column: 31, scope: !7)
!47 = !DILocation(line: 54, column: 45, scope: !7)
!48 = !DILocation(line: 55, column: 20, scope: !7)
!49 = !DILocation(line: 56, column: 31, scope: !7)
!50 = !DILocation(line: 56, column: 45, scope: !7)
!51 = !DILocation(line: 57, column: 20, scope: !7)
!52 = !DILocation(line: 58, column: 31, scope: !7)
!53 = !DILocation(line: 58, column: 67, scope: !7)
!54 = !DILocation(line: 59, column: 20, scope: !7)
!55 = !DILocation(line: 64, column: 25, scope: !7)
!56 = !DILocation(line: 64, column: 37, scope: !7)
!57 = !DILocation(line: 61, column: 35, scope: !7)
!58 = !DILocation(line: 62, column: 34, scope: !7)
!59 = !DILocation(line: 63, column: 33, scope: !7)
!60 = !DILocation(line: 64, column: 4, scope: !7)
