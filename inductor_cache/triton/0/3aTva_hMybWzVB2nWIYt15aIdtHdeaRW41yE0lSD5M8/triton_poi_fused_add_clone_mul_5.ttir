#loc = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0)
module {
  tt.func public @triton_poi_fused_add_clone_mul_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0), %arg6: i32 loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4> : tensor<1x32xi32> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<4x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<4x1xi32> loc(#loc1)
    %cst_2 = arith.constant dense<12> : tensor<1x32xi32> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<4x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<4x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<1x32xi32> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<4x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<1x32xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x32xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x32xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_7 : tensor<1x32xi32> loc(#loc7)
    %7 = tt.get_program_id x : i32 loc(#loc8)
    %8 = arith.muli %7, %c4_i32 : i32 loc(#loc9)
    %9 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc10)
    %10 = tt.expand_dims %9 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc11)
    %11 = tt.splat %8 : i32 -> tensor<4x1xi32> loc(#loc12)
    %12 = arith.addi %11, %10 : tensor<4x1xi32> loc(#loc12)
    %13 = arith.cmpi slt, %12, %cst_6 : tensor<4x1xi32> loc(#loc13)
    %14 = arith.remsi %5, %cst_5 : tensor<1x32xi32> loc(#loc14)
    %15 = arith.divsi %5, %cst_5 : tensor<1x32xi32> loc(#loc15)
    %16 = arith.muli %12, %cst_4 : tensor<4x1xi32> loc(#loc16)
    %17 = tt.broadcast %14 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc17)
    %18 = tt.broadcast %16 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc17)
    %19 = arith.addi %17, %18 : tensor<4x32xi32> loc(#loc17)
    %20 = arith.muli %15, %cst_7 : tensor<1x32xi32> loc(#loc18)
    %21 = tt.broadcast %20 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc19)
    %22 = arith.addi %19, %21 : tensor<4x32xi32> loc(#loc19)
    %23 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc20)
    %24 = tt.addptr %23, %22 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc20)
    %25 = tt.broadcast %13 : tensor<4x1xi1> -> tensor<4x32xi1> loc(#loc21)
    %26 = tt.broadcast %6 : tensor<1x32xi1> -> tensor<4x32xi1> loc(#loc21)
    %27 = arith.andi %25, %26 : tensor<4x32xi1> loc(#loc21)
    %28 = tt.load %24, %27 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc22)
    %29 = arith.muli %12, %cst_3 : tensor<4x1xi32> loc(#loc23)
    %30 = arith.muli %15, %cst_2 : tensor<1x32xi32> loc(#loc24)
    %31 = tt.broadcast %29 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc25)
    %32 = tt.broadcast %30 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc25)
    %33 = arith.addi %31, %32 : tensor<4x32xi32> loc(#loc25)
    %34 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc26)
    %35 = tt.addptr %34, %33 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc26)
    %36 = tt.load %35, %27 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc27)
    %37 = arith.addi %29, %cst_1 : tensor<4x1xi32> loc(#loc28)
    %38 = tt.broadcast %37 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc29)
    %39 = arith.addi %38, %32 : tensor<4x32xi32> loc(#loc29)
    %40 = tt.addptr %34, %39 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc30)
    %41 = tt.load %40, %27 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc31)
    %42 = arith.addi %29, %cst_0 : tensor<4x1xi32> loc(#loc32)
    %43 = tt.broadcast %42 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc33)
    %44 = arith.addi %43, %32 : tensor<4x32xi32> loc(#loc33)
    %45 = tt.addptr %34, %44 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc34)
    %46 = tt.load %45, %27 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc35)
    %47 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc36)
    %48 = tt.addptr %47, %22 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc36)
    %49 = tt.load %48, %27 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc37)
    %50 = arith.muli %5, %cst : tensor<1x32xi32> loc(#loc38)
    %51 = tt.broadcast %12 : tensor<4x1xi32> -> tensor<4x32xi32> loc(#loc39)
    %52 = tt.broadcast %50 : tensor<1x32xi32> -> tensor<4x32xi32> loc(#loc39)
    %53 = arith.addi %51, %52 : tensor<4x32xi32> loc(#loc39)
    %54 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc40)
    %55 = tt.addptr %54, %53 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc40)
    %56 = tt.load %55, %27 evictionPolicy = evict_last : tensor<4x32x!tt.ptr<f32>> loc(#loc41)
    %57 = arith.cmpf ogt, %36, %41 : tensor<4x32xf32> loc(#loc67)
    %58 = arith.cmpf une, %36, %36 : tensor<4x32xf32> loc(#loc68)
    %59 = arith.ori %57, %58 : tensor<4x32xi1> loc(#loc69)
    %60 = arith.select %59, %36, %41 : tensor<4x32xi1>, tensor<4x32xf32> loc(#loc70)
    %61 = arith.cmpf ogt, %60, %46 : tensor<4x32xf32> loc(#loc71)
    %62 = arith.cmpf une, %60, %60 : tensor<4x32xf32> loc(#loc72)
    %63 = arith.ori %61, %62 : tensor<4x32xi1> loc(#loc73)
    %64 = arith.select %63, %60, %46 : tensor<4x32xi1>, tensor<4x32xf32> loc(#loc74)
    %65 = arith.subf %36, %64 : tensor<4x32xf32> loc(#loc48)
    %66 = math.exp %65 : tensor<4x32xf32> loc(#loc49)
    %67 = arith.subf %41, %64 : tensor<4x32xf32> loc(#loc50)
    %68 = math.exp %67 : tensor<4x32xf32> loc(#loc51)
    %69 = arith.addf %66, %68 : tensor<4x32xf32> loc(#loc52)
    %70 = arith.subf %46, %64 : tensor<4x32xf32> loc(#loc53)
    %71 = math.exp %70 : tensor<4x32xf32> loc(#loc54)
    %72 = arith.addf %69, %71 : tensor<4x32xf32> loc(#loc55)
    %73 = arith.divf %66, %72 : tensor<4x32xf32> loc(#loc56)
    %74 = arith.mulf %28, %73 : tensor<4x32xf32> loc(#loc57)
    %75 = arith.divf %68, %72 : tensor<4x32xf32> loc(#loc58)
    %76 = arith.mulf %49, %75 : tensor<4x32xf32> loc(#loc59)
    %77 = arith.addf %74, %76 : tensor<4x32xf32> loc(#loc60)
    %78 = arith.divf %71, %72 : tensor<4x32xf32> loc(#loc61)
    %79 = arith.mulf %56, %78 : tensor<4x32xf32> loc(#loc62)
    %80 = arith.addf %77, %79 : tensor<4x32xf32> loc(#loc63)
    %81 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<4x32x!tt.ptr<f32>> loc(#loc64)
    %82 = tt.addptr %81, %53 : tensor<4x32x!tt.ptr<f32>>, tensor<4x32xi32> loc(#loc64)
    tt.store %82, %80, %27 : tensor<4x32x!tt.ptr<f32>> loc(#loc65)
    tt.return loc(#loc66)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":22:28)
#loc3 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":22:33)
#loc4 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":23:36)
#loc5 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":23:44)
#loc6 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":23:23)
#loc7 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":24:21)
#loc8 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":25:28)
#loc9 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":25:33)
#loc10 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":26:36)
#loc11 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":26:44)
#loc12 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":26:23)
#loc13 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":27:21)
#loc14 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":29:19)
#loc15 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":30:19)
#loc16 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":32:38)
#loc17 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":32:35)
#loc18 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":32:46)
#loc19 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":32:43)
#loc20 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":32:30)
#loc21 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":32:59)
#loc22 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":32:51)
#loc23 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":33:32)
#loc24 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":33:40)
#loc25 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":33:37)
#loc26 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":33:30)
#loc27 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":33:45)
#loc28 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":34:34)
#loc29 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":34:41)
#loc30 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":34:30)
#loc31 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":34:49)
#loc32 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":35:34)
#loc33 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":35:41)
#loc34 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":35:30)
#loc35 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":35:49)
#loc36 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":36:31)
#loc37 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":36:52)
#loc38 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":37:38)
#loc39 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":37:36)
#loc40 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":37:31)
#loc41 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":37:43)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc43 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":38:40)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc47 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":39:40)
#loc48 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":40:18)
#loc49 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":41:23)
#loc50 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":42:18)
#loc51 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":43:23)
#loc52 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":44:19)
#loc53 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":45:19)
#loc54 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":46:24)
#loc55 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":47:20)
#loc56 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":48:19)
#loc57 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":49:19)
#loc58 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":50:19)
#loc59 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":51:20)
#loc60 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":52:20)
#loc61 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":53:20)
#loc62 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":54:20)
#loc63 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":55:20)
#loc64 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":56:25)
#loc65 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":56:44)
#loc66 = loc("inductor_cache/vs/cvsguahjzpdns3mrt65arqah2xnvrwosp6mgny2vojbbvvfnpoqt.py":56:4)
#loc67 = loc(callsite(#loc42 at #loc43))
#loc68 = loc(callsite(#loc44 at #loc43))
#loc69 = loc(callsite(#loc45 at #loc43))
#loc70 = loc(callsite(#loc46 at #loc43))
#loc71 = loc(callsite(#loc42 at #loc47))
#loc72 = loc(callsite(#loc44 at #loc47))
#loc73 = loc(callsite(#loc45 at #loc47))
#loc74 = loc(callsite(#loc46 at #loc47))
