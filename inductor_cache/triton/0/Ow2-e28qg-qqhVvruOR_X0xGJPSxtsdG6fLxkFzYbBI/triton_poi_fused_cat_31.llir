; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_31(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 896, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %15 = sdiv i32 %.frozen, 224, !dbg !15
  %16 = mul i32 %15, 224, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = srem i32 %13, 224, !dbg !16
  %18 = icmp slt i32 %.decomposed, 128, !dbg !17
  %19 = shl nsw i32 %15, 7, !dbg !18
  %.lhs.trunc = trunc nsw i32 %.decomposed to i16, !dbg !19
  %20 = srem i16 %.lhs.trunc, 128, !dbg !19
  %.sext = sext i16 %20 to i32, !dbg !19
  %.lhs.trunc1 = trunc nsw i32 %17 to i16, !dbg !19
  %21 = srem i16 %.lhs.trunc1, 128, !dbg !19
  %.sext2 = sext i16 %21 to i32, !dbg !19
  %22 = add nsw i32 %19, %.sext, !dbg !20
  %23 = add nsw i32 %19, %.sext2, !dbg !20
  %24 = sext i32 %22 to i64, !dbg !21
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !21
  %26 = sext i32 %23 to i64, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !21
  %28 = and i1 %14, %18, !dbg !22
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %28, i32 0, i1 %28) #1, !dbg !23
  %30 = bitcast i32 %29 to float, !dbg !23
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %28, i32 0, i1 %28) #1, !dbg !23
  %32 = bitcast i32 %31 to float, !dbg !23
  %33 = srem i16 %.lhs.trunc1, 2, !dbg !24
  %34 = sext i16 %33 to i64, !dbg !25
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !25
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %1, i1 %28, i32 0, i1 %28) #1, !dbg !26
  %37 = bitcast i32 %36 to float, !dbg !26
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %28, i32 0, i1 %28) #1, !dbg !26
  %39 = bitcast i32 %38 to float, !dbg !26
  %40 = fadd float %30, %37, !dbg !27
  %41 = fadd float %32, %39, !dbg !27
  %42 = icmp sgt i32 %.decomposed, 127, !dbg !28
  %43 = mul nsw i32 %15, 96, !dbg !29
  %44 = trunc nsw i32 %.decomposed to i16, !dbg !30
  %.lhs.trunc7 = add nsw i16 %44, -128, !dbg !30
  %45 = srem i16 %.lhs.trunc7, 96, !dbg !30
  %.sext8 = sext i16 %45 to i32, !dbg !30
  %46 = trunc nsw i32 %17 to i16, !dbg !30
  %.lhs.trunc9 = add nsw i16 %46, -128, !dbg !30
  %47 = srem i16 %.lhs.trunc9, 96, !dbg !30
  %.sext10 = sext i16 %47 to i32, !dbg !30
  %48 = add nsw i32 %43, %.sext8, !dbg !31
  %49 = add nsw i32 %43, %.sext10, !dbg !31
  %50 = sext i32 %48 to i64, !dbg !32
  %51 = getelementptr float, ptr addrspace(1) %2, i64 %50, !dbg !32
  %52 = sext i32 %49 to i64, !dbg !32
  %53 = getelementptr float, ptr addrspace(1) %2, i64 %52, !dbg !32
  %54 = and i1 %14, %42, !dbg !33
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %54, i32 0, i1 %54) #1, !dbg !34
  %56 = bitcast i32 %55 to float, !dbg !34
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %53, i1 %54, i32 0, i1 %54) #1, !dbg !34
  %58 = bitcast i32 %57 to float, !dbg !34
  %59 = srem i16 %.lhs.trunc7, 6, !dbg !35
  %60 = srem i16 %.lhs.trunc9, 6, !dbg !35
  %61 = sext i16 %59 to i64, !dbg !36
  %62 = getelementptr float, ptr addrspace(1) %3, i64 %61, !dbg !36
  %63 = sext i16 %60 to i64, !dbg !36
  %64 = getelementptr float, ptr addrspace(1) %3, i64 %63, !dbg !36
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %54, i32 0, i1 %54) #1, !dbg !37
  %66 = bitcast i32 %65 to float, !dbg !37
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %54, i32 0, i1 %54) #1, !dbg !37
  %68 = bitcast i32 %67 to float, !dbg !37
  %69 = fadd float %56, %66, !dbg !38
  %70 = fadd float %58, %68, !dbg !38
  %71 = select i1 %18, float %40, float %69, !dbg !39
  %72 = select i1 %18, float %41, float %70, !dbg !39
  %73 = sext i32 %12 to i64, !dbg !40
  %74 = getelementptr float, ptr addrspace(1) %4, i64 %73, !dbg !40
  %75 = bitcast float %71 to i32, !dbg !41
  %76 = bitcast float %72 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %75, i32 %76, ptr addrspace(1) %74, i1 %14) #1, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmqc6kuqunkt5hxhrkiobv32hgfgou46qfqi4whxezggycjz3dbg.py", directory: "inductor_cache/mq")
!4 = !{ptr @triton_poi_fused_cat_31, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_31, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_31", linkageName: "triton_poi_fused_cat_31", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 34, scope: !7)
!19 = !DILocation(line: 32, column: 48, scope: !7)
!20 = !DILocation(line: 32, column: 41, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 63, scope: !7)
!23 = !DILocation(line: 32, column: 56, scope: !7)
!24 = !DILocation(line: 33, column: 38, scope: !7)
!25 = !DILocation(line: 33, column: 31, scope: !7)
!26 = !DILocation(line: 33, column: 43, scope: !7)
!27 = !DILocation(line: 34, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 20, scope: !7)
!29 = !DILocation(line: 40, column: 34, scope: !7)
!30 = !DILocation(line: 40, column: 57, scope: !7)
!31 = !DILocation(line: 40, column: 41, scope: !7)
!32 = !DILocation(line: 40, column: 31, scope: !7)
!33 = !DILocation(line: 40, column: 72, scope: !7)
!34 = !DILocation(line: 40, column: 64, scope: !7)
!35 = !DILocation(line: 41, column: 48, scope: !7)
!36 = !DILocation(line: 41, column: 32, scope: !7)
!37 = !DILocation(line: 41, column: 53, scope: !7)
!38 = !DILocation(line: 42, column: 20, scope: !7)
!39 = !DILocation(line: 0, scope: !7)
!40 = !DILocation(line: 46, column: 25, scope: !7)
!41 = !DILocation(line: 46, column: 37, scope: !7)
!42 = !DILocation(line: 46, column: 4, scope: !7)
