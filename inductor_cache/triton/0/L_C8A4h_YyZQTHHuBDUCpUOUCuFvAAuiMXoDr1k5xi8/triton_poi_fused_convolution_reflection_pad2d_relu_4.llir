; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_reflection_pad2d_relu_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 2048, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 4, !dbg !15
  %14 = mul i32 %13, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %11, 4, !dbg !16
  %16 = srem i32 %13, 4, !dbg !17
  %17 = sdiv i32 %10, 16, !dbg !18
  %18 = srem i32 %17, 32, !dbg !19
  %19 = add nsw i32 %.decomposed, -1, !dbg !20
  %20 = add nsw i32 %15, -1, !dbg !20
  %21 = tail call i32 @llvm.abs.i32(i32 %19, i1 true), !dbg !21
  %22 = tail call i32 @llvm.abs.i32(i32 %20, i1 true), !dbg !21
  %23 = add nsw i32 %22, -1, !dbg !22
  %24 = tail call i32 @llvm.abs.i32(i32 %23, i1 true), !dbg !23
  %25 = add nsw i32 %16, -1, !dbg !24
  %26 = tail call i32 @llvm.abs.i32(i32 %25, i1 true), !dbg !25
  %27 = add nsw i32 %26, -1, !dbg !26
  %28 = tail call i32 @llvm.abs.i32(i32 %27, i1 true), !dbg !27
  %29 = mul nsw i32 %28, -2, !dbg !28
  %30 = shl nsw i32 %17, 2, !dbg !29
  %reass.sub = add nsw i32 %30, 4, !dbg !30
  %31 = sub nsw i32 %reass.sub, %21, !dbg !30
  %32 = add nsw i32 %31, %29, !dbg !31
  %reass.sub1 = or disjoint i32 %30, 3, !dbg !30
  %33 = sub nuw nsw i32 %reass.sub1, %24, !dbg !30
  %34 = add nsw i32 %33, %29, !dbg !31
  %35 = sext i32 %32 to i64, !dbg !32
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !32
  %37 = sext i32 %34 to i64, !dbg !32
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !32
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %12) #1, !dbg !33
  %40 = bitcast i32 %39 to float, !dbg !33
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %12) #1, !dbg !33
  %42 = bitcast i32 %41 to float, !dbg !33
  %43 = sext i32 %18 to i64, !dbg !34
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !34
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %12) #1, !dbg !35
  %46 = bitcast i32 %45 to float, !dbg !35
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %12) #1, !dbg !35
  %48 = bitcast i32 %47 to float, !dbg !35
  %49 = fadd float %40, %46, !dbg !36
  %50 = fadd float %42, %48, !dbg !36
  %51 = fcmp olt float %49, 0.000000e+00, !dbg !37
  %52 = fcmp olt float %50, 0.000000e+00, !dbg !37
  %53 = select i1 %51, float 0.000000e+00, float %49, !dbg !41
  %54 = select i1 %52, float 0.000000e+00, float %50, !dbg !41
  %55 = sext i32 %10 to i64, !dbg !42
  %56 = getelementptr float, ptr addrspace(1) %2, i64 %55, !dbg !42
  %57 = bitcast float %53 to i32, !dbg !43
  %58 = bitcast float %54 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %57, i32 %58, ptr addrspace(1) %56, i1 %12) #1, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crajwzs2oc4vgef6a3d4kihhae53xu52gzbqudvqblgurqb2rbip.py", directory: "inductor_cache/ra")
!4 = !{ptr @triton_poi_fused_convolution_reflection_pad2d_relu_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_reflection_pad2d_relu_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_reflection_pad2d_relu_4", linkageName: "triton_poi_fused_convolution_reflection_pad2d_relu_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 27, scope: !7)
!20 = !DILocation(line: 29, column: 78, scope: !7)
!21 = !DILocation(line: 29, column: 71, scope: !7)
!22 = !DILocation(line: 29, column: 59, scope: !7)
!23 = !DILocation(line: 29, column: 52, scope: !7)
!24 = !DILocation(line: 29, column: 130, scope: !7)
!25 = !DILocation(line: 29, column: 123, scope: !7)
!26 = !DILocation(line: 29, column: 111, scope: !7)
!27 = !DILocation(line: 29, column: 104, scope: !7)
!28 = !DILocation(line: 29, column: 92, scope: !7)
!29 = !DILocation(line: 29, column: 140, scope: !7)
!30 = !DILocation(line: 29, column: 87, scope: !7)
!31 = !DILocation(line: 29, column: 138, scope: !7)
!32 = !DILocation(line: 29, column: 30, scope: !7)
!33 = !DILocation(line: 29, column: 145, scope: !7)
!34 = !DILocation(line: 30, column: 30, scope: !7)
!35 = !DILocation(line: 30, column: 35, scope: !7)
!36 = !DILocation(line: 31, column: 18, scope: !7)
!37 = !DILocation(line: 118, column: 15, scope: !38, inlinedAt: !40)
!38 = distinct !DILexicalBlockFile(scope: !7, file: !39, discriminator: 0)
!39 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!40 = !DILocation(line: 33, column: 40, scope: !7)
!41 = !DILocation(line: 121, column: 29, scope: !38, inlinedAt: !40)
!42 = !DILocation(line: 34, column: 25, scope: !7)
!43 = !DILocation(line: 34, column: 36, scope: !7)
!44 = !DILocation(line: 34, column: 4, scope: !7)
