; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 7, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = and i32 %12, 127, !dbg !12
  %14 = or disjoint i32 %11, %13, !dbg !13
  %15 = icmp slt i32 %14, 256, !dbg !14
  %.frozen = freeze i32 %14, !dbg !15
  %16 = sdiv i32 %.frozen, 16, !dbg !15
  %17 = srem i32 %16, 4, !dbg !16
  %18 = mul i32 %16, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %18, !dbg !17
  %.frozen13 = freeze i32 %14, !dbg !18
  %19 = sdiv i32 %.frozen13, 64, !dbg !18
  %20 = sext i32 %17 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %15) #3, !dbg !20
  %23 = bitcast i32 %22 to float, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %4, i64 %20, !dbg !21
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %15) #3, !dbg !22
  %26 = bitcast i32 %25 to float, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %5, i64 %20, !dbg !23
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %15) #3, !dbg !24
  %29 = bitcast i32 %28 to float, !dbg !24
  %30 = getelementptr float, ptr addrspace(1) %6, i64 %20, !dbg !25
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %15) #3, !dbg !26
  %32 = bitcast i32 %31 to float, !dbg !26
  %33 = icmp slt i32 %17, 2, !dbg !27
  %34 = mul i32 %19, 64, !dbg !28
  %srem.decomposed = sub i32 %.frozen13, %34, !dbg !28
  %35 = shl nsw i32 %19, 5, !dbg !29
  %36 = add nsw i32 %35, %srem.decomposed, !dbg !30
  %37 = sext i32 %36 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !31
  %39 = and i1 %15, %33, !dbg !32
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %39, i32 0, i1 %39) #3, !dbg !33
  %41 = icmp sgt i32 %17, 1, !dbg !34
  %42 = shl nsw i32 %17, 4, !dbg !35
  %43 = add nsw i32 %.decomposed, -32, !dbg !35
  %44 = add nsw i32 %43, %35, !dbg !36
  %45 = add nsw i32 %44, %42, !dbg !37
  %46 = sext i32 %45 to i64, !dbg !38
  %47 = getelementptr float, ptr addrspace(1) %2, i64 %46, !dbg !38
  %48 = and i1 %15, %41, !dbg !39
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %47, i1 %48, i32 0, i1 %48) #3, !dbg !40
  %.v = select i1 %33, i32 %40, i32 %49, !dbg !41
  %50 = bitcast i32 %.v to float, !dbg !41
  %51 = fsub float %50, %23, !dbg !42
  %52 = fadd float %26, 0x3EE4F8B580000000, !dbg !43
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !44
  %.not.i = icmp eq i32 %53, 0, !dbg !44
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !44
  %.not1.i = icmp eq i32 %54, 0, !dbg !44
  br i1 %.not.i, label %60, label %55, !dbg !44

55:                                               ; preds = %9
  br i1 %.not1.i, label %58, label %56, !dbg !44

56:                                               ; preds = %55
  %57 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %52) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

58:                                               ; preds = %55
  %59 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %52) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

60:                                               ; preds = %9
  br i1 %.not1.i, label %63, label %61, !dbg !44

61:                                               ; preds = %60
  %62 = tail call float @llvm.nvvm.sqrt.rn.f(float %52) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

63:                                               ; preds = %60
  %64 = tail call float @llvm.nvvm.sqrt.approx.f(float %52) #3, !dbg !44
  br label %__nv_sqrtf.exit, !dbg !44

__nv_sqrtf.exit:                                  ; preds = %56, %58, %61, %63
  %.0.i = phi float [ %57, %56 ], [ %59, %58 ], [ %62, %61 ], [ %64, %63 ], !dbg !44
  %65 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !45
  %66 = fmul float %51, %65, !dbg !46
  %67 = fmul float %66, %29, !dbg !47
  %68 = fadd float %67, %32, !dbg !48
  %69 = fcmp ogt float %68, 2.000000e+01, !dbg !49
  %70 = fmul float %68, 0x3FF7154760000000, !dbg !50
  %71 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %70) #3, !dbg !50
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not.i5 = icmp eq i32 %72, 0, !dbg !51
  %73 = tail call float @llvm.nvvm.add.rz.ftz.f(float %71, float 1.000000e+00) #3, !dbg !51
  %74 = tail call float @llvm.nvvm.add.rz.f(float %71, float 1.000000e+00) #3, !dbg !51
  %.01.i6 = select i1 %.not.i5, float %74, float %73, !dbg !51
  %75 = bitcast float %.01.i6 to i32, !dbg !51
  %76 = add i32 %75, -1061158912, !dbg !51
  %77 = and i32 %76, -8388608, !dbg !51
  %78 = bitcast float %71 to i32, !dbg !51
  %79 = sub i32 %78, %77, !dbg !51
  %80 = bitcast i32 %79 to float, !dbg !51
  %81 = sub i32 1082130432, %77, !dbg !51
  %82 = bitcast i32 %81 to float, !dbg !51
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not14.i = icmp eq i32 %83, 0, !dbg !51
  %84 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %82, float -1.000000e+00) #3, !dbg !51
  %85 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %82, float -1.000000e+00) #3, !dbg !51
  %.09.i = select i1 %.not14.i, float %85, float %84, !dbg !51
  %86 = fadd float %.09.i, %80, !dbg !51
  %87 = sitofp i32 %77 to float, !dbg !51
  %88 = fmul float %87, 0x3E80000000000000, !dbg !51
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not15.i = icmp eq i32 %89, 0, !dbg !51
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %86, float 0x3FBB000240000000) #3, !dbg !51
  %91 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %86, float 0x3FBB000240000000) #3, !dbg !51
  %.012.i = select i1 %.not15.i, float %91, float %90, !dbg !51
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not16.i = icmp eq i32 %92, 0, !dbg !51
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %86, float 0xBFC0EF1C00000000) #3, !dbg !51
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %86, float 0xBFC0EF1C00000000) #3, !dbg !51
  %.010.i = select i1 %.not16.i, float %94, float %93, !dbg !51
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not17.i = icmp eq i32 %95, 0, !dbg !51
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %86, float 0x3FC28C8EA0000000) #3, !dbg !51
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %86, float 0x3FC28C8EA0000000) #3, !dbg !51
  %.06.i7 = select i1 %.not17.i, float %97, float %96, !dbg !51
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not18.i = icmp eq i32 %98, 0, !dbg !51
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i7, float %86, float 0xBFC54D1BA0000000) #3, !dbg !51
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i7, float %86, float 0xBFC54D1BA0000000) #3, !dbg !51
  %.02.i8 = select i1 %.not18.i, float %100, float %99, !dbg !51
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not19.i = icmp eq i32 %101, 0, !dbg !51
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i8, float %86, float 0x3FC995F3C0000000) #3, !dbg !51
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i8, float %86, float 0x3FC995F3C0000000) #3, !dbg !51
  %.0.i9 = select i1 %.not19.i, float %103, float %102, !dbg !51
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not20.i = icmp eq i32 %104, 0, !dbg !51
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i9, float %86, float 0xBFD0000840000000) #3, !dbg !51
  %106 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i9, float %86, float 0xBFD0000840000000) #3, !dbg !51
  %.011.i = select i1 %.not20.i, float %106, float %105, !dbg !51
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not21.i = icmp eq i32 %107, 0, !dbg !51
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %86, float 0x3FD5555CC0000000) #3, !dbg !51
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %86, float 0x3FD5555CC0000000) #3, !dbg !51
  %.08.i = select i1 %.not21.i, float %109, float %108, !dbg !51
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not22.i = icmp eq i32 %110, 0, !dbg !51
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %86, float -5.000000e-01) #3, !dbg !51
  %112 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %86, float -5.000000e-01) #3, !dbg !51
  %.07.i = select i1 %.not22.i, float %112, float %111, !dbg !51
  %113 = fmul float %86, %.07.i, !dbg !51
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not23.i = icmp eq i32 %114, 0, !dbg !51
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %113, float %86, float %86) #3, !dbg !51
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %113, float %86, float %86) #3, !dbg !51
  %.05.i10 = select i1 %.not23.i, float %116, float %115, !dbg !51
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not24.i = icmp eq i32 %117, 0, !dbg !51
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %88, float 0x3FE62E4300000000, float %.05.i10) #3, !dbg !51
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %88, float 0x3FE62E4300000000, float %.05.i10) #3, !dbg !51
  %.04.i11 = select i1 %.not24.i, float %119, float %118, !dbg !51
  %120 = icmp ugt i32 %78, 2139095039, !dbg !51
  br i1 %120, label %121, label %__nv_log1pf.exit, !dbg !51

121:                                              ; preds = %__nv_sqrtf.exit
  %122 = icmp sgt i32 %78, -1082130432, !dbg !51
  br i1 %122, label %__nv_fmaf_rn.exit.i, label %126, !dbg !51

__nv_fmaf_rn.exit.i:                              ; preds = %121
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !51
  %.not25.i = icmp eq i32 %123, 0, !dbg !51
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %71, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !51
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %71, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !51
  %.03.i12 = select i1 %.not25.i, float %125, float %124, !dbg !51
  br label %126, !dbg !51

126:                                              ; preds = %__nv_fmaf_rn.exit.i, %121
  %r.0.i = phi float [ %.03.i12, %__nv_fmaf_rn.exit.i ], [ %.04.i11, %121 ], !dbg !51
  %127 = fcmp oeq float %71, 0.000000e+00, !dbg !51
  %r.1.i = select i1 %127, float -0.000000e+00, float %r.0.i, !dbg !51
  br label %__nv_log1pf.exit, !dbg !51

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit, %126
  %r.2.i = phi float [ %r.1.i, %126 ], [ %.04.i11, %__nv_sqrtf.exit ], !dbg !51
  %128 = select i1 %69, float %68, float %r.2.i, !dbg !52
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not.i1 = icmp eq i32 %129, 0, !dbg !53
  %130 = tail call float @llvm.nvvm.fabs.ftz.f(float %128) #3, !dbg !53
  %131 = tail call float @llvm.nvvm.fabs.f(float %128) #3, !dbg !53
  %.01.i = select i1 %.not.i1, float %131, float %130, !dbg !53
  %132 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !53
  br i1 %132, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !53

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit
  %133 = fmul float %.01.i, 0x4007154760000000, !dbg !53
  %134 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %133) #3, !dbg !53
  %135 = fadd float %134, 1.000000e+00, !dbg !53
  %136 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %135) #4, !dbg !53, !srcloc !54
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not6.i = icmp eq i32 %137, 0, !dbg !53
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %136, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %136, float -2.000000e+00, float 1.000000e+00) #3, !dbg !53
  %.03.i = select i1 %.not6.i, float %139, float %138, !dbg !53
  %140 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !53
  %s.0.i = select i1 %140, float 1.000000e+00, float %.03.i, !dbg !53
  %141 = bitcast float %s.0.i to i32, !dbg !53
  %142 = bitcast float %128 to i32, !dbg !53
  %143 = and i32 %142, -2147483648, !dbg !53
  %144 = or i32 %143, %141, !dbg !53
  %145 = bitcast i32 %144 to float, !dbg !53
  br label %__nv_tanhf.exit, !dbg !53

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit
  %146 = fmul float %128, %128, !dbg !53
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not1.i2 = icmp eq i32 %147, 0, !dbg !53
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %146, float 0xBFAAC795C0000000) #3, !dbg !53
  %149 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %146, float 0xBFAAC795C0000000) #3, !dbg !53
  %.06.i = select i1 %.not1.i2, float %149, float %148, !dbg !53
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not2.i3 = icmp eq i32 %150, 0, !dbg !53
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %146, float 0x3FC10B2820000000) #3, !dbg !53
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %146, float 0x3FC10B2820000000) #3, !dbg !53
  %.05.i = select i1 %.not2.i3, float %152, float %151, !dbg !53
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not3.i = icmp eq i32 %153, 0, !dbg !53
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %146, float 0xBFD5553DA0000000) #3, !dbg !53
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %146, float 0xBFD5553DA0000000) #3, !dbg !53
  %.0.i4 = select i1 %.not3.i, float %155, float %154, !dbg !53
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not4.i = icmp eq i32 %156, 0, !dbg !53
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i4, float %146, float 0.000000e+00) #3, !dbg !53
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i4, float %146, float 0.000000e+00) #3, !dbg !53
  %.04.i = select i1 %.not4.i, float %158, float %157, !dbg !53
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !53
  %.not5.i = icmp eq i32 %159, 0, !dbg !53
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %128, float %128) #3, !dbg !53
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %128, float %128) #3, !dbg !53
  %.02.i = select i1 %.not5.i, float %161, float %160, !dbg !53
  br label %__nv_tanhf.exit, !dbg !53

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %145, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !53
  %162 = fmul float %68, %s.1.i, !dbg !55
  %163 = sext i32 %14 to i64, !dbg !56
  %164 = getelementptr float, ptr addrspace(1) %7, i64 %163, !dbg !56
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v, ptr addrspace(1) %164, i1 %15) #3, !dbg !57
  %165 = getelementptr float, ptr addrspace(1) %0, i64 %163, !dbg !58
  %166 = bitcast float %162 to i32, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %166, ptr addrspace(1) %165, i1 %15) #3, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ceqla4jl3lhqx3g4345b2dc3jqi4wgj7l25ef4fb7wa2meiox5t7.py", directory: "inductor_cache/eq")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_cat_mul_softplus_tanh_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 31, scope: !7)
!20 = !DILocation(line: 28, column: 36, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 35, scope: !7)
!29 = !DILocation(line: 37, column: 48, scope: !7)
!30 = !DILocation(line: 37, column: 45, scope: !7)
!31 = !DILocation(line: 37, column: 30, scope: !7)
!32 = !DILocation(line: 37, column: 60, scope: !7)
!33 = !DILocation(line: 37, column: 53, scope: !7)
!34 = !DILocation(line: 38, column: 19, scope: !7)
!35 = !DILocation(line: 41, column: 39, scope: !7)
!36 = !DILocation(line: 41, column: 35, scope: !7)
!37 = !DILocation(line: 41, column: 52, scope: !7)
!38 = !DILocation(line: 41, column: 30, scope: !7)
!39 = !DILocation(line: 41, column: 67, scope: !7)
!40 = !DILocation(line: 41, column: 60, scope: !7)
!41 = !DILocation(line: 42, column: 33, scope: !7)
!42 = !DILocation(line: 43, column: 20, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 46, column: 27, scope: !7)
!45 = !DILocation(line: 48, column: 20, scope: !7)
!46 = !DILocation(line: 51, column: 20, scope: !7)
!47 = !DILocation(line: 52, column: 20, scope: !7)
!48 = !DILocation(line: 53, column: 20, scope: !7)
!49 = !DILocation(line: 55, column: 20, scope: !7)
!50 = !DILocation(line: 56, column: 24, scope: !7)
!51 = !DILocation(line: 57, column: 28, scope: !7)
!52 = !DILocation(line: 58, column: 35, scope: !7)
!53 = !DILocation(line: 59, column: 27, scope: !7)
!54 = !{i32 21046}
!55 = !DILocation(line: 60, column: 20, scope: !7)
!56 = !DILocation(line: 61, column: 25, scope: !7)
!57 = !DILocation(line: 61, column: 37, scope: !7)
!58 = !DILocation(line: 62, column: 28, scope: !7)
!59 = !DILocation(line: 62, column: 40, scope: !7)
!60 = !DILocation(line: 62, column: 4, scope: !7)
