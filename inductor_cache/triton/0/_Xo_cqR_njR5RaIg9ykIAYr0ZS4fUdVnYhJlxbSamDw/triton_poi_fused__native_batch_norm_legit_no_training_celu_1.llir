; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_celu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 6, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 62, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, 64, !dbg !14
  %15 = sdiv i32 %13, 4, !dbg !15
  %16 = srem i32 %15, 4, !dbg !16
  %17 = sext i32 %13 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !17
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %14) #3, !dbg !18
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !18
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !18
  %22 = bitcast i32 %20 to float, !dbg !18
  %23 = bitcast i32 %21 to float, !dbg !18
  %24 = sext i32 %16 to i64, !dbg !19
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #3, !dbg !20
  %27 = bitcast i32 %26 to float, !dbg !20
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %14) #3, !dbg !20
  %29 = bitcast i32 %28 to float, !dbg !20
  %30 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %14) #3, !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %14) #3, !dbg !22
  %34 = bitcast i32 %33 to float, !dbg !22
  %35 = getelementptr float, ptr addrspace(1) %4, i64 %24, !dbg !23
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %14) #3, !dbg !24
  %37 = bitcast i32 %36 to float, !dbg !24
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %14) #3, !dbg !24
  %39 = bitcast i32 %38 to float, !dbg !24
  %40 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !25
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %14) #3, !dbg !26
  %42 = bitcast i32 %41 to float, !dbg !26
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %14) #3, !dbg !26
  %44 = bitcast i32 %43 to float, !dbg !26
  %45 = fsub float %22, %27, !dbg !27
  %46 = fsub float %23, %29, !dbg !27
  %47 = fadd float %32, 0x3EE4F8B580000000, !dbg !28
  %48 = fadd float %34, 0x3EE4F8B580000000, !dbg !28
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i = icmp eq i32 %49, 0, !dbg !29
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !29
  %.not1.i = icmp eq i32 %50, 0, !dbg !29
  br i1 %.not.i, label %56, label %51, !dbg !29

51:                                               ; preds = %7
  br i1 %.not1.i, label %54, label %52, !dbg !29

52:                                               ; preds = %51
  %53 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %47) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

54:                                               ; preds = %51
  %55 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %47) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

56:                                               ; preds = %7
  br i1 %.not1.i, label %59, label %57, !dbg !29

57:                                               ; preds = %56
  %58 = tail call float @llvm.nvvm.sqrt.rn.f(float %47) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

59:                                               ; preds = %56
  %60 = tail call float @llvm.nvvm.sqrt.approx.f(float %47) #3, !dbg !29
  br label %__nv_sqrtf.exit, !dbg !29

__nv_sqrtf.exit:                                  ; preds = %52, %54, %57, %59
  %.0.i = phi float [ %53, %52 ], [ %55, %54 ], [ %58, %57 ], [ %60, %59 ], !dbg !29
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !29
  %.not.i1 = icmp eq i32 %61, 0, !dbg !29
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !29
  %.not1.i4 = icmp eq i32 %62, 0, !dbg !29
  br i1 %.not.i1, label %68, label %63, !dbg !29

63:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %66, label %64, !dbg !29

64:                                               ; preds = %63
  %65 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %48) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

66:                                               ; preds = %63
  %67 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %48) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

68:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %71, label %69, !dbg !29

69:                                               ; preds = %68
  %70 = tail call float @llvm.nvvm.sqrt.rn.f(float %48) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

71:                                               ; preds = %68
  %72 = tail call float @llvm.nvvm.sqrt.approx.f(float %48) #3, !dbg !29
  br label %__nv_sqrtf.exit5, !dbg !29

__nv_sqrtf.exit5:                                 ; preds = %64, %66, %69, %71
  %.0.i3 = phi float [ %65, %64 ], [ %67, %66 ], [ %70, %69 ], [ %72, %71 ], !dbg !29
  %73 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !30
  %74 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !30
  %75 = fmul float %45, %73, !dbg !31
  %76 = fmul float %46, %74, !dbg !31
  %77 = fmul float %75, %37, !dbg !32
  %78 = fmul float %76, %39, !dbg !32
  %79 = fadd float %77, %42, !dbg !33
  %80 = fadd float %78, %44, !dbg !33
  %81 = fmul float %79, 0x402AAAAAA0000000, !dbg !34
  %82 = fmul float %80, 0x402AAAAAA0000000, !dbg !34
  %83 = fmul float %81, 0x3FF7154760000000, !dbg !35
  %84 = tail call float @llvm.nvvm.round.f(float %83) #3, !dbg !35
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not.i6 = icmp eq i32 %85, 0, !dbg !35
  %86 = tail call float @llvm.nvvm.fabs.ftz.f(float %81) #3, !dbg !35
  %87 = tail call float @llvm.nvvm.fabs.f(float %81) #3, !dbg !35
  %.03.i = select i1 %.not.i6, float %87, float %86, !dbg !35
  %88 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !35
  %t.0.i = select i1 %88, float 0.000000e+00, float %84, !dbg !35
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %91 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !35
  %j.0.i = select i1 %91, float 1.270000e+02, float %t.0.i, !dbg !35
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not8.i = icmp eq i32 %97, 0, !dbg !35
  br i1 %.not8.i, label %100, label %98, !dbg !35

98:                                               ; preds = %__nv_sqrtf.exit5
  %99 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !35
  br label %__nv_expm1f.exit, !dbg !35

100:                                              ; preds = %__nv_sqrtf.exit5
  %101 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !35
  br label %__nv_expm1f.exit, !dbg !35

__nv_expm1f.exit:                                 ; preds = %98, %100
  %.0.i7 = phi float [ %99, %98 ], [ %101, %100 ], !dbg !35
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %103 = fmul float %82, 0x3FF7154760000000, !dbg !35
  %104 = tail call float @llvm.nvvm.round.f(float %103) #3, !dbg !35
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not.i10 = icmp eq i32 %105, 0, !dbg !35
  %106 = tail call float @llvm.nvvm.fabs.ftz.f(float %82) #3, !dbg !35
  %107 = tail call float @llvm.nvvm.fabs.f(float %82) #3, !dbg !35
  %.03.i11 = select i1 %.not.i10, float %107, float %106, !dbg !35
  %108 = fcmp olt float %.03.i11, 0x3FDA3D70A0000000, !dbg !35
  %t.0.i12 = select i1 %108, float 0.000000e+00, float %104, !dbg !35
  %109 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %111 = fcmp oeq float %t.0.i12, 1.280000e+02, !dbg !35
  %j.0.i13 = select i1 %111, float 1.270000e+02, float %t.0.i12, !dbg !35
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not8.i14 = icmp eq i32 %117, 0, !dbg !35
  br i1 %.not8.i14, label %120, label %118, !dbg !35

118:                                              ; preds = %__nv_expm1f.exit
  %119 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i13) #3, !dbg !35
  br label %__nv_expm1f.exit36, !dbg !35

120:                                              ; preds = %__nv_expm1f.exit
  %121 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i13) #3, !dbg !35
  br label %__nv_expm1f.exit36, !dbg !35

__nv_expm1f.exit36:                               ; preds = %118, %120
  %.0.i15 = phi float [ %119, %118 ], [ %121, %120 ], !dbg !35
  %122 = fcmp oeq float %81, 0.000000e+00, !dbg !35
  %123 = fadd float %81, %81, !dbg !35
  %124 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !35
  %125 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !35
  %.not9.i = icmp eq i32 %102, 0, !dbg !35
  %.not7.i = icmp eq i32 %96, 0, !dbg !35
  %.not6.i = icmp eq i32 %95, 0, !dbg !35
  %.not5.i = icmp eq i32 %94, 0, !dbg !35
  %.not4.i = icmp eq i32 %93, 0, !dbg !35
  %.not3.i = icmp eq i32 %92, 0, !dbg !35
  %.not2.i8 = icmp eq i32 %90, 0, !dbg !35
  %126 = fneg float %t.0.i, !dbg !35
  %.not1.i9 = icmp eq i32 %89, 0, !dbg !35
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %126, float 0x3FE62E4000000000, float %81) #3, !dbg !35
  %128 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %126, float 0x3FE62E4000000000, float %81) #3, !dbg !35
  %.04.i = select i1 %.not1.i9, float %127, float %128, !dbg !35
  %129 = tail call float @llvm.nvvm.fma.rn.f(float %126, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !35
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %126, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !35
  %.05.i = select i1 %.not2.i8, float %129, float %130, !dbg !35
  %131 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !35
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !35
  %.07.i = select i1 %.not3.i, float %131, float %132, !dbg !35
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !35
  %134 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !35
  %.08.i = select i1 %.not4.i, float %133, float %134, !dbg !35
  %135 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !35
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !35
  %.09.i = select i1 %.not5.i, float %135, float %136, !dbg !35
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !35
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !35
  %.06.i = select i1 %.not6.i, float %137, float %138, !dbg !35
  %139 = fmul float %.05.i, %.06.i, !dbg !35
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %139, float %.05.i, float %.05.i) #3, !dbg !35
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %139, float %.05.i, float %.05.i) #3, !dbg !35
  %.01.i = select i1 %.not7.i, float %140, float %141, !dbg !35
  %142 = fadd float %.0.i7, -1.000000e+00, !dbg !35
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i7, float %142) #3, !dbg !35
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i7, float %142) #3, !dbg !35
  %.02.i = select i1 %.not9.i, float %143, float %144, !dbg !35
  %145 = fadd float %.02.i, %.02.i, !dbg !35
  %u.0.i = select i1 %91, float %145, float %.02.i, !dbg !35
  %u.1.i = select i1 %125, float 0x7FF0000000000000, float %u.0.i, !dbg !35
  %u.2.i = select i1 %124, float -1.000000e+00, float %u.1.i, !dbg !35
  %u.3.i = select i1 %122, float %123, float %u.2.i, !dbg !35
  %146 = fcmp ogt float %80, 0.000000e+00, !dbg !36
  %147 = fcmp ogt float %79, 0.000000e+00, !dbg !36
  %.not7.i16 = icmp eq i32 %116, 0, !dbg !35
  %.not6.i17 = icmp eq i32 %115, 0, !dbg !35
  %.not5.i18 = icmp eq i32 %114, 0, !dbg !35
  %.not4.i19 = icmp eq i32 %113, 0, !dbg !35
  %.not3.i20 = icmp eq i32 %112, 0, !dbg !35
  %.not2.i21 = icmp eq i32 %110, 0, !dbg !35
  %148 = fneg float %t.0.i12, !dbg !35
  %.not1.i22 = icmp eq i32 %109, 0, !dbg !35
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0x3FE62E4000000000, float %82) #3, !dbg !35
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0x3FE62E4000000000, float %82) #3, !dbg !35
  %.04.i23 = select i1 %.not1.i22, float %149, float %150, !dbg !35
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !35
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !35
  %.05.i24 = select i1 %.not2.i21, float %151, float %152, !dbg !35
  %153 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !35
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !35
  %.07.i25 = select i1 %.not3.i20, float %153, float %154, !dbg !35
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !35
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !35
  %.08.i26 = select i1 %.not4.i19, float %155, float %156, !dbg !35
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !35
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !35
  %.09.i27 = select i1 %.not5.i18, float %157, float %158, !dbg !35
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !35
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !35
  %.06.i28 = select i1 %.not6.i17, float %159, float %160, !dbg !35
  %161 = fmul float %.05.i24, %.06.i28, !dbg !35
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %161, float %.05.i24, float %.05.i24) #3, !dbg !35
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float %.05.i24, float %.05.i24) #3, !dbg !35
  %.01.i29 = select i1 %.not7.i16, float %162, float %163, !dbg !35
  %164 = fadd float %.0.i15, -1.000000e+00, !dbg !35
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not9.i30 = icmp eq i32 %165, 0, !dbg !35
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i29, float %.0.i15, float %164) #3, !dbg !35
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i29, float %.0.i15, float %164) #3, !dbg !35
  %.02.i31 = select i1 %.not9.i30, float %167, float %166, !dbg !35
  %168 = fadd float %.02.i31, %.02.i31, !dbg !35
  %u.0.i32 = select i1 %111, float %168, float %.02.i31, !dbg !35
  %169 = fcmp ogt float %j.0.i13, 1.280000e+02, !dbg !35
  %u.1.i33 = select i1 %169, float 0x7FF0000000000000, float %u.0.i32, !dbg !35
  %170 = fcmp olt float %j.0.i13, -2.500000e+01, !dbg !35
  %u.2.i34 = select i1 %170, float -1.000000e+00, float %u.1.i33, !dbg !35
  %171 = fcmp oeq float %82, 0.000000e+00, !dbg !35
  %172 = fadd float %82, %82, !dbg !35
  %u.3.i35 = select i1 %171, float %172, float %u.2.i34, !dbg !35
  %173 = fmul float %u.3.i, 0x3FB3333340000000, !dbg !37
  %174 = fmul float %u.3.i35, 0x3FB3333340000000, !dbg !37
  %175 = select i1 %147, float %79, float %173, !dbg !38
  %176 = select i1 %146, float %80, float %174, !dbg !38
  %177 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !39
  %178 = bitcast float %175 to i32, !dbg !40
  %179 = bitcast float %176 to i32, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %178, i32 %179, ptr addrspace(1) %177, i1 %14) #3, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpgamqrl52osoofdg3ketkcafnyq53i66cjrdcpevrv3j5xpqraz.py", directory: "inductor_cache/pg")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_celu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_celu_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_celu_1", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_celu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 30, scope: !7)
!18 = !DILocation(line: 26, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 31, scope: !7)
!24 = !DILocation(line: 29, column: 36, scope: !7)
!25 = !DILocation(line: 30, column: 31, scope: !7)
!26 = !DILocation(line: 30, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 18, scope: !7)
!28 = !DILocation(line: 33, column: 18, scope: !7)
!29 = !DILocation(line: 34, column: 26, scope: !7)
!30 = !DILocation(line: 36, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 19, scope: !7)
!32 = !DILocation(line: 40, column: 20, scope: !7)
!33 = !DILocation(line: 41, column: 20, scope: !7)
!34 = !DILocation(line: 45, column: 20, scope: !7)
!35 = !DILocation(line: 46, column: 28, scope: !7)
!36 = !DILocation(line: 43, column: 20, scope: !7)
!37 = !DILocation(line: 48, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 35, scope: !7)
!39 = !DILocation(line: 50, column: 28, scope: !7)
!40 = !DILocation(line: 50, column: 40, scope: !7)
!41 = !DILocation(line: 50, column: 4, scope: !7)
