//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__softmax_4 // -- Begin function triton_poi_fused__softmax_4
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused__softmax_4
.visible .entry triton_poi_fused__softmax_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__softmax_4_param_1,
	.param .u32 triton_poi_fused__softmax_4_param_2,
	.param .u32 triton_poi_fused__softmax_4_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused__softmax_4_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused__softmax_4_param_1];
$L__tmp0:
	.loc	1 22 28                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:22:33
	shl.b32 	%r25, %r1, 4;
	.loc	1 23 44                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:23:44
	mov.u32 	%r26, %tid.x;
	shl.b32 	%r27, %r26, 1;
	and.b32  	%r28, %r27, 2;
	and.b32  	%r29, %r27, 14;
	bfe.u32 	%r30, %r26, 1, 4;
	.loc	1 23 23                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:23:23
	or.b32  	%r31, %r25, %r29;
	or.b32  	%r32, %r25, %r30;
	.loc	1 24 21                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:24:21
	setp.lt.s32 	%p13, %r31, 16;
	setp.lt.s32 	%p14, %r32, 16;
	.loc	1 25 28                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:25:33
	shl.b32 	%r33, %r2, 2;
	.loc	1 26 44                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:26:44
	bfe.u32 	%r34, %r26, 3, 2;
	.loc	1 26 23                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:26:23
	or.b32  	%r35, %r33, %r34;
	or.b32  	%r36, %r33, %r28;
	.loc	1 27 21                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:27:21
	setp.lt.s32 	%p15, %r35, 4;
	setp.lt.s32 	%p16, %r36, 4;
	.loc	1 30 19                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:30:19
	shr.s32 	%r38, %r31, 31;
	shr.u32 	%r39, %r38, 30;
	add.s32 	%r40, %r31, %r39;
	.loc	1 29 19                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:29:19
	and.b32  	%r41, %r40, -4;
	sub.s32 	%r42, %r31, %r41;
	.loc	1 30 19                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:30:19
	bfe.s32 	%r43, %r1, 27, 1;
	shr.u32 	%r44, %r43, 30;
	add.s32 	%r45, %r32, %r44;
	.loc	1 32 37                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:32:37
	shl.b32 	%r46, %r35, 2;
	shl.b32 	%r47, %r36, 2;
	.loc	1 32 35                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:32:35
	add.s32 	%r48, %r46, %r42;
	.loc	1 32 45                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:32:45
	shl.b32 	%r49, %r40, 2;
	and.b32  	%r50, %r49, -16;
	shl.b32 	%r51, %r45, 2;
	and.b32  	%r52, %r51, -16;
	.loc	1 32 42                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:32:42
	add.s32 	%r53, %r48, %r50;
	.loc	1 32 30                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:32:30
	mul.wide.s32 	%rd13, %r53, 4;
	add.s64 	%rd1, %rd11, %rd13;
	.loc	1 32 58                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:32:58
	and.pred  	%p1, %p13, %p15;
	and.pred  	%p4, %p14, %p16;
	.loc	1 32 50                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:32:50
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r8 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r54, %r26, 3;
	and.b32  	%r55, %r54, 56;
	or.b32  	%r56, %r55, %r34;
	and.b32  	%r57, %r27, 62;
	shr.u32 	%r58, %r55, 2;
	add.s32 	%r59, %r58, %r56;
	shl.b32 	%r60, %r59, 2;
	mov.u32 	%r61, global_smem;
	add.s32 	%r5, %r61, %r60;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r5 + 0 ], %r6;
	// end inline asm
	or.b32  	%r62, %r55, 4;
	shr.u32 	%r63, %r62, 2;
	add.s32 	%r64, %r63, %r56;
	shl.b32 	%r65, %r64, 2;
	add.s32 	%r66, %r61, %r65;
	add.s32 	%r7, %r66, 16;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	bar.sync 	0;
	bfe.u32 	%r67, %r27, 2, 4;
	add.s32 	%r68, %r67, %r57;
	shl.b32 	%r69, %r68, 2;
	add.s32 	%r70, %r61, %r69;
	.loc	1 33 37                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:33:37
	add.s32 	%r71, %r47, %r52;
	or.b32  	%r72, %r71, 4;
	.loc	1 33 30                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:33:30
	mul.wide.s32 	%rd14, %r71, 4;
	add.s64 	%rd2, %rd11, %rd14;
	mul.wide.s32 	%rd15, %r72, 4;
	add.s64 	%rd3, %rd11, %rd15;
	.loc	1 40 18                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:40:18
	ld.shared.u32 	%r18, [%r70];
	ld.shared.u32 	%r21, [%r70+4];
	.loc	1 33 45                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:33:45
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r10;
	.loc	1 34 41                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:34:41
	or.b32  	%r73, %r71, 1;
	or.b32  	%r74, %r71, 5;
	.loc	1 34 30                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:34:30
	mul.wide.s32 	%rd16, %r73, 4;
	add.s64 	%rd4, %rd11, %rd16;
	mul.wide.s32 	%rd17, %r74, 4;
	add.s64 	%rd5, %rd11, %rd17;
	.loc	1 34 49                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:34:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r11 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r12 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r12;
	.loc	1 35 41                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:35:41
	or.b32  	%r75, %r71, 2;
	or.b32  	%r76, %r71, 6;
	.loc	1 35 30                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:35:30
	mul.wide.s32 	%rd18, %r75, 4;
	add.s64 	%rd6, %rd11, %rd18;
	mul.wide.s32 	%rd19, %r76, 4;
	add.s64 	%rd7, %rd11, %rd19;
	.loc	1 35 49                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:35:49
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r13 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r14;
	.loc	1 36 41                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:36:41
	or.b32  	%r77, %r71, 3;
	or.b32  	%r78, %r71, 7;
	.loc	1 36 30                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:36:30
	mul.wide.s32 	%rd20, %r77, 4;
	add.s64 	%rd8, %rd11, %rd20;
	mul.wide.s32 	%rd21, %r78, 4;
	add.s64 	%rd9, %rd11, %rd21;
	.loc	1 36 49                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:36:49
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r15 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r16 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r16;
	.loc	1 37 18                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:37:18
	add.f32 	%f9, %f1, %f3;
	add.f32 	%f10, %f2, %f4;
	.loc	1 38 18                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:38:18
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	.loc	1 39 18                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:39:18
	add.f32 	%f13, %f11, %f7;
	add.f32 	%f14, %f12, %f8;
	.loc	1 40 18                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:40:18
	mov.b32 	%r19, %f13;
	// begin inline asm
	div.full.f32 %r23, %r18, %r19;
	// end inline asm
	mov.b32 	%r22, %f14;
	// begin inline asm
	div.full.f32 %r24, %r21, %r22;
	// end inline asm
	.loc	1 41 32                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:41:32
	shl.b32 	%r79, %r32, 2;
	.loc	1 41 30                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:41:30
	add.s32 	%r80, %r36, %r79;
	.loc	1 41 25                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:41:25
	mul.wide.s32 	%rd22, %r80, 4;
	add.s64 	%rd10, %rd12, %rd22;
	.loc	1 41 43                         // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:41:43
	// begin inline asm
	@%p4 st.global.v2.b32 [ %rd10 + 0 ], { %r23, %r24 };
	// end inline asm
	.loc	1 41 4                          // cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ph/cphho6oxh4clvicf2ufbswfy57fronxcwkqcs6yr6evsgo7w5ebq.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 112
.b8 104
.b8 104
.b8 111
.b8 54
.b8 111
.b8 120
.b8 104
.b8 52
.b8 99
.b8 108
.b8 118
.b8 105
.b8 99
.b8 102
.b8 50
.b8 117
.b8 102
.b8 98
.b8 115
.b8 119
.b8 102
.b8 121
.b8 53
.b8 55
.b8 102
.b8 114
.b8 111
.b8 110
.b8 120
.b8 99
.b8 119
.b8 107
.b8 113
.b8 99
.b8 115
.b8 54
.b8 121
.b8 114
.b8 54
.b8 101
.b8 118
.b8 115
.b8 103
.b8 111
.b8 55
.b8 119
.b8 53
.b8 101
.b8 98
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 112
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
