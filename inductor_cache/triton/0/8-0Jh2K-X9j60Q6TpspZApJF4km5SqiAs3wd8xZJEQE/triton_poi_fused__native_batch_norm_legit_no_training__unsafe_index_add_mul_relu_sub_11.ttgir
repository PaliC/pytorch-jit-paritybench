#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_11(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg6: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<16xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<16xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<16xi32, #blocked> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<16xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_3 : tensor<16xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_3 : tensor<16xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_3 : tensor<16xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_2 : tensor<16xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %8 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %7 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc15)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc17)
    %20 = tt.addptr %19, %4 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc17)
    %21 = tt.load %20, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc18)
    %22 = tt.addptr %arg9, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %23 = tt.load %22 : !tt.ptr<f32> loc(#loc20)
    %24 = tt.splat %23 : f32 -> tensor<16xf32, #blocked> loc(#loc21)
    %25 = tt.addptr %arg10, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc22)
    %26 = tt.load %25 : !tt.ptr<f32> loc(#loc23)
    %27 = tt.addptr %arg11, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc24)
    %28 = tt.load %27 : !tt.ptr<f32> loc(#loc25)
    %29 = tt.splat %28 : f32 -> tensor<16xf32, #blocked> loc(#loc26)
    %30 = tt.addptr %arg12, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc27)
    %31 = tt.load %30 : !tt.ptr<f32> loc(#loc28)
    %32 = tt.splat %31 : f32 -> tensor<16xf32, #blocked> loc(#loc29)
    %33 = arith.subf %12, %12 : tensor<16xf32, #blocked> loc(#loc30)
    %34 = arith.mulf %33, %15 : tensor<16xf32, #blocked> loc(#loc31)
    %35 = arith.addf %12, %34 : tensor<16xf32, #blocked> loc(#loc32)
    %36 = arith.subf %35, %35 : tensor<16xf32, #blocked> loc(#loc33)
    %37 = arith.mulf %36, %18 : tensor<16xf32, #blocked> loc(#loc34)
    %38 = arith.addf %35, %37 : tensor<16xf32, #blocked> loc(#loc35)
    %39 = arith.subf %21, %24 : tensor<16xf32, #blocked> loc(#loc36)
    %40 = arith.addf %26, %cst_0 : f32 loc(#loc37)
    %41 = tt.extern_elementwise %40 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc38)
    %42 = arith.divf %cst, %41 : f32 loc(#loc39)
    %43 = tt.splat %42 : f32 -> tensor<16xf32, #blocked> loc(#loc39)
    %44 = arith.mulf %39, %43 : tensor<16xf32, #blocked> loc(#loc40)
    %45 = arith.mulf %44, %29 : tensor<16xf32, #blocked> loc(#loc41)
    %46 = arith.addf %45, %32 : tensor<16xf32, #blocked> loc(#loc42)
    %47 = arith.cmpf ogt, %cst_1, %46 : tensor<16xf32, #blocked> loc(#loc50)
    %48 = arith.select %47, %cst_1, %46 : tensor<16xi1, #blocked>, tensor<16xf32, #blocked> loc(#loc51)
    %49 = arith.addf %38, %48 : tensor<16xf32, #blocked> loc(#loc46)
    %50 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked> loc(#loc47)
    %51 = tt.addptr %50, %4 : tensor<16x!tt.ptr<f32>, #blocked>, tensor<16xi32, #blocked> loc(#loc47)
    tt.store %51, %49, %5 : tensor<16x!tt.ptr<f32>, #blocked> loc(#loc48)
    tt.return loc(#loc49)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":21:28)
#loc3 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":21:33)
#loc4 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":22:36)
#loc5 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":22:23)
#loc6 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":23:21)
#loc7 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":24:21)
#loc8 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":24:26)
#loc9 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":25:19)
#loc10 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":26:19)
#loc11 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":30:30)
#loc12 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":30:35)
#loc13 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":32:31)
#loc14 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":32:36)
#loc15 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":34:31)
#loc16 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":34:36)
#loc17 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":35:31)
#loc18 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":35:36)
#loc19 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":36:31)
#loc20 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":36:20)
#loc21 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":37:35)
#loc22 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":38:31)
#loc23 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":38:20)
#loc24 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":40:32)
#loc25 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":40:20)
#loc26 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":41:35)
#loc27 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":42:32)
#loc28 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":42:20)
#loc29 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":43:35)
#loc30 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":54:19)
#loc31 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":55:20)
#loc32 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":56:19)
#loc33 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":60:20)
#loc34 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":61:20)
#loc35 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":62:20)
#loc36 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":63:20)
#loc37 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":65:20)
#loc38 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":66:27)
#loc39 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":68:20)
#loc40 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":71:20)
#loc41 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":72:20)
#loc42 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":73:20)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc44 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":75:42)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc46 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":76:20)
#loc47 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":77:28)
#loc48 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":77:40)
#loc49 = loc("inductor_cache/r3/cr357vpes26q5xtpgd553aptx2f3jkaymiolshsqnxdl6ulmqam5.py":77:4)
#loc50 = loc(callsite(#loc43 at #loc44))
#loc51 = loc(callsite(#loc45 at #loc44))
