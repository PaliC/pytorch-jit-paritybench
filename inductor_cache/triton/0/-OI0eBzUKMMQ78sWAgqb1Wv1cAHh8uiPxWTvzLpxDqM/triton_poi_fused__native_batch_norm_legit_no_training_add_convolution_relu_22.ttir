#loc = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<128xf32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_2 : tensor<128xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc7)
    %8 = tt.load %7 : tensor<128x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc9)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc11)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %15, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc13)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc15)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.addptr %21, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc17)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.addptr %24, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc19)
    %26 = tt.load %25 : tensor<128x!tt.ptr<f32>> loc(#loc20)
    %27 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc21)
    %28 = tt.addptr %27, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc21)
    %29 = tt.load %28 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc22)
    %30 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc23)
    %31 = tt.addptr %30, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc23)
    %32 = tt.load %31 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc24)
    %33 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc25)
    %34 = tt.addptr %33, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc25)
    %35 = tt.load %34 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc26)
    %36 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc27)
    %37 = tt.addptr %36, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc27)
    %38 = tt.load %37 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc28)
    %39 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc29)
    %40 = tt.addptr %39, %5 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc29)
    %41 = tt.load %40 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc30)
    %42 = arith.addf %8, %11 : tensor<128xf32> loc(#loc31)
    %43 = arith.subf %42, %14 : tensor<128xf32> loc(#loc32)
    %44 = arith.addf %17, %cst_1 : tensor<128xf32> loc(#loc33)
    %45 = tt.extern_elementwise %44 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32>) -> tensor<128xf32> loc(#loc34)
    %46 = arith.divf %cst_0, %45 : tensor<128xf32> loc(#loc35)
    %47 = arith.mulf %43, %46 : tensor<128xf32> loc(#loc36)
    %48 = arith.mulf %47, %20 : tensor<128xf32> loc(#loc37)
    %49 = arith.addf %48, %23 : tensor<128xf32> loc(#loc38)
    %50 = arith.cmpf ogt, %cst, %49 : tensor<128xf32> loc(#loc59)
    %51 = arith.select %50, %cst, %49 : tensor<128xi1>, tensor<128xf32> loc(#loc60)
    %52 = arith.addf %26, %29 : tensor<128xf32> loc(#loc42)
    %53 = arith.subf %52, %32 : tensor<128xf32> loc(#loc43)
    %54 = arith.addf %35, %cst_1 : tensor<128xf32> loc(#loc44)
    %55 = tt.extern_elementwise %54 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32>) -> tensor<128xf32> loc(#loc45)
    %56 = arith.divf %cst_0, %55 : tensor<128xf32> loc(#loc46)
    %57 = arith.mulf %53, %56 : tensor<128xf32> loc(#loc47)
    %58 = arith.mulf %57, %38 : tensor<128xf32> loc(#loc48)
    %59 = arith.addf %58, %41 : tensor<128xf32> loc(#loc49)
    %60 = arith.cmpf ogt, %cst, %59 : tensor<128xf32> loc(#loc61)
    %61 = arith.select %60, %cst, %59 : tensor<128xi1>, tensor<128xf32> loc(#loc62)
    %62 = arith.addf %51, %61 : tensor<128xf32> loc(#loc51)
    tt.store %7, %42 : tensor<128x!tt.ptr<f32>> loc(#loc52)
    %63 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc53)
    %64 = tt.addptr %63, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc53)
    tt.store %64, %51 : tensor<128x!tt.ptr<f32>> loc(#loc54)
    tt.store %25, %52 : tensor<128x!tt.ptr<f32>> loc(#loc55)
    %65 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc56)
    %66 = tt.addptr %65, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc56)
    tt.store %66, %62 : tensor<128x!tt.ptr<f32>> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":21:28)
#loc3 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":21:33)
#loc4 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":22:36)
#loc5 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":22:23)
#loc6 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":25:19)
#loc7 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":26:34)
#loc8 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":26:39)
#loc9 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":27:30)
#loc10 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":27:35)
#loc11 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":28:30)
#loc12 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":28:35)
#loc13 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":29:30)
#loc14 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":29:35)
#loc15 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":30:31)
#loc16 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":30:36)
#loc17 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":31:31)
#loc18 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":31:36)
#loc19 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":32:35)
#loc20 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":32:40)
#loc21 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":33:31)
#loc22 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":33:36)
#loc23 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":34:31)
#loc24 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":34:36)
#loc25 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":35:31)
#loc26 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":35:36)
#loc27 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":36:31)
#loc28 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":36:36)
#loc29 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":37:31)
#loc30 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":37:36)
#loc31 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":38:18)
#loc32 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":39:18)
#loc33 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":41:18)
#loc34 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":42:26)
#loc35 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":44:19)
#loc36 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":47:19)
#loc37 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":48:20)
#loc38 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":49:20)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc40 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":51:42)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc42 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":52:20)
#loc43 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":53:20)
#loc44 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":54:20)
#loc45 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":55:27)
#loc46 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":56:19)
#loc47 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":58:20)
#loc48 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":59:20)
#loc49 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":60:20)
#loc50 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":61:42)
#loc51 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":62:20)
#loc52 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":63:39)
#loc53 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":64:25)
#loc54 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":64:37)
#loc55 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":65:40)
#loc56 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":66:25)
#loc57 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":66:37)
#loc58 = loc("inductor_cache/7m/c7m5zcpqxoumyzoznwpg4zb5vl3fsgxiwct3jvqfb47uqs4npfvd.py":66:4)
#loc59 = loc(callsite(#loc39 at #loc40))
#loc60 = loc(callsite(#loc41 at #loc40))
#loc61 = loc(callsite(#loc39 at #loc50))
#loc62 = loc(callsite(#loc41 at #loc50))
