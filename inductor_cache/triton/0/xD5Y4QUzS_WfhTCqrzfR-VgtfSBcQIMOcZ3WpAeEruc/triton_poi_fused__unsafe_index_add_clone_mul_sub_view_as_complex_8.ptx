//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8 // -- Begin function triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8
                                        // @triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8
.visible .entry triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_7,
	.param .u32 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_8,
	.param .u32 triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_9
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<23>;
	.reg .b64 	%rd<62>;
	.loc	1 19 0                          // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:19:0

// %bb.0:
	ld.param.u64 	%rd26, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_0];
	ld.param.u64 	%rd27, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_1];
$L__tmp0:
	.loc	1 22 28                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:22:33
	shl.b32 	%r17, %r1, 2;
	ld.param.u64 	%rd28, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_2];
	ld.param.u64 	%rd29, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_3];
	.loc	1 23 44                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:23:44
	mov.u32 	%r18, %tid.x;
	shl.b32 	%r19, %r18, 1;
	ld.param.u64 	%rd30, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_4];
	and.b32  	%r20, %r19, 2;
	ld.param.u64 	%rd31, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_5];
	.loc	1 23 23                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:23:23
	or.b32  	%r21, %r17, %r20;
	ld.param.u64 	%rd32, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_6];
	.loc	1 24 21                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:24:21
	setp.lt.s32 	%p18, %r21, 4;
	ld.param.u64 	%rd33, [triton_poi_fused__unsafe_index_add_clone_mul_sub_view_as_complex_8_param_7];
	.loc	1 25 28                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:25:33
	shl.b32 	%r22, %r2, 4;
	.loc	1 26 44                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:26:44
	bfe.u32 	%r23, %r18, 1, 4;
	.loc	1 26 23                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:26:23
	or.b32  	%r24, %r22, %r23;
	.loc	1 27 21                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:27:21
	setp.lt.s32 	%p1, %r24, 12;
	.loc	1 28 19                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:28:19
	mul.hi.s32 	%r26, %r24, 1431655766;
	shr.u32 	%r27, %r26, 31;
	add.s32 	%r28, %r26, %r27;
	.loc	1 29 19                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:29:19
	mul.lo.s32 	%r29, %r28, 3;
	sub.s32 	%r30, %r24, %r29;
	.loc	1 31 19                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:31:19
	shr.s32 	%r31, %r21, 1;
	.loc	1 34 30                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:34:30
	mul.wide.s32 	%rd34, %r28, 8;
	add.s64 	%rd2, %rd26, %rd34;
	.loc	1 34 35                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:34:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:35:30
	mul.wide.s32 	%rd35, %r30, 8;
	add.s64 	%rd6, %rd27, %rd35;
	.loc	1 35 35                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:35:35
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:36:31
	add.s64 	%rd10, %rd29, %rd35;
	.loc	1 36 36                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:36:36
	// begin inline asm
	mov.u64 %rd9, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd9 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd11 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:37:31
	mul.wide.s32 	%rd36, %r30, 4;
	add.s64 	%rd13, %rd30, %rd36;
	.loc	1 37 36                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:37:36
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:38:31
	add.s64 	%rd16, %rd31, %rd34;
	.loc	1 38 36                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:38:36
	// begin inline asm
	mov.u64 %rd15, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd15 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd17 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:39:31
	mul.wide.s32 	%rd37, %r28, 4;
	add.s64 	%rd19, %rd32, %rd37;
	.loc	1 39 36                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:39:36
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd19 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	.loc	1 42 18                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:42:18
	setp.lt.s64 	%p19, %rd3, 0;
	.loc	1 47 32                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:47:32
	shr.u64 	%rd38, %rd7, 60;
	and.b64  	%rd39, %rd38, 8;
	add.s64 	%rd40, %rd39, %rd7;
	.loc	1 48 48                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:48:48
	shl.b64 	%rd41, %rd3, 4;
	add.s64 	%rd42, %rd41, 224;
	selp.b64 	%rd43, %rd42, %rd41, %p19;
	.loc	1 48 59                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:48:59
	mul.lo.s32 	%r32, %r31, 224;
	.loc	1 48 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:48:31
	shl.b64 	%rd44, %rd40, 3;
	add.s64 	%rd45, %rd28, %rd44;
	shl.b64 	%rd46, %rd43, 2;
	add.s64 	%rd47, %rd45, %rd46;
	mul.wide.s32 	%rd48, %r32, 4;
	add.s64 	%rd21, %rd47, %rd48;
	.loc	1 48 72                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:48:72
	and.pred  	%p13, %p18, %p1;
	.loc	1 48 64                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:48:64
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p13 ld.global.v2.b32 { %r7, %r8 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 51 35                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:51:35
	shr.u64 	%rd49, %rd11, 60;
	and.b64  	%rd50, %rd49, 8;
	add.s64 	%rd51, %rd50, %rd11;
	.loc	1 52 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:52:31
	shl.b64 	%rd52, %rd51, 3;
	add.s64 	%rd53, %rd28, %rd52;
	add.s64 	%rd54, %rd53, %rd46;
	add.s64 	%rd22, %rd54, %rd48;
	.loc	1 52 65                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:52:65
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p13 ld.global.v2.b32 { %r9, %r10 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 57 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:57:20
	setp.lt.s64 	%p20, %rd17, 0;
	.loc	1 59 48                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:59:48
	shl.b64 	%rd55, %rd17, 4;
	add.s64 	%rd56, %rd55, 224;
	selp.b64 	%rd57, %rd56, %rd55, %p20;
	.loc	1 59 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:59:31
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd59, %rd45, %rd58;
	add.s64 	%rd23, %rd59, %rd48;
	.loc	1 59 65                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:59:65
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p13 ld.global.v2.b32 { %r11, %r12 }, [ %rd23 + 0 ];
	// end inline asm
	.loc	1 60 31                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:60:31
	add.s64 	%rd60, %rd53, %rd58;
	add.s64 	%rd24, %rd60, %rd48;
	.loc	1 60 66                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:60:66
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p13 ld.global.v2.b32 { %r13, %r14 }, [ %rd24 + 0 ];
	// end inline asm
	.loc	1 59 65                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:59:65
	mov.b32 	%f2, %r7;
	mov.b32 	%f3, %r11;
	.loc	1 60 66                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:60:66
	mov.b32 	%f4, %r9;
	mov.b32 	%f5, %r13;
	.loc	1 61 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:61:20
	sub.f32 	%f6, %f5, %f3;
	sub.f32 	%f7, %f4, %f2;
	.loc	1 62 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:62:20
	mov.b32 	%f8, %r4;
	.loc	1 63 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:63:20
	fma.rn.f32 	%f9, %f7, %f8, %f2;
	fma.rn.f32 	%f10, %f6, %f8, %f3;
	.loc	1 59 65                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:59:65
	mov.b32 	%f11, %r8;
	mov.b32 	%f12, %r12;
	.loc	1 60 66                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:60:66
	mov.b32 	%f13, %r10;
	mov.b32 	%f14, %r14;
	.loc	1 61 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:61:20
	sub.f32 	%f15, %f14, %f12;
	sub.f32 	%f16, %f13, %f11;
	.loc	1 63 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:63:20
	fma.rn.f32 	%f17, %f16, %f8, %f11;
	fma.rn.f32 	%f18, %f15, %f8, %f12;
	.loc	1 64 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:64:20
	sub.f32 	%f19, %f10, %f9;
	sub.f32 	%f20, %f18, %f17;
	.loc	1 66 20                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:66:20
	fma.rn.f32 	%f21, %f19, %f1, %f9;
	fma.rn.f32 	%f22, %f20, %f1, %f17;
	.loc	1 67 32                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:67:32
	shl.b32 	%r33, %r24, 1;
	.loc	1 67 37                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:67:37
	mad.lo.s32 	%r34, %r31, 24, %r33;
	.loc	1 67 25                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:67:25
	mul.wide.s32 	%rd61, %r34, 4;
	add.s64 	%rd25, %rd33, %rd61;
	.loc	1 67 52                         // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:67:52
	mov.b32 	%r15, %f21;
	mov.b32 	%r16, %f22;
	// begin inline asm
	@%p13 st.global.v2.b32 [ %rd25 + 0 ], { %r15, %r16 };
	// end inline asm
	.loc	1 67 4                          // cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py:67:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/by/cby3hkkvsjlucgitvlw2bgkn44672irm3pruyvhwc4qob4se4rjg.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 121
.b8 51
.b8 104
.b8 107
.b8 107
.b8 118
.b8 115
.b8 106
.b8 108
.b8 117
.b8 99
.b8 103
.b8 105
.b8 116
.b8 118
.b8 108
.b8 119
.b8 50
.b8 98
.b8 103
.b8 107
.b8 110
.b8 52
.b8 52
.b8 54
.b8 55
.b8 50
.b8 105
.b8 114
.b8 109
.b8 51
.b8 112
.b8 114
.b8 117
.b8 121
.b8 118
.b8 104
.b8 119
.b8 99
.b8 52
.b8 113
.b8 111
.b8 98
.b8 52
.b8 115
.b8 101
.b8 52
.b8 114
.b8 106
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 121
.b8 0
	}
	.section	.debug_macinfo	{	}
