//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__log_softmax_convolution_27 // -- Begin function triton_per_fused__log_softmax_convolution_27
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__log_softmax_convolution_27
.visible .entry triton_per_fused__log_softmax_convolution_27(
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax_convolution_27_param_3,
	.param .u32 triton_per_fused__log_softmax_convolution_27_param_4,
	.param .u32 triton_per_fused__log_softmax_convolution_27_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<36>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<49>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused__log_softmax_convolution_27_param_0];
	ld.param.u64 	%rd7, [triton_per_fused__log_softmax_convolution_27_param_1];
$L__tmp0:
	.loc	1 23 28                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:23:33
	shl.b32 	%r34, %r1, 3;
	ld.param.u64 	%rd8, [triton_per_fused__log_softmax_convolution_27_param_2];
	.loc	1 24 44                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:24:44
	mov.u32 	%r35, %tid.x;
	ld.param.u64 	%rd9, [triton_per_fused__log_softmax_convolution_27_param_3];
	and.b32  	%r37, %r35, 31;
	shl.b32 	%r38, %r35, 1;
	and.b32  	%r39, %r38, 6;
	and.b32  	%r40, %r35, 7;
	.loc	1 24 23                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:24:23
	or.b32  	%r41, %r34, %r39;
	or.b32  	%r42, %r34, %r40;
	.loc	1 26 34                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:26:34
	bfe.u32 	%r43, %r35, 2, 4;
	.loc	1 28 21                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:28:21
	setp.lt.u32 	%p1, %r43, 12;
	.loc	1 31 19                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:31:19
	bfe.s32 	%r44, %r1, 28, 1;
	shr.u32 	%r45, %r44, 20;
	add.s32 	%r46, %r41, %r45;
	shr.s32 	%r47, %r46, 12;
	.loc	1 30 19                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:30:19
	and.b32  	%r48, %r46, -4096;
	sub.s32 	%r49, %r41, %r48;
	.loc	1 33 40                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:40
	shl.b32 	%r50, %r43, 12;
	.loc	1 33 35                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:35
	add.s32 	%r51, %r49, %r50;
	.loc	1 33 45                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:45
	mad.lo.s32 	%r52, %r47, 49152, %r51;
	.loc	1 33 30                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:30
	mul.wide.s32 	%rd10, %r52, 4;
	add.s64 	%rd1, %rd6, %rd10;
	mov.b32 	%r4, 0;
	.loc	1 33 56                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:33:56
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r3;
	.loc	1 34 30                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:34:30
	mul.wide.u32 	%rd11, %r43, 4;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 34 35                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r6, %r4;
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r8, %r4;
	// end inline asm
	mov.b32 	%f7, %r8;
	.loc	1 35 18                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:35:18
	add.f32 	%f8, %f5, %f7;
	add.f32 	%f9, %f6, %f7;
	.loc	1 37 33                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:37:33
	selp.f32 	%f10, %f8, 0fFF800000, %p1;
	selp.f32 	%f11, %f9, 0fFF800000, %p1;
$L__tmp1:
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r53, %f10;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f12, %r54;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p20, %f10, %f12;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p21, %f10, %f10;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f13, %f10, %f12, %p21;
	selp.f32 	%f14, %f10, %f13, %p20;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r55, %f14;
	shfl.sync.bfly.b32	%r56, %r55, 8, 31, -1;
	mov.b32 	%f15, %r56;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p22, %f14, %f15;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p23, %f14, %f14;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f16, %f14, %f15, %p23;
	selp.f32 	%f17, %f14, %f16, %p22;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r57, %f17;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f18, %r58;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p24, %f17, %f18;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p25, %f17, %f17;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r59, %f11;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f19, %r60;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p26, %f11, %f19;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p27, %f11, %f11;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f20, %f11, %f19, %p26;
	selp.f32 	%f21, %f11, %f20, %p27;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r61, %f21;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f22, %r62;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p28, %f21, %f22;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p29, %f21, %f21;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f23, %f21, %f22, %p29;
	selp.f32 	%f24, %f21, %f23, %p28;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r63, %f24;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f25, %r64;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p30, %f24, %f25;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p31, %f24, %f24;
	.loc	2 131 29                        // triton_helpers.py:131:29
	setp.lt.u32 	%p8, %r37, 4;
	shl.b32 	%r65, %r39, 3;
	shr.u32 	%r66, %r35, 3;
	and.b32  	%r67, %r66, 4;
	or.b32  	%r68, %r65, %r67;
	mov.u32 	%r69, global_smem;
	add.s32 	%r10, %r69, %r68;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r70, %r57, %r58, %p25;
	selp.b32 	%r11, %r57, %r70, %p24;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p8 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 8;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r71, %r63, %r64, %p31;
	selp.b32 	%r13, %r63, %r71, %p30;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p8 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r35, 16;
	shl.b32 	%r72, %r35, 2;
	add.s32 	%r15, %r69, %r72;
	// begin inline asm
	@%p10 ld.shared.b32 %r14, [ %r15 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r14;
	shfl.sync.bfly.b32	%r73, %r14, 1, 31, -1;
	mov.b32 	%f27, %r73;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p32, %f26, %f27;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p33, %f26, %f26;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r74, %r35, 1;
	setp.eq.b32 	%p34, %r74, 1;
	not.pred 	%p35, %p34;
	and.pred  	%p11, %p10, %p35;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r75, %r14, %r73, %p32;
	selp.b32 	%r17, %r14, %r75, %p33;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p11 st.shared.b32 [ %r15 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r76, %r69, %r65;
	ld.shared.f32 	%f28, [%r76];
	ld.shared.f32 	%f29, [%r76+8];
$L__tmp2:
	.loc	1 38 40                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:38:40
	bar.sync 	0;
	shl.b32 	%r77, %r39, 2;
	sub.s32 	%r29, %r76, %r77;
	mov.b32 	%r19, %f28;
	mov.b32 	%r20, %f29;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.v2.b32 [ %r29 + 0 ], { %r19, %r20 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r78, %r40, 2;
	add.s32 	%r79, %r69, %r78;
	ld.shared.u32 	%r32, [%r79];
	.loc	1 39 18                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:39:18
	sub.f32 	%f30, %f8, %f28;
	sub.f32 	%f31, %f9, %f29;
	.loc	1 40 23                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:40:23
	mul.f32 	%f2, %f30, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f31, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	1 42 34                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:42:34
	selp.f32 	%f32, %f1, 0f00000000, %p1;
	selp.f32 	%f33, %f3, 0f00000000, %p1;
$L__tmp3:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r80, %f32;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f34, %r81;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f35, %f32, %f34;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f35;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	mov.b32 	%f36, %r83;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f37;
	shfl.sync.bfly.b32	%r85, %r84, 4, 31, -1;
	mov.b32 	%f38, %r85;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f33;
	shfl.sync.bfly.b32	%r87, %r86, 16, 31, -1;
	mov.b32 	%f40, %r87;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f41, %f33, %f40;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f41;
	shfl.sync.bfly.b32	%r89, %r88, 8, 31, -1;
	mov.b32 	%f42, %r89;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f43;
	shfl.sync.bfly.b32	%r91, %r90, 4, 31, -1;
	mov.b32 	%f44, %r91;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f39;
	// begin inline asm
	@%p8 st.shared.b32 [ %r10 + 0 ], %r22;
	// end inline asm
	mov.b32 	%r24, %f45;
	// begin inline asm
	@%p8 st.shared.b32 [ %r12 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 ld.shared.b32 %r25, [ %r15 + 0 ];
	// end inline asm
	mov.b32 	%f46, %r25;
	shfl.sync.bfly.b32	%r92, %r25, 1, 31, -1;
	mov.b32 	%f47, %r92;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f48;
	// begin inline asm
	@%p11 st.shared.b32 [ %r15 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r30, [%r76];
	ld.shared.u32 	%r31, [%r76+8];
$L__tmp4:
	.loc	1 43 29                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:43:29
	bar.sync 	0;
	// begin inline asm
	@%p12 st.shared.v2.b32 [ %r29 + 0 ], { %r30, %r31 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r33, [%r79];
	.loc	1 44 25                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:44:25
	mul.wide.s32 	%rd12, %r42, 4;
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 44 36                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:44:36
	bfe.u32 	%r93, %r35, 3, 2;
	or.b32  	%r94, %r67, %r93;
	setp.eq.s32 	%p18, %r94, 0;
	// begin inline asm
	@%p18 st.global.b32 [ %rd4 + 0 ], { %r32 };
	// end inline asm
	.loc	1 45 25                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:45:25
	add.s64 	%rd5, %rd9, %rd12;
	.loc	1 45 37                         // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:45:37
	// begin inline asm
	@%p18 st.global.b32 [ %rd5 + 0 ], { %r33 };
	// end inline asm
	.loc	1 45 4                          // cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py:45:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/d6/cd66hixlhcp7ftzr4kzqnfgppfmdzya3baaabzscajm6w5wtmksl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 100
.b8 54
.b8 54
.b8 104
.b8 105
.b8 120
.b8 108
.b8 104
.b8 99
.b8 112
.b8 55
.b8 102
.b8 116
.b8 122
.b8 114
.b8 52
.b8 107
.b8 122
.b8 113
.b8 110
.b8 102
.b8 103
.b8 112
.b8 112
.b8 102
.b8 109
.b8 100
.b8 122
.b8 121
.b8 97
.b8 51
.b8 98
.b8 97
.b8 97
.b8 97
.b8 98
.b8 122
.b8 115
.b8 99
.b8 97
.b8 106
.b8 109
.b8 54
.b8 119
.b8 53
.b8 119
.b8 116
.b8 109
.b8 107
.b8 115
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 100
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 50
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 37                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
