//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_1      // -- Begin function triton_poi_fused_1
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_1
.visible .entry triton_poi_fused_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_1_param_1,
	.param .u32 triton_poi_fused_1_param_2,
	.param .u32 triton_poi_fused_1_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<40>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_poi_fused_1_param_0];
	ld.param.u64 	%rd4, [triton_poi_fused_1_param_1];
$L__tmp0:
	.loc	1 22 28                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:22:33
	shl.b32 	%r7, %r1, 4;
	.loc	1 23 44                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:23:44
	mov.u32 	%r8, %tid.x;
	bfe.u32 	%r9, %r8, 3, 4;
	and.b32  	%r10, %r8, 7;
	and.b32  	%r11, %r8, 15;
	.loc	1 23 23                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:23:23
	or.b32  	%r12, %r7, %r9;
	or.b32  	%r13, %r7, %r11;
	.loc	1 24 21                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:24:21
	setp.lt.s32 	%p4, %r12, 16;
	setp.lt.s32 	%p5, %r13, 16;
	.loc	1 25 28                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:25:33
	shl.b32 	%r14, %r2, 3;
	.loc	1 26 44                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:26:44
	bfe.u32 	%r15, %r8, 4, 3;
	.loc	1 26 23                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:26:23
	or.b32  	%r16, %r14, %r10;
	or.b32  	%r17, %r14, %r15;
	.loc	1 27 21                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:27:21
	setp.lt.s32 	%p6, %r16, 7;
	setp.lt.s32 	%p7, %r17, 7;
	.loc	1 31 19                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:31:19
	shr.s32 	%r19, %r13, 31;
	shr.u32 	%r20, %r19, 30;
	add.s32 	%r21, %r13, %r20;
	shr.s32 	%r22, %r21, 2;
	.loc	1 30 19                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:30:19
	and.b32  	%r23, %r21, -4;
	sub.s32 	%r24, %r13, %r23;
	.loc	1 32 35                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:32:35
	mad.lo.s32 	%r25, %r12, 7, %r16;
	.loc	1 32 30                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:32:30
	mul.wide.s32 	%rd5, %r25, 4;
	add.s64 	%rd1, %rd3, %rd5;
	.loc	1 32 50                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:32:50
	and.pred  	%p1, %p4, %p6;
	and.pred  	%p3, %p5, %p7;
	.loc	1 32 42                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:32:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 32                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:33:32
	shl.b32 	%r26, %r17, 2;
	.loc	1 33 30                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:33:30
	add.s32 	%r27, %r26, %r24;
	.loc	1 33 37                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:33:37
	mad.lo.s32 	%r28, %r22, 28, %r27;
	.loc	1 33 25                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:33:25
	mul.wide.s32 	%rd6, %r28, 4;
	add.s64 	%rd2, %rd4, %rd6;
	.loc	1 33 51                         // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:33:51
	shl.b32 	%r29, %r8, 4;
	and.b32  	%r30, %r29, 112;
	or.b32  	%r31, %r30, %r9;
	and.b32  	%r32, %r8, 127;
	bfe.u32 	%r33, %r29, 4, 3;
	add.s32 	%r34, %r31, %r33;
	shl.b32 	%r35, %r34, 2;
	mov.u32 	%r36, global_smem;
	add.s32 	%r4, %r36, %r35;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r4 + 0 ], %r5;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r37, %r15, %r32;
	shl.b32 	%r38, %r37, 2;
	add.s32 	%r39, %r36, %r38;
	ld.shared.u32 	%r6, [%r39];
	// begin inline asm
	@%p3 st.global.b32 [ %rd2 + 0 ], { %r6 };
	// end inline asm
	.loc	1 33 4                          // c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6p/c6poqkfc4an6yiaoatt2wscwrxc5qluuwej7qolwf6jmikdxnypn.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 112
.b8 111
.b8 113
.b8 107
.b8 102
.b8 99
.b8 52
.b8 97
.b8 110
.b8 54
.b8 121
.b8 105
.b8 97
.b8 111
.b8 97
.b8 116
.b8 116
.b8 50
.b8 119
.b8 115
.b8 99
.b8 119
.b8 114
.b8 120
.b8 99
.b8 53
.b8 113
.b8 108
.b8 117
.b8 117
.b8 119
.b8 101
.b8 106
.b8 55
.b8 113
.b8 111
.b8 108
.b8 119
.b8 102
.b8 54
.b8 106
.b8 109
.b8 105
.b8 107
.b8 100
.b8 120
.b8 110
.b8 121
.b8 112
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 112
.b8 0
	}
	.section	.debug_macinfo	{	}
