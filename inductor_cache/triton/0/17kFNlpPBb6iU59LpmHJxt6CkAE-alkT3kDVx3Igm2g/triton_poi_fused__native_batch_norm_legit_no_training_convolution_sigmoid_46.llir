; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_sigmoid_46(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = sext i32 %13 to i64, !dbg !14
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !14
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 true) #3, !dbg !15
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #3, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #3, !dbg !17
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #3, !dbg !18
  %20 = bitcast i32 %19 to float, !dbg !18
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #3, !dbg !19
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %5, i1 true) #3, !dbg !20
  %23 = fadd float %20, 0x3EE4F8B580000000, !dbg !21
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !22
  %.not.i = icmp eq i32 %24, 0, !dbg !22
  %25 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !22
  %.not1.i = icmp eq i32 %25, 0, !dbg !22
  br i1 %.not.i, label %31, label %26, !dbg !22

26:                                               ; preds = %8
  br i1 %.not1.i, label %29, label %27, !dbg !22

27:                                               ; preds = %26
  %28 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %23) #3, !dbg !22
  br label %__nv_sqrtf.exit, !dbg !22

29:                                               ; preds = %26
  %30 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %23) #3, !dbg !22
  br label %__nv_sqrtf.exit, !dbg !22

31:                                               ; preds = %8
  br i1 %.not1.i, label %34, label %32, !dbg !22

32:                                               ; preds = %31
  %33 = tail call float @llvm.nvvm.sqrt.rn.f(float %23) #3, !dbg !22
  br label %__nv_sqrtf.exit, !dbg !22

34:                                               ; preds = %31
  %35 = tail call float @llvm.nvvm.sqrt.approx.f(float %23) #3, !dbg !22
  br label %__nv_sqrtf.exit, !dbg !22

__nv_sqrtf.exit:                                  ; preds = %27, %29, %32, %34
  %.0.i = phi float [ %28, %27 ], [ %30, %29 ], [ %33, %32 ], [ %35, %34 ], !dbg !22
  %36 = bitcast i32 %16 to float, !dbg !15
  %37 = bitcast i32 %17 to float, !dbg !16
  %38 = fadd float %36, %37, !dbg !23
  %39 = bitcast i32 %18 to float, !dbg !17
  %40 = fsub float %38, %39, !dbg !24
  %41 = bitcast i32 %22 to float, !dbg !20
  %42 = bitcast i32 %21 to float, !dbg !19
  %43 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !25
  %44 = fmul float %40, %43, !dbg !26
  %45 = fmul float %44, %42, !dbg !27
  %46 = fadd float %45, %41, !dbg !28
  %47 = fsub float 0.000000e+00, %46, !dbg !29
  %48 = fmul float %47, 0x3FF7154760000000, !dbg !33
  %49 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %48) #3, !dbg !33
  %50 = fadd float %49, 1.000000e+00, !dbg !34
  %51 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %50) #3, !dbg !35
  %52 = bitcast float %38 to i32, !dbg !36
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %52, ptr addrspace(1) %15, i1 true) #3, !dbg !36
  %53 = getelementptr float, ptr addrspace(1) %6, i64 %14, !dbg !37
  %54 = bitcast float %51 to i32, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %54, ptr addrspace(1) %53, i1 true) #3, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cncr2ol6xr6xepuh2uhck7kl5wczo47raqqyurqpsmzjotkdqk56.py", directory: "inductor_cache/nc")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_sigmoid_46, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_sigmoid_46, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_sigmoid_46", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_sigmoid_46", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 34, scope: !7)
!15 = !DILocation(line: 25, column: 39, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 28, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 20, scope: !7)
!20 = !DILocation(line: 34, column: 20, scope: !7)
!21 = !DILocation(line: 39, column: 19, scope: !7)
!22 = !DILocation(line: 40, column: 27, scope: !7)
!23 = !DILocation(line: 36, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 18, scope: !7)
!25 = !DILocation(line: 42, column: 20, scope: !7)
!26 = !DILocation(line: 45, column: 19, scope: !7)
!27 = !DILocation(line: 46, column: 20, scope: !7)
!28 = !DILocation(line: 47, column: 20, scope: !7)
!29 = !DILocation(line: 47, column: 30, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!32 = !DILocation(line: 48, column: 23, scope: !7)
!33 = !DILocation(line: 47, column: 29, scope: !30, inlinedAt: !32)
!34 = !DILocation(line: 47, column: 20, scope: !30, inlinedAt: !32)
!35 = !DILocation(line: 47, column: 16, scope: !30, inlinedAt: !32)
!36 = !DILocation(line: 49, column: 39, scope: !7)
!37 = !DILocation(line: 50, column: 25, scope: !7)
!38 = !DILocation(line: 50, column: 37, scope: !7)
!39 = !DILocation(line: 50, column: 4, scope: !7)
