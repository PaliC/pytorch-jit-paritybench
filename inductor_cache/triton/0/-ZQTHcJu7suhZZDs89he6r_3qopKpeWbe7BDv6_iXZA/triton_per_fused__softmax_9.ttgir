#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [2, 1], order = [1, 0]}>
#loc = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0)
#loc1 = loc(unknown)
#loc15 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":38:37)
#loc26 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":45:26)
#loc38 = loc(callsite(#loc1 at #loc15))
#loc44 = loc(callsite(#loc1 at #loc26))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__softmax_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0), %arg3: i32 loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<17> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x32xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<1x32xf32, #blocked> loc(#loc1)
    %c3488_i32 = arith.constant 3488 : i32 loc(#loc1)
    %c17_i32 = arith.constant 17 : i32 loc(#loc1)
    %c204_i32 = arith.constant 204 : i32 loc(#loc1)
    %c816_i32 = arith.constant 816 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<1.250000e-01> : tensor<1x32xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c816_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc4)
    %4 = arith.cmpi slt, %3, %cst : tensor<1x32xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %0, %c204_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c204_i32 : i32 loc(#loc7)
    %7 = arith.muli %0, %c17_i32 : i32 loc(#loc8)
    %8 = tt.splat %7 : i32 -> tensor<1x32xi32, #blocked> loc(#loc9)
    %9 = arith.addi %3, %8 : tensor<1x32xi32, #blocked> loc(#loc9)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc10)
    %11 = tt.addptr %10, %9 : tensor<1x32x!tt.ptr<f32>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc10)
    %12 = tt.splat %1 : i1 -> tensor<1x32xi1, #blocked> loc(#loc11)
    %13 = arith.andi %4, %12 : tensor<1x32xi1, #blocked> loc(#loc11)
    %14 = tt.load %11, %13, %cst_0 : tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc12)
    %15 = arith.select %13, %14, %cst_1 : tensor<1x32xi1, #blocked>, tensor<1x32xf32, #blocked> loc(#loc13)
    %16 = "tt.reduce"(%15) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc15)), %arg5: f32 loc(callsite(#loc1 at #loc15))):
      %35 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc46)
      %36 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc47)
      %37 = arith.ori %35, %36 : i1 loc(#loc48)
      %38 = arith.select %37, %arg4, %arg5 : f32 loc(#loc49)
      tt.reduce.return %38 : f32 loc(#loc37)
    }) : (tensor<1x32xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc37)
    %17 = tt.expand_dims %16 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc20)
    %18 = tt.broadcast %17 : tensor<1x1xf32, #blocked> -> tensor<1x32xf32, #blocked> loc(#loc21)
    %19 = arith.subf %14, %18 : tensor<1x32xf32, #blocked> loc(#loc21)
    %20 = arith.mulf %19, %cst_2 : tensor<1x32xf32, #blocked> loc(#loc22)
    %21 = math.exp %20 : tensor<1x32xf32, #blocked> loc(#loc23)
    %22 = arith.select %13, %21, %cst_0 : tensor<1x32xi1, #blocked>, tensor<1x32xf32, #blocked> loc(#loc24)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc26)), %arg5: f32 loc(callsite(#loc1 at #loc26))):
      %35 = arith.addf %arg4, %arg5 : f32 loc(#loc50)
      tt.reduce.return %35 : f32 loc(#loc43)
    }) : (tensor<1x32xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc43)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc28)
    %25 = tt.broadcast %24 : tensor<1x1xf32, #blocked> -> tensor<1x32xf32, #blocked> loc(#loc29)
    %26 = arith.divf %21, %25 : tensor<1x32xf32, #blocked> loc(#loc29)
    %27 = arith.muli %5, %c17_i32 : i32 loc(#loc30)
    %28 = tt.splat %27 : i32 -> tensor<1x32xi32, #blocked> loc(#loc31)
    %29 = arith.addi %3, %28 : tensor<1x32xi32, #blocked> loc(#loc31)
    %30 = arith.muli %6, %c3488_i32 : i32 loc(#loc32)
    %31 = tt.splat %30 : i32 -> tensor<1x32xi32, #blocked> loc(#loc33)
    %32 = arith.addi %29, %31 : tensor<1x32xi32, #blocked> loc(#loc33)
    %33 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc34)
    %34 = tt.addptr %33, %32 : tensor<1x32x!tt.ptr<f32>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc34)
    tt.store %34, %26, %13 : tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc35)
    tt.return loc(#loc36)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":23:28)
#loc3 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":25:21)
#loc4 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":26:34)
#loc5 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":28:21)
#loc6 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":31:19)
#loc7 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":32:19)
#loc8 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:38)
#loc9 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:35)
#loc10 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:30)
#loc11 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:51)
#loc12 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:43)
#loc13 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":37:41)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc20 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":38:40)
#loc21 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":39:18)
#loc22 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":41:18)
#loc23 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":42:24)
#loc24 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":44:43)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc28 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":45:29)
#loc29 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":46:20)
#loc30 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:33)
#loc31 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:30)
#loc32 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:43)
#loc33 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:38)
#loc34 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:25)
#loc35 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:55)
#loc36 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:4)
#loc37 = loc(callsite(#loc14 at #loc15))
#loc39 = loc(callsite(#loc16 at #loc14))
#loc40 = loc(callsite(#loc17 at #loc14))
#loc41 = loc(callsite(#loc18 at #loc14))
#loc42 = loc(callsite(#loc19 at #loc14))
#loc43 = loc(callsite(#loc25 at #loc26))
#loc45 = loc(callsite(#loc27 at #loc25))
#loc46 = loc(callsite(#loc39 at #loc15))
#loc47 = loc(callsite(#loc40 at #loc15))
#loc48 = loc(callsite(#loc41 at #loc15))
#loc49 = loc(callsite(#loc42 at #loc15))
#loc50 = loc(callsite(#loc45 at #loc26))
