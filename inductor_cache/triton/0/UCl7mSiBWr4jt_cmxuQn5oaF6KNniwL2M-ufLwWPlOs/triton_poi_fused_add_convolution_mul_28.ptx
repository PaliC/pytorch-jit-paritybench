//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_mul_28 // -- Begin function triton_poi_fused_add_convolution_mul_28
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_convolution_mul_28
.visible .entry triton_poi_fused_add_convolution_mul_28(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_mul_28_param_7,
	.param .u32 triton_poi_fused_add_convolution_mul_28_param_8,
	.param .u32 triton_poi_fused_add_convolution_mul_28_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<47>;
	.reg .b32 	%r<202>;
	.reg .f32 	%f<117>;
	.reg .b64 	%rd<39>;
	.loc	1 19 0                          // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:19:0

// %bb.0:
	ld.param.u64 	%rd22, [triton_poi_fused_add_convolution_mul_28_param_0];
	ld.param.u64 	%rd23, [triton_poi_fused_add_convolution_mul_28_param_1];
$L__tmp0:
	.loc	1 22 28                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:22:33
	shl.b32 	%r119, %r1, 5;
	ld.param.u64 	%rd24, [triton_poi_fused_add_convolution_mul_28_param_2];
	ld.param.u64 	%rd25, [triton_poi_fused_add_convolution_mul_28_param_3];
	.loc	1 23 44                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:23:44
	mov.u32 	%r120, %tid.x;
	ld.param.u64 	%rd26, [triton_poi_fused_add_convolution_mul_28_param_4];
	bfe.u32 	%r121, %r120, 5, 3;
	ld.param.u64 	%rd27, [triton_poi_fused_add_convolution_mul_28_param_5];
	shl.b32 	%r122, %r120, 2;
	ld.param.u64 	%rd28, [triton_poi_fused_add_convolution_mul_28_param_6];
	and.b32  	%r123, %r122, 28;
	ld.param.u64 	%rd29, [triton_poi_fused_add_convolution_mul_28_param_7];
	.loc	1 23 23                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:23:23
	or.b32  	%r124, %r119, %r121;
	or.b32  	%r125, %r124, 8;
	or.b32  	%r126, %r124, 16;
	or.b32  	%r127, %r124, 24;
	or.b32  	%r128, %r119, %r123;
	.loc	1 24 21                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:24:21
	setp.lt.s32 	%p38, %r124, 256;
	setp.lt.s32 	%p39, %r125, 256;
	setp.lt.s32 	%p40, %r126, 256;
	setp.lt.s32 	%p41, %r127, 256;
	setp.lt.s32 	%p42, %r128, 256;
	.loc	1 25 28                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:25:33
	shl.b32 	%r129, %r2, 7;
	.loc	1 26 44                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:26:44
	and.b32  	%r130, %r122, 124;
	bfe.u32 	%r131, %r120, 3, 5;
	.loc	1 26 23                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:26:23
	or.b32  	%r132, %r129, %r130;
	or.b32  	%r133, %r129, %r131;
	or.b32  	%r134, %r133, 32;
	or.b32  	%r135, %r133, 64;
	or.b32  	%r136, %r133, 96;
	.loc	1 27 21                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:27:21
	setp.lt.s32 	%p5, %r132, 128;
	setp.lt.s32 	%p43, %r133, 128;
	setp.lt.s32 	%p44, %r134, 128;
	setp.lt.s32 	%p45, %r135, 128;
	setp.lt.s32 	%p46, %r136, 128;
	.loc	1 31 19                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:31:19
	shr.s32 	%r138, %r128, 31;
	shr.u32 	%r139, %r138, 26;
	add.s32 	%r140, %r128, %r139;
	.loc	1 30 19                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:30:19
	and.b32  	%r141, %r140, -64;
	sub.s32 	%r142, %r128, %r141;
	.loc	1 32 43                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:32:43
	shl.b32 	%r143, %r124, 7;
	shl.b32 	%r144, %r125, 7;
	shl.b32 	%r145, %r126, 7;
	shl.b32 	%r146, %r127, 7;
	.loc	1 32 39                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:32:39
	add.s32 	%r147, %r132, %r143;
	add.s32 	%r148, %r132, %r144;
	add.s32 	%r149, %r132, %r145;
	add.s32 	%r150, %r132, %r146;
	.loc	1 32 34                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:32:34
	mul.wide.s32 	%rd30, %r147, 4;
	add.s64 	%rd1, %rd22, %rd30;
	mul.wide.s32 	%rd31, %r148, 4;
	add.s64 	%rd2, %rd22, %rd31;
	mul.wide.s32 	%rd32, %r149, 4;
	add.s64 	%rd3, %rd22, %rd32;
	mul.wide.s32 	%rd33, %r150, 4;
	add.s64 	%rd4, %rd22, %rd33;
	.loc	1 32 56                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:32:56
	and.pred  	%p1, %p38, %p5;
	and.pred  	%p2, %p39, %p5;
	and.pred  	%p3, %p40, %p5;
	and.pred  	%p4, %p41, %p5;
	and.pred  	%p34, %p42, %p43;
	and.pred  	%p35, %p44, %p42;
	and.pred  	%p36, %p45, %p42;
	and.pred  	%p37, %p46, %p42;
	.loc	1 32 48                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:32:48
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 33 30                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:33:30
	mul.wide.s32 	%rd34, %r132, 4;
	add.s64 	%rd5, %rd23, %rd34;
	.loc	1 33 35                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:33:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r19;
	mov.b32 	%f18, %r20;
	mov.b32 	%f19, %r21;
	mov.b32 	%f20, %r22;
	.loc	1 34 30                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:34:30
	add.s64 	%rd6, %rd24, %rd34;
	.loc	1 34 35                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:34:35
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r23;
	mov.b32 	%f22, %r24;
	mov.b32 	%f23, %r25;
	mov.b32 	%f24, %r26;
	.loc	1 35 30                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:35:30
	add.s64 	%rd7, %rd25, %rd30;
	add.s64 	%rd8, %rd25, %rd31;
	add.s64 	%rd9, %rd25, %rd32;
	add.s64 	%rd10, %rd25, %rd33;
	.loc	1 35 44                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:35:44
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r27;
	mov.b32 	%f26, %r28;
	mov.b32 	%f27, %r29;
	mov.b32 	%f28, %r30;
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r31;
	mov.b32 	%f30, %r32;
	mov.b32 	%f31, %r33;
	mov.b32 	%f32, %r34;
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r35;
	mov.b32 	%f34, %r36;
	mov.b32 	%f35, %r37;
	mov.b32 	%f36, %r38;
	// begin inline asm
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	@%p4 ld.global.L1::evict_last.v4.b32 { %r39, %r40, %r41, %r42 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r39;
	mov.b32 	%f38, %r40;
	mov.b32 	%f39, %r41;
	mov.b32 	%f40, %r42;
	.loc	1 36 30                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:36:30
	add.s64 	%rd11, %rd26, %rd34;
	.loc	1 36 35                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:36:35
	// begin inline asm
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	mov.u32 %r46, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r43, %r44, %r45, %r46 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r43;
	mov.b32 	%f42, %r44;
	mov.b32 	%f43, %r45;
	mov.b32 	%f44, %r46;
	.loc	1 37 30                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:37:30
	add.s64 	%rd12, %rd27, %rd34;
	.loc	1 37 35                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:37:35
	// begin inline asm
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r47, %r48, %r49, %r50 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r47;
	mov.b32 	%f46, %r48;
	mov.b32 	%f47, %r49;
	mov.b32 	%f48, %r50;
	.loc	1 38 31                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:38:31
	add.s64 	%rd13, %rd28, %rd34;
	.loc	1 38 36                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:38:36
	// begin inline asm
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	mov.u32 %r54, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r51, %r52, %r53, %r54 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f49, %r51;
	mov.b32 	%f50, %r52;
	mov.b32 	%f51, %r53;
	mov.b32 	%f52, %r54;
	.loc	1 39 18                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:39:18
	add.f32 	%f53, %f1, %f17;
	add.f32 	%f54, %f2, %f18;
	add.f32 	%f55, %f3, %f19;
	add.f32 	%f56, %f4, %f20;
	add.f32 	%f57, %f5, %f17;
	add.f32 	%f58, %f6, %f18;
	add.f32 	%f59, %f7, %f19;
	add.f32 	%f60, %f8, %f20;
	add.f32 	%f61, %f9, %f17;
	add.f32 	%f62, %f10, %f18;
	add.f32 	%f63, %f11, %f19;
	add.f32 	%f64, %f12, %f20;
	add.f32 	%f65, %f13, %f17;
	add.f32 	%f66, %f14, %f18;
	add.f32 	%f67, %f15, %f19;
	add.f32 	%f68, %f16, %f20;
	.loc	1 41 18                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:41:18
	fma.rn.f32 	%f69, %f21, %f25, %f41;
	fma.rn.f32 	%f70, %f22, %f26, %f42;
	fma.rn.f32 	%f71, %f23, %f27, %f43;
	fma.rn.f32 	%f72, %f24, %f28, %f44;
	fma.rn.f32 	%f73, %f21, %f29, %f41;
	fma.rn.f32 	%f74, %f22, %f30, %f42;
	fma.rn.f32 	%f75, %f23, %f31, %f43;
	fma.rn.f32 	%f76, %f24, %f32, %f44;
	fma.rn.f32 	%f77, %f21, %f33, %f41;
	fma.rn.f32 	%f78, %f22, %f34, %f42;
	fma.rn.f32 	%f79, %f23, %f35, %f43;
	fma.rn.f32 	%f80, %f24, %f36, %f44;
	fma.rn.f32 	%f81, %f21, %f37, %f41;
	fma.rn.f32 	%f82, %f22, %f38, %f42;
	fma.rn.f32 	%f83, %f23, %f39, %f43;
	fma.rn.f32 	%f84, %f24, %f40, %f44;
	.loc	1 43 19                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:43:19
	fma.rn.f32 	%f85, %f53, %f45, %f49;
	fma.rn.f32 	%f86, %f54, %f46, %f50;
	fma.rn.f32 	%f87, %f55, %f47, %f51;
	fma.rn.f32 	%f88, %f56, %f48, %f52;
	fma.rn.f32 	%f89, %f57, %f45, %f49;
	fma.rn.f32 	%f90, %f58, %f46, %f50;
	fma.rn.f32 	%f91, %f59, %f47, %f51;
	fma.rn.f32 	%f92, %f60, %f48, %f52;
	fma.rn.f32 	%f93, %f61, %f45, %f49;
	fma.rn.f32 	%f94, %f62, %f46, %f50;
	fma.rn.f32 	%f95, %f63, %f47, %f51;
	fma.rn.f32 	%f96, %f64, %f48, %f52;
	fma.rn.f32 	%f97, %f65, %f45, %f49;
	fma.rn.f32 	%f98, %f66, %f46, %f50;
	fma.rn.f32 	%f99, %f67, %f47, %f51;
	fma.rn.f32 	%f100, %f68, %f48, %f52;
	.loc	1 44 19                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:44:19
	add.f32 	%f101, %f69, %f85;
	add.f32 	%f102, %f70, %f86;
	add.f32 	%f103, %f71, %f87;
	add.f32 	%f104, %f72, %f88;
	add.f32 	%f105, %f73, %f89;
	add.f32 	%f106, %f74, %f90;
	add.f32 	%f107, %f75, %f91;
	add.f32 	%f108, %f76, %f92;
	add.f32 	%f109, %f77, %f93;
	add.f32 	%f110, %f78, %f94;
	add.f32 	%f111, %f79, %f95;
	add.f32 	%f112, %f80, %f96;
	add.f32 	%f113, %f81, %f97;
	add.f32 	%f114, %f82, %f98;
	add.f32 	%f115, %f83, %f99;
	add.f32 	%f116, %f84, %f100;
	.loc	1 45 4                          // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:45:4
	bar.sync 	0;
	.loc	1 46 48                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:46:48
	mov.b32 	%r55, %f53;
	mov.b32 	%r56, %f54;
	mov.b32 	%r57, %f55;
	mov.b32 	%r58, %f56;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	mov.b32 	%r59, %f57;
	mov.b32 	%r60, %f58;
	mov.b32 	%r61, %f59;
	mov.b32 	%r62, %f60;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd2 + 0 ], { %r59, %r60, %r61, %r62 };
	// end inline asm
	mov.b32 	%r63, %f61;
	mov.b32 	%r64, %f62;
	mov.b32 	%r65, %f63;
	mov.b32 	%r66, %f64;
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd3 + 0 ], { %r63, %r64, %r65, %r66 };
	// end inline asm
	mov.b32 	%r67, %f65;
	mov.b32 	%r68, %f66;
	mov.b32 	%r69, %f67;
	mov.b32 	%r70, %f68;
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd4 + 0 ], { %r67, %r68, %r69, %r70 };
	// end inline asm
	.loc	1 47 33                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:47:33
	shl.b32 	%r151, %r133, 6;
	shl.b32 	%r152, %r134, 6;
	shl.b32 	%r153, %r135, 6;
	shl.b32 	%r154, %r136, 6;
	.loc	1 47 43                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:47:43
	shl.b32 	%r155, %r140, 7;
	and.b32  	%r156, %r155, -8192;
	.loc	1 47 30                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:47:30
	add.s32 	%r157, %r156, %r142;
	.loc	1 47 38                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:47:38
	add.s32 	%r158, %r157, %r151;
	add.s32 	%r159, %r157, %r152;
	add.s32 	%r160, %r157, %r153;
	add.s32 	%r161, %r157, %r154;
	.loc	1 47 25                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:47:25
	mul.wide.s32 	%rd35, %r158, 4;
	add.s64 	%rd18, %rd29, %rd35;
	mul.wide.s32 	%rd36, %r159, 4;
	add.s64 	%rd19, %rd29, %rd36;
	mul.wide.s32 	%rd37, %r160, 4;
	add.s64 	%rd20, %rd29, %rd37;
	mul.wide.s32 	%rd38, %r161, 4;
	add.s64 	%rd21, %rd29, %rd38;
	.loc	1 47 55                         // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:47:55
	shl.b32 	%r162, %r120, 7;
	and.b32  	%r163, %r162, 3968;
	or.b32  	%r164, %r163, %r121;
	and.b32  	%r165, %r122, 1020;
	shr.u32 	%r166, %r163, 1;
	mov.u32 	%r167, global_smem;
	add.s32 	%r168, %r167, %r166;
	shl.b32 	%r169, %r164, 2;
	add.s32 	%r71, %r168, %r169;
	mov.b32 	%r72, %f101;
	mov.pred 	%p18, -1;
	// begin inline asm
	@%p18 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	or.b32  	%r170, %r163, 32;
	shr.u32 	%r171, %r170, 1;
	add.s32 	%r172, %r167, %r171;
	add.s32 	%r173, %r172, %r169;
	add.s32 	%r73, %r173, 128;
	mov.b32 	%r74, %f102;
	// begin inline asm
	@%p18 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	or.b32  	%r174, %r163, 64;
	shr.u32 	%r175, %r174, 1;
	add.s32 	%r176, %r167, %r175;
	add.s32 	%r177, %r176, %r169;
	add.s32 	%r75, %r177, 256;
	mov.b32 	%r76, %f103;
	// begin inline asm
	@%p18 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	or.b32  	%r178, %r163, 96;
	shr.u32 	%r179, %r178, 1;
	add.s32 	%r180, %r167, %r179;
	add.s32 	%r181, %r180, %r169;
	add.s32 	%r77, %r181, 384;
	mov.b32 	%r78, %f104;
	// begin inline asm
	@%p18 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	add.s32 	%r79, %r71, 32;
	mov.b32 	%r80, %f105;
	// begin inline asm
	@%p18 st.shared.b32 [ %r79 + 0 ], %r80;
	// end inline asm
	add.s32 	%r81, %r173, 160;
	mov.b32 	%r82, %f106;
	// begin inline asm
	@%p18 st.shared.b32 [ %r81 + 0 ], %r82;
	// end inline asm
	add.s32 	%r83, %r177, 288;
	mov.b32 	%r84, %f107;
	// begin inline asm
	@%p18 st.shared.b32 [ %r83 + 0 ], %r84;
	// end inline asm
	add.s32 	%r85, %r181, 416;
	mov.b32 	%r86, %f108;
	// begin inline asm
	@%p18 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	add.s32 	%r87, %r71, 64;
	mov.b32 	%r88, %f109;
	// begin inline asm
	@%p18 st.shared.b32 [ %r87 + 0 ], %r88;
	// end inline asm
	add.s32 	%r89, %r173, 192;
	mov.b32 	%r90, %f110;
	// begin inline asm
	@%p18 st.shared.b32 [ %r89 + 0 ], %r90;
	// end inline asm
	add.s32 	%r91, %r177, 320;
	mov.b32 	%r92, %f111;
	// begin inline asm
	@%p18 st.shared.b32 [ %r91 + 0 ], %r92;
	// end inline asm
	add.s32 	%r93, %r181, 448;
	mov.b32 	%r94, %f112;
	// begin inline asm
	@%p18 st.shared.b32 [ %r93 + 0 ], %r94;
	// end inline asm
	add.s32 	%r95, %r71, 96;
	mov.b32 	%r96, %f113;
	// begin inline asm
	@%p18 st.shared.b32 [ %r95 + 0 ], %r96;
	// end inline asm
	add.s32 	%r97, %r173, 224;
	mov.b32 	%r98, %f114;
	// begin inline asm
	@%p18 st.shared.b32 [ %r97 + 0 ], %r98;
	// end inline asm
	add.s32 	%r99, %r177, 352;
	mov.b32 	%r100, %f115;
	// begin inline asm
	@%p18 st.shared.b32 [ %r99 + 0 ], %r100;
	// end inline asm
	add.s32 	%r101, %r181, 480;
	mov.b32 	%r102, %f116;
	// begin inline asm
	@%p18 st.shared.b32 [ %r101 + 0 ], %r102;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r182, %r120, 1;
	and.b32  	%r183, %r182, 496;
	add.s32 	%r184, %r167, %r183;
	shl.b32 	%r185, %r165, 2;
	add.s32 	%r186, %r184, %r185;
	or.b32  	%r187, %r165, 1024;
	shr.u32 	%r188, %r187, 1;
	and.b32  	%r189, %r188, 1008;
	add.s32 	%r190, %r167, %r189;
	add.s32 	%r191, %r190, %r185;
	ld.shared.v4.u32 	{%r107, %r108, %r109, %r110}, [%r191+4096];
	or.b32  	%r192, %r165, 2048;
	shr.u32 	%r193, %r192, 1;
	and.b32  	%r194, %r193, 1520;
	add.s32 	%r195, %r167, %r194;
	add.s32 	%r196, %r195, %r185;
	ld.shared.v4.u32 	{%r111, %r112, %r113, %r114}, [%r196+8192];
	or.b32  	%r197, %r165, 3072;
	shr.u32 	%r198, %r197, 1;
	and.b32  	%r199, %r198, 2032;
	add.s32 	%r200, %r167, %r199;
	add.s32 	%r201, %r200, %r185;
	ld.shared.v4.u32 	{%r115, %r116, %r117, %r118}, [%r201+12288];
	ld.shared.v4.u32 	{%r103, %r104, %r105, %r106}, [%r186];
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd18 + 0 ], { %r103, %r104, %r105, %r106 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.v4.b32 [ %rd19 + 0 ], { %r107, %r108, %r109, %r110 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd20 + 0 ], { %r111, %r112, %r113, %r114 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd21 + 0 ], { %r115, %r116, %r117, %r118 };
	// end inline asm
	.loc	1 47 4                          // cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/s3/cs36y472frnonxyw4lrbkwgfgldej4xipv4regdyjhur36y6u55z.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 51
.b8 54
.b8 121
.b8 52
.b8 55
.b8 50
.b8 102
.b8 114
.b8 110
.b8 111
.b8 110
.b8 120
.b8 121
.b8 119
.b8 52
.b8 108
.b8 114
.b8 98
.b8 107
.b8 119
.b8 103
.b8 102
.b8 103
.b8 108
.b8 100
.b8 101
.b8 106
.b8 52
.b8 120
.b8 105
.b8 112
.b8 118
.b8 52
.b8 114
.b8 101
.b8 103
.b8 100
.b8 121
.b8 106
.b8 104
.b8 117
.b8 114
.b8 51
.b8 54
.b8 121
.b8 54
.b8 117
.b8 53
.b8 53
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 51
.b8 0
	}
	.section	.debug_macinfo	{	}
