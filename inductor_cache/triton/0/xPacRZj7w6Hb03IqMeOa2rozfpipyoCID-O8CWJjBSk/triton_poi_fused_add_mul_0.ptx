//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_0 // -- Begin function triton_poi_fused_add_mul_0
                                        // @triton_poi_fused_add_mul_0
.visible .entry triton_poi_fused_add_mul_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_0_param_2,
	.param .u32 triton_poi_fused_add_mul_0_param_3
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<32>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_add_mul_0_param_0];
	ld.param.u64 	%rd1, [triton_poi_fused_add_mul_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:21:33
	shl.b32 	%r22, %r1, 6;
	ld.param.u64 	%rd15, [triton_poi_fused_add_mul_0_param_2];
	.loc	1 22 36                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 1;
	and.b32  	%r25, %r24, 62;
	.loc	1 22 23                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:22:23
	or.b32  	%r26, %r22, %r25;
	.loc	1 23 21                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:23:21
	setp.lt.s32 	%p2, %r26, 64;
	mov.pred 	%p1, -1;
	.loc	1 25 19                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:25:19
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 27 30                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:27:30
	mul.wide.s32 	%rd16, %r26, 4;
	add.s64 	%rd2, %rd15, %rd16;
	.loc	1 27 35                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:27:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p2 ld.global.v2.b32 { %r3, %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	.loc	1 28 30                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:28:30
	add.s64 	%rd3, %rd1, 4;
	.loc	1 28 19                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:28:19
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r5;
	.loc	1 30 35                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:30:35
	add.s32 	%r27, %r26, 64;
	.loc	1 30 30                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:30:30
	mul.wide.s32 	%rd17, %r27, 4;
	add.s64 	%rd4, %rd15, %rd17;
	.loc	1 30 40                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:30:40
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p2 ld.global.v2.b32 { %r6, %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	.loc	1 31 30                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:31:30
	add.s64 	%rd5, %rd1, 8;
	.loc	1 31 19                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:31:19
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	.loc	1 33 37                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:33:37
	add.s32 	%r28, %r26, 128;
	.loc	1 33 31                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:33:31
	mul.wide.s32 	%rd18, %r28, 4;
	add.s64 	%rd6, %rd15, %rd18;
	.loc	1 33 42                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:33:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.v2.b32 { %r9, %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	mov.b32 	%f9, %r10;
	.loc	1 34 31                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:34:31
	add.s64 	%rd7, %rd1, 12;
	.loc	1 34 20                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:34:20
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	.loc	1 36 37                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:36:37
	add.s32 	%r29, %r26, 192;
	.loc	1 36 31                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:36:31
	mul.wide.s32 	%rd19, %r29, 4;
	add.s64 	%rd8, %rd15, %rd19;
	.loc	1 36 42                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:36:42
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p2 ld.global.v2.b32 { %r12, %r13 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	mov.b32 	%f12, %r13;
	.loc	1 37 31                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:37:31
	add.s64 	%rd9, %rd1, 16;
	.loc	1 37 20                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:37:20
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.b32 { %r14 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	.loc	1 39 37                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:39:37
	add.s32 	%r30, %r26, 256;
	.loc	1 39 31                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:39:31
	mul.wide.s32 	%rd20, %r30, 4;
	add.s64 	%rd10, %rd15, %rd20;
	.loc	1 39 42                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:39:42
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p2 ld.global.v2.b32 { %r15, %r16 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r15;
	mov.b32 	%f15, %r16;
	.loc	1 40 31                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:40:31
	add.s64 	%rd11, %rd1, 20;
	.loc	1 40 20                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:40:20
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.b32 { %r17 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r17;
	.loc	1 42 37                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:42:37
	add.s32 	%r31, %r26, 320;
	.loc	1 42 31                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:42:31
	mul.wide.s32 	%rd21, %r31, 4;
	add.s64 	%rd12, %rd15, %rd21;
	.loc	1 42 42                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:42:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p2 ld.global.v2.b32 { %r18, %r19 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r18;
	mov.b32 	%f18, %r19;
	.loc	1 44 18                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:44:18
	mul.f32 	%f19, %f4, %f5;
	mul.f32 	%f20, %f4, %f6;
	.loc	1 45 18                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:45:18
	fma.rn.f32 	%f21, %f1, %f2, %f19;
	fma.rn.f32 	%f22, %f1, %f3, %f20;
	.loc	1 47 19                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:47:19
	fma.rn.f32 	%f23, %f7, %f8, %f21;
	fma.rn.f32 	%f24, %f7, %f9, %f22;
	.loc	1 49 20                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:49:20
	fma.rn.f32 	%f25, %f10, %f11, %f23;
	fma.rn.f32 	%f26, %f10, %f12, %f24;
	.loc	1 51 20                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:51:20
	fma.rn.f32 	%f27, %f13, %f14, %f25;
	fma.rn.f32 	%f28, %f13, %f15, %f26;
	.loc	1 53 20                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:53:20
	fma.rn.f32 	%f29, %f16, %f17, %f27;
	fma.rn.f32 	%f30, %f16, %f18, %f28;
	.loc	1 54 28                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:54:28
	add.s64 	%rd13, %rd14, %rd16;
	.loc	1 54 40                         // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:54:40
	mov.b32 	%r20, %f29;
	mov.b32 	%r21, %f30;
	// begin inline asm
	@%p2 st.global.v2.b32 [ %rd13 + 0 ], { %r20, %r21 };
	// end inline asm
	.loc	1 54 4                          // c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py:54:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/24/c24jvlhd54cansafjpv2vq4noyzsorv73ev6cqcmtia6gbr4keij.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 50
.b8 52
.b8 106
.b8 118
.b8 108
.b8 104
.b8 100
.b8 53
.b8 52
.b8 99
.b8 97
.b8 110
.b8 115
.b8 97
.b8 102
.b8 106
.b8 112
.b8 118
.b8 50
.b8 118
.b8 113
.b8 52
.b8 110
.b8 111
.b8 121
.b8 122
.b8 115
.b8 111
.b8 114
.b8 118
.b8 55
.b8 51
.b8 101
.b8 118
.b8 54
.b8 99
.b8 113
.b8 99
.b8 109
.b8 116
.b8 105
.b8 97
.b8 54
.b8 103
.b8 98
.b8 114
.b8 52
.b8 107
.b8 101
.b8 105
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 50
.b8 52
.b8 0
	}
	.section	.debug_macinfo	{	}
