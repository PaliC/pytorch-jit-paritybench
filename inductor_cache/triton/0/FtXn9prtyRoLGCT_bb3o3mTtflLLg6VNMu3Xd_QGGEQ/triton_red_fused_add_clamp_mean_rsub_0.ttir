#loc = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":19:0)
#loc1 = loc(unknown)
#loc23 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":42:25)
#loc36 = loc(callsite(#loc1 at #loc23))
module {
  tt.func public @triton_red_fused_add_clamp_mean_rsub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":19:0)) attributes {noinline = false} {
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_1 = arith.constant dense<256> : tensor<1x2048xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %0 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc5)
    %4 = scf.for %arg4 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg5 = %cst_3) -> (tensor<1x2048xf32>)  : i32 {
      %10 = tt.splat %arg4 : i32 -> tensor<1x2048xi32> loc(#loc7)
      %11 = arith.addi %10, %1 : tensor<1x2048xi32> loc(#loc7)
      %12 = arith.cmpi slt, %11, %cst_2 : tensor<1x2048xi32> loc(#loc8)
      %13 = arith.remsi %11, %cst_1 : tensor<1x2048xi32> loc(#loc9)
      %14 = tt.addptr %2, %11 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc4)
      %15 = tt.load %14, %12, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc10)
      %16 = tt.addptr %3, %13 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc5)
      %17 = tt.load %16, %12, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc11)
      %18 = arith.subf %cst_0, %15 : tensor<1x2048xf32> loc(#loc12)
      %19 = arith.addf %18, %17 : tensor<1x2048xf32> loc(#loc13)
      %20 = arith.cmpf ogt, %19, %cst_3 : tensor<1x2048xf32> loc(#loc31)
      %21 = arith.cmpf une, %19, %19 : tensor<1x2048xf32> loc(#loc32)
      %22 = arith.ori %20, %21 : tensor<1x2048xi1> loc(#loc33)
      %23 = arith.select %22, %19, %cst_3 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc34)
      %24 = arith.addf %arg5, %23 : tensor<1x2048xf32> loc(#loc19)
      %25 = arith.select %12, %24, %arg5 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc20)
      scf.yield %25 : tensor<1x2048xf32> loc(#loc21)
    } loc(#loc6)
    %5 = "tt.reduce"(%4) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc23)), %arg5: f32 loc(callsite(#loc1 at #loc23))):
      %10 = arith.addf %arg4, %arg5 : f32 loc(#loc38)
      tt.reduce.return %10 : f32 loc(#loc35)
    }) : (tensor<1x2048xf32>) -> tensor<1xf32> loc(#loc35)
    %6 = tt.expand_dims %5 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc25)
    %7 = arith.divf %6, %cst : tensor<1x1xf32> loc(#loc26)
    gpu.barrier loc(#loc27)
    %8 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc28)
    %9 = tt.splat %8 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    tt.store %9, %7 : tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    tt.return loc(#loc30)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":25:25)
#loc3 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":25:33)
#loc4 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":32:34)
#loc5 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":33:34)
#loc6 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":27:36)
#loc7 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":28:27)
#loc8 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":29:25)
#loc9 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":31:23)
#loc10 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":32:39)
#loc11 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":33:39)
#loc12 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":35:22)
#loc13 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":36:22)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc15 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":38:44)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc19 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":40:23)
#loc20 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":41:38)
#loc21 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":41:8)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc25 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":42:28)
#loc26 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":44:19)
#loc27 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":45:4)
#loc28 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":46:28)
#loc29 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":46:71)
#loc30 = loc("inductor_cache/lh/clhqzg3owb2ecwak7dt5iqdsy342j7xlyb3du24trd3gkbshwuuc.py":46:4)
#loc31 = loc(callsite(#loc14 at #loc15))
#loc32 = loc(callsite(#loc16 at #loc15))
#loc33 = loc(callsite(#loc17 at #loc15))
#loc34 = loc(callsite(#loc18 at #loc15))
#loc35 = loc(callsite(#loc22 at #loc23))
#loc37 = loc(callsite(#loc24 at #loc22))
#loc38 = loc(callsite(#loc37 at #loc23))
