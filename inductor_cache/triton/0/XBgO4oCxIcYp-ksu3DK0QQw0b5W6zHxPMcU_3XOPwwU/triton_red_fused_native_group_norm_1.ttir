#loc = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":19:0)
#loc1 = loc(unknown)
#loc35 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":44:41)
#loc61 = loc(callsite(#loc1 at #loc35))
module {
  tt.func public @triton_red_fused_native_group_norm_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":19:0), %arg4: i32 loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<4x128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<4x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.280000e+02> : tensor<4x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<4x128xf32> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<4x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<1x128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<1x128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<1x128xi32> loc(#loc1)
    %cst_8 = arith.constant dense<16> : tensor<1x128xi32> loc(#loc1)
    %cst_9 = arith.constant dense<128> : tensor<1x128xi32> loc(#loc1)
    %cst_10 = arith.constant dense<4> : tensor<4x1xi32> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<4xi32> -> tensor<4x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<4x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<4x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_10 : tensor<4x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<128xi32> -> tensor<1x128xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_9 : tensor<1x128xi32> loc(#loc10)
    %10 = arith.remsi %8, %cst_8 : tensor<1x128xi32> loc(#loc11)
    %11 = arith.divsi %8, %cst_8 : tensor<1x128xi32> loc(#loc12)
    %12 = arith.remsi %10, %cst_7 : tensor<1x128xi32> loc(#loc13)
    %13 = arith.remsi %12, %cst_6 : tensor<1x128xi32> loc(#loc14)
    %14 = arith.muli %13, %cst_6 : tensor<1x128xi32> loc(#loc15)
    %15 = arith.divsi %10, %cst_5 : tensor<1x128xi32> loc(#loc16)
    %16 = arith.muli %15, %cst_7 : tensor<1x128xi32> loc(#loc17)
    %17 = arith.addi %14, %16 : tensor<1x128xi32> loc(#loc18)
    %18 = arith.divsi %12, %cst_6 : tensor<1x128xi32> loc(#loc19)
    %19 = arith.muli %18, %cst_5 : tensor<1x128xi32> loc(#loc20)
    %20 = arith.addi %17, %19 : tensor<1x128xi32> loc(#loc21)
    %21 = arith.muli %11, %cst_8 : tensor<1x128xi32> loc(#loc22)
    %22 = arith.addi %20, %21 : tensor<1x128xi32> loc(#loc23)
    %23 = arith.muli %5, %cst_4 : tensor<4x1xi32> loc(#loc24)
    %24 = tt.broadcast %22 : tensor<1x128xi32> -> tensor<4x128xi32> loc(#loc25)
    %25 = tt.broadcast %23 : tensor<4x1xi32> -> tensor<4x128xi32> loc(#loc25)
    %26 = arith.addi %24, %25 : tensor<4x128xi32> loc(#loc25)
    %27 = arith.divsi %10, %cst_7 : tensor<1x128xi32> loc(#loc26)
    %28 = arith.remsi %27, %cst_6 : tensor<1x128xi32> loc(#loc27)
    %29 = tt.broadcast %28 : tensor<1x128xi32> -> tensor<4x128xi32> loc(#loc28)
    %30 = arith.addi %26, %29 : tensor<4x128xi32> loc(#loc28)
    %31 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<4x128x!tt.ptr<f32>> loc(#loc29)
    %32 = tt.addptr %31, %30 : tensor<4x128x!tt.ptr<f32>>, tensor<4x128xi32> loc(#loc29)
    %33 = tt.broadcast %9 : tensor<1x128xi1> -> tensor<4x128xi1> loc(#loc30)
    %34 = tt.broadcast %6 : tensor<4x1xi1> -> tensor<4x128xi1> loc(#loc30)
    %35 = arith.andi %33, %34 : tensor<4x128xi1> loc(#loc30)
    %36 = tt.load %32, %35, %cst_3 evictionPolicy = evict_last : tensor<4x128x!tt.ptr<f32>> loc(#loc31)
    %37 = arith.select %35, %36, %cst_3 : tensor<4x128xi1>, tensor<4x128xf32> loc(#loc32)
    %38 = arith.select %35, %cst_0, %cst_3 : tensor<4x128xi1>, tensor<4x128xf32> loc(#loc33)
    %39:3 = "tt.reduce"(%37, %cst_3, %38) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc35)), %arg7: f32 loc(callsite(#loc1 at #loc35)), %arg8: f32 loc(callsite(#loc1 at #loc35)), %arg9: f32 loc(callsite(#loc1 at #loc35)), %arg10: f32 loc(callsite(#loc1 at #loc35)), %arg11: f32 loc(callsite(#loc1 at #loc35))):
      %51 = arith.subf %arg9, %arg6 : f32 loc(#loc74)
      %52 = arith.addf %arg8, %arg11 : f32 loc(#loc75)
      %53 = arith.cmpf oeq, %52, %cst : f32 loc(#loc76)
      %54 = arith.divf %arg11, %52 : f32 loc(#loc77)
      %55 = arith.select %53, %cst, %54 : f32 loc(#loc78)
      %56 = arith.mulf %51, %55 : f32 loc(#loc79)
      %57 = arith.addf %arg6, %56 : f32 loc(#loc80)
      %58 = arith.addf %arg7, %arg10 : f32 loc(#loc81)
      %59 = arith.mulf %51, %51 : f32 loc(#loc82)
      %60 = arith.mulf %59, %arg8 : f32 loc(#loc83)
      %61 = arith.mulf %60, %55 : f32 loc(#loc84)
      %62 = arith.addf %58, %61 : f32 loc(#loc85)
      tt.reduce.return %57, %62, %52 : f32, f32, f32 loc(#loc60)
    }) : (tensor<4x128xf32>, tensor<4x128xf32>, tensor<4x128xf32>) -> (tensor<4xf32>, tensor<4xf32>, tensor<4xf32>) loc(#loc60)
    %40 = tt.expand_dims %39#0 {axis = 1 : i32} : tensor<4xf32> -> tensor<4x1xf32> loc(#loc48)
    %41 = tt.expand_dims %39#1 {axis = 1 : i32} : tensor<4xf32> -> tensor<4x1xf32> loc(#loc49)
    %42 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<4x1x!tt.ptr<f32>> loc(#loc50)
    %43 = tt.addptr %42, %5 : tensor<4x1x!tt.ptr<f32>>, tensor<4x1xi32> loc(#loc50)
    tt.store %43, %40, %6 : tensor<4x1x!tt.ptr<f32>> loc(#loc51)
    %44 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<4x1x!tt.ptr<f32>> loc(#loc52)
    %45 = tt.addptr %44, %5 : tensor<4x1x!tt.ptr<f32>>, tensor<4x1xi32> loc(#loc52)
    tt.store %45, %41, %6 : tensor<4x1x!tt.ptr<f32>> loc(#loc53)
    %46 = arith.divf %41, %cst_2 : tensor<4x1xf32> loc(#loc54)
    %47 = arith.addf %46, %cst_1 : tensor<4x1xf32> loc(#loc55)
    %48 = tt.extern_elementwise %47 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<4x1xf32>) -> tensor<4x1xf32> loc(#loc56)
    %49 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<4x1x!tt.ptr<f32>> loc(#loc57)
    %50 = tt.addptr %49, %5 : tensor<4x1x!tt.ptr<f32>>, tensor<4x1xi32> loc(#loc57)
    tt.store %50, %48, %6 : tensor<4x1x!tt.ptr<f32>> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":22:28)
#loc3 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":22:33)
#loc4 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":23:36)
#loc5 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":23:44)
#loc6 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":23:23)
#loc7 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":24:21)
#loc8 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":25:25)
#loc9 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":25:33)
#loc10 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":32:25)
#loc11 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":33:23)
#loc12 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":34:23)
#loc13 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:45)
#loc14 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:51)
#loc15 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:38)
#loc16 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:66)
#loc17 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:60)
#loc18 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:57)
#loc19 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:88)
#loc20 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:74)
#loc21 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:71)
#loc22 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:96)
#loc23 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:93)
#loc24 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:105)
#loc25 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:101)
#loc26 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:119)
#loc27 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:124)
#loc28 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:112)
#loc29 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:34)
#loc30 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:138)
#loc31 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":35:130)
#loc32 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":40:60)
#loc33 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":42:64)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc48 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":46:20)
#loc49 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":47:20)
#loc50 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":49:25)
#loc51 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":49:36)
#loc52 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":50:25)
#loc53 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":50:36)
#loc54 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":52:18)
#loc55 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":54:18)
#loc56 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":55:27)
#loc57 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":56:25)
#loc58 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":56:36)
#loc59 = loc("inductor_cache/r3/cr36sfypyfk7yrlvtwy5gtewmuznx2we75eglbvxnixhy5sbl3jp.py":56:4)
#loc60 = loc(callsite(#loc34 at #loc35))
#loc62 = loc(callsite(#loc36 at #loc34))
#loc63 = loc(callsite(#loc37 at #loc34))
#loc64 = loc(callsite(#loc38 at #loc34))
#loc65 = loc(callsite(#loc39 at #loc34))
#loc66 = loc(callsite(#loc40 at #loc34))
#loc67 = loc(callsite(#loc41 at #loc34))
#loc68 = loc(callsite(#loc42 at #loc34))
#loc69 = loc(callsite(#loc43 at #loc34))
#loc70 = loc(callsite(#loc44 at #loc34))
#loc71 = loc(callsite(#loc45 at #loc34))
#loc72 = loc(callsite(#loc46 at #loc34))
#loc73 = loc(callsite(#loc47 at #loc34))
#loc74 = loc(callsite(#loc62 at #loc35))
#loc75 = loc(callsite(#loc63 at #loc35))
#loc76 = loc(callsite(#loc64 at #loc35))
#loc77 = loc(callsite(#loc65 at #loc35))
#loc78 = loc(callsite(#loc66 at #loc35))
#loc79 = loc(callsite(#loc67 at #loc35))
#loc80 = loc(callsite(#loc68 at #loc35))
#loc81 = loc(callsite(#loc69 at #loc35))
#loc82 = loc(callsite(#loc70 at #loc35))
#loc83 = loc(callsite(#loc71 at #loc35))
#loc84 = loc(callsite(#loc72 at #loc35))
#loc85 = loc(callsite(#loc73 at #loc35))
