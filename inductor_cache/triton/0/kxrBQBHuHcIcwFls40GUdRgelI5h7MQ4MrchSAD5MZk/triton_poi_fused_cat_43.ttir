#loc = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_43(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<2> : tensor<256xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<256xi64> loc(#loc1)
    %cst_1 = arith.constant dense<-256> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1024> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<512> : tensor<256xi64> loc(#loc1)
    %cst_4 = arith.constant dense<1.000000e-01> : tensor<256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<256xi64> loc(#loc1)
    %cst_8 = arith.constant dense<8192> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<2048> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<512> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_11 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_11 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_10 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %7, %cst_9 : tensor<256xi32> loc(#loc9)
    %9 = arith.remsi %6, %cst_9 : tensor<256xi32> loc(#loc10)
    %10 = arith.divsi %4, %cst_8 : tensor<256xi32> loc(#loc11)
    %11 = arith.extsi %5 : tensor<256xi32> to tensor<256xi64> loc(#loc12)
    %12 = arith.cmpi slt, %11, %cst_7 : tensor<256xi64> loc(#loc12)
    %13 = arith.muli %6, %cst_6 : tensor<256xi32> loc(#loc13)
    %14 = arith.addi %13, %5 : tensor<256xi32> loc(#loc14)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %17 = tt.load %16, %12, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %18 = arith.cmpf ogt, %17, %cst_5 : tensor<256xf32> loc(#loc17)
    %19 = arith.mulf %17, %cst_4 : tensor<256xf32> loc(#loc18)
    %20 = arith.select %18, %17, %19 : tensor<256xi1>, tensor<256xf32> loc(#loc19)
    %21 = arith.cmpi sge, %11, %cst_7 : tensor<256xi64> loc(#loc20)
    %22 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>> loc(#loc21)
    %23 = tt.addptr %22, %8 : tensor<256x!tt.ptr<i64>>, tensor<256xi32> loc(#loc21)
    %24 = tt.load %23, %21, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>> loc(#loc22)
    %25 = arith.addi %24, %cst : tensor<256xi64> loc(#loc23)
    %26 = arith.cmpi slt, %24, %cst_0 : tensor<256xi64> loc(#loc24)
    %27 = arith.select %26, %25, %24 : tensor<256xi1>, tensor<256xi64> loc(#loc25)
    %28 = tt.addptr %22, %9 : tensor<256x!tt.ptr<i64>>, tensor<256xi32> loc(#loc26)
    %29 = tt.load %28, %21, %cst_0 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>> loc(#loc27)
    %30 = arith.addi %29, %cst : tensor<256xi64> loc(#loc28)
    %31 = arith.cmpi slt, %29, %cst_0 : tensor<256xi64> loc(#loc29)
    %32 = arith.select %31, %30, %29 : tensor<256xi1>, tensor<256xi64> loc(#loc30)
    %33 = arith.muli %32, %cst_7 : tensor<256xi64> loc(#loc31)
    %34 = arith.muli %27, %cst_3 : tensor<256xi64> loc(#loc32)
    %35 = arith.addi %33, %34 : tensor<256xi64> loc(#loc33)
    %36 = arith.muli %10, %cst_2 : tensor<256xi32> loc(#loc34)
    %37 = arith.extsi %36 : tensor<256xi32> to tensor<256xi64> loc(#loc35)
    %38 = arith.addi %35, %37 : tensor<256xi64> loc(#loc35)
    %39 = arith.addi %5, %cst_1 : tensor<256xi32> loc(#loc36)
    %40 = arith.extsi %39 : tensor<256xi32> to tensor<256xi64> loc(#loc37)
    %41 = arith.addi %38, %40 : tensor<256xi64> loc(#loc37)
    %42 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc38)
    %43 = tt.addptr %42, %41 : tensor<256x!tt.ptr<f32>>, tensor<256xi64> loc(#loc38)
    %44 = tt.load %43, %21, %cst_5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc39)
    %45 = arith.cmpf ogt, %44, %cst_5 : tensor<256xf32> loc(#loc40)
    %46 = arith.mulf %44, %cst_4 : tensor<256xf32> loc(#loc41)
    %47 = arith.select %45, %44, %46 : tensor<256xi1>, tensor<256xf32> loc(#loc42)
    %48 = arith.select %21, %47, %cst_5 : tensor<256xi1>, tensor<256xf32> loc(#loc43)
    %49 = arith.select %12, %20, %48 : tensor<256xi1>, tensor<256xf32> loc(#loc49)
    %50 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc46)
    %51 = tt.addptr %50, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc46)
    tt.store %51, %49 : tensor<256x!tt.ptr<f32>> loc(#loc47)
    tt.return loc(#loc48)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":21:28)
#loc3 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":21:33)
#loc4 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":22:36)
#loc5 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":22:23)
#loc6 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":24:19)
#loc7 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":25:19)
#loc8 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":26:21)
#loc9 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":26:29)
#loc10 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":27:28)
#loc11 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":28:19)
#loc12 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":34:18)
#loc13 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":35:34)
#loc14 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":35:40)
#loc15 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":35:30)
#loc16 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":35:46)
#loc17 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":37:18)
#loc18 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":39:18)
#loc19 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":40:33)
#loc20 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":43:20)
#loc21 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":46:31)
#loc22 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":46:36)
#loc23 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":48:20)
#loc24 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":49:20)
#loc25 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":50:35)
#loc26 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":51:31)
#loc27 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":51:36)
#loc28 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":52:20)
#loc29 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":53:20)
#loc30 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":54:35)
#loc31 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:35)
#loc32 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:47)
#loc33 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:43)
#loc34 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:60)
#loc35 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:55)
#loc36 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:75)
#loc37 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:66)
#loc38 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:31)
#loc39 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":55:81)
#loc40 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":57:20)
#loc41 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":59:20)
#loc42 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":60:35)
#loc43 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":62:35)
#loc44 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":63:34)
#loc45 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":42:34)
#loc46 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":64:25)
#loc47 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":64:37)
#loc48 = loc("inductor_cache/v3/cv3rbtlihm7iw24bxngoxae3itmtf4s7jjajek6d6mai3illobnd.py":64:4)
#loc49 = loc(fused[#loc44, #loc45])
