//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__softmax_3 // -- Begin function triton_red_fused__softmax_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__softmax_3
.visible .entry triton_red_fused__softmax_3(
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax_3_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax_3_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax_3_param_2,
	.param .u32 triton_red_fused__softmax_3_param_3,
	.param .u32 triton_red_fused__softmax_3_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<56>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused__softmax_3_param_2];
	ld.param.u64 	%rd3, [triton_red_fused__softmax_3_param_0];
	ld.param.u64 	%rd7, [triton_red_fused__softmax_3_param_1];
$L__tmp0:
	.loc	1 22 28                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:22:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:22:33
	shl.b32 	%r1, %r8, 6;
	.loc	1 23 44                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r13, %r2, 2;
	and.b32  	%r3, %r13, 60;
	.loc	1 23 23                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:23:23
	or.b32  	%r4, %r1, %r3;
	.loc	1 24 21                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:24:21
	setp.lt.s32 	%p2, %r4, 128;
	.loc	1 27 19                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:27:19
	shr.s32 	%r15, %r4, 31;
	shr.u32 	%r16, %r15, 28;
	add.s32 	%r17, %r4, %r16;
	shr.s32 	%r18, %r17, 4;
	.loc	1 26 19                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:26:19
	and.b32  	%r19, %r17, -16;
	sub.s32 	%r20, %r4, %r19;
	.loc	1 28 19                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:28:19
	bfe.s32 	%r21, %r8, 25, 1;
	shr.u32 	%r22, %r21, 27;
	add.s32 	%r23, %r4, %r22;
	shr.s32 	%r24, %r23, 5;
	.loc	1 29 38                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:29:38
	shl.b32 	%r25, %r24, 4;
	.loc	1 29 35                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:29:35
	add.s32 	%r26, %r25, %r20;
	.loc	1 29 30                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:29:30
	mul.wide.s32 	%rd8, %r26, 4;
	add.s64 	%rd5, %rd7, %rd8;
	.loc	1 29 43                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:29:43
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	mov.b32 	%f2, %r10;
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r12;
	and.b32  	%r27, %r2, 112;
	.loc	1 32 36                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:32:36
	mad.lo.s32 	%r28, %r18, 2032, %r4;
	add.s32 	%r87, %r28, %r27;
	mov.f32 	%f52, 0f00000000;
	mov.u64 	%rd13, -8;
	mov.f32 	%f53, %f52;
	mov.f32 	%f54, %f52;
	mov.f32 	%f55, %f52;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 36 34                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:36:34
	mul.wide.s32 	%rd10, %r87, 4;
	add.s64 	%rd9, %rd3, %rd10;
	mov.b32 	%r33, 0;
	.loc	1 36 57                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:36:57
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd9 + 0 ];
	@!%p2 mov.u32 %r29, %r33;
	@!%p2 mov.u32 %r30, %r33;
	@!%p2 mov.u32 %r31, %r33;
	@!%p2 mov.u32 %r32, %r33;
	// end inline asm
	mov.b32 	%f22, %r29;
	mov.b32 	%f23, %r30;
	mov.b32 	%f24, %r31;
	mov.b32 	%f25, %r32;
	.loc	1 39 22                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:39:22
	sub.f32 	%f26, %f22, %f1;
	sub.f32 	%f27, %f23, %f2;
	sub.f32 	%f28, %f24, %f3;
	sub.f32 	%f29, %f25, %f4;
	.loc	1 41 27                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:41:27
	mul.f32 	%f15, %f26, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f14, %f15;
	// end inline asm
	mul.f32 	%f17, %f27, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f16, %f17;
	// end inline asm
	mul.f32 	%f19, %f28, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f18, %f19;
	// end inline asm
	mul.f32 	%f21, %f29, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f20, %f21;
	// end inline asm
	.loc	1 43 23                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:43:23
	add.f32 	%f30, %f52, %f14;
	add.f32 	%f31, %f53, %f16;
	add.f32 	%f32, %f54, %f18;
	add.f32 	%f33, %f55, %f20;
	.loc	1 44 46                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:44:46
	selp.f32 	%f52, %f30, %f52, %p2;
	selp.f32 	%f53, %f31, %f53, %p2;
	selp.f32 	%f54, %f32, %f54, %p2;
	selp.f32 	%f55, %f33, %f55, %p2;
	.loc	1 32 36                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:32:36
	add.s64 	%rd13, %rd13, 8;
	add.s32 	%r87, %r87, 128;
	setp.lt.u64 	%p7, %rd13, 120;
	@%p7 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:23:44
	and.b32  	%r59, %r2, 63;
	.loc	1 23 23                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:23:23
	or.b32  	%r60, %r1, %r59;
	.loc	1 24 21                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:24:21
	setp.lt.s32 	%p18, %r60, 128;
	.loc	1 23 44                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:23:44
	and.b32  	%r61, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f52;
	shfl.sync.bfly.b32	%r63, %r62, 16, 31, -1;
	mov.b32 	%f34, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f52, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f53;
	shfl.sync.bfly.b32	%r65, %r64, 16, 31, -1;
	mov.b32 	%f36, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f53, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f54;
	shfl.sync.bfly.b32	%r67, %r66, 16, 31, -1;
	mov.b32 	%f38, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f54, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f55;
	shfl.sync.bfly.b32	%r69, %r68, 16, 31, -1;
	mov.b32 	%f40, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f55, %f40;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p8, %r61, 0;
	shr.u32 	%r70, %r2, 3;
	and.b32  	%r71, %r70, 12;
	shl.b32 	%r72, %r3, 4;
	or.b32  	%r73, %r72, %r71;
	mov.u32 	%r74, global_smem;
	add.s32 	%r37, %r74, %r73;
	mov.b32 	%r38, %f35;
	// begin inline asm
	@%p8 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r37, 16;
	mov.b32 	%r40, %f37;
	// begin inline asm
	@%p8 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r37, 32;
	mov.b32 	%r42, %f39;
	// begin inline asm
	@%p8 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r37, 48;
	mov.b32 	%r44, %f41;
	// begin inline asm
	@%p8 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p12, %r2, 256;
	add.s32 	%r46, %r74, %r13;
	// begin inline asm
	@%p12 ld.shared.b32 %r45, [ %r46 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r45;
	shfl.sync.bfly.b32	%r76, %r45, 2, 31, -1;
	mov.b32 	%f43, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f44;
	shfl.sync.bfly.b32	%r78, %r77, 1, 31, -1;
	mov.b32 	%f45, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r79, %r2, 3;
	setp.eq.s32 	%p19, %r79, 0;
	and.pred  	%p13, %p12, %p19;
	mov.b32 	%r48, %f46;
	// begin inline asm
	@%p13 st.shared.b32 [ %r46 + 0 ], %r48;
	// end inline asm
	add.s32 	%r50, %r46, 512;
	// begin inline asm
	@%p12 ld.shared.b32 %r49, [ %r50 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r49;
	shfl.sync.bfly.b32	%r80, %r49, 2, 31, -1;
	mov.b32 	%f48, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f49;
	shfl.sync.bfly.b32	%r82, %r81, 1, 31, -1;
	mov.b32 	%f50, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f51;
	// begin inline asm
	@%p13 st.shared.b32 [ %r50 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r83, %r74, %r72;
	ld.shared.u32 	%r54, [%r83];
	ld.shared.u32 	%r55, [%r83+16];
	ld.shared.u32 	%r56, [%r83+32];
	ld.shared.u32 	%r57, [%r83+48];
$L__tmp2:
	.loc	1 45 28                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:45:28
	bar.sync 	0;
	mad.lo.s32 	%r53, %r3, -12, %r83;
	mov.pred 	%p16, -1;
	// begin inline asm
	@%p16 st.shared.v4.b32 [ %r53 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r84, %r59, 2;
	add.s32 	%r85, %r74, %r84;
	ld.shared.u32 	%r58, [%r85];
	.loc	1 46 25                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:46:25
	mul.wide.s32 	%rd12, %r60, 4;
	add.s64 	%rd11, %rd4, %rd12;
	.loc	1 46 36                         // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:46:36
	and.b32  	%r86, %r2, 64;
	setp.eq.s32 	%p20, %r86, 0;
	and.pred  	%p17, %p20, %p18;
	// begin inline asm
	@%p17 st.global.b32 [ %rd11 + 0 ], { %r58 };
	// end inline asm
	.loc	1 46 4                          // cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py:46:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yk/cyk3jgu7r7hosikwsvffmwl5zuyrvgcu3hhhcfybzktmdxeleqgg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 107
.b8 51
.b8 106
.b8 103
.b8 117
.b8 55
.b8 114
.b8 55
.b8 104
.b8 111
.b8 115
.b8 105
.b8 107
.b8 119
.b8 115
.b8 118
.b8 102
.b8 102
.b8 109
.b8 119
.b8 108
.b8 53
.b8 122
.b8 117
.b8 121
.b8 114
.b8 118
.b8 103
.b8 99
.b8 117
.b8 51
.b8 104
.b8 104
.b8 104
.b8 99
.b8 102
.b8 121
.b8 98
.b8 122
.b8 107
.b8 116
.b8 109
.b8 100
.b8 120
.b8 101
.b8 108
.b8 101
.b8 113
.b8 103
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x81:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x96:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
