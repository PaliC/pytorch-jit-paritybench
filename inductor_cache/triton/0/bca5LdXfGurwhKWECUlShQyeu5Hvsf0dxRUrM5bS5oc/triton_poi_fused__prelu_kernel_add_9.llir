; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__prelu_kernel_add_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 5632, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen, 44, !dbg !15
  %15 = srem i32 %14, 32, !dbg !16
  %16 = mul i32 %14, 44, !dbg !17
  %.decomposed = sub i32 %.frozen, %16, !dbg !17
  %17 = srem i32 %12, 44, !dbg !17
  %18 = sext i32 %11 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !18
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 %13) #1, !dbg !19
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !19
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !19
  %23 = bitcast i32 %21 to float, !dbg !19
  %24 = bitcast i32 %22 to float, !dbg !19
  %25 = sext i32 %15 to i64, !dbg !20
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !20
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %13) #1, !dbg !21
  %28 = bitcast i32 %27 to float, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %13) #1, !dbg !21
  %30 = bitcast i32 %29 to float, !dbg !21
  %31 = or disjoint i32 %.decomposed, 1, !dbg !22
  %32 = add nsw i32 %17, 1, !dbg !22
  %33 = mul i32 %14, 46, !dbg !23
  %34 = add i32 %31, %33, !dbg !24
  %35 = add i32 %32, %33, !dbg !24
  %36 = sext i32 %34 to i64, !dbg !25
  %37 = getelementptr float, ptr addrspace(1) %2, i64 %36, !dbg !25
  %38 = sext i32 %35 to i64, !dbg !25
  %39 = getelementptr float, ptr addrspace(1) %2, i64 %38, !dbg !25
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %13) #1, !dbg !26
  %41 = bitcast i32 %40 to float, !dbg !26
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %13) #1, !dbg !26
  %43 = bitcast i32 %42 to float, !dbg !26
  %44 = fcmp ogt float %23, 0.000000e+00, !dbg !27
  %45 = fcmp ogt float %24, 0.000000e+00, !dbg !27
  %46 = fmul float %28, %23, !dbg !28
  %47 = fmul float %24, %30, !dbg !28
  %48 = select i1 %44, float %23, float %46, !dbg !29
  %49 = select i1 %45, float %24, float %47, !dbg !29
  %50 = fadd float %48, %41, !dbg !30
  %51 = fadd float %49, %43, !dbg !30
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %18, !dbg !31
  %53 = bitcast float %50 to i32, !dbg !32
  %54 = bitcast float %51 to i32, !dbg !32
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %53, i32 %54, ptr addrspace(1) %52, i1 %13) #1, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cz5dbha4tqdi7yhtvutoyjtripwiq22xnsm6sdmzcuhslnxgv567.py", directory: "inductor_cache/z5")
!4 = !{ptr @triton_poi_fused__prelu_kernel_add_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__prelu_kernel_add_9, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__prelu_kernel_add_9", linkageName: "triton_poi_fused__prelu_kernel_add_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 34, scope: !7)
!23 = !DILocation(line: 30, column: 42, scope: !7)
!24 = !DILocation(line: 30, column: 39, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 47, scope: !7)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 33, column: 18, scope: !7)
!29 = !DILocation(line: 34, column: 32, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 25, scope: !7)
!32 = !DILocation(line: 36, column: 36, scope: !7)
!33 = !DILocation(line: 36, column: 4, scope: !7)
