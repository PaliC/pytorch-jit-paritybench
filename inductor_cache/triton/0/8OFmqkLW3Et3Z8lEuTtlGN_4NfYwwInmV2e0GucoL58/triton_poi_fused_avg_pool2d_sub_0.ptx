//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_avg_pool2d_sub_0 // -- Begin function triton_poi_fused_avg_pool2d_sub_0
                                        // @triton_poi_fused_avg_pool2d_sub_0
.visible .entry triton_poi_fused_avg_pool2d_sub_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_sub_0_param_1,
	.param .u32 triton_poi_fused_avg_pool2d_sub_0_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<40>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<22>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_avg_pool2d_sub_0_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_avg_pool2d_sub_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:21:33
	shl.b32 	%r25, %r1, 7;
	.loc	1 22 36                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:22:36
	mov.u32 	%r26, %tid.x;
	and.b32  	%r27, %r26, 127;
	.loc	1 22 23                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:22:23
	or.b32  	%r28, %r25, %r27;
	.loc	1 23 21                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:23:21
	setp.lt.s32 	%p1, %r28, 256;
	.loc	1 24 21                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:24:21
	bfe.s32 	%r29, %r1, 24, 1;
	shr.u32 	%r30, %r29, 30;
	add.s32 	%r31, %r28, %r30;
	shr.s32 	%r32, %r31, 2;
	.loc	1 27 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:27:31
	mul.wide.s32 	%rd14, %r28, 4;
	add.s64 	%rd1, %rd13, %rd14;
	.loc	1 27 36                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:27:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 39 38                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:39:38
	add.s32 	%r33, %r28, -5;
	.loc	1 39 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:39:31
	mul.wide.s32 	%rd15, %r33, 4;
	add.s64 	%rd2, %rd13, %rd15;
	.loc	1 45 38                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:45:38
	add.s32 	%r34, %r28, -4;
	.loc	1 45 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:45:31
	mul.wide.s32 	%rd16, %r34, 4;
	add.s64 	%rd3, %rd13, %rd16;
	.loc	1 52 38                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:52:38
	add.s32 	%r35, %r28, -3;
	.loc	1 52 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:52:31
	mul.wide.s32 	%rd17, %r35, 4;
	add.s64 	%rd4, %rd13, %rd17;
	.loc	1 59 38                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:59:38
	add.s32 	%r36, %r28, -1;
	.loc	1 59 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:59:31
	mul.wide.s32 	%rd18, %r36, 4;
	add.s64 	%rd5, %rd13, %rd18;
	.loc	1 65 35                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:65:35
	add.s32 	%r37, %r28, 1;
	.loc	1 65 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:65:31
	mul.wide.s32 	%rd19, %r37, 4;
	add.s64 	%rd7, %rd13, %rd19;
	.loc	1 72 35                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:72:35
	add.s32 	%r38, %r28, 3;
	.loc	1 72 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:72:31
	mul.wide.s32 	%rd20, %r38, 4;
	add.s64 	%rd8, %rd13, %rd20;
	.loc	1 75 35                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:75:35
	add.s32 	%r39, %r28, 4;
	.loc	1 75 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:75:31
	mul.wide.s32 	%rd21, %r39, 4;
	add.s64 	%rd9, %rd13, %rd21;
	.loc	1 78 35                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:78:35
	add.s32 	%r40, %r28, 5;
	.loc	1 78 31                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:78:31
	mul.wide.s32 	%rd22, %r40, 4;
	add.s64 	%rd10, %rd13, %rd22;
	.loc	1 25 19                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:25:19
	and.b32  	%r41, %r31, -4;
	sub.s32 	%r42, %r28, %r41;
	shr.u32 	%r43, %r32, 30;
	add.s32 	%r44, %r32, %r43;
	and.b32  	%r45, %r44, -4;
	sub.s32 	%r46, %r32, %r45;
	.loc	1 28 18                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:28:18
	add.s32 	%r47, %r46, -1;
	.loc	1 30 19                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:30:19
	setp.gt.s32 	%p21, %r46, 0;
	.loc	1 34 18                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:34:18
	add.s32 	%r48, %r42, -1;
	.loc	1 35 19                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:35:19
	setp.gt.s32 	%p22, %r42, 0;
	.loc	1 38 19                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:38:19
	and.pred  	%p23, %p22, %p21;
	.loc	1 39 51                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:39:51
	and.pred  	%p2, %p1, %p23;
	mov.b32 	%r4, 0;
	.loc	1 39 43                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:39:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p2 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	@!%p2 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 41 21                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:41:21
	setp.gt.s32 	%p24, %r42, -1;
	.loc	1 44 19                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:44:19
	and.pred  	%p25, %p24, %p21;
	.loc	1 45 51                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:45:51
	and.pred  	%p4, %p1, %p25;
	.loc	1 45 43                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:45:43
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p4 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	@!%p4 mov.u32 %r5, %r4;
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 46 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:46:20
	add.f32 	%f4, %f2, %f3;
	.loc	1 50 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:50:20
	add.s32 	%r49, %r42, 1;
	setp.lt.u32 	%p26, %r49, 4;
	.loc	1 51 19                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:51:19
	and.pred  	%p27, %p21, %p26;
	.loc	1 52 51                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:52:51
	and.pred  	%p6, %p1, %p27;
	.loc	1 52 43                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:52:43
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p6 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	@!%p6 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f5, %r7;
	.loc	1 53 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:53:20
	add.f32 	%f6, %f4, %f5;
	.loc	1 55 21                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:55:21
	setp.gt.s32 	%p28, %r46, -1;
	.loc	1 58 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:58:20
	and.pred  	%p29, %p22, %p28;
	.loc	1 59 51                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:59:51
	and.pred  	%p8, %p1, %p29;
	.loc	1 59 43                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:59:43
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p8 ld.global.b32 { %r9 }, [ %rd5 + 0 ];
	@!%p8 mov.u32 %r9, %r4;
	// end inline asm
	mov.b32 	%f7, %r9;
	.loc	1 60 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:60:20
	add.f32 	%f8, %f6, %f7;
	.loc	1 61 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:61:20
	or.b32  	%r50, %r46, %r42;
	setp.gt.s32 	%p30, %r50, -1;
	.loc	1 62 44                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:62:44
	and.pred  	%p10, %p1, %p30;
	.loc	1 62 36                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:62:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p10 ld.global.b32 { %r11 }, [ %rd1 + 0 ];
	@!%p10 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f9, %r11;
	.loc	1 63 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:63:20
	add.f32 	%f10, %f8, %f9;
	.loc	1 64 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:64:20
	and.pred  	%p31, %p28, %p26;
	.loc	1 65 48                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:65:48
	and.pred  	%p12, %p1, %p31;
	.loc	1 65 40                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:65:40
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p12 ld.global.b32 { %r13 }, [ %rd7 + 0 ];
	@!%p12 mov.u32 %r13, %r4;
	// end inline asm
	mov.b32 	%f11, %r13;
	.loc	1 66 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:66:20
	add.f32 	%f12, %f10, %f11;
	.loc	1 70 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:70:20
	add.s32 	%r51, %r46, 1;
	setp.lt.u32 	%p32, %r51, 4;
	.loc	1 71 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:71:20
	and.pred  	%p33, %p22, %p32;
	.loc	1 72 48                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:72:48
	and.pred  	%p14, %p1, %p33;
	.loc	1 72 40                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:72:40
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p14 ld.global.b32 { %r15 }, [ %rd8 + 0 ];
	@!%p14 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f13, %r15;
	.loc	1 73 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:73:20
	add.f32 	%f14, %f12, %f13;
	.loc	1 74 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:74:20
	and.pred  	%p34, %p24, %p32;
	.loc	1 75 48                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:75:48
	and.pred  	%p16, %p1, %p34;
	.loc	1 75 40                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:75:40
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p16 ld.global.b32 { %r17 }, [ %rd9 + 0 ];
	@!%p16 mov.u32 %r17, %r4;
	// end inline asm
	mov.b32 	%f15, %r17;
	.loc	1 76 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:76:20
	add.f32 	%f16, %f14, %f15;
	.loc	1 77 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:77:20
	or.b32  	%r52, %r51, %r49;
	setp.lt.u32 	%p35, %r52, 4;
	.loc	1 78 48                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:78:48
	and.pred  	%p18, %p1, %p35;
	.loc	1 78 40                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:78:40
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p18 ld.global.b32 { %r19 }, [ %rd10 + 0 ];
	@!%p18 mov.u32 %r19, %r4;
	// end inline asm
	mov.b32 	%f17, %r19;
	.loc	1 79 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:79:20
	add.f32 	%f18, %f16, %f17;
	.loc	1 80 72                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:72
	setp.gt.s32 	%p36, %r46, 1;
	setp.gt.s32 	%p37, %r42, 1;
	.loc	1 80 57                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:57
	selp.b32 	%r53, %r48, 0, %p37;
	.loc	1 80 122                        // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:122
	selp.b32 	%r54, %r47, 0, %p36;
	.loc	1 80 164                        // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:164
	add.s32 	%r55, %r46, 2;
	add.s32 	%r56, %r42, 2;
	.loc	1 80 152                        // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:152
	selp.b32 	%r57, 4, 0, %p37;
	selp.b32 	%r58, 4, 0, %p36;
	.loc	1 80 195                        // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:195
	setp.lt.s32 	%p38, %r46, 2;
	setp.lt.s32 	%p39, %r42, 2;
	.loc	1 80 183                        // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:183
	selp.b32 	%r59, %r56, 0, %p39;
	selp.b32 	%r60, %r55, 0, %p38;
	.loc	1 80 171                        // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:171
	add.s32 	%r61, %r58, %r60;
	add.s32 	%r62, %r57, %r59;
	sub.s32 	%r63, %r62, %r53;
	mul.lo.s32 	%r64, %r63, %r61;
	sub.s32 	%r65, %r53, %r62;
	.loc	1 80 389                        // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:80:389
	mad.lo.s32 	%r66, %r65, %r54, %r64;
	.loc	1 81 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:81:20
	cvt.rn.f32.s32 	%f19, %r66;
	mov.b32 	%r23, %f19;
	mov.b32 	%r22, %f18;
	// begin inline asm
	div.full.f32 %r21, %r22, %r23;
	// end inline asm
	mov.b32 	%f20, %r21;
	.loc	1 82 20                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:82:20
	sub.f32 	%f21, %f20, %f1;
	.loc	1 83 28                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:83:28
	add.s64 	%rd11, %rd12, %rd14;
	.loc	1 83 40                         // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:83:40
	mov.b32 	%r24, %f21;
	// begin inline asm
	@%p1 st.global.b32 [ %rd11 + 0 ], { %r24 };
	// end inline asm
	.loc	1 83 4                          // ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py:83:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/e2/ce2hldbnnskyxi4kzi32cpmhai2mchkrodywpvwsyvy6rvn3pz4w.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 50
.b8 104
.b8 108
.b8 100
.b8 98
.b8 110
.b8 110
.b8 115
.b8 107
.b8 121
.b8 120
.b8 105
.b8 52
.b8 107
.b8 122
.b8 105
.b8 51
.b8 50
.b8 99
.b8 112
.b8 109
.b8 104
.b8 97
.b8 105
.b8 50
.b8 109
.b8 99
.b8 104
.b8 107
.b8 114
.b8 111
.b8 100
.b8 121
.b8 119
.b8 112
.b8 118
.b8 119
.b8 115
.b8 121
.b8 118
.b8 121
.b8 54
.b8 114
.b8 118
.b8 110
.b8 51
.b8 112
.b8 122
.b8 52
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
