; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_29(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 510, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %.frozen = freeze i32 %9, !dbg !14
  %11 = sdiv i32 %.frozen, 32, !dbg !14
  %12 = mul i32 %11, 32, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = srem i32 %10, 32, !dbg !15
  %14 = shl nsw i32 %.decomposed, 1, !dbg !16
  %15 = shl nsw i32 %13, 1, !dbg !16
  %16 = shl i32 %11, 7, !dbg !17
  %17 = add i32 %14, %16, !dbg !18
  %18 = add i32 %16, %15, !dbg !18
  %19 = sext i32 %17 to i64, !dbg !19
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !19
  %21 = sext i32 %18 to i64, !dbg !19
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 true) #1, !dbg !20
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 true) #1, !dbg !20
  %25 = or disjoint i32 %17, 1, !dbg !21
  %26 = or disjoint i32 %18, 1, !dbg !21
  %27 = sext i32 %25 to i64, !dbg !22
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !22
  %29 = sext i32 %26 to i64, !dbg !22
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #1, !dbg !23
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 true) #1, !dbg !23
  %33 = add i32 %17, 64, !dbg !24
  %34 = add i32 %18, 64, !dbg !24
  %35 = sext i32 %33 to i64, !dbg !25
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !25
  %37 = sext i32 %34 to i64, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !25
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 true) #1, !dbg !26
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !26
  %41 = add i32 %17, 65, !dbg !27
  %42 = add i32 %18, 65, !dbg !27
  %43 = sext i32 %41 to i64, !dbg !28
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !28
  %45 = sext i32 %42 to i64, !dbg !28
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !28
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !29
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #1, !dbg !29
  %49 = insertelement <2 x i32> poison, i32 %23, i64 0, !dbg !20
  %50 = insertelement <2 x i32> %49, i32 %24, i64 1, !dbg !20
  %51 = bitcast <2 x i32> %50 to <2 x float>, !dbg !20
  %52 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !23
  %53 = insertelement <2 x i32> %52, i32 %32, i64 1, !dbg !23
  %54 = bitcast <2 x i32> %53 to <2 x float>, !dbg !23
  %55 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !26
  %56 = insertelement <2 x i32> %55, i32 %40, i64 1, !dbg !26
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !26
  %58 = insertelement <2 x i32> poison, i32 %47, i64 0, !dbg !29
  %59 = insertelement <2 x i32> %58, i32 %48, i64 1, !dbg !29
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !29
  %61 = fcmp ogt <2 x float> %54, %51, !dbg !30
  %62 = zext <2 x i1> %61 to <2 x i8>, !dbg !31
  %63 = fcmp uno <2 x float> %54, zeroinitializer, !dbg !32
  %64 = or <2 x i1> %61, %63, !dbg !36
  %.v = select <2 x i1> %64, <2 x i32> %53, <2 x i32> %50, !dbg !37
  %65 = bitcast <2 x i32> %.v to <2 x float>, !dbg !37
  %66 = fcmp olt <2 x float> %65, %57, !dbg !38
  %67 = select <2 x i1> %66, <2 x i8> splat (i8 2), <2 x i8> %62, !dbg !39
  %68 = fcmp uno <2 x float> %57, zeroinitializer, !dbg !40
  %69 = or <2 x i1> %68, %66, !dbg !42
  %.v1 = select <2 x i1> %69, <2 x i32> %56, <2 x i32> %.v, !dbg !43
  %70 = bitcast <2 x i32> %.v1 to <2 x float>, !dbg !43
  %71 = fcmp olt <2 x float> %70, %60, !dbg !44
  %72 = select <2 x i1> %71, <2 x i8> splat (i8 3), <2 x i8> %67, !dbg !45
  %73 = sext i32 %9 to i64, !dbg !46
  %74 = getelementptr i8, ptr addrspace(1) %1, i64 %73, !dbg !46
  %75 = bitcast <2 x i8> %72 to i16, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %75, ptr addrspace(1) %74, i1 true) #1, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "coy6ohdrkabvoplzhzkwweufw7w4w4qvts4e3z5v2uxp2wx4e4gh.py", directory: "inductor_cache/oy")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_29, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_29, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_29", linkageName: "triton_poi_fused_max_pool2d_with_indices_29", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 32, scope: !7)
!17 = !DILocation(line: 27, column: 41, scope: !7)
!18 = !DILocation(line: 27, column: 37, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 46, scope: !7)
!21 = !DILocation(line: 28, column: 41, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 50, scope: !7)
!24 = !DILocation(line: 29, column: 42, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 51, scope: !7)
!27 = !DILocation(line: 30, column: 43, scope: !7)
!28 = !DILocation(line: 30, column: 31, scope: !7)
!29 = !DILocation(line: 30, column: 52, scope: !7)
!30 = !DILocation(line: 31, column: 18, scope: !7)
!31 = !DILocation(line: 34, column: 32, scope: !7)
!32 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 35, column: 40, scope: !7)
!36 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !35)
!37 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !35)
!38 = !DILocation(line: 36, column: 18, scope: !7)
!39 = !DILocation(line: 38, column: 33, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !33, inlinedAt: !41)
!41 = !DILocation(line: 39, column: 41, scope: !7)
!42 = !DILocation(line: 120, column: 16, scope: !33, inlinedAt: !41)
!43 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !41)
!44 = !DILocation(line: 40, column: 20, scope: !7)
!45 = !DILocation(line: 42, column: 35, scope: !7)
!46 = !DILocation(line: 44, column: 25, scope: !7)
!47 = !DILocation(line: 44, column: 37, scope: !7)
!48 = !DILocation(line: 44, column: 4, scope: !7)
