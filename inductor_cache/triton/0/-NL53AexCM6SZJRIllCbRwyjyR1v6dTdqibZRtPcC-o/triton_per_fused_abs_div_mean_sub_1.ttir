#loc = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":19:0)
#loc1 = loc(unknown)
#loc25 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":46:59)
#loc43 = loc(callsite(#loc1 at #loc25))
module {
  tt.func public @triton_per_fused_abs_div_mean_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<9.99999996E-13> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = arith.divsi %0, %cst_2 : tensor<256xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %1 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc6)
    %7 = tt.load %6 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc8)
    %10 = tt.load %9 : tensor<256x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.addptr %11, %1 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.extern_elementwise %7 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc12)
    %15 = arith.cmpf ogt, %14, %cst_1 : tensor<256xf32> loc(#loc34)
    %16 = arith.cmpf une, %14, %14 : tensor<256xf32> loc(#loc35)
    %17 = arith.ori %15, %16 : tensor<256xi1> loc(#loc36)
    %18 = arith.select %17, %14, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc37)
    %19 = arith.divf %4, %18 : tensor<256xf32> loc(#loc18)
    %20 = tt.extern_elementwise %13 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc19)
    %21 = arith.cmpf ogt, %20, %cst_1 : tensor<256xf32> loc(#loc38)
    %22 = arith.cmpf une, %20, %20 : tensor<256xf32> loc(#loc39)
    %23 = arith.ori %21, %22 : tensor<256xi1> loc(#loc40)
    %24 = arith.select %23, %20, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc41)
    %25 = arith.divf %10, %24 : tensor<256xf32> loc(#loc21)
    %26 = arith.subf %19, %25 : tensor<256xf32> loc(#loc22)
    %27 = math.absf %26 : tensor<256xf32> loc(#loc23)
    %28 = "tt.reduce"(%27) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc25)), %arg7: f32 loc(callsite(#loc1 at #loc25))):
      %34 = arith.addf %arg6, %arg7 : f32 loc(#loc46)
      tt.reduce.return %34 : f32 loc(#loc42)
    }) : (tensor<256xf32>) -> f32 loc(#loc42)
    %29 = arith.addf %28, %cst_0 : f32 loc(#loc45)
    %30 = arith.divf %29, %cst : f32 loc(#loc29)
    %31 = tt.splat %30 : f32 -> tensor<1xf32> loc(#loc29)
    gpu.barrier loc(#loc30)
    %32 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc31)
    %33 = tt.splat %32 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc31)
    tt.store %33, %31 : tensor<1x!tt.ptr<f32>> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":27:26)
#loc3 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":31:19)
#loc4 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":32:30)
#loc5 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":32:35)
#loc6 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":33:30)
#loc7 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":33:35)
#loc8 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":34:30)
#loc9 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":34:35)
#loc10 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":35:30)
#loc11 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":35:35)
#loc12 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":36:26)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc14 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":38:40)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc18 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":39:18)
#loc19 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":40:26)
#loc20 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":41:40)
#loc21 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":42:19)
#loc22 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":43:19)
#loc23 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":44:24)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc28 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":46:45)
#loc29 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":48:20)
#loc30 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":49:4)
#loc31 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":50:28)
#loc32 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":50:63)
#loc33 = loc("inductor_cache/ue/cue2nkmypeqcv3p4nj7qcs3vfcspzevqlv2iovxkfzelaqm6peej.py":50:4)
#loc34 = loc(callsite(#loc13 at #loc14))
#loc35 = loc(callsite(#loc15 at #loc14))
#loc36 = loc(callsite(#loc16 at #loc14))
#loc37 = loc(callsite(#loc17 at #loc14))
#loc38 = loc(callsite(#loc13 at #loc20))
#loc39 = loc(callsite(#loc15 at #loc20))
#loc40 = loc(callsite(#loc16 at #loc20))
#loc41 = loc(callsite(#loc17 at #loc20))
#loc42 = loc(callsite(#loc24 at #loc25))
#loc44 = loc(callsite(#loc26 at #loc24))
#loc45 = loc(callsite(#loc27 at #loc28))
#loc46 = loc(callsite(#loc44 at #loc25))
