#loc = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":19:0)
module {
  tt.func public @triton_poi_fused_add_gelu_mean_mul_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.707106769> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<5.000000e-01> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<160> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<2> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<256xi32> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<144> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<176> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<128> : tensor<256xi32> loc(#loc1)
    %cst_12 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_13 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_14 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_14 : tensor<256xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_13 : tensor<256xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_12 : tensor<256xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_13 : tensor<256xi32> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc10)
    %10 = tt.addptr %9, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc10)
    %11 = tt.load %10, %5 : tensor<256x!tt.ptr<f32>> loc(#loc11)
    %12 = arith.addi %6, %cst_11 : tensor<256xi32> loc(#loc12)
    %13 = arith.muli %7, %cst_10 : tensor<256xi32> loc(#loc13)
    %14 = arith.addi %12, %13 : tensor<256xi32> loc(#loc14)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.addptr %18, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc17)
    %20 = tt.load %19, %5 : tensor<256x!tt.ptr<f32>> loc(#loc18)
    %21 = arith.addi %6, %cst_9 : tensor<256xi32> loc(#loc19)
    %22 = arith.addi %21, %13 : tensor<256xi32> loc(#loc20)
    %23 = tt.addptr %15, %22 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc21)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc22)
    %25 = arith.muli %8, %cst_8 : tensor<256xi32> loc(#loc23)
    %26 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc24)
    %27 = tt.addptr %26, %25 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc24)
    %28 = tt.load %27, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc25)
    %29 = arith.addi %25, %cst_7 : tensor<256xi32> loc(#loc26)
    %30 = tt.addptr %26, %29 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %31 = tt.load %30, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %32 = arith.addi %25, %cst_6 : tensor<256xi32> loc(#loc29)
    %33 = tt.addptr %26, %32 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc30)
    %34 = tt.load %33, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc31)
    %35 = arith.addi %25, %cst_5 : tensor<256xi32> loc(#loc32)
    %36 = tt.addptr %26, %35 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc33)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc34)
    %38 = arith.addi %6, %cst_4 : tensor<256xi32> loc(#loc35)
    %39 = arith.addi %38, %13 : tensor<256xi32> loc(#loc36)
    %40 = tt.addptr %15, %39 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc37)
    %41 = tt.load %40, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc38)
    %42 = arith.mulf %11, %17 : tensor<256xf32> loc(#loc39)
    %43 = arith.addf %42, %cst_3 : tensor<256xf32> loc(#loc40)
    %44 = arith.mulf %20, %cst_2 : tensor<256xf32> loc(#loc41)
    %45 = arith.mulf %20, %cst_1 : tensor<256xf32> loc(#loc42)
    %46 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_erff"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc43)
    %47 = arith.addf %46, %cst_0 : tensor<256xf32> loc(#loc44)
    %48 = arith.mulf %44, %47 : tensor<256xf32> loc(#loc45)
    %49 = arith.mulf %48, %24 : tensor<256xf32> loc(#loc46)
    %50 = arith.addf %43, %49 : tensor<256xf32> loc(#loc47)
    %51 = arith.addf %28, %31 : tensor<256xf32> loc(#loc48)
    %52 = arith.addf %51, %34 : tensor<256xf32> loc(#loc49)
    %53 = arith.addf %52, %37 : tensor<256xf32> loc(#loc50)
    %54 = arith.divf %53, %cst : tensor<256xf32> loc(#loc51)
    %55 = arith.mulf %54, %cst_2 : tensor<256xf32> loc(#loc52)
    %56 = arith.mulf %54, %cst_1 : tensor<256xf32> loc(#loc53)
    %57 = tt.extern_elementwise %56 {libname = "", libpath = "", pure = true, symbol = "__nv_erff"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc54)
    %58 = arith.addf %57, %cst_0 : tensor<256xf32> loc(#loc55)
    %59 = arith.mulf %55, %58 : tensor<256xf32> loc(#loc56)
    %60 = arith.mulf %59, %41 : tensor<256xf32> loc(#loc57)
    %61 = arith.addf %50, %60 : tensor<256xf32> loc(#loc58)
    %62 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc59)
    %63 = tt.addptr %62, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc59)
    tt.store %63, %61, %5 : tensor<256x!tt.ptr<f32>> loc(#loc60)
    tt.return loc(#loc61)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":21:28)
#loc3 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":21:33)
#loc4 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":22:36)
#loc5 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":22:23)
#loc6 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":23:21)
#loc7 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":25:19)
#loc8 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":26:19)
#loc9 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":27:19)
#loc10 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":28:30)
#loc11 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":28:35)
#loc12 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":29:36)
#loc13 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":29:45)
#loc14 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":29:41)
#loc15 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":29:30)
#loc16 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":29:50)
#loc17 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":30:30)
#loc18 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":30:35)
#loc19 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":31:37)
#loc20 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":31:42)
#loc21 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":31:31)
#loc22 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":31:51)
#loc23 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":32:33)
#loc24 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":32:31)
#loc25 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":32:38)
#loc26 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":33:35)
#loc27 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":33:31)
#loc28 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":33:42)
#loc29 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":34:35)
#loc30 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":34:31)
#loc31 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":34:42)
#loc32 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":35:35)
#loc33 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":35:31)
#loc34 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":35:42)
#loc35 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":36:37)
#loc36 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":36:42)
#loc37 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":36:31)
#loc38 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":36:51)
#loc39 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":37:18)
#loc40 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":39:18)
#loc41 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":41:18)
#loc42 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":43:18)
#loc43 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":44:26)
#loc44 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":46:20)
#loc45 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":47:19)
#loc46 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":48:20)
#loc47 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":49:19)
#loc48 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":50:20)
#loc49 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":51:20)
#loc50 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":52:20)
#loc51 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":54:20)
#loc52 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":55:20)
#loc53 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":56:20)
#loc54 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":57:26)
#loc55 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":58:20)
#loc56 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":59:20)
#loc57 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":60:20)
#loc58 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":61:20)
#loc59 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":62:25)
#loc60 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":62:37)
#loc61 = loc("inductor_cache/cl/ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py":62:4)
