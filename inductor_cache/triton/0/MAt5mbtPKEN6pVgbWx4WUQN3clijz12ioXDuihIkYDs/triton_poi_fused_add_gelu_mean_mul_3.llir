; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_gelu_mean_mul_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = icmp slt i32 %12, 256, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %14 = sdiv i32 %.frozen, 16, !dbg !15
  %15 = mul i32 %14, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = sdiv i32 %12, 64, !dbg !17
  %17 = sext i32 %12 to i64, !dbg !18
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !18
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %13) #3, !dbg !19
  %20 = mul i32 %16, 176, !dbg !20
  %21 = add i32 %20, %.decomposed, !dbg !21
  %22 = add i32 %21, 128, !dbg !22
  %23 = sext i32 %22 to i64, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !23
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %13) #3, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %17, !dbg !25
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 %13) #3, !dbg !26
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !26
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !26
  %30 = bitcast i32 %28 to float, !dbg !26
  %31 = bitcast i32 %29 to float, !dbg !26
  %32 = add i32 %21, 144, !dbg !27
  %33 = sext i32 %32 to i64, !dbg !28
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !28
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %34, i1 %13) #3, !dbg !29
  %36 = shl nsw i32 %14, 2, !dbg !30
  %37 = sext i32 %36 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %3, i64 %37, !dbg !31
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %13) #3, !dbg !32
  %40 = bitcast i32 %39 to float, !dbg !32
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 %13) #3, !dbg !32
  %42 = bitcast i32 %41 to float, !dbg !32
  %43 = or disjoint i32 %36, 1, !dbg !33
  %44 = sext i32 %43 to i64, !dbg !34
  %45 = getelementptr float, ptr addrspace(1) %3, i64 %44, !dbg !34
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %13) #3, !dbg !35
  %47 = bitcast i32 %46 to float, !dbg !35
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %13) #3, !dbg !35
  %49 = bitcast i32 %48 to float, !dbg !35
  %50 = or disjoint i32 %36, 2, !dbg !36
  %51 = sext i32 %50 to i64, !dbg !37
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %51, !dbg !37
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %13) #3, !dbg !38
  %54 = bitcast i32 %53 to float, !dbg !38
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %13) #3, !dbg !38
  %56 = bitcast i32 %55 to float, !dbg !38
  %57 = or disjoint i32 %36, 3, !dbg !39
  %58 = sext i32 %57 to i64, !dbg !40
  %59 = getelementptr float, ptr addrspace(1) %3, i64 %58, !dbg !40
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %13) #3, !dbg !41
  %61 = bitcast i32 %60 to float, !dbg !41
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 %13) #3, !dbg !41
  %63 = bitcast i32 %62 to float, !dbg !41
  %64 = add i32 %21, 160, !dbg !42
  %65 = sext i32 %64 to i64, !dbg !43
  %66 = getelementptr float, ptr addrspace(1) %1, i64 %65, !dbg !43
  %67 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %66, i1 %13) #3, !dbg !44
  %68 = fmul float %30, 0x3FE6A09E60000000, !dbg !45
  %69 = fmul float %31, 0x3FE6A09E60000000, !dbg !45
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not.i = icmp eq i32 %70, 0, !dbg !46
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %68) #3, !dbg !46
  %72 = tail call float @llvm.nvvm.fabs.f(float %68) #3, !dbg !46
  %.0.i = select i1 %.not.i, float %72, float %71, !dbg !46
  %73 = fcmp oge float %.0.i, 0x3FF00C1FC0000000, !dbg !46
  br i1 %73, label %__nv_fabsf.exit1.i, label %75, !dbg !46

__nv_fabsf.exit1.i:                               ; preds = %6
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not1.i = icmp eq i32 %74, 0, !dbg !46
  %.01.i = select i1 %.not1.i, float %72, float %71, !dbg !46
  br label %__internal_fmad.exit.i, !dbg !46

75:                                               ; preds = %6
  %76 = fmul float %68, %68, !dbg !46
  br label %__internal_fmad.exit.i, !dbg !46

__internal_fmad.exit.i:                           ; preds = %75, %__nv_fabsf.exit1.i
  %77 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i ], [ 0x3FC06EBA60000000, %75 ], !dbg !46
  %78 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i ], [ 0xBFD8127580000000, %75 ], !dbg !46
  %79 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i ], [ 0x3FBCE315E0000000, %75 ], !dbg !46
  %80 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i ], [ 0xBF9B837CE0000000, %75 ], !dbg !46
  %81 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i ], [ 0x3F755ABD40000000, %75 ], !dbg !46
  %82 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i ], [ 0xBF4AE9A400000000, %75 ], !dbg !46
  %83 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i ], [ 0x3F163D2D40000000, %75 ], !dbg !46
  %84 = phi float [ %.01.i, %__nv_fabsf.exit1.i ], [ %76, %75 ], !dbg !46
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not2.i = icmp eq i32 %85, 0, !dbg !46
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %83, float %84, float %82) #3, !dbg !46
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %83, float %84, float %82) #3, !dbg !46
  %.02.i = select i1 %.not2.i, float %87, float %86, !dbg !46
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not3.i = icmp eq i32 %88, 0, !dbg !46
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %84, float %81) #3, !dbg !46
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %84, float %81) #3, !dbg !46
  %.03.i = select i1 %.not3.i, float %90, float %89, !dbg !46
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not4.i = icmp eq i32 %91, 0, !dbg !46
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i, float %84, float %80) #3, !dbg !46
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i, float %84, float %80) #3, !dbg !46
  %.04.i = select i1 %.not4.i, float %93, float %92, !dbg !46
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not5.i = icmp eq i32 %94, 0, !dbg !46
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %84, float %79) #3, !dbg !46
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %84, float %79) #3, !dbg !46
  %.05.i = select i1 %.not5.i, float %96, float %95, !dbg !46
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not6.i = icmp eq i32 %97, 0, !dbg !46
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %84, float %78) #3, !dbg !46
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %84, float %78) #3, !dbg !46
  %.06.i = select i1 %.not6.i, float %99, float %98, !dbg !46
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not7.i = icmp eq i32 %100, 0, !dbg !46
  %101 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %84, float %77) #3, !dbg !46
  %102 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %84, float %77) #3, !dbg !46
  %.07.i = select i1 %.not7.i, float %102, float %101, !dbg !46
  %103 = fneg float %84, !dbg !46
  %104 = select i1 %73, float %103, float %68, !dbg !46
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not8.i = icmp eq i32 %105, 0, !dbg !46
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %104, float %104) #3, !dbg !46
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %104, float %104) #3, !dbg !46
  %.08.i = select i1 %.not8.i, float %107, float %106, !dbg !46
  br i1 %73, label %108, label %__nv_erff.exit, !dbg !46

108:                                              ; preds = %__internal_fmad.exit.i
  %109 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i) #3, !dbg !46
  %110 = fsub float 1.000000e+00, %109, !dbg !46
  %111 = bitcast float %110 to i32, !dbg !46
  %112 = bitcast float %68 to i32, !dbg !46
  %113 = and i32 %112, -2147483648, !dbg !46
  %114 = or i32 %113, %111, !dbg !46
  %115 = bitcast i32 %114 to float, !dbg !46
  br label %__nv_erff.exit, !dbg !46

__nv_erff.exit:                                   ; preds = %__internal_fmad.exit.i, %108
  %r.0.i = phi float [ %115, %108 ], [ %.08.i, %__internal_fmad.exit.i ], !dbg !46
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not.i1 = icmp eq i32 %116, 0, !dbg !46
  %117 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #3, !dbg !46
  %118 = tail call float @llvm.nvvm.fabs.f(float %69) #3, !dbg !46
  %.0.i2 = select i1 %.not.i1, float %118, float %117, !dbg !46
  %119 = fcmp oge float %.0.i2, 0x3FF00C1FC0000000, !dbg !46
  br i1 %119, label %__nv_fabsf.exit1.i19, label %121, !dbg !46

__nv_fabsf.exit1.i19:                             ; preds = %__nv_erff.exit
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not1.i20 = icmp eq i32 %120, 0, !dbg !46
  %.01.i21 = select i1 %.not1.i20, float %118, float %117, !dbg !46
  br label %__internal_fmad.exit.i3, !dbg !46

121:                                              ; preds = %__nv_erff.exit
  %122 = fmul float %69, %69, !dbg !46
  br label %__internal_fmad.exit.i3, !dbg !46

__internal_fmad.exit.i3:                          ; preds = %121, %__nv_fabsf.exit1.i19
  %123 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i19 ], [ 0x3FC06EBA60000000, %121 ], !dbg !46
  %124 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i19 ], [ 0xBFD8127580000000, %121 ], !dbg !46
  %125 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i19 ], [ 0x3FBCE315E0000000, %121 ], !dbg !46
  %126 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i19 ], [ 0xBF9B837CE0000000, %121 ], !dbg !46
  %127 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i19 ], [ 0x3F755ABD40000000, %121 ], !dbg !46
  %128 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i19 ], [ 0xBF4AE9A400000000, %121 ], !dbg !46
  %129 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i19 ], [ 0x3F163D2D40000000, %121 ], !dbg !46
  %130 = phi float [ %.01.i21, %__nv_fabsf.exit1.i19 ], [ %122, %121 ], !dbg !46
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not2.i4 = icmp eq i32 %131, 0, !dbg !46
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %129, float %130, float %128) #3, !dbg !46
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %129, float %130, float %128) #3, !dbg !46
  %.02.i5 = select i1 %.not2.i4, float %133, float %132, !dbg !46
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not3.i6 = icmp eq i32 %134, 0, !dbg !46
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i5, float %130, float %127) #3, !dbg !46
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i5, float %130, float %127) #3, !dbg !46
  %.03.i7 = select i1 %.not3.i6, float %136, float %135, !dbg !46
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not4.i8 = icmp eq i32 %137, 0, !dbg !46
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i7, float %130, float %126) #3, !dbg !46
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i7, float %130, float %126) #3, !dbg !46
  %.04.i9 = select i1 %.not4.i8, float %139, float %138, !dbg !46
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not5.i10 = icmp eq i32 %140, 0, !dbg !46
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i9, float %130, float %125) #3, !dbg !46
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i9, float %130, float %125) #3, !dbg !46
  %.05.i11 = select i1 %.not5.i10, float %142, float %141, !dbg !46
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not6.i12 = icmp eq i32 %143, 0, !dbg !46
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i11, float %130, float %124) #3, !dbg !46
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i11, float %130, float %124) #3, !dbg !46
  %.06.i13 = select i1 %.not6.i12, float %145, float %144, !dbg !46
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not7.i14 = icmp eq i32 %146, 0, !dbg !46
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i13, float %130, float %123) #3, !dbg !46
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i13, float %130, float %123) #3, !dbg !46
  %.07.i15 = select i1 %.not7.i14, float %148, float %147, !dbg !46
  %149 = fneg float %130, !dbg !46
  %150 = select i1 %119, float %149, float %69, !dbg !46
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not8.i16 = icmp eq i32 %151, 0, !dbg !46
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i15, float %150, float %150) #3, !dbg !46
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i15, float %150, float %150) #3, !dbg !46
  %.08.i17 = select i1 %.not8.i16, float %153, float %152, !dbg !46
  br i1 %119, label %154, label %__nv_erff.exit22, !dbg !46

154:                                              ; preds = %__internal_fmad.exit.i3
  %155 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i17) #3, !dbg !46
  %156 = fsub float 1.000000e+00, %155, !dbg !46
  %157 = bitcast float %156 to i32, !dbg !46
  %158 = bitcast float %69 to i32, !dbg !46
  %159 = and i32 %158, -2147483648, !dbg !46
  %160 = or i32 %159, %157, !dbg !46
  %161 = bitcast i32 %160 to float, !dbg !46
  br label %__nv_erff.exit22, !dbg !46

__nv_erff.exit22:                                 ; preds = %__internal_fmad.exit.i3, %154
  %r.0.i18 = phi float [ %161, %154 ], [ %.08.i17, %__internal_fmad.exit.i3 ], !dbg !46
  %162 = fadd float %40, %47, !dbg !47
  %163 = fadd float %42, %49, !dbg !47
  %164 = fadd float %162, %54, !dbg !48
  %165 = fadd float %163, %56, !dbg !48
  %166 = fadd float %164, %61, !dbg !49
  %167 = fadd float %165, %63, !dbg !49
  %168 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %166, float 4.000000e+00) #3, !dbg !50
  %169 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %167, float 4.000000e+00) #3, !dbg !50
  %170 = fmul float %168, 0x3FE6A09E60000000, !dbg !51
  %171 = fmul float %169, 0x3FE6A09E60000000, !dbg !51
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not.i23 = icmp eq i32 %172, 0, !dbg !52
  %173 = tail call float @llvm.nvvm.fabs.ftz.f(float %170) #3, !dbg !52
  %174 = tail call float @llvm.nvvm.fabs.f(float %170) #3, !dbg !52
  %.0.i24 = select i1 %.not.i23, float %174, float %173, !dbg !52
  %175 = fcmp oge float %.0.i24, 0x3FF00C1FC0000000, !dbg !52
  br i1 %175, label %__nv_fabsf.exit1.i41, label %177, !dbg !52

__nv_fabsf.exit1.i41:                             ; preds = %__nv_erff.exit22
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not1.i42 = icmp eq i32 %176, 0, !dbg !52
  %.01.i43 = select i1 %.not1.i42, float %174, float %173, !dbg !52
  br label %__internal_fmad.exit.i25, !dbg !52

177:                                              ; preds = %__nv_erff.exit22
  %178 = fmul float %170, %170, !dbg !52
  br label %__internal_fmad.exit.i25, !dbg !52

__internal_fmad.exit.i25:                         ; preds = %177, %__nv_fabsf.exit1.i41
  %179 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i41 ], [ 0x3FC06EBA60000000, %177 ], !dbg !52
  %180 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i41 ], [ 0xBFD8127580000000, %177 ], !dbg !52
  %181 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i41 ], [ 0x3FBCE315E0000000, %177 ], !dbg !52
  %182 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i41 ], [ 0xBF9B837CE0000000, %177 ], !dbg !52
  %183 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i41 ], [ 0x3F755ABD40000000, %177 ], !dbg !52
  %184 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i41 ], [ 0xBF4AE9A400000000, %177 ], !dbg !52
  %185 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i41 ], [ 0x3F163D2D40000000, %177 ], !dbg !52
  %186 = phi float [ %.01.i43, %__nv_fabsf.exit1.i41 ], [ %178, %177 ], !dbg !52
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not2.i26 = icmp eq i32 %187, 0, !dbg !52
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %185, float %186, float %184) #3, !dbg !52
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %185, float %186, float %184) #3, !dbg !52
  %.02.i27 = select i1 %.not2.i26, float %189, float %188, !dbg !52
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not3.i28 = icmp eq i32 %190, 0, !dbg !52
  %191 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i27, float %186, float %183) #3, !dbg !52
  %192 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i27, float %186, float %183) #3, !dbg !52
  %.03.i29 = select i1 %.not3.i28, float %192, float %191, !dbg !52
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not4.i30 = icmp eq i32 %193, 0, !dbg !52
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i29, float %186, float %182) #3, !dbg !52
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i29, float %186, float %182) #3, !dbg !52
  %.04.i31 = select i1 %.not4.i30, float %195, float %194, !dbg !52
  %196 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not5.i32 = icmp eq i32 %196, 0, !dbg !52
  %197 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i31, float %186, float %181) #3, !dbg !52
  %198 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i31, float %186, float %181) #3, !dbg !52
  %.05.i33 = select i1 %.not5.i32, float %198, float %197, !dbg !52
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not6.i34 = icmp eq i32 %199, 0, !dbg !52
  %200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i33, float %186, float %180) #3, !dbg !52
  %201 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i33, float %186, float %180) #3, !dbg !52
  %.06.i35 = select i1 %.not6.i34, float %201, float %200, !dbg !52
  %202 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not7.i36 = icmp eq i32 %202, 0, !dbg !52
  %203 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i35, float %186, float %179) #3, !dbg !52
  %204 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i35, float %186, float %179) #3, !dbg !52
  %.07.i37 = select i1 %.not7.i36, float %204, float %203, !dbg !52
  %205 = fneg float %186, !dbg !52
  %206 = select i1 %175, float %205, float %170, !dbg !52
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not8.i38 = icmp eq i32 %207, 0, !dbg !52
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i37, float %206, float %206) #3, !dbg !52
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i37, float %206, float %206) #3, !dbg !52
  %.08.i39 = select i1 %.not8.i38, float %209, float %208, !dbg !52
  br i1 %175, label %210, label %__nv_erff.exit44, !dbg !52

210:                                              ; preds = %__internal_fmad.exit.i25
  %211 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i39) #3, !dbg !52
  %212 = fsub float 1.000000e+00, %211, !dbg !52
  %213 = bitcast float %212 to i32, !dbg !52
  %214 = bitcast float %170 to i32, !dbg !52
  %215 = and i32 %214, -2147483648, !dbg !52
  %216 = or i32 %215, %213, !dbg !52
  %217 = bitcast i32 %216 to float, !dbg !52
  br label %__nv_erff.exit44, !dbg !52

__nv_erff.exit44:                                 ; preds = %__internal_fmad.exit.i25, %210
  %r.0.i40 = phi float [ %217, %210 ], [ %.08.i39, %__internal_fmad.exit.i25 ], !dbg !52
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not.i45 = icmp eq i32 %218, 0, !dbg !52
  %219 = tail call float @llvm.nvvm.fabs.ftz.f(float %171) #3, !dbg !52
  %220 = tail call float @llvm.nvvm.fabs.f(float %171) #3, !dbg !52
  %.0.i46 = select i1 %.not.i45, float %220, float %219, !dbg !52
  %221 = fcmp oge float %.0.i46, 0x3FF00C1FC0000000, !dbg !52
  br i1 %221, label %__nv_fabsf.exit1.i63, label %223, !dbg !52

__nv_fabsf.exit1.i63:                             ; preds = %__nv_erff.exit44
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not1.i64 = icmp eq i32 %222, 0, !dbg !52
  %.01.i65 = select i1 %.not1.i64, float %220, float %219, !dbg !52
  br label %__internal_fmad.exit.i47, !dbg !52

223:                                              ; preds = %__nv_erff.exit44
  %224 = fmul float %171, %171, !dbg !52
  br label %__internal_fmad.exit.i47, !dbg !52

__internal_fmad.exit.i47:                         ; preds = %223, %__nv_fabsf.exit1.i63
  %225 = phi float [ 0x3FE41B0840000000, %__nv_fabsf.exit1.i63 ], [ 0x3FC06EBA60000000, %223 ], !dbg !52
  %226 = phi float [ 0x3FED526FC0000000, %__nv_fabsf.exit1.i63 ], [ 0xBFD8127580000000, %223 ], !dbg !52
  %227 = phi float [ 0x3FC39F20C0000000, %__nv_fabsf.exit1.i63 ], [ 0x3FBCE315E0000000, %223 ], !dbg !52
  %228 = phi float [ 0xBFA1902C40000000, %__nv_fabsf.exit1.i63 ], [ 0xBF9B837CE0000000, %223 ], !dbg !52
  %229 = phi float [ 0x3F75908160000000, %__nv_fabsf.exit1.i63 ], [ 0x3F755ABD40000000, %223 ], !dbg !52
  %230 = phi float [ 0xBF3EAC1720000000, %__nv_fabsf.exit1.i63 ], [ 0xBF4AE9A400000000, %223 ], !dbg !52
  %231 = phi float [ 0x3EF1394780000000, %__nv_fabsf.exit1.i63 ], [ 0x3F163D2D40000000, %223 ], !dbg !52
  %232 = phi float [ %.01.i65, %__nv_fabsf.exit1.i63 ], [ %224, %223 ], !dbg !52
  %233 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not2.i48 = icmp eq i32 %233, 0, !dbg !52
  %234 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %231, float %232, float %230) #3, !dbg !52
  %235 = tail call float @llvm.nvvm.fma.rn.f(float %231, float %232, float %230) #3, !dbg !52
  %.02.i49 = select i1 %.not2.i48, float %235, float %234, !dbg !52
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not3.i50 = icmp eq i32 %236, 0, !dbg !52
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i49, float %232, float %229) #3, !dbg !52
  %238 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i49, float %232, float %229) #3, !dbg !52
  %.03.i51 = select i1 %.not3.i50, float %238, float %237, !dbg !52
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not4.i52 = icmp eq i32 %239, 0, !dbg !52
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.03.i51, float %232, float %228) #3, !dbg !52
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.03.i51, float %232, float %228) #3, !dbg !52
  %.04.i53 = select i1 %.not4.i52, float %241, float %240, !dbg !52
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not5.i54 = icmp eq i32 %242, 0, !dbg !52
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i53, float %232, float %227) #3, !dbg !52
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i53, float %232, float %227) #3, !dbg !52
  %.05.i55 = select i1 %.not5.i54, float %244, float %243, !dbg !52
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not6.i56 = icmp eq i32 %245, 0, !dbg !52
  %246 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i55, float %232, float %226) #3, !dbg !52
  %247 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i55, float %232, float %226) #3, !dbg !52
  %.06.i57 = select i1 %.not6.i56, float %247, float %246, !dbg !52
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not7.i58 = icmp eq i32 %248, 0, !dbg !52
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i57, float %232, float %225) #3, !dbg !52
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i57, float %232, float %225) #3, !dbg !52
  %.07.i59 = select i1 %.not7.i58, float %250, float %249, !dbg !52
  %251 = fneg float %232, !dbg !52
  %252 = select i1 %221, float %251, float %171, !dbg !52
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !52
  %.not8.i60 = icmp eq i32 %253, 0, !dbg !52
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i59, float %252, float %252) #3, !dbg !52
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i59, float %252, float %252) #3, !dbg !52
  %.08.i61 = select i1 %.not8.i60, float %255, float %254, !dbg !52
  br i1 %221, label %256, label %__nv_erff.exit66, !dbg !52

256:                                              ; preds = %__internal_fmad.exit.i47
  %257 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %.08.i61) #3, !dbg !52
  %258 = fsub float 1.000000e+00, %257, !dbg !52
  %259 = bitcast float %258 to i32, !dbg !52
  %260 = bitcast float %171 to i32, !dbg !52
  %261 = and i32 %260, -2147483648, !dbg !52
  %262 = or i32 %261, %259, !dbg !52
  %263 = bitcast i32 %262 to float, !dbg !52
  br label %__nv_erff.exit66, !dbg !52

__nv_erff.exit66:                                 ; preds = %__internal_fmad.exit.i47, %256
  %r.0.i62 = phi float [ %263, %256 ], [ %.08.i61, %__internal_fmad.exit.i47 ], !dbg !52
  %264 = insertelement <2 x float> poison, float %31, i64 0, !dbg !53
  %265 = insertelement <2 x float> %264, float %169, i64 1, !dbg !53
  %266 = fmul <2 x float> %265, splat (float 5.000000e-01), !dbg !53
  %267 = insertelement <2 x float> poison, float %30, i64 0, !dbg !53
  %268 = insertelement <2 x float> %267, float %168, i64 1, !dbg !53
  %269 = fmul <2 x float> %268, splat (float 5.000000e-01), !dbg !53
  %270 = extractvalue { i32, i32 } %19, 1, !dbg !19
  %271 = bitcast i32 %270 to float, !dbg !19
  %272 = extractvalue { i32, i32 } %25, 1, !dbg !24
  %273 = bitcast i32 %272 to float, !dbg !24
  %274 = fmul float %271, %273, !dbg !54
  %275 = fadd float %274, 0.000000e+00, !dbg !55
  %276 = insertelement <2 x float> poison, float %r.0.i18, i64 0, !dbg !56
  %277 = insertelement <2 x float> %276, float %r.0.i62, i64 1, !dbg !56
  %278 = fadd <2 x float> %277, splat (float 1.000000e+00), !dbg !56
  %279 = extractvalue { i32, i32 } %35, 1, !dbg !29
  %280 = extractvalue { i32, i32 } %19, 0, !dbg !19
  %281 = bitcast i32 %280 to float, !dbg !19
  %282 = extractvalue { i32, i32 } %25, 0, !dbg !24
  %283 = bitcast i32 %282 to float, !dbg !24
  %284 = fmul float %281, %283, !dbg !54
  %285 = fadd float %284, 0.000000e+00, !dbg !55
  %286 = insertelement <2 x float> poison, float %r.0.i, i64 0, !dbg !56
  %287 = insertelement <2 x float> %286, float %r.0.i40, i64 1, !dbg !56
  %288 = fadd <2 x float> %287, splat (float 1.000000e+00), !dbg !56
  %289 = extractvalue { i32, i32 } %35, 0, !dbg !29
  %290 = extractvalue { i32, i32 } %67, 1, !dbg !44
  %291 = extractvalue { i32, i32 } %67, 0, !dbg !44
  %292 = insertelement <2 x i32> poison, i32 %289, i64 0, !dbg !29
  %293 = insertelement <2 x i32> %292, i32 %291, i64 1, !dbg !29
  %294 = bitcast <2 x i32> %293 to <2 x float>, !dbg !29
  %295 = fmul <2 x float> %269, %288, !dbg !57
  %296 = fmul <2 x float> %295, %294, !dbg !58
  %297 = extractelement <2 x float> %296, i64 0, !dbg !59
  %298 = fadd float %285, %297, !dbg !59
  %299 = insertelement <2 x i32> poison, i32 %279, i64 0, !dbg !29
  %300 = insertelement <2 x i32> %299, i32 %290, i64 1, !dbg !29
  %301 = bitcast <2 x i32> %300 to <2 x float>, !dbg !29
  %302 = fmul <2 x float> %266, %278, !dbg !57
  %303 = fmul <2 x float> %302, %301, !dbg !58
  %304 = extractelement <2 x float> %303, i64 0, !dbg !59
  %305 = fadd float %275, %304, !dbg !59
  %306 = extractelement <2 x float> %296, i64 1, !dbg !60
  %307 = fadd float %298, %306, !dbg !60
  %308 = extractelement <2 x float> %303, i64 1, !dbg !60
  %309 = fadd float %305, %308, !dbg !60
  %310 = getelementptr float, ptr addrspace(1) %4, i64 %17, !dbg !61
  %311 = bitcast float %307 to i32, !dbg !62
  %312 = bitcast float %309 to i32, !dbg !62
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %311, i32 %312, ptr addrspace(1) %310, i1 %13) #3, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccle3gbdry5bzsf4gmgzzhs62vhlexvp7665vplthkqr4lmbhnue.py", directory: "inductor_cache/cl")
!4 = !{ptr @triton_poi_fused_add_gelu_mean_mul_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_gelu_mean_mul_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_gelu_mean_mul_3", linkageName: "triton_poi_fused_add_gelu_mean_mul_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 45, scope: !7)
!21 = !DILocation(line: 29, column: 36, scope: !7)
!22 = !DILocation(line: 29, column: 41, scope: !7)
!23 = !DILocation(line: 29, column: 30, scope: !7)
!24 = !DILocation(line: 29, column: 50, scope: !7)
!25 = !DILocation(line: 30, column: 30, scope: !7)
!26 = !DILocation(line: 30, column: 35, scope: !7)
!27 = !DILocation(line: 31, column: 42, scope: !7)
!28 = !DILocation(line: 31, column: 31, scope: !7)
!29 = !DILocation(line: 31, column: 51, scope: !7)
!30 = !DILocation(line: 32, column: 33, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 38, scope: !7)
!33 = !DILocation(line: 33, column: 35, scope: !7)
!34 = !DILocation(line: 33, column: 31, scope: !7)
!35 = !DILocation(line: 33, column: 42, scope: !7)
!36 = !DILocation(line: 34, column: 35, scope: !7)
!37 = !DILocation(line: 34, column: 31, scope: !7)
!38 = !DILocation(line: 34, column: 42, scope: !7)
!39 = !DILocation(line: 35, column: 35, scope: !7)
!40 = !DILocation(line: 35, column: 31, scope: !7)
!41 = !DILocation(line: 35, column: 42, scope: !7)
!42 = !DILocation(line: 36, column: 42, scope: !7)
!43 = !DILocation(line: 36, column: 31, scope: !7)
!44 = !DILocation(line: 36, column: 51, scope: !7)
!45 = !DILocation(line: 43, column: 18, scope: !7)
!46 = !DILocation(line: 44, column: 26, scope: !7)
!47 = !DILocation(line: 50, column: 20, scope: !7)
!48 = !DILocation(line: 51, column: 20, scope: !7)
!49 = !DILocation(line: 52, column: 20, scope: !7)
!50 = !DILocation(line: 54, column: 20, scope: !7)
!51 = !DILocation(line: 56, column: 20, scope: !7)
!52 = !DILocation(line: 57, column: 26, scope: !7)
!53 = !DILocation(line: 41, column: 18, scope: !7)
!54 = !DILocation(line: 37, column: 18, scope: !7)
!55 = !DILocation(line: 39, column: 18, scope: !7)
!56 = !DILocation(line: 46, column: 20, scope: !7)
!57 = !DILocation(line: 47, column: 19, scope: !7)
!58 = !DILocation(line: 48, column: 20, scope: !7)
!59 = !DILocation(line: 49, column: 19, scope: !7)
!60 = !DILocation(line: 61, column: 20, scope: !7)
!61 = !DILocation(line: 62, column: 25, scope: !7)
!62 = !DILocation(line: 62, column: 37, scope: !7)
!63 = !DILocation(line: 62, column: 4, scope: !7)
