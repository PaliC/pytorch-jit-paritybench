; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_elu_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 512, !dbg !14
  %10 = sdiv i32 %8, 128, !dbg !15
  %11 = sext i32 %8 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #3, !dbg !17
  %14 = bitcast i32 %13 to float, !dbg !17
  %15 = sext i32 %10 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %1, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %9) #3, !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = fadd float %14, %18, !dbg !20
  %20 = fmul float %19, 0x3FF7154760000000, !dbg !21
  %21 = tail call float @llvm.nvvm.round.f(float %20) #3, !dbg !21
  %22 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i = icmp eq i32 %22, 0, !dbg !21
  %23 = tail call float @llvm.nvvm.fabs.ftz.f(float %19) #3, !dbg !21
  %24 = tail call float @llvm.nvvm.fabs.f(float %19) #3, !dbg !21
  %.03.i = select i1 %.not.i, float %24, float %23, !dbg !21
  %25 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !21
  %t.0.i = select i1 %25, float 0.000000e+00, float %21, !dbg !21
  %26 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %28 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !21
  %j.0.i = select i1 %28, float 1.270000e+02, float %t.0.i, !dbg !21
  %29 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %30 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %31 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %32 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %33 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not8.i = icmp eq i32 %34, 0, !dbg !21
  br i1 %.not8.i, label %37, label %35, !dbg !21

35:                                               ; preds = %3
  %36 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !21
  br label %__nv_expm1f.exit, !dbg !21

37:                                               ; preds = %3
  %38 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !21
  br label %__nv_expm1f.exit, !dbg !21

__nv_expm1f.exit:                                 ; preds = %35, %37
  %.0.i = phi float [ %36, %35 ], [ %38, %37 ], !dbg !21
  %39 = fmul float %19, 0x3FF0CFABE0000000, !dbg !22
  %40 = fcmp ogt float %19, 0.000000e+00, !dbg !23
  %.not7.i = icmp eq i32 %33, 0, !dbg !21
  %.not6.i = icmp eq i32 %32, 0, !dbg !21
  %.not5.i = icmp eq i32 %31, 0, !dbg !21
  %.not4.i = icmp eq i32 %30, 0, !dbg !21
  %.not3.i = icmp eq i32 %29, 0, !dbg !21
  %.not2.i = icmp eq i32 %27, 0, !dbg !21
  %41 = fneg float %t.0.i, !dbg !21
  %.not1.i = icmp eq i32 %26, 0, !dbg !21
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %41, float 0x3FE62E4000000000, float %19) #3, !dbg !21
  %43 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %41, float 0x3FE62E4000000000, float %19) #3, !dbg !21
  %.04.i = select i1 %.not1.i, float %42, float %43, !dbg !21
  %44 = tail call float @llvm.nvvm.fma.rn.f(float %41, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !21
  %45 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %41, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !21
  %.05.i = select i1 %.not2.i, float %44, float %45, !dbg !21
  %46 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !21
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !21
  %.07.i = select i1 %.not3.i, float %46, float %47, !dbg !21
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !21
  %49 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !21
  %.08.i = select i1 %.not4.i, float %48, float %49, !dbg !21
  %50 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !21
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !21
  %.09.i = select i1 %.not5.i, float %50, float %51, !dbg !21
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !21
  %.06.i = select i1 %.not6.i, float %52, float %53, !dbg !21
  %54 = fmul float %.05.i, %.06.i, !dbg !21
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %54, float %.05.i, float %.05.i) #3, !dbg !21
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %54, float %.05.i, float %.05.i) #3, !dbg !21
  %.01.i = select i1 %.not7.i, float %55, float %56, !dbg !21
  %57 = fadd float %.0.i, -1.000000e+00, !dbg !21
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not9.i = icmp eq i32 %58, 0, !dbg !21
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i, float %57) #3, !dbg !21
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i, float %57) #3, !dbg !21
  %.02.i = select i1 %.not9.i, float %60, float %59, !dbg !21
  %61 = fadd float %.02.i, %.02.i, !dbg !21
  %u.0.i = select i1 %28, float %61, float %.02.i, !dbg !21
  %62 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !21
  %u.1.i = select i1 %62, float 0x7FF0000000000000, float %u.0.i, !dbg !21
  %63 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !21
  %u.2.i = select i1 %63, float -1.000000e+00, float %u.1.i, !dbg !21
  %64 = fcmp oeq float %19, 0.000000e+00, !dbg !21
  %65 = fadd float %19, %19, !dbg !21
  %u.3.i = select i1 %64, float %65, float %u.2.i, !dbg !21
  %66 = fmul float %u.3.i, 0x3FFC212CC0000000, !dbg !24
  %67 = select i1 %40, float %39, float %66, !dbg !25
  %68 = bitcast float %67 to i32, !dbg !26
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %12, i1 %9) #3, !dbg !26
  ret void, !dbg !27
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "copgks5m6zcyk5iccbhndnqg2sbjyhjyurlkrwocggqvbkbsmqa4.py", directory: "inductor_cache/op")
!4 = !{ptr @triton_poi_fused_elu_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_elu_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_elu_1", linkageName: "triton_poi_fused_elu_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 18, scope: !7)
!21 = !DILocation(line: 35, column: 27, scope: !7)
!22 = !DILocation(line: 32, column: 18, scope: !7)
!23 = !DILocation(line: 30, column: 18, scope: !7)
!24 = !DILocation(line: 37, column: 19, scope: !7)
!25 = !DILocation(line: 38, column: 33, scope: !7)
!26 = !DILocation(line: 39, column: 40, scope: !7)
!27 = !DILocation(line: 39, column: 4, scope: !7)
