//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mean_mul_rsqrt_sub_var_0 // -- Begin function triton_poi_fused_add_mean_mul_rsqrt_sub_var_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_mean_mul_rsqrt_sub_var_0
.visible .entry triton_poi_fused_add_mean_mul_rsqrt_sub_var_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_3,
	.param .u32 triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<51>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd11, [triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:21:33
	shl.b32 	%r30, %r1, 8;
	ld.param.u64 	%rd13, [triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_2];
	ld.param.u64 	%rd14, [triton_poi_fused_add_mean_mul_rsqrt_sub_var_0_param_3];
	.loc	1 22 36                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:22:36
	mov.u32 	%r31, %tid.x;
	shl.b32 	%r32, %r31, 1;
	and.b32  	%r33, %r32, 254;
	.loc	1 22 23                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:22:23
	or.b32  	%r34, %r30, %r33;
	.loc	1 23 21                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:23:21
	setp.lt.s32 	%p1, %r34, 256;
	.loc	1 24 21                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:24:21
	shr.s32 	%r36, %r34, 31;
	shr.u32 	%r37, %r36, 28;
	add.s32 	%r38, %r34, %r37;
	shr.s32 	%r39, %r38, 4;
	.loc	1 24 27                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:24:27
	shr.u32 	%r40, %r39, 30;
	add.s32 	%r41, %r39, %r40;
	and.b32  	%r42, %r41, -4;
	sub.s32 	%r43, %r39, %r42;
	.loc	1 26 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:26:19
	and.b32  	%r44, %r38, -16;
	sub.s32 	%r45, %r34, %r44;
	.loc	1 27 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:27:19
	bfe.s32 	%r46, %r1, 23, 1;
	shr.u32 	%r47, %r46, 26;
	add.s32 	%r48, %r34, %r47;
	.loc	1 28 30                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:28:30
	mul.wide.s32 	%rd15, %r43, 4;
	add.s64 	%rd1, %rd11, %rd15;
	.loc	1 28 35                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:28:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:29:30
	mul.wide.s32 	%rd16, %r34, 4;
	add.s64 	%rd3, %rd12, %rd16;
	.loc	1 29 35                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:29:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v2.b32 { %r4, %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 38                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:30:38
	and.b32  	%r49, %r48, -64;
	.loc	1 30 35                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:30:35
	add.s32 	%r50, %r49, %r45;
	.loc	1 30 30                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:30:30
	mul.wide.s32 	%rd17, %r50, 4;
	add.s64 	%rd4, %rd12, %rd17;
	.loc	1 30 43                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:30:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r6, %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	.loc	1 31 40                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:31:40
	add.s32 	%r51, %r50, 16;
	.loc	1 31 30                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:31:30
	mul.wide.s32 	%rd18, %r51, 4;
	add.s64 	%rd5, %rd12, %rd18;
	.loc	1 31 48                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:31:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r8;
	mov.b32 	%f4, %r9;
	.loc	1 32 40                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:32:40
	add.s32 	%r52, %r50, 32;
	.loc	1 32 30                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:32:30
	mul.wide.s32 	%rd19, %r52, 4;
	add.s64 	%rd6, %rd12, %rd19;
	.loc	1 32 48                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:32:48
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	.loc	1 33 40                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:33:40
	add.s32 	%r53, %r50, 48;
	.loc	1 33 30                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:33:30
	mul.wide.s32 	%rd20, %r53, 4;
	add.s64 	%rd7, %rd12, %rd20;
	.loc	1 33 48                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:33:48
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 34 31                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:34:31
	add.s64 	%rd8, %rd13, %rd15;
	.loc	1 34 36                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:34:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 35 18                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:35:18
	add.f32 	%f9, %f1, %f3;
	add.f32 	%f10, %f2, %f4;
	.loc	1 36 18                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:36:18
	add.f32 	%f11, %f9, %f5;
	add.f32 	%f12, %f10, %f6;
	.loc	1 37 18                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:37:18
	add.f32 	%f13, %f11, %f7;
	add.f32 	%f14, %f12, %f8;
	.loc	1 39 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:39:19
	mov.b32 	%r17, %f13;
	mov.b32 	%r18, 1082130432;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f15, %r16;
	mov.b32 	%r20, %f14;
	// begin inline asm
	div.full.f32 %r19, %r20, %r18;
	// end inline asm
	mov.b32 	%f16, %r19;
	.loc	1 41 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:41:19
	sub.f32 	%f17, %f1, %f15;
	sub.f32 	%f18, %f2, %f16;
	.loc	1 43 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:43:19
	sub.f32 	%f19, %f3, %f15;
	sub.f32 	%f20, %f4, %f16;
	.loc	1 44 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:44:20
	mul.f32 	%f21, %f19, %f19;
	mul.f32 	%f22, %f20, %f20;
	.loc	1 45 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:45:20
	fma.rn.f32 	%f23, %f17, %f17, %f21;
	fma.rn.f32 	%f24, %f18, %f18, %f22;
	.loc	1 46 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:46:19
	sub.f32 	%f25, %f5, %f15;
	sub.f32 	%f26, %f6, %f16;
	.loc	1 48 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:48:20
	fma.rn.f32 	%f27, %f25, %f25, %f23;
	fma.rn.f32 	%f28, %f26, %f26, %f24;
	.loc	1 49 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:49:19
	sub.f32 	%f29, %f7, %f15;
	sub.f32 	%f30, %f8, %f16;
	.loc	1 51 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:51:20
	fma.rn.f32 	%f31, %f29, %f29, %f27;
	fma.rn.f32 	%f32, %f30, %f30, %f28;
	.loc	1 52 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:52:20
	mov.b32 	%r23, %f31;
	// begin inline asm
	div.full.f32 %r22, %r23, %r18;
	// end inline asm
	mov.b32 	%f33, %r22;
	mov.b32 	%r26, %f32;
	// begin inline asm
	div.full.f32 %r25, %r26, %r18;
	// end inline asm
	mov.b32 	%f34, %r25;
	.loc	1 54 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:54:20
	add.f32 	%f35, %f33, 0f358637BD;
	add.f32 	%f36, %f34, 0f358637BD;
	.loc	1 55 28                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:55:28
	rsqrt.approx.ftz.f32 	%f37, %f35;
	rsqrt.approx.ftz.f32 	%f38, %f36;
	.loc	1 29 35                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:29:35
	mov.b32 	%f39, %r5;
	.loc	1 40 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:40:19
	sub.f32 	%f40, %f39, %f16;
	.loc	1 29 35                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:29:35
	mov.b32 	%f41, %r4;
	.loc	1 40 19                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:40:19
	sub.f32 	%f42, %f41, %f15;
	.loc	1 34 36                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:34:36
	mov.b32 	%f43, %r15;
	mov.b32 	%f44, %r14;
	.loc	1 28 35                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:28:35
	mov.b32 	%f45, %r3;
	mov.b32 	%f46, %r2;
	.loc	1 56 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:56:20
	mul.f32 	%f47, %f42, %f37;
	mul.f32 	%f48, %f40, %f38;
	.loc	1 58 20                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:58:20
	fma.rn.f32 	%f49, %f47, %f46, %f44;
	fma.rn.f32 	%f50, %f48, %f45, %f43;
	.loc	1 59 25                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:59:25
	add.s64 	%rd10, %rd14, %rd16;
	.loc	1 59 37                         // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:59:37
	mov.b32 	%r28, %f49;
	mov.b32 	%r29, %f50;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd10 + 0 ], { %r28, %r29 };
	// end inline asm
	.loc	1 59 4                          // cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py:59:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/of/cofnswcnyk46tbk7a6ofbuikpb7rx2lttqe47fgoszkdycsymwfb.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 102
.b8 110
.b8 115
.b8 119
.b8 99
.b8 110
.b8 121
.b8 107
.b8 52
.b8 54
.b8 116
.b8 98
.b8 107
.b8 55
.b8 97
.b8 54
.b8 111
.b8 102
.b8 98
.b8 117
.b8 105
.b8 107
.b8 112
.b8 98
.b8 55
.b8 114
.b8 120
.b8 50
.b8 108
.b8 116
.b8 116
.b8 113
.b8 101
.b8 52
.b8 55
.b8 102
.b8 103
.b8 111
.b8 115
.b8 122
.b8 107
.b8 100
.b8 121
.b8 99
.b8 115
.b8 121
.b8 109
.b8 119
.b8 102
.b8 98
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 102
.b8 0
	}
	.section	.debug_macinfo	{	}
