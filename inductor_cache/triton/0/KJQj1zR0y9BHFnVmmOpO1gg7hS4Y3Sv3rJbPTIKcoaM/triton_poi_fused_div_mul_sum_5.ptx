//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_div_mul_sum_5 // -- Begin function triton_poi_fused_div_mul_sum_5
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_div_mul_sum_5
.visible .entry triton_poi_fused_div_mul_sum_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_mul_sum_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_mul_sum_5_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_div_mul_sum_5_param_2,
	.param .u32 triton_poi_fused_div_mul_sum_5_param_3,
	.param .u32 triton_poi_fused_div_mul_sum_5_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<121>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_div_mul_sum_5_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_div_mul_sum_5_param_1];
$L__tmp0:
	.loc	1 22 28                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:22:33
	shl.b32 	%r43, %r1, 5;
	ld.param.u64 	%rd14, [triton_poi_fused_div_mul_sum_5_param_2];
	.loc	1 23 44                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:23:44
	mov.u32 	%r44, %tid.x;
	bfe.u32 	%r45, %r44, 2, 5;
	shl.b32 	%r46, %r44, 2;
	and.b32  	%r47, %r46, 12;
	and.b32  	%r48, %r46, 28;
	.loc	1 23 23                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:23:23
	or.b32  	%r49, %r43, %r45;
	or.b32  	%r50, %r43, %r48;
	.loc	1 24 21                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:24:21
	setp.lt.s32 	%p16, %r49, 32;
	setp.lt.s32 	%p17, %r50, 32;
	.loc	1 25 28                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:25:33
	shl.b32 	%r51, %r2, 4;
	.loc	1 26 44                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:26:44
	bfe.u32 	%r52, %r44, 3, 4;
	.loc	1 26 23                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:26:23
	or.b32  	%r53, %r51, %r47;
	or.b32  	%r54, %r51, %r52;
	.loc	1 27 21                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:27:21
	setp.lt.s32 	%p18, %r53, 16;
	setp.lt.s32 	%p19, %r54, 16;
	.loc	1 29 19                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:29:19
	bfe.u32 	%r55, %r1, 26, 1;
	add.s32 	%r56, %r49, %r55;
	shr.s32 	%r57, %r56, 1;
	.loc	1 30 19                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:30:19
	shr.s32 	%r59, %r50, 31;
	shr.u32 	%r60, %r59, 29;
	add.s32 	%r61, %r50, %r60;
	bfe.s32 	%r62, %r1, 26, 1;
	shr.u32 	%r63, %r62, 29;
	add.s32 	%r64, %r49, %r63;
	.loc	1 31 19                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:31:19
	and.b32  	%r65, %r61, -8;
	sub.s32 	%r66, %r50, %r65;
	.loc	1 32 26                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:32:26
	shr.u32 	%r67, %r57, 30;
	add.s32 	%r68, %r57, %r67;
	and.b32  	%r69, %r68, 2147483644;
	sub.s32 	%r70, %r57, %r69;
	.loc	1 34 38                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:34:38
	shl.b32 	%r71, %r57, 4;
	.loc	1 34 35                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:34:35
	add.s32 	%r72, %r71, %r53;
	.loc	1 34 30                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:34:30
	mul.wide.s32 	%rd15, %r72, 4;
	add.s64 	%rd1, %rd12, %rd15;
	.loc	1 34 51                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:34:51
	and.pred  	%p1, %p16, %p18;
	and.pred  	%p2, %p17, %p19;
	.loc	1 34 43                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:34:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 35 37                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:35:37
	shl.b32 	%r73, %r54, 3;
	shl.b32 	%r74, %r53, 3;
	or.b32  	%r75, %r74, 8;
	or.b32  	%r76, %r74, 16;
	or.b32  	%r77, %r74, 24;
	.loc	1 35 35                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:35:35
	add.s32 	%r78, %r73, %r66;
	.loc	1 35 46                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:35:46
	shl.b32 	%r79, %r61, 4;
	and.b32  	%r80, %r79, -128;
	shl.b32 	%r81, %r64, 4;
	and.b32  	%r82, %r81, -128;
	.loc	1 35 42                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:35:42
	add.s32 	%r83, %r78, %r80;
	.loc	1 35 30                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:35:30
	mul.wide.s32 	%rd16, %r83, 4;
	add.s64 	%rd2, %rd13, %rd16;
	.loc	1 35 51                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:35:51
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 36 32                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:32
	shl.b32 	%r84, %r70, 1;
	.loc	1 36 37                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:37
	add.s32 	%r85, %r84, %r82;
	.loc	1 36 44                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:44
	add.s32 	%r86, %r85, %r74;
	add.s32 	%r87, %r85, %r75;
	add.s32 	%r88, %r85, %r76;
	add.s32 	%r89, %r85, %r77;
	.loc	1 36 30                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:30
	mul.wide.s32 	%rd17, %r86, 4;
	add.s64 	%rd3, %rd13, %rd17;
	mul.wide.s32 	%rd18, %r87, 4;
	add.s64 	%rd4, %rd13, %rd18;
	mul.wide.s32 	%rd19, %r88, 4;
	add.s64 	%rd5, %rd13, %rd19;
	mul.wide.s32 	%rd20, %r89, 4;
	add.s64 	%rd6, %rd13, %rd20;
	.loc	1 36 53                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:53
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 41                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:37:41
	or.b32  	%r90, %r85, 1;
	.loc	1 37 48                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:37:48
	add.s32 	%r91, %r90, %r74;
	add.s32 	%r92, %r90, %r75;
	add.s32 	%r93, %r90, %r76;
	add.s32 	%r94, %r90, %r77;
	.loc	1 37 30                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:37:30
	mul.wide.s32 	%rd21, %r91, 4;
	add.s64 	%rd7, %rd13, %rd21;
	mul.wide.s32 	%rd22, %r92, 4;
	add.s64 	%rd8, %rd13, %rd22;
	mul.wide.s32 	%rd23, %r93, 4;
	add.s64 	%rd9, %rd13, %rd23;
	mul.wide.s32 	%rd24, %r94, 4;
	add.s64 	%rd10, %rd13, %rd24;
	.loc	1 37 57                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:37:57
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd10 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p20, %f5, 0f00000000;
	setp.lt.f32 	%p21, %f6, 0f00000000;
	setp.lt.f32 	%p22, %f7, 0f00000000;
	setp.lt.f32 	%p23, %f8, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f9, 0f00000000, %f5, %p20;
	selp.f32 	%f10, 0f00000000, %f6, %p21;
	selp.f32 	%f11, 0f00000000, %f7, %p22;
	selp.f32 	%f12, 0f00000000, %f8, %p23;
$L__tmp2:
	.loc	1 41 18                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:41:18
	add.f32 	%f13, %f9, 0f3A83126F;
	add.f32 	%f14, %f10, 0f3A83126F;
	add.f32 	%f15, %f11, 0f3A83126F;
	add.f32 	%f16, %f12, 0f3A83126F;
	shl.b32 	%r95, %r44, 6;
	and.b32  	%r96, %r95, 448;
	or.b32  	%r97, %r96, %r52;
	shr.u32 	%r98, %r96, 2;
	mov.u32 	%r99, global_smem;
	add.s32 	%r100, %r99, %r98;
	shl.b32 	%r101, %r97, 2;
	add.s32 	%r19, %r100, %r101;
	mov.b32 	%r20, %f13;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r102, %r96, 16;
	shr.u32 	%r103, %r102, 2;
	add.s32 	%r104, %r99, %r103;
	add.s32 	%r105, %r104, %r101;
	add.s32 	%r21, %r105, 64;
	mov.b32 	%r22, %f14;
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r106, %r96, 32;
	shr.u32 	%r107, %r106, 2;
	add.s32 	%r108, %r99, %r107;
	add.s32 	%r109, %r108, %r101;
	add.s32 	%r23, %r109, 128;
	mov.b32 	%r24, %f15;
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r110, %r96, 48;
	shr.u32 	%r111, %r110, 2;
	add.s32 	%r112, %r99, %r111;
	add.s32 	%r113, %r112, %r101;
	add.s32 	%r25, %r113, 192;
	mov.b32 	%r26, %f16;
	// begin inline asm
	@%p11 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r114, %r44, 124;
	add.s32 	%r115, %r99, %r114;
	shl.b32 	%r116, %r44, 4;
	and.b32  	%r117, %r116, 2032;
	add.s32 	%r118, %r115, %r117;
	.loc	1 36 53                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:53
	mov.b32 	%f17, %r15;
	mov.b32 	%f18, %r11;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p24, %f18, 0f00000000;
	setp.lt.f32 	%p25, %f17, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f19, 0f00000000, %f17, %p25;
	selp.f32 	%f20, 0f00000000, %f18, %p24;
$L__tmp4:
	.loc	1 43 18                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:43:18
	add.f32 	%f21, %f20, 0f3A83126F;
	add.f32 	%f22, %f19, 0f3A83126F;
	.loc	1 36 53                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:53
	mov.b32 	%f23, %r16;
	mov.b32 	%f24, %r12;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p26, %f24, 0f00000000;
	setp.lt.f32 	%p27, %f23, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, 0f00000000, %f23, %p27;
	selp.f32 	%f26, 0f00000000, %f24, %p26;
$L__tmp6:
	.loc	1 43 18                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:43:18
	add.f32 	%f27, %f26, 0f3A83126F;
	add.f32 	%f28, %f25, 0f3A83126F;
	.loc	1 36 53                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:53
	mov.b32 	%f29, %r17;
	mov.b32 	%f30, %r13;
$L__tmp7:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p28, %f30, 0f00000000;
	setp.lt.f32 	%p29, %f29, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f31, 0f00000000, %f29, %p29;
	selp.f32 	%f32, 0f00000000, %f30, %p28;
$L__tmp8:
	.loc	1 43 18                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:43:18
	add.f32 	%f33, %f32, 0f3A83126F;
	add.f32 	%f34, %f31, 0f3A83126F;
	.loc	1 36 53                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:36:53
	mov.b32 	%f35, %r18;
	mov.b32 	%f36, %r14;
$L__tmp9:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p30, %f36, 0f00000000;
	setp.lt.f32 	%p31, %f35, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f37, 0f00000000, %f35, %p31;
	selp.f32 	%f38, 0f00000000, %f36, %p30;
$L__tmp10:
	.loc	1 43 18                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:43:18
	add.f32 	%f39, %f38, 0f3A83126F;
	add.f32 	%f40, %f37, 0f3A83126F;
	.loc	1 46 19                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:46:19
	add.f32 	%f41, %f21, %f22;
	add.f32 	%f42, %f27, %f28;
	add.f32 	%f43, %f33, %f34;
	add.f32 	%f44, %f39, %f40;
	.loc	1 47 19                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:47:19
	mov.b32 	%r29, %f41;
	ld.shared.u32 	%r28, [%r118];
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f45, %r27;
	mov.b32 	%r32, %f42;
	ld.shared.u32 	%r31, [%r118+4];
	// begin inline asm
	div.full.f32 %r30, %r31, %r32;
	// end inline asm
	mov.b32 	%f46, %r30;
	mov.b32 	%r35, %f43;
	ld.shared.u32 	%r34, [%r118+8];
	// begin inline asm
	div.full.f32 %r33, %r34, %r35;
	// end inline asm
	mov.b32 	%f47, %r33;
	mov.b32 	%r38, %f44;
	ld.shared.u32 	%r37, [%r118+12];
	// begin inline asm
	div.full.f32 %r36, %r37, %r38;
	// end inline asm
	mov.b32 	%f48, %r36;
	.loc	1 48 19                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:48:19
	mul.f32 	%f49, %f45, %f1;
	mul.f32 	%f50, %f46, %f2;
	mul.f32 	%f51, %f47, %f3;
	mul.f32 	%f52, %f48, %f4;
	.loc	1 49 33                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:49:33
	shl.b32 	%r119, %r49, 4;
	.loc	1 49 30                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:49:30
	add.s32 	%r120, %r53, %r119;
	.loc	1 49 25                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:49:25
	mul.wide.s32 	%rd25, %r120, 4;
	add.s64 	%rd11, %rd14, %rd25;
	.loc	1 49 45                         // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:49:45
	mov.b32 	%r39, %f49;
	mov.b32 	%r40, %f50;
	mov.b32 	%r41, %f51;
	mov.b32 	%r42, %f52;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	.loc	1 49 4                          // c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py:49:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5n/c5nacvdeet766izfdcdaumifvuwqxrvwxndmxk2ghniseo7pvcla.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 199                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 110
.b8 97
.b8 99
.b8 118
.b8 100
.b8 101
.b8 101
.b8 116
.b8 55
.b8 54
.b8 54
.b8 105
.b8 122
.b8 102
.b8 100
.b8 99
.b8 100
.b8 97
.b8 117
.b8 109
.b8 105
.b8 102
.b8 118
.b8 117
.b8 119
.b8 113
.b8 120
.b8 114
.b8 118
.b8 119
.b8 120
.b8 110
.b8 100
.b8 109
.b8 120
.b8 107
.b8 50
.b8 103
.b8 104
.b8 110
.b8 105
.b8 115
.b8 101
.b8 111
.b8 55
.b8 112
.b8 118
.b8 99
.b8 108
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
