; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_72(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9) local_unnamed_addr !dbg !7 {
  %11 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %12 = shl i32 %11, 8, !dbg !11
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %14 = shl i32 %13, 1, !dbg !12
  %15 = and i32 %14, 254, !dbg !12
  %16 = or disjoint i32 %12, %15, !dbg !13
  %.frozen = freeze i32 %16, !dbg !14
  %17 = sdiv i32 %.frozen, 4, !dbg !14
  %18 = srem i32 %17, 256, !dbg !15
  %.frozen1 = freeze i32 %16, !dbg !16
  %19 = sdiv i32 %.frozen1, 1024, !dbg !16
  %20 = mul i32 %17, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %20, !dbg !17
  %21 = ashr exact i32 %16, 1, !dbg !18
  %22 = srem i32 %21, 2, !dbg !19
  %23 = icmp slt i32 %18, 128, !dbg !20
  %24 = mul i32 %19, 1024, !dbg !21
  %srem.decomposed = sub i32 %.frozen1, %24, !dbg !21
  %25 = shl nsw i32 %19, 9, !dbg !22
  %26 = add nsw i32 %25, %srem.decomposed, !dbg !23
  %27 = sext i32 %26 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %28, i1 %23, i32 0, i1 %23, i32 0, i1 %23) #1, !dbg !25
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !25
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !25
  %32 = bitcast i32 %30 to float, !dbg !25
  %33 = bitcast i32 %31 to float, !dbg !25
  %34 = shl nsw i32 %19, 7, !dbg !26
  %35 = add nsw i32 %34, %18, !dbg !27
  %36 = sext i32 %35 to i64, !dbg !28
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %36, !dbg !28
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %23, i32 0, i1 %23) #1, !dbg !29
  %39 = bitcast i32 %38 to float, !dbg !29
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 %23, i32 0, i1 %23) #1, !dbg !29
  %41 = bitcast i32 %40 to float, !dbg !29
  %42 = fsub float %39, %39, !dbg !30
  %43 = fsub float %41, %41, !dbg !30
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %5, i1 %23, i32 0, i1 %23, i32 0, i1 %23) #1, !dbg !31
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !31
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !31
  %47 = bitcast i32 %45 to float, !dbg !31
  %48 = bitcast i32 %46 to float, !dbg !31
  %49 = fmul float %42, %47, !dbg !32
  %50 = fmul float %43, %48, !dbg !32
  %51 = fadd float %49, %39, !dbg !33
  %52 = fadd float %50, %41, !dbg !33
  %53 = fsub float %51, %32, !dbg !34
  %54 = fsub float %52, %33, !dbg !34
  %55 = sext i32 %22 to i64, !dbg !35
  %56 = getelementptr float, ptr addrspace(1) %6, i64 %55, !dbg !35
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %23, i32 0, i1 %23) #1, !dbg !36
  %58 = bitcast i32 %57 to float, !dbg !36
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %23, i32 0, i1 %23) #1, !dbg !36
  %60 = bitcast i32 %59 to float, !dbg !36
  %61 = fmul float %53, %58, !dbg !37
  %62 = fmul float %54, %60, !dbg !37
  %63 = fadd float %61, %32, !dbg !38
  %64 = fadd float %62, %33, !dbg !38
  %65 = icmp sgt i32 %18, 127, !dbg !39
  %66 = shl nsw i32 %18, 2, !dbg !40
  %67 = add nsw i32 %.decomposed, -512, !dbg !40
  %68 = add nsw i32 %67, %25, !dbg !41
  %69 = add nsw i32 %68, %66, !dbg !42
  %70 = sext i32 %69 to i64, !dbg !43
  %71 = getelementptr float, ptr addrspace(1) %7, i64 %70, !dbg !43
  %72 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %71, i1 %65, i32 0, i1 %65, i32 0, i1 %65) #1, !dbg !44
  %73 = extractvalue { i32, i32 } %72, 0, !dbg !44
  %74 = extractvalue { i32, i32 } %72, 1, !dbg !44
  %75 = sext i32 %16 to i64, !dbg !45
  %76 = getelementptr float, ptr addrspace(1) %8, i64 %75, !dbg !45
  %77 = bitcast float %63 to i32, !dbg !46
  %78 = select i1 %23, i32 %77, i32 %73, !dbg !47
  %79 = bitcast float %64 to i32, !dbg !46
  %80 = select i1 %23, i32 %79, i32 %74, !dbg !47
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %78, i32 %80, ptr addrspace(1) %76, i1 true) #1, !dbg !46
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py", directory: "inductor_cache/4p")
!4 = !{ptr @triton_poi_fused_cat_72, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_72, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_72", linkageName: "triton_poi_fused_cat_72", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 27, column: 26, scope: !7)
!20 = !DILocation(line: 34, column: 18, scope: !7)
!21 = !DILocation(line: 35, column: 35, scope: !7)
!22 = !DILocation(line: 35, column: 48, scope: !7)
!23 = !DILocation(line: 35, column: 44, scope: !7)
!24 = !DILocation(line: 35, column: 30, scope: !7)
!25 = !DILocation(line: 35, column: 53, scope: !7)
!26 = !DILocation(line: 45, column: 35, scope: !7)
!27 = !DILocation(line: 45, column: 41, scope: !7)
!28 = !DILocation(line: 45, column: 31, scope: !7)
!29 = !DILocation(line: 45, column: 47, scope: !7)
!30 = !DILocation(line: 50, column: 20, scope: !7)
!31 = !DILocation(line: 51, column: 36, scope: !7)
!32 = !DILocation(line: 52, column: 20, scope: !7)
!33 = !DILocation(line: 53, column: 20, scope: !7)
!34 = !DILocation(line: 54, column: 20, scope: !7)
!35 = !DILocation(line: 55, column: 31, scope: !7)
!36 = !DILocation(line: 55, column: 36, scope: !7)
!37 = !DILocation(line: 56, column: 20, scope: !7)
!38 = !DILocation(line: 57, column: 19, scope: !7)
!39 = !DILocation(line: 60, column: 20, scope: !7)
!40 = !DILocation(line: 63, column: 39, scope: !7)
!41 = !DILocation(line: 63, column: 36, scope: !7)
!42 = !DILocation(line: 63, column: 54, scope: !7)
!43 = !DILocation(line: 63, column: 31, scope: !7)
!44 = !DILocation(line: 63, column: 63, scope: !7)
!45 = !DILocation(line: 65, column: 25, scope: !7)
!46 = !DILocation(line: 65, column: 37, scope: !7)
!47 = !DILocation(line: 0, scope: !7)
!48 = !DILocation(line: 65, column: 4, scope: !7)
