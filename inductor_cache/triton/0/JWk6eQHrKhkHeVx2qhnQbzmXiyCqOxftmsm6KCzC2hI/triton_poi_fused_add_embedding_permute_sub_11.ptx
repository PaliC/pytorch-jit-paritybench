//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_embedding_permute_sub_11 // -- Begin function triton_poi_fused_add_embedding_permute_sub_11
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 104, 122, 47, 99, 104, 122, 51, 115, 52, 107, 104, 103, 122, 118, 51, 104, 113, 102, 108, 107, 104, 115, 102, 100, 50, 111, 121, 103, 113, 122, 104, 121, 113, 104, 97, 50, 103, 51, 51, 113, 55, 50, 107, 103, 114, 102, 115, 55, 120, 119, 122, 100, 119, 52, 108, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[38] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 55, 32, 60, 32, 49, 48, 50, 52};
                                        // @triton_poi_fused_add_embedding_permute_sub_11
.visible .entry triton_poi_fused_add_embedding_permute_sub_11(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_permute_sub_11_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_permute_sub_11_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_permute_sub_11_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_permute_sub_11_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_embedding_permute_sub_11_param_4,
	.param .u32 triton_poi_fused_add_embedding_permute_sub_11_param_5,
	.param .u32 triton_poi_fused_add_embedding_permute_sub_11_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<43>;
	.reg .b64 	%rd<104>;
	.loc	1 19 0                          // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:19:0

// %bb.0:
	ld.param.u64 	%rd35, [triton_poi_fused_add_embedding_permute_sub_11_param_0];
	ld.param.u64 	%rd36, [triton_poi_fused_add_embedding_permute_sub_11_param_1];
$L__tmp0:
	.loc	1 22 28                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:22:28
	// begin inline asm
	mov.u32 %r13, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:22:33
	shl.b32 	%r31, %r13, 5;
	ld.param.u64 	%rd37, [triton_poi_fused_add_embedding_permute_sub_11_param_2];
	.loc	1 23 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:23:44
	mov.u32 	%r32, %tid.x;
	bfe.u32 	%r33, %r32, 3, 4;
	.loc	1 23 23                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:23:23
	or.b32  	%r34, %r31, %r33;
	.loc	1 24 21                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:24:21
	setp.lt.s32 	%p5, %r34, 256;
	.loc	1 25 28                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:25:28
	// begin inline asm
	mov.u32 %r14, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:25:33
	shl.b32 	%r35, %r14, 5;
	.loc	1 26 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:26:44
	shl.b32 	%r36, %r32, 2;
	and.b32  	%r37, %r36, 28;
	.loc	1 31 19                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:31:19
	shr.s32 	%r39, %r34, 31;
	shr.u32 	%r40, %r39, 26;
	add.s32 	%r41, %r34, %r40;
	.loc	1 30 19                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:30:19
	and.b32  	%r42, %r41, -64;
	sub.s32 	%r1, %r34, %r42;
	.loc	1 32 39                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:39
	shl.b32 	%r43, %r34, 8;
	.loc	1 33 30                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:33:30
	mul.wide.s32 	%rd38, %r1, 4;
	add.s64 	%rd15, %rd36, %rd38;
	.loc	1 34 39                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:34:39
	shl.b32 	%r44, %r41, 2;
	and.b32  	%r45, %r44, -256;
	.loc	1 26 23                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:26:23
	or.b32  	%r46, %r34, 16;
	or.b32  	%r47, %r37, %r35;
	or.b32  	%r48, %r47, 2;
	.loc	1 27 21                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:27:21
	setp.lt.s32 	%p17, %r47, 256;
	setp.lt.s32 	%p10, %r46, 256;
	.loc	1 31 19                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:31:19
	shr.s32 	%r50, %r46, 31;
	shr.u32 	%r51, %r50, 26;
	add.s32 	%r52, %r46, %r51;
	.loc	1 30 19                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:30:19
	and.b32  	%r53, %r52, -64;
	sub.s32 	%r2, %r46, %r53;
	.loc	1 32 39                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:39
	shl.b32 	%r54, %r46, 8;
	.loc	1 32 35                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:35
	add.s32 	%r55, %r47, %r43;
	add.s32 	%r56, %r47, %r54;
	.loc	1 32 30                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:30
	mul.wide.s32 	%rd39, %r55, 4;
	add.s64 	%rd13, %rd35, %rd39;
	mul.wide.s32 	%rd40, %r56, 4;
	add.s64 	%rd14, %rd35, %rd40;
	.loc	1 32 52                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:52
	and.pred  	%p2, %p10, %p17;
	and.pred  	%p1, %p17, %p5;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p2 ld.global.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 33 30                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:33:30
	mul.wide.s32 	%rd41, %r2, 4;
	add.s64 	%rd19, %rd36, %rd41;
	.loc	1 33 35                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:33:35
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r23 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r24 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r25 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r26 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r27 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r28 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r29 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r30 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 34 39                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:34:39
	shl.b32 	%r57, %r52, 2;
	and.b32  	%r58, %r57, -256;
	.loc	1 34 35                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:34:35
	add.s32 	%r59, %r45, %r47;
	add.s32 	%r60, %r45, %r48;
	add.s32 	%r61, %r47, %r58;
	add.s32 	%r62, %r58, %r48;
	.loc	1 34 30                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:34:30
	mul.wide.s32 	%rd42, %r59, 8;
	add.s64 	%rd25, %rd37, %rd42;
	mul.wide.s32 	%rd43, %r60, 8;
	add.s64 	%rd28, %rd37, %rd43;
	mul.wide.s32 	%rd44, %r61, 8;
	add.s64 	%rd31, %rd37, %rd44;
	mul.wide.s32 	%rd45, %r62, 8;
	add.s64 	%rd34, %rd37, %rd45;
	.loc	1 34 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:34:44
	// begin inline asm
	mov.u64 %rd23, 0x0;
	mov.u64 %rd24, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd23, %rd24 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd26, 0x0;
	mov.u64 %rd27, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd26, %rd27 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, 0x0;
	mov.u64 %rd30, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b64 { %rd29, %rd30 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	mov.u64 %rd33, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b64 { %rd32, %rd33 }, [ %rd34 + 0 ];
	// end inline asm
	.loc	1 39 32                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:39:32
	shr.u64 	%rd46, %rd29, 53;
	shr.u64 	%rd47, %rd23, 53;
	and.b64  	%rd48, %rd47, 1024;
	and.b64  	%rd49, %rd46, 1024;
	add.s64 	%rd4, %rd49, %rd29;
	add.s64 	%rd3, %rd48, %rd23;
	shr.u64 	%rd50, %rd30, 53;
	shr.u64 	%rd51, %rd24, 53;
	and.b64  	%rd52, %rd51, 1024;
	and.b64  	%rd53, %rd50, 1024;
	add.s64 	%rd6, %rd53, %rd30;
	add.s64 	%rd5, %rd52, %rd24;
	shr.u64 	%rd54, %rd26, 53;
	shr.u64 	%rd55, %rd32, 53;
	and.b64  	%rd56, %rd55, 1024;
	and.b64  	%rd57, %rd54, 1024;
	add.s64 	%rd7, %rd57, %rd26;
	add.s64 	%rd8, %rd56, %rd32;
	shr.u64 	%rd58, %rd33, 53;
	shr.u64 	%rd59, %rd27, 53;
	and.b64  	%rd60, %rd59, 1024;
	and.b64  	%rd61, %rd58, 1024;
	add.s64 	%rd10, %rd61, %rd33;
	add.s64 	%rd9, %rd60, %rd27;
	.loc	1 40 71                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:40:71
	or.b64  	%rd62, %rd3, %rd5;
	or.b64  	%rd63, %rd4, %rd6;
	or.b64  	%rd64, %rd63, %rd8;
	or.b64  	%rd65, %rd62, %rd7;
	or.b64  	%rd66, %rd65, %rd9;
	or.b64  	%rd67, %rd64, %rd10;
	setp.gt.u64 	%p18, %rd67, 1023;
	setp.gt.u64 	%p19, %rd66, 1023;
	and.pred  	%p20, %p1, %p19;
	and.pred  	%p21, %p2, %p18;
	or.pred  	%p22, %p20, %p21;
	@!%p22 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 71                          // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:0:71
	ld.param.u64 	%rd12, [triton_poi_fused_add_embedding_permute_sub_11_param_4];
	ld.param.u64 	%rd11, [triton_poi_fused_add_embedding_permute_sub_11_param_3];
	.loc	1 32 0                          // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:0
	cvt.s64.s32 	%rd1, %r55;
	cvt.s64.s32 	%rd2, %r56;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f1, %r22;
	.loc	1 33 35                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:33:35
	mov.b32 	%f2, %r30;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f3, %f1, %f2;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f4, %r21;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f5, %f4, %f2;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f6, %r20;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f7, %f6, %f2;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f8, %r19;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f9, %f8, %f2;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f10, %r18;
	.loc	1 33 35                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:33:35
	mov.b32 	%f11, %r26;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f12, %f10, %f11;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f13, %r17;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f14, %f13, %f11;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f15, %r16;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f16, %f15, %f11;
	.loc	1 32 44                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:32:44
	mov.b32 	%f17, %r15;
	.loc	1 35 18                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:35:18
	add.f32 	%f18, %f17, %f11;
	.loc	1 40 71                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:40:71
	bar.sync 	0;
	.loc	1 41 42                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:41:42
	shl.b32 	%r79, %r1, 10;
	shl.b32 	%r80, %r2, 10;
	.loc	1 41 30                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:41:30
	shl.b64 	%rd78, %rd3, 2;
	add.s64 	%rd79, %rd11, %rd78;
	mul.wide.s32 	%rd80, %r79, 4;
	add.s64 	%rd68, %rd79, %rd80;
	shl.b64 	%rd81, %rd5, 2;
	add.s64 	%rd82, %rd11, %rd81;
	add.s64 	%rd69, %rd82, %rd80;
	shl.b64 	%rd83, %rd7, 2;
	add.s64 	%rd84, %rd11, %rd83;
	add.s64 	%rd70, %rd84, %rd80;
	shl.b64 	%rd85, %rd9, 2;
	add.s64 	%rd86, %rd11, %rd85;
	add.s64 	%rd71, %rd86, %rd80;
	shl.b64 	%rd87, %rd4, 2;
	add.s64 	%rd88, %rd11, %rd87;
	mul.wide.s32 	%rd89, %r80, 4;
	add.s64 	%rd72, %rd88, %rd89;
	shl.b64 	%rd90, %rd6, 2;
	add.s64 	%rd91, %rd11, %rd90;
	add.s64 	%rd73, %rd91, %rd89;
	shl.b64 	%rd92, %rd8, 2;
	add.s64 	%rd93, %rd11, %rd92;
	add.s64 	%rd74, %rd93, %rd89;
	shl.b64 	%rd94, %rd10, 2;
	add.s64 	%rd95, %rd11, %rd94;
	add.s64 	%rd75, %rd95, %rd89;
	.loc	1 41 47                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:41:47
	// begin inline asm
	mov.u32 %r63, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r63 }, [ %rd68 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r63;
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r64 }, [ %rd69 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r64;
	// begin inline asm
	mov.u32 %r65, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r65 }, [ %rd70 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r65;
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r66 }, [ %rd71 + 0 ];
	// end inline asm
	mov.b32 	%f22, %r66;
	// begin inline asm
	mov.u32 %r67, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r67 }, [ %rd72 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r67;
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r68 }, [ %rd73 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r68;
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r69 }, [ %rd74 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r69;
	// begin inline asm
	mov.u32 %r70, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r70 }, [ %rd75 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r70;
	.loc	1 42 19                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:42:19
	sub.f32 	%f27, %f19, %f18;
	sub.f32 	%f28, %f20, %f16;
	sub.f32 	%f29, %f21, %f14;
	sub.f32 	%f30, %f22, %f12;
	sub.f32 	%f31, %f23, %f9;
	sub.f32 	%f32, %f24, %f7;
	sub.f32 	%f33, %f25, %f5;
	sub.f32 	%f34, %f26, %f3;
	.loc	1 43 19                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:43:19
	add.f32 	%f35, %f18, %f27;
	add.f32 	%f36, %f16, %f28;
	add.f32 	%f37, %f14, %f29;
	add.f32 	%f38, %f12, %f30;
	add.f32 	%f39, %f9, %f31;
	add.f32 	%f40, %f7, %f32;
	add.f32 	%f41, %f5, %f33;
	add.f32 	%f42, %f3, %f34;
	.loc	1 44 25                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:44:25
	shl.b64 	%rd96, %rd1, 2;
	add.s64 	%rd76, %rd12, %rd96;
	shl.b64 	%rd97, %rd2, 2;
	add.s64 	%rd77, %rd12, %rd97;
	.loc	1 44 46                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:44:46
	mov.b32 	%r71, %f35;
	mov.b32 	%r72, %f36;
	mov.b32 	%r73, %f37;
	mov.b32 	%r74, %f38;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd76 + 0 ], { %r71, %r72, %r73, %r74 };
	// end inline asm
	mov.b32 	%r75, %f39;
	mov.b32 	%r76, %f40;
	mov.b32 	%r77, %f41;
	mov.b32 	%r78, %f42;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd77 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	.loc	1 44 4                          // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:44:4
	ret;
$L__BB0_1:
	.loc	1 40 71                         // chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py:40:71
	mov.u64 	%rd98, assertMessage_0;
	cvta.global.u64 	%rd99, %rd98;
	mov.u64 	%rd100, assertFile_0;
	cvta.global.u64 	%rd101, %rd100;
	mov.u64 	%rd102, assertFunc_0;
	cvta.global.u64 	%rd103, %rd102;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd99;
	.param .b64 param1;
	st.param.b64 	[param1], %rd101;
	.param .b32 param2;
	st.param.b32 	[param2], 40;
	.param .b64 param3;
	st.param.b64 	[param3], %rd103;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hz/chz3s4khgzv3hqflkhsfd2oygqzhyqha2g33q72kgrfs7xwzdw4l.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 122
.b8 51
.b8 115
.b8 52
.b8 107
.b8 104
.b8 103
.b8 122
.b8 118
.b8 51
.b8 104
.b8 113
.b8 102
.b8 108
.b8 107
.b8 104
.b8 115
.b8 102
.b8 100
.b8 50
.b8 111
.b8 121
.b8 103
.b8 113
.b8 122
.b8 104
.b8 121
.b8 113
.b8 104
.b8 97
.b8 50
.b8 103
.b8 51
.b8 51
.b8 113
.b8 55
.b8 50
.b8 107
.b8 103
.b8 114
.b8 102
.b8 115
.b8 55
.b8 120
.b8 119
.b8 122
.b8 100
.b8 119
.b8 52
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
