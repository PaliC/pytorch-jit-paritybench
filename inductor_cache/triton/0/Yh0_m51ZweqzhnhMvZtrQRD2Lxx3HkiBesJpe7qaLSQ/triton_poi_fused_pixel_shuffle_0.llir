; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_pixel_shuffle_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 1, !dbg !12
  %9 = and i32 %8, 63, !dbg !12
  %10 = and i32 %7, 1, !dbg !12
  %11 = and i32 %7, 63, !dbg !12
  %12 = or disjoint i32 %6, %9, !dbg !13
  %13 = or disjoint i32 %6, %11, !dbg !13
  %14 = icmp slt i32 %12, 256, !dbg !14
  %15 = icmp slt i32 %13, 256, !dbg !14
  %16 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !15
  %17 = shl i32 %16, 1, !dbg !16
  %18 = lshr i32 %7, 6, !dbg !17
  %.lobit = and i32 %18, 1, !dbg !17
  %19 = or disjoint i32 %17, %10, !dbg !18
  %20 = or disjoint i32 %17, %.lobit, !dbg !18
  %21 = icmp slt i32 %19, 2, !dbg !19
  %22 = icmp slt i32 %20, 2, !dbg !19
  %23 = srem i32 %13, 4, !dbg !20
  %24 = sdiv i32 %13, 32, !dbg !21
  %25 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !22
  %26 = shufflevector <2 x i32> %25, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !22
  %27 = sdiv <2 x i32> %26, <i32 8, i32 4>, !dbg !22
  %28 = srem <2 x i32> %27, <i32 4, i32 2>, !dbg !23
  %29 = insertelement <4 x i32> poison, i32 %20, i64 0, !dbg !24
  %30 = insertelement <4 x i32> %29, i32 %24, i64 1, !dbg !24
  %31 = shufflevector <2 x i32> %28, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !24
  %32 = shufflevector <4 x i32> %30, <4 x i32> %31, <4 x i32> <i32 0, i32 1, i32 4, i32 5>, !dbg !24
  %33 = shl <4 x i32> %32, <i32 4, i32 6, i32 2, i32 5>, !dbg !24
  %34 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %33), !dbg !25
  %op.rdx = add i32 %34, %23, !dbg !26
  %35 = sext i32 %op.rdx to i64, !dbg !27
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !27
  %37 = and i1 %14, %21, !dbg !28
  %38 = and i1 %15, %22, !dbg !28
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %38) #3, !dbg !29
  %40 = shl i32 %12, 1, !dbg !30
  %41 = add i32 %19, %40, !dbg !31
  %42 = sext i32 %41 to i64, !dbg !32
  %43 = getelementptr float, ptr addrspace(1) %1, i64 %42, !dbg !32
  %44 = shl i32 %7, 1, !dbg !33
  %45 = and i32 %44, 126, !dbg !33
  %46 = or disjoint i32 %45, %.lobit, !dbg !33
  %47 = and i32 %7, 127, !dbg !33
  %48 = lshr exact i32 %45, 1, !dbg !33
  %49 = add nuw nsw i32 %46, %48, !dbg !33
  %50 = zext nneg i32 %49 to i64, !dbg !33
  %51 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %50, !dbg !33
  %52 = insertelement <1 x i32> poison, i32 %39, i64 0, !dbg !33
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %51, <1 x i32> %52, i1 true) #3, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !33
  %53 = lshr i32 %47, 1, !dbg !33
  %54 = add nuw nsw i32 %53, %47, !dbg !33
  %55 = zext nneg i32 %54 to i64, !dbg !33
  %56 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %55, !dbg !33
  %57 = load i32, ptr addrspace(3) %56, align 4, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %57, ptr addrspace(1) %43, i1 %37) #3, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cathcbgkneh2llhi5p4zpb3dy577b75yhludrpbmq6ahrz5n5zrl.py", directory: "inductor_cache/at")
!4 = !{ptr @triton_poi_fused_pixel_shuffle_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_pixel_shuffle_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_pixel_shuffle_0", linkageName: "triton_poi_fused_pixel_shuffle_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 19, scope: !7)
!22 = !DILocation(line: 31, column: 21, scope: !7)
!23 = !DILocation(line: 31, column: 26, scope: !7)
!24 = !DILocation(line: 34, column: 45, scope: !7)
!25 = !DILocation(line: 34, column: 58, scope: !7)
!26 = !DILocation(line: 34, column: 35, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 74, scope: !7)
!29 = !DILocation(line: 34, column: 66, scope: !7)
!30 = !DILocation(line: 35, column: 32, scope: !7)
!31 = !DILocation(line: 35, column: 30, scope: !7)
!32 = !DILocation(line: 35, column: 25, scope: !7)
!33 = !DILocation(line: 35, column: 43, scope: !7)
!34 = !DILocation(line: 35, column: 4, scope: !7)
