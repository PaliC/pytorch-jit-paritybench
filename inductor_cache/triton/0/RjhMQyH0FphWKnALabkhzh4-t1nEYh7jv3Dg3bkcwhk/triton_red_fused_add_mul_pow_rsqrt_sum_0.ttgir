#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 8], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 8], order = [1, 0]}>
#loc = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":44:25)
#loc43 = loc(callsite(#loc1 at #loc24))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_add_mul_pow_rsqrt_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x1024xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999993E-9> : tensor<1x1xf32, #blocked> loc(#loc1)
    %c384_i32 = arith.constant 384 : i32 loc(#loc1)
    %c96_i32 = arith.constant 96 : i32 loc(#loc1)
    %c864_i32 = arith.constant 864 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x1024xf32, #blocked1> loc(#loc1)
    %cst_3 = arith.constant dense<864> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<864> : tensor<1x1024xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<9> : tensor<1x1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c384_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x1024xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<1024xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x1024xi32, #blocked1> loc(#loc4)
    %6 = arith.remsi %0, %c96_i32 : i32 loc(#loc5)
    %7 = arith.divsi %0, %c96_i32 : i32 loc(#loc6)
    %8 = arith.cmpi slt, %4, %cst_3 : tensor<1x1024xi32, #blocked> loc(#loc7)
    %9 = arith.cmpi slt, %5, %cst_4 : tensor<1x1024xi32, #blocked1> loc(#loc7)
    %10 = arith.divsi %4, %cst_5 : tensor<1x1024xi32, #blocked> loc(#loc8)
    %11 = arith.muli %6, %c864_i32 : i32 loc(#loc9)
    %12 = tt.splat %11 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc10)
    %13 = arith.addi %5, %12 : tensor<1x1024xi32, #blocked1> loc(#loc10)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc11)
    %15 = tt.addptr %14, %13 : tensor<1x1024x!tt.ptr<f32>, #blocked1>, tensor<1x1024xi32, #blocked1> loc(#loc11)
    %16 = tt.splat %1 : i1 -> tensor<1x1024xi1, #blocked> loc(#loc12)
    %17 = tt.splat %1 : i1 -> tensor<1x1024xi1, #blocked1> loc(#loc12)
    %18 = arith.andi %8, %16 : tensor<1x1024xi1, #blocked> loc(#loc12)
    %19 = arith.andi %9, %17 : tensor<1x1024xi1, #blocked1> loc(#loc12)
    %20 = tt.load %15, %19, %cst_2 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc13)
    %21 = triton_gpu.convert_layout %20 : tensor<1x1024xf32, #blocked1> -> tensor<1x1024xf32, #blocked> loc(#loc13)
    %22 = arith.muli %7, %c96_i32 : i32 loc(#loc14)
    %23 = tt.splat %22 : i32 -> tensor<1x1024xi32, #blocked> loc(#loc15)
    %24 = arith.addi %10, %23 : tensor<1x1024xi32, #blocked> loc(#loc15)
    %25 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc16)
    %26 = tt.addptr %25, %24 : tensor<1x1024x!tt.ptr<f32>, #blocked>, tensor<1x1024xi32, #blocked> loc(#loc16)
    %27 = tt.load %26, %18, %cst evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc17)
    %28 = arith.addf %27, %cst_0 : tensor<1x1024xf32, #blocked> loc(#loc18)
    %29 = arith.mulf %21, %28 : tensor<1x1024xf32, #blocked> loc(#loc19)
    %30 = arith.mulf %29, %29 : tensor<1x1024xf32, #blocked> loc(#loc20)
    %31 = arith.addf %30, %cst : tensor<1x1024xf32, #blocked> loc(#loc21)
    %32 = arith.select %18, %31, %cst : tensor<1x1024xi1, #blocked>, tensor<1x1024xf32, #blocked> loc(#loc22)
    %33 = "tt.reduce"(%32) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc24)), %arg7: f32 loc(callsite(#loc1 at #loc24))):
      %53 = arith.addf %arg6, %arg7 : f32 loc(#loc45)
      tt.reduce.return %53 : f32 loc(#loc42)
    }) : (tensor<1x1024xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc42)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc26)
    %35 = arith.addf %34, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc27)
    %36 = tt.extern_elementwise %35 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc28)
    gpu.barrier loc(#loc29)
    %37 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc30)
    %38 = tt.splat %37 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %39 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc31)
    tt.store %38, %36, %39 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %40 = tt.load %15, %19, %cst_2 evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc32)
    %41 = triton_gpu.convert_layout %40 : tensor<1x1024xf32, #blocked1> -> tensor<1x1024xf32, #blocked> loc(#loc32)
    %42 = tt.load %26, %18, %cst evictionPolicy = evict_last : tensor<1x1024x!tt.ptr<f32>, #blocked> loc(#loc33)
    %43 = arith.addf %42, %cst_0 : tensor<1x1024xf32, #blocked> loc(#loc34)
    %44 = arith.mulf %41, %43 : tensor<1x1024xf32, #blocked> loc(#loc35)
    %45 = tt.broadcast %36 : tensor<1x1xf32, #blocked> -> tensor<1x1024xf32, #blocked> loc(#loc36)
    %46 = arith.mulf %44, %45 : tensor<1x1024xf32, #blocked> loc(#loc36)
    %47 = arith.muli %0, %c864_i32 : i32 loc(#loc37)
    %48 = tt.splat %47 : i32 -> tensor<1x1024xi32, #blocked1> loc(#loc38)
    %49 = arith.addi %5, %48 : tensor<1x1024xi32, #blocked1> loc(#loc38)
    %50 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc39)
    %51 = tt.addptr %50, %49 : tensor<1x1024x!tt.ptr<f32>, #blocked1>, tensor<1x1024xi32, #blocked1> loc(#loc39)
    %52 = triton_gpu.convert_layout %46 : tensor<1x1024xf32, #blocked> -> tensor<1x1024xf32, #blocked1> loc(#loc40)
    tt.store %51, %52, %19 : tensor<1x1024x!tt.ptr<f32>, #blocked1> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":22:28)
#loc3 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":24:21)
#loc4 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":25:33)
#loc5 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":26:19)
#loc6 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":27:19)
#loc7 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":32:25)
#loc8 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":34:23)
#loc9 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":35:43)
#loc10 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":35:39)
#loc11 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":35:34)
#loc12 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":35:56)
#loc13 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":35:48)
#loc14 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":36:42)
#loc15 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":36:39)
#loc16 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":36:34)
#loc17 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":36:47)
#loc18 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":38:22)
#loc19 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":39:22)
#loc20 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":40:22)
#loc21 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":42:23)
#loc22 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":43:46)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":44:28)
#loc27 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":46:19)
#loc28 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":47:28)
#loc29 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":48:4)
#loc30 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":49:28)
#loc31 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":49:40)
#loc32 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":55:49)
#loc33 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":56:48)
#loc34 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":58:24)
#loc35 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":59:24)
#loc36 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":60:24)
#loc37 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":61:38)
#loc38 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":61:34)
#loc39 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":61:29)
#loc40 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":61:50)
#loc41 = loc("inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py":50:4)
#loc42 = loc(callsite(#loc23 at #loc24))
#loc44 = loc(callsite(#loc25 at #loc23))
#loc45 = loc(callsite(#loc44 at #loc24))
