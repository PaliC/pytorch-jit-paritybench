//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_mul_pow_rsqrt_sum_0 // -- Begin function triton_red_fused_add_mul_pow_rsqrt_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_mul_pow_rsqrt_sum_0
.visible .entry triton_red_fused_add_mul_pow_rsqrt_sum_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_3,
	.param .u32 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_4,
	.param .u32 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<48>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<124>;
	.reg .f32 	%f<64>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd13, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_0];
	ld.param.u64 	%rd14, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd15, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_2];
	.loc	1 24 21                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:24:21
	setp.lt.s32 	%p10, %r1, 384;
	ld.param.u64 	%rd16, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_3];
	.loc	1 25 33                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:25:33
	mov.u32 	%r69, %tid.x;
	and.b32  	%r70, %r69, 31;
	and.b32  	%r71, %r69, 255;
	or.b32  	%r72, %r71, 256;
	or.b32  	%r73, %r71, 512;
	or.b32  	%r74, %r71, 768;
	shl.b32 	%r75, %r69, 2;
	and.b32  	%r76, %r75, 1020;
	.loc	1 26 19                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:26:19
	mul.hi.s32 	%r77, %r1, 715827883;
	shr.u32 	%r78, %r77, 31;
	shr.u32 	%r79, %r77, 4;
	add.s32 	%r80, %r79, %r78;
	mul.lo.s32 	%r81, %r80, 96;
	sub.s32 	%r82, %r1, %r81;
	.loc	1 32 25                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:32:25
	setp.lt.u32 	%p44, %r74, 864;
	setp.lt.u32 	%p45, %r76, 864;
	.loc	1 34 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:34:23
	cvt.u16.u32 	%rs1, %r69;
	and.b16  	%rs2, %rs1, 255;
	mul.lo.s16 	%rs3, %rs2, 57;
	shr.u16 	%rs4, %rs3, 9;
	cvt.u32.u16 	%r83, %rs4;
	cvt.u16.u32 	%rs5, %r72;
	mul.hi.u16 	%rs6, %rs5, 7282;
	cvt.u32.u16 	%r84, %rs6;
	cvt.u16.u32 	%rs7, %r73;
	mul.hi.u16 	%rs8, %rs7, 7282;
	cvt.u32.u16 	%r85, %rs8;
	cvt.u16.u32 	%rs9, %r74;
	mul.hi.u16 	%rs10, %rs9, 7282;
	cvt.u32.u16 	%r86, %rs10;
	.loc	1 35 39                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:39
	mad.lo.s32 	%r87, %r82, 864, %r76;
	.loc	1 35 34                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:34
	mul.wide.s32 	%rd17, %r87, 4;
	add.s64 	%rd1, %rd14, %rd17;
	.loc	1 35 56                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:56
	and.pred  	%p16, %p44, %p10;
	and.pred  	%p1, %p45, %p10;
	mov.b32 	%r6, 0;
	.loc	1 35 48                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:48
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r13, %r15, %r17 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r13, %r6;
	@!%p1 mov.u32 %r15, %r6;
	@!%p1 mov.u32 %r17, %r6;
	// end inline asm
	shl.b32 	%r88, %r76, 3;
	mov.u32 	%r89, global_smem;
	add.s32 	%r10, %r89, %r88;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 8;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 16;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 24;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r90, %r71, 3;
	add.s32 	%r91, %r89, %r90;
	ld.shared.f32 	%f1, [%r91];
	shl.b32 	%r92, %r72, 3;
	add.s32 	%r93, %r89, %r92;
	ld.shared.f32 	%f2, [%r93];
	shl.b32 	%r94, %r73, 3;
	add.s32 	%r95, %r89, %r94;
	ld.shared.f32 	%f3, [%r95];
	shl.b32 	%r96, %r74, 3;
	add.s32 	%r97, %r89, %r96;
	ld.shared.f32 	%f4, [%r97];
	.loc	1 36 39                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:39
	or.b32  	%r98, %r81, %r83;
	add.s32 	%r99, %r81, %r84;
	add.s32 	%r100, %r81, %r85;
	add.s32 	%r101, %r81, %r86;
	.loc	1 36 34                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:34
	mul.wide.s32 	%rd18, %r98, 4;
	add.s64 	%rd2, %rd15, %rd18;
	mul.wide.s32 	%rd19, %r99, 4;
	add.s64 	%rd3, %rd15, %rd19;
	mul.wide.s32 	%rd20, %r100, 4;
	add.s64 	%rd4, %rd15, %rd20;
	mul.wide.s32 	%rd21, %r101, 4;
	add.s64 	%rd5, %rd15, %rd21;
	.loc	1 36 47                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:47
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r18 }, [ %rd2 + 0 ];
	@!%p10 mov.u32 %r18, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	@!%p10 mov.u32 %r20, %r6;
	// end inline asm
	mov.b32 	%f5, %r20;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r22 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r22, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p16 ld.global.L1::evict_last.b32 { %r24 }, [ %rd5 + 0 ];
	@!%p16 mov.u32 %r24, %r6;
	// end inline asm
	mov.b32 	%f6, %r24;
	.loc	1 38 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:38:22
	add.f32 	%f7, %f5, 0f3F800000;
	add.f32 	%f8, %f6, 0f3F800000;
	.loc	1 39 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:39:22
	mul.f32 	%f9, %f2, %f7;
	mul.f32 	%f10, %f4, %f8;
	.loc	1 36 47                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:47
	mov.b32 	%f11, %r22;
	mov.b32 	%f12, %r18;
	.loc	1 38 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:38:22
	add.f32 	%f13, %f12, 0f3F800000;
	add.f32 	%f14, %f11, 0f3F800000;
	.loc	1 39 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:39:22
	mul.f32 	%f15, %f3, %f14;
	mul.f32 	%f16, %f1, %f13;
	.loc	1 40 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:40:22
	mul.f32 	%f17, %f16, %f16;
	mul.f32 	%f18, %f10, %f10;
	.loc	1 43 46                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:43:46
	selp.f32 	%f19, %f18, 0f00000000, %p16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f20, %f9, %f9, %f17;
	fma.rn.f32 	%f21, %f15, %f15, %f20;
	selp.f32 	%f22, %f21, 0f00000000, %p10;
	add.f32 	%f23, %f22, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r102, %f23;
	shfl.sync.bfly.b32	%r103, %r102, 16, 31, -1;
	mov.b32 	%f24, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f25;
	shfl.sync.bfly.b32	%r105, %r104, 8, 31, -1;
	mov.b32 	%f26, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f27;
	shfl.sync.bfly.b32	%r107, %r106, 4, 31, -1;
	mov.b32 	%f28, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f29;
	shfl.sync.bfly.b32	%r109, %r108, 2, 31, -1;
	mov.b32 	%f30, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f31;
	shfl.sync.bfly.b32	%r111, %r110, 1, 31, -1;
	mov.b32 	%f32, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p18, %r70, 0;
	shr.u32 	%r112, %r69, 3;
	and.b32  	%r113, %r112, 28;
	add.s32 	%r26, %r89, %r113;
	mov.b32 	%r27, %f33;
	// begin inline asm
	@%p18 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p19, %r69, 8;
	add.s32 	%r29, %r89, %r75;
	// begin inline asm
	@%p19 ld.shared.b32 %r28, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r28;
	shfl.sync.bfly.b32	%r114, %r28, 4, 31, -1;
	mov.b32 	%f35, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f36;
	shfl.sync.bfly.b32	%r116, %r115, 2, 31, -1;
	mov.b32 	%f37, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f38;
	shfl.sync.bfly.b32	%r118, %r117, 1, 31, -1;
	mov.b32 	%f39, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r119, %r69, 7;
	setp.eq.s32 	%p46, %r119, 0;
	and.pred  	%p20, %p19, %p46;
	mov.b32 	%r31, %f40;
	// begin inline asm
	@%p20 st.shared.b32 [ %r29 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f41, [global_smem];
$L__tmp2:
	.loc	1 46 19                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:46:19
	add.f32 	%f42, %f41, 0f322BCC77;
	.loc	1 47 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:47:28
	rsqrt.approx.ftz.f32 	%f43, %f42;
	.loc	1 48 4                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:48:4
	bar.sync 	0;
	.loc	1 49 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:49:28
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd6, %rd13, %rd22;
	.loc	1 49 40                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:49:40
	setp.eq.s32 	%p47, %r71, 0;
	mov.b32 	%r32, %f43;
	and.pred  	%p21, %p47, %p10;
	// begin inline asm
	@%p21 st.global.b32 [ %rd6 + 0 ], { %r32 };
	// end inline asm
	.loc	1 55 49                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:55:49
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r42, %r44, %r46, %r48 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r42, %r6;
	@!%p1 mov.u32 %r44, %r6;
	@!%p1 mov.u32 %r46, %r6;
	@!%p1 mov.u32 %r48, %r6;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r42;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r44;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r46;
	// end inline asm
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f44, [%r91];
	ld.shared.f32 	%f45, [%r93];
	ld.shared.f32 	%f46, [%r95];
	ld.shared.f32 	%f47, [%r97];
	.loc	1 56 48                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:56:48
	// begin inline asm
	mov.u32 %r49, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r49 }, [ %rd2 + 0 ];
	@!%p10 mov.u32 %r49, %r6;
	// end inline asm
	mov.b32 	%f48, %r49;
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r51 }, [ %rd3 + 0 ];
	@!%p10 mov.u32 %r51, %r6;
	// end inline asm
	mov.b32 	%f49, %r51;
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r53 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r53, %r6;
	// end inline asm
	mov.b32 	%f50, %r53;
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p16 ld.global.L1::evict_last.b32 { %r55 }, [ %rd5 + 0 ];
	@!%p16 mov.u32 %r55, %r6;
	// end inline asm
	mov.b32 	%f51, %r55;
	.loc	1 58 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:58:24
	add.f32 	%f52, %f48, 0f3F800000;
	add.f32 	%f53, %f49, 0f3F800000;
	add.f32 	%f54, %f50, 0f3F800000;
	add.f32 	%f55, %f51, 0f3F800000;
	.loc	1 59 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:59:24
	mul.f32 	%f56, %f44, %f52;
	mul.f32 	%f57, %f45, %f53;
	mul.f32 	%f58, %f46, %f54;
	mul.f32 	%f59, %f47, %f55;
	.loc	1 60 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:60:24
	mul.f32 	%f60, %f43, %f56;
	mul.f32 	%f61, %f43, %f57;
	mul.f32 	%f62, %f43, %f58;
	mul.f32 	%f63, %f43, %f59;
	.loc	1 61 34                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:34
	mad.lo.s32 	%r120, %r1, 864, %r76;
	.loc	1 61 29                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:29
	mul.wide.s32 	%rd23, %r120, 4;
	add.s64 	%rd12, %rd16, %rd23;
	.loc	1 61 50                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:50
	bar.sync 	0;
	shl.b32 	%r121, %r71, 2;
	add.s32 	%r57, %r89, %r121;
	mov.b32 	%r58, %f60;
	// begin inline asm
	@%p6 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r57, 1024;
	mov.b32 	%r60, %f61;
	// begin inline asm
	@%p6 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r57, 2048;
	mov.b32 	%r62, %f62;
	// begin inline asm
	@%p6 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r57, 3072;
	mov.b32 	%r64, %f63;
	// begin inline asm
	@%p6 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r122, %r76, 2;
	add.s32 	%r123, %r89, %r122;
	ld.shared.v4.u32 	{%r65, %r66, %r67, %r68}, [%r123];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r65, %r66, %r67, %r68 };
	// end inline asm
	.loc	1 50 4                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 185                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 107
.b8 121
.b8 51
.b8 107
.b8 118
.b8 117
.b8 112
.b8 110
.b8 117
.b8 116
.b8 108
.b8 105
.b8 98
.b8 116
.b8 51
.b8 102
.b8 110
.b8 53
.b8 113
.b8 107
.b8 117
.b8 114
.b8 105
.b8 115
.b8 107
.b8 122
.b8 51
.b8 53
.b8 107
.b8 103
.b8 98
.b8 105
.b8 117
.b8 107
.b8 99
.b8 102
.b8 107
.b8 122
.b8 100
.b8 119
.b8 103
.b8 53
.b8 110
.b8 55
.b8 122
.b8 106
.b8 113
.b8 118
.b8 102
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
