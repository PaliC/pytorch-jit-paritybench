#loc = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0)
#loc1 = loc(unknown)
#loc55 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":56:44)
#loc107 = loc(callsite(#loc1 at #loc55))
module {
  tt.func public @triton_red_fused__native_batch_norm_legit_functional_add_clone_convolution_54(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":19:0)) attributes {noinline = false} {
    %c13824_i32 = arith.constant 13824 : i32 loc(#loc1)
    %c18432_i32 = arith.constant 18432 : i32 loc(#loc1)
    %c13312_i32 = arith.constant 13312 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x1024xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x1024xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c2048_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<1024xi32> -> tensor<1x1024xi32> loc(#loc5)
    %5 = arith.remsi %0, %c512_i32 : i32 loc(#loc6)
    %6 = arith.divsi %0, %c512_i32 : i32 loc(#loc7)
    %7 = arith.addi %5, %c13312_i32 : i32 loc(#loc8)
    %8 = arith.muli %6, %c18432_i32 : i32 loc(#loc9)
    %9 = arith.addi %7, %8 : i32 loc(#loc10)
    %10 = tt.addptr %arg2, %9 : !tt.ptr<f32>, i32 loc(#loc11)
    %11 = tt.splat %10 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.load %11, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %arg3, %7 : !tt.ptr<f32>, i32 loc(#loc13)
    %14 = tt.splat %13 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.load %14, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %16 = arith.addi %5, %c13824_i32 : i32 loc(#loc15)
    %17 = arith.addi %16, %8 : i32 loc(#loc16)
    %18 = tt.addptr %arg2, %17 : !tt.ptr<f32>, i32 loc(#loc17)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.load %19, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc18)
    %21 = tt.addptr %arg3, %16 : !tt.ptr<f32>, i32 loc(#loc19)
    %22 = tt.splat %21 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc19)
    %23 = tt.load %22, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc20)
    %24 = arith.addf %12, %15 : tensor<1x1xf32> loc(#loc21)
    %25 = arith.addf %20, %23 : tensor<1x1xf32> loc(#loc22)
    %26 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc23)
    %27 = tt.splat %26 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    tt.store %27, %24, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    %28 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc25)
    %29 = tt.splat %28 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc25)
    tt.store %29, %25, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc26)
    %30 = tt.addptr %arg4, %5 : !tt.ptr<f32>, i32 loc(#loc27)
    %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc27)
    %32 = tt.load %31, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    %33 = arith.muli %0, %c4096_i32 : i32 loc(#loc29)
    %34 = tt.splat %33 : i32 -> tensor<1x1024xi32> loc(#loc30)
    %35 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc31)
    %36 = tt.splat %1 : i1 -> tensor<1x1024xi1> loc(#loc32)
    %37 = tt.broadcast %32 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc33)
    %38:3 = scf.for %arg11 = %c0_i32 to %c4096_i32 step %c1024_i32 iter_args(%arg12 = %cst_3, %arg13 = %cst_3, %arg14 = %cst_3) -> (tensor<1x1024xf32>, tensor<1x1024xf32>, tensor<1x1024xf32>)  : i32 {
      %61 = tt.splat %arg11 : i32 -> tensor<1x1024xi32> loc(#loc35)
      %62 = arith.addi %61, %4 : tensor<1x1024xi32> loc(#loc35)
      %63 = arith.cmpi slt, %62, %cst_4 : tensor<1x1024xi32> loc(#loc36)
      %64 = arith.addi %62, %34 : tensor<1x1024xi32> loc(#loc30)
      %65 = tt.addptr %35, %64 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc31)
      %66 = arith.andi %63, %36 : tensor<1x1024xi1> loc(#loc32)
      %67 = tt.load %65, %66, %cst_3 evictionPolicy = evict_first : tensor<1x1024x!tt.ptr<f32>> loc(#loc37)
      %68 = arith.addf %67, %37 : tensor<1x1024xf32> loc(#loc33)
      %69 = arith.cmpi eq, %arg11, %c0_i32 : i32 loc(#loc38)
      %70:3 = scf.if %69 -> (tensor<1x1024xf32>, tensor<1x1024xf32>, tensor<1x1024xf32>) {
        scf.yield %cst_3, %68, %cst_0 : tensor<1x1024xf32>, tensor<1x1024xf32>, tensor<1x1024xf32> loc(#loc98)
      } else {
        %74 = arith.subf %68, %arg12 : tensor<1x1024xf32> loc(#loc99)
        %75 = arith.addf %arg14, %cst_0 : tensor<1x1024xf32> loc(#loc100)
        %76 = arith.divf %74, %75 : tensor<1x1024xf32> loc(#loc101)
        %77 = arith.addf %arg12, %76 : tensor<1x1024xf32> loc(#loc102)
        %78 = arith.subf %68, %77 : tensor<1x1024xf32> loc(#loc103)
        %79 = arith.mulf %74, %78 : tensor<1x1024xf32> loc(#loc104)
        %80 = arith.addf %arg13, %79 : tensor<1x1024xf32> loc(#loc105)
        scf.yield %80, %77, %75 : tensor<1x1024xf32>, tensor<1x1024xf32>, tensor<1x1024xf32> loc(#loc105)
      } loc(#loc97)
      %71 = arith.select %66, %70#1, %arg12 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc49)
      %72 = arith.select %66, %70#0, %arg13 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc50)
      %73 = arith.select %66, %70#2, %arg14 : tensor<1x1024xi1>, tensor<1x1024xf32> loc(#loc51)
      tt.store %65, %68, %66 : tensor<1x1024x!tt.ptr<f32>> loc(#loc52)
      scf.yield %71, %72, %73 : tensor<1x1024xf32>, tensor<1x1024xf32>, tensor<1x1024xf32> loc(#loc53)
    } loc(#loc34)
    %39:3 = "tt.reduce"(%38#0, %38#1, %38#2) <{axis = 1 : i32}> ({
    ^bb0(%arg11: f32 loc(callsite(#loc1 at #loc55)), %arg12: f32 loc(callsite(#loc1 at #loc55)), %arg13: f32 loc(callsite(#loc1 at #loc55)), %arg14: f32 loc(callsite(#loc1 at #loc55)), %arg15: f32 loc(callsite(#loc1 at #loc55)), %arg16: f32 loc(callsite(#loc1 at #loc55))):
      %61 = arith.subf %arg14, %arg11 : f32 loc(#loc120)
      %62 = arith.addf %arg13, %arg16 : f32 loc(#loc121)
      %63 = arith.cmpf oeq, %62, %cst : f32 loc(#loc122)
      %64 = arith.divf %arg16, %62 : f32 loc(#loc123)
      %65 = arith.select %63, %cst, %64 : f32 loc(#loc124)
      %66 = arith.mulf %61, %65 : f32 loc(#loc125)
      %67 = arith.addf %arg11, %66 : f32 loc(#loc126)
      %68 = arith.addf %arg12, %arg15 : f32 loc(#loc127)
      %69 = arith.mulf %61, %61 : f32 loc(#loc128)
      %70 = arith.mulf %69, %arg13 : f32 loc(#loc129)
      %71 = arith.mulf %70, %65 : f32 loc(#loc130)
      %72 = arith.addf %68, %71 : f32 loc(#loc131)
      tt.reduce.return %67, %72, %62 : f32, f32, f32 loc(#loc106)
    }) : (tensor<1x1024xf32>, tensor<1x1024xf32>, tensor<1x1024xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc106)
    %40 = tt.expand_dims %39#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc68)
    %41 = tt.expand_dims %39#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc69)
    %42 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc70)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc70)
    tt.store %43, %40, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc71)
    %44 = arith.muli %0, %c4096_i32 : i32 loc(#loc72)
    %45 = tt.splat %44 : i32 -> tensor<1x1024xi32> loc(#loc73)
    %46 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc74)
    %47 = tt.splat %1 : i1 -> tensor<1x1024xi1> loc(#loc75)
    %48 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x1024x!tt.ptr<f32>> loc(#loc76)
    %49 = tt.broadcast %40 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc77)
    %50 = arith.divf %41, %cst_2 : tensor<1x1xf32> loc(#loc78)
    %51 = arith.addf %50, %cst_1 : tensor<1x1xf32> loc(#loc79)
    %52 = tt.extern_elementwise %51 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc80)
    %53 = tt.broadcast %52 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc81)
    %54 = tt.broadcast %25 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc82)
    %55 = tt.broadcast %24 : tensor<1x1xf32> -> tensor<1x1024xf32> loc(#loc83)
    scf.for %arg11 = %c0_i32 to %c4096_i32 step %c1024_i32  : i32 {
      %61 = tt.splat %arg11 : i32 -> tensor<1x1024xi32> loc(#loc85)
      %62 = arith.addi %61, %4 : tensor<1x1024xi32> loc(#loc85)
      %63 = arith.cmpi slt, %62, %cst_4 : tensor<1x1024xi32> loc(#loc86)
      %64 = arith.addi %62, %45 : tensor<1x1024xi32> loc(#loc73)
      %65 = tt.addptr %46, %64 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc74)
      %66 = arith.andi %63, %47 : tensor<1x1024xi1> loc(#loc75)
      %67 = tt.load %65, %66, %cst_3 evictionPolicy = evict_first : tensor<1x1024x!tt.ptr<f32>> loc(#loc87)
      %68 = tt.addptr %48, %64 : tensor<1x1024x!tt.ptr<f32>>, tensor<1x1024xi32> loc(#loc76)
      %69 = tt.load %68, %66, %cst_3 evictionPolicy = evict_first : tensor<1x1024x!tt.ptr<f32>> loc(#loc88)
      %70 = arith.subf %69, %49 : tensor<1x1024xf32> loc(#loc77)
      %71 = arith.mulf %70, %53 : tensor<1x1024xf32> loc(#loc81)
      %72 = arith.mulf %71, %54 : tensor<1x1024xf32> loc(#loc82)
      %73 = arith.addf %72, %55 : tensor<1x1024xf32> loc(#loc83)
      %74 = arith.addf %67, %73 : tensor<1x1024xf32> loc(#loc89)
      tt.store %65, %74, %66 : tensor<1x1024x!tt.ptr<f32>> loc(#loc90)
    } loc(#loc84)
    %56 = arith.divf %41, %cst_2 : tensor<1x1xf32> loc(#loc91)
    %57 = arith.addf %56, %cst_1 : tensor<1x1xf32> loc(#loc92)
    %58 = tt.extern_elementwise %57 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc93)
    %59 = tt.addptr %arg8, %0 : !tt.ptr<f32>, i32 loc(#loc94)
    %60 = tt.splat %59 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc94)
    tt.store %60, %58, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc95)
    tt.return loc(#loc96)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":22:28)
#loc3 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":24:21)
#loc4 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":25:25)
#loc5 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":25:33)
#loc6 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":26:19)
#loc7 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":27:19)
#loc8 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":29:38)
#loc9 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":29:49)
#loc10 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":29:43)
#loc11 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":29:30)
#loc12 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":29:54)
#loc13 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":30:30)
#loc14 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":30:43)
#loc15 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":31:38)
#loc16 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":31:43)
#loc17 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":31:30)
#loc18 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":31:54)
#loc19 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":32:30)
#loc20 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":32:43)
#loc21 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":33:18)
#loc22 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":34:18)
#loc23 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":35:25)
#loc24 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":35:36)
#loc25 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":36:25)
#loc26 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":36:36)
#loc27 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":37:30)
#loc28 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":37:35)
#loc29 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":45:48)
#loc30 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":45:43)
#loc31 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":45:38)
#loc32 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":45:61)
#loc33 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":46:22)
#loc34 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":41:36)
#loc35 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":42:27)
#loc36 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":43:25)
#loc37 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":45:53)
#loc38 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":49:65)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc40 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":49:54)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc49 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":51:62)
#loc50 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":52:58)
#loc51 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":53:66)
#loc52 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":54:53)
#loc53 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":54:8)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc56 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc68 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":58:22)
#loc69 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":59:22)
#loc70 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":61:25)
#loc71 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":61:37)
#loc72 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":66:49)
#loc73 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":66:44)
#loc74 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":66:39)
#loc75 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":66:62)
#loc76 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":67:39)
#loc77 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":68:24)
#loc78 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":70:24)
#loc79 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":72:24)
#loc80 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":73:32)
#loc81 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":74:24)
#loc82 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":75:24)
#loc83 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":76:24)
#loc84 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":62:36)
#loc85 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":63:27)
#loc86 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":64:25)
#loc87 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":66:54)
#loc88 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":67:54)
#loc89 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":77:24)
#loc90 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":78:54)
#loc91 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":80:20)
#loc92 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":82:20)
#loc93 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":83:28)
#loc94 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":84:25)
#loc95 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":84:37)
#loc96 = loc("inductor_cache/ul/cullu56k2iza3i6iplqxd3244yn7gdp4ajmnrpaujpyitvlpjz67.py":84:4)
#loc97 = loc(callsite(#loc39 at #loc40))
#loc98 = loc(callsite(#loc41 at #loc40))
#loc99 = loc(callsite(#loc42 at #loc40))
#loc100 = loc(callsite(#loc43 at #loc40))
#loc101 = loc(callsite(#loc44 at #loc40))
#loc102 = loc(callsite(#loc45 at #loc40))
#loc103 = loc(callsite(#loc46 at #loc40))
#loc104 = loc(callsite(#loc47 at #loc40))
#loc105 = loc(callsite(#loc48 at #loc40))
#loc106 = loc(callsite(#loc54 at #loc55))
#loc108 = loc(callsite(#loc56 at #loc54))
#loc109 = loc(callsite(#loc57 at #loc54))
#loc110 = loc(callsite(#loc58 at #loc54))
#loc111 = loc(callsite(#loc59 at #loc54))
#loc112 = loc(callsite(#loc60 at #loc54))
#loc113 = loc(callsite(#loc61 at #loc54))
#loc114 = loc(callsite(#loc62 at #loc54))
#loc115 = loc(callsite(#loc63 at #loc54))
#loc116 = loc(callsite(#loc64 at #loc54))
#loc117 = loc(callsite(#loc65 at #loc54))
#loc118 = loc(callsite(#loc66 at #loc54))
#loc119 = loc(callsite(#loc67 at #loc54))
#loc120 = loc(callsite(#loc108 at #loc55))
#loc121 = loc(callsite(#loc109 at #loc55))
#loc122 = loc(callsite(#loc110 at #loc55))
#loc123 = loc(callsite(#loc111 at #loc55))
#loc124 = loc(callsite(#loc112 at #loc55))
#loc125 = loc(callsite(#loc113 at #loc55))
#loc126 = loc(callsite(#loc114 at #loc55))
#loc127 = loc(callsite(#loc115 at #loc55))
#loc128 = loc(callsite(#loc116 at #loc55))
#loc129 = loc(callsite(#loc117 at #loc55))
#loc130 = loc(callsite(#loc118 at #loc55))
#loc131 = loc(callsite(#loc119 at #loc55))
