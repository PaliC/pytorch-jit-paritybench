//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_mul_pow_rsqrt_sum_0 // -- Begin function triton_red_fused_add_mul_pow_rsqrt_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_mul_pow_rsqrt_sum_0
.visible .entry triton_red_fused_add_mul_pow_rsqrt_sum_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_3,
	.param .u32 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_4,
	.param .u32 triton_red_fused_add_mul_pow_rsqrt_sum_0_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<95>;
	.reg .f32 	%f<23>;
	.reg .b64 	%rd<41>;
	.loc	1 19 0                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:19:0

// %bb.0:
	ld.param.u64 	%rd16, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_3];
	ld.param.u64 	%rd15, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_2];
	ld.param.u64 	%rd14, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_1];
	ld.param.u64 	%rd13, [triton_red_fused_add_mul_pow_rsqrt_sum_0_param_0];
$L__tmp0:
	.loc	1 22 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:22:28
	// begin inline asm
	mov.u32 %r17, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:22:33
	shl.b32 	%r1, %r17, 6;
	.loc	1 23 44                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:23:44
	mov.u32 	%r2, %tid.x;
	and.b32  	%r3, %r2, 3;
	and.b32  	%r4, %r2, 63;
	shr.u32 	%r18, %r2, 2;
	bfe.u32 	%r5, %r2, 2, 5;
	and.b32  	%r6, %r18, 32;
	or.b32  	%r19, %r5, %r6;
	.loc	1 23 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:23:23
	or.b32  	%r7, %r1, %r4;
	or.b32  	%r8, %r19, %r1;
	.loc	1 25 33                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:25:33
	shr.u32 	%r20, %r2, 6;
	bfe.u32 	%r9, %r2, 6, 2;
	.loc	1 26 19                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:26:19
	mul.hi.s32 	%r21, %r8, 715827883;
	shr.u32 	%r22, %r21, 31;
	shr.u32 	%r23, %r21, 4;
	add.s32 	%r24, %r23, %r22;
	mul.lo.s32 	%r25, %r24, 96;
	sub.s32 	%r26, %r8, %r25;
	.loc	1 35 43                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:43
	mul.lo.s32 	%r10, %r26, 864;
	.loc	1 36 42                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:42
	mul.hi.s32 	%r27, %r7, 715827883;
	shr.u32 	%r28, %r27, 31;
	shr.u32 	%r29, %r27, 4;
	add.s32 	%r30, %r29, %r28;
	mul.lo.s32 	%r11, %r30, 96;
	shl.b32 	%r31, %r2, 6;
	and.b32  	%r32, %r31, 192;
	or.b32  	%r33, %r19, %r32;
	and.b32  	%r12, %r2, 255;
	shr.u32 	%r34, %r32, 4;
	mov.u32 	%r35, global_smem;
	add.s32 	%r36, %r35, %r34;
	shl.b32 	%r37, %r33, 2;
	add.s32 	%r83, %r36, %r37;
	shr.u32 	%r38, %r2, 4;
	and.b32  	%r39, %r38, 12;
	add.s32 	%r40, %r35, %r39;
	shl.b32 	%r41, %r12, 2;
	add.s32 	%r14, %r40, %r41;
	.loc	1 30 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:30:36
	or.b32  	%r42, %r10, %r3;
	mul.wide.s32 	%rd18, %r42, 4;
	add.s64 	%rd37, %rd14, %rd18;
	cvt.u64.u32 	%rd19, %r20;
	and.b64  	%rd2, %rd19, 3;
	mov.f32 	%f22, 0f00000000;
	mov.u64 	%rd38, -4;
	setp.lt.s32 	%p1, %r8, 384;
	setp.lt.s32 	%p17, %r7, 384;
	mov.pred 	%p16, -1;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 34 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:34:23
	add.s64 	%rd22, %rd2, %rd38;
	cvt.u32.u64 	%r49, %rd22;
	add.s32 	%r50, %r49, 4;
	mul.hi.u32 	%r51, %r50, 954437177;
	shr.u32 	%r52, %r51, 1;
	mov.b32 	%r82, 0;
	.loc	1 35 48                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:35:48
	// begin inline asm
	mov.u32 %r43, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r43 }, [ %rd37 + 0 ];
	@!%p1 mov.u32 %r43, %r82;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p16 st.shared.b32 [ %r83 + 0 ], %r43;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r14];
	.loc	1 36 39                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:39
	add.s32 	%r53, %r52, %r11;
	.loc	1 36 34                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:34
	mul.wide.s32 	%rd23, %r53, 4;
	add.s64 	%rd21, %rd15, %rd23;
	.loc	1 36 47                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:36:47
	// begin inline asm
	mov.u32 %r47, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r47 }, [ %rd21 + 0 ];
	@!%p17 mov.u32 %r47, %r82;
	// end inline asm
	mov.b32 	%f6, %r47;
	.loc	1 38 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:38:22
	add.f32 	%f7, %f6, 0f3F800000;
	.loc	1 39 22                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:39:22
	mul.f32 	%f8, %f5, %f7;
	.loc	1 42 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:42:23
	fma.rn.f32 	%f9, %f8, %f8, %f22;
	.loc	1 43 46                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:43:46
	selp.f32 	%f22, %f9, %f22, %p17;
	.loc	1 30 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:30:36
	add.s64 	%rd38, %rd38, 4;
	add.s64 	%rd37, %rd37, 16;
	setp.lt.u64 	%p6, %rd38, 860;
	@%p6 bra 	$L__BB0_1;
// %bb.2:                               // %__nv_rsqrtf.exit
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	shl.b32 	%r61, %r9, 2;
	shl.b32 	%r62, %r4, 4;
	or.b32  	%r63, %r62, %r61;
	add.s32 	%r54, %r35, %r63;
	mov.b32 	%r55, %f22;
	// begin inline asm
	@%p16 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r2, 256;
	shl.b32 	%r65, %r2, 2;
	add.s32 	%r57, %r35, %r65;
	// begin inline asm
	@%p8 ld.shared.b32 %r56, [ %r57 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r56;
	shfl.sync.bfly.b32	%r66, %r56, 2, 31, -1;
	mov.b32 	%f11, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f12;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f13, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p12, %r3, 0;
	and.pred  	%p9, %p8, %p12;
	mov.b32 	%r59, %f14;
	// begin inline asm
	@%p9 st.shared.b32 [ %r57 + 0 ], %r59;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r69, %r35, %r62;
	ld.shared.f32 	%f15, [%r69];
$L__tmp2:
	.loc	1 46 19                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:46:19
	add.f32 	%f16, %f15, 0f322BCC77;
	.loc	1 47 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:47:28
	rsqrt.approx.ftz.f32 	%f3, %f16;
	.loc	1 48 4                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:48:4
	bar.sync 	0;
	.loc	1 49 28                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:49:28
	mul.wide.s32 	%rd26, %r7, 4;
	add.s64 	%rd24, %rd13, %rd26;
	.loc	1 49 40                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:49:40
	setp.eq.s32 	%p13, %r9, 0;
	mov.b32 	%r60, %f3;
	and.pred  	%p10, %p13, %p17;
	// begin inline asm
	@%p10 st.global.b32 [ %rd24 + 0 ], { %r60 };
	// end inline asm
	and.b32  	%r70, %r65, 252;
	or.b32  	%r71, %r70, %r9;
	add.s32 	%r72, %r35, %r70;
	shl.b32 	%r73, %r71, 2;
	add.s32 	%r87, %r72, %r73;
	and.b32  	%r74, %r12, 252;
	add.s32 	%r75, %r35, %r74;
	add.s32 	%r16, %r75, %r41;
	.loc	1 50 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:50:36
	add.s32 	%r77, %r1, %r6;
	add.s32 	%r78, %r77, %r5;
	mul.lo.s32 	%r79, %r78, 864;
	or.b32  	%r80, %r79, %r3;
	cvt.u64.u32 	%rd7, %r80;
	mul.wide.s32 	%rd27, %r10, 4;
	mul.wide.u32 	%rd28, %r3, 4;
	add.s64 	%rd29, %rd27, %rd28;
	add.s64 	%rd39, %rd14, %rd29;
	mov.u64 	%rd40, 0;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 54 23                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:54:23
	add.s64 	%rd33, %rd2, %rd40;
	cvt.u32.u64 	%r90, %rd33;
	mul.hi.u32 	%r91, %r90, 954437177;
	shr.u32 	%r92, %r91, 1;
	.loc	1 55 49                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:55:49
	// begin inline asm
	mov.u32 %r81, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r81 }, [ %rd39 + 0 ];
	@!%p1 mov.u32 %r81, %r82;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p16 st.shared.b32 [ %r83 + 0 ], %r81;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f17, [%r14];
	.loc	1 56 40                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:56:40
	add.s32 	%r93, %r92, %r11;
	.loc	1 56 35                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:56:35
	mul.wide.s32 	%rd34, %r93, 4;
	add.s64 	%rd31, %rd15, %rd34;
	.loc	1 56 48                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:56:48
	// begin inline asm
	mov.u32 %r85, 0x0;
	@%p17 ld.global.L1::evict_last.b32 { %r85 }, [ %rd31 + 0 ];
	@!%p17 mov.u32 %r85, %r82;
	// end inline asm
	mov.b32 	%f18, %r85;
	.loc	1 58 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:58:24
	add.f32 	%f19, %f18, 0f3F800000;
	.loc	1 59 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:59:24
	mul.f32 	%f20, %f17, %f19;
	.loc	1 60 24                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:60:24
	mul.f32 	%f21, %f3, %f20;
	.loc	1 61 29                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:29
	add.s64 	%rd35, %rd7, %rd40;
	cvt.u32.u64 	%r94, %rd35;
	mul.wide.s32 	%rd36, %r94, 4;
	add.s64 	%rd32, %rd16, %rd36;
	.loc	1 61 50                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:61:50
	bar.sync 	0;
	mov.b32 	%r88, %f21;
	// begin inline asm
	@%p16 st.shared.b32 [ %r87 + 0 ], %r88;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r89, [%r16];
	// begin inline asm
	@%p1 st.global.b32 [ %rd32 + 0 ], { %r89 };
	// end inline asm
	.loc	1 50 36                         // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:50:36
	add.s64 	%rd11, %rd40, 4;
	add.s64 	%rd39, %rd39, 16;
	setp.lt.u64 	%p21, %rd40, 860;
	mov.u64 	%rd40, %rd11;
	@%p21 bra 	$L__BB0_3;
// %bb.4:
	.loc	1 50 4                          // chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py:50:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hk/chky3kvupnutlibt3fn5qkuriskz35kgbiukcfkzdwg5n7zjqvf4.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 185                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 107
.b8 121
.b8 51
.b8 107
.b8 118
.b8 117
.b8 112
.b8 110
.b8 117
.b8 116
.b8 108
.b8 105
.b8 98
.b8 116
.b8 51
.b8 102
.b8 110
.b8 53
.b8 113
.b8 107
.b8 117
.b8 114
.b8 105
.b8 115
.b8 107
.b8 122
.b8 51
.b8 53
.b8 107
.b8 103
.b8 98
.b8 105
.b8 117
.b8 107
.b8 99
.b8 102
.b8 107
.b8 122
.b8 100
.b8 119
.b8 103
.b8 53
.b8 110
.b8 55
.b8 122
.b8 106
.b8 113
.b8 118
.b8 102
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
