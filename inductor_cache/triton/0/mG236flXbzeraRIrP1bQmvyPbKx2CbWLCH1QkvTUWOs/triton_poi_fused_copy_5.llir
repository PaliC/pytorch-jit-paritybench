; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_copy_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %11, 1280, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %14 = sdiv i32 %.frozen, 20, !dbg !15
  %15 = srem i32 %14, 4, !dbg !16
  %16 = sdiv i32 %11, 80, !dbg !17
  %17 = mul i32 %14, 20, !dbg !18
  %.decomposed = sub i32 %.frozen, %17, !dbg !18
  %.frozen7 = freeze i32 %11, !dbg !19
  %18 = sdiv i32 %.frozen7, 5, !dbg !19
  %19 = mul i32 %18, 5, !dbg !20
  %.decomposed8 = sub i32 %.frozen7, %19, !dbg !20
  %20 = sdiv i32 %12, 5, !dbg !19
  %21 = srem i32 %18, 4, !dbg !21
  %22 = insertelement <2 x i32> poison, i32 %20, i64 0, !dbg !21
  %23 = insertelement <2 x i32> %22, i32 %12, i64 1, !dbg !21
  %24 = srem <2 x i32> %23, <i32 4, i32 5>, !dbg !21
  %25 = mul nsw i32 %16, 20, !dbg !22
  %26 = add nsw i32 %25, %.decomposed, !dbg !23
  %27 = sext i32 %26 to i64, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !24
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %13) #1, !dbg !25
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !25
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !25
  %32 = add nsw i32 %.decomposed, 40, !dbg !26
  %33 = mul nsw i32 %16, 80, !dbg !27
  %34 = add i32 %32, %33, !dbg !28
  %35 = sext i32 %34 to i64, !dbg !29
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %35, !dbg !29
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 %13) #1, !dbg !30
  %38 = sext i32 %11 to i64, !dbg !31
  %39 = getelementptr float, ptr addrspace(1) %2, i64 %38, !dbg !31
  %40 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %39, i1 %13) #1, !dbg !32
  %41 = extractvalue { i32, i32 } %40, 0, !dbg !32
  %42 = extractvalue { i32, i32 } %40, 1, !dbg !32
  %43 = icmp eq i32 %15, 3, !dbg !33
  %44 = icmp eq i32 %15, 2, !dbg !34
  %45 = icmp sgt i32 %.decomposed8, 2, !dbg !35
  %46 = extractelement <2 x i32> %24, i64 1, !dbg !36
  %47 = icmp sgt i32 %46, 2, !dbg !35
  %48 = shl nsw i32 %21, 2, !dbg !37
  %49 = extractelement <2 x i32> %24, i64 0, !dbg !37
  %50 = shl nsw i32 %49, 2, !dbg !37
  %51 = shl nsw i32 %16, 4, !dbg !38
  %52 = add nsw i32 %51, -1, !dbg !36
  %53 = add nsw i32 %52, %.decomposed8, !dbg !39
  %54 = add nsw i32 %53, %48, !dbg !40
  %55 = add nsw i32 %50, %46, !dbg !36
  %56 = add nsw i32 %55, -1, !dbg !39
  %57 = add nsw i32 %56, %51, !dbg !40
  %58 = sext i32 %54 to i64, !dbg !41
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %58, !dbg !41
  %60 = sext i32 %57 to i64, !dbg !41
  %61 = getelementptr float, ptr addrspace(1) %1, i64 %60, !dbg !41
  %62 = and i1 %13, %45, !dbg !42
  %63 = and i1 %47, %13, !dbg !42
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %62, i32 0, i1 %62) #1, !dbg !43
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %63, i32 0, i1 %63) #1, !dbg !43
  %66 = icmp slt i32 %.decomposed8, 3, !dbg !44
  %67 = icmp slt i32 %46, 3, !dbg !44
  %68 = add nsw i32 %51, %.decomposed8, !dbg !45
  %69 = add nsw i32 %68, %48, !dbg !46
  %70 = add nsw i32 %55, %51, !dbg !46
  %71 = sext i32 %69 to i64, !dbg !47
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !47
  %73 = sext i32 %70 to i64, !dbg !47
  %74 = getelementptr float, ptr addrspace(1) %1, i64 %73, !dbg !47
  %75 = and i1 %13, %66, !dbg !48
  %76 = and i1 %67, %13, !dbg !48
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %75, i32 0, i1 %75) #1, !dbg !49
  %78 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %76, i32 0, i1 %76) #1, !dbg !49
  %.v2 = select i1 %45, i32 %64, i32 %77, !dbg !50
  %.v = select i1 %47, i32 %65, i32 %78, !dbg !50
  %.v3 = select i1 %44, i32 %.v2, i32 %41, !dbg !51
  %.v4 = select i1 %44, i32 %.v, i32 %42, !dbg !51
  %.v5 = select i1 %43, i32 %30, i32 %.v3, !dbg !52
  %.v6 = select i1 %43, i32 %31, i32 %.v4, !dbg !52
  %79 = getelementptr float, ptr addrspace(1) %3, i64 %38, !dbg !53
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v5, i32 %.v6, ptr addrspace(1) %79, i1 %13) #1, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctral4i2vsln53fsz7txux6t7ctu5fb7aqqq6rcpj3jcunou43pm.py", directory: "inductor_cache/tr")
!4 = !{ptr @triton_poi_fused_copy_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_copy_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_copy_5", linkageName: "triton_poi_fused_copy_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 21, scope: !7)
!20 = !DILocation(line: 27, column: 19, scope: !7)
!21 = !DILocation(line: 28, column: 26, scope: !7)
!22 = !DILocation(line: 30, column: 38, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 43, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 31, column: 44, scope: !7)
!28 = !DILocation(line: 31, column: 41, scope: !7)
!29 = !DILocation(line: 31, column: 31, scope: !7)
!30 = !DILocation(line: 31, column: 49, scope: !7)
!31 = !DILocation(line: 32, column: 31, scope: !7)
!32 = !DILocation(line: 32, column: 36, scope: !7)
!33 = !DILocation(line: 35, column: 19, scope: !7)
!34 = !DILocation(line: 37, column: 19, scope: !7)
!35 = !DILocation(line: 40, column: 19, scope: !7)
!36 = !DILocation(line: 41, column: 37, scope: !7)
!37 = !DILocation(line: 41, column: 44, scope: !7)
!38 = !DILocation(line: 41, column: 52, scope: !7)
!39 = !DILocation(line: 41, column: 42, scope: !7)
!40 = !DILocation(line: 41, column: 49, scope: !7)
!41 = !DILocation(line: 41, column: 30, scope: !7)
!42 = !DILocation(line: 41, column: 64, scope: !7)
!43 = !DILocation(line: 41, column: 57, scope: !7)
!44 = !DILocation(line: 43, column: 19, scope: !7)
!45 = !DILocation(line: 44, column: 36, scope: !7)
!46 = !DILocation(line: 44, column: 43, scope: !7)
!47 = !DILocation(line: 44, column: 31, scope: !7)
!48 = !DILocation(line: 44, column: 59, scope: !7)
!49 = !DILocation(line: 44, column: 51, scope: !7)
!50 = !DILocation(line: 47, column: 33, scope: !7)
!51 = !DILocation(line: 0, scope: !7)
!52 = !DILocation(line: 50, column: 33, scope: !7)
!53 = !DILocation(line: 51, column: 25, scope: !7)
!54 = !DILocation(line: 51, column: 37, scope: !7)
!55 = !DILocation(line: 51, column: 4, scope: !7)
