#loc = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0)
#loc1 = loc(unknown)
#loc36 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":54:41)
#loc51 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":60:41)
#loc123 = loc(callsite(#loc1 at #loc36))
#loc137 = loc(callsite(#loc1 at #loc51))
module {
  tt.func public @triton_red_fused__native_batch_norm_legit_add_convolution_reflection_pad2d_relu_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<4.096000e+03> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32> loc(#loc1)
    %cst_4 = arith.constant dense<4096> : tensor<1x2048xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32> -> tensor<1x2048xi32> loc(#loc5)
    %5 = arith.muli %0, %c4096_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x2048xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc9)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc10)
    %10:6 = scf.for %arg12 = %c0_i32 to %c4096_i32 step %c2048_i32 iter_args(%arg13 = %cst_3, %arg14 = %cst_3, %arg15 = %cst_3, %arg16 = %cst_3, %arg17 = %cst_3, %arg18 = %cst_3) -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>)  : i32 {
      %54 = tt.splat %arg12 : i32 -> tensor<1x2048xi32> loc(#loc12)
      %55 = arith.addi %54, %4 : tensor<1x2048xi32> loc(#loc12)
      %56 = arith.cmpi slt, %55, %cst_4 : tensor<1x2048xi32> loc(#loc13)
      %57 = arith.addi %55, %6 : tensor<1x2048xi32> loc(#loc7)
      %58 = tt.addptr %7, %57 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc8)
      %59 = arith.andi %56, %8 : tensor<1x2048xi1> loc(#loc9)
      %60 = tt.load %58, %59, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc14)
      %61 = tt.addptr %9, %57 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc10)
      %62 = tt.load %61, %59, %cst_3 evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>> loc(#loc15)
      %63 = arith.cmpi eq, %arg12, %c0_i32 : i32 loc(#loc16)
      %64:3 = scf.if %63 -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) {
        scf.yield %cst_3, %60, %cst_0 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc105)
      } else {
        %72 = arith.subf %60, %arg13 : tensor<1x2048xf32> loc(#loc106)
        %73 = arith.addf %arg15, %cst_0 : tensor<1x2048xf32> loc(#loc107)
        %74 = arith.divf %72, %73 : tensor<1x2048xf32> loc(#loc108)
        %75 = arith.addf %arg13, %74 : tensor<1x2048xf32> loc(#loc109)
        %76 = arith.subf %60, %75 : tensor<1x2048xf32> loc(#loc110)
        %77 = arith.mulf %72, %76 : tensor<1x2048xf32> loc(#loc111)
        %78 = arith.addf %arg14, %77 : tensor<1x2048xf32> loc(#loc112)
        scf.yield %78, %75, %73 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc112)
      } loc(#loc104)
      %65 = arith.select %59, %64#1, %arg13 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc27)
      %66 = arith.select %59, %64#0, %arg14 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc28)
      %67 = arith.select %59, %64#2, %arg15 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc29)
      %68:3 = scf.if %63 -> (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) {
        scf.yield %cst_3, %62, %cst_0 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc114)
      } else {
        %72 = arith.subf %62, %arg16 : tensor<1x2048xf32> loc(#loc115)
        %73 = arith.addf %arg18, %cst_0 : tensor<1x2048xf32> loc(#loc116)
        %74 = arith.divf %72, %73 : tensor<1x2048xf32> loc(#loc117)
        %75 = arith.addf %arg16, %74 : tensor<1x2048xf32> loc(#loc118)
        %76 = arith.subf %62, %75 : tensor<1x2048xf32> loc(#loc119)
        %77 = arith.mulf %72, %76 : tensor<1x2048xf32> loc(#loc120)
        %78 = arith.addf %arg17, %77 : tensor<1x2048xf32> loc(#loc121)
        scf.yield %78, %75, %73 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc121)
      } loc(#loc113)
      %69 = arith.select %59, %68#1, %arg16 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc31)
      %70 = arith.select %59, %68#0, %arg17 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc32)
      %71 = arith.select %59, %68#2, %arg18 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc33)
      scf.yield %65, %66, %67, %69, %70, %71 : tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32> loc(#loc34)
    } loc(#loc11)
    %11:3 = "tt.reduce"(%10#0, %10#1, %10#2) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc36)), %arg13: f32 loc(callsite(#loc1 at #loc36)), %arg14: f32 loc(callsite(#loc1 at #loc36)), %arg15: f32 loc(callsite(#loc1 at #loc36)), %arg16: f32 loc(callsite(#loc1 at #loc36)), %arg17: f32 loc(callsite(#loc1 at #loc36))):
      %54 = arith.subf %arg15, %arg12 : f32 loc(#loc140)
      %55 = arith.addf %arg14, %arg17 : f32 loc(#loc141)
      %56 = arith.cmpf oeq, %55, %cst : f32 loc(#loc142)
      %57 = arith.divf %arg17, %55 : f32 loc(#loc143)
      %58 = arith.select %56, %cst, %57 : f32 loc(#loc144)
      %59 = arith.mulf %54, %58 : f32 loc(#loc145)
      %60 = arith.addf %arg12, %59 : f32 loc(#loc146)
      %61 = arith.addf %arg13, %arg16 : f32 loc(#loc147)
      %62 = arith.mulf %54, %54 : f32 loc(#loc148)
      %63 = arith.mulf %62, %arg14 : f32 loc(#loc149)
      %64 = arith.mulf %63, %58 : f32 loc(#loc150)
      %65 = arith.addf %61, %64 : f32 loc(#loc151)
      tt.reduce.return %60, %65, %55 : f32, f32, f32 loc(#loc122)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc122)
    %12 = tt.expand_dims %11#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc49)
    %13 = tt.expand_dims %11#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc50)
    %14:3 = "tt.reduce"(%10#3, %10#4, %10#5) <{axis = 1 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc51)), %arg13: f32 loc(callsite(#loc1 at #loc51)), %arg14: f32 loc(callsite(#loc1 at #loc51)), %arg15: f32 loc(callsite(#loc1 at #loc51)), %arg16: f32 loc(callsite(#loc1 at #loc51)), %arg17: f32 loc(callsite(#loc1 at #loc51))):
      %54 = arith.subf %arg15, %arg12 : f32 loc(#loc152)
      %55 = arith.addf %arg14, %arg17 : f32 loc(#loc153)
      %56 = arith.cmpf oeq, %55, %cst : f32 loc(#loc154)
      %57 = arith.divf %arg17, %55 : f32 loc(#loc155)
      %58 = arith.select %56, %cst, %57 : f32 loc(#loc156)
      %59 = arith.mulf %54, %58 : f32 loc(#loc157)
      %60 = arith.addf %arg12, %59 : f32 loc(#loc158)
      %61 = arith.addf %arg13, %arg16 : f32 loc(#loc159)
      %62 = arith.mulf %54, %54 : f32 loc(#loc160)
      %63 = arith.mulf %62, %arg14 : f32 loc(#loc161)
      %64 = arith.mulf %63, %58 : f32 loc(#loc162)
      %65 = arith.addf %61, %64 : f32 loc(#loc163)
      tt.reduce.return %60, %65, %55 : f32, f32, f32 loc(#loc136)
    }) : (tensor<1x2048xf32>, tensor<1x2048xf32>, tensor<1x2048xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc136)
    %15 = tt.expand_dims %14#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc52)
    %16 = tt.expand_dims %14#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc53)
    %17 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc54)
    %18 = tt.splat %17 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc54)
    tt.store %18, %12, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc55)
    %19 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc56)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc56)
    tt.store %20, %15, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc57)
    %21 = arith.remsi %0, %c64_i32 : i32 loc(#loc58)
    %22 = tt.addptr %arg3, %21 : !tt.ptr<f32>, i32 loc(#loc59)
    %23 = tt.splat %22 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc59)
    %24 = tt.load %23, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc60)
    %25 = arith.muli %0, %c4096_i32 : i32 loc(#loc61)
    %26 = tt.splat %25 : i32 -> tensor<1x2048xi32> loc(#loc62)
    %27 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc63)
    %28 = tt.splat %1 : i1 -> tensor<1x2048xi1> loc(#loc64)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc65)
    %30 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc66)
    %31 = tt.broadcast %24 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc67)
    %32 = tt.broadcast %15 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc68)
    %33 = arith.divf %16, %cst_2 : tensor<1x1xf32> loc(#loc69)
    %34 = arith.addf %33, %cst_1 : tensor<1x1xf32> loc(#loc70)
    %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc71)
    %36 = tt.broadcast %35 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc72)
    %37 = tt.broadcast %12 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc73)
    %38 = arith.divf %13, %cst_2 : tensor<1x1xf32> loc(#loc74)
    %39 = arith.addf %38, %cst_1 : tensor<1x1xf32> loc(#loc75)
    %40 = tt.extern_elementwise %39 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc76)
    %41 = tt.broadcast %40 : tensor<1x1xf32> -> tensor<1x2048xf32> loc(#loc77)
    %42 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc78)
    %43 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>> loc(#loc79)
    scf.for %arg12 = %c0_i32 to %c4096_i32 step %c2048_i32  : i32 {
      %54 = tt.splat %arg12 : i32 -> tensor<1x2048xi32> loc(#loc81)
      %55 = arith.addi %54, %4 : tensor<1x2048xi32> loc(#loc81)
      %56 = arith.cmpi slt, %55, %cst_4 : tensor<1x2048xi32> loc(#loc82)
      %57 = arith.addi %55, %26 : tensor<1x2048xi32> loc(#loc62)
      %58 = tt.addptr %27, %57 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc63)
      %59 = arith.andi %56, %28 : tensor<1x2048xi1> loc(#loc64)
      %60 = tt.load %58, %59, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc83)
      %61 = tt.addptr %29, %57 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc65)
      %62 = tt.load %61, %59, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc84)
      %63 = tt.addptr %30, %57 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc66)
      %64 = tt.load %63, %59, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>> loc(#loc85)
      %65 = arith.addf %60, %31 : tensor<1x2048xf32> loc(#loc67)
      %66 = arith.cmpf ogt, %cst_3, %65 : tensor<1x2048xf32> loc(#loc138)
      %67 = arith.select %66, %cst_3, %65 : tensor<1x2048xi1>, tensor<1x2048xf32> loc(#loc139)
      %68 = arith.subf %62, %32 : tensor<1x2048xf32> loc(#loc68)
      %69 = arith.mulf %68, %36 : tensor<1x2048xf32> loc(#loc72)
      %70 = arith.addf %67, %69 : tensor<1x2048xf32> loc(#loc89)
      %71 = arith.subf %64, %37 : tensor<1x2048xf32> loc(#loc73)
      %72 = arith.mulf %71, %41 : tensor<1x2048xf32> loc(#loc77)
      %73 = arith.addf %67, %72 : tensor<1x2048xf32> loc(#loc90)
      %74 = tt.addptr %42, %57 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc78)
      tt.store %74, %70, %59 : tensor<1x2048x!tt.ptr<f32>> loc(#loc91)
      %75 = tt.addptr %43, %57 : tensor<1x2048x!tt.ptr<f32>>, tensor<1x2048xi32> loc(#loc79)
      tt.store %75, %73, %59 : tensor<1x2048x!tt.ptr<f32>> loc(#loc92)
    } loc(#loc80)
    %44 = arith.divf %16, %cst_2 : tensor<1x1xf32> loc(#loc93)
    %45 = arith.addf %44, %cst_1 : tensor<1x1xf32> loc(#loc94)
    %46 = tt.extern_elementwise %45 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc95)
    %47 = arith.divf %13, %cst_2 : tensor<1x1xf32> loc(#loc96)
    %48 = arith.addf %47, %cst_1 : tensor<1x1xf32> loc(#loc97)
    %49 = tt.extern_elementwise %48 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc98)
    %50 = tt.addptr %arg8, %0 : !tt.ptr<f32>, i32 loc(#loc99)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc99)
    tt.store %51, %46, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc100)
    %52 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc101)
    %53 = tt.splat %52 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc101)
    tt.store %53, %49, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc102)
    tt.return loc(#loc103)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":22:28)
#loc3 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":24:21)
#loc4 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":25:25)
#loc5 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":25:33)
#loc6 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":37:44)
#loc7 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":37:39)
#loc8 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":37:34)
#loc9 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":37:57)
#loc10 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":38:34)
#loc11 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":33:36)
#loc12 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":34:27)
#loc13 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":35:25)
#loc14 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":37:49)
#loc15 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":38:49)
#loc16 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":41:62)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc18 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":41:51)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc27 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":43:60)
#loc28 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":44:56)
#loc29 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":45:64)
#loc30 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":48:51)
#loc31 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":50:60)
#loc32 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":51:56)
#loc33 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":52:64)
#loc34 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":52:8)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc49 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":56:20)
#loc50 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":57:20)
#loc52 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":62:20)
#loc53 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":63:20)
#loc54 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":65:25)
#loc55 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":65:36)
#loc56 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":66:25)
#loc57 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":66:36)
#loc58 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":67:19)
#loc59 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":68:31)
#loc60 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":68:36)
#loc61 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":73:45)
#loc62 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":73:40)
#loc63 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":73:35)
#loc64 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":73:58)
#loc65 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":74:35)
#loc66 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":75:35)
#loc67 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":76:24)
#loc68 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":79:24)
#loc69 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":81:23)
#loc70 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":83:24)
#loc71 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":84:32)
#loc72 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":85:24)
#loc73 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":87:24)
#loc74 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":88:23)
#loc75 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":89:24)
#loc76 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":90:32)
#loc77 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":91:24)
#loc78 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":93:29)
#loc79 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":94:29)
#loc80 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":69:36)
#loc81 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":70:27)
#loc82 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":71:25)
#loc83 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":73:50)
#loc84 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":74:50)
#loc85 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":75:50)
#loc86 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc87 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":78:46)
#loc88 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc89 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":86:24)
#loc90 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":92:24)
#loc91 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":93:51)
#loc92 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":94:51)
#loc93 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":96:19)
#loc94 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":98:20)
#loc95 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":99:28)
#loc96 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":100:19)
#loc97 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":101:20)
#loc98 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":102:28)
#loc99 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":103:25)
#loc100 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":103:37)
#loc101 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":104:25)
#loc102 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":104:37)
#loc103 = loc("inductor_cache/ti/ctiry7hk2om52hrmo4ber4abcc7blkwfxjqs2fuzbjjzxj6vyfam.py":104:4)
#loc104 = loc(callsite(#loc17 at #loc18))
#loc105 = loc(callsite(#loc19 at #loc18))
#loc106 = loc(callsite(#loc20 at #loc18))
#loc107 = loc(callsite(#loc21 at #loc18))
#loc108 = loc(callsite(#loc22 at #loc18))
#loc109 = loc(callsite(#loc23 at #loc18))
#loc110 = loc(callsite(#loc24 at #loc18))
#loc111 = loc(callsite(#loc25 at #loc18))
#loc112 = loc(callsite(#loc26 at #loc18))
#loc113 = loc(callsite(#loc17 at #loc30))
#loc114 = loc(callsite(#loc19 at #loc30))
#loc115 = loc(callsite(#loc20 at #loc30))
#loc116 = loc(callsite(#loc21 at #loc30))
#loc117 = loc(callsite(#loc22 at #loc30))
#loc118 = loc(callsite(#loc23 at #loc30))
#loc119 = loc(callsite(#loc24 at #loc30))
#loc120 = loc(callsite(#loc25 at #loc30))
#loc121 = loc(callsite(#loc26 at #loc30))
#loc122 = loc(callsite(#loc35 at #loc36))
#loc124 = loc(callsite(#loc37 at #loc35))
#loc125 = loc(callsite(#loc38 at #loc35))
#loc126 = loc(callsite(#loc39 at #loc35))
#loc127 = loc(callsite(#loc40 at #loc35))
#loc128 = loc(callsite(#loc41 at #loc35))
#loc129 = loc(callsite(#loc42 at #loc35))
#loc130 = loc(callsite(#loc43 at #loc35))
#loc131 = loc(callsite(#loc44 at #loc35))
#loc132 = loc(callsite(#loc45 at #loc35))
#loc133 = loc(callsite(#loc46 at #loc35))
#loc134 = loc(callsite(#loc47 at #loc35))
#loc135 = loc(callsite(#loc48 at #loc35))
#loc136 = loc(callsite(#loc35 at #loc51))
#loc138 = loc(callsite(#loc86 at #loc87))
#loc139 = loc(callsite(#loc88 at #loc87))
#loc140 = loc(callsite(#loc124 at #loc36))
#loc141 = loc(callsite(#loc125 at #loc36))
#loc142 = loc(callsite(#loc126 at #loc36))
#loc143 = loc(callsite(#loc127 at #loc36))
#loc144 = loc(callsite(#loc128 at #loc36))
#loc145 = loc(callsite(#loc129 at #loc36))
#loc146 = loc(callsite(#loc130 at #loc36))
#loc147 = loc(callsite(#loc131 at #loc36))
#loc148 = loc(callsite(#loc132 at #loc36))
#loc149 = loc(callsite(#loc133 at #loc36))
#loc150 = loc(callsite(#loc134 at #loc36))
#loc151 = loc(callsite(#loc135 at #loc36))
#loc152 = loc(callsite(#loc124 at #loc51))
#loc153 = loc(callsite(#loc125 at #loc51))
#loc154 = loc(callsite(#loc126 at #loc51))
#loc155 = loc(callsite(#loc127 at #loc51))
#loc156 = loc(callsite(#loc128 at #loc51))
#loc157 = loc(callsite(#loc129 at #loc51))
#loc158 = loc(callsite(#loc130 at #loc51))
#loc159 = loc(callsite(#loc131 at #loc51))
#loc160 = loc(callsite(#loc132 at #loc51))
#loc161 = loc(callsite(#loc133 at #loc51))
#loc162 = loc(callsite(#loc134 at #loc51))
#loc163 = loc(callsite(#loc135 at #loc51))
