#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":19:0)
#loc1 = loc(unknown)
#loc38 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":44:39)
#loc59 = loc(callsite(#loc1 at #loc38))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_min_mul_sub_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":19:0), %arg2: i32 loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<0x7F800000> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<12> : tensor<1x16xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc2)
    %2 = arith.cmpi slt, %1, %cst_4 : tensor<1x16xi32, #blocked> loc(#loc3)
    %3 = arith.remsi %1, %cst_3 : tensor<1x16xi32, #blocked> loc(#loc4)
    %4 = arith.divsi %1, %cst_3 : tensor<1x16xi32, #blocked> loc(#loc5)
    %5 = arith.muli %4, %cst_2 : tensor<1x16xi32, #blocked> loc(#loc6)
    %6 = arith.addi %3, %5 : tensor<1x16xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc8)
    %9 = tt.load %8, %2, %cst_1 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = arith.addi %3, %cst_3 : tensor<1x16xi32, #blocked> loc(#loc10)
    %11 = arith.addi %10, %5 : tensor<1x16xi32, #blocked> loc(#loc11)
    %12 = tt.addptr %7, %11 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc12)
    %13 = tt.load %12, %2, %cst_1 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = arith.addi %3, %cst_0 : tensor<1x16xi32, #blocked> loc(#loc14)
    %15 = arith.addi %14, %5 : tensor<1x16xi32, #blocked> loc(#loc15)
    %16 = tt.addptr %7, %15 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc16)
    %17 = tt.load %16, %2, %cst_1 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc17)
    %18 = arith.addi %3, %cst_4 : tensor<1x16xi32, #blocked> loc(#loc18)
    %19 = arith.addi %18, %5 : tensor<1x16xi32, #blocked> loc(#loc19)
    %20 = tt.addptr %7, %19 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc20)
    %21 = tt.load %20, %2, %cst_1 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc21)
    %22 = arith.cmpf ogt, %9, %13 : tensor<1x16xf32, #blocked> loc(#loc44)
    %23 = arith.cmpf une, %9, %9 : tensor<1x16xf32, #blocked> loc(#loc45)
    %24 = arith.ori %22, %23 : tensor<1x16xi1, #blocked> loc(#loc46)
    %25 = arith.select %24, %9, %13 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc47)
    %26 = arith.cmpf olt, %9, %13 : tensor<1x16xf32, #blocked> loc(#loc48)
    %27 = arith.ori %26, %23 : tensor<1x16xi1, #blocked> loc(#loc49)
    %28 = arith.select %27, %9, %13 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc50)
    %29 = arith.subf %25, %28 : tensor<1x16xf32, #blocked> loc(#loc31)
    %30 = arith.cmpf ogt, %17, %21 : tensor<1x16xf32, #blocked> loc(#loc51)
    %31 = arith.cmpf une, %17, %17 : tensor<1x16xf32, #blocked> loc(#loc52)
    %32 = arith.ori %30, %31 : tensor<1x16xi1, #blocked> loc(#loc53)
    %33 = arith.select %32, %17, %21 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc54)
    %34 = arith.cmpf olt, %17, %21 : tensor<1x16xf32, #blocked> loc(#loc55)
    %35 = arith.ori %34, %31 : tensor<1x16xi1, #blocked> loc(#loc56)
    %36 = arith.select %35, %17, %21 : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc57)
    %37 = arith.subf %33, %36 : tensor<1x16xf32, #blocked> loc(#loc34)
    %38 = arith.mulf %29, %37 : tensor<1x16xf32, #blocked> loc(#loc35)
    %39 = arith.select %2, %38, %cst : tensor<1x16xi1, #blocked>, tensor<1x16xf32, #blocked> loc(#loc36)
    %40 = "tt.reduce"(%39) <{axis = 1 : i32}> ({
    ^bb0(%arg3: f32 loc(callsite(#loc1 at #loc38)), %arg4: f32 loc(callsite(#loc1 at #loc38))):
      %44 = arith.cmpf olt, %arg3, %arg4 : f32 loc(#loc64)
      %45 = arith.cmpf une, %arg3, %arg3 : f32 loc(#loc65)
      %46 = arith.ori %44, %45 : i1 loc(#loc66)
      %47 = arith.select %46, %arg3, %arg4 : f32 loc(#loc67)
      tt.reduce.return %47 : f32 loc(#loc58)
    }) : (tensor<1x16xf32, #blocked>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc58)
    %41 = tt.expand_dims %40 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc40)
    %42 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc41)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc42)
    tt.store %43, %41 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":26:34)
#loc3 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":28:21)
#loc4 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":29:19)
#loc5 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":30:19)
#loc6 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":31:38)
#loc7 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":31:35)
#loc8 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":31:30)
#loc9 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":31:43)
#loc10 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":32:34)
#loc11 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":32:39)
#loc12 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":32:30)
#loc13 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":32:47)
#loc14 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":33:34)
#loc15 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":33:39)
#loc16 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":33:30)
#loc17 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":33:47)
#loc18 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":34:35)
#loc19 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":34:40)
#loc20 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":34:30)
#loc21 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":34:48)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc23 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":35:40)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc28 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":36:40)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc31 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":37:18)
#loc32 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":38:40)
#loc33 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":39:40)
#loc34 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":40:18)
#loc35 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":41:19)
#loc36 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":43:35)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":126:29)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc40 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":44:42)
#loc41 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":45:25)
#loc42 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":45:68)
#loc43 = loc("inductor_cache/tq/ctqofpgot63hd423cqcmc6xi6dey7kvzymuew6gb5l6eoupkgn4k.py":45:4)
#loc44 = loc(callsite(#loc22 at #loc23))
#loc45 = loc(callsite(#loc24 at #loc23))
#loc46 = loc(callsite(#loc25 at #loc23))
#loc47 = loc(callsite(#loc26 at #loc23))
#loc48 = loc(callsite(#loc27 at #loc28))
#loc49 = loc(callsite(#loc29 at #loc28))
#loc50 = loc(callsite(#loc30 at #loc28))
#loc51 = loc(callsite(#loc22 at #loc32))
#loc52 = loc(callsite(#loc24 at #loc32))
#loc53 = loc(callsite(#loc25 at #loc32))
#loc54 = loc(callsite(#loc26 at #loc32))
#loc55 = loc(callsite(#loc27 at #loc33))
#loc56 = loc(callsite(#loc29 at #loc33))
#loc57 = loc(callsite(#loc30 at #loc33))
#loc58 = loc(callsite(#loc37 at #loc38))
#loc60 = loc(callsite(#loc27 at #loc37))
#loc61 = loc(callsite(#loc39 at #loc37))
#loc62 = loc(callsite(#loc29 at #loc37))
#loc63 = loc(callsite(#loc30 at #loc37))
#loc64 = loc(callsite(#loc60 at #loc38))
#loc65 = loc(callsite(#loc61 at #loc38))
#loc66 = loc(callsite(#loc62 at #loc38))
#loc67 = loc(callsite(#loc63 at #loc38))
