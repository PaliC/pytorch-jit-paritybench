; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__softmax_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 4, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 15, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 16, !dbg !14
  %10 = sdiv i32 %8, 4, !dbg !15
  %11 = sext i32 %8 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #3, !dbg !17
  %14 = bitcast i32 %13 to float, !dbg !17
  %15 = shl nsw i32 %10, 2, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %9) #3, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = or disjoint i32 %15, 1, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %9) #3, !dbg !23
  %24 = bitcast i32 %23 to float, !dbg !23
  %25 = or disjoint i32 %15, 2, !dbg !24
  %26 = sext i32 %25 to i64, !dbg !25
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !25
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %9) #3, !dbg !26
  %29 = bitcast i32 %28 to float, !dbg !26
  %30 = or disjoint i32 %15, 3, !dbg !27
  %31 = sext i32 %30 to i64, !dbg !28
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !28
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %9) #3, !dbg !29
  %34 = bitcast i32 %33 to float, !dbg !29
  %35 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %35, 0, !dbg !30
  %36 = tail call float @llvm.nvvm.fabs.ftz.f(float %14) #3, !dbg !30
  %37 = tail call float @llvm.nvvm.fabs.f(float %14) #3, !dbg !30
  %.01.i = select i1 %.not.i, float %37, float %36, !dbg !30
  %38 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !30
  br i1 %38, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !30

__internal_fmad.exit1.i:                          ; preds = %3
  %39 = fmul float %.01.i, 0x4007154760000000, !dbg !30
  %40 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %39) #3, !dbg !30
  %41 = fadd float %40, 1.000000e+00, !dbg !30
  %42 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %41) #4, !dbg !30, !srcloc !31
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not6.i = icmp eq i32 %43, 0, !dbg !30
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %42, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %42, float -2.000000e+00, float 1.000000e+00) #3, !dbg !30
  %.03.i = select i1 %.not6.i, float %45, float %44, !dbg !30
  %46 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !30
  %s.0.i = select i1 %46, float 1.000000e+00, float %.03.i, !dbg !30
  %47 = bitcast float %s.0.i to i32, !dbg !30
  %48 = and i32 %13, -2147483648, !dbg !30
  %49 = or i32 %48, %47, !dbg !30
  %50 = bitcast i32 %49 to float, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__internal_fmad.exit3.i:                          ; preds = %3
  %51 = fmul float %14, %14, !dbg !30
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not1.i = icmp eq i32 %52, 0, !dbg !30
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %51, float 0xBFAAC795C0000000) #3, !dbg !30
  %54 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %51, float 0xBFAAC795C0000000) #3, !dbg !30
  %.06.i = select i1 %.not1.i, float %54, float %53, !dbg !30
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not2.i = icmp eq i32 %55, 0, !dbg !30
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %51, float 0x3FC10B2820000000) #3, !dbg !30
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %51, float 0x3FC10B2820000000) #3, !dbg !30
  %.05.i = select i1 %.not2.i, float %57, float %56, !dbg !30
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not3.i = icmp eq i32 %58, 0, !dbg !30
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %51, float 0xBFD5553DA0000000) #3, !dbg !30
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %51, float 0xBFD5553DA0000000) #3, !dbg !30
  %.0.i = select i1 %.not3.i, float %60, float %59, !dbg !30
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not4.i = icmp eq i32 %61, 0, !dbg !30
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %51, float 0.000000e+00) #3, !dbg !30
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %51, float 0.000000e+00) #3, !dbg !30
  %.04.i = select i1 %.not4.i, float %63, float %62, !dbg !30
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not5.i = icmp eq i32 %64, 0, !dbg !30
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %14, float %14) #3, !dbg !30
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %14, float %14) #3, !dbg !30
  %.02.i = select i1 %.not5.i, float %66, float %65, !dbg !30
  br label %__nv_tanhf.exit, !dbg !30

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %50, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !30
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not.i1 = icmp eq i32 %67, 0, !dbg !32
  %68 = tail call float @llvm.nvvm.fabs.ftz.f(float %19) #3, !dbg !32
  %69 = tail call float @llvm.nvvm.fabs.f(float %19) #3, !dbg !32
  %.01.i2 = select i1 %.not.i1, float %69, float %68, !dbg !32
  %70 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !32
  br i1 %70, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !32

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %71 = fmul float %.01.i2, 0x4007154760000000, !dbg !32
  %72 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %71) #3, !dbg !32
  %73 = fadd float %72, 1.000000e+00, !dbg !32
  %74 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %73) #4, !dbg !32, !srcloc !31
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not6.i4 = icmp eq i32 %75, 0, !dbg !32
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %74, float -2.000000e+00, float 1.000000e+00) #3, !dbg !32
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %74, float -2.000000e+00, float 1.000000e+00) #3, !dbg !32
  %.03.i5 = select i1 %.not6.i4, float %77, float %76, !dbg !32
  %78 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !32
  %s.0.i6 = select i1 %78, float 1.000000e+00, float %.03.i5, !dbg !32
  %79 = bitcast float %s.0.i6 to i32, !dbg !32
  %80 = and i32 %18, -2147483648, !dbg !32
  %81 = or i32 %80, %79, !dbg !32
  %82 = bitcast i32 %81 to float, !dbg !32
  br label %__nv_tanhf.exit19, !dbg !32

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %83 = fmul float %19, %19, !dbg !32
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not1.i9 = icmp eq i32 %84, 0, !dbg !32
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %83, float 0xBFAAC795C0000000) #3, !dbg !32
  %86 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %83, float 0xBFAAC795C0000000) #3, !dbg !32
  %.06.i10 = select i1 %.not1.i9, float %86, float %85, !dbg !32
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not2.i11 = icmp eq i32 %87, 0, !dbg !32
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %83, float 0x3FC10B2820000000) #3, !dbg !32
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %83, float 0x3FC10B2820000000) #3, !dbg !32
  %.05.i12 = select i1 %.not2.i11, float %89, float %88, !dbg !32
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not3.i13 = icmp eq i32 %90, 0, !dbg !32
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %83, float 0xBFD5553DA0000000) #3, !dbg !32
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %83, float 0xBFD5553DA0000000) #3, !dbg !32
  %.0.i14 = select i1 %.not3.i13, float %92, float %91, !dbg !32
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not4.i15 = icmp eq i32 %93, 0, !dbg !32
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %83, float 0.000000e+00) #3, !dbg !32
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %83, float 0.000000e+00) #3, !dbg !32
  %.04.i16 = select i1 %.not4.i15, float %95, float %94, !dbg !32
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !32
  %.not5.i17 = icmp eq i32 %96, 0, !dbg !32
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %19, float %19) #3, !dbg !32
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %19, float %19) #3, !dbg !32
  %.02.i18 = select i1 %.not5.i17, float %98, float %97, !dbg !32
  br label %__nv_tanhf.exit19, !dbg !32

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %82, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !32
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not.i20 = icmp eq i32 %99, 0, !dbg !33
  %100 = tail call float @llvm.nvvm.fabs.ftz.f(float %24) #3, !dbg !33
  %101 = tail call float @llvm.nvvm.fabs.f(float %24) #3, !dbg !33
  %.01.i21 = select i1 %.not.i20, float %101, float %100, !dbg !33
  %102 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !33
  br i1 %102, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !33

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %103 = fmul float %.01.i21, 0x4007154760000000, !dbg !33
  %104 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %103) #3, !dbg !33
  %105 = fadd float %104, 1.000000e+00, !dbg !33
  %106 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %105) #4, !dbg !33, !srcloc !31
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not6.i23 = icmp eq i32 %107, 0, !dbg !33
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %106, float -2.000000e+00, float 1.000000e+00) #3, !dbg !33
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %106, float -2.000000e+00, float 1.000000e+00) #3, !dbg !33
  %.03.i24 = select i1 %.not6.i23, float %109, float %108, !dbg !33
  %110 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !33
  %s.0.i25 = select i1 %110, float 1.000000e+00, float %.03.i24, !dbg !33
  %111 = bitcast float %s.0.i25 to i32, !dbg !33
  %112 = and i32 %23, -2147483648, !dbg !33
  %113 = or i32 %112, %111, !dbg !33
  %114 = bitcast i32 %113 to float, !dbg !33
  br label %__nv_tanhf.exit38, !dbg !33

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %115 = fmul float %24, %24, !dbg !33
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not1.i28 = icmp eq i32 %116, 0, !dbg !33
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %115, float 0xBFAAC795C0000000) #3, !dbg !33
  %118 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %115, float 0xBFAAC795C0000000) #3, !dbg !33
  %.06.i29 = select i1 %.not1.i28, float %118, float %117, !dbg !33
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not2.i30 = icmp eq i32 %119, 0, !dbg !33
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %115, float 0x3FC10B2820000000) #3, !dbg !33
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %115, float 0x3FC10B2820000000) #3, !dbg !33
  %.05.i31 = select i1 %.not2.i30, float %121, float %120, !dbg !33
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not3.i32 = icmp eq i32 %122, 0, !dbg !33
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %115, float 0xBFD5553DA0000000) #3, !dbg !33
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %115, float 0xBFD5553DA0000000) #3, !dbg !33
  %.0.i33 = select i1 %.not3.i32, float %124, float %123, !dbg !33
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not4.i34 = icmp eq i32 %125, 0, !dbg !33
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %115, float 0.000000e+00) #3, !dbg !33
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %115, float 0.000000e+00) #3, !dbg !33
  %.04.i35 = select i1 %.not4.i34, float %127, float %126, !dbg !33
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !33
  %.not5.i36 = icmp eq i32 %128, 0, !dbg !33
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %24, float %24) #3, !dbg !33
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %24, float %24) #3, !dbg !33
  %.02.i37 = select i1 %.not5.i36, float %130, float %129, !dbg !33
  br label %__nv_tanhf.exit38, !dbg !33

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %114, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !33
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not.i39 = icmp eq i32 %131, 0, !dbg !34
  %132 = tail call float @llvm.nvvm.fabs.ftz.f(float %29) #3, !dbg !34
  %133 = tail call float @llvm.nvvm.fabs.f(float %29) #3, !dbg !34
  %.01.i40 = select i1 %.not.i39, float %133, float %132, !dbg !34
  %134 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !34
  br i1 %134, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !34

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %135 = fmul float %.01.i40, 0x4007154760000000, !dbg !34
  %136 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %135) #3, !dbg !34
  %137 = fadd float %136, 1.000000e+00, !dbg !34
  %138 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %137) #4, !dbg !34, !srcloc !31
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not6.i42 = icmp eq i32 %139, 0, !dbg !34
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %138, float -2.000000e+00, float 1.000000e+00) #3, !dbg !34
  %141 = tail call float @llvm.nvvm.fma.rn.f(float %138, float -2.000000e+00, float 1.000000e+00) #3, !dbg !34
  %.03.i43 = select i1 %.not6.i42, float %141, float %140, !dbg !34
  %142 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !34
  %s.0.i44 = select i1 %142, float 1.000000e+00, float %.03.i43, !dbg !34
  %143 = bitcast float %s.0.i44 to i32, !dbg !34
  %144 = and i32 %28, -2147483648, !dbg !34
  %145 = or i32 %144, %143, !dbg !34
  %146 = bitcast i32 %145 to float, !dbg !34
  br label %__nv_tanhf.exit57, !dbg !34

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %147 = fmul float %29, %29, !dbg !34
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not1.i47 = icmp eq i32 %148, 0, !dbg !34
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #3, !dbg !34
  %150 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %147, float 0xBFAAC795C0000000) #3, !dbg !34
  %.06.i48 = select i1 %.not1.i47, float %150, float %149, !dbg !34
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not2.i49 = icmp eq i32 %151, 0, !dbg !34
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %147, float 0x3FC10B2820000000) #3, !dbg !34
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %147, float 0x3FC10B2820000000) #3, !dbg !34
  %.05.i50 = select i1 %.not2.i49, float %153, float %152, !dbg !34
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not3.i51 = icmp eq i32 %154, 0, !dbg !34
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %147, float 0xBFD5553DA0000000) #3, !dbg !34
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %147, float 0xBFD5553DA0000000) #3, !dbg !34
  %.0.i52 = select i1 %.not3.i51, float %156, float %155, !dbg !34
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not4.i53 = icmp eq i32 %157, 0, !dbg !34
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %147, float 0.000000e+00) #3, !dbg !34
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %147, float 0.000000e+00) #3, !dbg !34
  %.04.i54 = select i1 %.not4.i53, float %159, float %158, !dbg !34
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !34
  %.not5.i55 = icmp eq i32 %160, 0, !dbg !34
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %29, float %29) #3, !dbg !34
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %29, float %29) #3, !dbg !34
  %.02.i56 = select i1 %.not5.i55, float %162, float %161, !dbg !34
  br label %__nv_tanhf.exit57, !dbg !34

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %146, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !34
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not.i58 = icmp eq i32 %163, 0, !dbg !35
  %164 = tail call float @llvm.nvvm.fabs.ftz.f(float %34) #3, !dbg !35
  %165 = tail call float @llvm.nvvm.fabs.f(float %34) #3, !dbg !35
  %.01.i59 = select i1 %.not.i58, float %165, float %164, !dbg !35
  %166 = fcmp ult float %.01.i59, 0x3FE3333340000000, !dbg !35
  br i1 %166, label %__internal_fmad.exit3.i65, label %__internal_fmad.exit1.i60, !dbg !35

__internal_fmad.exit1.i60:                        ; preds = %__nv_tanhf.exit57
  %167 = fmul float %.01.i59, 0x4007154760000000, !dbg !35
  %168 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %167) #3, !dbg !35
  %169 = fadd float %168, 1.000000e+00, !dbg !35
  %170 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %169) #4, !dbg !35, !srcloc !31
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not6.i61 = icmp eq i32 %171, 0, !dbg !35
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float -2.000000e+00, float 1.000000e+00) #3, !dbg !35
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %170, float -2.000000e+00, float 1.000000e+00) #3, !dbg !35
  %.03.i62 = select i1 %.not6.i61, float %173, float %172, !dbg !35
  %174 = fcmp oge float %.01.i59, 0x4022059680000000, !dbg !35
  %s.0.i63 = select i1 %174, float 1.000000e+00, float %.03.i62, !dbg !35
  %175 = bitcast float %s.0.i63 to i32, !dbg !35
  %176 = and i32 %33, -2147483648, !dbg !35
  %177 = or i32 %176, %175, !dbg !35
  %178 = bitcast i32 %177 to float, !dbg !35
  br label %__nv_tanhf.exit76, !dbg !35

__internal_fmad.exit3.i65:                        ; preds = %__nv_tanhf.exit57
  %179 = fmul float %34, %34, !dbg !35
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not1.i66 = icmp eq i32 %180, 0, !dbg !35
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %179, float 0xBFAAC795C0000000) #3, !dbg !35
  %182 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %179, float 0xBFAAC795C0000000) #3, !dbg !35
  %.06.i67 = select i1 %.not1.i66, float %182, float %181, !dbg !35
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not2.i68 = icmp eq i32 %183, 0, !dbg !35
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i67, float %179, float 0x3FC10B2820000000) #3, !dbg !35
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i67, float %179, float 0x3FC10B2820000000) #3, !dbg !35
  %.05.i69 = select i1 %.not2.i68, float %185, float %184, !dbg !35
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not3.i70 = icmp eq i32 %186, 0, !dbg !35
  %187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i69, float %179, float 0xBFD5553DA0000000) #3, !dbg !35
  %188 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i69, float %179, float 0xBFD5553DA0000000) #3, !dbg !35
  %.0.i71 = select i1 %.not3.i70, float %188, float %187, !dbg !35
  %189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not4.i72 = icmp eq i32 %189, 0, !dbg !35
  %190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i71, float %179, float 0.000000e+00) #3, !dbg !35
  %191 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i71, float %179, float 0.000000e+00) #3, !dbg !35
  %.04.i73 = select i1 %.not4.i72, float %191, float %190, !dbg !35
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not5.i74 = icmp eq i32 %192, 0, !dbg !35
  %193 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i73, float %34, float %34) #3, !dbg !35
  %194 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i73, float %34, float %34) #3, !dbg !35
  %.02.i75 = select i1 %.not5.i74, float %194, float %193, !dbg !35
  br label %__nv_tanhf.exit76, !dbg !35

__nv_tanhf.exit76:                                ; preds = %__internal_fmad.exit1.i60, %__internal_fmad.exit3.i65
  %s.1.i64 = phi float [ %178, %__internal_fmad.exit1.i60 ], [ %.02.i75, %__internal_fmad.exit3.i65 ], !dbg !35
  %195 = fcmp ogt float %s.1.i7, %s.1.i26, !dbg !36
  %196 = fcmp uno float %s.1.i7, 0.000000e+00, !dbg !40
  %197 = or i1 %196, %195, !dbg !41
  %198 = select i1 %197, float %s.1.i7, float %s.1.i26, !dbg !42
  %199 = fcmp ogt float %198, %s.1.i45, !dbg !43
  %200 = fcmp uno float %198, 0.000000e+00, !dbg !45
  %201 = or i1 %200, %199, !dbg !46
  %202 = select i1 %201, float %198, float %s.1.i45, !dbg !47
  %203 = and i32 %6, 16, !dbg !12
  %204 = fcmp ogt float %202, %s.1.i64, !dbg !48
  %205 = fcmp uno float %202, 0.000000e+00, !dbg !50
  %206 = or i1 %205, %204, !dbg !51
  %207 = select i1 %206, float %202, float %s.1.i64, !dbg !52
  %208 = fsub float %s.1.i, %207, !dbg !53
  %209 = fmul float %208, 0x3FF7154760000000, !dbg !54
  %210 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %209) #3, !dbg !54
  %211 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !55
  %212 = icmp eq i32 %203, 0, !dbg !56
  %213 = bitcast float %210 to i32, !dbg !56
  %214 = and i1 %212, %9, !dbg !56
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %213, ptr addrspace(1) %211, i1 %214) #3, !dbg !56
  ret void, !dbg !57
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2ydyorj6vbo6a6rkg665rj7jq2h52xexn3jiz2nksdt5zhp4qfa.py", directory: "inductor_cache/2y")
!4 = !{ptr @triton_poi_fused__softmax_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_0", linkageName: "triton_poi_fused__softmax_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 32, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 37, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 41, scope: !7)
!24 = !DILocation(line: 29, column: 34, scope: !7)
!25 = !DILocation(line: 29, column: 30, scope: !7)
!26 = !DILocation(line: 29, column: 41, scope: !7)
!27 = !DILocation(line: 30, column: 35, scope: !7)
!28 = !DILocation(line: 30, column: 31, scope: !7)
!29 = !DILocation(line: 30, column: 42, scope: !7)
!30 = !DILocation(line: 31, column: 26, scope: !7)
!31 = !{i32 21046}
!32 = !DILocation(line: 32, column: 26, scope: !7)
!33 = !DILocation(line: 33, column: 26, scope: !7)
!34 = !DILocation(line: 35, column: 26, scope: !7)
!35 = !DILocation(line: 37, column: 27, scope: !7)
!36 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 34, column: 40, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !39)
!43 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !44)
!44 = !DILocation(line: 36, column: 40, scope: !7)
!45 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !44)
!46 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !44)
!47 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !44)
!48 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !49)
!49 = !DILocation(line: 38, column: 41, scope: !7)
!50 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !49)
!51 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !49)
!52 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !49)
!53 = !DILocation(line: 39, column: 19, scope: !7)
!54 = !DILocation(line: 40, column: 24, scope: !7)
!55 = !DILocation(line: 41, column: 25, scope: !7)
!56 = !DILocation(line: 41, column: 37, scope: !7)
!57 = !DILocation(line: 41, column: 4, scope: !7)
