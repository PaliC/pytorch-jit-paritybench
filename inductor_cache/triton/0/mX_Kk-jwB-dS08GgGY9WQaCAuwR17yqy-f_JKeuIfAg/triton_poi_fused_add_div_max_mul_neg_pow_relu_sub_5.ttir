#loc = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":19:0)
module {
  tt.func public @triton_poi_fused_add_div_max_mul_neg_pow_relu_sub_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<-5.000000e-01> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<-3.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_2 = arith.constant dense<-0.333333343> : tensor<128xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_4 = arith.constant dense<1.000000e-10> : tensor<128xf32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_5 : tensor<128xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc8)
    %9 = tt.load %8, %5 : tensor<128x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc10)
    %12 = tt.load %11, %5 : tensor<128x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %6 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc12)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc13)
    %16 = arith.addf %9, %cst_4 : tensor<128xf32> loc(#loc14)
    %17 = arith.divf %cst_3, %16 : tensor<128xf32> loc(#loc15)
    %18 = arith.mulf %17, %17 : tensor<128xf32> loc(#loc16)
    %19 = arith.mulf %18, %17 : tensor<128xf32> loc(#loc17)
    %20 = arith.subf %19, %cst_3 : tensor<128xf32> loc(#loc18)
    %21 = arith.mulf %20, %cst_2 : tensor<128xf32> loc(#loc19)
    %22 = arith.mulf %9, %21 : tensor<128xf32> loc(#loc20)
    %23 = arith.subf %12, %15 : tensor<128xf32> loc(#loc21)
    %24 = arith.mulf %23, %cst_1 : tensor<128xf32> loc(#loc22)
    %25 = arith.addf %24, %cst_3 : tensor<128xf32> loc(#loc23)
    %26 = arith.cmpf ogt, %cst, %25 : tensor<128xf32> loc(#loc42)
    %27 = arith.select %26, %cst, %25 : tensor<128xi1>, tensor<128xf32> loc(#loc43)
    %28 = tt.extern_elementwise %27, %cst_2 {libname = "", libpath = "", pure = true, symbol = "__nv_powf"} : (tensor<128xf32>, tensor<128xf32>) -> tensor<128xf32> loc(#loc27)
    %29 = arith.divf %cst_3, %28 : tensor<128xf32> loc(#loc28)
    %30 = arith.mulf %29, %29 : tensor<128xf32> loc(#loc29)
    %31 = arith.mulf %30, %29 : tensor<128xf32> loc(#loc30)
    %32 = arith.subf %31, %cst_3 : tensor<128xf32> loc(#loc31)
    %33 = arith.mulf %32, %cst_2 : tensor<128xf32> loc(#loc32)
    %34 = arith.mulf %9, %33 : tensor<128xf32> loc(#loc33)
    %35 = arith.subf %22, %34 : tensor<128xf32> loc(#loc34)
    %36 = arith.divf %cst_3, %9 : tensor<128xf32> loc(#loc35)
    %37 = arith.mulf %36, %36 : tensor<128xf32> loc(#loc36)
    %38 = arith.mulf %37, %cst_0 : tensor<128xf32> loc(#loc37)
    %39 = arith.subf %35, %38 : tensor<128xf32> loc(#loc38)
    %40 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc39)
    %41 = tt.addptr %40, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc39)
    tt.store %41, %39, %5 : tensor<128x!tt.ptr<f32>> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":21:28)
#loc3 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":21:33)
#loc4 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":22:36)
#loc5 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":22:23)
#loc6 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":23:21)
#loc7 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":25:19)
#loc8 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":26:30)
#loc9 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":26:35)
#loc10 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":27:31)
#loc11 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":27:36)
#loc12 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":28:31)
#loc13 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":28:36)
#loc14 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":30:18)
#loc15 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":32:18)
#loc16 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":33:18)
#loc17 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":34:18)
#loc18 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":36:18)
#loc19 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":38:19)
#loc20 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":39:19)
#loc21 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":40:20)
#loc22 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":42:20)
#loc23 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":43:20)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc25 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":45:42)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc27 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":46:33)
#loc28 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":47:19)
#loc29 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":48:20)
#loc30 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":49:20)
#loc31 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":50:20)
#loc32 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":51:20)
#loc33 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":52:19)
#loc34 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":53:20)
#loc35 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":54:19)
#loc36 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":55:20)
#loc37 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":57:20)
#loc38 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":58:20)
#loc39 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":59:25)
#loc40 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":59:37)
#loc41 = loc("inductor_cache/42/c42b6fgn5zgfcitcd3slaha2el6ov3qyuoao2nmlvvkghyhzbjd4.py":59:4)
#loc42 = loc(callsite(#loc24 at #loc25))
#loc43 = loc(callsite(#loc26 at #loc25))
