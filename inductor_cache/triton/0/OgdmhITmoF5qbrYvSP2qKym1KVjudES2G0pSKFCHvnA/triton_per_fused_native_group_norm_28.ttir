#loc = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":19:0)
#loc1 = loc(unknown)
#loc15 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":36:24)
#loc22 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":44:26)
#loc35 = loc(callsite(#loc1 at #loc15))
#loc38 = loc(callsite(#loc1 at #loc22))
module {
  tt.func public @triton_per_fused_native_group_norm_28(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999974E-6> : tensor<32x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<3.200000e+01> : tensor<32x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<32x32xf32> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<32x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<32x1xi32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<32x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<32x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_3 : tensor<32x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc8)
    %8 = arith.muli %5, %cst_2 : tensor<32x1xi32> loc(#loc9)
    %9 = tt.broadcast %7 : tensor<1x32xi32> -> tensor<32x32xi32> loc(#loc10)
    %10 = tt.broadcast %8 : tensor<32x1xi32> -> tensor<32x32xi32> loc(#loc10)
    %11 = arith.addi %9, %10 : tensor<32x32xi32> loc(#loc10)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %11 : tensor<32x32x!tt.ptr<f32>>, tensor<32x32xi32> loc(#loc11)
    %14 = tt.broadcast %6 : tensor<32x1xi1> -> tensor<32x32xi1> loc(#loc12)
    %15 = tt.load %13, %14, %cst_1 : tensor<32x32x!tt.ptr<f32>> loc(#loc12)
    %16 = arith.select %14, %15, %cst_1 : tensor<32x32xi1>, tensor<32x32xf32> loc(#loc13)
    %17 = "tt.reduce"(%16) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc15)), %arg7: f32 loc(callsite(#loc1 at #loc15))):
      %35 = arith.addf %arg6, %arg7 : f32 loc(#loc39)
      tt.reduce.return %35 : f32 loc(#loc34)
    }) : (tensor<32x32xf32>) -> tensor<32xf32> loc(#loc34)
    %18 = tt.expand_dims %17 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc17)
    %19 = arith.divf %18, %cst_0 : tensor<32x1xf32> loc(#loc18)
    %20 = tt.broadcast %19 : tensor<32x1xf32> -> tensor<32x32xf32> loc(#loc19)
    %21 = arith.subf %15, %20 : tensor<32x32xf32> loc(#loc19)
    %22 = arith.mulf %21, %21 : tensor<32x32xf32> loc(#loc20)
    %23 = arith.select %14, %22, %cst_1 : tensor<32x32xi1>, tensor<32x32xf32> loc(#loc21)
    %24 = "tt.reduce"(%23) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc22)), %arg7: f32 loc(callsite(#loc1 at #loc22))):
      %35 = arith.addf %arg6, %arg7 : f32 loc(#loc40)
      tt.reduce.return %35 : f32 loc(#loc37)
    }) : (tensor<32x32xf32>) -> tensor<32xf32> loc(#loc37)
    %25 = tt.expand_dims %24 {axis = 1 : i32} : tensor<32xf32> -> tensor<32x1xf32> loc(#loc23)
    %26 = arith.divf %25, %cst_0 : tensor<32x1xf32> loc(#loc24)
    %27 = arith.addf %26, %cst : tensor<32x1xf32> loc(#loc25)
    %28 = tt.extern_elementwise %27 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<32x1xf32>) -> tensor<32x1xf32> loc(#loc26)
    %29 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc27)
    %30 = tt.addptr %29, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc27)
    tt.store %30, %28, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc28)
    %31 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc29)
    %32 = tt.addptr %31, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc29)
    tt.store %32, %19, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc30)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>> loc(#loc31)
    %34 = tt.addptr %33, %5 : tensor<32x1x!tt.ptr<f32>>, tensor<32x1xi32> loc(#loc31)
    tt.store %34, %25, %6 : tensor<32x1x!tt.ptr<f32>> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":23:28)
#loc3 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":23:33)
#loc4 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":24:36)
#loc5 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":24:44)
#loc6 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":24:23)
#loc7 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":25:21)
#loc8 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":26:34)
#loc9 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":31:38)
#loc10 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":31:35)
#loc11 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":31:30)
#loc12 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":31:43)
#loc13 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":35:33)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc17 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":36:27)
#loc18 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":39:19)
#loc19 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":40:19)
#loc20 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":41:20)
#loc21 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":43:35)
#loc23 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":44:29)
#loc24 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":46:20)
#loc25 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":48:20)
#loc26 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":49:28)
#loc27 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":50:25)
#loc28 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":50:37)
#loc29 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":51:25)
#loc30 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":51:37)
#loc31 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":52:25)
#loc32 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":52:37)
#loc33 = loc("inductor_cache/vr/cvrzc52y3f2llkmt2yfomjg3e77by66lifg6g4gs5g5btxeqjlbi.py":52:4)
#loc34 = loc(callsite(#loc14 at #loc15))
#loc36 = loc(callsite(#loc16 at #loc14))
#loc37 = loc(callsite(#loc14 at #loc22))
#loc39 = loc(callsite(#loc36 at #loc15))
#loc40 = loc(callsite(#loc36 at #loc22))
