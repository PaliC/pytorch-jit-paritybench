; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %.frozen = freeze i32 %10, !dbg !14
  %12 = sdiv i32 %.frozen, 16, !dbg !14
  %13 = srem i32 %12, 16, !dbg !15
  %14 = mul i32 %12, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %11, 16, !dbg !16
  %16 = sdiv i32 %10, 256, !dbg !17
  %17 = sitofp i32 %13 to float, !dbg !18
  %18 = fadd float %17, 5.000000e-01, !dbg !19
  %19 = fmul float %18, 4.000000e+00, !dbg !20
  %20 = fadd float %19, -5.000000e-01, !dbg !21
  %21 = fcmp ogt float %20, 0.000000e+00, !dbg !22
  %22 = select i1 %21, float %20, float 0.000000e+00, !dbg !26
  %23 = fptosi float %22 to i32, !dbg !27
  %24 = sitofp i32 %.decomposed to float, !dbg !28
  %25 = sitofp i32 %15 to float, !dbg !28
  %26 = fadd float %24, 5.000000e-01, !dbg !29
  %27 = fadd float %25, 5.000000e-01, !dbg !29
  %28 = fmul float %26, 4.000000e+00, !dbg !30
  %29 = fmul float %27, 4.000000e+00, !dbg !30
  %30 = fadd float %28, -5.000000e-01, !dbg !31
  %31 = fadd float %29, -5.000000e-01, !dbg !31
  %32 = fcmp ogt float %30, 0.000000e+00, !dbg !32
  %33 = fcmp ogt float %31, 0.000000e+00, !dbg !32
  %34 = select i1 %32, float %30, float 0.000000e+00, !dbg !34
  %35 = select i1 %33, float %31, float 0.000000e+00, !dbg !34
  %36 = fptosi float %34 to i32, !dbg !35
  %37 = fptosi float %35 to i32, !dbg !35
  %38 = shl i32 %23, 6, !dbg !36
  %39 = shl i32 %16, 12, !dbg !37
  %40 = add i32 %38, %39, !dbg !38
  %41 = add i32 %40, %36, !dbg !39
  %42 = add i32 %40, %37, !dbg !39
  %43 = sext i32 %41 to i64, !dbg !40
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !40
  %45 = sext i32 %42 to i64, !dbg !40
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !40
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #2, !dbg !41
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 true) #2, !dbg !41
  %49 = sext i32 %36 to i64, !dbg !42
  %50 = sext i32 %37 to i64, !dbg !42
  %51 = tail call i64 @llvm.smin.i64(i64 %49, i64 62), !dbg !43
  %52 = tail call i64 @llvm.smin.i64(i64 %50, i64 62), !dbg !43
  %53 = sext i32 %38 to i64, !dbg !45
  %54 = sext i32 %39 to i64, !dbg !46
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !47
  %56 = getelementptr i8, ptr addrspace(1) %55, i64 4, !dbg !47
  %57 = getelementptr float, ptr addrspace(1) %56, i64 %53, !dbg !47
  %58 = getelementptr float, ptr addrspace(1) %57, i64 %54, !dbg !47
  %59 = getelementptr float, ptr addrspace(1) %1, i64 %52, !dbg !47
  %60 = getelementptr i8, ptr addrspace(1) %59, i64 4, !dbg !47
  %61 = getelementptr float, ptr addrspace(1) %60, i64 %53, !dbg !47
  %62 = getelementptr float, ptr addrspace(1) %61, i64 %54, !dbg !47
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 true) #2, !dbg !48
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 true) #2, !dbg !48
  %65 = sitofp i32 %36 to float, !dbg !49
  %66 = sitofp i32 %37 to float, !dbg !49
  %67 = fsub float %34, %65, !dbg !50
  %68 = fsub float %35, %66, !dbg !50
  %69 = fcmp ogt float %67, 0.000000e+00, !dbg !51
  %70 = fcmp ogt float %68, 0.000000e+00, !dbg !51
  %71 = select i1 %69, float %67, float 0.000000e+00, !dbg !53
  %72 = select i1 %70, float %68, float 0.000000e+00, !dbg !53
  %73 = fcmp olt float %71, 1.000000e+00, !dbg !54
  %74 = fcmp olt float %72, 1.000000e+00, !dbg !54
  %75 = select i1 %73, float %71, float 1.000000e+00, !dbg !56
  %76 = select i1 %74, float %72, float 1.000000e+00, !dbg !56
  %77 = tail call i32 @llvm.smin.i32(i32 %23, i32 62), !dbg !57
  %narrow = add nsw i32 %77, 1, !dbg !57
  %78 = sext i32 %narrow to i64, !dbg !57
  %79 = shl nsw i64 %78, 6, !dbg !59
  %80 = getelementptr float, ptr addrspace(1) %56, i64 %79, !dbg !60
  %81 = getelementptr float, ptr addrspace(1) %80, i64 %54, !dbg !60
  %82 = getelementptr float, ptr addrspace(1) %60, i64 %79, !dbg !60
  %83 = getelementptr float, ptr addrspace(1) %82, i64 %54, !dbg !60
  %84 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %81, i1 true) #2, !dbg !61
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %83, i1 true) #2, !dbg !61
  %86 = getelementptr float, ptr addrspace(1) %1, i64 %79, !dbg !62
  %87 = getelementptr float, ptr addrspace(1) %86, i64 %49, !dbg !62
  %88 = getelementptr float, ptr addrspace(1) %87, i64 %54, !dbg !62
  %89 = getelementptr float, ptr addrspace(1) %86, i64 %50, !dbg !62
  %90 = getelementptr float, ptr addrspace(1) %89, i64 %54, !dbg !62
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %88, i1 true) #2, !dbg !63
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %90, i1 true) #2, !dbg !63
  %93 = insertelement <2 x i32> poison, i32 %84, i64 0, !dbg !61
  %94 = insertelement <2 x i32> %93, i32 %63, i64 1, !dbg !61
  %95 = bitcast <2 x i32> %94 to <2 x float>, !dbg !61
  %96 = insertelement <2 x i32> poison, i32 %91, i64 0, !dbg !63
  %97 = insertelement <2 x i32> %96, i32 %47, i64 1, !dbg !63
  %98 = bitcast <2 x i32> %97 to <2 x float>, !dbg !63
  %99 = fsub <2 x float> %95, %98, !dbg !64
  %100 = insertelement <2 x float> poison, float %75, i64 0, !dbg !65
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !65
  %102 = fmul <2 x float> %99, %101, !dbg !65
  %103 = fadd <2 x float> %102, %98, !dbg !66
  %104 = insertelement <2 x i32> poison, i32 %85, i64 0, !dbg !61
  %105 = insertelement <2 x i32> %104, i32 %64, i64 1, !dbg !61
  %106 = bitcast <2 x i32> %105 to <2 x float>, !dbg !61
  %107 = insertelement <2 x i32> poison, i32 %92, i64 0, !dbg !63
  %108 = insertelement <2 x i32> %107, i32 %48, i64 1, !dbg !63
  %109 = bitcast <2 x i32> %108 to <2 x float>, !dbg !63
  %110 = fsub <2 x float> %106, %109, !dbg !64
  %111 = insertelement <2 x float> poison, float %76, i64 0, !dbg !65
  %112 = shufflevector <2 x float> %111, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !65
  %113 = fmul <2 x float> %112, %110, !dbg !65
  %114 = fadd <2 x float> %113, %109, !dbg !66
  %115 = extractelement <2 x float> %103, i64 0, !dbg !67
  %116 = extractelement <2 x float> %103, i64 1, !dbg !68
  %117 = fsub float %115, %116, !dbg !67
  %118 = extractelement <2 x float> %114, i64 0, !dbg !67
  %119 = extractelement <2 x float> %114, i64 1, !dbg !68
  %120 = fsub float %118, %119, !dbg !67
  %121 = sitofp i32 %23 to float, !dbg !69
  %122 = fsub float %22, %121, !dbg !70
  %123 = fcmp ogt float %122, 0.000000e+00, !dbg !71
  %124 = select i1 %123, float %122, float 0.000000e+00, !dbg !73
  %125 = fcmp olt float %124, 1.000000e+00, !dbg !74
  %126 = select i1 %125, float %124, float 1.000000e+00, !dbg !76
  %127 = fmul float %126, %117, !dbg !77
  %128 = fmul float %120, %126, !dbg !77
  %129 = sext i32 %10 to i64, !dbg !78
  %130 = getelementptr float, ptr addrspace(1) %2, i64 %129, !dbg !78
  %131 = bitcast float %116 to i32, !dbg !68
  %132 = bitcast float %119 to i32, !dbg !68
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %131, i32 %132, ptr addrspace(1) %130, i1 true) #2, !dbg !68
  %133 = getelementptr float, ptr addrspace(1) %0, i64 %129, !dbg !79
  %134 = bitcast float %127 to i32, !dbg !80
  %135 = bitcast float %128 to i32, !dbg !80
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %134, i32 %135, ptr addrspace(1) %133, i1 true) #2, !dbg !80
  ret void, !dbg !81
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smin.i64(i64, i64) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crrfn47syrxfp5fvhm3u5y6nxncx7yvs4ty37dkdy723goesgn5t.py", directory: "inductor_cache/rr")
!4 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_3", linkageName: "triton_poi_fused__to_copy__unsafe_index_add_arange_clamp_mul_sub_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 29, column: 19, scope: !7)
!19 = !DILocation(line: 31, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 18, scope: !7)
!22 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !25)
!23 = distinct !DILexicalBlockFile(scope: !7, file: !24, discriminator: 0)
!24 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!25 = !DILocation(line: 36, column: 40, scope: !7)
!26 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !25)
!27 = !DILocation(line: 37, column: 19, scope: !7)
!28 = !DILocation(line: 39, column: 21, scope: !7)
!29 = !DILocation(line: 40, column: 20, scope: !7)
!30 = !DILocation(line: 41, column: 20, scope: !7)
!31 = !DILocation(line: 42, column: 20, scope: !7)
!32 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !33)
!33 = !DILocation(line: 43, column: 42, scope: !7)
!34 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !33)
!35 = !DILocation(line: 44, column: 21, scope: !7)
!36 = !DILocation(line: 45, column: 42, scope: !7)
!37 = !DILocation(line: 45, column: 54, scope: !7)
!38 = !DILocation(line: 45, column: 39, scope: !7)
!39 = !DILocation(line: 45, column: 49, scope: !7)
!40 = !DILocation(line: 45, column: 31, scope: !7)
!41 = !DILocation(line: 45, column: 59, scope: !7)
!42 = !DILocation(line: 47, column: 20, scope: !7)
!43 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !44)
!44 = !DILocation(line: 49, column: 42, scope: !7)
!45 = !DILocation(line: 50, column: 39, scope: !7)
!46 = !DILocation(line: 50, column: 49, scope: !7)
!47 = !DILocation(line: 50, column: 31, scope: !7)
!48 = !DILocation(line: 50, column: 59, scope: !7)
!49 = !DILocation(line: 52, column: 21, scope: !7)
!50 = !DILocation(line: 53, column: 20, scope: !7)
!51 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !52)
!52 = !DILocation(line: 54, column: 42, scope: !7)
!53 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !52)
!54 = !DILocation(line: 110, column: 15, scope: !23, inlinedAt: !55)
!55 = !DILocation(line: 56, column: 42, scope: !7)
!56 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !55)
!57 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !58)
!58 = !DILocation(line: 60, column: 42, scope: !7)
!59 = !DILocation(line: 61, column: 42, scope: !7)
!60 = !DILocation(line: 61, column: 31, scope: !7)
!61 = !DILocation(line: 61, column: 60, scope: !7)
!62 = !DILocation(line: 62, column: 31, scope: !7)
!63 = !DILocation(line: 62, column: 60, scope: !7)
!64 = !DILocation(line: 63, column: 20, scope: !7)
!65 = !DILocation(line: 64, column: 20, scope: !7)
!66 = !DILocation(line: 65, column: 20, scope: !7)
!67 = !DILocation(line: 66, column: 20, scope: !7)
!68 = !DILocation(line: 72, column: 37, scope: !7)
!69 = !DILocation(line: 67, column: 20, scope: !7)
!70 = !DILocation(line: 68, column: 19, scope: !7)
!71 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !72)
!72 = !DILocation(line: 69, column: 42, scope: !7)
!73 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !72)
!74 = !DILocation(line: 110, column: 15, scope: !23, inlinedAt: !75)
!75 = !DILocation(line: 70, column: 42, scope: !7)
!76 = !DILocation(line: 113, column: 29, scope: !23, inlinedAt: !75)
!77 = !DILocation(line: 71, column: 20, scope: !7)
!78 = !DILocation(line: 72, column: 25, scope: !7)
!79 = !DILocation(line: 73, column: 28, scope: !7)
!80 = !DILocation(line: 73, column: 40, scope: !7)
!81 = !DILocation(line: 73, column: 4, scope: !7)
