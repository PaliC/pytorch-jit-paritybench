//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0 // -- Begin function triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0
.visible .entry triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0_param_2,
	.param .u32 triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<26>;
	.reg .b32 	%r<93>;
	.reg .f32 	%f<125>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0_param_0];
	ld.param.u64 	%rd4, [triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0_param_1];
$L__tmp0:
	.loc	1 27 26                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:27:26
	mov.u32 	%r40, %tid.x;
	and.b32  	%r41, %r40, 31;
	ld.param.u64 	%rd5, [triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0_param_2];
	shl.b32 	%r42, %r40, 2;
	and.b32  	%r43, %r42, 252;
	.loc	1 31 30                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:31:30
	mul.wide.u32 	%rd6, %r43, 4;
	add.s64 	%rd1, %rd4, %rd6;
	mov.pred 	%p1, -1;
	.loc	1 31 35                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:31:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 32 30                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:32:30
	add.s64 	%rd2, %rd5, %rd6;
	.loc	1 32 35                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:32:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 31 35                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:31:35
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r1;
	.loc	1 32 35                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:32:35
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 34 19                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:34:19
	setp.neu.f32 	%p16, %f2, 0f437F0000;
	setp.neu.f32 	%p17, %f1, 0f437F0000;
	.loc	1 35 19                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:35:19
	selp.f32 	%f5, 0f3F800000, 0f00000000, %p17;
	selp.f32 	%f6, 0f3F800000, 0f00000000, %p16;
	.loc	1 36 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:36:18
	mul.f32 	%f7, %f2, %f6;
	mul.f32 	%f8, %f1, %f5;
	.loc	1 38 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:38:18
	neg.f32 	%f9, %f1;
	fma.rn.f32 	%f10, %f9, %f5, 0f3F800000;
	neg.f32 	%f11, %f2;
	fma.rn.f32 	%f12, %f11, %f6, 0f3F800000;
	.loc	1 39 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:39:18
	mul.f32 	%f13, %f4, %f4;
	mul.f32 	%f14, %f3, %f3;
	.loc	1 40 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:40:18
	mul.f32 	%f15, %f14, %f12;
	mul.f32 	%f16, %f13, %f10;
	.loc	1 41 19                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:41:19
	mul.f32 	%f17, %f16, %f5;
	.loc	1 31 35                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:31:35
	mov.b32 	%f18, %r3;
	mov.b32 	%f19, %r4;
	.loc	1 32 35                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:32:35
	mov.b32 	%f20, %r8;
	mov.b32 	%f21, %r7;
	.loc	1 34 19                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:34:19
	setp.neu.f32 	%p18, %f19, 0f437F0000;
	setp.neu.f32 	%p19, %f18, 0f437F0000;
	.loc	1 35 19                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:35:19
	selp.f32 	%f22, 0f3F800000, 0f00000000, %p19;
	selp.f32 	%f23, 0f3F800000, 0f00000000, %p18;
	.loc	1 36 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:36:18
	mul.f32 	%f24, %f19, %f23;
	mul.f32 	%f25, %f18, %f22;
	.loc	1 38 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:38:18
	neg.f32 	%f26, %f18;
	fma.rn.f32 	%f27, %f26, %f22, 0f3F800000;
	neg.f32 	%f28, %f19;
	fma.rn.f32 	%f29, %f28, %f23, 0f3F800000;
	.loc	1 39 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:39:18
	mul.f32 	%f30, %f21, %f21;
	mul.f32 	%f31, %f20, %f20;
	.loc	1 40 18                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:40:18
	mul.f32 	%f32, %f31, %f29;
	mul.f32 	%f33, %f30, %f27;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f34, %f15, %f6, %f17;
	fma.rn.f32 	%f35, %f33, %f22, %f34;
	fma.rn.f32 	%f36, %f32, %f23, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f36;
	shfl.sync.bfly.b32	%r45, %r44, 16, 31, -1;
	mov.b32 	%f37, %r45;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f38;
	shfl.sync.bfly.b32	%r47, %r46, 8, 31, -1;
	mov.b32 	%f39, %r47;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r48, %f40;
	shfl.sync.bfly.b32	%r49, %r48, 4, 31, -1;
	mov.b32 	%f41, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r50, %f42;
	shfl.sync.bfly.b32	%r51, %r50, 2, 31, -1;
	mov.b32 	%f43, %r51;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f44;
	shfl.sync.bfly.b32	%r53, %r52, 1, 31, -1;
	mov.b32 	%f45, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r41, 0;
	shr.u32 	%r54, %r40, 3;
	and.b32  	%r55, %r54, 4;
	mov.u32 	%r56, global_smem;
	add.s32 	%r9, %r56, %r55;
	mov.b32 	%r10, %f46;
	// begin inline asm
	@%p3 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r40, 2;
	add.s32 	%r12, %r56, %r42;
	// begin inline asm
	@%p4 ld.shared.b32 %r11, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f47, %r11;
	shfl.sync.bfly.b32	%r57, %r11, 1, 31, -1;
	mov.b32 	%f48, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r58, %r40, 1;
	setp.eq.b32 	%p20, %r58, 1;
	not.pred 	%p21, %p20;
	and.pred  	%p5, %p4, %p21;
	mov.b32 	%r14, %f49;
	// begin inline asm
	@%p5 st.shared.b32 [ %r12 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f50, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f51, %f50, 0f00000000;
	mov.f32 	%f52, 0f40000000;
$L__tmp3:
	.loc	1 45 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:45:20
	sub.f32 	%f53, %f52, %f4;
	sub.f32 	%f54, %f52, %f3;
$L__tmp4:
	.loc	3 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p22, %f54, 0f00000000;
	setp.le.f32 	%p23, %f53, 0f00000000;
	selp.f32 	%f55, 0f00000000, %f53, %p23;
	selp.f32 	%f56, 0f00000000, %f54, %p22;
$L__tmp5:
	.loc	1 48 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:48:20
	mul.f32 	%f57, %f56, %f56;
	mul.f32 	%f58, %f55, %f55;
	.loc	1 49 19                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:49:19
	mul.f32 	%f59, %f8, %f58;
	.loc	1 45 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:45:20
	sub.f32 	%f60, %f52, %f21;
	sub.f32 	%f61, %f52, %f20;
$L__tmp6:
	.loc	3 121 29                        // triton_helpers.py:121:29
	setp.le.f32 	%p24, %f61, 0f00000000;
	setp.le.f32 	%p25, %f60, 0f00000000;
	selp.f32 	%f62, 0f00000000, %f60, %p25;
	selp.f32 	%f63, 0f00000000, %f61, %p24;
$L__tmp7:
	.loc	1 48 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:48:20
	mul.f32 	%f64, %f63, %f63;
	mul.f32 	%f65, %f62, %f62;
$L__tmp8:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f66, %f7, %f57, %f59;
	fma.rn.f32 	%f67, %f25, %f65, %f66;
	fma.rn.f32 	%f68, %f24, %f64, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f68;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	mov.b32 	%f69, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f70;
	shfl.sync.bfly.b32	%r62, %r61, 8, 31, -1;
	mov.b32 	%f71, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f72;
	shfl.sync.bfly.b32	%r64, %r63, 4, 31, -1;
	mov.b32 	%f73, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f74;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	mov.b32 	%f75, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f76;
	shfl.sync.bfly.b32	%r68, %r67, 1, 31, -1;
	mov.b32 	%f77, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f78;
	// begin inline asm
	@%p3 st.shared.b32 [ %r9 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r17, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f79, %r17;
	shfl.sync.bfly.b32	%r69, %r17, 1, 31, -1;
	mov.b32 	%f80, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f81;
	// begin inline asm
	@%p5 st.shared.b32 [ %r12 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f82, [global_smem];
$L__tmp9:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f83, %f82, 0f00000000;
$L__tmp10:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f84, %f12, %f10;
	add.f32 	%f85, %f27, %f84;
	add.f32 	%f86, %f29, %f85;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f86;
	shfl.sync.bfly.b32	%r71, %r70, 16, 31, -1;
	mov.b32 	%f87, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f88, %f86, %f87;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f88;
	shfl.sync.bfly.b32	%r73, %r72, 8, 31, -1;
	mov.b32 	%f89, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f90, %f88, %f89;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f90;
	shfl.sync.bfly.b32	%r75, %r74, 4, 31, -1;
	mov.b32 	%f91, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f92, %f90, %f91;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f92;
	shfl.sync.bfly.b32	%r77, %r76, 2, 31, -1;
	mov.b32 	%f93, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f94, %f92, %f93;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f94;
	shfl.sync.bfly.b32	%r79, %r78, 1, 31, -1;
	mov.b32 	%f95, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f96, %f94, %f95;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f96;
	// begin inline asm
	@%p3 st.shared.b32 [ %r9 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r23, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f97, %r23;
	shfl.sync.bfly.b32	%r80, %r23, 1, 31, -1;
	mov.b32 	%f98, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f99;
	// begin inline asm
	@%p5 st.shared.b32 [ %r12 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f100, [global_smem];
$L__tmp11:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f101, %f100, 0f00000000;
$L__tmp12:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f102, %f2, %f6, %f8;
	fma.rn.f32 	%f103, %f18, %f22, %f102;
	fma.rn.f32 	%f104, %f19, %f23, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f104;
	shfl.sync.bfly.b32	%r82, %r81, 16, 31, -1;
	mov.b32 	%f105, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f106;
	shfl.sync.bfly.b32	%r84, %r83, 8, 31, -1;
	mov.b32 	%f107, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f108, %f106, %f107;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f108;
	shfl.sync.bfly.b32	%r86, %r85, 4, 31, -1;
	mov.b32 	%f109, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f110, %f108, %f109;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f110;
	shfl.sync.bfly.b32	%r88, %r87, 2, 31, -1;
	mov.b32 	%f111, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f112, %f110, %f111;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f112;
	shfl.sync.bfly.b32	%r90, %r89, 1, 31, -1;
	mov.b32 	%f113, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f114, %f112, %f113;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f114;
	// begin inline asm
	@%p3 st.shared.b32 [ %r9 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r29, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f115, %r29;
	shfl.sync.bfly.b32	%r91, %r29, 1, 31, -1;
	mov.b32 	%f116, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f117, %f115, %f116;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f117;
	// begin inline asm
	@%p5 st.shared.b32 [ %r12 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f118, [global_smem];
$L__tmp13:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f119, %f118, 0f00000000;
$L__tmp14:
	.loc	1 56 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:56:20
	add.f32 	%f120, %f101, 0f437F0000;
	.loc	1 57 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:57:20
	mov.b32 	%r34, %f51;
	mov.b32 	%r35, %f120;
	// begin inline asm
	div.full.f32 %r33, %r34, %r35;
	// end inline asm
	mov.b32 	%f121, %r33;
	.loc	1 58 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:58:20
	add.f32 	%f122, %f119, 0f437F0000;
	.loc	1 59 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:59:20
	mov.b32 	%r37, %f83;
	mov.b32 	%r38, %f122;
	// begin inline asm
	div.full.f32 %r36, %r37, %r38;
	// end inline asm
	mov.b32 	%f123, %r36;
	.loc	1 60 20                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:60:20
	add.f32 	%f124, %f121, %f123;
	.loc	1 62 4                          // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:62:4
	bar.sync 	0;
	.loc	1 63 63                         // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:63:63
	and.b32  	%r92, %r40, 63;
	setp.eq.s32 	%p15, %r92, 0;
	mov.b32 	%r39, %f124;
	// begin inline asm
	@%p15 st.global.b32 [ %rd3 + 0 ], { %r39 };
	// end inline asm
	.loc	1 63 4                          // c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py:63:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 398                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x187 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 118
.b8 112
.b8 108
.b8 118
.b8 105
.b8 119
.b8 122
.b8 115
.b8 120
.b8 52
.b8 116
.b8 120
.b8 106
.b8 50
.b8 99
.b8 111
.b8 53
.b8 107
.b8 97
.b8 102
.b8 118
.b8 106
.b8 114
.b8 115
.b8 109
.b8 99
.b8 102
.b8 110
.b8 116
.b8 99
.b8 114
.b8 50
.b8 115
.b8 104
.b8 104
.b8 122
.b8 105
.b8 107
.b8 121
.b8 54
.b8 115
.b8 110
.b8 122
.b8 116
.b8 50
.b8 103
.b8 121
.b8 52
.b8 97
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 118
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x40 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa3:0xee DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x100:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp8                           // DW_AT_low_pc
.b64 $L__tmp9                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x118:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x130:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp10                          // DW_AT_low_pc
.b64 $L__tmp11                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x148:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp11                          // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x160:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp12                          // DW_AT_low_pc
.b64 $L__tmp13                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x178:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
