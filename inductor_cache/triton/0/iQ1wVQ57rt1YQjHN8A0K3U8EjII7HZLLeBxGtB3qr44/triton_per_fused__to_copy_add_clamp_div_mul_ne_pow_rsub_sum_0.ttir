#loc = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":19:0)
#loc1 = loc(unknown)
#loc15 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":43:59)
#loc27 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":51:59)
#loc29 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":53:59)
#loc31 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":55:59)
#loc43 = loc(callsite(#loc1 at #loc15))
#loc51 = loc(callsite(#loc1 at #loc27))
#loc54 = loc(callsite(#loc1 at #loc29))
#loc57 = loc(callsite(#loc1 at #loc31))
module {
  tt.func public @triton_per_fused__to_copy_add_clamp_div_mul_ne_pow_rsub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.550000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<2.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<2.550000e+02> : tensor<256xf32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.cmpf une, %3, %cst_4 : tensor<256xf32> loc(#loc7)
    %8 = arith.uitofp %7 : tensor<256xi1> to tensor<256xf32> loc(#loc8)
    %9 = arith.mulf %3, %8 : tensor<256xf32> loc(#loc9)
    %10 = arith.subf %cst_3, %9 : tensor<256xf32> loc(#loc10)
    %11 = arith.mulf %6, %6 : tensor<256xf32> loc(#loc11)
    %12 = arith.mulf %10, %11 : tensor<256xf32> loc(#loc12)
    %13 = arith.mulf %12, %8 : tensor<256xf32> loc(#loc13)
    %14 = "tt.reduce"(%13) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc15)), %arg5: f32 loc(callsite(#loc1 at #loc15))):
      %37 = arith.addf %arg4, %arg5 : f32 loc(#loc59)
      tt.reduce.return %37 : f32 loc(#loc42)
    }) : (tensor<256xf32>) -> f32 loc(#loc42)
    %15 = arith.addf %14, %cst_0 : f32 loc(#loc45)
    %16 = arith.subf %cst_2, %6 : tensor<256xf32> loc(#loc19)
    %17 = arith.cmpf ogt, %16, %cst_1 : tensor<256xf32> loc(#loc46)
    %18 = arith.cmpf une, %16, %16 : tensor<256xf32> loc(#loc47)
    %19 = arith.ori %17, %18 : tensor<256xi1> loc(#loc48)
    %20 = arith.select %19, %16, %cst_1 : tensor<256xi1>, tensor<256xf32> loc(#loc49)
    %21 = arith.mulf %20, %20 : tensor<256xf32> loc(#loc25)
    %22 = arith.mulf %9, %21 : tensor<256xf32> loc(#loc26)
    %23 = "tt.reduce"(%22) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc27)), %arg5: f32 loc(callsite(#loc1 at #loc27))):
      %37 = arith.addf %arg4, %arg5 : f32 loc(#loc60)
      tt.reduce.return %37 : f32 loc(#loc50)
    }) : (tensor<256xf32>) -> f32 loc(#loc50)
    %24 = arith.addf %23, %cst_0 : f32 loc(#loc52)
    %25 = "tt.reduce"(%10) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc29)), %arg5: f32 loc(callsite(#loc1 at #loc29))):
      %37 = arith.addf %arg4, %arg5 : f32 loc(#loc61)
      tt.reduce.return %37 : f32 loc(#loc53)
    }) : (tensor<256xf32>) -> f32 loc(#loc53)
    %26 = arith.addf %25, %cst_0 : f32 loc(#loc55)
    %27 = "tt.reduce"(%9) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc31)), %arg5: f32 loc(callsite(#loc1 at #loc31))):
      %37 = arith.addf %arg4, %arg5 : f32 loc(#loc62)
      tt.reduce.return %37 : f32 loc(#loc56)
    }) : (tensor<256xf32>) -> f32 loc(#loc56)
    %28 = arith.addf %27, %cst_0 : f32 loc(#loc58)
    %29 = arith.addf %26, %cst : f32 loc(#loc33)
    %30 = arith.divf %15, %29 : f32 loc(#loc34)
    %31 = arith.addf %28, %cst : f32 loc(#loc35)
    %32 = arith.divf %24, %31 : f32 loc(#loc36)
    %33 = arith.addf %30, %32 : f32 loc(#loc37)
    %34 = tt.splat %33 : f32 -> tensor<1xf32> loc(#loc37)
    gpu.barrier loc(#loc38)
    %35 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc39)
    %36 = tt.splat %35 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc39)
    tt.store %36, %34 : tensor<1x!tt.ptr<f32>> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":27:26)
#loc3 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":31:30)
#loc4 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":31:35)
#loc5 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":32:30)
#loc6 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":32:35)
#loc7 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":34:19)
#loc8 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":35:19)
#loc9 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":36:18)
#loc10 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":38:18)
#loc11 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":39:18)
#loc12 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":40:18)
#loc13 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":41:19)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc18 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":43:45)
#loc19 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":45:20)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc21 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":47:42)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc25 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":48:20)
#loc26 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":49:19)
#loc28 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":51:45)
#loc30 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":53:45)
#loc32 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":55:45)
#loc33 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":56:20)
#loc34 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":57:20)
#loc35 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":58:20)
#loc36 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":59:20)
#loc37 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":60:20)
#loc38 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":62:4)
#loc39 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":63:28)
#loc40 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":63:63)
#loc41 = loc("inductor_cache/3v/c3vplviwzsx4txj2co5kafvjrsmcfntcr2shhziky6snzt2gy4av.py":63:4)
#loc42 = loc(callsite(#loc14 at #loc15))
#loc44 = loc(callsite(#loc16 at #loc14))
#loc45 = loc(callsite(#loc17 at #loc18))
#loc46 = loc(callsite(#loc20 at #loc21))
#loc47 = loc(callsite(#loc22 at #loc21))
#loc48 = loc(callsite(#loc23 at #loc21))
#loc49 = loc(callsite(#loc24 at #loc21))
#loc50 = loc(callsite(#loc14 at #loc27))
#loc52 = loc(callsite(#loc17 at #loc28))
#loc53 = loc(callsite(#loc14 at #loc29))
#loc55 = loc(callsite(#loc17 at #loc30))
#loc56 = loc(callsite(#loc14 at #loc31))
#loc58 = loc(callsite(#loc17 at #loc32))
#loc59 = loc(callsite(#loc44 at #loc15))
#loc60 = loc(callsite(#loc44 at #loc27))
#loc61 = loc(callsite(#loc44 at #loc29))
#loc62 = loc(callsite(#loc44 at #loc31))
