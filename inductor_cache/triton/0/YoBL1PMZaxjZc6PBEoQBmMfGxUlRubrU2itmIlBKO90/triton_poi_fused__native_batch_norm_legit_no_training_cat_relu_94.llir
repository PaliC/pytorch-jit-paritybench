; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_94(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, i32 %12) local_unnamed_addr !dbg !7 {
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %15 = shl i32 %14, 7, !dbg !11
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %17 = and i32 %16, 127, !dbg !12
  %18 = or disjoint i32 %15, %17, !dbg !13
  %19 = icmp slt i32 %18, 12800, !dbg !14
  %.frozen = freeze i32 %18, !dbg !15
  %20 = sdiv i32 %.frozen, 4, !dbg !15
  %21 = srem i32 %20, 800, !dbg !16
  %22 = mul i32 %20, 4, !dbg !17
  %.decomposed = sub i32 %.frozen, %22, !dbg !17
  %.frozen5 = freeze i32 %18, !dbg !18
  %23 = sdiv i32 %.frozen5, 3200, !dbg !18
  %24 = sext i32 %21 to i64, !dbg !19
  %25 = getelementptr float, ptr addrspace(1) %6, i64 %24, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %25, i1 %19) #3, !dbg !20
  %27 = getelementptr float, ptr addrspace(1) %7, i64 %24, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %19) #3, !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = getelementptr float, ptr addrspace(1) %8, i64 %24, !dbg !23
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %19) #3, !dbg !24
  %32 = getelementptr float, ptr addrspace(1) %9, i64 %24, !dbg !25
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %19) #3, !dbg !26
  %34 = icmp slt i32 %21, 640, !dbg !27
  %35 = mul i32 %23, 3200, !dbg !28
  %srem.decomposed = sub i32 %.frozen5, %35, !dbg !28
  %36 = mul nsw i32 %23, 2560, !dbg !29
  %37 = add nsw i32 %36, %srem.decomposed, !dbg !30
  %38 = sext i32 %37 to i64, !dbg !31
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !31
  %40 = and i1 %19, %34, !dbg !32
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %39, i1 %40, i32 0, i1 %40) #3, !dbg !33
  %42 = and i32 %21, -32, !dbg !34
  %43 = icmp eq i32 %42, 640, !dbg !34
  %44 = shl nsw i32 %21, 2, !dbg !35
  %45 = shl nsw i32 %23, 7, !dbg !36
  %46 = add nsw i32 %45, %.decomposed, !dbg !35
  %47 = add nsw i32 %46, -2560, !dbg !37
  %48 = add nsw i32 %47, %44, !dbg !38
  %49 = sext i32 %48 to i64, !dbg !39
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !39
  %51 = and i1 %19, %43, !dbg !40
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %51, i32 0, i1 %51) #3, !dbg !41
  %53 = icmp eq i32 %42, 672, !dbg !42
  %54 = add nsw i32 %46, -2688, !dbg !43
  %55 = add nsw i32 %54, %44, !dbg !44
  %56 = sext i32 %55 to i64, !dbg !45
  %57 = getelementptr float, ptr addrspace(1) %2, i64 %56, !dbg !45
  %58 = and i1 %19, %53, !dbg !46
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %57, i1 %58, i32 0, i1 %58) #3, !dbg !47
  %60 = icmp eq i32 %42, 704, !dbg !48
  %61 = add nsw i32 %46, -2816, !dbg !49
  %62 = add nsw i32 %61, %44, !dbg !50
  %63 = sext i32 %62 to i64, !dbg !51
  %64 = getelementptr float, ptr addrspace(1) %3, i64 %63, !dbg !51
  %65 = and i1 %19, %60, !dbg !52
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %65, i32 0, i1 %65) #3, !dbg !53
  %67 = icmp eq i32 %42, 736, !dbg !54
  %68 = add nsw i32 %46, -2944, !dbg !55
  %69 = add nsw i32 %68, %44, !dbg !56
  %70 = sext i32 %69 to i64, !dbg !57
  %71 = getelementptr float, ptr addrspace(1) %4, i64 %70, !dbg !57
  %72 = and i1 %19, %67, !dbg !58
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %71, i1 %72, i32 0, i1 %72) #3, !dbg !59
  %74 = icmp sgt i32 %21, 767, !dbg !60
  %75 = add nsw i32 %46, -3072, !dbg !61
  %76 = add nsw i32 %75, %44, !dbg !62
  %77 = sext i32 %76 to i64, !dbg !63
  %78 = getelementptr float, ptr addrspace(1) %5, i64 %77, !dbg !63
  %79 = and i1 %19, %74, !dbg !64
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %79, i32 0, i1 %79) #3, !dbg !65
  %81 = fadd float %29, 0x3EE4F8B580000000, !dbg !66
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !67
  %.not.i = icmp eq i32 %82, 0, !dbg !67
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !67
  %.not1.i = icmp eq i32 %83, 0, !dbg !67
  br i1 %.not.i, label %89, label %84, !dbg !67

84:                                               ; preds = %13
  br i1 %.not1.i, label %87, label %85, !dbg !67

85:                                               ; preds = %84
  %86 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %81) #3, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

87:                                               ; preds = %84
  %88 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %81) #3, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

89:                                               ; preds = %13
  br i1 %.not1.i, label %92, label %90, !dbg !67

90:                                               ; preds = %89
  %91 = tail call float @llvm.nvvm.sqrt.rn.f(float %81) #3, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

92:                                               ; preds = %89
  %93 = tail call float @llvm.nvvm.sqrt.approx.f(float %81) #3, !dbg !67
  br label %__nv_sqrtf.exit, !dbg !67

__nv_sqrtf.exit:                                  ; preds = %85, %87, %90, %92
  %.0.i = phi float [ %86, %85 ], [ %88, %87 ], [ %91, %90 ], [ %93, %92 ], !dbg !67
  %.v = select i1 %67, i32 %73, i32 %80, !dbg !68
  %.v1 = select i1 %60, i32 %66, i32 %.v, !dbg !69
  %.v2 = select i1 %53, i32 %59, i32 %.v1, !dbg !70
  %.v3 = select i1 %43, i32 %52, i32 %.v2, !dbg !71
  %.v4 = select i1 %34, i32 %41, i32 %.v3, !dbg !72
  %94 = bitcast i32 %.v4 to float, !dbg !72
  %95 = bitcast i32 %26 to float, !dbg !20
  %96 = fsub float %94, %95, !dbg !73
  %97 = bitcast i32 %33 to float, !dbg !26
  %98 = bitcast i32 %31 to float, !dbg !24
  %99 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !74
  %100 = fmul float %96, %99, !dbg !75
  %101 = fmul float %100, %98, !dbg !76
  %102 = fadd float %101, %97, !dbg !77
  %103 = fcmp olt float %102, 0.000000e+00, !dbg !78
  %104 = select i1 %103, float 0.000000e+00, float %102, !dbg !82
  %105 = sext i32 %18 to i64, !dbg !83
  %106 = getelementptr float, ptr addrspace(1) %10, i64 %105, !dbg !83
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %.v4, ptr addrspace(1) %106, i1 %19) #3, !dbg !84
  %107 = getelementptr float, ptr addrspace(1) %11, i64 %105, !dbg !85
  %108 = bitcast float %104 to i32, !dbg !86
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %108, ptr addrspace(1) %107, i1 %19) #3, !dbg !86
  ret void, !dbg !87
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cxgxu7dneyppji5lyjibzpkmumjpy4pxxzr67k43yjpsav3fv63p.py", directory: "inductor_cache/xg")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_94, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_94, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_94", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_94", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 31, scope: !7)
!20 = !DILocation(line: 28, column: 36, scope: !7)
!21 = !DILocation(line: 29, column: 31, scope: !7)
!22 = !DILocation(line: 29, column: 36, scope: !7)
!23 = !DILocation(line: 30, column: 31, scope: !7)
!24 = !DILocation(line: 30, column: 36, scope: !7)
!25 = !DILocation(line: 31, column: 31, scope: !7)
!26 = !DILocation(line: 31, column: 36, scope: !7)
!27 = !DILocation(line: 36, column: 18, scope: !7)
!28 = !DILocation(line: 37, column: 35, scope: !7)
!29 = !DILocation(line: 37, column: 49, scope: !7)
!30 = !DILocation(line: 37, column: 44, scope: !7)
!31 = !DILocation(line: 37, column: 30, scope: !7)
!32 = !DILocation(line: 37, column: 61, scope: !7)
!33 = !DILocation(line: 37, column: 54, scope: !7)
!34 = !DILocation(line: 41, column: 18, scope: !7)
!35 = !DILocation(line: 42, column: 39, scope: !7)
!36 = !DILocation(line: 42, column: 58, scope: !7)
!37 = !DILocation(line: 42, column: 36, scope: !7)
!38 = !DILocation(line: 42, column: 54, scope: !7)
!39 = !DILocation(line: 42, column: 31, scope: !7)
!40 = !DILocation(line: 42, column: 70, scope: !7)
!41 = !DILocation(line: 42, column: 63, scope: !7)
!42 = !DILocation(line: 46, column: 20, scope: !7)
!43 = !DILocation(line: 47, column: 36, scope: !7)
!44 = !DILocation(line: 47, column: 54, scope: !7)
!45 = !DILocation(line: 47, column: 31, scope: !7)
!46 = !DILocation(line: 47, column: 71, scope: !7)
!47 = !DILocation(line: 47, column: 63, scope: !7)
!48 = !DILocation(line: 51, column: 20, scope: !7)
!49 = !DILocation(line: 52, column: 36, scope: !7)
!50 = !DILocation(line: 52, column: 54, scope: !7)
!51 = !DILocation(line: 52, column: 31, scope: !7)
!52 = !DILocation(line: 52, column: 71, scope: !7)
!53 = !DILocation(line: 52, column: 63, scope: !7)
!54 = !DILocation(line: 56, column: 20, scope: !7)
!55 = !DILocation(line: 57, column: 36, scope: !7)
!56 = !DILocation(line: 57, column: 54, scope: !7)
!57 = !DILocation(line: 57, column: 31, scope: !7)
!58 = !DILocation(line: 57, column: 71, scope: !7)
!59 = !DILocation(line: 57, column: 63, scope: !7)
!60 = !DILocation(line: 58, column: 20, scope: !7)
!61 = !DILocation(line: 61, column: 36, scope: !7)
!62 = !DILocation(line: 61, column: 54, scope: !7)
!63 = !DILocation(line: 61, column: 31, scope: !7)
!64 = !DILocation(line: 61, column: 71, scope: !7)
!65 = !DILocation(line: 61, column: 63, scope: !7)
!66 = !DILocation(line: 69, column: 20, scope: !7)
!67 = !DILocation(line: 70, column: 27, scope: !7)
!68 = !DILocation(line: 62, column: 35, scope: !7)
!69 = !DILocation(line: 63, column: 35, scope: !7)
!70 = !DILocation(line: 64, column: 35, scope: !7)
!71 = !DILocation(line: 65, column: 34, scope: !7)
!72 = !DILocation(line: 66, column: 33, scope: !7)
!73 = !DILocation(line: 67, column: 20, scope: !7)
!74 = !DILocation(line: 72, column: 20, scope: !7)
!75 = !DILocation(line: 75, column: 20, scope: !7)
!76 = !DILocation(line: 76, column: 20, scope: !7)
!77 = !DILocation(line: 77, column: 20, scope: !7)
!78 = !DILocation(line: 118, column: 15, scope: !79, inlinedAt: !81)
!79 = distinct !DILexicalBlockFile(scope: !7, file: !80, discriminator: 0)
!80 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!81 = !DILocation(line: 79, column: 42, scope: !7)
!82 = !DILocation(line: 121, column: 29, scope: !79, inlinedAt: !81)
!83 = !DILocation(line: 80, column: 25, scope: !7)
!84 = !DILocation(line: 80, column: 37, scope: !7)
!85 = !DILocation(line: 81, column: 25, scope: !7)
!86 = !DILocation(line: 81, column: 37, scope: !7)
!87 = !DILocation(line: 81, column: 4, scope: !7)
