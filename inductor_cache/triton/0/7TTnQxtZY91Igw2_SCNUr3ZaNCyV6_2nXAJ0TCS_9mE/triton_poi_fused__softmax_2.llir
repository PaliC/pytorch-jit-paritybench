; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_2(ptr addrspace(1) %0, double %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 128, !dbg !14
  %12 = shl i32 %10, 2, !dbg !15
  %13 = sext i32 %12 to i64, !dbg !16
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !16
  %15 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %14, i1 %11) #1, !dbg !17
  %16 = bitcast i32 %15 to float, !dbg !17
  %17 = or disjoint i32 %12, 1, !dbg !18
  %18 = sext i32 %17 to i64, !dbg !19
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 %11) #1, !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = or disjoint i32 %12, 2, !dbg !21
  %23 = sext i32 %22 to i64, !dbg !22
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !22
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %11) #1, !dbg !23
  %26 = bitcast i32 %25 to float, !dbg !23
  %27 = or disjoint i32 %12, 3, !dbg !24
  %28 = sext i32 %27 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !25
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #1, !dbg !26
  %31 = bitcast i32 %30 to float, !dbg !26
  %32 = fptrunc double %1 to float, !dbg !27
  %33 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %16, float %32) #1, !dbg !28
  %34 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %21, float %32) #1, !dbg !29
  %35 = fcmp ogt float %33, %34, !dbg !30
  %36 = fcmp uno float %33, 0.000000e+00, !dbg !34
  %37 = or i1 %36, %35, !dbg !35
  %38 = select i1 %37, float %33, float %34, !dbg !36
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %26, float %32) #1, !dbg !37
  %40 = fcmp ogt float %38, %39, !dbg !38
  %41 = fcmp uno float %38, 0.000000e+00, !dbg !40
  %42 = or i1 %40, %41, !dbg !41
  %43 = select i1 %42, float %38, float %39, !dbg !42
  %44 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %31, float %32) #1, !dbg !43
  %45 = fcmp ogt float %43, %44, !dbg !44
  %46 = fcmp uno float %43, 0.000000e+00, !dbg !46
  %47 = or i1 %45, %46, !dbg !47
  %48 = select i1 %47, float %43, float %44, !dbg !48
  %49 = fsub float %33, %48, !dbg !49
  %50 = fmul float %49, 0x3FF7154760000000, !dbg !50
  %51 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %50) #1, !dbg !50
  %52 = fsub float %34, %48, !dbg !51
  %53 = fmul float %52, 0x3FF7154760000000, !dbg !52
  %54 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %53) #1, !dbg !52
  %55 = fadd float %51, %54, !dbg !53
  %56 = fsub float %39, %48, !dbg !54
  %57 = fmul float %56, 0x3FF7154760000000, !dbg !55
  %58 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %57) #1, !dbg !55
  %59 = fadd float %55, %58, !dbg !56
  %60 = fsub float %44, %48, !dbg !57
  %61 = fmul float %60, 0x3FF7154760000000, !dbg !58
  %62 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %61) #1, !dbg !58
  %63 = fadd float %59, %62, !dbg !59
  %64 = sext i32 %10 to i64, !dbg !60
  %65 = getelementptr float, ptr addrspace(1) %2, i64 %64, !dbg !60
  %66 = bitcast float %48 to i32, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %66, ptr addrspace(1) %65, i1 %11) #1, !dbg !61
  %67 = getelementptr float, ptr addrspace(1) %3, i64 %64, !dbg !62
  %68 = bitcast float %63 to i32, !dbg !63
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %68, ptr addrspace(1) %67, i1 %11) #1, !dbg !63
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py", directory: "inductor_cache/jx")
!4 = !{ptr @triton_poi_fused__softmax_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_2", linkageName: "triton_poi_fused__softmax_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 27, column: 34, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 41, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 41, scope: !7)
!24 = !DILocation(line: 29, column: 35, scope: !7)
!25 = !DILocation(line: 29, column: 31, scope: !7)
!26 = !DILocation(line: 29, column: 42, scope: !7)
!27 = !DILocation(line: 30, column: 19, scope: !7)
!28 = !DILocation(line: 31, column: 18, scope: !7)
!29 = !DILocation(line: 32, column: 18, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 33, column: 40, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 34, column: 18, scope: !7)
!38 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !39)
!39 = !DILocation(line: 35, column: 40, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !39)
!43 = !DILocation(line: 36, column: 20, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !45)
!45 = !DILocation(line: 37, column: 41, scope: !7)
!46 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !45)
!47 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !45)
!48 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !45)
!49 = !DILocation(line: 38, column: 19, scope: !7)
!50 = !DILocation(line: 39, column: 24, scope: !7)
!51 = !DILocation(line: 40, column: 19, scope: !7)
!52 = !DILocation(line: 41, column: 24, scope: !7)
!53 = !DILocation(line: 42, column: 20, scope: !7)
!54 = !DILocation(line: 43, column: 19, scope: !7)
!55 = !DILocation(line: 44, column: 24, scope: !7)
!56 = !DILocation(line: 45, column: 20, scope: !7)
!57 = !DILocation(line: 46, column: 20, scope: !7)
!58 = !DILocation(line: 47, column: 24, scope: !7)
!59 = !DILocation(line: 48, column: 20, scope: !7)
!60 = !DILocation(line: 49, column: 25, scope: !7)
!61 = !DILocation(line: 49, column: 37, scope: !7)
!62 = !DILocation(line: 50, column: 25, scope: !7)
!63 = !DILocation(line: 50, column: 37, scope: !7)
!64 = !DILocation(line: 50, column: 4, scope: !7)
