#loc = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":19:0)
module {
  tt.func public @triton_poi_fused__softmax_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":19:0), %arg1: f64 loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<128xi32> loc(#loc6)
    %6 = arith.muli %4, %cst_2 : tensor<128xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc8)
    %9 = tt.load %8, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc9)
    %10 = arith.addi %6, %cst_1 : tensor<128xi32> loc(#loc10)
    %11 = tt.addptr %7, %10 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.addi %6, %cst_0 : tensor<128xi32> loc(#loc13)
    %14 = tt.addptr %7, %13 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc14)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc15)
    %16 = arith.addi %6, %cst : tensor<128xi32> loc(#loc16)
    %17 = tt.addptr %7, %16 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc17)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc18)
    %19 = arith.truncf %arg1 : f64 to f32 loc(#loc19)
    %20 = tt.splat %19 : f32 -> tensor<128xf32> loc(#loc20)
    %21 = arith.divf %9, %20 : tensor<128xf32> loc(#loc20)
    %22 = arith.divf %12, %20 : tensor<128xf32> loc(#loc21)
    %23 = arith.cmpf ogt, %21, %22 : tensor<128xf32> loc(#loc47)
    %24 = arith.cmpf une, %21, %21 : tensor<128xf32> loc(#loc48)
    %25 = arith.ori %23, %24 : tensor<128xi1> loc(#loc49)
    %26 = arith.select %25, %21, %22 : tensor<128xi1>, tensor<128xf32> loc(#loc50)
    %27 = arith.divf %15, %20 : tensor<128xf32> loc(#loc27)
    %28 = arith.cmpf ogt, %26, %27 : tensor<128xf32> loc(#loc51)
    %29 = arith.cmpf une, %26, %26 : tensor<128xf32> loc(#loc52)
    %30 = arith.ori %28, %29 : tensor<128xi1> loc(#loc53)
    %31 = arith.select %30, %26, %27 : tensor<128xi1>, tensor<128xf32> loc(#loc54)
    %32 = arith.divf %18, %20 : tensor<128xf32> loc(#loc29)
    %33 = arith.cmpf ogt, %31, %32 : tensor<128xf32> loc(#loc55)
    %34 = arith.cmpf une, %31, %31 : tensor<128xf32> loc(#loc56)
    %35 = arith.ori %33, %34 : tensor<128xi1> loc(#loc57)
    %36 = arith.select %35, %31, %32 : tensor<128xi1>, tensor<128xf32> loc(#loc58)
    %37 = arith.subf %21, %36 : tensor<128xf32> loc(#loc31)
    %38 = math.exp %37 : tensor<128xf32> loc(#loc32)
    %39 = arith.subf %22, %36 : tensor<128xf32> loc(#loc33)
    %40 = math.exp %39 : tensor<128xf32> loc(#loc34)
    %41 = arith.addf %38, %40 : tensor<128xf32> loc(#loc35)
    %42 = arith.subf %27, %36 : tensor<128xf32> loc(#loc36)
    %43 = math.exp %42 : tensor<128xf32> loc(#loc37)
    %44 = arith.addf %41, %43 : tensor<128xf32> loc(#loc38)
    %45 = arith.subf %32, %36 : tensor<128xf32> loc(#loc39)
    %46 = math.exp %45 : tensor<128xf32> loc(#loc40)
    %47 = arith.addf %44, %46 : tensor<128xf32> loc(#loc41)
    %48 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc42)
    %49 = tt.addptr %48, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc42)
    tt.store %49, %36, %5 : tensor<128x!tt.ptr<f32>> loc(#loc43)
    %50 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc44)
    %51 = tt.addptr %50, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc44)
    tt.store %51, %47, %5 : tensor<128x!tt.ptr<f32>> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":21:28)
#loc3 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":21:33)
#loc4 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":22:36)
#loc5 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":22:23)
#loc6 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":23:21)
#loc7 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":25:32)
#loc8 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":25:30)
#loc9 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":25:37)
#loc10 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":27:34)
#loc11 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":27:30)
#loc12 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":27:41)
#loc13 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":28:34)
#loc14 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":28:30)
#loc15 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":28:41)
#loc16 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":29:35)
#loc17 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":29:31)
#loc18 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":29:42)
#loc19 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":30:19)
#loc20 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":31:18)
#loc21 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":32:18)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc23 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":33:40)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc27 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":34:18)
#loc28 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":35:40)
#loc29 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":36:20)
#loc30 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":37:41)
#loc31 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":38:19)
#loc32 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":39:24)
#loc33 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":40:19)
#loc34 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":41:24)
#loc35 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":42:20)
#loc36 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":43:19)
#loc37 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":44:24)
#loc38 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":45:20)
#loc39 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":46:20)
#loc40 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":47:24)
#loc41 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":48:20)
#loc42 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":49:25)
#loc43 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":49:37)
#loc44 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":50:25)
#loc45 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":50:37)
#loc46 = loc("inductor_cache/jx/cjxtq2qwcbs22eczrwtd2mmrqitdo5462vqu3k3tfdtty3v2vn5v.py":50:4)
#loc47 = loc(callsite(#loc22 at #loc23))
#loc48 = loc(callsite(#loc24 at #loc23))
#loc49 = loc(callsite(#loc25 at #loc23))
#loc50 = loc(callsite(#loc26 at #loc23))
#loc51 = loc(callsite(#loc22 at #loc28))
#loc52 = loc(callsite(#loc24 at #loc28))
#loc53 = loc(callsite(#loc25 at #loc28))
#loc54 = loc(callsite(#loc26 at #loc28))
#loc55 = loc(callsite(#loc22 at #loc30))
#loc56 = loc(callsite(#loc24 at #loc30))
#loc57 = loc(callsite(#loc25 at #loc30))
#loc58 = loc(callsite(#loc26 at #loc30))
