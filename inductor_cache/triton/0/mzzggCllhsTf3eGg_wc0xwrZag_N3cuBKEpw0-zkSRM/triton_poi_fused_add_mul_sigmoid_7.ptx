//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_sigmoid_7 // -- Begin function triton_poi_fused_add_mul_sigmoid_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_mul_sigmoid_7
.visible .entry triton_poi_fused_add_mul_sigmoid_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_sigmoid_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_sigmoid_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_sigmoid_7_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_sigmoid_7_param_3,
	.param .u32 triton_poi_fused_add_mul_sigmoid_7_param_4,
	.param .u32 triton_poi_fused_add_mul_sigmoid_7_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<125>;
	.reg .f32 	%f<46>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:19:0

// %bb.0:
	ld.param.u64 	%rd15, [triton_poi_fused_add_mul_sigmoid_7_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused_add_mul_sigmoid_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:22:33
	shl.b32 	%r57, %r1, 5;
	ld.param.u64 	%rd17, [triton_poi_fused_add_mul_sigmoid_7_param_2];
	.loc	1 23 44                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:23:44
	mov.u32 	%r58, %tid.x;
	ld.param.u64 	%rd18, [triton_poi_fused_add_mul_sigmoid_7_param_3];
	bfe.u32 	%r60, %r58, 3, 4;
	or.b32  	%r61, %r60, 16;
	shl.b32 	%r62, %r58, 2;
	and.b32  	%r63, %r62, 28;
	.loc	1 23 23                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:23:23
	or.b32  	%r64, %r57, %r60;
	or.b32  	%r65, %r57, %r61;
	or.b32  	%r66, %r57, %r63;
	.loc	1 25 28                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:25:33
	shl.b32 	%r67, %r2, 5;
	.loc	1 26 23                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:26:23
	or.b32  	%r68, %r67, %r63;
	or.b32  	%r69, %r67, %r60;
	or.b32  	%r70, %r67, %r61;
	.loc	1 27 21                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:27:21
	setp.lt.s32 	%p9, %r68, 512;
	setp.lt.s32 	%p21, %r69, 512;
	setp.lt.s32 	%p22, %r70, 512;
	.loc	1 30 19                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:30:19
	bfe.s32 	%r71, %r1, 26, 1;
	shr.u32 	%r72, %r71, 20;
	add.s32 	%r73, %r64, %r72;
	shr.s32 	%r74, %r73, 12;
	add.s32 	%r75, %r65, %r72;
	shr.s32 	%r76, %r75, 12;
	add.s32 	%r77, %r66, %r72;
	.loc	1 31 19                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:31:19
	and.b32  	%r78, %r77, -4096;
	sub.s32 	%r79, %r66, %r78;
	.loc	1 32 30                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:32:30
	mul.wide.s32 	%rd19, %r64, 4;
	add.s64 	%rd1, %rd15, %rd19;
	cvt.s64.s32 	%rd20, %r57;
	cvt.u64.u32 	%rd21, %r60;
	or.b64  	%rd22, %rd20, %rd21;
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd24, %rd15, %rd23;
	add.s64 	%rd5, %rd24, 64;
	mov.pred 	%p1, -1;
	.loc	1 32 35                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:32:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r10;
	.loc	1 33 39                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:33:39
	shl.b32 	%r80, %r64, 9;
	shl.b32 	%r81, %r65, 9;
	.loc	1 33 35                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:33:35
	add.s32 	%r82, %r68, %r80;
	add.s32 	%r83, %r68, %r81;
	.loc	1 33 30                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:33:30
	mul.wide.s32 	%rd25, %r82, 4;
	add.s64 	%rd9, %rd16, %rd25;
	mul.wide.s32 	%rd26, %r83, 4;
	add.s64 	%rd10, %rd16, %rd26;
	.loc	1 33 44                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:33:44
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r11;
	mov.b32 	%f8, %r12;
	mov.b32 	%f9, %r13;
	mov.b32 	%f10, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r15;
	mov.b32 	%f12, %r16;
	mov.b32 	%f13, %r17;
	mov.b32 	%f14, %r18;
	.loc	1 34 39                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:34:39
	shl.b32 	%r84, %r74, 9;
	shl.b32 	%r85, %r76, 9;
	.loc	1 34 35                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:34:35
	add.s32 	%r86, %r84, %r68;
	add.s32 	%r87, %r85, %r68;
	.loc	1 34 30                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:34:30
	mul.wide.s32 	%rd27, %r86, 4;
	add.s64 	%rd11, %rd17, %rd27;
	mul.wide.s32 	%rd28, %r87, 4;
	add.s64 	%rd12, %rd17, %rd28;
	.loc	1 34 44                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:34:44
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r19;
	mov.b32 	%f16, %r20;
	mov.b32 	%f17, %r21;
	mov.b32 	%f18, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p9 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r23;
	mov.b32 	%f20, %r24;
	mov.b32 	%f21, %r25;
	mov.b32 	%f22, %r26;
	mov.f32 	%f23, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f24, %f23, %f5;
	sub.f32 	%f25, %f23, %f6;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f24, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f25, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f26, %f1, 0f3F800000;
	add.f32 	%f27, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r29, %f26;
	mov.b32 	%r28, 1065353216;
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f28, %r27;
	mov.b32 	%r32, %f27;
	// begin inline asm
	div.full.f32 %r30, %r28, %r32;
	// end inline asm
	mov.b32 	%f29, %r30;
$L__tmp2:
	.loc	1 36 18                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:36:18
	mul.f32 	%f30, %f28, %f7;
	mul.f32 	%f31, %f28, %f8;
	mul.f32 	%f32, %f28, %f9;
	mul.f32 	%f33, %f28, %f10;
	mul.f32 	%f34, %f29, %f11;
	mul.f32 	%f35, %f29, %f12;
	mul.f32 	%f36, %f29, %f13;
	mul.f32 	%f37, %f29, %f14;
	.loc	1 38 18                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:38:18
	fma.rn.f32 	%f38, %f7, %f15, %f30;
	fma.rn.f32 	%f39, %f8, %f16, %f31;
	fma.rn.f32 	%f40, %f9, %f17, %f32;
	fma.rn.f32 	%f41, %f10, %f18, %f33;
	fma.rn.f32 	%f42, %f11, %f19, %f34;
	fma.rn.f32 	%f43, %f12, %f20, %f35;
	fma.rn.f32 	%f44, %f13, %f21, %f36;
	fma.rn.f32 	%f45, %f14, %f22, %f37;
	.loc	1 39 35                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:39:35
	shl.b32 	%r88, %r69, 12;
	shl.b32 	%r89, %r70, 12;
	.loc	1 39 48                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:39:48
	shl.b32 	%r90, %r77, 9;
	and.b32  	%r91, %r90, -2097152;
	.loc	1 39 30                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:39:30
	add.s32 	%r92, %r91, %r79;
	.loc	1 39 40                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:39:40
	add.s32 	%r93, %r92, %r88;
	add.s32 	%r94, %r92, %r89;
	.loc	1 39 25                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:39:25
	mul.wide.s32 	%rd29, %r93, 4;
	add.s64 	%rd13, %rd18, %rd29;
	mul.wide.s32 	%rd30, %r94, 4;
	add.s64 	%rd14, %rd18, %rd30;
	.loc	1 39 59                         // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:39:59
	shl.b32 	%r95, %r58, 7;
	and.b32  	%r96, %r95, 896;
	or.b32  	%r97, %r96, %r60;
	and.b32  	%r98, %r62, 508;
	shr.u32 	%r99, %r96, 1;
	mov.u32 	%r100, global_smem;
	add.s32 	%r101, %r100, %r99;
	shl.b32 	%r102, %r97, 2;
	add.s32 	%r33, %r101, %r102;
	mov.b32 	%r34, %f38;
	// begin inline asm
	@%p1 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	or.b32  	%r103, %r96, 32;
	shr.u32 	%r104, %r103, 1;
	add.s32 	%r105, %r100, %r104;
	add.s32 	%r106, %r105, %r102;
	add.s32 	%r35, %r106, 128;
	mov.b32 	%r36, %f39;
	// begin inline asm
	@%p1 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	or.b32  	%r107, %r96, 64;
	shr.u32 	%r108, %r107, 1;
	add.s32 	%r109, %r100, %r108;
	add.s32 	%r110, %r109, %r102;
	add.s32 	%r37, %r110, 256;
	mov.b32 	%r38, %f40;
	// begin inline asm
	@%p1 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	or.b32  	%r111, %r96, 96;
	shr.u32 	%r112, %r111, 1;
	add.s32 	%r113, %r100, %r112;
	add.s32 	%r114, %r113, %r102;
	add.s32 	%r39, %r114, 384;
	mov.b32 	%r40, %f41;
	// begin inline asm
	@%p1 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r33, 64;
	mov.b32 	%r42, %f42;
	// begin inline asm
	@%p1 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r106, 192;
	mov.b32 	%r44, %f43;
	// begin inline asm
	@%p1 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r110, 320;
	mov.b32 	%r46, %f44;
	// begin inline asm
	@%p1 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r114, 448;
	mov.b32 	%r48, %f45;
	// begin inline asm
	@%p1 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r115, %r58, 1;
	and.b32  	%r116, %r115, 240;
	add.s32 	%r117, %r100, %r116;
	shl.b32 	%r118, %r98, 2;
	add.s32 	%r119, %r117, %r118;
	or.b32  	%r120, %r98, 512;
	shr.u32 	%r121, %r120, 1;
	and.b32  	%r122, %r121, 496;
	add.s32 	%r123, %r100, %r122;
	add.s32 	%r124, %r123, %r118;
	ld.shared.v4.u32 	{%r53, %r54, %r55, %r56}, [%r124+2048];
	ld.shared.v4.u32 	{%r49, %r50, %r51, %r52}, [%r119];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd13 + 0 ], { %r49, %r50, %r51, %r52 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd14 + 0 ], { %r53, %r54, %r55, %r56 };
	// end inline asm
	.loc	1 39 4                          // cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/b5/cb5bxsnzq7b2lpf7hmgdz3chuzcyhdyyfigw6y3tqjos6t2ri72v.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 179                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xac DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 53
.b8 98
.b8 120
.b8 115
.b8 110
.b8 122
.b8 113
.b8 55
.b8 98
.b8 50
.b8 108
.b8 112
.b8 102
.b8 55
.b8 104
.b8 109
.b8 103
.b8 100
.b8 122
.b8 51
.b8 99
.b8 104
.b8 117
.b8 122
.b8 99
.b8 121
.b8 104
.b8 100
.b8 121
.b8 121
.b8 102
.b8 105
.b8 103
.b8 119
.b8 54
.b8 121
.b8 51
.b8 116
.b8 113
.b8 106
.b8 111
.b8 115
.b8 54
.b8 116
.b8 50
.b8 114
.b8 105
.b8 55
.b8 50
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x25 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x88:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9d:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
