//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__log_softmax__softmax_5 // -- Begin function triton_red_fused__log_softmax__softmax_5
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused__log_softmax__softmax_5
.visible .entry triton_red_fused__log_softmax__softmax_5(
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_5_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_5_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_5_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_5_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__log_softmax__softmax_5_param_4,
	.param .u32 triton_red_fused__log_softmax__softmax_5_param_5,
	.param .u32 triton_red_fused__log_softmax__softmax_5_param_6
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<43>;
	.reg .b32 	%r<96>;
	.reg .f32 	%f<180>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:19:0

// %bb.0:                               // %__nv_logf.exit
	ld.param.u64 	%rd2, [triton_red_fused__log_softmax__softmax_5_param_4];
	ld.param.u64 	%rd1, [triton_red_fused__log_softmax__softmax_5_param_0];
$L__tmp0:
	.loc	1 22 28                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:22:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd15, [triton_red_fused__log_softmax__softmax_5_param_1];
	.loc	1 24 21                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:24:21
	setp.lt.s32 	%p15, %r4, 16;
	ld.param.u64 	%rd16, [triton_red_fused__log_softmax__softmax_5_param_2];
	.loc	1 27 19                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:27:19
	shr.s32 	%r17, %r4, 31;
	shr.u32 	%r18, %r17, 30;
	add.s32 	%r19, %r4, %r18;
	shr.s32 	%r20, %r19, 2;
	ld.param.u64 	%rd17, [triton_red_fused__log_softmax__softmax_5_param_3];
	.loc	1 28 30                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:28:30
	mul.wide.s32 	%rd18, %r20, 4;
	add.s64 	%rd3, %rd15, %rd18;
	.loc	1 28 35                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:28:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r8 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:29:30
	add.s64 	%rd7, %rd16, %rd18;
	.loc	1 29 35                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:29:35
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r10 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r12 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r12;
	.loc	1 30 30                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:30:30
	add.s64 	%rd11, %rd17, %rd18;
	.loc	1 30 35                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:30:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r14 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r15 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r16 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 38 27                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:38:27
	setp.lt.f32 	%p13, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32 	%f1, %f6, %f5, %p13;
	selp.f32 	%f7, 0fC1B80000, 0f00000000, %p13;
	mov.b32 	%r21, %f1;
	add.s32 	%r22, %r21, -1059760811;
	and.b32  	%r23, %r22, -8388608;
	sub.s32 	%r24, %r21, %r23;
	mov.b32 	%f8, %r24;
	cvt.rn.f32.s32 	%f9, %r23;
	mov.f32 	%f10, 0f34000000;
	fma.rn.ftz.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.ftz.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.ftz.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.ftz.f32 	%f29, %f27, %f12, %f28;
	mul.f32 	%f30, %f12, %f29;
	fma.rn.ftz.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.ftz.f32 	%f179, %f11, %f32, %f31;
	setp.lt.u32 	%p14, %r21, 2139095040;
	@%p14 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i87
	.loc	1 0 27                          // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:0:27
	mov.f32 	%f33, 0f7F800000;
	fma.rn.ftz.f32 	%f179, %f1, %f33, %f33;
$L__BB0_2:                              // %__nv_logf.exit90
	.loc	1 36 44                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:44
	mul.lo.s32 	%r64, %r4, 8032;
	.loc	1 30 35                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:30:35
	mov.b32 	%f66, %r16;
	.loc	1 28 35                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:28:35
	mov.b32 	%f67, %r8;
	.loc	1 25 33                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:25:33
	mov.u32 	%r65, %tid.x;
	shl.b32 	%r66, %r65, 2;
	and.b32  	%r67, %r66, 2044;
	.loc	1 38 27                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:38:27
	setp.eq.f32 	%p39, %f1, 0f00000000;
	selp.f32 	%f68, 0fFF800000, %f179, %p39;
	.loc	1 36 39                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:39
	add.s32 	%r68, %r67, %r64;
	.loc	1 36 34                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:34
	mul.wide.s32 	%rd24, %r68, 4;
	add.s64 	%rd19, %rd1, %rd24;
	mov.b32 	%r29, 0;
	.loc	1 36 49                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:49
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p15 ld.global.L1::evict_first.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd19 + 0 ];
	@!%p15 mov.u32 %r25, %r29;
	@!%p15 mov.u32 %r26, %r29;
	@!%p15 mov.u32 %r27, %r29;
	@!%p15 mov.u32 %r28, %r29;
	// end inline asm
	mov.b32 	%f69, %r25;
	mov.b32 	%f70, %r26;
	mov.b32 	%f71, %r27;
	mov.b32 	%f72, %r28;
	.loc	1 37 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:37:22
	sub.f32 	%f73, %f69, %f67;
	sub.f32 	%f74, %f70, %f67;
	sub.f32 	%f75, %f71, %f67;
	sub.f32 	%f76, %f72, %f67;
	.loc	1 39 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:39:22
	sub.f32 	%f77, %f73, %f68;
	sub.f32 	%f78, %f74, %f68;
	sub.f32 	%f79, %f75, %f68;
	sub.f32 	%f80, %f76, %f68;
	.loc	1 42 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:42:22
	sub.f32 	%f81, %f77, %f66;
	sub.f32 	%f82, %f78, %f66;
	sub.f32 	%f83, %f79, %f66;
	sub.f32 	%f84, %f80, %f66;
	.loc	1 44 28                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:44:28
	mul.f32 	%f35, %f81, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f34, %f35;
	// end inline asm
	mul.f32 	%f37, %f82, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f36, %f37;
	// end inline asm
	mul.f32 	%f39, %f83, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f38, %f39;
	// end inline asm
	mul.f32 	%f41, %f84, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f40, %f41;
	// end inline asm
	.loc	1 46 25                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:46:25
	add.f32 	%f85, %f34, 0f00000000;
	add.f32 	%f86, %f36, 0f00000000;
	add.f32 	%f87, %f38, 0f00000000;
	add.f32 	%f88, %f40, 0f00000000;
	.loc	1 36 39                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:39
	add.s32 	%r69, %r68, 2048;
	.loc	1 36 34                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:34
	mul.wide.s32 	%rd25, %r69, 4;
	add.s64 	%rd20, %rd1, %rd25;
	.loc	1 36 49                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:49
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p15 ld.global.L1::evict_first.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd20 + 0 ];
	@!%p15 mov.u32 %r33, %r29;
	@!%p15 mov.u32 %r34, %r29;
	@!%p15 mov.u32 %r35, %r29;
	@!%p15 mov.u32 %r36, %r29;
	// end inline asm
	mov.b32 	%f89, %r33;
	mov.b32 	%f90, %r34;
	mov.b32 	%f91, %r35;
	mov.b32 	%f92, %r36;
	.loc	1 37 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:37:22
	sub.f32 	%f93, %f89, %f67;
	sub.f32 	%f94, %f90, %f67;
	sub.f32 	%f95, %f91, %f67;
	sub.f32 	%f96, %f92, %f67;
	.loc	1 39 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:39:22
	sub.f32 	%f97, %f93, %f68;
	sub.f32 	%f98, %f94, %f68;
	sub.f32 	%f99, %f95, %f68;
	sub.f32 	%f100, %f96, %f68;
	.loc	1 42 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:42:22
	sub.f32 	%f101, %f97, %f66;
	sub.f32 	%f102, %f98, %f66;
	sub.f32 	%f103, %f99, %f66;
	sub.f32 	%f104, %f100, %f66;
	.loc	1 44 28                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:44:28
	mul.f32 	%f43, %f101, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f42, %f43;
	// end inline asm
	mul.f32 	%f45, %f102, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f44, %f45;
	// end inline asm
	mul.f32 	%f47, %f103, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f46, %f47;
	// end inline asm
	mul.f32 	%f49, %f104, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f48, %f49;
	// end inline asm
	.loc	1 46 25                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:46:25
	add.f32 	%f105, %f85, %f42;
	add.f32 	%f106, %f86, %f44;
	add.f32 	%f107, %f87, %f46;
	add.f32 	%f108, %f88, %f48;
	.loc	1 36 39                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:39
	add.s32 	%r70, %r68, 4096;
	.loc	1 36 34                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:34
	mul.wide.s32 	%rd26, %r70, 4;
	add.s64 	%rd21, %rd1, %rd26;
	.loc	1 36 49                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:49
	// begin inline asm
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	@%p15 ld.global.L1::evict_first.v4.b32 { %r41, %r42, %r43, %r44 }, [ %rd21 + 0 ];
	@!%p15 mov.u32 %r41, %r29;
	@!%p15 mov.u32 %r42, %r29;
	@!%p15 mov.u32 %r43, %r29;
	@!%p15 mov.u32 %r44, %r29;
	// end inline asm
	mov.b32 	%f109, %r41;
	mov.b32 	%f110, %r42;
	mov.b32 	%f111, %r43;
	mov.b32 	%f112, %r44;
	.loc	1 37 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:37:22
	sub.f32 	%f113, %f109, %f67;
	sub.f32 	%f114, %f110, %f67;
	sub.f32 	%f115, %f111, %f67;
	sub.f32 	%f116, %f112, %f67;
	.loc	1 39 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:39:22
	sub.f32 	%f117, %f113, %f68;
	sub.f32 	%f118, %f114, %f68;
	sub.f32 	%f119, %f115, %f68;
	sub.f32 	%f120, %f116, %f68;
	.loc	1 42 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:42:22
	sub.f32 	%f121, %f117, %f66;
	sub.f32 	%f122, %f118, %f66;
	sub.f32 	%f123, %f119, %f66;
	sub.f32 	%f124, %f120, %f66;
	.loc	1 44 28                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:44:28
	mul.f32 	%f51, %f121, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f50, %f51;
	// end inline asm
	mul.f32 	%f53, %f122, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f52, %f53;
	// end inline asm
	mul.f32 	%f55, %f123, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f54, %f55;
	// end inline asm
	mul.f32 	%f57, %f124, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f56, %f57;
	// end inline asm
	.loc	1 46 25                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:46:25
	add.f32 	%f125, %f105, %f50;
	add.f32 	%f126, %f106, %f52;
	add.f32 	%f127, %f107, %f54;
	add.f32 	%f128, %f108, %f56;
	.loc	1 47 48                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:47:48
	selp.f32 	%f129, %f125, 0f00000000, %p15;
	selp.f32 	%f130, %f126, 0f00000000, %p15;
	selp.f32 	%f131, %f127, 0f00000000, %p15;
	selp.f32 	%f132, %f128, 0f00000000, %p15;
	.loc	1 33 27                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:33:27
	or.b32  	%r71, %r67, 6144;
	.loc	1 34 25                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:34:25
	setp.lt.u32 	%p40, %r71, 8032;
	.loc	1 36 39                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:39
	add.s32 	%r72, %r71, %r64;
	.loc	1 36 34                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:34
	mul.wide.s32 	%rd27, %r72, 4;
	add.s64 	%rd22, %rd1, %rd27;
	.loc	1 36 57                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:57
	and.pred  	%p30, %p15, %p40;
	.loc	1 36 49                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:36:49
	// begin inline asm
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	@%p30 ld.global.L1::evict_first.v4.b32 { %r49, %r50, %r51, %r52 }, [ %rd22 + 0 ];
	@!%p30 mov.u32 %r49, %r29;
	@!%p30 mov.u32 %r50, %r29;
	@!%p30 mov.u32 %r51, %r29;
	@!%p30 mov.u32 %r52, %r29;
	// end inline asm
	mov.b32 	%f133, %r49;
	mov.b32 	%f134, %r50;
	mov.b32 	%f135, %r51;
	mov.b32 	%f136, %r52;
	.loc	1 37 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:37:22
	sub.f32 	%f137, %f133, %f67;
	sub.f32 	%f138, %f134, %f67;
	sub.f32 	%f139, %f135, %f67;
	sub.f32 	%f140, %f136, %f67;
	.loc	1 39 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:39:22
	sub.f32 	%f141, %f137, %f68;
	sub.f32 	%f142, %f138, %f68;
	sub.f32 	%f143, %f139, %f68;
	sub.f32 	%f144, %f140, %f68;
	.loc	1 42 22                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:42:22
	sub.f32 	%f145, %f141, %f66;
	sub.f32 	%f146, %f142, %f66;
	sub.f32 	%f147, %f143, %f66;
	sub.f32 	%f148, %f144, %f66;
	.loc	1 44 28                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:44:28
	mul.f32 	%f59, %f145, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f58, %f59;
	// end inline asm
	mul.f32 	%f61, %f146, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f60, %f61;
	// end inline asm
	mul.f32 	%f63, %f147, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f62, %f63;
	// end inline asm
	mul.f32 	%f65, %f148, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f64, %f65;
	// end inline asm
	.loc	1 46 25                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:46:25
	add.f32 	%f149, %f129, %f58;
	add.f32 	%f150, %f130, %f60;
	add.f32 	%f151, %f131, %f62;
	add.f32 	%f152, %f132, %f64;
	.loc	1 47 48                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:47:48
	selp.f32 	%f153, %f149, %f129, %p30;
	selp.f32 	%f154, %f150, %f130, %p30;
	selp.f32 	%f155, %f151, %f131, %p30;
	selp.f32 	%f156, %f152, %f132, %p30;
	.loc	1 25 33                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:25:33
	and.b32  	%r73, %r65, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f157, %f153, %f154;
	add.f32 	%f158, %f155, %f157;
	add.f32 	%f159, %f156, %f158;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f159;
	shfl.sync.bfly.b32	%r75, %r74, 16, 31, -1;
	mov.b32 	%f160, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f161, %f159, %f160;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f161;
	shfl.sync.bfly.b32	%r77, %r76, 8, 31, -1;
	mov.b32 	%f162, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f163, %f161, %f162;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f163;
	shfl.sync.bfly.b32	%r79, %r78, 4, 31, -1;
	mov.b32 	%f164, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f165, %f163, %f164;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f165;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f166, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f165, %f166;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f167;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f168, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f169, %f167, %f168;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p35, %r73, 0;
	shr.u32 	%r84, %r65, 3;
	and.b32  	%r85, %r84, 60;
	mov.u32 	%r86, global_smem;
	add.s32 	%r57, %r86, %r85;
	mov.b32 	%r58, %f169;
	// begin inline asm
	@%p35 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p36, %r65, 16;
	add.s32 	%r60, %r86, %r66;
	// begin inline asm
	@%p36 ld.shared.b32 %r59, [ %r60 + 0 ];
	// end inline asm
	mov.b32 	%f170, %r59;
	shfl.sync.bfly.b32	%r87, %r59, 8, 31, -1;
	mov.b32 	%f171, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f172, %f170, %f171;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f172;
	shfl.sync.bfly.b32	%r89, %r88, 4, 31, -1;
	mov.b32 	%f173, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f174, %f172, %f173;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f174;
	shfl.sync.bfly.b32	%r91, %r90, 2, 31, -1;
	mov.b32 	%f175, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f176, %f174, %f175;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f176;
	shfl.sync.bfly.b32	%r93, %r92, 1, 31, -1;
	mov.b32 	%f177, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f178, %f176, %f177;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r94, %r65, 15;
	setp.eq.s32 	%p41, %r94, 0;
	and.pred  	%p37, %p36, %p41;
	mov.b32 	%r62, %f178;
	// begin inline asm
	@%p37 st.shared.b32 [ %r60 + 0 ], %r62;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r63, [global_smem];
$L__tmp2:
	.loc	1 49 25                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:49:25
	mul.wide.s32 	%rd28, %r4, 4;
	add.s64 	%rd23, %rd2, %rd28;
	.loc	1 49 37                         // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:49:37
	and.b32  	%r95, %r65, 511;
	setp.eq.s32 	%p42, %r95, 0;
	and.pred  	%p38, %p42, %p15;
	// begin inline asm
	@%p38 st.global.b32 [ %rd23 + 0 ], { %r63 };
	// end inline asm
	.loc	1 49 4                          // cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py:49:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/b3/cb3mavffvx7wffgset7uffq7vh2jhagqumi4cqz4nkngihvrqjii.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 185                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 51
.b8 109
.b8 97
.b8 118
.b8 102
.b8 102
.b8 118
.b8 120
.b8 55
.b8 119
.b8 102
.b8 102
.b8 103
.b8 115
.b8 101
.b8 116
.b8 55
.b8 117
.b8 102
.b8 102
.b8 113
.b8 55
.b8 118
.b8 104
.b8 50
.b8 106
.b8 104
.b8 97
.b8 103
.b8 113
.b8 117
.b8 109
.b8 105
.b8 52
.b8 99
.b8 113
.b8 122
.b8 52
.b8 110
.b8 107
.b8 110
.b8 103
.b8 105
.b8 104
.b8 118
.b8 114
.b8 113
.b8 106
.b8 105
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 51
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
