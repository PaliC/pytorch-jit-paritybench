//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__softmax_7 // -- Begin function triton_red_fused__softmax_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__softmax_7
.visible .entry triton_red_fused__softmax_7(
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax_7_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax_7_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax_7_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__softmax_7_param_3,
	.param .u32 triton_red_fused__softmax_7_param_4,
	.param .u32 triton_red_fused__softmax_7_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<108>;
	.reg .f32 	%f<64>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused__softmax_7_param_3];
	ld.param.u64 	%rd3, [triton_red_fused__softmax_7_param_0];
	ld.param.u64 	%rd8, [triton_red_fused__softmax_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:22:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:22:33
	shl.b32 	%r1, %r8, 6;
	ld.param.u64 	%rd9, [triton_red_fused__softmax_7_param_2];
	.loc	1 23 44                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:23:44
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r17, %r2, 2;
	and.b32  	%r3, %r17, 60;
	.loc	1 23 23                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:23:23
	or.b32  	%r4, %r1, %r3;
	.loc	1 24 21                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:24:21
	setp.lt.s32 	%p1, %r4, 128;
	.loc	1 27 19                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:27:19
	shr.s32 	%r19, %r4, 31;
	shr.u32 	%r20, %r19, 28;
	add.s32 	%r21, %r4, %r20;
	shr.s32 	%r22, %r21, 4;
	.loc	1 26 19                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:26:19
	and.b32  	%r23, %r21, -16;
	sub.s32 	%r24, %r4, %r23;
	.loc	1 28 19                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:28:19
	bfe.s32 	%r25, %r8, 25, 1;
	shr.u32 	%r26, %r25, 27;
	add.s32 	%r27, %r4, %r26;
	shr.s32 	%r28, %r27, 5;
	.loc	1 29 38                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:29:38
	shl.b32 	%r29, %r28, 4;
	.loc	1 29 35                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:29:35
	add.s32 	%r30, %r29, %r24;
	.loc	1 29 30                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:29:30
	mul.wide.s32 	%rd10, %r30, 4;
	add.s64 	%rd5, %rd8, %rd10;
	.loc	1 29 43                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:29:43
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r9;
	mov.b32 	%f2, %r10;
	mov.b32 	%f3, %r11;
	mov.b32 	%f4, %r12;
	.loc	1 30 30                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:30:30
	add.s64 	%rd6, %rd9, %rd10;
	.loc	1 30 43                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:30:43
	// begin inline asm
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	mov.u32 %r106, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r103, %r104, %r105, %r106 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r103;
	mov.b32 	%f6, %r104;
	mov.b32 	%f7, %r105;
	mov.b32 	%f8, %r106;
	and.b32  	%r31, %r2, 112;
	.loc	1 33 36                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:33:36
	mad.lo.s32 	%r32, %r22, 2032, %r4;
	add.s32 	%r107, %r32, %r31;
	mov.f32 	%f60, 0f00000000;
	mov.u64 	%rd15, -8;
	mov.f32 	%f61, %f60;
	mov.f32 	%f62, %f60;
	mov.f32 	%f63, %f60;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 37 34                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:37:34
	mul.wide.s32 	%rd12, %r107, 4;
	add.s64 	%rd11, %rd3, %rd12;
	mov.b32 	%r37, 0;
	.loc	1 37 57                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:37:57
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r33, %r34, %r35, %r36 }, [ %rd11 + 0 ];
	@!%p1 mov.u32 %r33, %r37;
	@!%p1 mov.u32 %r34, %r37;
	@!%p1 mov.u32 %r35, %r37;
	@!%p1 mov.u32 %r36, %r37;
	// end inline asm
	mov.b32 	%f26, %r33;
	mov.b32 	%f27, %r34;
	mov.b32 	%f28, %r35;
	mov.b32 	%f29, %r36;
	.loc	1 38 22                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:38:22
	sub.f32 	%f30, %f26, %f1;
	sub.f32 	%f31, %f27, %f2;
	sub.f32 	%f32, %f28, %f3;
	sub.f32 	%f33, %f29, %f4;
	.loc	1 39 22                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:39:22
	mov.b32 	%r42, %f30;
	// begin inline asm
	div.full.f32 %r41, %r42, %r103;
	// end inline asm
	mov.b32 	%f34, %r41;
	mov.b32 	%r45, %f31;
	// begin inline asm
	div.full.f32 %r44, %r45, %r104;
	// end inline asm
	mov.b32 	%f35, %r44;
	mov.b32 	%r48, %f32;
	// begin inline asm
	div.full.f32 %r47, %r48, %r105;
	// end inline asm
	mov.b32 	%f36, %r47;
	mov.b32 	%r51, %f33;
	// begin inline asm
	div.full.f32 %r50, %r51, %r106;
	// end inline asm
	mov.b32 	%f37, %r50;
	.loc	1 40 27                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:40:27
	mul.f32 	%f19, %f34, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f18, %f19;
	// end inline asm
	mul.f32 	%f21, %f35, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f20, %f21;
	// end inline asm
	mul.f32 	%f23, %f36, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f22, %f23;
	// end inline asm
	mul.f32 	%f25, %f37, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f24, %f25;
	// end inline asm
	.loc	1 42 23                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:42:23
	add.f32 	%f38, %f60, %f18;
	add.f32 	%f39, %f61, %f20;
	add.f32 	%f40, %f62, %f22;
	add.f32 	%f41, %f63, %f24;
	.loc	1 43 46                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:43:46
	selp.f32 	%f60, %f38, %f60, %p1;
	selp.f32 	%f61, %f39, %f61, %p1;
	selp.f32 	%f62, %f40, %f62, %p1;
	selp.f32 	%f63, %f41, %f63, %p1;
	.loc	1 33 36                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:33:36
	add.s64 	%rd15, %rd15, 8;
	add.s32 	%r107, %r107, 128;
	setp.lt.u64 	%p8, %rd15, 120;
	@%p8 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:23:44
	and.b32  	%r75, %r2, 63;
	.loc	1 23 23                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:23:23
	or.b32  	%r76, %r1, %r75;
	.loc	1 24 21                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:24:21
	setp.lt.s32 	%p19, %r76, 128;
	.loc	1 23 44                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:23:44
	and.b32  	%r77, %r2, 16;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f60;
	shfl.sync.bfly.b32	%r79, %r78, 16, 31, -1;
	mov.b32 	%f42, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f60, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f61;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f44, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f61, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f62;
	shfl.sync.bfly.b32	%r83, %r82, 16, 31, -1;
	mov.b32 	%f46, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f62, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f63;
	shfl.sync.bfly.b32	%r85, %r84, 16, 31, -1;
	mov.b32 	%f48, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f63, %f48;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r77, 0;
	shr.u32 	%r86, %r2, 3;
	and.b32  	%r87, %r86, 12;
	shl.b32 	%r88, %r3, 4;
	or.b32  	%r89, %r88, %r87;
	mov.u32 	%r90, global_smem;
	add.s32 	%r53, %r90, %r89;
	mov.b32 	%r54, %f43;
	// begin inline asm
	@%p9 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	add.s32 	%r55, %r53, 16;
	mov.b32 	%r56, %f45;
	// begin inline asm
	@%p9 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r53, 32;
	mov.b32 	%r58, %f47;
	// begin inline asm
	@%p9 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r53, 48;
	mov.b32 	%r60, %f49;
	// begin inline asm
	@%p9 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p13, %r2, 256;
	add.s32 	%r62, %r90, %r17;
	// begin inline asm
	@%p13 ld.shared.b32 %r61, [ %r62 + 0 ];
	// end inline asm
	mov.b32 	%f50, %r61;
	shfl.sync.bfly.b32	%r92, %r61, 2, 31, -1;
	mov.b32 	%f51, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f52;
	shfl.sync.bfly.b32	%r94, %r93, 1, 31, -1;
	mov.b32 	%f53, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r95, %r2, 3;
	setp.eq.s32 	%p20, %r95, 0;
	and.pred  	%p14, %p13, %p20;
	mov.b32 	%r64, %f54;
	// begin inline asm
	@%p14 st.shared.b32 [ %r62 + 0 ], %r64;
	// end inline asm
	add.s32 	%r66, %r62, 512;
	// begin inline asm
	@%p13 ld.shared.b32 %r65, [ %r66 + 0 ];
	// end inline asm
	mov.b32 	%f55, %r65;
	shfl.sync.bfly.b32	%r96, %r65, 2, 31, -1;
	mov.b32 	%f56, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f57;
	shfl.sync.bfly.b32	%r98, %r97, 1, 31, -1;
	mov.b32 	%f58, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f59;
	// begin inline asm
	@%p14 st.shared.b32 [ %r66 + 0 ], %r68;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r99, %r90, %r88;
	ld.shared.u32 	%r70, [%r99];
	ld.shared.u32 	%r71, [%r99+16];
	ld.shared.u32 	%r72, [%r99+32];
	ld.shared.u32 	%r73, [%r99+48];
$L__tmp2:
	.loc	1 44 28                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:44:28
	bar.sync 	0;
	mad.lo.s32 	%r69, %r3, -12, %r99;
	mov.pred 	%p17, -1;
	// begin inline asm
	@%p17 st.shared.v4.b32 [ %r69 + 0 ], { %r70, %r71, %r72, %r73 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r100, %r75, 2;
	add.s32 	%r101, %r90, %r100;
	ld.shared.u32 	%r74, [%r101];
	.loc	1 45 25                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:45:25
	mul.wide.s32 	%rd14, %r76, 4;
	add.s64 	%rd13, %rd4, %rd14;
	.loc	1 45 36                         // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:45:36
	and.b32  	%r102, %r2, 64;
	setp.eq.s32 	%p21, %r102, 0;
	and.pred  	%p18, %p21, %p19;
	// begin inline asm
	@%p18 st.global.b32 [ %rd13 + 0 ], { %r74 };
	// end inline asm
	.loc	1 45 4                          // cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py:45:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/kt/cktpy5ze2yd444y25jmyi3nokbkylm7t6cli33bnim63wr3xqttg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 116
.b8 112
.b8 121
.b8 53
.b8 122
.b8 101
.b8 50
.b8 121
.b8 100
.b8 52
.b8 52
.b8 52
.b8 121
.b8 50
.b8 53
.b8 106
.b8 109
.b8 121
.b8 105
.b8 51
.b8 110
.b8 111
.b8 107
.b8 98
.b8 107
.b8 121
.b8 108
.b8 109
.b8 55
.b8 116
.b8 54
.b8 99
.b8 108
.b8 105
.b8 51
.b8 51
.b8 98
.b8 110
.b8 105
.b8 109
.b8 54
.b8 51
.b8 119
.b8 114
.b8 51
.b8 120
.b8 113
.b8 116
.b8 116
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x81:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x96:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
