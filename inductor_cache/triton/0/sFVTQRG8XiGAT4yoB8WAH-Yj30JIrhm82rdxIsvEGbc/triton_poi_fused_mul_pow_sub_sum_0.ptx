//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_mul_pow_sub_sum_0 // -- Begin function triton_poi_fused_mul_pow_sub_sum_0
                                        // @triton_poi_fused_mul_pow_sub_sum_0
.visible .entry triton_poi_fused_mul_pow_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_pow_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_pow_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_pow_sub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_mul_pow_sub_sum_0_param_3,
	.param .u32 triton_poi_fused_mul_pow_sub_sum_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<54>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:19:0

// %bb.0:
	ld.param.u64 	%rd19, [triton_poi_fused_mul_pow_sub_sum_0_param_0];
	ld.param.u64 	%rd20, [triton_poi_fused_mul_pow_sub_sum_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:21:33
	shl.b32 	%r22, %r1, 8;
	ld.param.u64 	%rd21, [triton_poi_fused_mul_pow_sub_sum_0_param_2];
	ld.param.u64 	%rd22, [triton_poi_fused_mul_pow_sub_sum_0_param_3];
	.loc	1 22 36                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 1;
	and.b32  	%r25, %r24, 254;
	.loc	1 22 23                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:22:23
	or.b32  	%r26, %r22, %r25;
	or.b32  	%r27, %r26, 1;
	.loc	1 23 21                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:23:21
	setp.lt.s32 	%p1, %r26, 256;
	.loc	1 25 21                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:25:21
	shr.s32 	%r29, %r26, 31;
	shr.u32 	%r30, %r29, 30;
	add.s32 	%r31, %r26, %r30;
	shr.s32 	%r32, %r31, 2;
	.loc	1 24 19                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:24:19
	and.b32  	%r33, %r31, -4;
	sub.s32 	%r34, %r26, %r33;
	bfe.s32 	%r35, %r1, 23, 1;
	shr.u32 	%r36, %r35, 30;
	add.s32 	%r37, %r27, %r36;
	and.b32  	%r38, %r37, 1073741820;
	sub.s32 	%r39, %r27, %r38;
	.loc	1 25 26                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:25:26
	shr.s32 	%r40, %r31, 31;
	shr.u32 	%r41, %r40, 28;
	add.s32 	%r42, %r32, %r41;
	and.b32  	%r43, %r42, -16;
	sub.s32 	%r44, %r32, %r43;
	.loc	1 26 19                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:26:19
	shr.u32 	%r45, %r35, 26;
	add.s32 	%r46, %r26, %r45;
	.loc	1 28 30                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:28:30
	mul.wide.s32 	%rd23, %r34, 4;
	add.s64 	%rd1, %rd19, %rd23;
	.loc	1 28 35                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:28:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 29 38                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:29:38
	and.b32  	%r47, %r46, -64;
	.loc	1 29 35                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:29:35
	add.s32 	%r48, %r44, %r47;
	.loc	1 29 30                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:29:30
	mul.wide.s32 	%rd24, %r48, 4;
	add.s64 	%rd2, %rd20, %rd24;
	.loc	1 29 43                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:29:43
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 32                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:30:32
	shl.b32 	%r49, %r34, 2;
	shl.b32 	%r50, %r39, 2;
	.loc	1 30 30                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:30:30
	mul.wide.s32 	%rd25, %r49, 4;
	add.s64 	%rd4, %rd21, %rd25;
	mul.wide.s32 	%rd26, %r50, 4;
	add.s64 	%rd5, %rd21, %rd26;
	.loc	1 30 37                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:30:37
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 40                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:31:40
	add.s32 	%r51, %r48, 16;
	.loc	1 31 30                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:31:30
	mul.wide.s32 	%rd27, %r51, 4;
	add.s64 	%rd6, %rd20, %rd27;
	.loc	1 31 48                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:31:48
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 32 30                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:32:30
	add.s64 	%rd8, %rd4, 4;
	add.s64 	%rd9, %rd5, 4;
	.loc	1 32 41                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:32:41
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 33 41                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:33:41
	add.s32 	%r52, %r48, 32;
	.loc	1 33 31                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:33:31
	mul.wide.s32 	%rd28, %r52, 4;
	add.s64 	%rd10, %rd20, %rd28;
	.loc	1 33 49                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:33:49
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 34 31                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:34:31
	add.s64 	%rd12, %rd4, 8;
	add.s64 	%rd13, %rd5, 8;
	.loc	1 34 42                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:34:42
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 35 41                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:35:41
	add.s32 	%r53, %r48, 48;
	.loc	1 35 31                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:35:31
	mul.wide.s32 	%rd29, %r53, 4;
	add.s64 	%rd14, %rd20, %rd29;
	.loc	1 35 49                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:35:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:36:31
	add.s64 	%rd16, %rd4, 12;
	add.s64 	%rd17, %rd5, 12;
	.loc	1 36 42                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:36:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd16 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 29 43                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:29:43
	mov.b32 	%f3, %r8;
	mov.b32 	%f4, %r4;
	.loc	1 30 37                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:30:37
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r6;
	.loc	1 37 18                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:37:18
	sub.f32 	%f7, %f4, %f6;
	sub.f32 	%f8, %f3, %f5;
	.loc	1 38 18                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:38:18
	mul.f32 	%f9, %f8, %f8;
	.loc	1 29 43                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:29:43
	mov.b32 	%f10, %r9;
	mov.b32 	%f11, %r5;
	.loc	1 30 37                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:30:37
	mov.b32 	%f12, %r11;
	mov.b32 	%f13, %r7;
	.loc	1 37 18                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:37:18
	sub.f32 	%f14, %f11, %f13;
	sub.f32 	%f15, %f10, %f12;
	.loc	1 38 18                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:38:18
	mul.f32 	%f16, %f15, %f15;
	.loc	1 41 18                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:41:18
	fma.rn.f32 	%f17, %f7, %f7, %f9;
	fma.rn.f32 	%f18, %f14, %f14, %f16;
	.loc	1 33 49                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:33:49
	mov.b32 	%f19, %r12;
	mov.b32 	%f20, %r16;
	.loc	1 34 42                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:34:42
	mov.b32 	%f21, %r14;
	mov.b32 	%f22, %r18;
	.loc	1 42 20                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:42:20
	sub.f32 	%f23, %f20, %f22;
	sub.f32 	%f24, %f19, %f21;
	.loc	1 44 19                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:44:19
	fma.rn.f32 	%f25, %f24, %f24, %f17;
	.loc	1 33 49                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:33:49
	mov.b32 	%f26, %r13;
	mov.b32 	%f27, %r17;
	.loc	1 34 42                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:34:42
	mov.b32 	%f28, %r15;
	mov.b32 	%f29, %r19;
	.loc	1 42 20                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:42:20
	sub.f32 	%f30, %f27, %f29;
	sub.f32 	%f31, %f26, %f28;
	.loc	1 44 19                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:44:19
	fma.rn.f32 	%f32, %f31, %f31, %f18;
	.loc	1 47 20                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:47:20
	fma.rn.f32 	%f33, %f23, %f23, %f25;
	fma.rn.f32 	%f34, %f30, %f30, %f32;
	.loc	1 48 19                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:48:19
	mul.f32 	%f35, %f33, %f1;
	mul.f32 	%f36, %f34, %f2;
	.loc	1 49 25                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:49:25
	mul.wide.s32 	%rd30, %r26, 4;
	add.s64 	%rd18, %rd22, %rd30;
	.loc	1 49 37                         // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:49:37
	mov.b32 	%r20, %f35;
	mov.b32 	%r21, %f36;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd18 + 0 ], { %r20, %r21 };
	// end inline asm
	.loc	1 49 4                          // c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py:49:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/32/c32hqqs7i3os6qq7q3uiykahcmabksopzkmcgv6qw6ogecsrctlh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 50
.b8 104
.b8 113
.b8 113
.b8 115
.b8 55
.b8 105
.b8 51
.b8 111
.b8 115
.b8 54
.b8 113
.b8 113
.b8 55
.b8 113
.b8 51
.b8 117
.b8 105
.b8 121
.b8 107
.b8 97
.b8 104
.b8 99
.b8 109
.b8 97
.b8 98
.b8 107
.b8 115
.b8 111
.b8 112
.b8 122
.b8 107
.b8 109
.b8 99
.b8 103
.b8 118
.b8 54
.b8 113
.b8 119
.b8 54
.b8 111
.b8 103
.b8 101
.b8 99
.b8 115
.b8 114
.b8 99
.b8 116
.b8 108
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
