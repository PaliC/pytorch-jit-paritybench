//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0 // -- Begin function triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0
.visible .entry triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_3,
	.param .u32 triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_4,
	.param .u32 triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<138>;
	.reg .f32 	%f<34>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:22:33
	shl.b32 	%r45, %r1, 5;
	ld.param.u64 	%rd16, [triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused_clone_convolution_leaky_relu_leaky_relu_backward_0_param_3];
	.loc	1 23 44                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:23:44
	mov.u32 	%r46, %tid.x;
	bfe.u32 	%r47, %r46, 2, 5;
	shl.b32 	%r48, %r46, 2;
	and.b32  	%r49, %r48, 28;
	.loc	1 23 23                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:23:23
	or.b32  	%r50, %r45, %r47;
	or.b32  	%r51, %r45, %r49;
	.loc	1 24 21                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:24:21
	setp.lt.s32 	%p1, %r50, 256;
	setp.lt.s32 	%p19, %r51, 256;
	.loc	1 25 28                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:25:33
	shl.b32 	%r52, %r2, 5;
	.loc	1 26 44                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:26:44
	shl.b32 	%r53, %r46, 3;
	and.b32  	%r54, %r53, 24;
	bfe.u32 	%r55, %r46, 3, 4;
	.loc	1 26 23                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:26:23
	or.b32  	%r56, %r52, %r54;
	or.b32  	%r57, %r52, %r55;
	.loc	1 30 19                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:30:19
	bfe.s32 	%r58, %r1, 26, 1;
	shr.u32 	%r59, %r58, 26;
	add.s32 	%r60, %r50, %r59;
	and.b32  	%r61, %r60, -64;
	sub.s32 	%r62, %r50, %r61;
	.loc	1 31 19                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:31:19
	shr.s32 	%r64, %r51, 31;
	shr.u32 	%r65, %r64, 26;
	add.s32 	%r66, %r51, %r65;
	.loc	1 30 19                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:30:19
	and.b32  	%r67, %r66, -64;
	sub.s32 	%r68, %r51, %r67;
	.loc	1 32 40                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:32:40
	shl.b32 	%r69, %r50, 12;
	.loc	1 32 35                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:32:35
	add.s32 	%r70, %r56, %r69;
	or.b32  	%r71, %r70, 4;
	.loc	1 32 30                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:32:30
	cvt.s64.s32 	%rd18, %r70;
	mul.wide.s32 	%rd19, %r70, 4;
	add.s64 	%rd1, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r71, 4;
	add.s64 	%rd2, %rd14, %rd20;
	.loc	1 32 45                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:32:45
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:33:30
	mul.wide.s32 	%rd21, %r62, 4;
	add.s64 	%rd3, %rd15, %rd21;
	.loc	1 33 35                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 26 23                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:26:23
	shl.b32 	%r72, %r57, 6;
	.loc	1 41 45                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:41:45
	shl.b32 	%r73, %r66, 12;
	and.b32  	%r74, %r73, -262144;
	.loc	1 41 30                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:41:30
	add.s32 	%r75, %r74, %r68;
	.loc	1 41 38                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:41:38
	add.s32 	%r76, %r75, %r72;
	add.s32 	%r77, %r76, 1024;
	.loc	1 41 25                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:41:25
	mul.wide.s32 	%rd22, %r76, 4;
	add.s64 	%rd11, %rd16, %rd22;
	mul.wide.s32 	%rd23, %r77, 4;
	add.s64 	%rd12, %rd16, %rd23;
	.loc	1 41 56                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:41:56
	shl.b32 	%r78, %r46, 8;
	and.b32  	%r79, %r78, 768;
	or.b32  	%r80, %r79, %r47;
	and.b32  	%r81, %r48, 508;
	shr.u32 	%r82, %r79, 1;
	mov.u32 	%r83, global_smem;
	add.s32 	%r84, %r83, %r82;
	shl.b32 	%r85, %r80, 2;
	add.s32 	%r19, %r84, %r85;
	or.b32  	%r86, %r79, 32;
	shr.u32 	%r87, %r86, 1;
	add.s32 	%r88, %r83, %r87;
	add.s32 	%r89, %r88, %r85;
	add.s32 	%r21, %r89, 128;
	or.b32  	%r90, %r79, 64;
	shr.u32 	%r91, %r90, 1;
	add.s32 	%r92, %r83, %r91;
	add.s32 	%r93, %r92, %r85;
	add.s32 	%r23, %r93, 256;
	or.b32  	%r94, %r79, 96;
	shr.u32 	%r95, %r94, 1;
	add.s32 	%r96, %r83, %r95;
	add.s32 	%r97, %r96, %r85;
	add.s32 	%r25, %r97, 384;
	or.b32  	%r98, %r79, 128;
	shr.u32 	%r99, %r98, 1;
	add.s32 	%r100, %r83, %r99;
	add.s32 	%r101, %r100, %r85;
	add.s32 	%r27, %r101, 512;
	or.b32  	%r102, %r79, 160;
	shr.u32 	%r103, %r102, 1;
	add.s32 	%r104, %r83, %r103;
	add.s32 	%r105, %r104, %r85;
	add.s32 	%r29, %r105, 640;
	or.b32  	%r106, %r79, 192;
	shr.u32 	%r107, %r106, 1;
	add.s32 	%r108, %r83, %r107;
	add.s32 	%r109, %r108, %r85;
	add.s32 	%r31, %r109, 768;
	or.b32  	%r110, %r79, 224;
	shr.u32 	%r111, %r110, 1;
	add.s32 	%r112, %r83, %r111;
	add.s32 	%r113, %r112, %r85;
	add.s32 	%r33, %r113, 896;
	shl.b32 	%r114, %r46, 1;
	and.b32  	%r115, %r114, 240;
	add.s32 	%r116, %r83, %r115;
	shl.b32 	%r117, %r81, 2;
	add.s32 	%r118, %r116, %r117;
	or.b32  	%r119, %r81, 512;
	shr.u32 	%r120, %r119, 1;
	and.b32  	%r121, %r120, 496;
	add.s32 	%r122, %r83, %r121;
	add.s32 	%r123, %r122, %r117;
	.loc	1 42 25                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:42:25
	add.s64 	%rd13, %rd17, %rd18;
	.loc	1 32 45                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:32:45
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	.loc	1 34 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:34:18
	mov.b32 	%f5, %r18;
	add.f32 	%f6, %f5, %f4;
	add.f32 	%f7, %f5, %f3;
	add.f32 	%f8, %f5, %f2;
	add.f32 	%f9, %f5, %f1;
	.loc	1 36 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:36:18
	setp.gt.f32 	%p22, %f9, 0f00000000;
	setp.gt.f32 	%p23, %f8, 0f00000000;
	setp.gt.f32 	%p24, %f7, 0f00000000;
	setp.gt.f32 	%p25, %f6, 0f00000000;
	.loc	1 38 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:38:18
	mul.f32 	%f10, %f9, 0f3C23D70A;
	mul.f32 	%f11, %f8, 0f3C23D70A;
	mul.f32 	%f12, %f7, 0f3C23D70A;
	mul.f32 	%f13, %f6, 0f3C23D70A;
	.loc	1 39 32                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:39:32
	selp.f32 	%f14, %f6, %f13, %p25;
	selp.f32 	%f15, %f7, %f12, %p24;
	selp.f32 	%f16, %f8, %f11, %p23;
	selp.f32 	%f17, %f9, %f10, %p22;
	.loc	1 40 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:40:18
	setp.gt.f32 	%p26, %f17, 0f00000000;
	setp.gt.f32 	%p27, %f16, 0f00000000;
	setp.gt.f32 	%p28, %f15, 0f00000000;
	setp.gt.f32 	%p29, %f14, 0f00000000;
	.loc	1 41 56                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:41:56
	mov.b32 	%r20, %f17;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	mov.b32 	%r22, %f16;
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	mov.b32 	%r24, %f15;
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	mov.b32 	%r26, %f14;
	// begin inline asm
	@%p11 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	.loc	1 32 45                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:32:45
	mov.b32 	%f18, %r7;
	mov.b32 	%f19, %r8;
	mov.b32 	%f20, %r9;
	mov.b32 	%f21, %r10;
	.loc	1 34 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:34:18
	add.f32 	%f22, %f5, %f21;
	add.f32 	%f23, %f5, %f20;
	add.f32 	%f24, %f5, %f19;
	add.f32 	%f25, %f5, %f18;
	.loc	1 36 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:36:18
	setp.gt.f32 	%p30, %f25, 0f00000000;
	setp.gt.f32 	%p31, %f24, 0f00000000;
	setp.gt.f32 	%p32, %f23, 0f00000000;
	setp.gt.f32 	%p33, %f22, 0f00000000;
	.loc	1 38 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:38:18
	mul.f32 	%f26, %f25, 0f3C23D70A;
	mul.f32 	%f27, %f24, 0f3C23D70A;
	mul.f32 	%f28, %f23, 0f3C23D70A;
	mul.f32 	%f29, %f22, 0f3C23D70A;
	.loc	1 39 32                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:39:32
	selp.f32 	%f30, %f22, %f29, %p33;
	selp.f32 	%f31, %f23, %f28, %p32;
	selp.f32 	%f32, %f24, %f27, %p31;
	selp.f32 	%f33, %f25, %f26, %p30;
	.loc	1 40 18                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:40:18
	setp.gt.f32 	%p34, %f33, 0f00000000;
	setp.gt.f32 	%p35, %f32, 0f00000000;
	setp.gt.f32 	%p36, %f31, 0f00000000;
	setp.gt.f32 	%p37, %f30, 0f00000000;
	.loc	1 41 56                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:41:56
	mov.b32 	%r28, %f33;
	// begin inline asm
	@%p11 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	mov.b32 	%r30, %f32;
	// begin inline asm
	@%p11 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	mov.b32 	%r32, %f31;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	mov.b32 	%r34, %f30;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r39, %r40, %r41, %r42}, [%r123+2048];
	ld.shared.v4.u32 	{%r35, %r36, %r37, %r38}, [%r118];
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd11 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd12 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	.loc	1 42 46                         // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:42:46
	selp.u32 	%r124, 1, 0, %p29;
	selp.u32 	%r125, 1, 0, %p28;
	prmt.b32 	%r126, %r125, %r124, 0x3340U;
	selp.u32 	%r127, 1, 0, %p27;
	selp.u32 	%r128, 1, 0, %p26;
	prmt.b32 	%r129, %r128, %r127, 0x3340U;
	prmt.b32 	%r130, %r129, %r126, 0x5410U;
	selp.u32 	%r131, 1, 0, %p37;
	selp.u32 	%r132, 1, 0, %p36;
	prmt.b32 	%r133, %r132, %r131, 0x3340U;
	selp.u32 	%r134, 1, 0, %p35;
	selp.u32 	%r135, 1, 0, %p34;
	prmt.b32 	%r136, %r135, %r134, 0x3340U;
	prmt.b32 	%r137, %r136, %r133, 0x5410U;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd13 + 0 ], { %r130, %r137 };
	// end inline asm
	.loc	1 42 4                          // cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py:42:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/uk/cukmu6yksl5tbcnjmgavcj44pvez3mpvrdu4bybl5ue7ui4w4f36.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 107
.b8 109
.b8 117
.b8 54
.b8 121
.b8 107
.b8 115
.b8 108
.b8 53
.b8 116
.b8 98
.b8 99
.b8 110
.b8 106
.b8 109
.b8 103
.b8 97
.b8 118
.b8 99
.b8 106
.b8 52
.b8 52
.b8 112
.b8 118
.b8 101
.b8 122
.b8 51
.b8 109
.b8 112
.b8 118
.b8 114
.b8 100
.b8 117
.b8 52
.b8 98
.b8 121
.b8 98
.b8 108
.b8 53
.b8 117
.b8 101
.b8 55
.b8 117
.b8 105
.b8 52
.b8 119
.b8 52
.b8 102
.b8 51
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 107
.b8 0
	}
	.section	.debug_macinfo	{	}
