; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_4(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 3, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = lshr i32 %6, 5, !dbg !12
  %.lobit = and i32 %7, 1, !dbg !12
  %8 = or disjoint i32 %5, %.lobit, !dbg !13
  %9 = or disjoint i32 %8, 2, !dbg !13
  %10 = or disjoint i32 %8, 4, !dbg !13
  %11 = or disjoint i32 %8, 6, !dbg !13
  %12 = icmp slt i32 %8, 68, !dbg !14
  %13 = icmp slt i32 %9, 68, !dbg !14
  %14 = icmp slt i32 %10, 68, !dbg !14
  %15 = icmp slt i32 %11, 68, !dbg !14
  %16 = and i32 %6, 31, !dbg !15
  %17 = icmp samesign ult i32 %16, 17, !dbg !16
  %18 = mul i32 %8, 17, !dbg !17
  %19 = mul i32 %9, 17, !dbg !17
  %20 = mul i32 %10, 17, !dbg !17
  %21 = mul i32 %11, 17, !dbg !17
  %22 = add i32 %18, %16, !dbg !18
  %23 = add i32 %19, %16, !dbg !18
  %24 = add i32 %20, %16, !dbg !18
  %25 = add i32 %21, %16, !dbg !18
  %26 = sext i32 %22 to i64, !dbg !19
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !19
  %28 = sext i32 %23 to i64, !dbg !19
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !19
  %30 = sext i32 %24 to i64, !dbg !19
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !19
  %32 = sext i32 %25 to i64, !dbg !19
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !19
  %34 = and i1 %17, %12, !dbg !20
  %35 = and i1 %17, %13, !dbg !20
  %36 = and i1 %17, %14, !dbg !20
  %37 = and i1 %17, %15, !dbg !20
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %34, i32 0, i1 %34) #2, !dbg !21
  %39 = bitcast i32 %38 to float, !dbg !21
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %35, i32 0, i1 %35) #2, !dbg !21
  %41 = bitcast i32 %40 to float, !dbg !21
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %36, i32 0, i1 %36) #2, !dbg !21
  %43 = bitcast i32 %42 to float, !dbg !21
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %37, i32 0, i1 %37) #2, !dbg !21
  %45 = bitcast i32 %44 to float, !dbg !21
  %46 = select i1 %34, float %39, float 0xFFF0000000000000, !dbg !22
  %47 = select i1 %35, float %41, float 0xFFF0000000000000, !dbg !22
  %48 = select i1 %36, float %43, float 0xFFF0000000000000, !dbg !22
  %49 = select i1 %37, float %45, float 0xFFF0000000000000, !dbg !22
  %50 = bitcast float %46 to i32, !dbg !23
  %51 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %50, i32 16, i32 31), !dbg !23
  %52 = bitcast i32 %51 to float, !dbg !23
  %53 = fcmp ogt float %46, %52, !dbg !27
  %54 = fcmp uno float %46, 0.000000e+00, !dbg !29
  %55 = or i1 %54, %53, !dbg !30
  %56 = select i1 %55, float %46, float %52, !dbg !31
  %57 = bitcast float %56 to i32, !dbg !23
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 8, i32 31), !dbg !23
  %59 = bitcast i32 %58 to float, !dbg !23
  %60 = fcmp ogt float %56, %59, !dbg !27
  %61 = fcmp uno float %56, 0.000000e+00, !dbg !29
  %62 = or i1 %60, %61, !dbg !30
  %63 = select i1 %62, float %56, float %59, !dbg !31
  %64 = bitcast float %63 to i32, !dbg !23
  %65 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %64, i32 4, i32 31), !dbg !23
  %66 = bitcast i32 %65 to float, !dbg !23
  %67 = fcmp ogt float %63, %66, !dbg !27
  %68 = fcmp uno float %63, 0.000000e+00, !dbg !29
  %69 = or i1 %67, %68, !dbg !30
  %70 = select i1 %69, float %63, float %66, !dbg !31
  %71 = bitcast float %70 to i32, !dbg !23
  %72 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 2, i32 31), !dbg !23
  %73 = bitcast i32 %72 to float, !dbg !23
  %74 = fcmp ogt float %70, %73, !dbg !27
  %75 = fcmp uno float %70, 0.000000e+00, !dbg !29
  %76 = or i1 %74, %75, !dbg !30
  %77 = select i1 %76, float %70, float %73, !dbg !31
  %78 = bitcast float %77 to i32, !dbg !23
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 1, i32 31), !dbg !23
  %80 = bitcast i32 %79 to float, !dbg !23
  %81 = fcmp ogt float %77, %80, !dbg !27
  %82 = fcmp uno float %77, 0.000000e+00, !dbg !29
  %83 = or i1 %81, %82, !dbg !30
  %84 = select i1 %83, float %77, float %80, !dbg !31
  %85 = bitcast float %47 to i32, !dbg !23
  %86 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %85, i32 16, i32 31), !dbg !23
  %87 = bitcast i32 %86 to float, !dbg !23
  %88 = fcmp ogt float %47, %87, !dbg !27
  %89 = fcmp uno float %47, 0.000000e+00, !dbg !29
  %90 = or i1 %89, %88, !dbg !30
  %91 = select i1 %90, float %47, float %87, !dbg !31
  %92 = bitcast float %91 to i32, !dbg !23
  %93 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %92, i32 8, i32 31), !dbg !23
  %94 = bitcast i32 %93 to float, !dbg !23
  %95 = fcmp ogt float %91, %94, !dbg !27
  %96 = fcmp uno float %91, 0.000000e+00, !dbg !29
  %97 = or i1 %95, %96, !dbg !30
  %98 = select i1 %97, float %91, float %94, !dbg !31
  %99 = bitcast float %98 to i32, !dbg !23
  %100 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %99, i32 4, i32 31), !dbg !23
  %101 = bitcast i32 %100 to float, !dbg !23
  %102 = fcmp ogt float %98, %101, !dbg !27
  %103 = fcmp uno float %98, 0.000000e+00, !dbg !29
  %104 = or i1 %102, %103, !dbg !30
  %105 = select i1 %104, float %98, float %101, !dbg !31
  %106 = bitcast float %105 to i32, !dbg !23
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 2, i32 31), !dbg !23
  %108 = bitcast i32 %107 to float, !dbg !23
  %109 = fcmp ogt float %105, %108, !dbg !27
  %110 = fcmp uno float %105, 0.000000e+00, !dbg !29
  %111 = or i1 %109, %110, !dbg !30
  %112 = select i1 %111, float %105, float %108, !dbg !31
  %113 = bitcast float %112 to i32, !dbg !23
  %114 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %113, i32 1, i32 31), !dbg !23
  %115 = bitcast i32 %114 to float, !dbg !23
  %116 = fcmp ogt float %112, %115, !dbg !27
  %117 = fcmp uno float %112, 0.000000e+00, !dbg !29
  %118 = or i1 %116, %117, !dbg !30
  %119 = select i1 %118, float %112, float %115, !dbg !31
  %120 = bitcast float %48 to i32, !dbg !23
  %121 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %120, i32 16, i32 31), !dbg !23
  %122 = bitcast i32 %121 to float, !dbg !23
  %123 = fcmp ogt float %48, %122, !dbg !27
  %124 = fcmp uno float %48, 0.000000e+00, !dbg !29
  %125 = or i1 %124, %123, !dbg !30
  %126 = select i1 %125, float %48, float %122, !dbg !31
  %127 = bitcast float %126 to i32, !dbg !23
  %128 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %127, i32 8, i32 31), !dbg !23
  %129 = bitcast i32 %128 to float, !dbg !23
  %130 = fcmp ogt float %126, %129, !dbg !27
  %131 = fcmp uno float %126, 0.000000e+00, !dbg !29
  %132 = or i1 %130, %131, !dbg !30
  %133 = select i1 %132, float %126, float %129, !dbg !31
  %134 = bitcast float %133 to i32, !dbg !23
  %135 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %134, i32 4, i32 31), !dbg !23
  %136 = bitcast i32 %135 to float, !dbg !23
  %137 = fcmp ogt float %133, %136, !dbg !27
  %138 = fcmp uno float %133, 0.000000e+00, !dbg !29
  %139 = or i1 %137, %138, !dbg !30
  %140 = select i1 %139, float %133, float %136, !dbg !31
  %141 = bitcast float %140 to i32, !dbg !23
  %142 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %141, i32 2, i32 31), !dbg !23
  %143 = bitcast i32 %142 to float, !dbg !23
  %144 = fcmp ogt float %140, %143, !dbg !27
  %145 = fcmp uno float %140, 0.000000e+00, !dbg !29
  %146 = or i1 %144, %145, !dbg !30
  %147 = select i1 %146, float %140, float %143, !dbg !31
  %148 = bitcast float %147 to i32, !dbg !23
  %149 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %148, i32 1, i32 31), !dbg !23
  %150 = bitcast i32 %149 to float, !dbg !23
  %151 = fcmp ogt float %147, %150, !dbg !27
  %152 = fcmp uno float %147, 0.000000e+00, !dbg !29
  %153 = or i1 %151, %152, !dbg !30
  %154 = select i1 %153, float %147, float %150, !dbg !31
  %155 = bitcast float %49 to i32, !dbg !23
  %156 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %155, i32 16, i32 31), !dbg !23
  %157 = bitcast i32 %156 to float, !dbg !23
  %158 = fcmp ogt float %49, %157, !dbg !27
  %159 = fcmp uno float %49, 0.000000e+00, !dbg !29
  %160 = or i1 %159, %158, !dbg !30
  %161 = select i1 %160, float %49, float %157, !dbg !31
  %162 = bitcast float %161 to i32, !dbg !23
  %163 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %162, i32 8, i32 31), !dbg !23
  %164 = bitcast i32 %163 to float, !dbg !23
  %165 = fcmp ogt float %161, %164, !dbg !27
  %166 = fcmp uno float %161, 0.000000e+00, !dbg !29
  %167 = or i1 %165, %166, !dbg !30
  %168 = select i1 %167, float %161, float %164, !dbg !31
  %169 = bitcast float %168 to i32, !dbg !23
  %170 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %169, i32 4, i32 31), !dbg !23
  %171 = bitcast i32 %170 to float, !dbg !23
  %172 = fcmp ogt float %168, %171, !dbg !27
  %173 = fcmp uno float %168, 0.000000e+00, !dbg !29
  %174 = or i1 %172, %173, !dbg !30
  %175 = select i1 %174, float %168, float %171, !dbg !31
  %176 = bitcast float %175 to i32, !dbg !23
  %177 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %176, i32 2, i32 31), !dbg !23
  %178 = bitcast i32 %177 to float, !dbg !23
  %179 = fcmp ogt float %175, %178, !dbg !27
  %180 = fcmp uno float %175, 0.000000e+00, !dbg !29
  %181 = or i1 %179, %180, !dbg !30
  %182 = select i1 %181, float %175, float %178, !dbg !31
  %183 = bitcast float %182 to i32, !dbg !23
  %184 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %183, i32 1, i32 31), !dbg !23
  %185 = bitcast i32 %184 to float, !dbg !23
  %186 = fcmp ogt float %182, %185, !dbg !27
  %187 = fcmp uno float %182, 0.000000e+00, !dbg !29
  %188 = or i1 %186, %187, !dbg !30
  %189 = select i1 %188, float %182, float %185, !dbg !31
  %190 = fsub float %39, %84, !dbg !32
  %191 = fsub float %41, %119, !dbg !32
  %192 = fsub float %43, %154, !dbg !32
  %193 = fsub float %45, %189, !dbg !32
  %194 = fmul float %190, 0x3FF7154760000000, !dbg !33
  %195 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %194) #2, !dbg !33
  %196 = fmul float %191, 0x3FF7154760000000, !dbg !33
  %197 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %196) #2, !dbg !33
  %198 = fmul float %192, 0x3FF7154760000000, !dbg !33
  %199 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %198) #2, !dbg !33
  %200 = fmul float %193, 0x3FF7154760000000, !dbg !33
  %201 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %200) #2, !dbg !33
  %202 = select i1 %34, float %195, float 0.000000e+00, !dbg !34
  %203 = select i1 %35, float %197, float 0.000000e+00, !dbg !34
  %204 = select i1 %36, float %199, float 0.000000e+00, !dbg !34
  %205 = select i1 %37, float %201, float 0.000000e+00, !dbg !34
  %206 = bitcast float %202 to i32, !dbg !35
  %207 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %206, i32 16, i32 31), !dbg !35
  %208 = bitcast i32 %207 to float, !dbg !35
  %209 = fadd float %202, %208, !dbg !39
  %210 = bitcast float %209 to i32, !dbg !35
  %211 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %210, i32 8, i32 31), !dbg !35
  %212 = bitcast i32 %211 to float, !dbg !35
  %213 = fadd float %209, %212, !dbg !39
  %214 = bitcast float %213 to i32, !dbg !35
  %215 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %214, i32 4, i32 31), !dbg !35
  %216 = bitcast i32 %215 to float, !dbg !35
  %217 = fadd float %213, %216, !dbg !39
  %218 = bitcast float %217 to i32, !dbg !35
  %219 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %218, i32 2, i32 31), !dbg !35
  %220 = bitcast i32 %219 to float, !dbg !35
  %221 = fadd float %217, %220, !dbg !39
  %222 = bitcast float %221 to i32, !dbg !35
  %223 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %222, i32 1, i32 31), !dbg !35
  %224 = bitcast i32 %223 to float, !dbg !35
  %225 = fadd float %221, %224, !dbg !39
  %226 = bitcast float %203 to i32, !dbg !35
  %227 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %226, i32 16, i32 31), !dbg !35
  %228 = bitcast i32 %227 to float, !dbg !35
  %229 = fadd float %203, %228, !dbg !39
  %230 = bitcast float %229 to i32, !dbg !35
  %231 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %230, i32 8, i32 31), !dbg !35
  %232 = bitcast i32 %231 to float, !dbg !35
  %233 = fadd float %229, %232, !dbg !39
  %234 = bitcast float %233 to i32, !dbg !35
  %235 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %234, i32 4, i32 31), !dbg !35
  %236 = bitcast i32 %235 to float, !dbg !35
  %237 = fadd float %233, %236, !dbg !39
  %238 = bitcast float %237 to i32, !dbg !35
  %239 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %238, i32 2, i32 31), !dbg !35
  %240 = bitcast i32 %239 to float, !dbg !35
  %241 = fadd float %237, %240, !dbg !39
  %242 = bitcast float %241 to i32, !dbg !35
  %243 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %242, i32 1, i32 31), !dbg !35
  %244 = bitcast i32 %243 to float, !dbg !35
  %245 = fadd float %241, %244, !dbg !39
  %246 = bitcast float %204 to i32, !dbg !35
  %247 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %246, i32 16, i32 31), !dbg !35
  %248 = bitcast i32 %247 to float, !dbg !35
  %249 = fadd float %204, %248, !dbg !39
  %250 = bitcast float %249 to i32, !dbg !35
  %251 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %250, i32 8, i32 31), !dbg !35
  %252 = bitcast i32 %251 to float, !dbg !35
  %253 = fadd float %249, %252, !dbg !39
  %254 = bitcast float %253 to i32, !dbg !35
  %255 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %254, i32 4, i32 31), !dbg !35
  %256 = bitcast i32 %255 to float, !dbg !35
  %257 = fadd float %253, %256, !dbg !39
  %258 = bitcast float %257 to i32, !dbg !35
  %259 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %258, i32 2, i32 31), !dbg !35
  %260 = bitcast i32 %259 to float, !dbg !35
  %261 = fadd float %257, %260, !dbg !39
  %262 = bitcast float %261 to i32, !dbg !35
  %263 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %262, i32 1, i32 31), !dbg !35
  %264 = bitcast i32 %263 to float, !dbg !35
  %265 = fadd float %261, %264, !dbg !39
  %266 = bitcast float %205 to i32, !dbg !35
  %267 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %266, i32 16, i32 31), !dbg !35
  %268 = bitcast i32 %267 to float, !dbg !35
  %269 = fadd float %205, %268, !dbg !39
  %270 = bitcast float %269 to i32, !dbg !35
  %271 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %270, i32 8, i32 31), !dbg !35
  %272 = bitcast i32 %271 to float, !dbg !35
  %273 = fadd float %269, %272, !dbg !39
  %274 = bitcast float %273 to i32, !dbg !35
  %275 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %274, i32 4, i32 31), !dbg !35
  %276 = bitcast i32 %275 to float, !dbg !35
  %277 = fadd float %273, %276, !dbg !39
  %278 = bitcast float %277 to i32, !dbg !35
  %279 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %278, i32 2, i32 31), !dbg !35
  %280 = bitcast i32 %279 to float, !dbg !35
  %281 = fadd float %277, %280, !dbg !39
  %282 = bitcast float %281 to i32, !dbg !35
  %283 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %282, i32 1, i32 31), !dbg !35
  %284 = bitcast i32 %283 to float, !dbg !35
  %285 = fadd float %281, %284, !dbg !39
  %286 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %195, float %225) #2, !dbg !41
  %287 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %197, float %245) #2, !dbg !41
  %288 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %199, float %265) #2, !dbg !41
  %289 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %201, float %285) #2, !dbg !41
  %290 = bitcast float %286 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %290, ptr addrspace(1) %27, i1 %34) #2, !dbg !42
  %291 = bitcast float %287 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %291, ptr addrspace(1) %29, i1 %35) #2, !dbg !42
  %292 = bitcast float %288 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %292, ptr addrspace(1) %31, i1 %36) #2, !dbg !42
  %293 = bitcast float %289 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %293, ptr addrspace(1) %33, i1 %37) #2, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctnbbocbqg4rxujbqjpjqkbirhic7dlaek7wkasuk5vuikybfpm2.py", directory: "inductor_cache/tn")
!4 = !{ptr @triton_per_fused__softmax_4, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_4, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_4", linkageName: "triton_per_fused__softmax_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 31, column: 42, scope: !7)
!18 = !DILocation(line: 31, column: 39, scope: !7)
!19 = !DILocation(line: 31, column: 34, scope: !7)
!20 = !DILocation(line: 31, column: 55, scope: !7)
!21 = !DILocation(line: 31, column: 47, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 131, column: 29, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 34, column: 37, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !26)
!28 = distinct !DILexicalBlockFile(scope: !24, file: !25, discriminator: 0)
!29 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !26)
!30 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !26)
!31 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !26)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 23, scope: !7)
!34 = !DILocation(line: 38, column: 41, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!38 = !DILocation(line: 39, column: 25, scope: !7)
!39 = !DILocation(line: 256, column: 15, scope: !40, inlinedAt: !38)
!40 = distinct !DILexicalBlockFile(scope: !36, file: !37, discriminator: 0)
!41 = !DILocation(line: 40, column: 19, scope: !7)
!42 = !DILocation(line: 41, column: 48, scope: !7)
!43 = !DILocation(line: 41, column: 4, scope: !7)
