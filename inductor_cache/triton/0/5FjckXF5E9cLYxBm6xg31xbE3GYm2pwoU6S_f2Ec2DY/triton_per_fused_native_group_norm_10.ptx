//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_native_group_norm_10 // -- Begin function triton_per_fused_native_group_norm_10
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_native_group_norm_10
.visible .entry triton_per_fused_native_group_norm_10(
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_10_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_10_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_10_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_native_group_norm_10_param_3,
	.param .u32 triton_per_fused_native_group_norm_10_param_4,
	.param .u32 triton_per_fused_native_group_norm_10_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<87>;
	.reg .f32 	%f<35>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_per_fused_native_group_norm_10_param_0];
	ld.param.u64 	%rd7, [triton_per_fused_native_group_norm_10_param_1];
$L__tmp0:
	.loc	1 23 28                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd8, [triton_per_fused_native_group_norm_10_param_2];
	.loc	1 26 34                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:26:34
	mov.u32 	%r22, %tid.x;
	and.b32  	%r23, %r22, 31;
	ld.param.u64 	%rd9, [triton_per_fused_native_group_norm_10_param_3];
	and.b32  	%r24, %r22, 63;
	.loc	1 31 21                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:31:21
	shr.s32 	%r25, %r1, 31;
	shr.u32 	%r26, %r25, 27;
	add.s32 	%r27, %r1, %r26;
	shr.s32 	%r28, %r27, 5;
	.loc	1 30 19                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:30:19
	and.b32  	%r29, %r27, 536870880;
	sub.s32 	%r30, %r1, %r29;
	.loc	1 31 27                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:31:27
	shr.u32 	%r31, %r28, 26;
	add.s32 	%r32, %r28, %r31;
	and.b32  	%r33, %r32, 33554368;
	sub.s32 	%r34, %r28, %r33;
	.loc	1 32 19                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:32:19
	shr.u32 	%r35, %r25, 21;
	add.s32 	%r36, %r1, %r35;
	.loc	1 34 32                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:32
	shl.b32 	%r37, %r30, 3;
	.loc	1 34 53                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:53
	shl.b32 	%r38, %r34, 7;
	.loc	1 34 49                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:49
	or.b32  	%r39, %r38, %r24;
	or.b32  	%r40, %r39, 64;
	.loc	1 34 98                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:98
	bfe.s32 	%r41, %r34, 24, 1;
	shr.u32 	%r42, %r41, 22;
	add.s32 	%r43, %r39, %r42;
	shr.s32 	%r44, %r43, 10;
	.loc	1 34 59                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:59
	and.b32  	%r45, %r43, 16776192;
	sub.s32 	%r46, %r39, %r45;
	.loc	1 34 98                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:98
	add.s32 	%r47, %r40, %r42;
	shr.s32 	%r48, %r47, 10;
	.loc	1 34 59                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:59
	and.b32  	%r49, %r47, 16776192;
	sub.s32 	%r50, %r40, %r49;
	.loc	1 34 43                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:43
	shl.b32 	%r51, %r46, 8;
	shl.b32 	%r52, %r50, 8;
	.loc	1 34 75                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:75
	shl.b32 	%r53, %r36, 7;
	and.b32  	%r54, %r53, -262144;
	.loc	1 34 37                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:37
	add.s32 	%r55, %r54, %r37;
	.loc	1 34 68                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:68
	add.s32 	%r56, %r55, %r44;
	.loc	1 34 81                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:81
	add.s32 	%r57, %r56, %r51;
	.loc	1 34 68                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:68
	add.s32 	%r58, %r55, %r48;
	.loc	1 34 81                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:81
	add.s32 	%r59, %r58, %r52;
	.loc	1 34 30                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:30
	mul.wide.s32 	%rd10, %r57, 4;
	add.s64 	%rd1, %rd6, %rd10;
	mul.wide.s32 	%rd11, %r59, 4;
	add.s64 	%rd2, %rd6, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 34 106                        // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:34:106
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f3;
	shfl.sync.bfly.b32	%r61, %r60, 16, 31, -1;
	mov.b32 	%f4, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f5, %f3, %f4;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f5;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f6, %r63;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f7, %f5, %f6;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f7;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f8, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f9;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f10, %r67;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f11, %f9, %f10;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f11;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f12, %r69;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f11, %f12;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p3, %r23, 0;
	shr.u32 	%r70, %r22, 3;
	and.b32  	%r71, %r70, 4;
	mov.u32 	%r72, global_smem;
	add.s32 	%r4, %r72, %r71;
	mov.b32 	%r5, %f13;
	// begin inline asm
	@%p3 st.shared.b32 [ %r4 + 0 ], %r5;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p4, %r22, 2;
	shl.b32 	%r73, %r22, 2;
	add.s32 	%r7, %r72, %r73;
	// begin inline asm
	@%p4 ld.shared.b32 %r6, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r6;
	shfl.sync.bfly.b32	%r74, %r6, 1, 31, -1;
	mov.b32 	%f15, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r75, %r22, 1;
	setp.eq.b32 	%p12, %r75, 1;
	not.pred 	%p13, %p12;
	and.pred  	%p5, %p4, %p13;
	mov.b32 	%r9, %f16;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 40 18                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:40:18
	ld.shared.u32 	%r11, [global_smem];
	mov.b32 	%r12, 1124073472;
	// begin inline asm
	div.full.f32 %r19, %r11, %r12;
	// end inline asm
	mov.b32 	%f17, %r19;
	.loc	1 41 18                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:41:18
	sub.f32 	%f18, %f1, %f17;
	sub.f32 	%f19, %f2, %f17;
	.loc	1 42 19                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:42:19
	mul.f32 	%f20, %f19, %f19;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f21, %f18, %f18, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f21;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f22, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f23;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f24, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f25;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f26, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f27;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f28, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f29;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f30, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r14, %f31;
	// begin inline asm
	@%p3 st.shared.b32 [ %r4 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p4 ld.shared.b32 %r15, [ %r7 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r15;
	shfl.sync.bfly.b32	%r86, %r15, 1, 31, -1;
	mov.b32 	%f33, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r18, %f34;
	// begin inline asm
	@%p5 st.shared.b32 [ %r7 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r20, [global_smem];
$L__tmp4:
	.loc	1 45 25                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:45:25
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd3, %rd7, %rd12;
	.loc	1 45 36                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:45:36
	setp.eq.s32 	%p9, %r24, 0;
	// begin inline asm
	@%p9 st.global.b32 [ %rd3 + 0 ], { %r19 };
	// end inline asm
	.loc	1 46 25                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:46:25
	add.s64 	%rd4, %rd8, %rd12;
	.loc	1 46 37                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:46:37
	// begin inline asm
	@%p9 st.global.b32 [ %rd4 + 0 ], { %r20 };
	// end inline asm
	.loc	1 47 25                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:47:25
	add.s64 	%rd5, %rd9, %rd12;
	.loc	1 47 36                         // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:47:36
	// begin inline asm
	@%p9 st.global.b32 [ %rd5 + 0 ], { %r12 };
	// end inline asm
	.loc	1 47 4                          // co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py:47:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/o6/co6y2vcmyzlktrz3gbc4zxuggfrozefq4bl7votb4v6hoajj722y.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 206                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 54
.b8 121
.b8 50
.b8 118
.b8 99
.b8 109
.b8 121
.b8 122
.b8 108
.b8 107
.b8 116
.b8 114
.b8 122
.b8 51
.b8 103
.b8 98
.b8 99
.b8 52
.b8 122
.b8 120
.b8 117
.b8 103
.b8 103
.b8 102
.b8 114
.b8 111
.b8 122
.b8 101
.b8 102
.b8 113
.b8 52
.b8 98
.b8 108
.b8 55
.b8 118
.b8 111
.b8 116
.b8 98
.b8 52
.b8 118
.b8 54
.b8 104
.b8 111
.b8 97
.b8 106
.b8 106
.b8 55
.b8 50
.b8 50
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 54
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x28 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8b:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 37                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
