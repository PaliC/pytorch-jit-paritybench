; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_avg_pool2d_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 4, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 6, !dbg !12
  %.lobit = and i32 %8, 1, !dbg !12
  %9 = shl i32 %7, 2, !dbg !12
  %10 = and i32 %9, 12, !dbg !12
  %11 = or disjoint i32 %6, %.lobit, !dbg !13
  %12 = or disjoint i32 %11, 2, !dbg !13
  %13 = or disjoint i32 %11, 4, !dbg !13
  %14 = or disjoint i32 %11, 6, !dbg !13
  %15 = or disjoint i32 %11, 8, !dbg !13
  %16 = or disjoint i32 %11, 10, !dbg !13
  %17 = or disjoint i32 %11, 12, !dbg !13
  %18 = or disjoint i32 %11, 14, !dbg !13
  %19 = or disjoint i32 %6, %10, !dbg !13
  %20 = icmp slt i32 %11, 16, !dbg !14
  %21 = icmp slt i32 %12, 16, !dbg !14
  %22 = icmp slt i32 %13, 16, !dbg !14
  %23 = icmp slt i32 %14, 16, !dbg !14
  %24 = icmp slt i32 %15, 16, !dbg !14
  %25 = icmp slt i32 %16, 16, !dbg !14
  %26 = icmp slt i32 %17, 16, !dbg !14
  %27 = icmp slt i32 %18, 16, !dbg !14
  %28 = icmp slt i32 %19, 16, !dbg !14
  %29 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %30 = shl i32 %29, 6, !dbg !16
  %31 = and i32 %7, 63, !dbg !17
  %32 = lshr i32 %7, 2, !dbg !17
  %33 = and i32 %32, 31, !dbg !17
  %34 = or disjoint i32 %30, %31, !dbg !18
  %35 = or disjoint i32 %30, %33, !dbg !18
  %36 = or disjoint i32 %35, 32, !dbg !18
  %37 = icmp slt i32 %34, 400, !dbg !19
  %38 = icmp slt i32 %35, 400, !dbg !19
  %39 = icmp slt i32 %36, 400, !dbg !19
  %.frozen = freeze i32 %34, !dbg !20
  %40 = sdiv i32 %.frozen, 20, !dbg !20
  %41 = mul i32 %40, 20, !dbg !21
  %.decomposed = sub i32 %.frozen, %41, !dbg !21
  %42 = ashr exact i32 %19, 2, !dbg !22
  %43 = mul nsw i32 %.decomposed, 3, !dbg !23
  %44 = mul i32 %40, 192, !dbg !24
  %45 = add i32 %43, %44, !dbg !25
  %46 = shl i32 %11, 12, !dbg !26
  %47 = shl i32 %12, 12, !dbg !26
  %48 = shl i32 %13, 12, !dbg !26
  %49 = shl i32 %14, 12, !dbg !26
  %50 = shl i32 %15, 12, !dbg !26
  %51 = shl i32 %16, 12, !dbg !26
  %52 = shl i32 %17, 12, !dbg !26
  %53 = shl i32 %18, 12, !dbg !26
  %54 = add i32 %45, %46, !dbg !27
  %55 = add i32 %45, %47, !dbg !27
  %56 = add i32 %45, %48, !dbg !27
  %57 = add i32 %45, %49, !dbg !27
  %58 = add i32 %45, %50, !dbg !27
  %59 = add i32 %45, %51, !dbg !27
  %60 = add i32 %45, %52, !dbg !27
  %61 = add i32 %45, %53, !dbg !27
  %62 = sext i32 %54 to i64, !dbg !28
  %63 = getelementptr float, ptr addrspace(1) %0, i64 %62, !dbg !28
  %64 = sext i32 %55 to i64, !dbg !28
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !28
  %66 = sext i32 %56 to i64, !dbg !28
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !28
  %68 = sext i32 %57 to i64, !dbg !28
  %69 = getelementptr float, ptr addrspace(1) %0, i64 %68, !dbg !28
  %70 = sext i32 %58 to i64, !dbg !28
  %71 = getelementptr float, ptr addrspace(1) %0, i64 %70, !dbg !28
  %72 = sext i32 %59 to i64, !dbg !28
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !28
  %74 = sext i32 %60 to i64, !dbg !28
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !28
  %76 = sext i32 %61 to i64, !dbg !28
  %77 = getelementptr float, ptr addrspace(1) %0, i64 %76, !dbg !28
  %78 = and i1 %20, %37, !dbg !29
  %79 = and i1 %21, %37, !dbg !29
  %80 = and i1 %22, %37, !dbg !29
  %81 = and i1 %23, %37, !dbg !29
  %82 = and i1 %24, %37, !dbg !29
  %83 = and i1 %25, %37, !dbg !29
  %84 = and i1 %26, %37, !dbg !29
  %85 = and i1 %27, %37, !dbg !29
  %86 = and i1 %28, %38, !dbg !29
  %87 = and i1 %39, %28, !dbg !29
  %88 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %63, i1 %78) #2, !dbg !30
  %89 = bitcast i32 %88 to float, !dbg !30
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %79) #2, !dbg !30
  %91 = bitcast i32 %90 to float, !dbg !30
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %67, i1 %80) #2, !dbg !30
  %93 = bitcast i32 %92 to float, !dbg !30
  %94 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %69, i1 %81) #2, !dbg !30
  %95 = bitcast i32 %94 to float, !dbg !30
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %71, i1 %82) #2, !dbg !30
  %97 = bitcast i32 %96 to float, !dbg !30
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %73, i1 %83) #2, !dbg !30
  %99 = bitcast i32 %98 to float, !dbg !30
  %100 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %84) #2, !dbg !30
  %101 = bitcast i32 %100 to float, !dbg !30
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %77, i1 %85) #2, !dbg !30
  %103 = bitcast i32 %102 to float, !dbg !30
  %104 = add i32 %45, 1, !dbg !31
  %105 = add i32 %104, %46, !dbg !32
  %106 = add i32 %104, %47, !dbg !32
  %107 = add i32 %104, %48, !dbg !32
  %108 = add i32 %104, %49, !dbg !32
  %109 = add i32 %104, %50, !dbg !32
  %110 = add i32 %104, %51, !dbg !32
  %111 = add i32 %104, %52, !dbg !32
  %112 = add i32 %104, %53, !dbg !32
  %113 = sext i32 %105 to i64, !dbg !33
  %114 = getelementptr float, ptr addrspace(1) %0, i64 %113, !dbg !33
  %115 = sext i32 %106 to i64, !dbg !33
  %116 = getelementptr float, ptr addrspace(1) %0, i64 %115, !dbg !33
  %117 = sext i32 %107 to i64, !dbg !33
  %118 = getelementptr float, ptr addrspace(1) %0, i64 %117, !dbg !33
  %119 = sext i32 %108 to i64, !dbg !33
  %120 = getelementptr float, ptr addrspace(1) %0, i64 %119, !dbg !33
  %121 = sext i32 %109 to i64, !dbg !33
  %122 = getelementptr float, ptr addrspace(1) %0, i64 %121, !dbg !33
  %123 = sext i32 %110 to i64, !dbg !33
  %124 = getelementptr float, ptr addrspace(1) %0, i64 %123, !dbg !33
  %125 = sext i32 %111 to i64, !dbg !33
  %126 = getelementptr float, ptr addrspace(1) %0, i64 %125, !dbg !33
  %127 = sext i32 %112 to i64, !dbg !33
  %128 = getelementptr float, ptr addrspace(1) %0, i64 %127, !dbg !33
  %129 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %114, i1 %78) #2, !dbg !34
  %130 = bitcast i32 %129 to float, !dbg !34
  %131 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %116, i1 %79) #2, !dbg !34
  %132 = bitcast i32 %131 to float, !dbg !34
  %133 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %118, i1 %80) #2, !dbg !34
  %134 = bitcast i32 %133 to float, !dbg !34
  %135 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %120, i1 %81) #2, !dbg !34
  %136 = bitcast i32 %135 to float, !dbg !34
  %137 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %122, i1 %82) #2, !dbg !34
  %138 = bitcast i32 %137 to float, !dbg !34
  %139 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %124, i1 %83) #2, !dbg !34
  %140 = bitcast i32 %139 to float, !dbg !34
  %141 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %126, i1 %84) #2, !dbg !34
  %142 = bitcast i32 %141 to float, !dbg !34
  %143 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %128, i1 %85) #2, !dbg !34
  %144 = bitcast i32 %143 to float, !dbg !34
  %145 = add i32 %45, 2, !dbg !35
  %146 = add i32 %145, %46, !dbg !36
  %147 = add i32 %145, %47, !dbg !36
  %148 = add i32 %145, %48, !dbg !36
  %149 = add i32 %145, %49, !dbg !36
  %150 = add i32 %145, %50, !dbg !36
  %151 = add i32 %145, %51, !dbg !36
  %152 = add i32 %145, %52, !dbg !36
  %153 = add i32 %145, %53, !dbg !36
  %154 = sext i32 %146 to i64, !dbg !37
  %155 = getelementptr float, ptr addrspace(1) %0, i64 %154, !dbg !37
  %156 = sext i32 %147 to i64, !dbg !37
  %157 = getelementptr float, ptr addrspace(1) %0, i64 %156, !dbg !37
  %158 = sext i32 %148 to i64, !dbg !37
  %159 = getelementptr float, ptr addrspace(1) %0, i64 %158, !dbg !37
  %160 = sext i32 %149 to i64, !dbg !37
  %161 = getelementptr float, ptr addrspace(1) %0, i64 %160, !dbg !37
  %162 = sext i32 %150 to i64, !dbg !37
  %163 = getelementptr float, ptr addrspace(1) %0, i64 %162, !dbg !37
  %164 = sext i32 %151 to i64, !dbg !37
  %165 = getelementptr float, ptr addrspace(1) %0, i64 %164, !dbg !37
  %166 = sext i32 %152 to i64, !dbg !37
  %167 = getelementptr float, ptr addrspace(1) %0, i64 %166, !dbg !37
  %168 = sext i32 %153 to i64, !dbg !37
  %169 = getelementptr float, ptr addrspace(1) %0, i64 %168, !dbg !37
  %170 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %155, i1 %78) #2, !dbg !38
  %171 = bitcast i32 %170 to float, !dbg !38
  %172 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %157, i1 %79) #2, !dbg !38
  %173 = bitcast i32 %172 to float, !dbg !38
  %174 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %159, i1 %80) #2, !dbg !38
  %175 = bitcast i32 %174 to float, !dbg !38
  %176 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %161, i1 %81) #2, !dbg !38
  %177 = bitcast i32 %176 to float, !dbg !38
  %178 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %163, i1 %82) #2, !dbg !38
  %179 = bitcast i32 %178 to float, !dbg !38
  %180 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %165, i1 %83) #2, !dbg !38
  %181 = bitcast i32 %180 to float, !dbg !38
  %182 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %167, i1 %84) #2, !dbg !38
  %183 = bitcast i32 %182 to float, !dbg !38
  %184 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %169, i1 %85) #2, !dbg !38
  %185 = bitcast i32 %184 to float, !dbg !38
  %186 = add i32 %45, 3, !dbg !39
  %187 = add i32 %186, %46, !dbg !40
  %188 = add i32 %186, %47, !dbg !40
  %189 = add i32 %186, %48, !dbg !40
  %190 = add i32 %186, %49, !dbg !40
  %191 = add i32 %186, %50, !dbg !40
  %192 = add i32 %186, %51, !dbg !40
  %193 = add i32 %186, %52, !dbg !40
  %194 = add i32 %186, %53, !dbg !40
  %195 = sext i32 %187 to i64, !dbg !41
  %196 = getelementptr float, ptr addrspace(1) %0, i64 %195, !dbg !41
  %197 = sext i32 %188 to i64, !dbg !41
  %198 = getelementptr float, ptr addrspace(1) %0, i64 %197, !dbg !41
  %199 = sext i32 %189 to i64, !dbg !41
  %200 = getelementptr float, ptr addrspace(1) %0, i64 %199, !dbg !41
  %201 = sext i32 %190 to i64, !dbg !41
  %202 = getelementptr float, ptr addrspace(1) %0, i64 %201, !dbg !41
  %203 = sext i32 %191 to i64, !dbg !41
  %204 = getelementptr float, ptr addrspace(1) %0, i64 %203, !dbg !41
  %205 = sext i32 %192 to i64, !dbg !41
  %206 = getelementptr float, ptr addrspace(1) %0, i64 %205, !dbg !41
  %207 = sext i32 %193 to i64, !dbg !41
  %208 = getelementptr float, ptr addrspace(1) %0, i64 %207, !dbg !41
  %209 = sext i32 %194 to i64, !dbg !41
  %210 = getelementptr float, ptr addrspace(1) %0, i64 %209, !dbg !41
  %211 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %196, i1 %78) #2, !dbg !42
  %212 = bitcast i32 %211 to float, !dbg !42
  %213 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %198, i1 %79) #2, !dbg !42
  %214 = bitcast i32 %213 to float, !dbg !42
  %215 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %200, i1 %80) #2, !dbg !42
  %216 = bitcast i32 %215 to float, !dbg !42
  %217 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %202, i1 %81) #2, !dbg !42
  %218 = bitcast i32 %217 to float, !dbg !42
  %219 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %204, i1 %82) #2, !dbg !42
  %220 = bitcast i32 %219 to float, !dbg !42
  %221 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %206, i1 %83) #2, !dbg !42
  %222 = bitcast i32 %221 to float, !dbg !42
  %223 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %208, i1 %84) #2, !dbg !42
  %224 = bitcast i32 %223 to float, !dbg !42
  %225 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %210, i1 %85) #2, !dbg !42
  %226 = bitcast i32 %225 to float, !dbg !42
  %227 = add i32 %45, 4, !dbg !43
  %228 = add i32 %227, %46, !dbg !44
  %229 = add i32 %227, %47, !dbg !44
  %230 = add i32 %227, %48, !dbg !44
  %231 = add i32 %227, %49, !dbg !44
  %232 = add i32 %227, %50, !dbg !44
  %233 = add i32 %227, %51, !dbg !44
  %234 = add i32 %227, %52, !dbg !44
  %235 = add i32 %227, %53, !dbg !44
  %236 = sext i32 %228 to i64, !dbg !45
  %237 = getelementptr float, ptr addrspace(1) %0, i64 %236, !dbg !45
  %238 = sext i32 %229 to i64, !dbg !45
  %239 = getelementptr float, ptr addrspace(1) %0, i64 %238, !dbg !45
  %240 = sext i32 %230 to i64, !dbg !45
  %241 = getelementptr float, ptr addrspace(1) %0, i64 %240, !dbg !45
  %242 = sext i32 %231 to i64, !dbg !45
  %243 = getelementptr float, ptr addrspace(1) %0, i64 %242, !dbg !45
  %244 = sext i32 %232 to i64, !dbg !45
  %245 = getelementptr float, ptr addrspace(1) %0, i64 %244, !dbg !45
  %246 = sext i32 %233 to i64, !dbg !45
  %247 = getelementptr float, ptr addrspace(1) %0, i64 %246, !dbg !45
  %248 = sext i32 %234 to i64, !dbg !45
  %249 = getelementptr float, ptr addrspace(1) %0, i64 %248, !dbg !45
  %250 = sext i32 %235 to i64, !dbg !45
  %251 = getelementptr float, ptr addrspace(1) %0, i64 %250, !dbg !45
  %252 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %237, i1 %78) #2, !dbg !46
  %253 = bitcast i32 %252 to float, !dbg !46
  %254 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %239, i1 %79) #2, !dbg !46
  %255 = bitcast i32 %254 to float, !dbg !46
  %256 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %241, i1 %80) #2, !dbg !46
  %257 = bitcast i32 %256 to float, !dbg !46
  %258 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %243, i1 %81) #2, !dbg !46
  %259 = bitcast i32 %258 to float, !dbg !46
  %260 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %245, i1 %82) #2, !dbg !46
  %261 = bitcast i32 %260 to float, !dbg !46
  %262 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %247, i1 %83) #2, !dbg !46
  %263 = bitcast i32 %262 to float, !dbg !46
  %264 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %249, i1 %84) #2, !dbg !46
  %265 = bitcast i32 %264 to float, !dbg !46
  %266 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %251, i1 %85) #2, !dbg !46
  %267 = bitcast i32 %266 to float, !dbg !46
  %268 = add i32 %45, 64, !dbg !47
  %269 = add i32 %268, %46, !dbg !48
  %270 = add i32 %268, %47, !dbg !48
  %271 = add i32 %268, %48, !dbg !48
  %272 = add i32 %268, %49, !dbg !48
  %273 = add i32 %268, %50, !dbg !48
  %274 = add i32 %268, %51, !dbg !48
  %275 = add i32 %268, %52, !dbg !48
  %276 = add i32 %268, %53, !dbg !48
  %277 = sext i32 %269 to i64, !dbg !49
  %278 = getelementptr float, ptr addrspace(1) %0, i64 %277, !dbg !49
  %279 = sext i32 %270 to i64, !dbg !49
  %280 = getelementptr float, ptr addrspace(1) %0, i64 %279, !dbg !49
  %281 = sext i32 %271 to i64, !dbg !49
  %282 = getelementptr float, ptr addrspace(1) %0, i64 %281, !dbg !49
  %283 = sext i32 %272 to i64, !dbg !49
  %284 = getelementptr float, ptr addrspace(1) %0, i64 %283, !dbg !49
  %285 = sext i32 %273 to i64, !dbg !49
  %286 = getelementptr float, ptr addrspace(1) %0, i64 %285, !dbg !49
  %287 = sext i32 %274 to i64, !dbg !49
  %288 = getelementptr float, ptr addrspace(1) %0, i64 %287, !dbg !49
  %289 = sext i32 %275 to i64, !dbg !49
  %290 = getelementptr float, ptr addrspace(1) %0, i64 %289, !dbg !49
  %291 = sext i32 %276 to i64, !dbg !49
  %292 = getelementptr float, ptr addrspace(1) %0, i64 %291, !dbg !49
  %293 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %278, i1 %78) #2, !dbg !50
  %294 = bitcast i32 %293 to float, !dbg !50
  %295 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %280, i1 %79) #2, !dbg !50
  %296 = bitcast i32 %295 to float, !dbg !50
  %297 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %282, i1 %80) #2, !dbg !50
  %298 = bitcast i32 %297 to float, !dbg !50
  %299 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %284, i1 %81) #2, !dbg !50
  %300 = bitcast i32 %299 to float, !dbg !50
  %301 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %286, i1 %82) #2, !dbg !50
  %302 = bitcast i32 %301 to float, !dbg !50
  %303 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %288, i1 %83) #2, !dbg !50
  %304 = bitcast i32 %303 to float, !dbg !50
  %305 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %290, i1 %84) #2, !dbg !50
  %306 = bitcast i32 %305 to float, !dbg !50
  %307 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %292, i1 %85) #2, !dbg !50
  %308 = bitcast i32 %307 to float, !dbg !50
  %309 = add i32 %45, 65, !dbg !51
  %310 = add i32 %309, %46, !dbg !52
  %311 = add i32 %309, %47, !dbg !52
  %312 = add i32 %309, %48, !dbg !52
  %313 = add i32 %309, %49, !dbg !52
  %314 = add i32 %309, %50, !dbg !52
  %315 = add i32 %309, %51, !dbg !52
  %316 = add i32 %309, %52, !dbg !52
  %317 = add i32 %309, %53, !dbg !52
  %318 = sext i32 %310 to i64, !dbg !53
  %319 = getelementptr float, ptr addrspace(1) %0, i64 %318, !dbg !53
  %320 = sext i32 %311 to i64, !dbg !53
  %321 = getelementptr float, ptr addrspace(1) %0, i64 %320, !dbg !53
  %322 = sext i32 %312 to i64, !dbg !53
  %323 = getelementptr float, ptr addrspace(1) %0, i64 %322, !dbg !53
  %324 = sext i32 %313 to i64, !dbg !53
  %325 = getelementptr float, ptr addrspace(1) %0, i64 %324, !dbg !53
  %326 = sext i32 %314 to i64, !dbg !53
  %327 = getelementptr float, ptr addrspace(1) %0, i64 %326, !dbg !53
  %328 = sext i32 %315 to i64, !dbg !53
  %329 = getelementptr float, ptr addrspace(1) %0, i64 %328, !dbg !53
  %330 = sext i32 %316 to i64, !dbg !53
  %331 = getelementptr float, ptr addrspace(1) %0, i64 %330, !dbg !53
  %332 = sext i32 %317 to i64, !dbg !53
  %333 = getelementptr float, ptr addrspace(1) %0, i64 %332, !dbg !53
  %334 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %319, i1 %78) #2, !dbg !54
  %335 = bitcast i32 %334 to float, !dbg !54
  %336 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %321, i1 %79) #2, !dbg !54
  %337 = bitcast i32 %336 to float, !dbg !54
  %338 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %323, i1 %80) #2, !dbg !54
  %339 = bitcast i32 %338 to float, !dbg !54
  %340 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %325, i1 %81) #2, !dbg !54
  %341 = bitcast i32 %340 to float, !dbg !54
  %342 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %327, i1 %82) #2, !dbg !54
  %343 = bitcast i32 %342 to float, !dbg !54
  %344 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %329, i1 %83) #2, !dbg !54
  %345 = bitcast i32 %344 to float, !dbg !54
  %346 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %331, i1 %84) #2, !dbg !54
  %347 = bitcast i32 %346 to float, !dbg !54
  %348 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %333, i1 %85) #2, !dbg !54
  %349 = bitcast i32 %348 to float, !dbg !54
  %350 = add i32 %45, 66, !dbg !55
  %351 = add i32 %350, %46, !dbg !56
  %352 = add i32 %350, %47, !dbg !56
  %353 = add i32 %350, %48, !dbg !56
  %354 = add i32 %350, %49, !dbg !56
  %355 = add i32 %350, %50, !dbg !56
  %356 = add i32 %350, %51, !dbg !56
  %357 = add i32 %350, %52, !dbg !56
  %358 = add i32 %350, %53, !dbg !56
  %359 = sext i32 %351 to i64, !dbg !57
  %360 = getelementptr float, ptr addrspace(1) %0, i64 %359, !dbg !57
  %361 = sext i32 %352 to i64, !dbg !57
  %362 = getelementptr float, ptr addrspace(1) %0, i64 %361, !dbg !57
  %363 = sext i32 %353 to i64, !dbg !57
  %364 = getelementptr float, ptr addrspace(1) %0, i64 %363, !dbg !57
  %365 = sext i32 %354 to i64, !dbg !57
  %366 = getelementptr float, ptr addrspace(1) %0, i64 %365, !dbg !57
  %367 = sext i32 %355 to i64, !dbg !57
  %368 = getelementptr float, ptr addrspace(1) %0, i64 %367, !dbg !57
  %369 = sext i32 %356 to i64, !dbg !57
  %370 = getelementptr float, ptr addrspace(1) %0, i64 %369, !dbg !57
  %371 = sext i32 %357 to i64, !dbg !57
  %372 = getelementptr float, ptr addrspace(1) %0, i64 %371, !dbg !57
  %373 = sext i32 %358 to i64, !dbg !57
  %374 = getelementptr float, ptr addrspace(1) %0, i64 %373, !dbg !57
  %375 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %360, i1 %78) #2, !dbg !58
  %376 = bitcast i32 %375 to float, !dbg !58
  %377 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %362, i1 %79) #2, !dbg !58
  %378 = bitcast i32 %377 to float, !dbg !58
  %379 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %364, i1 %80) #2, !dbg !58
  %380 = bitcast i32 %379 to float, !dbg !58
  %381 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %366, i1 %81) #2, !dbg !58
  %382 = bitcast i32 %381 to float, !dbg !58
  %383 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %368, i1 %82) #2, !dbg !58
  %384 = bitcast i32 %383 to float, !dbg !58
  %385 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %370, i1 %83) #2, !dbg !58
  %386 = bitcast i32 %385 to float, !dbg !58
  %387 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %372, i1 %84) #2, !dbg !58
  %388 = bitcast i32 %387 to float, !dbg !58
  %389 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %374, i1 %85) #2, !dbg !58
  %390 = bitcast i32 %389 to float, !dbg !58
  %391 = add i32 %45, 67, !dbg !59
  %392 = add i32 %391, %46, !dbg !60
  %393 = add i32 %391, %47, !dbg !60
  %394 = add i32 %391, %48, !dbg !60
  %395 = add i32 %391, %49, !dbg !60
  %396 = add i32 %391, %50, !dbg !60
  %397 = add i32 %391, %51, !dbg !60
  %398 = add i32 %391, %52, !dbg !60
  %399 = add i32 %391, %53, !dbg !60
  %400 = sext i32 %392 to i64, !dbg !61
  %401 = getelementptr float, ptr addrspace(1) %0, i64 %400, !dbg !61
  %402 = sext i32 %393 to i64, !dbg !61
  %403 = getelementptr float, ptr addrspace(1) %0, i64 %402, !dbg !61
  %404 = sext i32 %394 to i64, !dbg !61
  %405 = getelementptr float, ptr addrspace(1) %0, i64 %404, !dbg !61
  %406 = sext i32 %395 to i64, !dbg !61
  %407 = getelementptr float, ptr addrspace(1) %0, i64 %406, !dbg !61
  %408 = sext i32 %396 to i64, !dbg !61
  %409 = getelementptr float, ptr addrspace(1) %0, i64 %408, !dbg !61
  %410 = sext i32 %397 to i64, !dbg !61
  %411 = getelementptr float, ptr addrspace(1) %0, i64 %410, !dbg !61
  %412 = sext i32 %398 to i64, !dbg !61
  %413 = getelementptr float, ptr addrspace(1) %0, i64 %412, !dbg !61
  %414 = sext i32 %399 to i64, !dbg !61
  %415 = getelementptr float, ptr addrspace(1) %0, i64 %414, !dbg !61
  %416 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %401, i1 %78) #2, !dbg !62
  %417 = bitcast i32 %416 to float, !dbg !62
  %418 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %403, i1 %79) #2, !dbg !62
  %419 = bitcast i32 %418 to float, !dbg !62
  %420 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %405, i1 %80) #2, !dbg !62
  %421 = bitcast i32 %420 to float, !dbg !62
  %422 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %407, i1 %81) #2, !dbg !62
  %423 = bitcast i32 %422 to float, !dbg !62
  %424 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %409, i1 %82) #2, !dbg !62
  %425 = bitcast i32 %424 to float, !dbg !62
  %426 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %411, i1 %83) #2, !dbg !62
  %427 = bitcast i32 %426 to float, !dbg !62
  %428 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %413, i1 %84) #2, !dbg !62
  %429 = bitcast i32 %428 to float, !dbg !62
  %430 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %415, i1 %85) #2, !dbg !62
  %431 = bitcast i32 %430 to float, !dbg !62
  %432 = add i32 %45, 68, !dbg !63
  %433 = add i32 %432, %46, !dbg !64
  %434 = add i32 %432, %47, !dbg !64
  %435 = add i32 %432, %48, !dbg !64
  %436 = add i32 %432, %49, !dbg !64
  %437 = add i32 %432, %50, !dbg !64
  %438 = add i32 %432, %51, !dbg !64
  %439 = add i32 %432, %52, !dbg !64
  %440 = add i32 %432, %53, !dbg !64
  %441 = sext i32 %433 to i64, !dbg !65
  %442 = getelementptr float, ptr addrspace(1) %0, i64 %441, !dbg !65
  %443 = sext i32 %434 to i64, !dbg !65
  %444 = getelementptr float, ptr addrspace(1) %0, i64 %443, !dbg !65
  %445 = sext i32 %435 to i64, !dbg !65
  %446 = getelementptr float, ptr addrspace(1) %0, i64 %445, !dbg !65
  %447 = sext i32 %436 to i64, !dbg !65
  %448 = getelementptr float, ptr addrspace(1) %0, i64 %447, !dbg !65
  %449 = sext i32 %437 to i64, !dbg !65
  %450 = getelementptr float, ptr addrspace(1) %0, i64 %449, !dbg !65
  %451 = sext i32 %438 to i64, !dbg !65
  %452 = getelementptr float, ptr addrspace(1) %0, i64 %451, !dbg !65
  %453 = sext i32 %439 to i64, !dbg !65
  %454 = getelementptr float, ptr addrspace(1) %0, i64 %453, !dbg !65
  %455 = sext i32 %440 to i64, !dbg !65
  %456 = getelementptr float, ptr addrspace(1) %0, i64 %455, !dbg !65
  %457 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %442, i1 %78) #2, !dbg !66
  %458 = bitcast i32 %457 to float, !dbg !66
  %459 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %444, i1 %79) #2, !dbg !66
  %460 = bitcast i32 %459 to float, !dbg !66
  %461 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %446, i1 %80) #2, !dbg !66
  %462 = bitcast i32 %461 to float, !dbg !66
  %463 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %448, i1 %81) #2, !dbg !66
  %464 = bitcast i32 %463 to float, !dbg !66
  %465 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %450, i1 %82) #2, !dbg !66
  %466 = bitcast i32 %465 to float, !dbg !66
  %467 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %452, i1 %83) #2, !dbg !66
  %468 = bitcast i32 %467 to float, !dbg !66
  %469 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %454, i1 %84) #2, !dbg !66
  %470 = bitcast i32 %469 to float, !dbg !66
  %471 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %456, i1 %85) #2, !dbg !66
  %472 = bitcast i32 %471 to float, !dbg !66
  %473 = add i32 %45, 128, !dbg !67
  %474 = add i32 %473, %46, !dbg !68
  %475 = add i32 %473, %47, !dbg !68
  %476 = add i32 %473, %48, !dbg !68
  %477 = add i32 %473, %49, !dbg !68
  %478 = add i32 %473, %50, !dbg !68
  %479 = add i32 %473, %51, !dbg !68
  %480 = add i32 %473, %52, !dbg !68
  %481 = add i32 %473, %53, !dbg !68
  %482 = sext i32 %474 to i64, !dbg !69
  %483 = getelementptr float, ptr addrspace(1) %0, i64 %482, !dbg !69
  %484 = sext i32 %475 to i64, !dbg !69
  %485 = getelementptr float, ptr addrspace(1) %0, i64 %484, !dbg !69
  %486 = sext i32 %476 to i64, !dbg !69
  %487 = getelementptr float, ptr addrspace(1) %0, i64 %486, !dbg !69
  %488 = sext i32 %477 to i64, !dbg !69
  %489 = getelementptr float, ptr addrspace(1) %0, i64 %488, !dbg !69
  %490 = sext i32 %478 to i64, !dbg !69
  %491 = getelementptr float, ptr addrspace(1) %0, i64 %490, !dbg !69
  %492 = sext i32 %479 to i64, !dbg !69
  %493 = getelementptr float, ptr addrspace(1) %0, i64 %492, !dbg !69
  %494 = sext i32 %480 to i64, !dbg !69
  %495 = getelementptr float, ptr addrspace(1) %0, i64 %494, !dbg !69
  %496 = sext i32 %481 to i64, !dbg !69
  %497 = getelementptr float, ptr addrspace(1) %0, i64 %496, !dbg !69
  %498 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %483, i1 %78) #2, !dbg !70
  %499 = bitcast i32 %498 to float, !dbg !70
  %500 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %485, i1 %79) #2, !dbg !70
  %501 = bitcast i32 %500 to float, !dbg !70
  %502 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %487, i1 %80) #2, !dbg !70
  %503 = bitcast i32 %502 to float, !dbg !70
  %504 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %489, i1 %81) #2, !dbg !70
  %505 = bitcast i32 %504 to float, !dbg !70
  %506 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %491, i1 %82) #2, !dbg !70
  %507 = bitcast i32 %506 to float, !dbg !70
  %508 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %493, i1 %83) #2, !dbg !70
  %509 = bitcast i32 %508 to float, !dbg !70
  %510 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %495, i1 %84) #2, !dbg !70
  %511 = bitcast i32 %510 to float, !dbg !70
  %512 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %497, i1 %85) #2, !dbg !70
  %513 = bitcast i32 %512 to float, !dbg !70
  %514 = add i32 %45, 129, !dbg !71
  %515 = add i32 %514, %46, !dbg !72
  %516 = add i32 %514, %47, !dbg !72
  %517 = add i32 %514, %48, !dbg !72
  %518 = add i32 %514, %49, !dbg !72
  %519 = add i32 %514, %50, !dbg !72
  %520 = add i32 %514, %51, !dbg !72
  %521 = add i32 %514, %52, !dbg !72
  %522 = add i32 %514, %53, !dbg !72
  %523 = sext i32 %515 to i64, !dbg !73
  %524 = getelementptr float, ptr addrspace(1) %0, i64 %523, !dbg !73
  %525 = sext i32 %516 to i64, !dbg !73
  %526 = getelementptr float, ptr addrspace(1) %0, i64 %525, !dbg !73
  %527 = sext i32 %517 to i64, !dbg !73
  %528 = getelementptr float, ptr addrspace(1) %0, i64 %527, !dbg !73
  %529 = sext i32 %518 to i64, !dbg !73
  %530 = getelementptr float, ptr addrspace(1) %0, i64 %529, !dbg !73
  %531 = sext i32 %519 to i64, !dbg !73
  %532 = getelementptr float, ptr addrspace(1) %0, i64 %531, !dbg !73
  %533 = sext i32 %520 to i64, !dbg !73
  %534 = getelementptr float, ptr addrspace(1) %0, i64 %533, !dbg !73
  %535 = sext i32 %521 to i64, !dbg !73
  %536 = getelementptr float, ptr addrspace(1) %0, i64 %535, !dbg !73
  %537 = sext i32 %522 to i64, !dbg !73
  %538 = getelementptr float, ptr addrspace(1) %0, i64 %537, !dbg !73
  %539 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %524, i1 %78) #2, !dbg !74
  %540 = bitcast i32 %539 to float, !dbg !74
  %541 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %526, i1 %79) #2, !dbg !74
  %542 = bitcast i32 %541 to float, !dbg !74
  %543 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %528, i1 %80) #2, !dbg !74
  %544 = bitcast i32 %543 to float, !dbg !74
  %545 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %530, i1 %81) #2, !dbg !74
  %546 = bitcast i32 %545 to float, !dbg !74
  %547 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %532, i1 %82) #2, !dbg !74
  %548 = bitcast i32 %547 to float, !dbg !74
  %549 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %534, i1 %83) #2, !dbg !74
  %550 = bitcast i32 %549 to float, !dbg !74
  %551 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %536, i1 %84) #2, !dbg !74
  %552 = bitcast i32 %551 to float, !dbg !74
  %553 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %538, i1 %85) #2, !dbg !74
  %554 = bitcast i32 %553 to float, !dbg !74
  %555 = add i32 %45, 130, !dbg !75
  %556 = add i32 %555, %46, !dbg !76
  %557 = add i32 %555, %47, !dbg !76
  %558 = add i32 %555, %48, !dbg !76
  %559 = add i32 %555, %49, !dbg !76
  %560 = add i32 %555, %50, !dbg !76
  %561 = add i32 %555, %51, !dbg !76
  %562 = add i32 %555, %52, !dbg !76
  %563 = add i32 %555, %53, !dbg !76
  %564 = sext i32 %556 to i64, !dbg !77
  %565 = getelementptr float, ptr addrspace(1) %0, i64 %564, !dbg !77
  %566 = sext i32 %557 to i64, !dbg !77
  %567 = getelementptr float, ptr addrspace(1) %0, i64 %566, !dbg !77
  %568 = sext i32 %558 to i64, !dbg !77
  %569 = getelementptr float, ptr addrspace(1) %0, i64 %568, !dbg !77
  %570 = sext i32 %559 to i64, !dbg !77
  %571 = getelementptr float, ptr addrspace(1) %0, i64 %570, !dbg !77
  %572 = sext i32 %560 to i64, !dbg !77
  %573 = getelementptr float, ptr addrspace(1) %0, i64 %572, !dbg !77
  %574 = sext i32 %561 to i64, !dbg !77
  %575 = getelementptr float, ptr addrspace(1) %0, i64 %574, !dbg !77
  %576 = sext i32 %562 to i64, !dbg !77
  %577 = getelementptr float, ptr addrspace(1) %0, i64 %576, !dbg !77
  %578 = sext i32 %563 to i64, !dbg !77
  %579 = getelementptr float, ptr addrspace(1) %0, i64 %578, !dbg !77
  %580 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %565, i1 %78) #2, !dbg !78
  %581 = bitcast i32 %580 to float, !dbg !78
  %582 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %567, i1 %79) #2, !dbg !78
  %583 = bitcast i32 %582 to float, !dbg !78
  %584 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %569, i1 %80) #2, !dbg !78
  %585 = bitcast i32 %584 to float, !dbg !78
  %586 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %571, i1 %81) #2, !dbg !78
  %587 = bitcast i32 %586 to float, !dbg !78
  %588 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %573, i1 %82) #2, !dbg !78
  %589 = bitcast i32 %588 to float, !dbg !78
  %590 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %575, i1 %83) #2, !dbg !78
  %591 = bitcast i32 %590 to float, !dbg !78
  %592 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %577, i1 %84) #2, !dbg !78
  %593 = bitcast i32 %592 to float, !dbg !78
  %594 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %579, i1 %85) #2, !dbg !78
  %595 = bitcast i32 %594 to float, !dbg !78
  %596 = add i32 %45, 131, !dbg !79
  %597 = add i32 %596, %46, !dbg !80
  %598 = add i32 %596, %47, !dbg !80
  %599 = add i32 %596, %48, !dbg !80
  %600 = add i32 %596, %49, !dbg !80
  %601 = add i32 %596, %50, !dbg !80
  %602 = add i32 %596, %51, !dbg !80
  %603 = add i32 %596, %52, !dbg !80
  %604 = add i32 %596, %53, !dbg !80
  %605 = sext i32 %597 to i64, !dbg !81
  %606 = getelementptr float, ptr addrspace(1) %0, i64 %605, !dbg !81
  %607 = sext i32 %598 to i64, !dbg !81
  %608 = getelementptr float, ptr addrspace(1) %0, i64 %607, !dbg !81
  %609 = sext i32 %599 to i64, !dbg !81
  %610 = getelementptr float, ptr addrspace(1) %0, i64 %609, !dbg !81
  %611 = sext i32 %600 to i64, !dbg !81
  %612 = getelementptr float, ptr addrspace(1) %0, i64 %611, !dbg !81
  %613 = sext i32 %601 to i64, !dbg !81
  %614 = getelementptr float, ptr addrspace(1) %0, i64 %613, !dbg !81
  %615 = sext i32 %602 to i64, !dbg !81
  %616 = getelementptr float, ptr addrspace(1) %0, i64 %615, !dbg !81
  %617 = sext i32 %603 to i64, !dbg !81
  %618 = getelementptr float, ptr addrspace(1) %0, i64 %617, !dbg !81
  %619 = sext i32 %604 to i64, !dbg !81
  %620 = getelementptr float, ptr addrspace(1) %0, i64 %619, !dbg !81
  %621 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %606, i1 %78) #2, !dbg !82
  %622 = bitcast i32 %621 to float, !dbg !82
  %623 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %608, i1 %79) #2, !dbg !82
  %624 = bitcast i32 %623 to float, !dbg !82
  %625 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %610, i1 %80) #2, !dbg !82
  %626 = bitcast i32 %625 to float, !dbg !82
  %627 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %612, i1 %81) #2, !dbg !82
  %628 = bitcast i32 %627 to float, !dbg !82
  %629 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %614, i1 %82) #2, !dbg !82
  %630 = bitcast i32 %629 to float, !dbg !82
  %631 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %616, i1 %83) #2, !dbg !82
  %632 = bitcast i32 %631 to float, !dbg !82
  %633 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %618, i1 %84) #2, !dbg !82
  %634 = bitcast i32 %633 to float, !dbg !82
  %635 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %620, i1 %85) #2, !dbg !82
  %636 = bitcast i32 %635 to float, !dbg !82
  %637 = add i32 %45, 132, !dbg !83
  %638 = add i32 %637, %46, !dbg !84
  %639 = add i32 %637, %47, !dbg !84
  %640 = add i32 %637, %48, !dbg !84
  %641 = add i32 %637, %49, !dbg !84
  %642 = add i32 %637, %50, !dbg !84
  %643 = add i32 %637, %51, !dbg !84
  %644 = add i32 %637, %52, !dbg !84
  %645 = add i32 %637, %53, !dbg !84
  %646 = sext i32 %638 to i64, !dbg !85
  %647 = getelementptr float, ptr addrspace(1) %0, i64 %646, !dbg !85
  %648 = sext i32 %639 to i64, !dbg !85
  %649 = getelementptr float, ptr addrspace(1) %0, i64 %648, !dbg !85
  %650 = sext i32 %640 to i64, !dbg !85
  %651 = getelementptr float, ptr addrspace(1) %0, i64 %650, !dbg !85
  %652 = sext i32 %641 to i64, !dbg !85
  %653 = getelementptr float, ptr addrspace(1) %0, i64 %652, !dbg !85
  %654 = sext i32 %642 to i64, !dbg !85
  %655 = getelementptr float, ptr addrspace(1) %0, i64 %654, !dbg !85
  %656 = sext i32 %643 to i64, !dbg !85
  %657 = getelementptr float, ptr addrspace(1) %0, i64 %656, !dbg !85
  %658 = sext i32 %644 to i64, !dbg !85
  %659 = getelementptr float, ptr addrspace(1) %0, i64 %658, !dbg !85
  %660 = sext i32 %645 to i64, !dbg !85
  %661 = getelementptr float, ptr addrspace(1) %0, i64 %660, !dbg !85
  %662 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %647, i1 %78) #2, !dbg !86
  %663 = bitcast i32 %662 to float, !dbg !86
  %664 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %649, i1 %79) #2, !dbg !86
  %665 = bitcast i32 %664 to float, !dbg !86
  %666 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %651, i1 %80) #2, !dbg !86
  %667 = bitcast i32 %666 to float, !dbg !86
  %668 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %653, i1 %81) #2, !dbg !86
  %669 = bitcast i32 %668 to float, !dbg !86
  %670 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %655, i1 %82) #2, !dbg !86
  %671 = bitcast i32 %670 to float, !dbg !86
  %672 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %657, i1 %83) #2, !dbg !86
  %673 = bitcast i32 %672 to float, !dbg !86
  %674 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %659, i1 %84) #2, !dbg !86
  %675 = bitcast i32 %674 to float, !dbg !86
  %676 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %661, i1 %85) #2, !dbg !86
  %677 = bitcast i32 %676 to float, !dbg !86
  %678 = add i32 %45, 192, !dbg !87
  %679 = add i32 %678, %46, !dbg !88
  %680 = add i32 %678, %47, !dbg !88
  %681 = add i32 %678, %48, !dbg !88
  %682 = add i32 %678, %49, !dbg !88
  %683 = add i32 %678, %50, !dbg !88
  %684 = add i32 %678, %51, !dbg !88
  %685 = add i32 %678, %52, !dbg !88
  %686 = add i32 %678, %53, !dbg !88
  %687 = sext i32 %679 to i64, !dbg !89
  %688 = getelementptr float, ptr addrspace(1) %0, i64 %687, !dbg !89
  %689 = sext i32 %680 to i64, !dbg !89
  %690 = getelementptr float, ptr addrspace(1) %0, i64 %689, !dbg !89
  %691 = sext i32 %681 to i64, !dbg !89
  %692 = getelementptr float, ptr addrspace(1) %0, i64 %691, !dbg !89
  %693 = sext i32 %682 to i64, !dbg !89
  %694 = getelementptr float, ptr addrspace(1) %0, i64 %693, !dbg !89
  %695 = sext i32 %683 to i64, !dbg !89
  %696 = getelementptr float, ptr addrspace(1) %0, i64 %695, !dbg !89
  %697 = sext i32 %684 to i64, !dbg !89
  %698 = getelementptr float, ptr addrspace(1) %0, i64 %697, !dbg !89
  %699 = sext i32 %685 to i64, !dbg !89
  %700 = getelementptr float, ptr addrspace(1) %0, i64 %699, !dbg !89
  %701 = sext i32 %686 to i64, !dbg !89
  %702 = getelementptr float, ptr addrspace(1) %0, i64 %701, !dbg !89
  %703 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %688, i1 %78) #2, !dbg !90
  %704 = bitcast i32 %703 to float, !dbg !90
  %705 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %690, i1 %79) #2, !dbg !90
  %706 = bitcast i32 %705 to float, !dbg !90
  %707 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %692, i1 %80) #2, !dbg !90
  %708 = bitcast i32 %707 to float, !dbg !90
  %709 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %694, i1 %81) #2, !dbg !90
  %710 = bitcast i32 %709 to float, !dbg !90
  %711 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %696, i1 %82) #2, !dbg !90
  %712 = bitcast i32 %711 to float, !dbg !90
  %713 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %698, i1 %83) #2, !dbg !90
  %714 = bitcast i32 %713 to float, !dbg !90
  %715 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %700, i1 %84) #2, !dbg !90
  %716 = bitcast i32 %715 to float, !dbg !90
  %717 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %702, i1 %85) #2, !dbg !90
  %718 = bitcast i32 %717 to float, !dbg !90
  %719 = add i32 %45, 193, !dbg !91
  %720 = add i32 %719, %46, !dbg !92
  %721 = add i32 %719, %47, !dbg !92
  %722 = add i32 %719, %48, !dbg !92
  %723 = add i32 %719, %49, !dbg !92
  %724 = add i32 %719, %50, !dbg !92
  %725 = add i32 %719, %51, !dbg !92
  %726 = add i32 %719, %52, !dbg !92
  %727 = add i32 %719, %53, !dbg !92
  %728 = sext i32 %720 to i64, !dbg !93
  %729 = getelementptr float, ptr addrspace(1) %0, i64 %728, !dbg !93
  %730 = sext i32 %721 to i64, !dbg !93
  %731 = getelementptr float, ptr addrspace(1) %0, i64 %730, !dbg !93
  %732 = sext i32 %722 to i64, !dbg !93
  %733 = getelementptr float, ptr addrspace(1) %0, i64 %732, !dbg !93
  %734 = sext i32 %723 to i64, !dbg !93
  %735 = getelementptr float, ptr addrspace(1) %0, i64 %734, !dbg !93
  %736 = sext i32 %724 to i64, !dbg !93
  %737 = getelementptr float, ptr addrspace(1) %0, i64 %736, !dbg !93
  %738 = sext i32 %725 to i64, !dbg !93
  %739 = getelementptr float, ptr addrspace(1) %0, i64 %738, !dbg !93
  %740 = sext i32 %726 to i64, !dbg !93
  %741 = getelementptr float, ptr addrspace(1) %0, i64 %740, !dbg !93
  %742 = sext i32 %727 to i64, !dbg !93
  %743 = getelementptr float, ptr addrspace(1) %0, i64 %742, !dbg !93
  %744 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %729, i1 %78) #2, !dbg !94
  %745 = bitcast i32 %744 to float, !dbg !94
  %746 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %731, i1 %79) #2, !dbg !94
  %747 = bitcast i32 %746 to float, !dbg !94
  %748 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %733, i1 %80) #2, !dbg !94
  %749 = bitcast i32 %748 to float, !dbg !94
  %750 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %735, i1 %81) #2, !dbg !94
  %751 = bitcast i32 %750 to float, !dbg !94
  %752 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %737, i1 %82) #2, !dbg !94
  %753 = bitcast i32 %752 to float, !dbg !94
  %754 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %739, i1 %83) #2, !dbg !94
  %755 = bitcast i32 %754 to float, !dbg !94
  %756 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %741, i1 %84) #2, !dbg !94
  %757 = bitcast i32 %756 to float, !dbg !94
  %758 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %743, i1 %85) #2, !dbg !94
  %759 = bitcast i32 %758 to float, !dbg !94
  %760 = add i32 %45, 194, !dbg !95
  %761 = add i32 %760, %46, !dbg !96
  %762 = add i32 %760, %47, !dbg !96
  %763 = add i32 %760, %48, !dbg !96
  %764 = add i32 %760, %49, !dbg !96
  %765 = add i32 %760, %50, !dbg !96
  %766 = add i32 %760, %51, !dbg !96
  %767 = add i32 %760, %52, !dbg !96
  %768 = add i32 %760, %53, !dbg !96
  %769 = sext i32 %761 to i64, !dbg !97
  %770 = getelementptr float, ptr addrspace(1) %0, i64 %769, !dbg !97
  %771 = sext i32 %762 to i64, !dbg !97
  %772 = getelementptr float, ptr addrspace(1) %0, i64 %771, !dbg !97
  %773 = sext i32 %763 to i64, !dbg !97
  %774 = getelementptr float, ptr addrspace(1) %0, i64 %773, !dbg !97
  %775 = sext i32 %764 to i64, !dbg !97
  %776 = getelementptr float, ptr addrspace(1) %0, i64 %775, !dbg !97
  %777 = sext i32 %765 to i64, !dbg !97
  %778 = getelementptr float, ptr addrspace(1) %0, i64 %777, !dbg !97
  %779 = sext i32 %766 to i64, !dbg !97
  %780 = getelementptr float, ptr addrspace(1) %0, i64 %779, !dbg !97
  %781 = sext i32 %767 to i64, !dbg !97
  %782 = getelementptr float, ptr addrspace(1) %0, i64 %781, !dbg !97
  %783 = sext i32 %768 to i64, !dbg !97
  %784 = getelementptr float, ptr addrspace(1) %0, i64 %783, !dbg !97
  %785 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %770, i1 %78) #2, !dbg !98
  %786 = bitcast i32 %785 to float, !dbg !98
  %787 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %772, i1 %79) #2, !dbg !98
  %788 = bitcast i32 %787 to float, !dbg !98
  %789 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %774, i1 %80) #2, !dbg !98
  %790 = bitcast i32 %789 to float, !dbg !98
  %791 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %776, i1 %81) #2, !dbg !98
  %792 = bitcast i32 %791 to float, !dbg !98
  %793 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %778, i1 %82) #2, !dbg !98
  %794 = bitcast i32 %793 to float, !dbg !98
  %795 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %780, i1 %83) #2, !dbg !98
  %796 = bitcast i32 %795 to float, !dbg !98
  %797 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %782, i1 %84) #2, !dbg !98
  %798 = bitcast i32 %797 to float, !dbg !98
  %799 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %784, i1 %85) #2, !dbg !98
  %800 = bitcast i32 %799 to float, !dbg !98
  %801 = add i32 %45, 195, !dbg !99
  %802 = add i32 %801, %46, !dbg !100
  %803 = add i32 %801, %47, !dbg !100
  %804 = add i32 %801, %48, !dbg !100
  %805 = add i32 %801, %49, !dbg !100
  %806 = add i32 %801, %50, !dbg !100
  %807 = add i32 %801, %51, !dbg !100
  %808 = add i32 %801, %52, !dbg !100
  %809 = add i32 %801, %53, !dbg !100
  %810 = sext i32 %802 to i64, !dbg !101
  %811 = getelementptr float, ptr addrspace(1) %0, i64 %810, !dbg !101
  %812 = sext i32 %803 to i64, !dbg !101
  %813 = getelementptr float, ptr addrspace(1) %0, i64 %812, !dbg !101
  %814 = sext i32 %804 to i64, !dbg !101
  %815 = getelementptr float, ptr addrspace(1) %0, i64 %814, !dbg !101
  %816 = sext i32 %805 to i64, !dbg !101
  %817 = getelementptr float, ptr addrspace(1) %0, i64 %816, !dbg !101
  %818 = sext i32 %806 to i64, !dbg !101
  %819 = getelementptr float, ptr addrspace(1) %0, i64 %818, !dbg !101
  %820 = sext i32 %807 to i64, !dbg !101
  %821 = getelementptr float, ptr addrspace(1) %0, i64 %820, !dbg !101
  %822 = sext i32 %808 to i64, !dbg !101
  %823 = getelementptr float, ptr addrspace(1) %0, i64 %822, !dbg !101
  %824 = sext i32 %809 to i64, !dbg !101
  %825 = getelementptr float, ptr addrspace(1) %0, i64 %824, !dbg !101
  %826 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %811, i1 %78) #2, !dbg !102
  %827 = bitcast i32 %826 to float, !dbg !102
  %828 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %813, i1 %79) #2, !dbg !102
  %829 = bitcast i32 %828 to float, !dbg !102
  %830 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %815, i1 %80) #2, !dbg !102
  %831 = bitcast i32 %830 to float, !dbg !102
  %832 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %817, i1 %81) #2, !dbg !102
  %833 = bitcast i32 %832 to float, !dbg !102
  %834 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %819, i1 %82) #2, !dbg !102
  %835 = bitcast i32 %834 to float, !dbg !102
  %836 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %821, i1 %83) #2, !dbg !102
  %837 = bitcast i32 %836 to float, !dbg !102
  %838 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %823, i1 %84) #2, !dbg !102
  %839 = bitcast i32 %838 to float, !dbg !102
  %840 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %825, i1 %85) #2, !dbg !102
  %841 = bitcast i32 %840 to float, !dbg !102
  %842 = add i32 %45, 196, !dbg !103
  %843 = add i32 %842, %46, !dbg !104
  %844 = add i32 %842, %47, !dbg !104
  %845 = add i32 %842, %48, !dbg !104
  %846 = add i32 %842, %49, !dbg !104
  %847 = add i32 %842, %50, !dbg !104
  %848 = add i32 %842, %51, !dbg !104
  %849 = add i32 %842, %52, !dbg !104
  %850 = add i32 %842, %53, !dbg !104
  %851 = sext i32 %843 to i64, !dbg !105
  %852 = getelementptr float, ptr addrspace(1) %0, i64 %851, !dbg !105
  %853 = sext i32 %844 to i64, !dbg !105
  %854 = getelementptr float, ptr addrspace(1) %0, i64 %853, !dbg !105
  %855 = sext i32 %845 to i64, !dbg !105
  %856 = getelementptr float, ptr addrspace(1) %0, i64 %855, !dbg !105
  %857 = sext i32 %846 to i64, !dbg !105
  %858 = getelementptr float, ptr addrspace(1) %0, i64 %857, !dbg !105
  %859 = sext i32 %847 to i64, !dbg !105
  %860 = getelementptr float, ptr addrspace(1) %0, i64 %859, !dbg !105
  %861 = sext i32 %848 to i64, !dbg !105
  %862 = getelementptr float, ptr addrspace(1) %0, i64 %861, !dbg !105
  %863 = sext i32 %849 to i64, !dbg !105
  %864 = getelementptr float, ptr addrspace(1) %0, i64 %863, !dbg !105
  %865 = sext i32 %850 to i64, !dbg !105
  %866 = getelementptr float, ptr addrspace(1) %0, i64 %865, !dbg !105
  %867 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %852, i1 %78) #2, !dbg !106
  %868 = bitcast i32 %867 to float, !dbg !106
  %869 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %854, i1 %79) #2, !dbg !106
  %870 = bitcast i32 %869 to float, !dbg !106
  %871 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %856, i1 %80) #2, !dbg !106
  %872 = bitcast i32 %871 to float, !dbg !106
  %873 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %858, i1 %81) #2, !dbg !106
  %874 = bitcast i32 %873 to float, !dbg !106
  %875 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %860, i1 %82) #2, !dbg !106
  %876 = bitcast i32 %875 to float, !dbg !106
  %877 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %862, i1 %83) #2, !dbg !106
  %878 = bitcast i32 %877 to float, !dbg !106
  %879 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %864, i1 %84) #2, !dbg !106
  %880 = bitcast i32 %879 to float, !dbg !106
  %881 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %866, i1 %85) #2, !dbg !106
  %882 = bitcast i32 %881 to float, !dbg !106
  %883 = add i32 %45, 256, !dbg !107
  %884 = add i32 %883, %46, !dbg !108
  %885 = add i32 %883, %47, !dbg !108
  %886 = add i32 %883, %48, !dbg !108
  %887 = add i32 %883, %49, !dbg !108
  %888 = add i32 %883, %50, !dbg !108
  %889 = add i32 %883, %51, !dbg !108
  %890 = add i32 %883, %52, !dbg !108
  %891 = add i32 %883, %53, !dbg !108
  %892 = sext i32 %884 to i64, !dbg !109
  %893 = getelementptr float, ptr addrspace(1) %0, i64 %892, !dbg !109
  %894 = sext i32 %885 to i64, !dbg !109
  %895 = getelementptr float, ptr addrspace(1) %0, i64 %894, !dbg !109
  %896 = sext i32 %886 to i64, !dbg !109
  %897 = getelementptr float, ptr addrspace(1) %0, i64 %896, !dbg !109
  %898 = sext i32 %887 to i64, !dbg !109
  %899 = getelementptr float, ptr addrspace(1) %0, i64 %898, !dbg !109
  %900 = sext i32 %888 to i64, !dbg !109
  %901 = getelementptr float, ptr addrspace(1) %0, i64 %900, !dbg !109
  %902 = sext i32 %889 to i64, !dbg !109
  %903 = getelementptr float, ptr addrspace(1) %0, i64 %902, !dbg !109
  %904 = sext i32 %890 to i64, !dbg !109
  %905 = getelementptr float, ptr addrspace(1) %0, i64 %904, !dbg !109
  %906 = sext i32 %891 to i64, !dbg !109
  %907 = getelementptr float, ptr addrspace(1) %0, i64 %906, !dbg !109
  %908 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %893, i1 %78) #2, !dbg !110
  %909 = bitcast i32 %908 to float, !dbg !110
  %910 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %895, i1 %79) #2, !dbg !110
  %911 = bitcast i32 %910 to float, !dbg !110
  %912 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %897, i1 %80) #2, !dbg !110
  %913 = bitcast i32 %912 to float, !dbg !110
  %914 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %899, i1 %81) #2, !dbg !110
  %915 = bitcast i32 %914 to float, !dbg !110
  %916 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %901, i1 %82) #2, !dbg !110
  %917 = bitcast i32 %916 to float, !dbg !110
  %918 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %903, i1 %83) #2, !dbg !110
  %919 = bitcast i32 %918 to float, !dbg !110
  %920 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %905, i1 %84) #2, !dbg !110
  %921 = bitcast i32 %920 to float, !dbg !110
  %922 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %907, i1 %85) #2, !dbg !110
  %923 = bitcast i32 %922 to float, !dbg !110
  %924 = add i32 %45, 257, !dbg !111
  %925 = add i32 %924, %46, !dbg !112
  %926 = add i32 %924, %47, !dbg !112
  %927 = add i32 %924, %48, !dbg !112
  %928 = add i32 %924, %49, !dbg !112
  %929 = add i32 %924, %50, !dbg !112
  %930 = add i32 %924, %51, !dbg !112
  %931 = add i32 %924, %52, !dbg !112
  %932 = add i32 %924, %53, !dbg !112
  %933 = sext i32 %925 to i64, !dbg !113
  %934 = getelementptr float, ptr addrspace(1) %0, i64 %933, !dbg !113
  %935 = sext i32 %926 to i64, !dbg !113
  %936 = getelementptr float, ptr addrspace(1) %0, i64 %935, !dbg !113
  %937 = sext i32 %927 to i64, !dbg !113
  %938 = getelementptr float, ptr addrspace(1) %0, i64 %937, !dbg !113
  %939 = sext i32 %928 to i64, !dbg !113
  %940 = getelementptr float, ptr addrspace(1) %0, i64 %939, !dbg !113
  %941 = sext i32 %929 to i64, !dbg !113
  %942 = getelementptr float, ptr addrspace(1) %0, i64 %941, !dbg !113
  %943 = sext i32 %930 to i64, !dbg !113
  %944 = getelementptr float, ptr addrspace(1) %0, i64 %943, !dbg !113
  %945 = sext i32 %931 to i64, !dbg !113
  %946 = getelementptr float, ptr addrspace(1) %0, i64 %945, !dbg !113
  %947 = sext i32 %932 to i64, !dbg !113
  %948 = getelementptr float, ptr addrspace(1) %0, i64 %947, !dbg !113
  %949 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %934, i1 %78) #2, !dbg !114
  %950 = bitcast i32 %949 to float, !dbg !114
  %951 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %936, i1 %79) #2, !dbg !114
  %952 = bitcast i32 %951 to float, !dbg !114
  %953 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %938, i1 %80) #2, !dbg !114
  %954 = bitcast i32 %953 to float, !dbg !114
  %955 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %940, i1 %81) #2, !dbg !114
  %956 = bitcast i32 %955 to float, !dbg !114
  %957 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %942, i1 %82) #2, !dbg !114
  %958 = bitcast i32 %957 to float, !dbg !114
  %959 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %944, i1 %83) #2, !dbg !114
  %960 = bitcast i32 %959 to float, !dbg !114
  %961 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %946, i1 %84) #2, !dbg !114
  %962 = bitcast i32 %961 to float, !dbg !114
  %963 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %948, i1 %85) #2, !dbg !114
  %964 = bitcast i32 %963 to float, !dbg !114
  %965 = add i32 %45, 258, !dbg !115
  %966 = add i32 %965, %46, !dbg !116
  %967 = add i32 %965, %47, !dbg !116
  %968 = add i32 %965, %48, !dbg !116
  %969 = add i32 %965, %49, !dbg !116
  %970 = add i32 %965, %50, !dbg !116
  %971 = add i32 %965, %51, !dbg !116
  %972 = add i32 %965, %52, !dbg !116
  %973 = add i32 %965, %53, !dbg !116
  %974 = sext i32 %966 to i64, !dbg !117
  %975 = getelementptr float, ptr addrspace(1) %0, i64 %974, !dbg !117
  %976 = sext i32 %967 to i64, !dbg !117
  %977 = getelementptr float, ptr addrspace(1) %0, i64 %976, !dbg !117
  %978 = sext i32 %968 to i64, !dbg !117
  %979 = getelementptr float, ptr addrspace(1) %0, i64 %978, !dbg !117
  %980 = sext i32 %969 to i64, !dbg !117
  %981 = getelementptr float, ptr addrspace(1) %0, i64 %980, !dbg !117
  %982 = sext i32 %970 to i64, !dbg !117
  %983 = getelementptr float, ptr addrspace(1) %0, i64 %982, !dbg !117
  %984 = sext i32 %971 to i64, !dbg !117
  %985 = getelementptr float, ptr addrspace(1) %0, i64 %984, !dbg !117
  %986 = sext i32 %972 to i64, !dbg !117
  %987 = getelementptr float, ptr addrspace(1) %0, i64 %986, !dbg !117
  %988 = sext i32 %973 to i64, !dbg !117
  %989 = getelementptr float, ptr addrspace(1) %0, i64 %988, !dbg !117
  %990 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %975, i1 %78) #2, !dbg !118
  %991 = bitcast i32 %990 to float, !dbg !118
  %992 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %977, i1 %79) #2, !dbg !118
  %993 = bitcast i32 %992 to float, !dbg !118
  %994 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %979, i1 %80) #2, !dbg !118
  %995 = bitcast i32 %994 to float, !dbg !118
  %996 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %981, i1 %81) #2, !dbg !118
  %997 = bitcast i32 %996 to float, !dbg !118
  %998 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %983, i1 %82) #2, !dbg !118
  %999 = bitcast i32 %998 to float, !dbg !118
  %1000 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %985, i1 %83) #2, !dbg !118
  %1001 = bitcast i32 %1000 to float, !dbg !118
  %1002 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %987, i1 %84) #2, !dbg !118
  %1003 = bitcast i32 %1002 to float, !dbg !118
  %1004 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %989, i1 %85) #2, !dbg !118
  %1005 = bitcast i32 %1004 to float, !dbg !118
  %1006 = add i32 %45, 259, !dbg !119
  %1007 = add i32 %1006, %46, !dbg !120
  %1008 = add i32 %1006, %47, !dbg !120
  %1009 = add i32 %1006, %48, !dbg !120
  %1010 = add i32 %1006, %49, !dbg !120
  %1011 = add i32 %1006, %50, !dbg !120
  %1012 = add i32 %1006, %51, !dbg !120
  %1013 = add i32 %1006, %52, !dbg !120
  %1014 = add i32 %1006, %53, !dbg !120
  %1015 = sext i32 %1007 to i64, !dbg !121
  %1016 = getelementptr float, ptr addrspace(1) %0, i64 %1015, !dbg !121
  %1017 = sext i32 %1008 to i64, !dbg !121
  %1018 = getelementptr float, ptr addrspace(1) %0, i64 %1017, !dbg !121
  %1019 = sext i32 %1009 to i64, !dbg !121
  %1020 = getelementptr float, ptr addrspace(1) %0, i64 %1019, !dbg !121
  %1021 = sext i32 %1010 to i64, !dbg !121
  %1022 = getelementptr float, ptr addrspace(1) %0, i64 %1021, !dbg !121
  %1023 = sext i32 %1011 to i64, !dbg !121
  %1024 = getelementptr float, ptr addrspace(1) %0, i64 %1023, !dbg !121
  %1025 = sext i32 %1012 to i64, !dbg !121
  %1026 = getelementptr float, ptr addrspace(1) %0, i64 %1025, !dbg !121
  %1027 = sext i32 %1013 to i64, !dbg !121
  %1028 = getelementptr float, ptr addrspace(1) %0, i64 %1027, !dbg !121
  %1029 = sext i32 %1014 to i64, !dbg !121
  %1030 = getelementptr float, ptr addrspace(1) %0, i64 %1029, !dbg !121
  %1031 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1016, i1 %78) #2, !dbg !122
  %1032 = bitcast i32 %1031 to float, !dbg !122
  %1033 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1018, i1 %79) #2, !dbg !122
  %1034 = bitcast i32 %1033 to float, !dbg !122
  %1035 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1020, i1 %80) #2, !dbg !122
  %1036 = bitcast i32 %1035 to float, !dbg !122
  %1037 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1022, i1 %81) #2, !dbg !122
  %1038 = bitcast i32 %1037 to float, !dbg !122
  %1039 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1024, i1 %82) #2, !dbg !122
  %1040 = bitcast i32 %1039 to float, !dbg !122
  %1041 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1026, i1 %83) #2, !dbg !122
  %1042 = bitcast i32 %1041 to float, !dbg !122
  %1043 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1028, i1 %84) #2, !dbg !122
  %1044 = bitcast i32 %1043 to float, !dbg !122
  %1045 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1030, i1 %85) #2, !dbg !122
  %1046 = bitcast i32 %1045 to float, !dbg !122
  %1047 = add i32 %45, 260, !dbg !123
  %1048 = add i32 %1047, %46, !dbg !124
  %1049 = add i32 %1047, %47, !dbg !124
  %1050 = add i32 %1047, %48, !dbg !124
  %1051 = add i32 %1047, %49, !dbg !124
  %1052 = add i32 %1047, %50, !dbg !124
  %1053 = add i32 %1047, %51, !dbg !124
  %1054 = add i32 %1047, %52, !dbg !124
  %1055 = add i32 %1047, %53, !dbg !124
  %1056 = sext i32 %1048 to i64, !dbg !125
  %1057 = getelementptr float, ptr addrspace(1) %0, i64 %1056, !dbg !125
  %1058 = sext i32 %1049 to i64, !dbg !125
  %1059 = getelementptr float, ptr addrspace(1) %0, i64 %1058, !dbg !125
  %1060 = sext i32 %1050 to i64, !dbg !125
  %1061 = getelementptr float, ptr addrspace(1) %0, i64 %1060, !dbg !125
  %1062 = sext i32 %1051 to i64, !dbg !125
  %1063 = getelementptr float, ptr addrspace(1) %0, i64 %1062, !dbg !125
  %1064 = sext i32 %1052 to i64, !dbg !125
  %1065 = getelementptr float, ptr addrspace(1) %0, i64 %1064, !dbg !125
  %1066 = sext i32 %1053 to i64, !dbg !125
  %1067 = getelementptr float, ptr addrspace(1) %0, i64 %1066, !dbg !125
  %1068 = sext i32 %1054 to i64, !dbg !125
  %1069 = getelementptr float, ptr addrspace(1) %0, i64 %1068, !dbg !125
  %1070 = sext i32 %1055 to i64, !dbg !125
  %1071 = getelementptr float, ptr addrspace(1) %0, i64 %1070, !dbg !125
  %1072 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1057, i1 %78) #2, !dbg !126
  %1073 = bitcast i32 %1072 to float, !dbg !126
  %1074 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1059, i1 %79) #2, !dbg !126
  %1075 = bitcast i32 %1074 to float, !dbg !126
  %1076 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1061, i1 %80) #2, !dbg !126
  %1077 = bitcast i32 %1076 to float, !dbg !126
  %1078 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1063, i1 %81) #2, !dbg !126
  %1079 = bitcast i32 %1078 to float, !dbg !126
  %1080 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1065, i1 %82) #2, !dbg !126
  %1081 = bitcast i32 %1080 to float, !dbg !126
  %1082 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1067, i1 %83) #2, !dbg !126
  %1083 = bitcast i32 %1082 to float, !dbg !126
  %1084 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1069, i1 %84) #2, !dbg !126
  %1085 = bitcast i32 %1084 to float, !dbg !126
  %1086 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1071, i1 %85) #2, !dbg !126
  %1087 = bitcast i32 %1086 to float, !dbg !126
  %1088 = fadd float %89, %130, !dbg !127
  %1089 = fadd float %91, %132, !dbg !127
  %1090 = fadd float %93, %134, !dbg !127
  %1091 = fadd float %95, %136, !dbg !127
  %1092 = fadd float %97, %138, !dbg !127
  %1093 = fadd float %99, %140, !dbg !127
  %1094 = fadd float %101, %142, !dbg !127
  %1095 = fadd float %103, %144, !dbg !127
  %1096 = fadd float %1088, %171, !dbg !128
  %1097 = fadd float %1089, %173, !dbg !128
  %1098 = fadd float %1090, %175, !dbg !128
  %1099 = fadd float %1091, %177, !dbg !128
  %1100 = fadd float %1092, %179, !dbg !128
  %1101 = fadd float %1093, %181, !dbg !128
  %1102 = fadd float %1094, %183, !dbg !128
  %1103 = fadd float %1095, %185, !dbg !128
  %1104 = fadd float %1096, %212, !dbg !129
  %1105 = fadd float %1097, %214, !dbg !129
  %1106 = fadd float %1098, %216, !dbg !129
  %1107 = fadd float %1099, %218, !dbg !129
  %1108 = fadd float %1100, %220, !dbg !129
  %1109 = fadd float %1101, %222, !dbg !129
  %1110 = fadd float %1102, %224, !dbg !129
  %1111 = fadd float %1103, %226, !dbg !129
  %1112 = fadd float %1104, %253, !dbg !130
  %1113 = fadd float %1105, %255, !dbg !130
  %1114 = fadd float %1106, %257, !dbg !130
  %1115 = fadd float %1107, %259, !dbg !130
  %1116 = fadd float %1108, %261, !dbg !130
  %1117 = fadd float %1109, %263, !dbg !130
  %1118 = fadd float %1110, %265, !dbg !130
  %1119 = fadd float %1111, %267, !dbg !130
  %1120 = fadd float %1112, %294, !dbg !131
  %1121 = fadd float %1113, %296, !dbg !131
  %1122 = fadd float %1114, %298, !dbg !131
  %1123 = fadd float %1115, %300, !dbg !131
  %1124 = fadd float %1116, %302, !dbg !131
  %1125 = fadd float %1117, %304, !dbg !131
  %1126 = fadd float %1118, %306, !dbg !131
  %1127 = fadd float %1119, %308, !dbg !131
  %1128 = fadd float %1120, %335, !dbg !132
  %1129 = fadd float %1121, %337, !dbg !132
  %1130 = fadd float %1122, %339, !dbg !132
  %1131 = fadd float %1123, %341, !dbg !132
  %1132 = fadd float %1124, %343, !dbg !132
  %1133 = fadd float %1125, %345, !dbg !132
  %1134 = fadd float %1126, %347, !dbg !132
  %1135 = fadd float %1127, %349, !dbg !132
  %1136 = fadd float %1128, %376, !dbg !133
  %1137 = fadd float %1129, %378, !dbg !133
  %1138 = fadd float %1130, %380, !dbg !133
  %1139 = fadd float %1131, %382, !dbg !133
  %1140 = fadd float %1132, %384, !dbg !133
  %1141 = fadd float %1133, %386, !dbg !133
  %1142 = fadd float %1134, %388, !dbg !133
  %1143 = fadd float %1135, %390, !dbg !133
  %1144 = fadd float %1136, %417, !dbg !134
  %1145 = fadd float %1137, %419, !dbg !134
  %1146 = fadd float %1138, %421, !dbg !134
  %1147 = fadd float %1139, %423, !dbg !134
  %1148 = fadd float %1140, %425, !dbg !134
  %1149 = fadd float %1141, %427, !dbg !134
  %1150 = fadd float %1142, %429, !dbg !134
  %1151 = fadd float %1143, %431, !dbg !134
  %1152 = fadd float %1144, %458, !dbg !135
  %1153 = fadd float %1145, %460, !dbg !135
  %1154 = fadd float %1146, %462, !dbg !135
  %1155 = fadd float %1147, %464, !dbg !135
  %1156 = fadd float %1148, %466, !dbg !135
  %1157 = fadd float %1149, %468, !dbg !135
  %1158 = fadd float %1150, %470, !dbg !135
  %1159 = fadd float %1151, %472, !dbg !135
  %1160 = fadd float %1152, %499, !dbg !136
  %1161 = fadd float %1153, %501, !dbg !136
  %1162 = fadd float %1154, %503, !dbg !136
  %1163 = fadd float %1155, %505, !dbg !136
  %1164 = fadd float %1156, %507, !dbg !136
  %1165 = fadd float %1157, %509, !dbg !136
  %1166 = fadd float %1158, %511, !dbg !136
  %1167 = fadd float %1159, %513, !dbg !136
  %1168 = fadd float %1160, %540, !dbg !137
  %1169 = fadd float %1161, %542, !dbg !137
  %1170 = fadd float %1162, %544, !dbg !137
  %1171 = fadd float %1163, %546, !dbg !137
  %1172 = fadd float %1164, %548, !dbg !137
  %1173 = fadd float %1165, %550, !dbg !137
  %1174 = fadd float %1166, %552, !dbg !137
  %1175 = fadd float %1167, %554, !dbg !137
  %1176 = fadd float %1168, %581, !dbg !138
  %1177 = fadd float %1169, %583, !dbg !138
  %1178 = fadd float %1170, %585, !dbg !138
  %1179 = fadd float %1171, %587, !dbg !138
  %1180 = fadd float %1172, %589, !dbg !138
  %1181 = fadd float %1173, %591, !dbg !138
  %1182 = fadd float %1174, %593, !dbg !138
  %1183 = fadd float %1175, %595, !dbg !138
  %1184 = fadd float %1176, %622, !dbg !139
  %1185 = fadd float %1177, %624, !dbg !139
  %1186 = fadd float %1178, %626, !dbg !139
  %1187 = fadd float %1179, %628, !dbg !139
  %1188 = fadd float %1180, %630, !dbg !139
  %1189 = fadd float %1181, %632, !dbg !139
  %1190 = fadd float %1182, %634, !dbg !139
  %1191 = fadd float %1183, %636, !dbg !139
  %1192 = fadd float %1184, %663, !dbg !140
  %1193 = fadd float %1185, %665, !dbg !140
  %1194 = fadd float %1186, %667, !dbg !140
  %1195 = fadd float %1187, %669, !dbg !140
  %1196 = fadd float %1188, %671, !dbg !140
  %1197 = fadd float %1189, %673, !dbg !140
  %1198 = fadd float %1190, %675, !dbg !140
  %1199 = fadd float %1191, %677, !dbg !140
  %1200 = fadd float %1192, %704, !dbg !141
  %1201 = fadd float %1193, %706, !dbg !141
  %1202 = fadd float %1194, %708, !dbg !141
  %1203 = fadd float %1195, %710, !dbg !141
  %1204 = fadd float %1196, %712, !dbg !141
  %1205 = fadd float %1197, %714, !dbg !141
  %1206 = fadd float %1198, %716, !dbg !141
  %1207 = fadd float %1199, %718, !dbg !141
  %1208 = fadd float %1200, %745, !dbg !142
  %1209 = fadd float %1201, %747, !dbg !142
  %1210 = fadd float %1202, %749, !dbg !142
  %1211 = fadd float %1203, %751, !dbg !142
  %1212 = fadd float %1204, %753, !dbg !142
  %1213 = fadd float %1205, %755, !dbg !142
  %1214 = fadd float %1206, %757, !dbg !142
  %1215 = fadd float %1207, %759, !dbg !142
  %1216 = fadd float %1208, %786, !dbg !143
  %1217 = fadd float %1209, %788, !dbg !143
  %1218 = fadd float %1210, %790, !dbg !143
  %1219 = fadd float %1211, %792, !dbg !143
  %1220 = fadd float %1212, %794, !dbg !143
  %1221 = fadd float %1213, %796, !dbg !143
  %1222 = fadd float %1214, %798, !dbg !143
  %1223 = fadd float %1215, %800, !dbg !143
  %1224 = fadd float %1216, %827, !dbg !144
  %1225 = fadd float %1217, %829, !dbg !144
  %1226 = fadd float %1218, %831, !dbg !144
  %1227 = fadd float %1219, %833, !dbg !144
  %1228 = fadd float %1220, %835, !dbg !144
  %1229 = fadd float %1221, %837, !dbg !144
  %1230 = fadd float %1222, %839, !dbg !144
  %1231 = fadd float %1223, %841, !dbg !144
  %1232 = fadd float %1224, %868, !dbg !145
  %1233 = fadd float %1225, %870, !dbg !145
  %1234 = fadd float %1226, %872, !dbg !145
  %1235 = fadd float %1227, %874, !dbg !145
  %1236 = fadd float %1228, %876, !dbg !145
  %1237 = fadd float %1229, %878, !dbg !145
  %1238 = fadd float %1230, %880, !dbg !145
  %1239 = fadd float %1231, %882, !dbg !145
  %1240 = fadd float %1232, %909, !dbg !146
  %1241 = fadd float %1233, %911, !dbg !146
  %1242 = fadd float %1234, %913, !dbg !146
  %1243 = fadd float %1235, %915, !dbg !146
  %1244 = fadd float %1236, %917, !dbg !146
  %1245 = fadd float %1237, %919, !dbg !146
  %1246 = fadd float %1238, %921, !dbg !146
  %1247 = fadd float %1239, %923, !dbg !146
  %1248 = fadd float %1240, %950, !dbg !147
  %1249 = fadd float %1241, %952, !dbg !147
  %1250 = fadd float %1242, %954, !dbg !147
  %1251 = fadd float %1243, %956, !dbg !147
  %1252 = fadd float %1244, %958, !dbg !147
  %1253 = fadd float %1245, %960, !dbg !147
  %1254 = fadd float %1246, %962, !dbg !147
  %1255 = fadd float %1247, %964, !dbg !147
  %1256 = fadd float %1248, %991, !dbg !148
  %1257 = fadd float %1249, %993, !dbg !148
  %1258 = fadd float %1250, %995, !dbg !148
  %1259 = fadd float %1251, %997, !dbg !148
  %1260 = fadd float %1252, %999, !dbg !148
  %1261 = fadd float %1253, %1001, !dbg !148
  %1262 = fadd float %1254, %1003, !dbg !148
  %1263 = fadd float %1255, %1005, !dbg !148
  %1264 = fadd float %1256, %1032, !dbg !149
  %1265 = fadd float %1257, %1034, !dbg !149
  %1266 = fadd float %1258, %1036, !dbg !149
  %1267 = fadd float %1259, %1038, !dbg !149
  %1268 = fadd float %1260, %1040, !dbg !149
  %1269 = fadd float %1261, %1042, !dbg !149
  %1270 = fadd float %1262, %1044, !dbg !149
  %1271 = fadd float %1263, %1046, !dbg !149
  %1272 = fadd float %1264, %1073, !dbg !150
  %1273 = fadd float %1265, %1075, !dbg !150
  %1274 = fadd float %1266, %1077, !dbg !150
  %1275 = fadd float %1267, %1079, !dbg !150
  %1276 = fadd float %1268, %1081, !dbg !150
  %1277 = fadd float %1269, %1083, !dbg !150
  %1278 = fadd float %1270, %1085, !dbg !150
  %1279 = fadd float %1271, %1087, !dbg !150
  %1280 = fmul float %1272, 0x3FA47AE140000000, !dbg !151
  %1281 = fmul float %1273, 0x3FA47AE140000000, !dbg !151
  %1282 = fmul float %1274, 0x3FA47AE140000000, !dbg !151
  %1283 = fmul float %1275, 0x3FA47AE140000000, !dbg !151
  %1284 = fmul float %1276, 0x3FA47AE140000000, !dbg !151
  %1285 = fmul float %1277, 0x3FA47AE140000000, !dbg !151
  %1286 = fmul float %1278, 0x3FA47AE140000000, !dbg !151
  %1287 = fmul float %1279, 0x3FA47AE140000000, !dbg !151
  %1288 = shl i32 %35, 2, !dbg !152
  %1289 = shl i32 %36, 2, !dbg !152
  %1290 = mul i32 %42, 1600, !dbg !153
  %1291 = add i32 %1288, %1290, !dbg !154
  %1292 = add i32 %1290, %1289, !dbg !154
  %1293 = sext i32 %1291 to i64, !dbg !155
  %1294 = getelementptr float, ptr addrspace(1) %1, i64 %1293, !dbg !155
  %1295 = sext i32 %1292 to i64, !dbg !155
  %1296 = getelementptr float, ptr addrspace(1) %1, i64 %1295, !dbg !155
  %1297 = shl i32 %7, 4, !dbg !156
  %1298 = and i32 %1297, 1008, !dbg !156
  %1299 = or disjoint i32 %1298, %.lobit, !dbg !156
  %1300 = and i32 %9, 508, !dbg !156
  %1301 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %1298, !dbg !156
  %1302 = getelementptr float, ptr addrspace(3) %1301, i32 %1299, !dbg !156
  %1303 = bitcast float %1280 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1302, <1 x i32> %1303, i1 true) #2, !dbg !156
  %1304 = or disjoint i32 %1299, 2, !dbg !156
  %1305 = getelementptr float, ptr addrspace(3) %1301, i32 %1304, !dbg !156
  %1306 = bitcast float %1281 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1305, <1 x i32> %1306, i1 true) #2, !dbg !156
  %1307 = or disjoint i32 %1299, 4, !dbg !156
  %1308 = getelementptr float, ptr addrspace(3) %1301, i32 %1307, !dbg !156
  %1309 = bitcast float %1282 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1308, <1 x i32> %1309, i1 true) #2, !dbg !156
  %1310 = or disjoint i32 %1299, 6, !dbg !156
  %1311 = getelementptr float, ptr addrspace(3) %1301, i32 %1310, !dbg !156
  %1312 = bitcast float %1283 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1311, <1 x i32> %1312, i1 true) #2, !dbg !156
  %1313 = or disjoint i32 %1299, 8, !dbg !156
  %1314 = getelementptr float, ptr addrspace(3) %1301, i32 %1313, !dbg !156
  %1315 = bitcast float %1284 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1314, <1 x i32> %1315, i1 true) #2, !dbg !156
  %1316 = or disjoint i32 %1299, 10, !dbg !156
  %1317 = getelementptr float, ptr addrspace(3) %1301, i32 %1316, !dbg !156
  %1318 = bitcast float %1285 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1317, <1 x i32> %1318, i1 true) #2, !dbg !156
  %1319 = or disjoint i32 %1299, 12, !dbg !156
  %1320 = getelementptr float, ptr addrspace(3) %1301, i32 %1319, !dbg !156
  %1321 = bitcast float %1286 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1320, <1 x i32> %1321, i1 true) #2, !dbg !156
  %1322 = or disjoint i32 %1299, 14, !dbg !156
  %1323 = getelementptr float, ptr addrspace(3) %1301, i32 %1322, !dbg !156
  %1324 = bitcast float %1287 to <1 x i32>, !dbg !156
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %1323, <1 x i32> %1324, i1 true) #2, !dbg !156
  tail call void @llvm.nvvm.barrier0(), !dbg !156
  %1325 = and i32 %7, 124, !dbg !156
  %1326 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %1325, !dbg !156
  %1327 = getelementptr inbounds float, ptr addrspace(3) %1326, i32 %1300, !dbg !156
  %1328 = or disjoint i32 %1300, 512, !dbg !156
  %1329 = lshr exact i32 %1328, 2, !dbg !156
  %1330 = and i32 %1329, 252, !dbg !156
  %1331 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %1330, !dbg !156
  %1332 = getelementptr inbounds float, ptr addrspace(3) %1331, i32 %1328, !dbg !156
  %1333 = load <4 x i32>, ptr addrspace(3) %1332, align 16, !dbg !156
  %.extract = load i32, ptr addrspace(3) %1327, align 16, !dbg !156
  %1334 = getelementptr inbounds i8, ptr addrspace(3) %1327, i32 4, !dbg !156
  %.extract12 = load i32, ptr addrspace(3) %1334, align 4, !dbg !156
  %1335 = getelementptr inbounds i8, ptr addrspace(3) %1327, i32 8, !dbg !156
  %.extract13 = load i32, ptr addrspace(3) %1335, align 8, !dbg !156
  %1336 = getelementptr inbounds i8, ptr addrspace(3) %1327, i32 12, !dbg !156
  %.extract14 = load i32, ptr addrspace(3) %1336, align 4, !dbg !156
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract12, i32 %.extract13, i32 %.extract14, ptr addrspace(1) %1294, i1 %86) #2, !dbg !156
  %.extract15 = extractelement <4 x i32> %1333, i64 0, !dbg !156
  %.extract16 = extractelement <4 x i32> %1333, i64 1, !dbg !156
  %.extract17 = extractelement <4 x i32> %1333, i64 2, !dbg !156
  %.extract18 = extractelement <4 x i32> %1333, i64 3, !dbg !156
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract15, i32 %.extract16, i32 %.extract17, i32 %.extract18, ptr addrspace(1) %1296, i1 %87) #2, !dbg !156
  ret void, !dbg !157
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyxrejcjt55ktn5myjl3lvrcxskawj67uqh25wa7brid356jhdfu.py", directory: "inductor_cache/yx")
!4 = !{ptr @triton_poi_fused_avg_pool2d_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_1", linkageName: "triton_poi_fused_avg_pool2d_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 28, column: 19, scope: !7)
!22 = !DILocation(line: 33, column: 19, scope: !7)
!23 = !DILocation(line: 34, column: 32, scope: !7)
!24 = !DILocation(line: 34, column: 41, scope: !7)
!25 = !DILocation(line: 34, column: 37, scope: !7)
!26 = !DILocation(line: 34, column: 51, scope: !7)
!27 = !DILocation(line: 34, column: 46, scope: !7)
!28 = !DILocation(line: 34, column: 30, scope: !7)
!29 = !DILocation(line: 34, column: 64, scope: !7)
!30 = !DILocation(line: 34, column: 56, scope: !7)
!31 = !DILocation(line: 35, column: 41, scope: !7)
!32 = !DILocation(line: 35, column: 50, scope: !7)
!33 = !DILocation(line: 35, column: 30, scope: !7)
!34 = !DILocation(line: 35, column: 60, scope: !7)
!35 = !DILocation(line: 36, column: 41, scope: !7)
!36 = !DILocation(line: 36, column: 50, scope: !7)
!37 = !DILocation(line: 36, column: 30, scope: !7)
!38 = !DILocation(line: 36, column: 60, scope: !7)
!39 = !DILocation(line: 37, column: 41, scope: !7)
!40 = !DILocation(line: 37, column: 50, scope: !7)
!41 = !DILocation(line: 37, column: 30, scope: !7)
!42 = !DILocation(line: 37, column: 60, scope: !7)
!43 = !DILocation(line: 38, column: 41, scope: !7)
!44 = !DILocation(line: 38, column: 50, scope: !7)
!45 = !DILocation(line: 38, column: 30, scope: !7)
!46 = !DILocation(line: 38, column: 60, scope: !7)
!47 = !DILocation(line: 39, column: 42, scope: !7)
!48 = !DILocation(line: 39, column: 51, scope: !7)
!49 = !DILocation(line: 39, column: 30, scope: !7)
!50 = !DILocation(line: 39, column: 61, scope: !7)
!51 = !DILocation(line: 40, column: 43, scope: !7)
!52 = !DILocation(line: 40, column: 52, scope: !7)
!53 = !DILocation(line: 40, column: 31, scope: !7)
!54 = !DILocation(line: 40, column: 62, scope: !7)
!55 = !DILocation(line: 41, column: 43, scope: !7)
!56 = !DILocation(line: 41, column: 52, scope: !7)
!57 = !DILocation(line: 41, column: 31, scope: !7)
!58 = !DILocation(line: 41, column: 62, scope: !7)
!59 = !DILocation(line: 42, column: 43, scope: !7)
!60 = !DILocation(line: 42, column: 52, scope: !7)
!61 = !DILocation(line: 42, column: 31, scope: !7)
!62 = !DILocation(line: 42, column: 62, scope: !7)
!63 = !DILocation(line: 43, column: 43, scope: !7)
!64 = !DILocation(line: 43, column: 52, scope: !7)
!65 = !DILocation(line: 43, column: 31, scope: !7)
!66 = !DILocation(line: 43, column: 62, scope: !7)
!67 = !DILocation(line: 44, column: 44, scope: !7)
!68 = !DILocation(line: 44, column: 53, scope: !7)
!69 = !DILocation(line: 44, column: 31, scope: !7)
!70 = !DILocation(line: 44, column: 63, scope: !7)
!71 = !DILocation(line: 45, column: 44, scope: !7)
!72 = !DILocation(line: 45, column: 53, scope: !7)
!73 = !DILocation(line: 45, column: 31, scope: !7)
!74 = !DILocation(line: 45, column: 63, scope: !7)
!75 = !DILocation(line: 46, column: 44, scope: !7)
!76 = !DILocation(line: 46, column: 53, scope: !7)
!77 = !DILocation(line: 46, column: 31, scope: !7)
!78 = !DILocation(line: 46, column: 63, scope: !7)
!79 = !DILocation(line: 47, column: 44, scope: !7)
!80 = !DILocation(line: 47, column: 53, scope: !7)
!81 = !DILocation(line: 47, column: 31, scope: !7)
!82 = !DILocation(line: 47, column: 63, scope: !7)
!83 = !DILocation(line: 48, column: 44, scope: !7)
!84 = !DILocation(line: 48, column: 53, scope: !7)
!85 = !DILocation(line: 48, column: 31, scope: !7)
!86 = !DILocation(line: 48, column: 63, scope: !7)
!87 = !DILocation(line: 49, column: 44, scope: !7)
!88 = !DILocation(line: 49, column: 53, scope: !7)
!89 = !DILocation(line: 49, column: 31, scope: !7)
!90 = !DILocation(line: 49, column: 63, scope: !7)
!91 = !DILocation(line: 50, column: 44, scope: !7)
!92 = !DILocation(line: 50, column: 53, scope: !7)
!93 = !DILocation(line: 50, column: 31, scope: !7)
!94 = !DILocation(line: 50, column: 63, scope: !7)
!95 = !DILocation(line: 51, column: 44, scope: !7)
!96 = !DILocation(line: 51, column: 53, scope: !7)
!97 = !DILocation(line: 51, column: 31, scope: !7)
!98 = !DILocation(line: 51, column: 63, scope: !7)
!99 = !DILocation(line: 52, column: 44, scope: !7)
!100 = !DILocation(line: 52, column: 53, scope: !7)
!101 = !DILocation(line: 52, column: 31, scope: !7)
!102 = !DILocation(line: 52, column: 63, scope: !7)
!103 = !DILocation(line: 53, column: 44, scope: !7)
!104 = !DILocation(line: 53, column: 53, scope: !7)
!105 = !DILocation(line: 53, column: 31, scope: !7)
!106 = !DILocation(line: 53, column: 63, scope: !7)
!107 = !DILocation(line: 54, column: 44, scope: !7)
!108 = !DILocation(line: 54, column: 53, scope: !7)
!109 = !DILocation(line: 54, column: 31, scope: !7)
!110 = !DILocation(line: 54, column: 63, scope: !7)
!111 = !DILocation(line: 55, column: 44, scope: !7)
!112 = !DILocation(line: 55, column: 53, scope: !7)
!113 = !DILocation(line: 55, column: 31, scope: !7)
!114 = !DILocation(line: 55, column: 63, scope: !7)
!115 = !DILocation(line: 56, column: 44, scope: !7)
!116 = !DILocation(line: 56, column: 53, scope: !7)
!117 = !DILocation(line: 56, column: 31, scope: !7)
!118 = !DILocation(line: 56, column: 63, scope: !7)
!119 = !DILocation(line: 57, column: 44, scope: !7)
!120 = !DILocation(line: 57, column: 53, scope: !7)
!121 = !DILocation(line: 57, column: 31, scope: !7)
!122 = !DILocation(line: 57, column: 63, scope: !7)
!123 = !DILocation(line: 58, column: 44, scope: !7)
!124 = !DILocation(line: 58, column: 53, scope: !7)
!125 = !DILocation(line: 58, column: 31, scope: !7)
!126 = !DILocation(line: 58, column: 63, scope: !7)
!127 = !DILocation(line: 59, column: 18, scope: !7)
!128 = !DILocation(line: 60, column: 18, scope: !7)
!129 = !DILocation(line: 61, column: 18, scope: !7)
!130 = !DILocation(line: 62, column: 18, scope: !7)
!131 = !DILocation(line: 63, column: 19, scope: !7)
!132 = !DILocation(line: 64, column: 20, scope: !7)
!133 = !DILocation(line: 65, column: 20, scope: !7)
!134 = !DILocation(line: 66, column: 20, scope: !7)
!135 = !DILocation(line: 67, column: 20, scope: !7)
!136 = !DILocation(line: 68, column: 20, scope: !7)
!137 = !DILocation(line: 69, column: 20, scope: !7)
!138 = !DILocation(line: 70, column: 20, scope: !7)
!139 = !DILocation(line: 71, column: 20, scope: !7)
!140 = !DILocation(line: 72, column: 20, scope: !7)
!141 = !DILocation(line: 73, column: 20, scope: !7)
!142 = !DILocation(line: 74, column: 20, scope: !7)
!143 = !DILocation(line: 75, column: 20, scope: !7)
!144 = !DILocation(line: 76, column: 20, scope: !7)
!145 = !DILocation(line: 77, column: 20, scope: !7)
!146 = !DILocation(line: 78, column: 20, scope: !7)
!147 = !DILocation(line: 79, column: 20, scope: !7)
!148 = !DILocation(line: 80, column: 20, scope: !7)
!149 = !DILocation(line: 81, column: 20, scope: !7)
!150 = !DILocation(line: 82, column: 20, scope: !7)
!151 = !DILocation(line: 84, column: 20, scope: !7)
!152 = !DILocation(line: 85, column: 32, scope: !7)
!153 = !DILocation(line: 85, column: 42, scope: !7)
!154 = !DILocation(line: 85, column: 37, scope: !7)
!155 = !DILocation(line: 85, column: 25, scope: !7)
!156 = !DILocation(line: 85, column: 54, scope: !7)
!157 = !DILocation(line: 85, column: 4, scope: !7)
