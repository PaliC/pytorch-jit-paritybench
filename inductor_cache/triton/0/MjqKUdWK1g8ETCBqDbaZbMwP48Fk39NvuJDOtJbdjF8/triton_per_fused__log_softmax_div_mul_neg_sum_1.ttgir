#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":19:0)
#loc1 = loc(unknown)
#loc36 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":50:59)
#loc47 = loc(callsite(#loc1 at #loc36))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__log_softmax_div_mul_neg_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.500000e-01 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<32> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc2)
    %1 = arith.remsi %0, %cst_4 : tensor<256xi32, #blocked> loc(#loc3)
    %2 = arith.divsi %0, %cst_3 : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc5)
    %4 = tt.addptr %3, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc5)
    %5 = tt.load %4 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc6)
    %6 = arith.muli %2, %cst_3 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.addi %1, %6 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = tt.addptr %3, %7 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc9)
    %9 = tt.load %8 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc10)
    %10 = arith.addi %1, %cst_4 : tensor<256xi32, #blocked> loc(#loc11)
    %11 = arith.addi %10, %6 : tensor<256xi32, #blocked> loc(#loc12)
    %12 = tt.addptr %3, %11 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc13)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc14)
    %14 = arith.addi %1, %cst_2 : tensor<256xi32, #blocked> loc(#loc15)
    %15 = arith.addi %14, %6 : tensor<256xi32, #blocked> loc(#loc16)
    %16 = tt.addptr %3, %15 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc17)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc18)
    %18 = arith.addi %1, %cst_1 : tensor<256xi32, #blocked> loc(#loc19)
    %19 = arith.addi %18, %6 : tensor<256xi32, #blocked> loc(#loc20)
    %20 = tt.addptr %3, %19 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc21)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc22)
    %22 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %23 = tt.addptr %22, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc23)
    %24 = tt.load %23 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc24)
    %25 = math.exp %9 : tensor<256xf32, #blocked> loc(#loc25)
    %26 = math.exp %13 : tensor<256xf32, #blocked> loc(#loc26)
    %27 = arith.addf %25, %26 : tensor<256xf32, #blocked> loc(#loc27)
    %28 = math.exp %17 : tensor<256xf32, #blocked> loc(#loc28)
    %29 = arith.addf %27, %28 : tensor<256xf32, #blocked> loc(#loc29)
    %30 = math.exp %21 : tensor<256xf32, #blocked> loc(#loc30)
    %31 = arith.addf %29, %30 : tensor<256xf32, #blocked> loc(#loc31)
    %32 = math.log %31 : tensor<256xf32, #blocked> loc(#loc32)
    %33 = arith.subf %5, %32 : tensor<256xf32, #blocked> loc(#loc33)
    %34 = arith.mulf %33, %24 : tensor<256xf32, #blocked> loc(#loc34)
    %35 = "tt.reduce"(%34) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc36)), %arg5: f32 loc(callsite(#loc1 at #loc36))):
      %42 = arith.addf %arg4, %arg5 : f32 loc(#loc50)
      tt.reduce.return %42 : f32 loc(#loc46)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc46)
    %36 = arith.addf %35, %cst_0 : f32 loc(#loc49)
    %37 = arith.subf %cst_0, %36 : f32 loc(#loc40)
    %38 = arith.mulf %37, %cst : f32 loc(#loc41)
    %39 = tt.splat %38 : f32 -> tensor<1xf32, #blocked1> loc(#loc41)
    gpu.barrier loc(#loc42)
    %40 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc43)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc43)
    tt.store %41, %39 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":27:26)
#loc3 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":31:19)
#loc4 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":32:19)
#loc5 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":33:30)
#loc6 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":33:35)
#loc7 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":34:38)
#loc8 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":34:35)
#loc9 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":34:30)
#loc10 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":34:43)
#loc11 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":35:35)
#loc12 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":35:40)
#loc13 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":35:30)
#loc14 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":35:48)
#loc15 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":36:35)
#loc16 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":36:40)
#loc17 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":36:30)
#loc18 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":36:48)
#loc19 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":37:35)
#loc20 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":37:40)
#loc21 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":37:30)
#loc22 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":37:48)
#loc23 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":38:31)
#loc24 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":38:36)
#loc25 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":39:23)
#loc26 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":40:23)
#loc27 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":41:18)
#loc28 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":42:23)
#loc29 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":43:18)
#loc30 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":44:24)
#loc31 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":45:19)
#loc32 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":46:24)
#loc33 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":47:19)
#loc34 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":48:20)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc39 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":50:45)
#loc40 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":51:13)
#loc41 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":53:20)
#loc42 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":54:4)
#loc43 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":55:28)
#loc44 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":55:63)
#loc45 = loc("inductor_cache/dw/cdw4ar3wqg2jrnnnjdidz2jxv6qomd7o6zlkqgnahgf322s7tem4.py":55:4)
#loc46 = loc(callsite(#loc35 at #loc36))
#loc48 = loc(callsite(#loc37 at #loc35))
#loc49 = loc(callsite(#loc38 at #loc39))
#loc50 = loc(callsite(#loc48 at #loc36))
