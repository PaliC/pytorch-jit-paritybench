//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_native_batch_norm_backward_15 // -- Begin function triton_poi_fused_add_native_batch_norm_backward_15
                                        // @triton_poi_fused_add_native_batch_norm_backward_15
.visible .entry triton_poi_fused_add_native_batch_norm_backward_15(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_batch_norm_backward_15_param_7,
	.param .u32 triton_poi_fused_add_native_batch_norm_backward_15_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<84>;
	.reg .f32 	%f<89>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:19:0

// %bb.0:
	ld.param.u64 	%rd19, [triton_poi_fused_add_native_batch_norm_backward_15_param_0];
	ld.param.u64 	%rd20, [triton_poi_fused_add_native_batch_norm_backward_15_param_1];
$L__tmp0:
	.loc	1 21 28                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:21:33
	shl.b32 	%r74, %r1, 10;
	ld.param.u64 	%rd21, [triton_poi_fused_add_native_batch_norm_backward_15_param_2];
	ld.param.u64 	%rd22, [triton_poi_fused_add_native_batch_norm_backward_15_param_3];
	.loc	1 22 36                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:22:36
	mov.u32 	%r75, %tid.x;
	shl.b32 	%r76, %r75, 2;
	ld.param.u64 	%rd23, [triton_poi_fused_add_native_batch_norm_backward_15_param_4];
	and.b32  	%r77, %r76, 508;
	ld.param.u64 	%rd24, [triton_poi_fused_add_native_batch_norm_backward_15_param_5];
	.loc	1 22 23                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:22:23
	or.b32  	%r78, %r74, %r77;
	ld.param.u64 	%rd25, [triton_poi_fused_add_native_batch_norm_backward_15_param_6];
	.loc	1 25 19                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:25:19
	bfe.s32 	%r79, %r1, 21, 1;
	shr.u32 	%r80, %r79, 27;
	add.s32 	%r81, %r78, %r80;
	and.b32  	%r82, %r81, -32;
	sub.s32 	%r83, %r78, %r82;
	ld.param.u64 	%rd26, [triton_poi_fused_add_native_batch_norm_backward_15_param_7];
	.loc	1 26 30                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:26:30
	mul.wide.s32 	%rd27, %r78, 4;
	add.s64 	%rd1, %rd20, %rd27;
	add.s64 	%rd2, %rd1, 2048;
	mov.pred 	%p1, -1;
	.loc	1 26 35                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 27 30                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:27:30
	add.s64 	%rd3, %rd21, %rd27;
	add.s64 	%rd4, %rd3, 2048;
	.loc	1 27 35                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:27:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	mov.b32 	%f10, %r11;
	mov.b32 	%f11, %r12;
	mov.b32 	%f12, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	mov.b32 	%f14, %r15;
	mov.b32 	%f15, %r16;
	mov.b32 	%f16, %r17;
	.loc	1 28 34                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:28:34
	add.s64 	%rd5, %rd19, %rd27;
	add.s64 	%rd6, %rd5, 2048;
	.loc	1 28 39                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:28:39
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r18;
	mov.b32 	%f18, %r19;
	mov.b32 	%f19, %r20;
	mov.b32 	%f20, %r21;
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r22;
	mov.b32 	%f22, %r23;
	mov.b32 	%f23, %r24;
	mov.b32 	%f24, %r25;
	.loc	1 29 30                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:29:30
	mul.wide.s32 	%rd28, %r83, 4;
	add.s64 	%rd7, %rd22, %rd28;
	.loc	1 29 35                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:29:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r26;
	mov.b32 	%f26, %r27;
	mov.b32 	%f27, %r28;
	mov.b32 	%f28, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r30;
	mov.b32 	%f30, %r31;
	mov.b32 	%f31, %r32;
	mov.b32 	%f32, %r33;
	.loc	1 30 30                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:30:30
	add.s64 	%rd9, %rd23, %rd28;
	.loc	1 30 35                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:30:35
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r34;
	mov.b32 	%f34, %r35;
	mov.b32 	%f35, %r36;
	mov.b32 	%f36, %r37;
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r38, %r39, %r40, %r41 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r38;
	mov.b32 	%f38, %r39;
	mov.b32 	%f39, %r40;
	mov.b32 	%f40, %r41;
	.loc	1 31 30                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:31:30
	add.s64 	%rd11, %rd24, %rd28;
	.loc	1 31 35                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:31:35
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f41, %r42;
	mov.b32 	%f42, %r43;
	mov.b32 	%f43, %r44;
	mov.b32 	%f44, %r45;
	// begin inline asm
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r46, %r47, %r48, %r49 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f45, %r46;
	mov.b32 	%f46, %r47;
	mov.b32 	%f47, %r48;
	mov.b32 	%f48, %r49;
	.loc	1 32 18                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:32:18
	add.f32 	%f49, %f1, %f9;
	add.f32 	%f50, %f2, %f10;
	add.f32 	%f51, %f3, %f11;
	add.f32 	%f52, %f4, %f12;
	add.f32 	%f53, %f5, %f13;
	add.f32 	%f54, %f6, %f14;
	add.f32 	%f55, %f7, %f15;
	add.f32 	%f56, %f8, %f16;
	.loc	1 33 18                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:33:18
	add.f32 	%f57, %f49, %f17;
	add.f32 	%f58, %f50, %f18;
	add.f32 	%f59, %f51, %f19;
	add.f32 	%f60, %f52, %f20;
	add.f32 	%f61, %f53, %f21;
	add.f32 	%f62, %f54, %f22;
	add.f32 	%f63, %f55, %f23;
	add.f32 	%f64, %f56, %f24;
	.loc	1 34 18                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:34:18
	sub.f32 	%f65, %f57, %f25;
	sub.f32 	%f66, %f58, %f26;
	sub.f32 	%f67, %f59, %f27;
	sub.f32 	%f68, %f60, %f28;
	sub.f32 	%f69, %f61, %f29;
	sub.f32 	%f70, %f62, %f30;
	sub.f32 	%f71, %f63, %f31;
	sub.f32 	%f72, %f64, %f32;
	.loc	1 35 18                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:35:18
	sub.f32 	%f73, %f49, %f33;
	sub.f32 	%f74, %f50, %f34;
	sub.f32 	%f75, %f51, %f35;
	sub.f32 	%f76, %f52, %f36;
	sub.f32 	%f77, %f53, %f37;
	sub.f32 	%f78, %f54, %f38;
	sub.f32 	%f79, %f55, %f39;
	sub.f32 	%f80, %f56, %f40;
	.loc	1 36 19                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:36:19
	sub.f32 	%f81, %f1, %f41;
	sub.f32 	%f82, %f2, %f42;
	sub.f32 	%f83, %f3, %f43;
	sub.f32 	%f84, %f4, %f44;
	sub.f32 	%f85, %f5, %f45;
	sub.f32 	%f86, %f6, %f46;
	sub.f32 	%f87, %f7, %f47;
	sub.f32 	%f88, %f8, %f48;
	.loc	1 37 39                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:37:39
	mov.b32 	%r50, %f65;
	mov.b32 	%r51, %f66;
	mov.b32 	%r52, %f67;
	mov.b32 	%r53, %f68;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r50, %r51, %r52, %r53 };
	// end inline asm
	mov.b32 	%r54, %f69;
	mov.b32 	%r55, %f70;
	mov.b32 	%r56, %f71;
	mov.b32 	%r57, %f72;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	.loc	1 38 25                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:38:25
	add.s64 	%rd15, %rd25, %rd27;
	add.s64 	%rd16, %rd15, 2048;
	.loc	1 38 36                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:38:36
	mov.b32 	%r58, %f73;
	mov.b32 	%r59, %f74;
	mov.b32 	%r60, %f75;
	mov.b32 	%r61, %f76;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd15 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
	mov.b32 	%r62, %f77;
	mov.b32 	%r63, %f78;
	mov.b32 	%r64, %f79;
	mov.b32 	%r65, %f80;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd16 + 0 ], { %r62, %r63, %r64, %r65 };
	// end inline asm
	.loc	1 39 25                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:39:25
	add.s64 	%rd17, %rd26, %rd27;
	add.s64 	%rd18, %rd17, 2048;
	.loc	1 39 37                         // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:39:37
	mov.b32 	%r66, %f81;
	mov.b32 	%r67, %f82;
	mov.b32 	%r68, %f83;
	mov.b32 	%r69, %f84;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r66, %r67, %r68, %r69 };
	// end inline asm
	mov.b32 	%r70, %f85;
	mov.b32 	%r71, %f86;
	mov.b32 	%r72, %f87;
	mov.b32 	%r73, %f88;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd18 + 0 ], { %r70, %r71, %r72, %r73 };
	// end inline asm
	.loc	1 39 4                          // czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py:39:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/zc/czc7mdcmdg2ahnuyhc4vn5qyt3gez2ikv7reycrucc4bvhvs5oqx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 122
.b8 99
.b8 55
.b8 109
.b8 100
.b8 99
.b8 109
.b8 100
.b8 103
.b8 50
.b8 97
.b8 104
.b8 110
.b8 117
.b8 121
.b8 104
.b8 99
.b8 52
.b8 118
.b8 110
.b8 53
.b8 113
.b8 121
.b8 116
.b8 51
.b8 103
.b8 101
.b8 122
.b8 50
.b8 105
.b8 107
.b8 118
.b8 55
.b8 114
.b8 101
.b8 121
.b8 99
.b8 114
.b8 117
.b8 99
.b8 99
.b8 52
.b8 98
.b8 118
.b8 104
.b8 118
.b8 115
.b8 53
.b8 111
.b8 113
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 122
.b8 99
.b8 0
	}
	.section	.debug_macinfo	{	}
