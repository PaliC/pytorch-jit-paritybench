#loc = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":19:0)
module {
  tt.func public @triton_poi_fused_add_clamp_div_maximum_minimum_mul_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999993E-9> : tensor<16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<2> : tensor<16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<16xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_4 : tensor<16xi32> loc(#loc7)
    %7 = arith.remsi %4, %cst_4 : tensor<16xi32> loc(#loc8)
    %8 = arith.muli %6, %cst_4 : tensor<16xi32> loc(#loc9)
    %9 = arith.addi %8, %cst_3 : tensor<16xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc12)
    %13 = arith.muli %7, %cst_4 : tensor<16xi32> loc(#loc13)
    %14 = arith.addi %13, %cst_3 : tensor<16xi32> loc(#loc14)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc15)
    %16 = tt.addptr %15, %14 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc15)
    %17 = tt.load %16, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc16)
    %18 = tt.addptr %10, %8 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc17)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc18)
    %20 = tt.addptr %15, %13 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc19)
    %21 = tt.load %20, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc20)
    %22 = arith.addi %8, %cst_2 : tensor<16xi32> loc(#loc21)
    %23 = tt.addptr %10, %22 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc22)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc23)
    %25 = arith.addi %13, %cst_2 : tensor<16xi32> loc(#loc24)
    %26 = tt.addptr %15, %25 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc25)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc26)
    %28 = arith.addi %8, %cst_1 : tensor<16xi32> loc(#loc27)
    %29 = tt.addptr %10, %28 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc28)
    %30 = tt.load %29, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc29)
    %31 = arith.addi %13, %cst_1 : tensor<16xi32> loc(#loc30)
    %32 = tt.addptr %15, %31 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc31)
    %33 = tt.load %32, %5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc32)
    %34 = arith.cmpf olt, %12, %17 : tensor<16xf32> loc(#loc63)
    %35 = arith.cmpf une, %12, %12 : tensor<16xf32> loc(#loc64)
    %36 = arith.ori %34, %35 : tensor<16xi1> loc(#loc65)
    %37 = arith.select %36, %12, %17 : tensor<16xi1>, tensor<16xf32> loc(#loc66)
    %38 = arith.cmpf ogt, %19, %21 : tensor<16xf32> loc(#loc67)
    %39 = arith.cmpf une, %19, %19 : tensor<16xf32> loc(#loc68)
    %40 = arith.ori %38, %39 : tensor<16xi1> loc(#loc69)
    %41 = arith.select %40, %19, %21 : tensor<16xi1>, tensor<16xf32> loc(#loc70)
    %42 = arith.subf %37, %41 : tensor<16xf32> loc(#loc43)
    %43 = arith.cmpf ogt, %42, %cst_0 : tensor<16xf32> loc(#loc71)
    %44 = arith.cmpf une, %42, %42 : tensor<16xf32> loc(#loc72)
    %45 = arith.ori %43, %44 : tensor<16xi1> loc(#loc73)
    %46 = arith.select %45, %42, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc74)
    %47 = arith.cmpf olt, %24, %27 : tensor<16xf32> loc(#loc75)
    %48 = arith.cmpf une, %24, %24 : tensor<16xf32> loc(#loc76)
    %49 = arith.ori %47, %48 : tensor<16xi1> loc(#loc77)
    %50 = arith.select %49, %24, %27 : tensor<16xi1>, tensor<16xf32> loc(#loc78)
    %51 = arith.cmpf ogt, %30, %33 : tensor<16xf32> loc(#loc79)
    %52 = arith.cmpf une, %30, %30 : tensor<16xf32> loc(#loc80)
    %53 = arith.ori %51, %52 : tensor<16xi1> loc(#loc81)
    %54 = arith.select %53, %30, %33 : tensor<16xi1>, tensor<16xf32> loc(#loc82)
    %55 = arith.subf %50, %54 : tensor<16xf32> loc(#loc47)
    %56 = arith.cmpf ogt, %55, %cst_0 : tensor<16xf32> loc(#loc83)
    %57 = arith.cmpf une, %55, %55 : tensor<16xf32> loc(#loc84)
    %58 = arith.ori %56, %57 : tensor<16xi1> loc(#loc85)
    %59 = arith.select %58, %55, %cst_0 : tensor<16xi1>, tensor<16xf32> loc(#loc86)
    %60 = arith.mulf %46, %59 : tensor<16xf32> loc(#loc49)
    %61 = arith.subf %12, %19 : tensor<16xf32> loc(#loc50)
    %62 = arith.subf %24, %30 : tensor<16xf32> loc(#loc51)
    %63 = arith.mulf %61, %62 : tensor<16xf32> loc(#loc52)
    %64 = arith.subf %17, %21 : tensor<16xf32> loc(#loc53)
    %65 = arith.subf %27, %33 : tensor<16xf32> loc(#loc54)
    %66 = arith.mulf %64, %65 : tensor<16xf32> loc(#loc55)
    %67 = arith.addf %63, %66 : tensor<16xf32> loc(#loc56)
    %68 = arith.subf %67, %60 : tensor<16xf32> loc(#loc57)
    %69 = arith.cmpf ogt, %68, %cst : tensor<16xf32> loc(#loc87)
    %70 = arith.cmpf une, %68, %68 : tensor<16xf32> loc(#loc88)
    %71 = arith.ori %69, %70 : tensor<16xi1> loc(#loc89)
    %72 = arith.select %71, %68, %cst : tensor<16xi1>, tensor<16xf32> loc(#loc90)
    %73 = arith.divf %60, %72 : tensor<16xf32> loc(#loc59)
    %74 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc60)
    %75 = tt.addptr %74, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc60)
    tt.store %75, %73, %5 : tensor<16x!tt.ptr<f32>> loc(#loc61)
    tt.return loc(#loc62)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":21:28)
#loc3 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":21:33)
#loc4 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":22:36)
#loc5 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":22:23)
#loc6 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":23:21)
#loc7 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":24:19)
#loc8 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":25:19)
#loc9 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":27:36)
#loc10 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":27:34)
#loc11 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":27:30)
#loc12 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":27:41)
#loc13 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":28:36)
#loc14 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":28:34)
#loc15 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":28:30)
#loc16 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":28:41)
#loc17 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":29:30)
#loc18 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":29:37)
#loc19 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":30:30)
#loc20 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":30:37)
#loc21 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":31:34)
#loc22 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":31:30)
#loc23 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":31:41)
#loc24 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":32:35)
#loc25 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":32:31)
#loc26 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":32:42)
#loc27 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":33:35)
#loc28 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":33:31)
#loc29 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":33:42)
#loc30 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":34:35)
#loc31 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":34:31)
#loc32 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":34:42)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc34 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":35:40)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc39 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":36:40)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc43 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":37:18)
#loc44 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":39:40)
#loc45 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":40:41)
#loc46 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":41:42)
#loc47 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":42:20)
#loc48 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":43:42)
#loc49 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":44:19)
#loc50 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":45:19)
#loc51 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":46:19)
#loc52 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":47:20)
#loc53 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":48:19)
#loc54 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":49:20)
#loc55 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":50:20)
#loc56 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":51:20)
#loc57 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":52:20)
#loc58 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":54:42)
#loc59 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":55:20)
#loc60 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":56:25)
#loc61 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":56:37)
#loc62 = loc("inductor_cache/ig/cigc3r7c7torqq3s2umgtmwb2jnxx5igmaadnrkwckwgdhsnwznc.py":56:4)
#loc63 = loc(callsite(#loc33 at #loc34))
#loc64 = loc(callsite(#loc35 at #loc34))
#loc65 = loc(callsite(#loc36 at #loc34))
#loc66 = loc(callsite(#loc37 at #loc34))
#loc67 = loc(callsite(#loc38 at #loc39))
#loc68 = loc(callsite(#loc40 at #loc39))
#loc69 = loc(callsite(#loc41 at #loc39))
#loc70 = loc(callsite(#loc42 at #loc39))
#loc71 = loc(callsite(#loc38 at #loc44))
#loc72 = loc(callsite(#loc40 at #loc44))
#loc73 = loc(callsite(#loc41 at #loc44))
#loc74 = loc(callsite(#loc42 at #loc44))
#loc75 = loc(callsite(#loc33 at #loc45))
#loc76 = loc(callsite(#loc35 at #loc45))
#loc77 = loc(callsite(#loc36 at #loc45))
#loc78 = loc(callsite(#loc37 at #loc45))
#loc79 = loc(callsite(#loc38 at #loc46))
#loc80 = loc(callsite(#loc40 at #loc46))
#loc81 = loc(callsite(#loc41 at #loc46))
#loc82 = loc(callsite(#loc42 at #loc46))
#loc83 = loc(callsite(#loc38 at #loc48))
#loc84 = loc(callsite(#loc40 at #loc48))
#loc85 = loc(callsite(#loc41 at #loc48))
#loc86 = loc(callsite(#loc42 at #loc48))
#loc87 = loc(callsite(#loc38 at #loc58))
#loc88 = loc(callsite(#loc40 at #loc58))
#loc89 = loc(callsite(#loc41 at #loc58))
#loc90 = loc(callsite(#loc42 at #loc58))
