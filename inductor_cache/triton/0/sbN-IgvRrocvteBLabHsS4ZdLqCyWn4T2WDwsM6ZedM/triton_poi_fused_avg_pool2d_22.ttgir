#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_avg_pool2d_22(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6.250000e-02> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<2048> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<32768> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<6144> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<8192> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<10240> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<12288> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<14336> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<16384> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<18432> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<20480> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<22528> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<24576> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<26624> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<28672> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<30720> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %4, %cst_0 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_0 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.muli %6, %cst_1 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.addi %5, %7 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc10)
    %10 = tt.addptr %9, %8 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc10)
    %11 = tt.load %10 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = arith.addi %5, %cst_0 : tensor<256xi32, #blocked> loc(#loc12)
    %13 = arith.addi %12, %7 : tensor<256xi32, #blocked> loc(#loc13)
    %14 = tt.addptr %9, %13 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc14)
    %15 = tt.load %14 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc15)
    %16 = arith.addi %5, %cst_2 : tensor<256xi32, #blocked> loc(#loc16)
    %17 = arith.addi %16, %7 : tensor<256xi32, #blocked> loc(#loc17)
    %18 = tt.addptr %9, %17 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc18)
    %19 = tt.load %18 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc19)
    %20 = arith.addi %5, %cst_3 : tensor<256xi32, #blocked> loc(#loc20)
    %21 = arith.addi %20, %7 : tensor<256xi32, #blocked> loc(#loc21)
    %22 = tt.addptr %9, %21 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc22)
    %23 = tt.load %22 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %24 = arith.addi %5, %cst_4 : tensor<256xi32, #blocked> loc(#loc24)
    %25 = arith.addi %24, %7 : tensor<256xi32, #blocked> loc(#loc25)
    %26 = tt.addptr %9, %25 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc26)
    %27 = tt.load %26 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc27)
    %28 = arith.addi %5, %cst_5 : tensor<256xi32, #blocked> loc(#loc28)
    %29 = arith.addi %28, %7 : tensor<256xi32, #blocked> loc(#loc29)
    %30 = tt.addptr %9, %29 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc30)
    %31 = tt.load %30 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc31)
    %32 = arith.addi %5, %cst_6 : tensor<256xi32, #blocked> loc(#loc32)
    %33 = arith.addi %32, %7 : tensor<256xi32, #blocked> loc(#loc33)
    %34 = tt.addptr %9, %33 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc34)
    %35 = tt.load %34 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %36 = arith.addi %5, %cst_7 : tensor<256xi32, #blocked> loc(#loc36)
    %37 = arith.addi %36, %7 : tensor<256xi32, #blocked> loc(#loc37)
    %38 = tt.addptr %9, %37 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc38)
    %39 = tt.load %38 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc39)
    %40 = arith.addi %5, %cst_8 : tensor<256xi32, #blocked> loc(#loc40)
    %41 = arith.addi %40, %7 : tensor<256xi32, #blocked> loc(#loc41)
    %42 = tt.addptr %9, %41 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc42)
    %43 = tt.load %42 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc43)
    %44 = arith.addi %5, %cst_9 : tensor<256xi32, #blocked> loc(#loc44)
    %45 = arith.addi %44, %7 : tensor<256xi32, #blocked> loc(#loc45)
    %46 = tt.addptr %9, %45 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc46)
    %47 = tt.load %46 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc47)
    %48 = arith.addi %5, %cst_10 : tensor<256xi32, #blocked> loc(#loc48)
    %49 = arith.addi %48, %7 : tensor<256xi32, #blocked> loc(#loc49)
    %50 = tt.addptr %9, %49 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc50)
    %51 = tt.load %50 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc51)
    %52 = arith.addi %5, %cst_11 : tensor<256xi32, #blocked> loc(#loc52)
    %53 = arith.addi %52, %7 : tensor<256xi32, #blocked> loc(#loc53)
    %54 = tt.addptr %9, %53 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc54)
    %55 = tt.load %54 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc55)
    %56 = arith.addi %5, %cst_12 : tensor<256xi32, #blocked> loc(#loc56)
    %57 = arith.addi %56, %7 : tensor<256xi32, #blocked> loc(#loc57)
    %58 = tt.addptr %9, %57 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc58)
    %59 = tt.load %58 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc59)
    %60 = arith.addi %5, %cst_13 : tensor<256xi32, #blocked> loc(#loc60)
    %61 = arith.addi %60, %7 : tensor<256xi32, #blocked> loc(#loc61)
    %62 = tt.addptr %9, %61 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc62)
    %63 = tt.load %62 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc63)
    %64 = arith.addi %5, %cst_14 : tensor<256xi32, #blocked> loc(#loc64)
    %65 = arith.addi %64, %7 : tensor<256xi32, #blocked> loc(#loc65)
    %66 = tt.addptr %9, %65 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc66)
    %67 = tt.load %66 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc67)
    %68 = arith.addi %5, %cst_15 : tensor<256xi32, #blocked> loc(#loc68)
    %69 = arith.addi %68, %7 : tensor<256xi32, #blocked> loc(#loc69)
    %70 = tt.addptr %9, %69 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc70)
    %71 = tt.load %70 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc71)
    %72 = arith.addf %15, %11 : tensor<256xf32, #blocked> loc(#loc72)
    %73 = arith.addf %19, %72 : tensor<256xf32, #blocked> loc(#loc73)
    %74 = arith.addf %23, %73 : tensor<256xf32, #blocked> loc(#loc74)
    %75 = arith.addf %27, %74 : tensor<256xf32, #blocked> loc(#loc75)
    %76 = arith.addf %31, %75 : tensor<256xf32, #blocked> loc(#loc76)
    %77 = arith.addf %35, %76 : tensor<256xf32, #blocked> loc(#loc77)
    %78 = arith.addf %39, %77 : tensor<256xf32, #blocked> loc(#loc78)
    %79 = arith.addf %43, %78 : tensor<256xf32, #blocked> loc(#loc79)
    %80 = arith.addf %47, %79 : tensor<256xf32, #blocked> loc(#loc80)
    %81 = arith.addf %51, %80 : tensor<256xf32, #blocked> loc(#loc81)
    %82 = arith.addf %55, %81 : tensor<256xf32, #blocked> loc(#loc82)
    %83 = arith.addf %59, %82 : tensor<256xf32, #blocked> loc(#loc83)
    %84 = arith.addf %63, %83 : tensor<256xf32, #blocked> loc(#loc84)
    %85 = arith.addf %67, %84 : tensor<256xf32, #blocked> loc(#loc85)
    %86 = arith.addf %71, %85 : tensor<256xf32, #blocked> loc(#loc86)
    %87 = arith.mulf %86, %cst : tensor<256xf32, #blocked> loc(#loc87)
    %88 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc88)
    %89 = tt.addptr %88, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc88)
    tt.store %89, %87 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc89)
    tt.return loc(#loc90)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":21:28)
#loc3 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":21:33)
#loc4 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":22:36)
#loc5 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":22:23)
#loc6 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":24:19)
#loc7 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":25:19)
#loc8 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":27:41)
#loc9 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":27:35)
#loc10 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":27:30)
#loc11 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":27:46)
#loc12 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":28:37)
#loc13 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":28:42)
#loc14 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":28:30)
#loc15 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":28:53)
#loc16 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":29:37)
#loc17 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":29:42)
#loc18 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":29:30)
#loc19 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":29:53)
#loc20 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":30:37)
#loc21 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":30:42)
#loc22 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":30:30)
#loc23 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":30:53)
#loc24 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":31:37)
#loc25 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":31:42)
#loc26 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":31:30)
#loc27 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":31:53)
#loc28 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":32:38)
#loc29 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":32:43)
#loc30 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":32:30)
#loc31 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":32:54)
#loc32 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":33:39)
#loc33 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":33:44)
#loc34 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":33:31)
#loc35 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":33:55)
#loc36 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":34:39)
#loc37 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":34:44)
#loc38 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":34:31)
#loc39 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":34:55)
#loc40 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":35:39)
#loc41 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":35:44)
#loc42 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":35:31)
#loc43 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":35:55)
#loc44 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":36:39)
#loc45 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":36:44)
#loc46 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":36:31)
#loc47 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":36:55)
#loc48 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":37:39)
#loc49 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":37:44)
#loc50 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":37:31)
#loc51 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":37:55)
#loc52 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":38:39)
#loc53 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":38:44)
#loc54 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":38:31)
#loc55 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":38:55)
#loc56 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":39:39)
#loc57 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":39:44)
#loc58 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":39:31)
#loc59 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":39:55)
#loc60 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":40:39)
#loc61 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":40:44)
#loc62 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":40:31)
#loc63 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":40:55)
#loc64 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":41:39)
#loc65 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":41:44)
#loc66 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":41:31)
#loc67 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":41:55)
#loc68 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":42:39)
#loc69 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":42:44)
#loc70 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":42:31)
#loc71 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":42:55)
#loc72 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":43:18)
#loc73 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":44:18)
#loc74 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":45:18)
#loc75 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":46:18)
#loc76 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":47:19)
#loc77 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":48:20)
#loc78 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":49:20)
#loc79 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":50:20)
#loc80 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":51:20)
#loc81 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":52:20)
#loc82 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":53:20)
#loc83 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":54:20)
#loc84 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":55:20)
#loc85 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":56:20)
#loc86 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":57:20)
#loc87 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":59:20)
#loc88 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":60:25)
#loc89 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":60:37)
#loc90 = loc("inductor_cache/su/csuufcngxh4usce2lny3merxjtwgzxrxgdwsdxefhwhaq3jqtbhn.py":60:4)
