; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_leaky_relu_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 2, !dbg !12
  %9 = and i32 %8, 508, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %6, 2, !dbg !13
  %12 = ashr exact i32 %10, 2, !dbg !14
  %13 = srem i32 %12, 4, !dbg !15
  %14 = srem i32 %11, 4, !dbg !16
  %15 = sdiv i32 %10, 16, !dbg !17
  %16 = sext i32 %13 to i64, !dbg !18
  %17 = getelementptr i64, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %19 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %20 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %21 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %22 = sext i32 %14 to i64, !dbg !20
  %23 = getelementptr i64, ptr addrspace(1) %0, i64 %22, !dbg !20
  %24 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %0, i1 true) #1, !dbg !21
  %25 = extractvalue { i64, i64 } %24, 0, !dbg !21
  %26 = extractvalue { i64, i64 } %24, 1, !dbg !21
  %27 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !21
  %28 = extractvalue { i64, i64 } %27, 0, !dbg !21
  %29 = extractvalue { i64, i64 } %27, 1, !dbg !21
  %30 = lshr i64 %18, 62, !dbg !22
  %31 = and i64 %30, 2, !dbg !22
  %32 = add i64 %31, %18, !dbg !22
  %33 = lshr i64 %25, 62, !dbg !23
  %34 = and i64 %33, 2, !dbg !23
  %35 = lshr i64 %26, 62, !dbg !23
  %36 = and i64 %35, 2, !dbg !23
  %37 = lshr i64 %28, 62, !dbg !23
  %38 = and i64 %37, 2, !dbg !23
  %39 = lshr i64 %29, 62, !dbg !23
  %40 = and i64 %39, 2, !dbg !23
  %41 = shl i64 %32, 1, !dbg !24
  %42 = shl nsw i32 %15, 2, !dbg !25
  %43 = sext i32 %42 to i64, !dbg !26
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !27
  %45 = getelementptr float, ptr addrspace(1) %44, i64 %34, !dbg !27
  %46 = getelementptr float, ptr addrspace(1) %45, i64 %41, !dbg !27
  %47 = getelementptr float, ptr addrspace(1) %46, i64 %43, !dbg !27
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !27
  %49 = getelementptr float, ptr addrspace(1) %48, i64 %36, !dbg !27
  %50 = getelementptr float, ptr addrspace(1) %49, i64 %41, !dbg !27
  %51 = getelementptr float, ptr addrspace(1) %50, i64 %43, !dbg !27
  %52 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !27
  %53 = getelementptr float, ptr addrspace(1) %52, i64 %38, !dbg !27
  %54 = getelementptr float, ptr addrspace(1) %53, i64 %41, !dbg !27
  %55 = getelementptr float, ptr addrspace(1) %54, i64 %43, !dbg !27
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %29, !dbg !27
  %57 = getelementptr float, ptr addrspace(1) %56, i64 %40, !dbg !27
  %58 = getelementptr float, ptr addrspace(1) %57, i64 %41, !dbg !27
  %59 = getelementptr float, ptr addrspace(1) %58, i64 %43, !dbg !27
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #1, !dbg !28
  %61 = bitcast i32 %60 to float, !dbg !28
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 true) #1, !dbg !28
  %63 = bitcast i32 %62 to float, !dbg !28
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 true) #1, !dbg !28
  %65 = bitcast i32 %64 to float, !dbg !28
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %59, i1 true) #1, !dbg !28
  %67 = bitcast i32 %66 to float, !dbg !28
  %68 = fcmp ogt float %61, 0.000000e+00, !dbg !29
  %69 = fcmp ogt float %63, 0.000000e+00, !dbg !29
  %70 = fcmp ogt float %65, 0.000000e+00, !dbg !29
  %71 = fcmp ogt float %67, 0.000000e+00, !dbg !29
  %72 = fmul float %61, 0x3F847AE140000000, !dbg !30
  %73 = fmul float %63, 0x3F847AE140000000, !dbg !30
  %74 = fmul float %65, 0x3F847AE140000000, !dbg !30
  %75 = fmul float %67, 0x3F847AE140000000, !dbg !30
  %76 = select i1 %68, float %61, float %72, !dbg !31
  %77 = select i1 %69, float %63, float %73, !dbg !31
  %78 = select i1 %70, float %65, float %74, !dbg !31
  %79 = select i1 %71, float %67, float %75, !dbg !31
  %80 = sext i32 %10 to i64, !dbg !32
  %81 = getelementptr float, ptr addrspace(1) %2, i64 %80, !dbg !32
  %82 = bitcast float %76 to i32, !dbg !33
  %83 = bitcast float %77 to i32, !dbg !33
  %84 = bitcast float %78 to i32, !dbg !33
  %85 = bitcast float %79 to i32, !dbg !33
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %82, i32 %83, i32 %84, i32 %85, ptr addrspace(1) %81, i1 true) #1, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cclrt55tcjemhruhpy3xlyiolvzblkmepjoeth33skoeax4nujaz.py", directory: "inductor_cache/cl")
!4 = !{ptr @triton_poi_fused__unsafe_index_leaky_relu_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_leaky_relu_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_leaky_relu_10", linkageName: "triton_poi_fused__unsafe_index_leaky_relu_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 26, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 33, column: 32, scope: !7)
!23 = !DILocation(line: 36, column: 32, scope: !7)
!24 = !DILocation(line: 37, column: 39, scope: !7)
!25 = !DILocation(line: 37, column: 48, scope: !7)
!26 = !DILocation(line: 37, column: 46, scope: !7)
!27 = !DILocation(line: 37, column: 30, scope: !7)
!28 = !DILocation(line: 37, column: 53, scope: !7)
!29 = !DILocation(line: 39, column: 19, scope: !7)
!30 = !DILocation(line: 41, column: 19, scope: !7)
!31 = !DILocation(line: 42, column: 34, scope: !7)
!32 = !DILocation(line: 43, column: 25, scope: !7)
!33 = !DILocation(line: 43, column: 37, scope: !7)
!34 = !DILocation(line: 43, column: 4, scope: !7)
