; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_convolution_relu_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 576, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 6, !dbg !15
  %14 = mul i32 %13, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = sdiv i32 %10, 36, !dbg !17
  %16 = srem i32 %15, 4, !dbg !18
  %17 = add nsw i32 %.decomposed, -1, !dbg !19
  %18 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !20
  %19 = insertelement <2 x i32> %18, i32 %11, i64 1, !dbg !20
  %20 = srem <2 x i32> %19, splat (i32 6), !dbg !20
  %21 = add nsw <2 x i32> %20, splat (i32 -1), !dbg !21
  %22 = extractelement <2 x i32> %21, i64 0, !dbg !19
  %23 = or i32 %22, %17, !dbg !19
  %24 = icmp ult i32 %23, 4, !dbg !19
  %25 = extractelement <2 x i32> %21, i64 1, !dbg !19
  %26 = or i32 %22, %25, !dbg !19
  %27 = icmp ult i32 %26, 4, !dbg !19
  %28 = extractelement <2 x i32> %20, i64 0, !dbg !22
  %29 = shl nsw i32 %28, 2, !dbg !22
  %30 = shl nsw i32 %15, 4, !dbg !23
  %31 = add nsw i32 %30, -5, !dbg !24
  %32 = add nsw i32 %31, %.decomposed, !dbg !25
  %33 = add nsw i32 %32, %29, !dbg !26
  %34 = extractelement <2 x i32> %20, i64 1, !dbg !25
  %35 = add nsw i32 %31, %34, !dbg !25
  %36 = add nsw i32 %35, %29, !dbg !26
  %37 = sext i32 %33 to i64, !dbg !27
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !27
  %39 = sext i32 %36 to i64, !dbg !27
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !27
  %41 = and i1 %12, %24, !dbg !28
  %42 = and i1 %12, %27, !dbg !28
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %41, i32 0, i1 %41) #1, !dbg !29
  %44 = bitcast i32 %43 to float, !dbg !29
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %42, i32 0, i1 %42) #1, !dbg !29
  %46 = bitcast i32 %45 to float, !dbg !29
  %47 = sext i32 %16 to i64, !dbg !30
  %48 = getelementptr float, ptr addrspace(1) %1, i64 %47, !dbg !30
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %41, i32 0, i1 %41) #1, !dbg !31
  %50 = bitcast i32 %49 to float, !dbg !31
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %42, i32 0, i1 %42) #1, !dbg !31
  %52 = bitcast i32 %51 to float, !dbg !31
  %53 = fadd float %44, %50, !dbg !32
  %54 = fadd float %46, %52, !dbg !32
  %55 = fcmp olt float %53, 0.000000e+00, !dbg !33
  %56 = fcmp olt float %54, 0.000000e+00, !dbg !33
  %57 = select i1 %55, float 0.000000e+00, float %53, !dbg !37
  %58 = select i1 %56, float 0.000000e+00, float %54, !dbg !37
  %59 = sext i32 %10 to i64, !dbg !38
  %60 = getelementptr float, ptr addrspace(1) %2, i64 %59, !dbg !38
  %61 = bitcast float %57 to i32, !dbg !39
  %62 = select i1 %24, i32 %61, i32 0, !dbg !40
  %63 = bitcast float %58 to i32, !dbg !39
  %64 = select i1 %27, i32 %63, i32 0, !dbg !40
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %62, i32 %64, ptr addrspace(1) %60, i1 %12) #1, !dbg !39
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "co7la4n4yscrwfpkwobizprtlydjirtj356ffqc4wzv45txsd3jm.py", directory: "inductor_cache/o7")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_convolution_relu_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_convolution_relu_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_convolution_relu_2", linkageName: "triton_poi_fused_constant_pad_nd_convolution_relu_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 27, column: 27, scope: !7)
!19 = !DILocation(line: 39, column: 19, scope: !7)
!20 = !DILocation(line: 24, column: 26, scope: !7)
!21 = !DILocation(line: 37, column: 18, scope: !7)
!22 = !DILocation(line: 40, column: 45, scope: !7)
!23 = !DILocation(line: 40, column: 53, scope: !7)
!24 = !DILocation(line: 40, column: 38, scope: !7)
!25 = !DILocation(line: 40, column: 43, scope: !7)
!26 = !DILocation(line: 40, column: 50, scope: !7)
!27 = !DILocation(line: 40, column: 31, scope: !7)
!28 = !DILocation(line: 40, column: 66, scope: !7)
!29 = !DILocation(line: 40, column: 58, scope: !7)
!30 = !DILocation(line: 41, column: 31, scope: !7)
!31 = !DILocation(line: 41, column: 36, scope: !7)
!32 = !DILocation(line: 42, column: 20, scope: !7)
!33 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!36 = !DILocation(line: 44, column: 42, scope: !7)
!37 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 47, column: 25, scope: !7)
!39 = !DILocation(line: 47, column: 37, scope: !7)
!40 = !DILocation(line: 46, column: 35, scope: !7)
!41 = !DILocation(line: 47, column: 4, scope: !7)
