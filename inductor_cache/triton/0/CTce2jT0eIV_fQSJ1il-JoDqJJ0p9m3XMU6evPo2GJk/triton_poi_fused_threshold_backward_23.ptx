//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_threshold_backward_23 // -- Begin function triton_poi_fused_threshold_backward_23
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_threshold_backward_23
.visible .entry triton_poi_fused_threshold_backward_23(
	.param .u64 .ptr .global .align 1 triton_poi_fused_threshold_backward_23_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_threshold_backward_23_param_1,
	.param .u32 triton_poi_fused_threshold_backward_23_param_2,
	.param .u32 triton_poi_fused_threshold_backward_23_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<17>;
	.reg .b32 	%r<98>;
	.reg .f32 	%f<9>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_threshold_backward_23_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_threshold_backward_23_param_1];
$L__tmp0:
	.loc	1 22 28                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:22:33
	shl.b32 	%r21, %r1, 6;
	.loc	1 23 44                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:23:44
	mov.u32 	%r22, %tid.x;
	bfe.u32 	%r24, %r22, 2, 5;
	shl.b32 	%r25, %r22, 3;
	and.b32  	%r26, %r25, 56;
	.loc	1 23 23                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:23:23
	or.b32  	%r27, %r21, %r24;
	or.b32  	%r28, %r21, %r26;
	.loc	1 25 28                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:25:33
	shl.b32 	%r29, %r2, 4;
	.loc	1 26 44                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:26:44
	shl.b32 	%r30, %r22, 2;
	and.b32  	%r31, %r30, 12;
	bfe.u32 	%r32, %r22, 3, 4;
	.loc	1 26 23                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:26:23
	or.b32  	%r33, %r29, %r31;
	or.b32  	%r34, %r29, %r32;
	.loc	1 27 21                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:27:21
	setp.lt.s32 	%p1, %r33, 16;
	setp.lt.s32 	%p11, %r34, 16;
	.loc	1 31 19                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:31:19
	bfe.s32 	%r35, %r1, 25, 1;
	shr.u32 	%r36, %r35, 21;
	add.s32 	%r37, %r28, %r36;
	.loc	1 30 19                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:30:19
	and.b32  	%r38, %r37, -2048;
	sub.s32 	%r39, %r28, %r38;
	.loc	1 23 23                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:23:23
	shl.b32 	%r40, %r27, 4;
	.loc	1 32 35                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:32:35
	add.s32 	%r41, %r33, %r40;
	add.s32 	%r42, %r41, 512;
	.loc	1 32 30                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:32:30
	mul.wide.s32 	%rd6, %r41, 4;
	add.s64 	%rd1, %rd4, %rd6;
	mul.wide.s32 	%rd7, %r42, 4;
	add.s64 	%rd2, %rd4, %rd7;
	.loc	1 32 43                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	.loc	1 34 19                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:34:19
	setp.le.f32 	%p12, %f8, 0f00000000;
	setp.le.f32 	%p13, %f7, 0f00000000;
	setp.le.f32 	%p14, %f6, 0f00000000;
	setp.le.f32 	%p15, %f5, 0f00000000;
	setp.le.f32 	%p16, %f4, 0f00000000;
	setp.le.f32 	%p17, %f3, 0f00000000;
	setp.le.f32 	%p18, %f2, 0f00000000;
	setp.le.f32 	%p19, %f1, 0f00000000;
	.loc	1 35 35                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:35:35
	shl.b32 	%r43, %r34, 11;
	.loc	1 35 30                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:35:30
	add.s32 	%r44, %r43, %r39;
	.loc	1 35 46                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:35:46
	shl.b32 	%r45, %r37, 4;
	and.b32  	%r46, %r45, -32768;
	.loc	1 35 40                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:35:40
	add.s32 	%r47, %r44, %r46;
	.loc	1 35 25                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:35:25
	cvt.s64.s32 	%rd8, %r47;
	add.s64 	%rd3, %rd5, %rd8;
	.loc	1 35 57                         // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:35:57
	shl.b32 	%r48, %r22, 8;
	and.b32  	%r49, %r48, 768;
	or.b32  	%r50, %r49, %r24;
	and.b32  	%r51, %r25, 1016;
	shr.u32 	%r52, %r49, 3;
	or.b32  	%r53, %r52, %r50;
	mov.u32 	%r54, global_smem;
	add.s32 	%r11, %r54, %r53;
	selp.u16 	%rs1, 1, 0, %p19;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b8 [ %r11 + 0 ], %rs1;
	// end inline asm
	or.b32  	%r55, %r49, 64;
	shr.u32 	%r56, %r55, 3;
	add.s32 	%r57, %r56, %r50;
	add.s32 	%r58, %r54, %r57;
	add.s32 	%r12, %r58, 64;
	selp.u16 	%rs2, 1, 0, %p18;
	// begin inline asm
	@%p3 st.shared.b8 [ %r12 + 0 ], %rs2;
	// end inline asm
	or.b32  	%r59, %r49, 128;
	shr.u32 	%r60, %r59, 3;
	add.s32 	%r61, %r60, %r50;
	add.s32 	%r62, %r54, %r61;
	add.s32 	%r13, %r62, 128;
	selp.u16 	%rs3, 1, 0, %p17;
	// begin inline asm
	@%p3 st.shared.b8 [ %r13 + 0 ], %rs3;
	// end inline asm
	or.b32  	%r63, %r49, 192;
	shr.u32 	%r64, %r63, 3;
	add.s32 	%r65, %r64, %r50;
	add.s32 	%r66, %r54, %r65;
	add.s32 	%r14, %r66, 192;
	selp.u16 	%rs4, 1, 0, %p16;
	// begin inline asm
	@%p3 st.shared.b8 [ %r14 + 0 ], %rs4;
	// end inline asm
	add.s32 	%r15, %r11, 32;
	selp.u16 	%rs5, 1, 0, %p15;
	// begin inline asm
	@%p3 st.shared.b8 [ %r15 + 0 ], %rs5;
	// end inline asm
	add.s32 	%r16, %r58, 96;
	selp.u16 	%rs6, 1, 0, %p14;
	// begin inline asm
	@%p3 st.shared.b8 [ %r16 + 0 ], %rs6;
	// end inline asm
	add.s32 	%r17, %r62, 160;
	selp.u16 	%rs7, 1, 0, %p13;
	// begin inline asm
	@%p3 st.shared.b8 [ %r17 + 0 ], %rs7;
	// end inline asm
	add.s32 	%r18, %r66, 224;
	selp.u16 	%rs8, 1, 0, %p12;
	// begin inline asm
	@%p3 st.shared.b8 [ %r18 + 0 ], %rs8;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r67, %r22, 120;
	add.s32 	%r68, %r51, %r67;
	add.s32 	%r69, %r54, %r68;
	ld.shared.v2.u32 	{%r70, %r71}, [%r69];
	bfe.u32 	%r74, %r70, 0, 8;
	bfe.u32 	%r75, %r70, 16, 8;
	cvt.u16.u32 	%rs9, %r75;
	bfe.u32 	%r76, %r70, 8, 8;
	cvt.u16.u32 	%rs10, %r76;
	mov.b32 	%r77, {%rs10, %rs9};
	and.b32  	%r78, %r77, 65537;
	bfe.u32 	%r79, %r71, 0, 8;
	bfe.u32 	%r80, %r71, 16, 8;
	cvt.u16.u32 	%rs11, %r80;
	bfe.u32 	%r81, %r71, 8, 8;
	cvt.u16.u32 	%rs12, %r81;
	mov.b32 	%r82, {%rs12, %rs11};
	and.b32  	%r83, %r82, 65537;
	mov.b32 	{%rs13, %rs14}, %r78;
	cvt.u32.u16 	%r84, %rs14;
	bfe.u32 	%r85, %r70, 24, 1;
	prmt.b32 	%r86, %r84, %r85, 0x3340U;
	cvt.u32.u16 	%r87, %rs13;
	and.b32  	%r88, %r74, 1;
	prmt.b32 	%r89, %r88, %r87, 0x3340U;
	prmt.b32 	%r90, %r89, %r86, 0x5410U;
	mov.b32 	{%rs15, %rs16}, %r83;
	cvt.u32.u16 	%r91, %rs16;
	bfe.u32 	%r92, %r71, 24, 1;
	prmt.b32 	%r93, %r91, %r92, 0x3340U;
	cvt.u32.u16 	%r94, %rs15;
	and.b32  	%r95, %r79, 1;
	prmt.b32 	%r96, %r95, %r94, 0x3340U;
	prmt.b32 	%r97, %r96, %r93, 0x5410U;
	// begin inline asm
	@%p11 st.global.v2.b32 [ %rd3 + 0 ], { %r90, %r97 };
	// end inline asm
	.loc	1 35 4                          // cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jr/cjrwme7dowe3hfmzv2h7u7iozjxmom4uwbgcqks2sqkzxue7vt3x.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 114
.b8 119
.b8 109
.b8 101
.b8 55
.b8 100
.b8 111
.b8 119
.b8 101
.b8 51
.b8 104
.b8 102
.b8 109
.b8 122
.b8 118
.b8 50
.b8 104
.b8 55
.b8 117
.b8 55
.b8 105
.b8 111
.b8 122
.b8 106
.b8 120
.b8 109
.b8 111
.b8 109
.b8 52
.b8 117
.b8 119
.b8 98
.b8 103
.b8 99
.b8 113
.b8 107
.b8 115
.b8 50
.b8 115
.b8 113
.b8 107
.b8 122
.b8 120
.b8 117
.b8 101
.b8 55
.b8 118
.b8 116
.b8 51
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 114
.b8 0
	}
	.section	.debug_macinfo	{	}
