//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_4 // -- Begin function triton_poi_fused_convolution_4
                                        // @triton_poi_fused_convolution_4
.visible .entry triton_poi_fused_convolution_4(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_4_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_4_param_1,
	.param .u32 triton_poi_fused_convolution_4_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<66>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_convolution_4_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_4_param_1];
$L__tmp0:
	.loc	1 21 28                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:21:33
	shl.b32 	%r14, %r1, 9;
	.loc	1 22 36                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:22:36
	mov.u32 	%r15, %tid.x;
	shl.b32 	%r16, %r15, 2;
	and.b32  	%r17, %r16, 508;
	.loc	1 22 23                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:22:23
	or.b32  	%r18, %r14, %r17;
	or.b32  	%r19, %r18, 1;
	or.b32  	%r20, %r18, 2;
	or.b32  	%r21, %r18, 3;
	.loc	1 23 21                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:23:21
	setp.lt.s32 	%p1, %r18, 46128;
	.loc	1 25 21                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:25:21
	mul.hi.s32 	%r22, %r18, -2006701681;
	mad.lo.s32 	%r23, %r18, 1, %r22;
	shr.u32 	%r24, %r23, 31;
	shr.s32 	%r25, %r23, 9;
	add.s32 	%r26, %r25, %r24;
	mul.hi.s32 	%r27, %r19, -2006701681;
	mad.lo.s32 	%r28, %r19, 1, %r27;
	shr.u32 	%r29, %r28, 31;
	shr.s32 	%r30, %r28, 9;
	add.s32 	%r31, %r30, %r29;
	mul.hi.s32 	%r32, %r20, -2006701681;
	mad.lo.s32 	%r33, %r20, 1, %r32;
	shr.u32 	%r34, %r33, 31;
	shr.s32 	%r35, %r33, 9;
	add.s32 	%r36, %r35, %r34;
	mul.hi.s32 	%r37, %r21, -2006701681;
	mad.lo.s32 	%r38, %r21, 1, %r37;
	shr.u32 	%r39, %r38, 31;
	shr.s32 	%r40, %r38, 9;
	add.s32 	%r41, %r40, %r39;
	.loc	1 25 28                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:25:28
	mul.hi.s32 	%r42, %r26, 715827883;
	shr.u32 	%r43, %r42, 31;
	shr.u32 	%r44, %r42, 1;
	add.s32 	%r45, %r44, %r43;
	mul.lo.s32 	%r46, %r45, 12;
	sub.s32 	%r47, %r26, %r46;
	mul.hi.s32 	%r48, %r31, 715827883;
	shr.u32 	%r49, %r48, 31;
	shr.u32 	%r50, %r48, 1;
	add.s32 	%r51, %r50, %r49;
	mul.lo.s32 	%r52, %r51, 12;
	sub.s32 	%r53, %r31, %r52;
	mul.hi.s32 	%r54, %r36, 715827883;
	shr.u32 	%r55, %r54, 31;
	shr.u32 	%r56, %r54, 1;
	add.s32 	%r57, %r56, %r55;
	mul.lo.s32 	%r58, %r57, 12;
	sub.s32 	%r59, %r36, %r58;
	mul.hi.s32 	%r60, %r41, 715827883;
	shr.u32 	%r61, %r60, 31;
	shr.u32 	%r62, %r60, 1;
	add.s32 	%r63, %r62, %r61;
	mul.lo.s32 	%r64, %r63, 12;
	sub.s32 	%r65, %r41, %r64;
	.loc	1 26 34                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:26:34
	mul.wide.s32 	%rd9, %r18, 4;
	add.s64 	%rd1, %rd7, %rd9;
	.loc	1 26 39                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 27 30                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:27:30
	mul.wide.s32 	%rd10, %r47, 4;
	add.s64 	%rd2, %rd8, %rd10;
	mul.wide.s32 	%rd11, %r53, 4;
	add.s64 	%rd3, %rd8, %rd11;
	mul.wide.s32 	%rd12, %r59, 4;
	add.s64 	%rd4, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r65, 4;
	add.s64 	%rd5, %rd8, %rd13;
	.loc	1 27 35                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:27:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 28 18                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:28:18
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
	.loc	1 29 39                         // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:29:39
	mov.b32 	%r10, %f9;
	mov.b32 	%r11, %f10;
	mov.b32 	%r12, %f11;
	mov.b32 	%r13, %f12;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r10, %r11, %r12, %r13 };
	// end inline asm
	.loc	1 29 4                          // cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py:29:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/sz/cszxxmns7e4rj5ummoxxpmjsd65somrb54nmt5owchmbru7qpl4v.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 115
.b8 122
.b8 120
.b8 120
.b8 109
.b8 110
.b8 115
.b8 55
.b8 101
.b8 52
.b8 114
.b8 106
.b8 53
.b8 117
.b8 109
.b8 109
.b8 111
.b8 120
.b8 120
.b8 112
.b8 109
.b8 106
.b8 115
.b8 100
.b8 54
.b8 53
.b8 115
.b8 111
.b8 109
.b8 114
.b8 98
.b8 53
.b8 52
.b8 110
.b8 109
.b8 116
.b8 53
.b8 111
.b8 119
.b8 99
.b8 104
.b8 109
.b8 98
.b8 114
.b8 117
.b8 55
.b8 113
.b8 112
.b8 108
.b8 52
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 115
.b8 122
.b8 0
	}
	.section	.debug_macinfo	{	}
