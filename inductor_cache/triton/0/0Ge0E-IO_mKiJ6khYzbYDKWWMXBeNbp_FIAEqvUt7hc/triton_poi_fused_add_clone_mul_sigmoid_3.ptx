//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_clone_mul_sigmoid_3 // -- Begin function triton_poi_fused_add_clone_mul_sigmoid_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_clone_mul_sigmoid_3
.visible .entry triton_poi_fused_add_clone_mul_sigmoid_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_sigmoid_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_sigmoid_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_sigmoid_3_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_sigmoid_3_param_3,
	.param .u32 triton_poi_fused_add_clone_mul_sigmoid_3_param_4,
	.param .u32 triton_poi_fused_add_clone_mul_sigmoid_3_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b32 	%r<154>;
	.reg .f32 	%f<54>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:19:0

// %bb.0:
	ld.param.u64 	%rd15, [triton_poi_fused_add_clone_mul_sigmoid_3_param_0];
	ld.param.u64 	%rd16, [triton_poi_fused_add_clone_mul_sigmoid_3_param_1];
$L__tmp0:
	.loc	1 22 28                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:22:33
	shl.b32 	%r73, %r1, 6;
	ld.param.u64 	%rd17, [triton_poi_fused_add_clone_mul_sigmoid_3_param_2];
	ld.param.u64 	%rd18, [triton_poi_fused_add_clone_mul_sigmoid_3_param_3];
	.loc	1 23 44                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:23:44
	mov.u32 	%r74, %tid.x;
	bfe.u32 	%r75, %r74, 2, 4;
	and.b32  	%r76, %r74, 64;
	shr.u32 	%r77, %r76, 2;
	or.b32  	%r78, %r75, %r77;
	shl.b32 	%r79, %r74, 2;
	and.b32  	%r80, %r79, 12;
	and.b32  	%r81, %r79, 60;
	.loc	1 23 23                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:23:23
	or.b32  	%r82, %r73, %r78;
	or.b32  	%r83, %r82, 32;
	or.b32  	%r84, %r73, %r81;
	.loc	1 24 21                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:24:21
	setp.lt.s32 	%p3, %r82, 64;
	setp.lt.s32 	%p7, %r83, 64;
	setp.lt.s32 	%p31, %r84, 64;
	.loc	1 25 28                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:25:33
	shl.b32 	%r85, %r2, 4;
	.loc	1 26 44                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:26:44
	bfe.u32 	%r86, %r74, 4, 2;
	shr.u32 	%r87, %r76, 4;
	or.b32  	%r88, %r86, %r87;
	.loc	1 26 23                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:26:23
	or.b32  	%r89, %r85, %r80;
	or.b32  	%r90, %r85, %r88;
	or.b32  	%r91, %r90, 8;
	.loc	1 27 21                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:27:21
	setp.lt.s32 	%p32, %r89, 16;
	setp.lt.s32 	%p33, %r90, 16;
	setp.lt.s32 	%p34, %r91, 16;
	.loc	1 32 38                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:32:38
	shl.b32 	%r92, %r82, 4;
	shl.b32 	%r93, %r83, 4;
	.loc	1 32 35                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:32:35
	add.s32 	%r94, %r89, %r92;
	add.s32 	%r95, %r89, %r93;
	.loc	1 32 30                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:32:30
	mul.wide.s32 	%rd19, %r94, 4;
	add.s64 	%rd1, %rd15, %rd19;
	mul.wide.s32 	%rd20, %r95, 4;
	add.s64 	%rd2, %rd15, %rd20;
	.loc	1 32 51                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:32:51
	and.pred  	%p1, %p3, %p32;
	and.pred  	%p2, %p7, %p32;
	and.pred  	%p11, %p31, %p33;
	and.pred  	%p12, %p34, %p31;
	.loc	1 32 43                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r3;
	mov.b32 	%f6, %r4;
	mov.b32 	%f7, %r5;
	mov.b32 	%f8, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r7;
	mov.b32 	%f10, %r8;
	mov.b32 	%f11, %r9;
	mov.b32 	%f12, %r10;
	.loc	1 33 30                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:33:30
	mul.wide.s32 	%rd21, %r82, 4;
	add.s64 	%rd3, %rd16, %rd21;
	cvt.s64.s32 	%rd22, %r73;
	cvt.u64.u32 	%rd23, %r78;
	or.b64  	%rd24, %rd22, %rd23;
	shl.b64 	%rd25, %rd24, 2;
	add.s64 	%rd26, %rd16, %rd25;
	add.s64 	%rd7, %rd26, 128;
	.loc	1 33 35                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r18 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r18;
	.loc	1 34 37                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:34:37
	shl.b32 	%r96, %r90, 2;
	shl.b32 	%r97, %r91, 2;
	.loc	1 34 45                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:34:45
	shl.b32 	%r98, %r84, 4;
	.loc	1 34 42                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:34:42
	add.s32 	%r99, %r96, %r98;
	add.s32 	%r100, %r98, %r97;
	.loc	1 34 30                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:34:30
	mul.wide.s32 	%rd27, %r99, 4;
	add.s64 	%rd11, %rd17, %rd27;
	mul.wide.s32 	%rd28, %r100, 4;
	add.s64 	%rd12, %rd17, %rd28;
	.loc	1 34 50                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:34:50
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p11 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r19;
	mov.b32 	%f16, %r20;
	mov.b32 	%f17, %r21;
	mov.b32 	%f18, %r22;
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p12 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r23;
	mov.b32 	%f20, %r24;
	mov.b32 	%f21, %r25;
	mov.b32 	%f22, %r26;
	mov.f32 	%f23, 0f00000000;
$L__tmp1:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f24, %f23, %f13;
	sub.f32 	%f25, %f23, %f14;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f24, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f25, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f26, %f1, 0f3F800000;
	add.f32 	%f27, %f3, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r29, %f26;
	mov.b32 	%r28, 1065353216;
	// begin inline asm
	div.full.f32 %r27, %r28, %r29;
	// end inline asm
	mov.b32 	%f28, %r27;
	mov.b32 	%r32, %f27;
	// begin inline asm
	div.full.f32 %r30, %r28, %r32;
	// end inline asm
	mov.b32 	%f29, %r30;
$L__tmp2:
	.loc	1 36 18                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:36:18
	mul.f32 	%f30, %f28, %f5;
	mul.f32 	%f31, %f28, %f6;
	mul.f32 	%f32, %f28, %f7;
	mul.f32 	%f33, %f28, %f8;
	mul.f32 	%f34, %f29, %f9;
	mul.f32 	%f35, %f29, %f10;
	mul.f32 	%f36, %f29, %f11;
	mul.f32 	%f37, %f29, %f12;
	shl.b32 	%r101, %r74, 8;
	and.b32  	%r102, %r101, 768;
	or.b32  	%r103, %r78, %r102;
	and.b32  	%r104, %r79, 508;
	shr.u32 	%r105, %r102, 2;
	mov.u32 	%r106, global_smem;
	add.s32 	%r107, %r106, %r105;
	shl.b32 	%r108, %r103, 2;
	add.s32 	%r33, %r107, %r108;
	mov.b32 	%r34, %f30;
	mov.pred 	%p13, -1;
	// begin inline asm
	@%p13 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	or.b32  	%r109, %r102, 64;
	shr.u32 	%r110, %r109, 2;
	add.s32 	%r111, %r106, %r110;
	add.s32 	%r112, %r111, %r108;
	add.s32 	%r35, %r112, 256;
	mov.b32 	%r36, %f31;
	// begin inline asm
	@%p13 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	or.b32  	%r113, %r102, 128;
	shr.u32 	%r114, %r113, 2;
	add.s32 	%r115, %r106, %r114;
	add.s32 	%r116, %r115, %r108;
	add.s32 	%r37, %r116, 512;
	mov.b32 	%r38, %f32;
	// begin inline asm
	@%p13 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	or.b32  	%r117, %r102, 192;
	shr.u32 	%r118, %r117, 2;
	add.s32 	%r119, %r106, %r118;
	add.s32 	%r120, %r119, %r108;
	add.s32 	%r39, %r120, 768;
	mov.b32 	%r40, %f33;
	// begin inline asm
	@%p13 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	add.s32 	%r41, %r33, 128;
	mov.b32 	%r42, %f34;
	// begin inline asm
	@%p13 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r112, 384;
	mov.b32 	%r44, %f35;
	// begin inline asm
	@%p13 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r116, 640;
	mov.b32 	%r46, %f36;
	// begin inline asm
	@%p13 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r120, 896;
	mov.b32 	%r48, %f37;
	// begin inline asm
	@%p13 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r121, %r74, 112;
	add.s32 	%r122, %r106, %r121;
	shl.b32 	%r123, %r104, 2;
	add.s32 	%r124, %r122, %r123;
	ld.shared.v4.f32 	{%f38, %f39, %f40, %f41}, [%r124];
	or.b32  	%r125, %r104, 512;
	shr.u32 	%r126, %r125, 2;
	and.b32  	%r127, %r126, 240;
	add.s32 	%r128, %r106, %r127;
	add.s32 	%r129, %r128, %r123;
	ld.shared.v4.f32 	{%f42, %f43, %f44, %f45}, [%r129+2048];
	.loc	1 37 18                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:37:18
	add.f32 	%f46, %f38, %f15;
	add.f32 	%f47, %f39, %f16;
	add.f32 	%f48, %f40, %f17;
	add.f32 	%f49, %f41, %f18;
	add.f32 	%f50, %f42, %f19;
	add.f32 	%f51, %f43, %f20;
	add.f32 	%f52, %f44, %f21;
	add.f32 	%f53, %f45, %f22;
	.loc	1 38 25                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:38:25
	add.s64 	%rd13, %rd18, %rd19;
	add.s64 	%rd14, %rd18, %rd20;
	.loc	1 38 44                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:38:44
	bar.sync 	0;
	shl.b32 	%r130, %r74, 6;
	and.b32  	%r131, %r130, 960;
	or.b32  	%r132, %r88, %r131;
	shr.u32 	%r133, %r131, 2;
	add.s32 	%r134, %r106, %r133;
	shl.b32 	%r135, %r132, 2;
	add.s32 	%r49, %r134, %r135;
	mov.b32 	%r50, %f46;
	// begin inline asm
	@%p13 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	or.b32  	%r136, %r131, 16;
	shr.u32 	%r137, %r136, 2;
	add.s32 	%r138, %r106, %r137;
	add.s32 	%r139, %r138, %r135;
	add.s32 	%r51, %r139, 64;
	mov.b32 	%r52, %f47;
	// begin inline asm
	@%p13 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	or.b32  	%r140, %r131, 32;
	shr.u32 	%r141, %r140, 2;
	add.s32 	%r142, %r106, %r141;
	add.s32 	%r143, %r142, %r135;
	add.s32 	%r53, %r143, 128;
	mov.b32 	%r54, %f48;
	// begin inline asm
	@%p13 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	or.b32  	%r144, %r131, 48;
	shr.u32 	%r145, %r144, 2;
	add.s32 	%r146, %r106, %r145;
	add.s32 	%r147, %r146, %r135;
	add.s32 	%r55, %r147, 192;
	mov.b32 	%r56, %f49;
	// begin inline asm
	@%p13 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r49, 32;
	mov.b32 	%r58, %f50;
	// begin inline asm
	@%p13 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r139, 96;
	mov.b32 	%r60, %f51;
	// begin inline asm
	@%p13 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r143, 160;
	mov.b32 	%r62, %f52;
	// begin inline asm
	@%p13 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r147, 224;
	mov.b32 	%r64, %f53;
	// begin inline asm
	@%p13 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r148, %r74, 124;
	add.s32 	%r149, %r106, %r148;
	add.s32 	%r150, %r149, %r123;
	ld.shared.u32 	%r65, [%r150];
	ld.shared.u32 	%r66, [%r150+4];
	ld.shared.u32 	%r67, [%r150+8];
	ld.shared.u32 	%r68, [%r150+12];
	.loc	1 36 18                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:36:18
	and.b32  	%r151, %r126, 252;
	.loc	1 38 44                         // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:38:44
	add.s32 	%r152, %r106, %r151;
	add.s32 	%r153, %r152, %r123;
	ld.shared.u32 	%r69, [%r153+2048];
	ld.shared.u32 	%r70, [%r153+2052];
	ld.shared.u32 	%r71, [%r153+2056];
	ld.shared.u32 	%r72, [%r153+2060];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r65, %r66, %r67, %r68 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd14 + 0 ], { %r69, %r70, %r71, %r72 };
	// end inline asm
	.loc	1 38 4                          // cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py:38:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ok/cokhrb4iiusee4t7f3h5clt6t2leh4nkqmxfjazrsdrirel6rtrc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 185                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 111
.b8 107
.b8 104
.b8 114
.b8 98
.b8 52
.b8 105
.b8 105
.b8 117
.b8 115
.b8 101
.b8 101
.b8 52
.b8 116
.b8 55
.b8 102
.b8 51
.b8 104
.b8 53
.b8 99
.b8 108
.b8 116
.b8 54
.b8 116
.b8 50
.b8 108
.b8 101
.b8 104
.b8 52
.b8 110
.b8 107
.b8 113
.b8 109
.b8 120
.b8 102
.b8 106
.b8 97
.b8 122
.b8 114
.b8 115
.b8 100
.b8 114
.b8 105
.b8 114
.b8 101
.b8 108
.b8 54
.b8 114
.b8 116
.b8 114
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 111
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 22                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
