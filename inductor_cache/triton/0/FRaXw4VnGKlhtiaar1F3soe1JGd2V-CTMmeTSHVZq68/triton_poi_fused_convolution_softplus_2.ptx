//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_softplus_2 // -- Begin function triton_poi_fused_convolution_softplus_2
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_convolution_softplus_2
.visible .entry triton_poi_fused_convolution_softplus_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_softplus_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_softplus_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_softplus_2_param_2,
	.param .u32 triton_poi_fused_convolution_softplus_2_param_3,
	.param .u32 triton_poi_fused_convolution_softplus_2_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<69>;
	.reg .f32 	%f<92>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_convolution_softplus_2_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_convolution_softplus_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:22:28
	// begin inline asm
	mov.u32 %r9, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:22:33
	shl.b32 	%r1, %r9, 4;
	.loc	1 23 44                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r3, %r2, 3, 4;
	shl.b32 	%r4, %r2, 1;
	and.b32  	%r5, %r4, 14;
	.loc	1 23 23                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:23:23
	or.b32  	%r15, %r1, %r3;
	.loc	1 24 21                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:24:21
	setp.lt.s32 	%p4, %r15, 64;
	.loc	1 25 28                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:25:28
	// begin inline asm
	mov.u32 %r10, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:25:33
	shl.b32 	%r6, %r10, 4;
	.loc	1 26 23                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:26:23
	or.b32  	%r16, %r6, %r5;
	.loc	1 27 21                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:27:21
	setp.lt.s32 	%p3, %r16, 16;
	.loc	1 32 42                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:32:42
	shl.b32 	%r17, %r15, 4;
	.loc	1 32 39                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:32:39
	add.s32 	%r18, %r16, %r17;
	.loc	1 32 34                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:32:34
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd9, %rd5, %rd7;
	.loc	1 32 55                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:32:55
	and.pred  	%p11, %p4, %p3;
	.loc	1 32 47                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:32:47
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p11 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r11;
	mov.b32 	%f20, %r12;
	.loc	1 33 30                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:33:30
	mul.wide.s32 	%rd8, %r16, 4;
	add.s64 	%rd4, %rd6, %rd8;
	.loc	1 33 35                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:33:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r13;
	mov.b32 	%f22, %r14;
	.loc	1 34 18                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:34:18
	add.f32 	%f1, %f19, %f21;
	add.f32 	%f2, %f20, %f22;
	.loc	1 39 23                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:39:23
	mul.f32 	%f16, %f1, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f15, %f16;
	// end inline asm
	mul.f32 	%f18, %f2, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f17, %f18;
	// end inline asm
	mov.f32 	%f23, 0f3F800000;
	.loc	1 40 27                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:40:27
	add.rz.ftz.f32 	%f24, %f15, %f23;
	mov.b32 	%r19, %f24;
	add.s32 	%r20, %r19, -1061158912;
	and.b32  	%r21, %r20, -8388608;
	mov.b32 	%r7, %f15;
	sub.s32 	%r22, %r7, %r21;
	mov.b32 	%f25, %r22;
	mov.b32 	%r23, 1082130432;
	sub.s32 	%r24, %r23, %r21;
	mov.b32 	%f26, %r24;
	mov.f32 	%f27, 0fBF800000;
	mov.f32 	%f28, 0f3E800000;
	fma.rn.ftz.f32 	%f29, %f28, %f26, %f27;
	add.f32 	%f30, %f29, %f25;
	cvt.rn.f32.s32 	%f31, %r21;
	mul.f32 	%f32, %f31, 0f34000000;
	mov.f32 	%f33, 0f3DD80012;
	mov.f32 	%f34, 0fBD39BF78;
	fma.rn.ftz.f32 	%f35, %f34, %f30, %f33;
	mov.f32 	%f36, 0fBE0778E0;
	fma.rn.ftz.f32 	%f37, %f35, %f30, %f36;
	mov.f32 	%f38, 0f3E146475;
	fma.rn.ftz.f32 	%f39, %f37, %f30, %f38;
	mov.f32 	%f40, 0fBE2A68DD;
	fma.rn.ftz.f32 	%f41, %f39, %f30, %f40;
	mov.f32 	%f42, 0f3E4CAF9E;
	fma.rn.ftz.f32 	%f43, %f41, %f30, %f42;
	mov.f32 	%f44, 0fBE800042;
	fma.rn.ftz.f32 	%f45, %f43, %f30, %f44;
	mov.f32 	%f46, 0f3EAAAAE6;
	fma.rn.ftz.f32 	%f47, %f45, %f30, %f46;
	mov.f32 	%f48, 0fBF000000;
	fma.rn.ftz.f32 	%f49, %f47, %f30, %f48;
	mul.f32 	%f50, %f30, %f49;
	fma.rn.ftz.f32 	%f51, %f50, %f30, %f30;
	mov.f32 	%f52, 0f3F317218;
	fma.rn.ftz.f32 	%f89, %f32, %f52, %f51;
	setp.lt.u32 	%p5, %r7, 2139095040;
	mov.f32 	%f87, 0f7F800000;
	@%p5 bra 	$L__BB0_4;
// %bb.1:
	setp.lt.s32 	%p6, %r7, -1082130431;
	@%p6 bra 	$L__BB0_3;
// %bb.2:                               // %__nv_fmaf_rn.exit.i
	.loc	1 0 27                          // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:0:27
	fma.rn.ftz.f32 	%f89, %f15, %f87, %f87;
$L__BB0_3:
	.loc	1 40 27                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:40:27
	setp.eq.f32 	%p7, %f15, 0f00000000;
	selp.f32 	%f89, 0f80000000, %f89, %p7;
$L__BB0_4:                              // %__nv_log1pf.exit
	.loc	1 0 27                          // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:0:27
	ld.param.u64 	%rd2, [triton_poi_fused_convolution_softplus_2_param_2];
	.loc	1 40 27                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:40:27
	add.rz.ftz.f32 	%f55, %f17, %f23;
	mov.b32 	%r25, %f55;
	add.s32 	%r26, %r25, -1061158912;
	and.b32  	%r27, %r26, -8388608;
	mov.b32 	%r8, %f17;
	sub.s32 	%r28, %r8, %r27;
	mov.b32 	%f56, %r28;
	sub.s32 	%r30, %r23, %r27;
	mov.b32 	%f57, %r30;
	fma.rn.ftz.f32 	%f60, %f28, %f57, %f27;
	add.f32 	%f61, %f60, %f56;
	cvt.rn.f32.s32 	%f62, %r27;
	mul.f32 	%f63, %f62, 0f34000000;
	fma.rn.ftz.f32 	%f66, %f34, %f61, %f33;
	fma.rn.ftz.f32 	%f68, %f66, %f61, %f36;
	fma.rn.ftz.f32 	%f70, %f68, %f61, %f38;
	fma.rn.ftz.f32 	%f72, %f70, %f61, %f40;
	fma.rn.ftz.f32 	%f74, %f72, %f61, %f42;
	fma.rn.ftz.f32 	%f76, %f74, %f61, %f44;
	fma.rn.ftz.f32 	%f78, %f76, %f61, %f46;
	fma.rn.ftz.f32 	%f80, %f78, %f61, %f48;
	mul.f32 	%f81, %f61, %f80;
	fma.rn.ftz.f32 	%f82, %f81, %f61, %f61;
	fma.rn.ftz.f32 	%f90, %f63, %f52, %f82;
	setp.lt.u32 	%p8, %r8, 2139095040;
	@%p8 bra 	$L__BB0_8;
// %bb.5:
	setp.lt.s32 	%p9, %r8, -1082130431;
	@%p9 bra 	$L__BB0_7;
// %bb.6:                               // %__nv_fmaf_rn.exit.i30
	.loc	1 0 27                          // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:0:27
	fma.rn.ftz.f32 	%f90, %f17, %f87, %f87;
$L__BB0_7:
	.loc	1 40 27                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:40:27
	setp.eq.f32 	%p10, %f17, 0f00000000;
	selp.f32 	%f90, 0f80000000, %f90, %p10;
$L__BB0_8:                              // %__nv_log1pf.exit33
	.loc	1 38 18                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:38:18
	setp.gt.f32 	%p15, %f2, 0f41A00000;
	setp.gt.f32 	%p16, %f1, 0f41A00000;
	.loc	1 26 23                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:26:23
	or.b32  	%r39, %r6, %r3;
	.loc	1 27 21                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:27:21
	setp.lt.s32 	%p17, %r39, 16;
	.loc	1 23 23                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:23:23
	or.b32  	%r40, %r1, %r5;
	.loc	1 24 21                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:24:21
	setp.lt.s32 	%p18, %r40, 64;
	.loc	1 32 55                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:32:55
	and.pred  	%p14, %p18, %p17;
	.loc	1 31 19                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:31:19
	shr.s32 	%r42, %r40, 31;
	shr.u32 	%r43, %r42, 28;
	add.s32 	%r44, %r40, %r43;
	.loc	1 30 19                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:30:19
	and.b32  	%r45, %r44, -16;
	sub.s32 	%r46, %r40, %r45;
	.loc	1 42 33                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:42:33
	selp.f32 	%f85, %f1, %f89, %p16;
	selp.f32 	%f86, %f2, %f90, %p15;
	.loc	1 43 4                          // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:43:4
	bar.sync 	0;
	.loc	1 44 47                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:44:47
	mov.b32 	%r31, %f1;
	mov.b32 	%r32, %f2;
	// begin inline asm
	@%p11 st.global.v2.b32 [ %rd9 + 0 ], { %r31, %r32 };
	// end inline asm
	.loc	1 45 33                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:45:33
	shl.b32 	%r47, %r39, 4;
	.loc	1 45 30                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:45:30
	add.s32 	%r48, %r47, %r46;
	.loc	1 45 42                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:45:42
	shl.b32 	%r49, %r44, 4;
	and.b32  	%r50, %r49, -256;
	.loc	1 45 38                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:45:38
	add.s32 	%r51, %r48, %r50;
	.loc	1 45 25                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:45:25
	mul.wide.s32 	%rd11, %r51, 4;
	add.s64 	%rd10, %rd2, %rd11;
	.loc	1 45 54                         // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:45:54
	shl.b32 	%r52, %r2, 5;
	and.b32  	%r53, %r52, 224;
	or.b32  	%r54, %r53, %r3;
	and.b32  	%r55, %r4, 254;
	shr.u32 	%r56, %r53, 1;
	mov.u32 	%r57, global_smem;
	add.s32 	%r58, %r57, %r56;
	shl.b32 	%r59, %r54, 2;
	add.s32 	%r33, %r58, %r59;
	mov.b32 	%r34, %f85;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	or.b32  	%r60, %r53, 16;
	shr.u32 	%r61, %r60, 1;
	add.s32 	%r62, %r57, %r61;
	add.s32 	%r63, %r62, %r59;
	add.s32 	%r35, %r63, 64;
	mov.b32 	%r36, %f86;
	// begin inline asm
	@%p12 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r64, %r4, 1;
	and.b32  	%r65, %r64, 120;
	add.s32 	%r66, %r57, %r65;
	shl.b32 	%r67, %r55, 2;
	add.s32 	%r68, %r66, %r67;
	ld.shared.v2.u32 	{%r37, %r38}, [%r68];
	// begin inline asm
	@%p14 st.global.v2.b32 [ %rd10 + 0 ], { %r37, %r38 };
	// end inline asm
	.loc	1 45 4                          // cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py:45:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vu/cvu7lavdlpafta6l3efnljrx2ayijyroxxlniidu7qkvoe5k7yxz.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 117
.b8 55
.b8 108
.b8 97
.b8 118
.b8 100
.b8 108
.b8 112
.b8 97
.b8 102
.b8 116
.b8 97
.b8 54
.b8 108
.b8 51
.b8 101
.b8 102
.b8 110
.b8 108
.b8 106
.b8 114
.b8 120
.b8 50
.b8 97
.b8 121
.b8 105
.b8 106
.b8 121
.b8 114
.b8 111
.b8 120
.b8 120
.b8 108
.b8 110
.b8 105
.b8 105
.b8 100
.b8 117
.b8 55
.b8 113
.b8 107
.b8 118
.b8 111
.b8 101
.b8 53
.b8 107
.b8 55
.b8 121
.b8 120
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 117
.b8 0
	}
	.section	.debug_macinfo	{	}
