//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_30 // -- Begin function triton_poi_fused_add_30
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_30
.visible .entry triton_poi_fused_add_30(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_30_param_3,
	.param .u32 triton_poi_fused_add_30_param_4,
	.param .u32 triton_poi_fused_add_30_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<178>;
	.reg .f32 	%f<69>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_add_30_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_30_param_1];
$L__tmp0:
	.loc	1 22 28                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:22:33
	shl.b32 	%r86, %r1, 8;
	ld.param.u64 	%rd16, [triton_poi_fused_add_30_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused_add_30_param_3];
	.loc	1 23 44                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:23:44
	mov.u32 	%r87, %tid.x;
	bfe.u32 	%r88, %r87, 2, 6;
	or.b32  	%r89, %r88, 64;
	or.b32  	%r90, %r88, 128;
	or.b32  	%r91, %r88, 192;
	shl.b32 	%r92, %r87, 2;
	and.b32  	%r93, %r92, 12;
	and.b32  	%r94, %r92, 252;
	and.b32  	%r95, %r87, 255;
	.loc	1 23 23                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:23:23
	or.b32  	%r96, %r86, %r88;
	or.b32  	%r97, %r86, %r89;
	or.b32  	%r98, %r86, %r90;
	or.b32  	%r99, %r86, %r91;
	or.b32  	%r100, %r86, %r94;
	or.b32  	%r101, %r86, %r95;
	.loc	1 25 28                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:25:33
	shl.b32 	%r102, %r2, 4;
	.loc	1 26 44                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:26:44
	bfe.u32 	%r103, %r87, 6, 2;
	.loc	1 26 23                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:26:23
	or.b32  	%r104, %r102, %r93;
	or.b32  	%r105, %r102, %r103;
	or.b32  	%r106, %r105, 4;
	or.b32  	%r107, %r105, 8;
	or.b32  	%r108, %r105, 12;
	.loc	1 27 21                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:27:21
	setp.lt.s32 	%p1, %r104, 16;
	setp.lt.s32 	%p5, %r105, 16;
	setp.lt.s32 	%p6, %r106, 16;
	setp.lt.s32 	%p7, %r107, 16;
	setp.lt.s32 	%p8, %r108, 16;
	.loc	1 30 19                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:30:19
	bfe.s32 	%r109, %r1, 23, 1;
	shr.u32 	%r110, %r109, 23;
	add.s32 	%r111, %r101, %r110;
	and.b32  	%r112, %r111, -512;
	sub.s32 	%r113, %r101, %r112;
	.loc	1 31 38                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:31:38
	shl.b32 	%r114, %r96, 4;
	shl.b32 	%r115, %r97, 4;
	shl.b32 	%r116, %r98, 4;
	shl.b32 	%r117, %r99, 4;
	.loc	1 31 35                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:31:35
	add.s32 	%r118, %r104, %r114;
	add.s32 	%r119, %r104, %r115;
	add.s32 	%r120, %r104, %r116;
	add.s32 	%r121, %r104, %r117;
	.loc	1 31 30                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:31:30
	mul.wide.s32 	%rd18, %r118, 4;
	add.s64 	%rd1, %rd14, %rd18;
	mul.wide.s32 	%rd19, %r119, 4;
	add.s64 	%rd2, %rd14, %rd19;
	mul.wide.s32 	%rd20, %r120, 4;
	add.s64 	%rd3, %rd14, %rd20;
	mul.wide.s32 	%rd21, %r121, 4;
	add.s64 	%rd4, %rd14, %rd21;
	.loc	1 31 43                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:31:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	mov.b32 	%f3, %r5;
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	mov.b32 	%f6, %r8;
	mov.b32 	%f7, %r9;
	mov.b32 	%f8, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	mov.b32 	%f10, %r12;
	mov.b32 	%f11, %r13;
	mov.b32 	%f12, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	mov.b32 	%f14, %r16;
	mov.b32 	%f15, %r17;
	mov.b32 	%f16, %r18;
	.loc	1 32 40                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:40
	shl.b32 	%r122, %r105, 11;
	shl.b32 	%r123, %r106, 11;
	shl.b32 	%r124, %r107, 11;
	shl.b32 	%r125, %r108, 11;
	.loc	1 32 35                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:35
	add.s32 	%r126, %r122, %r100;
	add.s32 	%r127, %r100, %r123;
	add.s32 	%r128, %r100, %r124;
	add.s32 	%r129, %r100, %r125;
	.loc	1 32 30                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:30
	mul.wide.s32 	%rd22, %r126, 4;
	add.s64 	%rd5, %rd15, %rd22;
	mul.wide.s32 	%rd23, %r127, 4;
	add.s64 	%rd6, %rd15, %rd23;
	mul.wide.s32 	%rd24, %r128, 4;
	add.s64 	%rd7, %rd15, %rd24;
	mul.wide.s32 	%rd25, %r129, 4;
	add.s64 	%rd8, %rd15, %rd25;
	.loc	1 32 45                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:32:45
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r52, 0x0;
	mov.u32 %r54, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r58, 0x0;
	@%p7 ld.global.L1::evict_last.v4.b32 { %r52, %r54, %r56, %r58 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r60, 0x0;
	mov.u32 %r62, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r66, 0x0;
	@%p8 ld.global.L1::evict_last.v4.b32 { %r60, %r62, %r64, %r66 }, [ %rd8 + 0 ];
	// end inline asm
	shl.b32 	%r130, %r87, 6;
	and.b32  	%r131, %r130, 4032;
	or.b32  	%r132, %r131, %r103;
	and.b32  	%r133, %r92, 1020;
	shr.u32 	%r134, %r131, 2;
	mov.u32 	%r135, global_smem;
	add.s32 	%r136, %r135, %r134;
	shl.b32 	%r137, %r132, 2;
	add.s32 	%r35, %r136, %r137;
	mov.pred 	%p9, -1;
	// begin inline asm
	@%p9 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	or.b32  	%r138, %r131, 16;
	shr.u32 	%r139, %r138, 2;
	add.s32 	%r140, %r135, %r139;
	add.s32 	%r141, %r140, %r137;
	add.s32 	%r37, %r141, 64;
	// begin inline asm
	@%p9 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	or.b32  	%r142, %r131, 32;
	shr.u32 	%r143, %r142, 2;
	add.s32 	%r144, %r135, %r143;
	add.s32 	%r145, %r144, %r137;
	add.s32 	%r39, %r145, 128;
	// begin inline asm
	@%p9 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r146, %r131, 48;
	shr.u32 	%r147, %r146, 2;
	add.s32 	%r148, %r135, %r147;
	add.s32 	%r149, %r148, %r137;
	add.s32 	%r41, %r149, 192;
	// begin inline asm
	@%p9 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	add.s32 	%r43, %r35, 16;
	// begin inline asm
	@%p9 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	add.s32 	%r45, %r141, 80;
	// begin inline asm
	@%p9 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	add.s32 	%r47, %r145, 144;
	// begin inline asm
	@%p9 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	add.s32 	%r49, %r149, 208;
	// begin inline asm
	@%p9 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	add.s32 	%r51, %r35, 32;
	// begin inline asm
	@%p9 st.shared.b32 [ %r51 + 0 ], %r52;
	// end inline asm
	add.s32 	%r53, %r141, 96;
	// begin inline asm
	@%p9 st.shared.b32 [ %r53 + 0 ], %r54;
	// end inline asm
	add.s32 	%r55, %r145, 160;
	// begin inline asm
	@%p9 st.shared.b32 [ %r55 + 0 ], %r56;
	// end inline asm
	add.s32 	%r57, %r149, 224;
	// begin inline asm
	@%p9 st.shared.b32 [ %r57 + 0 ], %r58;
	// end inline asm
	add.s32 	%r59, %r35, 48;
	// begin inline asm
	@%p9 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	add.s32 	%r61, %r141, 112;
	// begin inline asm
	@%p9 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	add.s32 	%r63, %r145, 176;
	// begin inline asm
	@%p9 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	add.s32 	%r65, %r149, 240;
	// begin inline asm
	@%p9 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r150, %r87, 252;
	add.s32 	%r151, %r135, %r150;
	shl.b32 	%r152, %r133, 2;
	add.s32 	%r153, %r151, %r152;
	ld.shared.f32 	%f17, [%r153];
	ld.shared.f32 	%f18, [%r153+4];
	ld.shared.f32 	%f19, [%r153+8];
	ld.shared.f32 	%f20, [%r153+12];
	or.b32  	%r154, %r133, 1024;
	shr.u32 	%r155, %r154, 2;
	and.b32  	%r156, %r155, 508;
	add.s32 	%r157, %r135, %r156;
	add.s32 	%r158, %r157, %r152;
	ld.shared.f32 	%f21, [%r158+4096];
	ld.shared.f32 	%f22, [%r158+4100];
	ld.shared.f32 	%f23, [%r158+4104];
	ld.shared.f32 	%f24, [%r158+4108];
	or.b32  	%r159, %r133, 2048;
	shr.u32 	%r160, %r159, 2;
	and.b32  	%r161, %r160, 764;
	add.s32 	%r162, %r135, %r161;
	add.s32 	%r163, %r162, %r152;
	ld.shared.f32 	%f25, [%r163+8192];
	ld.shared.f32 	%f26, [%r163+8196];
	ld.shared.f32 	%f27, [%r163+8200];
	ld.shared.f32 	%f28, [%r163+8204];
	or.b32  	%r164, %r133, 3072;
	shr.u32 	%r165, %r164, 2;
	and.b32  	%r166, %r165, 1020;
	add.s32 	%r167, %r135, %r166;
	add.s32 	%r168, %r167, %r152;
	ld.shared.f32 	%f29, [%r168+12288];
	ld.shared.f32 	%f30, [%r168+12292];
	ld.shared.f32 	%f31, [%r168+12296];
	ld.shared.f32 	%f32, [%r168+12300];
	.loc	1 33 30                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:33:30
	mul.wide.s32 	%rd26, %r113, 4;
	add.s64 	%rd9, %rd16, %rd26;
	.loc	1 33 35                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:33:35
	// begin inline asm
	mov.u32 %r69, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r69 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 35 18                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:35:18
	bar.sync 	0;
	shl.b32 	%r169, %r95, 3;
	add.s32 	%r68, %r135, %r169;
	// begin inline asm
	@%p9 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r170, %r88, 3;
	add.s32 	%r171, %r135, %r170;
	ld.shared.f32 	%f33, [%r171];
	shl.b32 	%r172, %r89, 3;
	add.s32 	%r173, %r135, %r172;
	ld.shared.f32 	%f34, [%r173];
	shl.b32 	%r174, %r90, 3;
	add.s32 	%r175, %r135, %r174;
	ld.shared.f32 	%f35, [%r175];
	shl.b32 	%r176, %r91, 3;
	add.s32 	%r177, %r135, %r176;
	ld.shared.f32 	%f36, [%r177];
	.loc	1 34 18                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:34:18
	add.f32 	%f37, %f17, %f33;
	add.f32 	%f38, %f18, %f33;
	add.f32 	%f39, %f19, %f33;
	add.f32 	%f40, %f20, %f33;
	add.f32 	%f41, %f21, %f34;
	add.f32 	%f42, %f22, %f34;
	add.f32 	%f43, %f23, %f34;
	add.f32 	%f44, %f24, %f34;
	add.f32 	%f45, %f25, %f35;
	add.f32 	%f46, %f26, %f35;
	add.f32 	%f47, %f27, %f35;
	add.f32 	%f48, %f28, %f35;
	add.f32 	%f49, %f29, %f36;
	add.f32 	%f50, %f30, %f36;
	add.f32 	%f51, %f31, %f36;
	add.f32 	%f52, %f32, %f36;
	.loc	1 35 18                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:35:18
	add.f32 	%f53, %f37, %f1;
	add.f32 	%f54, %f38, %f2;
	add.f32 	%f55, %f39, %f3;
	add.f32 	%f56, %f40, %f4;
	add.f32 	%f57, %f41, %f5;
	add.f32 	%f58, %f42, %f6;
	add.f32 	%f59, %f43, %f7;
	add.f32 	%f60, %f44, %f8;
	add.f32 	%f61, %f45, %f9;
	add.f32 	%f62, %f46, %f10;
	add.f32 	%f63, %f47, %f11;
	add.f32 	%f64, %f48, %f12;
	add.f32 	%f65, %f49, %f13;
	add.f32 	%f66, %f50, %f14;
	add.f32 	%f67, %f51, %f15;
	add.f32 	%f68, %f52, %f16;
	.loc	1 36 25                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:36:25
	add.s64 	%rd10, %rd17, %rd18;
	add.s64 	%rd11, %rd17, %rd19;
	add.s64 	%rd12, %rd17, %rd20;
	add.s64 	%rd13, %rd17, %rd21;
	.loc	1 36 44                         // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:36:44
	mov.b32 	%r70, %f53;
	mov.b32 	%r71, %f54;
	mov.b32 	%r72, %f55;
	mov.b32 	%r73, %f56;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r70, %r71, %r72, %r73 };
	// end inline asm
	mov.b32 	%r74, %f57;
	mov.b32 	%r75, %f58;
	mov.b32 	%r76, %f59;
	mov.b32 	%r77, %f60;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r74, %r75, %r76, %r77 };
	// end inline asm
	mov.b32 	%r78, %f61;
	mov.b32 	%r79, %f62;
	mov.b32 	%r80, %f63;
	mov.b32 	%r81, %f64;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
	mov.b32 	%r82, %f65;
	mov.b32 	%r83, %f66;
	mov.b32 	%r84, %f67;
	mov.b32 	%r85, %f68;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd13 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
	.loc	1 36 4                          // cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py:36:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mb/cmbqsxtocpa5jk2mgqfw3y2rmgqpsdgbesqoiacswh7l625pkfv5.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 98
.b8 113
.b8 115
.b8 120
.b8 116
.b8 111
.b8 99
.b8 112
.b8 97
.b8 53
.b8 106
.b8 107
.b8 50
.b8 109
.b8 103
.b8 113
.b8 102
.b8 119
.b8 51
.b8 121
.b8 50
.b8 114
.b8 109
.b8 103
.b8 113
.b8 112
.b8 115
.b8 100
.b8 103
.b8 98
.b8 101
.b8 115
.b8 113
.b8 111
.b8 105
.b8 97
.b8 99
.b8 115
.b8 119
.b8 104
.b8 55
.b8 108
.b8 54
.b8 50
.b8 53
.b8 112
.b8 107
.b8 102
.b8 118
.b8 53
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 98
.b8 0
	}
	.section	.debug_macinfo	{	}
