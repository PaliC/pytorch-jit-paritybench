//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_cat_3 // -- Begin function triton_poi_fused_add_cat_3
                                        // @triton_poi_fused_add_cat_3
.visible .entry triton_poi_fused_add_cat_3(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_3_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_3_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_3_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_3_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_3_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_3_param_5,
	.param .u32 triton_poi_fused_add_cat_3_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<35>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_add_cat_3_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_add_cat_3_param_1];
$L__tmp0:
	.loc	1 21 28                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:21:33
	shl.b32 	%r11, %r1, 7;
	ld.param.u64 	%rd9, [triton_poi_fused_add_cat_3_param_2];
	ld.param.u64 	%rd1, [triton_poi_fused_add_cat_3_param_3];
	.loc	1 22 36                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:22:36
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 127;
	ld.param.u64 	%rd10, [triton_poi_fused_add_cat_3_param_4];
	.loc	1 22 23                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:22:23
	or.b32  	%r14, %r11, %r13;
	ld.param.u64 	%rd11, [triton_poi_fused_add_cat_3_param_5];
	.loc	1 23 21                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:23:21
	setp.lt.s32 	%p2, %r14, 256;
	.loc	1 24 21                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:24:21
	shr.s32 	%r16, %r14, 31;
	shr.u32 	%r17, %r16, 28;
	add.s32 	%r18, %r14, %r17;
	shr.s32 	%r19, %r18, 4;
	.loc	1 24 27                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:24:27
	shr.u32 	%r20, %r19, 30;
	add.s32 	%r21, %r19, %r20;
	and.b32  	%r22, %r21, -4;
	sub.s32 	%r23, %r19, %r22;
	.loc	1 25 19                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:25:19
	and.b32  	%r24, %r18, -16;
	sub.s32 	%r25, %r14, %r24;
	.loc	1 26 19                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:26:19
	shr.u32 	%r26, %r16, 26;
	add.s32 	%r27, %r14, %r26;
	shr.s32 	%r28, %r27, 6;
	mov.pred 	%p1, -1;
	.loc	1 28 20                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:28:20
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 30 31                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:30:31
	mul.wide.s32 	%rd12, %r14, 4;
	add.s64 	%rd2, %rd10, %rd12;
	.loc	1 30 36                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:30:36
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p2 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 35 18                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:35:18
	setp.lt.s32 	%p10, %r23, 2;
	.loc	1 36 35                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:36:35
	and.b32  	%r29, %r27, -64;
	sub.s32 	%r30, %r14, %r29;
	.loc	1 36 48                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:36:48
	shl.b32 	%r31, %r28, 5;
	.loc	1 36 45                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:36:45
	add.s32 	%r32, %r31, %r30;
	.loc	1 36 30                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:36:30
	mul.wide.s32 	%rd13, %r32, 4;
	add.s64 	%rd3, %rd7, %rd13;
	.loc	1 36 60                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:36:60
	and.pred  	%p3, %p2, %p10;
	mov.b32 	%r5, 0;
	.loc	1 36 53                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:36:53
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p3 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	@!%p3 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f3, %r4;
	.loc	1 40 18                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:40:18
	setp.eq.s32 	%p11, %r23, 2;
	.loc	1 41 39                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:41:39
	shl.b32 	%r33, %r28, 4;
	.loc	1 41 36                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:41:36
	add.s32 	%r34, %r33, %r25;
	.loc	1 41 31                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:41:31
	mul.wide.s32 	%rd14, %r34, 4;
	add.s64 	%rd4, %rd8, %rd14;
	.loc	1 41 51                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:41:51
	and.pred  	%p5, %p2, %p11;
	.loc	1 41 44                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:41:44
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	@!%p5 mov.u32 %r6, %r5;
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 42 20                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:42:20
	setp.gt.s32 	%p12, %r23, 2;
	.loc	1 45 31                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:45:31
	add.s64 	%rd5, %rd9, %rd14;
	.loc	1 45 52                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:45:52
	and.pred  	%p7, %p2, %p12;
	.loc	1 45 44                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:45:44
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	@!%p7 mov.u32 %r8, %r5;
	// end inline asm
	mov.b32 	%f5, %r8;
	.loc	1 46 20                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:46:20
	add.f32 	%f6, %f1, %f5;
	.loc	1 48 35                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:48:35
	selp.f32 	%f7, %f6, 0f00000000, %p12;
	.loc	1 49 34                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:49:34
	selp.f32 	%f8, %f4, %f7, %p11;
	.loc	1 50 33                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:50:33
	selp.f32 	%f9, %f3, %f8, %p10;
	.loc	1 51 20                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:51:20
	add.f32 	%f10, %f9, %f2;
	.loc	1 52 25                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:52:25
	add.s64 	%rd6, %rd11, %rd12;
	.loc	1 52 37                         // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:52:37
	mov.b32 	%r10, %f10;
	// begin inline asm
	@%p2 st.global.b32 [ %rd6 + 0 ], { %r10 };
	// end inline asm
	.loc	1 52 4                          // cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py:52:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/gi/cgikfljcdf53456emik6mkdj2i3vcdz5if27xlenfez7fbn44uvf.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 105
.b8 107
.b8 102
.b8 108
.b8 106
.b8 99
.b8 100
.b8 102
.b8 53
.b8 51
.b8 52
.b8 53
.b8 54
.b8 101
.b8 109
.b8 105
.b8 107
.b8 54
.b8 109
.b8 107
.b8 100
.b8 106
.b8 50
.b8 105
.b8 51
.b8 118
.b8 99
.b8 100
.b8 122
.b8 53
.b8 105
.b8 102
.b8 50
.b8 55
.b8 120
.b8 108
.b8 101
.b8 110
.b8 102
.b8 101
.b8 122
.b8 55
.b8 102
.b8 98
.b8 110
.b8 52
.b8 52
.b8 117
.b8 118
.b8 102
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
