//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__unsafe_index_convolution_native_group_norm_35 // -- Begin function triton_red_fused__unsafe_index_convolution_native_group_norm_35
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__unsafe_index_convolution_native_group_norm_35
.visible .entry triton_red_fused__unsafe_index_convolution_native_group_norm_35(
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_6,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_7,
	.param .u32 triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<50>;
	.reg .b32 	%r<130>;
	.reg .f32 	%f<139>;
	.reg .b64 	%rd<118>;
	.loc	1 19 0                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_6];
	ld.param.u64 	%rd10, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_5];
	ld.param.u64 	%rd9, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_4];
	ld.param.u64 	%rd8, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_1];
	ld.param.u64 	%rd7, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_0];
$L__tmp0:
	.loc	1 22 28                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:22:28
	// begin inline asm
	mov.u32 %r12, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:22:33
	shl.b32 	%r14, %r12, 6;
	ld.param.u64 	%rd14, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_2];
	.loc	1 23 44                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd15, [triton_red_fused__unsafe_index_convolution_native_group_norm_35_param_3];
	and.b32  	%r2, %r1, 63;
	and.b32  	%r15, %r1, 64;
	bfe.u32 	%r16, %r1, 1, 6;
	.loc	1 23 23                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:23:23
	or.b32  	%r3, %r14, %r2;
	or.b32  	%r4, %r14, %r16;
	.loc	1 24 21                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:24:21
	setp.lt.s32 	%p2, %r3, 512;
	.loc	1 25 33                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:25:33
	bfe.u32 	%r5, %r1, 6, 1;
	shl.b32 	%r17, %r1, 2;
	and.b32  	%r18, %r17, 4;
	.loc	1 27 19                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:27:19
	shr.s32 	%r20, %r3, 31;
	shr.u32 	%r21, %r20, 30;
	add.s32 	%r22, %r3, %r21;
	shr.s32 	%r23, %r22, 2;
	.loc	1 26 19                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:26:19
	and.b32  	%r24, %r22, 268435452;
	sub.s32 	%r25, %r3, %r24;
	.loc	1 28 26                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:28:26
	shr.s32 	%r26, %r22, 31;
	shr.u32 	%r27, %r26, 27;
	add.s32 	%r28, %r23, %r27;
	and.b32  	%r29, %r28, -32;
	sub.s32 	%r30, %r23, %r29;
	.loc	1 29 31                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:29:31
	mul.wide.s32 	%rd16, %r30, 4;
	add.s64 	%rd12, %rd14, %rd16;
	.loc	1 29 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:29:36
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r13 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r13;
	.loc	1 41 42                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:42
	shl.b32 	%r6, %r25, 4;
	.loc	1 54 71                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:71
	shl.b32 	%r31, %r23, 15;
	.loc	1 54 65                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:65
	cvt.s64.s32 	%rd1, %r31;
	shl.b32 	%r32, %r1, 3;
	and.b32  	%r33, %r32, 504;
	or.b32  	%r34, %r33, %r5;
	and.b32  	%r35, %r17, 252;
	shl.b32 	%r36, %r15, 2;
	or.b32  	%r37, %r35, %r36;
	shl.b32 	%r38, %r33, 1;
	mov.u32 	%r39, global_smem;
	add.s32 	%r40, %r39, %r38;
	shl.b32 	%r41, %r34, 2;
	add.s32 	%r71, %r40, %r41;
	add.s32 	%r73, %r71, 8;
	add.s32 	%r75, %r71, 16;
	add.s32 	%r77, %r71, 24;
	shl.b32 	%r42, %r37, 1;
	and.b32  	%r43, %r42, 1008;
	add.s32 	%r44, %r39, %r43;
	shl.b32 	%r45, %r37, 2;
	add.s32 	%r11, %r44, %r45;
	.loc	1 34 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:34:36
	shl.b32 	%r46, %r12, 22;
	shl.b32 	%r47, %r16, 16;
	or.b32  	%r48, %r46, %r47;
	or.b32  	%r49, %r48, %r18;
	mul.wide.s32 	%rd17, %r49, 4;
	add.s64 	%rd116, %rd15, %rd17;
	mov.f32 	%f54, 0f00000000;
	mov.u64 	%rd117, 0;
	mov.pred 	%p30, -1;
	shl.b64 	%rd83, %rd1, 2;
	mov.f32 	%f56, 0f3F800000;
	mov.f32 	%f115, %f54;
	mov.f32 	%f116, %f54;
	mov.f32 	%f117, %f54;
	mov.f32 	%f118, %f54;
	mov.f32 	%f119, %f54;
	mov.f32 	%f120, %f54;
	mov.f32 	%f121, %f54;
	mov.f32 	%f122, %f54;
	mov.f32 	%f123, %f54;
	mov.f32 	%f124, %f54;
	mov.f32 	%f125, %f54;
	mov.f32 	%f126, %f54;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 24 21                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:24:21
	setp.lt.s32 	%p27, %r4, 512;
	.loc	1 60 54                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:60:54
	selp.f32 	%f123, %f131, %f123, %p2;
	selp.f32 	%f124, %f132, %f124, %p2;
	selp.f32 	%f125, %f133, %f125, %p2;
	selp.f32 	%f126, %f134, %f126, %p2;
	.loc	1 61 50                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:61:50
	selp.f32 	%f119, %f127, %f119, %p2;
	selp.f32 	%f120, %f128, %f120, %p2;
	selp.f32 	%f121, %f129, %f121, %p2;
	selp.f32 	%f122, %f130, %f122, %p2;
	.loc	1 62 58                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:62:58
	selp.f32 	%f115, %f135, %f115, %p2;
	selp.f32 	%f116, %f136, %f116, %p2;
	selp.f32 	%f117, %f137, %f117, %p2;
	selp.f32 	%f118, %f138, %f118, %p2;
	.loc	1 63 52                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:63:52
	bar.sync 	0;
	mov.b32 	%r72, %f14;
	// begin inline asm
	@%p30 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	mov.b32 	%r74, %f15;
	// begin inline asm
	@%p30 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	mov.b32 	%r76, %f16;
	// begin inline asm
	@%p30 st.shared.b32 [ %r75 + 0 ], %r76;
	// end inline asm
	mov.b32 	%r78, %f17;
	// begin inline asm
	@%p30 st.shared.b32 [ %r77 + 0 ], %r78;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r79, %r80, %r81, %r82}, [%r11];
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd116 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	.loc	1 34 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:34:36
	add.s64 	%rd5, %rd117, 8;
	add.s64 	%rd116, %rd116, 32;
	setp.lt.u64 	%p29, %rd117, 65528;
	mov.u64 	%rd117, %rd5;
	@%p29 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:0:36
	cvt.u32.u64 	%r54, %rd117;
	.loc	1 37 23                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:37:23
	shr.u32 	%r55, %r54, 12;
	.loc	1 39 23                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:39:23
	and.b32  	%r56, %r54, 56;
	or.b32  	%r57, %r56, %r5;
	.loc	1 41 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:39
	add.s32 	%r58, %r55, %r6;
	.loc	1 41 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:34
	mul.wide.s32 	%rd46, %r58, 8;
	add.s64 	%rd19, %rd7, %rd46;
	.loc	1 41 47                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:41:47
	// begin inline asm
	mov.u64 %rd18, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd18 }, [ %rd19 + 0 ];
	@!%p2 mov.u64 %rd18, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd20, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd20 }, [ %rd19 + 0 ];
	@!%p2 mov.u64 %rd20, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd22, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd22 }, [ %rd19 + 0 ];
	@!%p2 mov.u64 %rd22, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd24, 0x0;
	@%p2 ld.global.L1::evict_last.b64 { %rd24 }, [ %rd19 + 0 ];
	@!%p2 mov.u64 %rd24, 0x0;
	// end inline asm
	.loc	1 42 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:42:34
	shr.u64 	%rd47, %rd117, 3;
	and.b64  	%rd48, %rd47, 504;
	add.s64 	%rd27, %rd7, %rd48;
	.loc	1 42 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:42:39
	// begin inline asm
	mov.u64 %rd26, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd26 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd28, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd28 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd30, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd30 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd32, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd32 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 43 34                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:43:34
	mul.wide.u32 	%rd49, %r57, 8;
	add.s64 	%rd35, %rd7, %rd49;
	add.s64 	%rd37, %rd35, 16;
	add.s64 	%rd39, %rd35, 32;
	add.s64 	%rd41, %rd35, 48;
	.loc	1 43 39                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:43:39
	// begin inline asm
	mov.u64 %rd34, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd34 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd36, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd36 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd38, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd38 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd40, 0x0;
	@%p30 ld.global.L1::evict_last.b64 { %rd40 }, [ %rd41 + 0 ];
	// end inline asm
	.loc	1 47 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:47:36
	shr.u64 	%rd50, %rd18, 58;
	and.b64  	%rd51, %rd50, 32;
	add.s64 	%rd52, %rd51, %rd18;
	shr.u64 	%rd53, %rd20, 58;
	and.b64  	%rd54, %rd53, 32;
	add.s64 	%rd55, %rd54, %rd20;
	shr.u64 	%rd56, %rd22, 58;
	and.b64  	%rd57, %rd56, 32;
	add.s64 	%rd58, %rd57, %rd22;
	shr.u64 	%rd59, %rd24, 58;
	and.b64  	%rd60, %rd59, 32;
	add.s64 	%rd61, %rd60, %rd24;
	.loc	1 50 36                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:50:36
	shr.u64 	%rd62, %rd26, 58;
	and.b64  	%rd63, %rd62, 32;
	add.s64 	%rd64, %rd63, %rd26;
	shr.u64 	%rd65, %rd28, 58;
	and.b64  	%rd66, %rd65, 32;
	add.s64 	%rd67, %rd66, %rd28;
	shr.u64 	%rd68, %rd30, 58;
	and.b64  	%rd69, %rd68, 32;
	add.s64 	%rd70, %rd69, %rd30;
	shr.u64 	%rd71, %rd32, 58;
	and.b64  	%rd72, %rd71, 32;
	add.s64 	%rd73, %rd72, %rd32;
	.loc	1 54 35                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:35
	shl.b64 	%rd74, %rd34, 2;
	add.s64 	%rd75, %rd8, %rd74;
	shr.u64 	%rd76, %rd34, 56;
	and.b64  	%rd77, %rd76, 128;
	add.s64 	%rd78, %rd75, %rd77;
	shl.b64 	%rd79, %rd64, 7;
	add.s64 	%rd80, %rd78, %rd79;
	shl.b64 	%rd81, %rd52, 12;
	add.s64 	%rd82, %rd80, %rd81;
	add.s64 	%rd42, %rd82, %rd83;
	shl.b64 	%rd84, %rd36, 2;
	add.s64 	%rd85, %rd8, %rd84;
	shr.u64 	%rd86, %rd36, 56;
	and.b64  	%rd87, %rd86, 128;
	add.s64 	%rd88, %rd85, %rd87;
	shl.b64 	%rd89, %rd67, 7;
	add.s64 	%rd90, %rd88, %rd89;
	shl.b64 	%rd91, %rd55, 12;
	add.s64 	%rd92, %rd90, %rd91;
	add.s64 	%rd43, %rd92, %rd83;
	shl.b64 	%rd93, %rd38, 2;
	add.s64 	%rd94, %rd8, %rd93;
	shr.u64 	%rd95, %rd38, 56;
	and.b64  	%rd96, %rd95, 128;
	add.s64 	%rd97, %rd94, %rd96;
	shl.b64 	%rd98, %rd70, 7;
	add.s64 	%rd99, %rd97, %rd98;
	shl.b64 	%rd100, %rd58, 12;
	add.s64 	%rd101, %rd99, %rd100;
	add.s64 	%rd44, %rd101, %rd83;
	shl.b64 	%rd102, %rd40, 2;
	add.s64 	%rd103, %rd8, %rd102;
	shr.u64 	%rd104, %rd40, 56;
	and.b64  	%rd105, %rd104, 128;
	add.s64 	%rd106, %rd103, %rd105;
	shl.b64 	%rd107, %rd73, 7;
	add.s64 	%rd108, %rd106, %rd107;
	shl.b64 	%rd109, %rd61, 12;
	add.s64 	%rd110, %rd108, %rd109;
	add.s64 	%rd45, %rd110, %rd83;
	.loc	1 54 76                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:54:76
	// begin inline asm
	mov.u32 %r50, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r50 }, [ %rd42 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r50;
	// begin inline asm
	mov.u32 %r51, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r51 }, [ %rd43 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r51;
	// begin inline asm
	mov.u32 %r52, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r52 }, [ %rd44 + 0 ];
	// end inline asm
	mov.b32 	%f59, %r52;
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r53 }, [ %rd45 + 0 ];
	// end inline asm
	mov.b32 	%f60, %r53;
	.loc	1 55 24                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:55:24
	add.f32 	%f14, %f1, %f57;
	add.f32 	%f15, %f1, %f58;
	add.f32 	%f16, %f1, %f59;
	add.f32 	%f17, %f1, %f60;
	.loc	1 58 66                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:58:66
	setp.eq.s64 	%p22, %rd117, 0;
	mov.f32 	%f127, %f54;
	mov.f32 	%f128, %f54;
	mov.f32 	%f129, %f54;
	mov.f32 	%f130, %f54;
	mov.f32 	%f131, %f14;
	mov.f32 	%f132, %f15;
	mov.f32 	%f133, %f16;
	mov.f32 	%f134, %f17;
	mov.f32 	%f135, %f56;
	mov.f32 	%f136, %f56;
	mov.f32 	%f137, %f56;
	mov.f32 	%f138, %f56;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p22 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f61, %f14, %f123;
	sub.f32 	%f62, %f15, %f124;
	sub.f32 	%f63, %f16, %f125;
	sub.f32 	%f64, %f17, %f126;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f135, %f115, 0f3F800000;
	add.f32 	%f136, %f116, 0f3F800000;
	add.f32 	%f137, %f117, 0f3F800000;
	add.f32 	%f138, %f118, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r60, %f61;
	mov.b32 	%r61, %f135;
	// begin inline asm
	div.full.f32 %r59, %r60, %r61;
	// end inline asm
	mov.b32 	%f65, %r59;
	mov.b32 	%r63, %f62;
	mov.b32 	%r64, %f136;
	// begin inline asm
	div.full.f32 %r62, %r63, %r64;
	// end inline asm
	mov.b32 	%f66, %r62;
	mov.b32 	%r66, %f63;
	mov.b32 	%r67, %f137;
	// begin inline asm
	div.full.f32 %r65, %r66, %r67;
	// end inline asm
	mov.b32 	%f67, %r65;
	mov.b32 	%r69, %f64;
	mov.b32 	%r70, %f138;
	// begin inline asm
	div.full.f32 %r68, %r69, %r70;
	// end inline asm
	mov.b32 	%f68, %r68;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f131, %f123, %f65;
	add.f32 	%f132, %f124, %f66;
	add.f32 	%f133, %f125, %f67;
	add.f32 	%f134, %f126, %f68;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f69, %f14, %f131;
	sub.f32 	%f70, %f15, %f132;
	sub.f32 	%f71, %f16, %f133;
	sub.f32 	%f72, %f17, %f134;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f127, %f61, %f69, %f119;
	fma.rn.f32 	%f128, %f62, %f70, %f120;
	fma.rn.f32 	%f129, %f63, %f71, %f121;
	fma.rn.f32 	%f130, %f64, %f72, %f122;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:
	.loc	2 204 46                        // triton_helpers.py:204:46
	bar.sync 	0;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f73, %f124, %f123;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f74, %f115, %f116;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p43, %f74, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r85, %f74;
	mov.b32 	%r84, %f116;
	// begin inline asm
	div.full.f32 %r83, %r84, %r85;
	// end inline asm
	mov.b32 	%f75, %r83;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f76, 0f00000000, %f75, %p43;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f77, %f73, %f76, %f123;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f78, %f119, %f120;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f79, %f73, %f73;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f80, %f79, %f115;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f81, %f80, %f76, %f78;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f82, %f125, %f77;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f83, %f117, %f74;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p44, %f83, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r88, %f83;
	mov.b32 	%r87, %f117;
	// begin inline asm
	div.full.f32 %r86, %r87, %r88;
	// end inline asm
	mov.b32 	%f84, %r86;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f85, 0f00000000, %f84, %p44;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f86, %f85, %f82, %f77;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f87, %f121, %f81;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f88, %f82, %f82;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f89, %f74, %f88;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f90, %f85, %f89, %f87;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f91, %f126, %f86;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f92, %f118, %f83;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p45, %f92, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r91, %f92;
	mov.b32 	%r90, %f118;
	// begin inline asm
	div.full.f32 %r89, %r90, %r91;
	// end inline asm
	mov.b32 	%f93, %r89;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f94, 0f00000000, %f93, %p45;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f95, %f94, %f91, %f86;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f96, %f122, %f90;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f97, %f91, %f91;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f98, %f83, %f97;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f99, %f94, %f98, %f96;
	.loc	2 204 46                        // triton_helpers.py:204:46
	shl.b32 	%r117, %r5, 2;
	shl.b32 	%r118, %r2, 3;
	or.b32  	%r119, %r118, %r117;
	add.s32 	%r92, %r39, %r119;
	mov.b32 	%r93, %f95;
	// begin inline asm
	@%p30 st.shared.b32 [ %r92 + 0 ], %r93;
	// end inline asm
	add.s32 	%r121, %r39, 512;
	add.s32 	%r94, %r121, %r119;
	mov.b32 	%r95, %f99;
	// begin inline asm
	@%p30 st.shared.b32 [ %r94 + 0 ], %r95;
	// end inline asm
	add.s32 	%r122, %r39, 1024;
	add.s32 	%r96, %r122, %r119;
	// begin inline asm
	@%p30 st.shared.b32 [ %r96 + 0 ], %r91;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p33, %r1, 128;
	add.s32 	%r99, %r39, %r17;
	// begin inline asm
	@%p33 ld.shared.b32 %r98, [ %r99 + 0 ];
	// end inline asm
	mov.b32 	%f100, %r98;
	add.s32 	%r101, %r121, %r17;
	// begin inline asm
	@%p33 ld.shared.b32 %r100, [ %r101 + 0 ];
	// end inline asm
	mov.b32 	%f101, %r100;
	add.s32 	%r103, %r122, %r17;
	// begin inline asm
	@%p33 ld.shared.b32 %r102, [ %r103 + 0 ];
	// end inline asm
	mov.b32 	%f102, %r102;
	shfl.sync.bfly.b32	%r124, %r98, 1, 31, -1;
	mov.b32 	%f103, %r124;
	shfl.sync.bfly.b32	%r125, %r100, 1, 31, -1;
	mov.b32 	%f104, %r125;
	shfl.sync.bfly.b32	%r105, %r102, 1, 31, -1;
	mov.b32 	%f105, %r105;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f106, %f103, %f100;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f107, %f102, %f105;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p46, %f107, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r106, %f107;
	// begin inline asm
	div.full.f32 %r104, %r105, %r106;
	// end inline asm
	mov.b32 	%f108, %r104;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f109, 0f00000000, %f108, %p46;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f110, %f106, %f109, %f100;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f111, %f101, %f104;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f112, %f106, %f106;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f113, %f112, %f102;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f114, %f113, %f109, %f111;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r126, %r1, 1;
	setp.eq.b32 	%p47, %r126, 1;
	not.pred 	%p48, %p47;
	and.pred  	%p36, %p33, %p48;
	mov.b32 	%r108, %f110;
	// begin inline asm
	@%p36 st.shared.b32 [ %r99 + 0 ], %r108;
	// end inline asm
	mov.b32 	%r110, %f114;
	// begin inline asm
	@%p36 st.shared.b32 [ %r101 + 0 ], %r110;
	// end inline asm
	// begin inline asm
	@%p36 st.shared.b32 [ %r103 + 0 ], %r106;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r127, %r39, %r118;
	ld.shared.u32 	%r113, [%r127];
	add.s32 	%r128, %r121, %r118;
	ld.shared.u32 	%r114, [%r128];
	add.s32 	%r129, %r122, %r118;
	ld.shared.u32 	%r115, [%r129];
$L__tmp3:
	.loc	1 70 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:70:25
	mul.wide.s32 	%rd115, %r3, 4;
	add.s64 	%rd112, %rd9, %rd115;
	.loc	1 70 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:70:37
	setp.eq.s32 	%p49, %r5, 0;
	and.pred  	%p39, %p49, %p2;
	// begin inline asm
	@%p39 st.global.b32 [ %rd112 + 0 ], { %r113 };
	// end inline asm
	.loc	1 71 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:71:25
	add.s64 	%rd113, %rd10, %rd115;
	.loc	1 71 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:71:37
	// begin inline asm
	@%p39 st.global.b32 [ %rd113 + 0 ], { %r114 };
	// end inline asm
	.loc	1 72 25                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:25
	add.s64 	%rd114, %rd11, %rd115;
	.loc	1 72 37                         // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:37
	// begin inline asm
	@%p39 st.global.b32 [ %rd114 + 0 ], { %r115 };
	// end inline asm
	.loc	1 72 4                          // cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py:72:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/be/cbelpqb2wwwhh4dgyzhxx5epdiqibzv5qxcdkt26kklbj5vnzj7q.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 101
.b8 108
.b8 112
.b8 113
.b8 98
.b8 50
.b8 119
.b8 119
.b8 119
.b8 104
.b8 104
.b8 52
.b8 100
.b8 103
.b8 121
.b8 122
.b8 104
.b8 120
.b8 120
.b8 53
.b8 101
.b8 112
.b8 100
.b8 105
.b8 113
.b8 105
.b8 98
.b8 122
.b8 118
.b8 53
.b8 113
.b8 120
.b8 99
.b8 100
.b8 107
.b8 116
.b8 50
.b8 54
.b8 107
.b8 107
.b8 108
.b8 98
.b8 106
.b8 53
.b8 118
.b8 110
.b8 122
.b8 106
.b8 55
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 117
.b8 110
.b8 115
.b8 97
.b8 102
.b8 101
.b8 95
.b8 105
.b8 110
.b8 100
.b8 101
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
