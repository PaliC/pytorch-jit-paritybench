#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_max_pool2d_with_indices_relu_10(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg8: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<5> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<6> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<7> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<8> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<9.99999974E-6> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<0xFF800000> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_12 = arith.constant dense<4096> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<16> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<256> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<2> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_16 = arith.constant dense<-1> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_17 = arith.constant dense<0> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_18 = arith.constant dense<32> : tensor<512xi64, #blocked> loc(#loc1)
    %cst_19 = arith.constant dense<-8448> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_20 = arith.constant dense<512> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_21 = arith.constant dense<16384> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_22 = arith.constant dense<-8192> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_23 = arith.constant dense<1> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_24 = arith.constant dense<-7936> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_25 = arith.constant dense<-256> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_26 = arith.constant dense<7936> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_27 = arith.constant dense<8192> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_28 = arith.constant dense<8448> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_12 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_13 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_14 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %7, %cst_13 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %4, %cst_14 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc11)
    %12 = tt.load %11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc13)
    %14 = tt.addptr %13, %9 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc13)
    %15 = tt.load %14 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc14)
    %16 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %17 = tt.addptr %16, %9 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc17)
    %20 = tt.addptr %19, %9 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc17)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc18)
    %22 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc19)
    %23 = tt.addptr %22, %9 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc19)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc20)
    %25 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc21)
    %26 = tt.addptr %25, %9 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc21)
    %27 = tt.load %26 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc22)
    %28 = arith.muli %6, %cst_15 : tensor<512xi32, #blocked> loc(#loc23)
    %29 = arith.addi %28, %cst_16 : tensor<512xi32, #blocked> loc(#loc24)
    %30 = arith.extsi %29 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc25)
    %31 = arith.cmpi sge, %30, %cst_17 : tensor<512xi64, #blocked> loc(#loc25)
    %32 = arith.cmpi slt, %30, %cst_18 : tensor<512xi64, #blocked> loc(#loc26)
    %33 = arith.andi %31, %32 : tensor<512xi1, #blocked> loc(#loc27)
    %34 = arith.muli %8, %cst_15 : tensor<512xi32, #blocked> loc(#loc28)
    %35 = arith.addi %34, %cst_16 : tensor<512xi32, #blocked> loc(#loc29)
    %36 = arith.extsi %35 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc30)
    %37 = arith.cmpi sge, %36, %cst_17 : tensor<512xi64, #blocked> loc(#loc30)
    %38 = arith.cmpi slt, %36, %cst_18 : tensor<512xi64, #blocked> loc(#loc31)
    %39 = arith.andi %37, %38 : tensor<512xi1, #blocked> loc(#loc32)
    %40 = arith.andi %33, %39 : tensor<512xi1, #blocked> loc(#loc33)
    %41 = arith.addi %9, %cst_19 : tensor<512xi32, #blocked> loc(#loc34)
    %42 = arith.muli %8, %cst_20 : tensor<512xi32, #blocked> loc(#loc35)
    %43 = arith.addi %41, %42 : tensor<512xi32, #blocked> loc(#loc36)
    %44 = arith.muli %5, %cst_21 : tensor<512xi32, #blocked> loc(#loc37)
    %45 = arith.addi %43, %44 : tensor<512xi32, #blocked> loc(#loc38)
    %46 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc39)
    %47 = tt.addptr %46, %45 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc39)
    %48 = tt.load %47, %40, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc40)
    %49 = arith.extsi %34 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc41)
    %50 = arith.cmpi sge, %49, %cst_17 : tensor<512xi64, #blocked> loc(#loc41)
    %51 = arith.cmpi slt, %49, %cst_18 : tensor<512xi64, #blocked> loc(#loc42)
    %52 = arith.andi %50, %51 : tensor<512xi1, #blocked> loc(#loc43)
    %53 = arith.andi %33, %52 : tensor<512xi1, #blocked> loc(#loc44)
    %54 = arith.addi %9, %cst_22 : tensor<512xi32, #blocked> loc(#loc45)
    %55 = arith.addi %54, %42 : tensor<512xi32, #blocked> loc(#loc46)
    %56 = arith.addi %55, %44 : tensor<512xi32, #blocked> loc(#loc47)
    %57 = tt.addptr %46, %56 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc48)
    %58 = tt.load %57, %53, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc49)
    %59 = arith.cmpf ogt, %58, %48 : tensor<512xf32, #blocked> loc(#loc138)
    %60 = arith.cmpf une, %58, %58 : tensor<512xf32, #blocked> loc(#loc139)
    %61 = arith.ori %59, %60 : tensor<512xi1, #blocked> loc(#loc140)
    %62 = arith.select %61, %58, %48 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc141)
    %63 = arith.addi %34, %cst_23 : tensor<512xi32, #blocked> loc(#loc55)
    %64 = arith.extsi %63 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc56)
    %65 = arith.cmpi sge, %64, %cst_17 : tensor<512xi64, #blocked> loc(#loc56)
    %66 = arith.cmpi slt, %64, %cst_18 : tensor<512xi64, #blocked> loc(#loc57)
    %67 = arith.andi %65, %66 : tensor<512xi1, #blocked> loc(#loc58)
    %68 = arith.andi %33, %67 : tensor<512xi1, #blocked> loc(#loc59)
    %69 = arith.addi %9, %cst_24 : tensor<512xi32, #blocked> loc(#loc60)
    %70 = arith.addi %69, %42 : tensor<512xi32, #blocked> loc(#loc61)
    %71 = arith.addi %70, %44 : tensor<512xi32, #blocked> loc(#loc62)
    %72 = tt.addptr %46, %71 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc63)
    %73 = tt.load %72, %68, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc64)
    %74 = arith.cmpf ogt, %73, %62 : tensor<512xf32, #blocked> loc(#loc142)
    %75 = arith.cmpf une, %73, %73 : tensor<512xf32, #blocked> loc(#loc143)
    %76 = arith.ori %74, %75 : tensor<512xi1, #blocked> loc(#loc144)
    %77 = arith.select %76, %73, %62 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc145)
    %78 = arith.extsi %28 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc66)
    %79 = arith.cmpi sge, %78, %cst_17 : tensor<512xi64, #blocked> loc(#loc66)
    %80 = arith.cmpi slt, %78, %cst_18 : tensor<512xi64, #blocked> loc(#loc67)
    %81 = arith.andi %79, %80 : tensor<512xi1, #blocked> loc(#loc68)
    %82 = arith.andi %81, %39 : tensor<512xi1, #blocked> loc(#loc69)
    %83 = arith.addi %9, %cst_25 : tensor<512xi32, #blocked> loc(#loc70)
    %84 = arith.addi %83, %42 : tensor<512xi32, #blocked> loc(#loc71)
    %85 = arith.addi %84, %44 : tensor<512xi32, #blocked> loc(#loc72)
    %86 = tt.addptr %46, %85 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc73)
    %87 = tt.load %86, %82, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc74)
    %88 = arith.cmpf ogt, %87, %77 : tensor<512xf32, #blocked> loc(#loc146)
    %89 = arith.cmpf une, %87, %87 : tensor<512xf32, #blocked> loc(#loc147)
    %90 = arith.ori %88, %89 : tensor<512xi1, #blocked> loc(#loc148)
    %91 = arith.select %90, %87, %77 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc149)
    %92 = arith.andi %81, %52 : tensor<512xi1, #blocked> loc(#loc76)
    %93 = arith.addi %9, %42 : tensor<512xi32, #blocked> loc(#loc77)
    %94 = arith.addi %93, %44 : tensor<512xi32, #blocked> loc(#loc78)
    %95 = tt.addptr %46, %94 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc79)
    %96 = tt.load %95, %92, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc80)
    %97 = arith.cmpf ogt, %96, %91 : tensor<512xf32, #blocked> loc(#loc150)
    %98 = arith.cmpf une, %96, %96 : tensor<512xf32, #blocked> loc(#loc151)
    %99 = arith.ori %97, %98 : tensor<512xi1, #blocked> loc(#loc152)
    %100 = arith.select %99, %96, %91 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc153)
    %101 = arith.andi %81, %67 : tensor<512xi1, #blocked> loc(#loc82)
    %102 = arith.addi %9, %cst_14 : tensor<512xi32, #blocked> loc(#loc83)
    %103 = arith.addi %102, %42 : tensor<512xi32, #blocked> loc(#loc84)
    %104 = arith.addi %103, %44 : tensor<512xi32, #blocked> loc(#loc85)
    %105 = tt.addptr %46, %104 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc86)
    %106 = tt.load %105, %101, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc87)
    %107 = arith.cmpf ogt, %106, %100 : tensor<512xf32, #blocked> loc(#loc154)
    %108 = arith.cmpf une, %106, %106 : tensor<512xf32, #blocked> loc(#loc155)
    %109 = arith.ori %107, %108 : tensor<512xi1, #blocked> loc(#loc156)
    %110 = arith.select %109, %106, %100 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc157)
    %111 = arith.addi %28, %cst_23 : tensor<512xi32, #blocked> loc(#loc89)
    %112 = arith.extsi %111 : tensor<512xi32, #blocked> to tensor<512xi64, #blocked> loc(#loc90)
    %113 = arith.cmpi sge, %112, %cst_17 : tensor<512xi64, #blocked> loc(#loc90)
    %114 = arith.cmpi slt, %112, %cst_18 : tensor<512xi64, #blocked> loc(#loc91)
    %115 = arith.andi %113, %114 : tensor<512xi1, #blocked> loc(#loc92)
    %116 = arith.andi %115, %39 : tensor<512xi1, #blocked> loc(#loc93)
    %117 = arith.addi %9, %cst_26 : tensor<512xi32, #blocked> loc(#loc94)
    %118 = arith.addi %117, %42 : tensor<512xi32, #blocked> loc(#loc95)
    %119 = arith.addi %118, %44 : tensor<512xi32, #blocked> loc(#loc96)
    %120 = tt.addptr %46, %119 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc97)
    %121 = tt.load %120, %116, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc98)
    %122 = arith.cmpf ogt, %121, %110 : tensor<512xf32, #blocked> loc(#loc158)
    %123 = arith.cmpf une, %121, %121 : tensor<512xf32, #blocked> loc(#loc159)
    %124 = arith.ori %122, %123 : tensor<512xi1, #blocked> loc(#loc160)
    %125 = arith.select %124, %121, %110 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc161)
    %126 = arith.andi %115, %52 : tensor<512xi1, #blocked> loc(#loc100)
    %127 = arith.addi %9, %cst_27 : tensor<512xi32, #blocked> loc(#loc101)
    %128 = arith.addi %127, %42 : tensor<512xi32, #blocked> loc(#loc102)
    %129 = arith.addi %128, %44 : tensor<512xi32, #blocked> loc(#loc103)
    %130 = tt.addptr %46, %129 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc104)
    %131 = tt.load %130, %126, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc105)
    %132 = arith.cmpf ogt, %131, %125 : tensor<512xf32, #blocked> loc(#loc162)
    %133 = arith.cmpf une, %131, %131 : tensor<512xf32, #blocked> loc(#loc163)
    %134 = arith.ori %132, %133 : tensor<512xi1, #blocked> loc(#loc164)
    %135 = arith.select %134, %131, %125 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc165)
    %136 = arith.andi %115, %67 : tensor<512xi1, #blocked> loc(#loc107)
    %137 = arith.addi %9, %cst_28 : tensor<512xi32, #blocked> loc(#loc108)
    %138 = arith.addi %137, %42 : tensor<512xi32, #blocked> loc(#loc109)
    %139 = arith.addi %138, %44 : tensor<512xi32, #blocked> loc(#loc110)
    %140 = tt.addptr %46, %139 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc111)
    %141 = tt.load %140, %136, %cst_11 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc112)
    %142 = arith.cmpf ogt, %141, %135 : tensor<512xf32, #blocked> loc(#loc166)
    %143 = arith.cmpf une, %141, %141 : tensor<512xf32, #blocked> loc(#loc167)
    %144 = arith.ori %142, %143 : tensor<512xi1, #blocked> loc(#loc168)
    %145 = arith.select %144, %141, %135 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc169)
    %146 = arith.select %59, %cst, %cst_0 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc114)
    %147 = arith.select %74, %cst_1, %146 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc115)
    %148 = arith.select %88, %cst_2, %147 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc116)
    %149 = arith.select %97, %cst_3, %148 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc117)
    %150 = arith.select %107, %cst_4, %149 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc118)
    %151 = arith.select %122, %cst_5, %150 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc119)
    %152 = arith.select %132, %cst_6, %151 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc120)
    %153 = arith.select %142, %cst_7, %152 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc121)
    %154 = arith.addf %12, %15 : tensor<512xf32, #blocked> loc(#loc122)
    %155 = arith.subf %154, %18 : tensor<512xf32, #blocked> loc(#loc123)
    %156 = arith.addf %21, %cst_8 : tensor<512xf32, #blocked> loc(#loc124)
    %157 = tt.extern_elementwise %156 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc125)
    %158 = arith.divf %cst_9, %157 : tensor<512xf32, #blocked> loc(#loc126)
    %159 = arith.mulf %155, %158 : tensor<512xf32, #blocked> loc(#loc127)
    %160 = arith.mulf %159, %24 : tensor<512xf32, #blocked> loc(#loc128)
    %161 = arith.addf %160, %27 : tensor<512xf32, #blocked> loc(#loc129)
    %162 = arith.addf %145, %161 : tensor<512xf32, #blocked> loc(#loc130)
    %163 = arith.cmpf ogt, %cst_10, %162 : tensor<512xf32, #blocked> loc(#loc170)
    %164 = arith.select %163, %cst_10, %162 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc171)
    %165 = tt.splat %arg8 : !tt.ptr<i8> -> tensor<512x!tt.ptr<i8>, #blocked> loc(#loc132)
    %166 = tt.addptr %165, %4 : tensor<512x!tt.ptr<i8>, #blocked>, tensor<512xi32, #blocked> loc(#loc132)
    tt.store %166, %153 : tensor<512x!tt.ptr<i8>, #blocked> loc(#loc133)
    tt.store %11, %154 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc134)
    %167 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc135)
    %168 = tt.addptr %167, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc135)
    tt.store %168, %164 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc136)
    tt.return loc(#loc137)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":21:28)
#loc3 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":21:33)
#loc4 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":22:36)
#loc5 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":22:23)
#loc6 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":24:21)
#loc7 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":24:29)
#loc8 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":25:21)
#loc9 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":25:28)
#loc10 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":26:19)
#loc11 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":29:35)
#loc12 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":29:40)
#loc13 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":30:31)
#loc14 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":30:36)
#loc15 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":31:31)
#loc16 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":31:36)
#loc17 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":32:31)
#loc18 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":32:36)
#loc19 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":33:31)
#loc20 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":33:36)
#loc21 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":34:31)
#loc22 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":34:36)
#loc23 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":35:20)
#loc24 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":35:18)
#loc25 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":37:19)
#loc26 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":39:18)
#loc27 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":40:18)
#loc28 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":41:20)
#loc29 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":41:18)
#loc30 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":42:19)
#loc31 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":43:18)
#loc32 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":44:18)
#loc33 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":45:19)
#loc34 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":46:41)
#loc35 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":46:50)
#loc36 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":46:46)
#loc37 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":46:61)
#loc38 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":46:55)
#loc39 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":46:31)
#loc40 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":46:66)
#loc41 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":48:21)
#loc42 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":49:20)
#loc43 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":50:20)
#loc44 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":51:19)
#loc45 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":52:41)
#loc46 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":52:46)
#loc47 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":52:55)
#loc48 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":52:31)
#loc49 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":52:66)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc51 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":53:42)
#loc52 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc54 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc55 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":54:16)
#loc56 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":55:21)
#loc57 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":56:20)
#loc58 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":57:20)
#loc59 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":58:19)
#loc60 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":59:41)
#loc61 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":59:46)
#loc62 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":59:55)
#loc63 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":59:31)
#loc64 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":59:66)
#loc65 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":60:42)
#loc66 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":62:21)
#loc67 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":63:20)
#loc68 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":64:20)
#loc69 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":65:20)
#loc70 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":66:40)
#loc71 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":66:45)
#loc72 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":66:54)
#loc73 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":66:31)
#loc74 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":66:65)
#loc75 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":67:42)
#loc76 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":68:20)
#loc77 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":69:36)
#loc78 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":69:45)
#loc79 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":69:31)
#loc80 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":69:56)
#loc81 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":70:42)
#loc82 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":71:20)
#loc83 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":72:37)
#loc84 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":72:42)
#loc85 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":72:51)
#loc86 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":72:31)
#loc87 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":72:62)
#loc88 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":73:42)
#loc89 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":74:16)
#loc90 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":75:21)
#loc91 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":76:20)
#loc92 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":77:20)
#loc93 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":78:20)
#loc94 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":79:38)
#loc95 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":79:43)
#loc96 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":79:52)
#loc97 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":79:31)
#loc98 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":79:63)
#loc99 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":80:42)
#loc100 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":81:20)
#loc101 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":82:38)
#loc102 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":82:43)
#loc103 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":82:52)
#loc104 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":82:31)
#loc105 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":82:63)
#loc106 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":83:42)
#loc107 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":84:20)
#loc108 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":85:38)
#loc109 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":85:43)
#loc110 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":85:52)
#loc111 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":85:31)
#loc112 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":85:63)
#loc113 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":86:42)
#loc114 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":90:35)
#loc115 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":93:35)
#loc116 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":96:35)
#loc117 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":99:35)
#loc118 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":102:35)
#loc119 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":105:35)
#loc120 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":108:35)
#loc121 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":111:35)
#loc122 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":112:20)
#loc123 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":113:20)
#loc124 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":115:20)
#loc125 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":116:27)
#loc126 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":118:20)
#loc127 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":121:20)
#loc128 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":122:20)
#loc129 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":123:20)
#loc130 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":124:20)
#loc131 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":126:42)
#loc132 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":127:25)
#loc133 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":127:37)
#loc134 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":128:40)
#loc135 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":129:28)
#loc136 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":129:40)
#loc137 = loc("inductor_cache/c6/cc6jfmohvzmvp75pzwq3gnumx3ve6frcqxehktapq7wrezt6halg.py":129:4)
#loc138 = loc(callsite(#loc50 at #loc51))
#loc139 = loc(callsite(#loc52 at #loc51))
#loc140 = loc(callsite(#loc53 at #loc51))
#loc141 = loc(callsite(#loc54 at #loc51))
#loc142 = loc(callsite(#loc50 at #loc65))
#loc143 = loc(callsite(#loc52 at #loc65))
#loc144 = loc(callsite(#loc53 at #loc65))
#loc145 = loc(callsite(#loc54 at #loc65))
#loc146 = loc(callsite(#loc50 at #loc75))
#loc147 = loc(callsite(#loc52 at #loc75))
#loc148 = loc(callsite(#loc53 at #loc75))
#loc149 = loc(callsite(#loc54 at #loc75))
#loc150 = loc(callsite(#loc50 at #loc81))
#loc151 = loc(callsite(#loc52 at #loc81))
#loc152 = loc(callsite(#loc53 at #loc81))
#loc153 = loc(callsite(#loc54 at #loc81))
#loc154 = loc(callsite(#loc50 at #loc88))
#loc155 = loc(callsite(#loc52 at #loc88))
#loc156 = loc(callsite(#loc53 at #loc88))
#loc157 = loc(callsite(#loc54 at #loc88))
#loc158 = loc(callsite(#loc50 at #loc99))
#loc159 = loc(callsite(#loc52 at #loc99))
#loc160 = loc(callsite(#loc53 at #loc99))
#loc161 = loc(callsite(#loc54 at #loc99))
#loc162 = loc(callsite(#loc50 at #loc106))
#loc163 = loc(callsite(#loc52 at #loc106))
#loc164 = loc(callsite(#loc53 at #loc106))
#loc165 = loc(callsite(#loc54 at #loc106))
#loc166 = loc(callsite(#loc50 at #loc113))
#loc167 = loc(callsite(#loc52 at #loc113))
#loc168 = loc(callsite(#loc53 at #loc113))
#loc169 = loc(callsite(#loc54 at #loc113))
#loc170 = loc(callsite(#loc50 at #loc131))
#loc171 = loc(callsite(#loc54 at #loc131))
