; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_convolution_mean_relu_28(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = icmp slt i32 %6, 4000, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 15, !dbg !12
  %10 = icmp samesign ult i32 %9, 9, !dbg !13
  %.frozen = freeze i32 %6, !dbg !14
  %11 = sdiv i32 %.frozen, 1000, !dbg !14
  %12 = mul i32 %11, 1000, !dbg !15
  %.decomposed = sub i32 %.frozen, %12, !dbg !15
  %13 = mul nuw nsw i32 %9, 1000, !dbg !16
  %14 = add nsw i32 %.decomposed, %13, !dbg !17
  %15 = mul i32 %11, 9000, !dbg !18
  %16 = add i32 %14, %15, !dbg !19
  %17 = sext i32 %16 to i64, !dbg !20
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !20
  %19 = and i1 %10, %7, !dbg !21
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %19, i32 0, i1 %19) #3, !dbg !22
  %21 = bitcast i32 %20 to float, !dbg !22
  %22 = sext i32 %.decomposed to i64, !dbg !23
  %23 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !23
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %23, i1 %7) #3, !dbg !24
  %25 = bitcast i32 %24 to float, !dbg !24
  %26 = fadd float %21, %25, !dbg !25
  %27 = fcmp olt float %26, 0.000000e+00, !dbg !26
  %28 = select i1 %27, float 0.000000e+00, float %26, !dbg !30
  %29 = select i1 %19, float %28, float 0.000000e+00, !dbg !31
  %30 = bitcast float %29 to i32, !dbg !32
  %31 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %30, i32 8, i32 31), !dbg !32
  %32 = bitcast i32 %31 to float, !dbg !32
  %33 = fadd float %29, %32, !dbg !36
  %34 = bitcast float %33 to i32, !dbg !32
  %35 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %34, i32 4, i32 31), !dbg !32
  %36 = bitcast i32 %35 to float, !dbg !32
  %37 = fadd float %33, %36, !dbg !36
  %38 = bitcast float %37 to i32, !dbg !32
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 2, i32 31), !dbg !32
  %40 = bitcast i32 %39 to float, !dbg !32
  %41 = fadd float %37, %40, !dbg !36
  %42 = bitcast float %41 to i32, !dbg !32
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 1, i32 31), !dbg !32
  %44 = bitcast i32 %43 to float, !dbg !32
  %45 = fadd float %41, %44, !dbg !36
  %46 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %45, float 9.000000e+00) #3, !dbg !38
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %47 = sext i32 %6 to i64, !dbg !40
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !40
  %49 = and i32 %8, 63, !dbg !41
  %50 = icmp eq i32 %49, 0, !dbg !41
  %51 = bitcast float %46 to i32, !dbg !41
  %52 = and i1 %50, %7, !dbg !41
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %51, ptr addrspace(1) %48, i1 %52) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py", directory: "inductor_cache/2y")
!4 = !{ptr @triton_per_fused_convolution_mean_relu_28, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_convolution_mean_relu_28, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_convolution_mean_relu_28", linkageName: "triton_per_fused_convolution_mean_relu_28", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 28, column: 21, scope: !7)
!14 = !DILocation(line: 31, column: 19, scope: !7)
!15 = !DILocation(line: 30, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 40, scope: !7)
!17 = !DILocation(line: 33, column: 35, scope: !7)
!18 = !DILocation(line: 33, column: 50, scope: !7)
!19 = !DILocation(line: 33, column: 45, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 33, column: 63, scope: !7)
!22 = !DILocation(line: 33, column: 55, scope: !7)
!23 = !DILocation(line: 34, column: 30, scope: !7)
!24 = !DILocation(line: 34, column: 35, scope: !7)
!25 = !DILocation(line: 35, column: 18, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 37, column: 40, scope: !7)
!30 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 39, column: 41, scope: !7)
!32 = !DILocation(line: 267, column: 36, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!35 = !DILocation(line: 40, column: 24, scope: !7)
!36 = !DILocation(line: 256, column: 15, scope: !37, inlinedAt: !35)
!37 = distinct !DILexicalBlockFile(scope: !33, file: !34, discriminator: 0)
!38 = !DILocation(line: 42, column: 19, scope: !7)
!39 = !DILocation(line: 43, column: 4, scope: !7)
!40 = !DILocation(line: 44, column: 28, scope: !7)
!41 = !DILocation(line: 44, column: 40, scope: !7)
!42 = !DILocation(line: 44, column: 4, scope: !7)
