#loc = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":40:24)
#loc35 = loc(callsite(#loc1 at #loc24))
module {
  tt.func public @triton_per_fused_convolution_mean_relu_28(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":19:0), %arg4: i32 loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":19:0)) attributes {noinline = false} {
    %c9000_i32 = arith.constant 9000 : i32 loc(#loc1)
    %c1000_i32 = arith.constant 1000 : i32 loc(#loc1)
    %c4000_i32 = arith.constant 4000 : i32 loc(#loc1)
    %cst = arith.constant dense<9.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1000> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<9> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4000_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.remsi %0, %c1000_i32 : i32 loc(#loc7)
    %7 = arith.divsi %0, %c1000_i32 : i32 loc(#loc8)
    %8 = arith.muli %4, %cst_1 : tensor<1x16xi32> loc(#loc9)
    %9 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc10)
    %10 = arith.addi %9, %8 : tensor<1x16xi32> loc(#loc10)
    %11 = arith.muli %7, %c9000_i32 : i32 loc(#loc11)
    %12 = tt.splat %11 : i32 -> tensor<1x16xi32> loc(#loc12)
    %13 = arith.addi %10, %12 : tensor<1x16xi32> loc(#loc12)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc13)
    %15 = tt.addptr %14, %13 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc13)
    %16 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc14)
    %17 = arith.andi %5, %16 : tensor<1x16xi1> loc(#loc14)
    %18 = tt.load %15, %17, %cst_0 : tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %arg2, %6 : !tt.ptr<f32>, i32 loc(#loc16)
    %20 = tt.splat %19 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.load %20, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.broadcast %21 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc18)
    %23 = arith.addf %18, %22 : tensor<1x16xf32> loc(#loc18)
    %24 = arith.cmpf ogt, %cst_0, %23 : tensor<1x16xf32> loc(#loc32)
    %25 = arith.select %24, %cst_0, %23 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc33)
    %26 = arith.select %17, %25, %cst_0 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc22)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc24)), %arg6: f32 loc(callsite(#loc1 at #loc24))):
      %32 = arith.addf %arg5, %arg6 : f32 loc(#loc37)
      tt.reduce.return %32 : f32 loc(#loc34)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc34)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc26)
    %29 = arith.divf %28, %cst : tensor<1x1xf32> loc(#loc27)
    gpu.barrier loc(#loc28)
    %30 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc29)
    %31 = tt.splat %30 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc29)
    tt.store %31, %29, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc30)
    tt.return loc(#loc31)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":23:28)
#loc3 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":25:21)
#loc4 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":26:26)
#loc5 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":26:34)
#loc6 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":28:21)
#loc7 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":30:19)
#loc8 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":31:19)
#loc9 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":33:40)
#loc10 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":33:35)
#loc11 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":33:50)
#loc12 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":33:45)
#loc13 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":33:30)
#loc14 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":33:63)
#loc15 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":33:55)
#loc16 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":34:30)
#loc17 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":34:35)
#loc18 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":35:18)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc20 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":37:40)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc22 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":39:41)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":40:27)
#loc27 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":42:19)
#loc28 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":43:4)
#loc29 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":44:28)
#loc30 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":44:40)
#loc31 = loc("inductor_cache/2y/c2yjwg6uissbdxbjxldzqxdqhkjhifsxokp72aj6luwipdueow65.py":44:4)
#loc32 = loc(callsite(#loc19 at #loc20))
#loc33 = loc(callsite(#loc21 at #loc20))
#loc34 = loc(callsite(#loc23 at #loc24))
#loc36 = loc(callsite(#loc25 at #loc23))
#loc37 = loc(callsite(#loc36 at #loc24))
