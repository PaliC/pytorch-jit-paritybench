; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_cat_12(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %.frozen = freeze i32 %13, !dbg !14
  %14 = sdiv i32 %.frozen, 64, !dbg !14
  %15 = srem i32 %14, 128, !dbg !15
  %16 = mul i32 %14, 64, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %.frozen1 = freeze i32 %13, !dbg !17
  %17 = sdiv i32 %.frozen1, 8192, !dbg !17
  %18 = sext i32 %13 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %6, i64 %18, !dbg !18
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !19
  %21 = bitcast i32 %20 to float, !dbg !19
  %22 = icmp slt i32 %15, 28, !dbg !20
  %23 = mul i32 %17, 8192, !dbg !21
  %srem.decomposed = sub i32 %.frozen1, %23, !dbg !21
  %24 = mul nsw i32 %17, 1792, !dbg !22
  %25 = add nsw i32 %24, %srem.decomposed, !dbg !23
  %26 = sext i32 %25 to i64, !dbg !24
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !24
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %22, i32 0, i1 %22) #1, !dbg !25
  %29 = bitcast i32 %28 to float, !dbg !25
  %30 = add nsw i32 %15, -28, !dbg !26
  %31 = icmp ult i32 %30, 25, !dbg !26
  %32 = shl nsw i32 %15, 6, !dbg !27
  %33 = mul nsw i32 %17, 1600, !dbg !28
  %34 = add nsw i32 %33, %.decomposed, !dbg !27
  %35 = add nsw i32 %34, -1792, !dbg !29
  %36 = add nsw i32 %35, %32, !dbg !30
  %37 = sext i32 %36 to i64, !dbg !31
  %38 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !31
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %31, i32 0, i1 %31) #1, !dbg !32
  %40 = bitcast i32 %39 to float, !dbg !32
  %41 = add nsw i32 %15, -53, !dbg !33
  %42 = icmp ult i32 %41, 25, !dbg !33
  %43 = add nsw i32 %34, -3392, !dbg !34
  %44 = add nsw i32 %43, %32, !dbg !35
  %45 = sext i32 %44 to i64, !dbg !36
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %45, !dbg !36
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %42, i32 0, i1 %42) #1, !dbg !37
  %48 = bitcast i32 %47 to float, !dbg !37
  %49 = getelementptr float, ptr addrspace(1) %3, i64 %45, !dbg !38
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %42, i32 0, i1 %42) #1, !dbg !39
  %51 = bitcast i32 %50 to float, !dbg !39
  %52 = fadd float %48, %51, !dbg !40
  %53 = add nsw i32 %15, -78, !dbg !41
  %54 = icmp ult i32 %53, 25, !dbg !41
  %55 = add nsw i32 %34, -4992, !dbg !42
  %56 = add nsw i32 %55, %32, !dbg !43
  %57 = sext i32 %56 to i64, !dbg !44
  %58 = getelementptr float, ptr addrspace(1) %2, i64 %57, !dbg !44
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %54, i32 0, i1 %54) #1, !dbg !45
  %60 = bitcast i32 %59 to float, !dbg !45
  %61 = getelementptr float, ptr addrspace(1) %3, i64 %57, !dbg !46
  %62 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %54, i32 0, i1 %54) #1, !dbg !47
  %63 = bitcast i32 %62 to float, !dbg !47
  %64 = fadd float %60, %63, !dbg !48
  %65 = getelementptr float, ptr addrspace(1) %4, i64 %57, !dbg !49
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %54, i32 0, i1 %54) #1, !dbg !50
  %67 = bitcast i32 %66 to float, !dbg !50
  %68 = fadd float %64, %67, !dbg !51
  %69 = icmp sgt i32 %15, 102, !dbg !52
  %70 = add nsw i32 %34, -6592, !dbg !53
  %71 = add nsw i32 %70, %32, !dbg !54
  %72 = sext i32 %71 to i64, !dbg !55
  %73 = getelementptr float, ptr addrspace(1) %2, i64 %72, !dbg !55
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %69, i32 0, i1 %69) #1, !dbg !56
  %75 = bitcast i32 %74 to float, !dbg !56
  %76 = getelementptr float, ptr addrspace(1) %3, i64 %72, !dbg !57
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %69, i32 0, i1 %69) #1, !dbg !58
  %78 = bitcast i32 %77 to float, !dbg !58
  %79 = fadd float %75, %78, !dbg !59
  %80 = getelementptr float, ptr addrspace(1) %4, i64 %72, !dbg !60
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %69, i32 0, i1 %69) #1, !dbg !61
  %82 = bitcast i32 %81 to float, !dbg !61
  %83 = fadd float %79, %82, !dbg !62
  %84 = getelementptr float, ptr addrspace(1) %5, i64 %72, !dbg !63
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %84, i1 %69, i32 0, i1 %69) #1, !dbg !64
  %86 = bitcast i32 %85 to float, !dbg !64
  %87 = fadd float %83, %86, !dbg !65
  %88 = select i1 %69, float %87, float 0.000000e+00, !dbg !66
  %89 = select i1 %54, float %68, float %88, !dbg !67
  %90 = select i1 %42, float %52, float %89, !dbg !67
  %91 = select i1 %31, float %40, float %90, !dbg !68
  %92 = select i1 %22, float %29, float %91, !dbg !69
  %93 = fadd float %92, %21, !dbg !70
  %94 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !71
  %95 = bitcast float %93 to i32, !dbg !72
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %95, ptr addrspace(1) %94, i1 true) #1, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py", directory: "inductor_cache/jk")
!4 = !{ptr @triton_poi_fused_add_cat_12, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_12, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_12", linkageName: "triton_poi_fused_add_cat_12", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 31, scope: !7)
!19 = !DILocation(line: 28, column: 36, scope: !7)
!20 = !DILocation(line: 33, column: 18, scope: !7)
!21 = !DILocation(line: 34, column: 35, scope: !7)
!22 = !DILocation(line: 34, column: 50, scope: !7)
!23 = !DILocation(line: 34, column: 45, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 55, scope: !7)
!26 = !DILocation(line: 38, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 40, scope: !7)
!28 = !DILocation(line: 39, column: 59, scope: !7)
!29 = !DILocation(line: 39, column: 36, scope: !7)
!30 = !DILocation(line: 39, column: 54, scope: !7)
!31 = !DILocation(line: 39, column: 31, scope: !7)
!32 = !DILocation(line: 39, column: 64, scope: !7)
!33 = !DILocation(line: 43, column: 20, scope: !7)
!34 = !DILocation(line: 44, column: 36, scope: !7)
!35 = !DILocation(line: 44, column: 54, scope: !7)
!36 = !DILocation(line: 44, column: 31, scope: !7)
!37 = !DILocation(line: 44, column: 64, scope: !7)
!38 = !DILocation(line: 45, column: 31, scope: !7)
!39 = !DILocation(line: 45, column: 64, scope: !7)
!40 = !DILocation(line: 46, column: 20, scope: !7)
!41 = !DILocation(line: 52, column: 20, scope: !7)
!42 = !DILocation(line: 53, column: 36, scope: !7)
!43 = !DILocation(line: 53, column: 54, scope: !7)
!44 = !DILocation(line: 53, column: 31, scope: !7)
!45 = !DILocation(line: 53, column: 64, scope: !7)
!46 = !DILocation(line: 54, column: 31, scope: !7)
!47 = !DILocation(line: 54, column: 64, scope: !7)
!48 = !DILocation(line: 55, column: 20, scope: !7)
!49 = !DILocation(line: 56, column: 31, scope: !7)
!50 = !DILocation(line: 56, column: 64, scope: !7)
!51 = !DILocation(line: 57, column: 20, scope: !7)
!52 = !DILocation(line: 60, column: 20, scope: !7)
!53 = !DILocation(line: 63, column: 36, scope: !7)
!54 = !DILocation(line: 63, column: 55, scope: !7)
!55 = !DILocation(line: 63, column: 31, scope: !7)
!56 = !DILocation(line: 63, column: 65, scope: !7)
!57 = !DILocation(line: 64, column: 31, scope: !7)
!58 = !DILocation(line: 64, column: 65, scope: !7)
!59 = !DILocation(line: 65, column: 20, scope: !7)
!60 = !DILocation(line: 66, column: 31, scope: !7)
!61 = !DILocation(line: 66, column: 65, scope: !7)
!62 = !DILocation(line: 67, column: 20, scope: !7)
!63 = !DILocation(line: 68, column: 31, scope: !7)
!64 = !DILocation(line: 68, column: 65, scope: !7)
!65 = !DILocation(line: 69, column: 20, scope: !7)
!66 = !DILocation(line: 71, column: 35, scope: !7)
!67 = !DILocation(line: 0, scope: !7)
!68 = !DILocation(line: 74, column: 34, scope: !7)
!69 = !DILocation(line: 75, column: 33, scope: !7)
!70 = !DILocation(line: 76, column: 20, scope: !7)
!71 = !DILocation(line: 77, column: 28, scope: !7)
!72 = !DILocation(line: 77, column: 40, scope: !7)
!73 = !DILocation(line: 77, column: 4, scope: !7)
