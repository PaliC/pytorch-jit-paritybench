//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_cat_12 // -- Begin function triton_poi_fused_add_cat_12
                                        // @triton_poi_fused_add_cat_12
.visible .entry triton_poi_fused_add_cat_12(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_12_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_12_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_12_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_12_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_12_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_12_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_12_param_6,
	.param .u32 triton_poi_fused_add_cat_12_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<52>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:19:0

// %bb.0:
	ld.param.u64 	%rd14, [triton_poi_fused_add_cat_12_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused_add_cat_12_param_1];
$L__tmp0:
	.loc	1 21 28                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:21:33
	shl.b32 	%r26, %r1, 7;
	ld.param.u64 	%rd16, [triton_poi_fused_add_cat_12_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused_add_cat_12_param_3];
	.loc	1 22 36                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:22:36
	mov.u32 	%r27, %tid.x;
	and.b32  	%r28, %r27, 127;
	ld.param.u64 	%rd18, [triton_poi_fused_add_cat_12_param_4];
	.loc	1 22 23                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:22:23
	or.b32  	%r29, %r26, %r28;
	ld.param.u64 	%rd19, [triton_poi_fused_add_cat_12_param_5];
	ld.param.u64 	%rd20, [triton_poi_fused_add_cat_12_param_6];
	.loc	1 24 21                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:24:21
	shr.s32 	%r31, %r29, 31;
	shr.u32 	%r32, %r31, 26;
	add.s32 	%r33, %r29, %r32;
	shr.s32 	%r34, %r33, 6;
	.loc	1 24 27                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:24:27
	shr.u32 	%r35, %r34, 25;
	add.s32 	%r36, %r34, %r35;
	and.b32  	%r37, %r36, -128;
	sub.s32 	%r38, %r34, %r37;
	.loc	1 25 19                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:25:19
	and.b32  	%r39, %r33, -64;
	sub.s32 	%r40, %r29, %r39;
	.loc	1 26 19                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:26:19
	shr.u32 	%r41, %r31, 19;
	add.s32 	%r42, %r29, %r41;
	shr.s32 	%r43, %r42, 13;
	.loc	1 28 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:28:31
	mul.wide.s32 	%rd21, %r29, 4;
	add.s64 	%rd1, %rd20, %rd21;
	mov.pred 	%p1, -1;
	.loc	1 28 36                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:28:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	.loc	1 33 18                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:33:18
	setp.lt.s32 	%p2, %r38, 28;
	.loc	1 34 35                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:34:35
	and.b32  	%r44, %r42, -8192;
	sub.s32 	%r45, %r29, %r44;
	.loc	1 34 45                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:34:45
	mad.lo.s32 	%r46, %r43, 1792, %r45;
	.loc	1 34 30                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:34:30
	mul.wide.s32 	%rd22, %r46, 4;
	add.s64 	%rd2, %rd15, %rd22;
	mov.b32 	%r4, 0;
	.loc	1 34 55                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:34:55
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p2 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	@!%p2 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f2, %r3;
	.loc	1 38 18                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:38:18
	add.s32 	%r47, %r38, -28;
	setp.lt.u32 	%p4, %r47, 25;
	.loc	1 39 40                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:39:40
	shl.b32 	%r48, %r38, 6;
	mad.lo.s32 	%r49, %r43, 1600, %r40;
	.loc	1 39 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:39:31
	cvt.s64.s32 	%rd23, %r48;
	cvt.s64.s32 	%rd24, %r49;
	add.s64 	%rd25, %rd24, %rd23;
	shl.b64 	%rd26, %rd25, 2;
	add.s64 	%rd27, %rd16, %rd26;
	add.s64 	%rd3, %rd27, -7168;
	.loc	1 39 64                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:39:64
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p4 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	@!%p4 mov.u32 %r5, %r4;
	// end inline asm
	mov.b32 	%f3, %r5;
	.loc	1 43 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:43:20
	add.s32 	%r50, %r38, -53;
	setp.lt.u32 	%p6, %r50, 25;
	.loc	1 44 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:44:31
	add.s64 	%rd4, %rd27, -13568;
	.loc	1 44 64                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:44:64
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p6 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	@!%p6 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f4, %r7;
	.loc	1 45 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:45:31
	add.s64 	%rd28, %rd17, %rd26;
	add.s64 	%rd5, %rd28, -13568;
	.loc	1 45 64                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:45:64
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p6 ld.global.b32 { %r9 }, [ %rd5 + 0 ];
	@!%p6 mov.u32 %r9, %r4;
	// end inline asm
	mov.b32 	%f5, %r9;
	.loc	1 46 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:46:20
	add.f32 	%f6, %f4, %f5;
	.loc	1 52 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:52:20
	add.s32 	%r51, %r38, -78;
	setp.lt.u32 	%p10, %r51, 25;
	.loc	1 53 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:53:31
	add.s64 	%rd6, %rd27, -19968;
	.loc	1 53 64                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:53:64
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p10 ld.global.b32 { %r11 }, [ %rd6 + 0 ];
	@!%p10 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f7, %r11;
	.loc	1 54 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:54:31
	add.s64 	%rd7, %rd28, -19968;
	.loc	1 54 64                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:54:64
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p10 ld.global.b32 { %r13 }, [ %rd7 + 0 ];
	@!%p10 mov.u32 %r13, %r4;
	// end inline asm
	mov.b32 	%f8, %r13;
	.loc	1 55 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:55:20
	add.f32 	%f9, %f7, %f8;
	.loc	1 56 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:56:31
	add.s64 	%rd29, %rd18, %rd26;
	add.s64 	%rd8, %rd29, -19968;
	.loc	1 56 64                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:56:64
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p10 ld.global.b32 { %r15 }, [ %rd8 + 0 ];
	@!%p10 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f10, %r15;
	.loc	1 57 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:57:20
	add.f32 	%f11, %f9, %f10;
	.loc	1 60 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:60:20
	setp.gt.s32 	%p16, %r38, 102;
	.loc	1 63 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:63:31
	add.s64 	%rd9, %rd27, -26368;
	.loc	1 63 65                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:63:65
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p16 ld.global.b32 { %r17 }, [ %rd9 + 0 ];
	@!%p16 mov.u32 %r17, %r4;
	// end inline asm
	mov.b32 	%f12, %r17;
	.loc	1 64 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:64:31
	add.s64 	%rd10, %rd28, -26368;
	.loc	1 64 65                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:64:65
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p16 ld.global.b32 { %r19 }, [ %rd10 + 0 ];
	@!%p16 mov.u32 %r19, %r4;
	// end inline asm
	mov.b32 	%f13, %r19;
	.loc	1 65 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:65:20
	add.f32 	%f14, %f12, %f13;
	.loc	1 66 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:66:31
	add.s64 	%rd11, %rd29, -26368;
	.loc	1 66 65                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:66:65
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p16 ld.global.b32 { %r21 }, [ %rd11 + 0 ];
	@!%p16 mov.u32 %r21, %r4;
	// end inline asm
	mov.b32 	%f15, %r21;
	.loc	1 67 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:67:20
	add.f32 	%f16, %f14, %f15;
	.loc	1 68 31                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:68:31
	add.s64 	%rd30, %rd19, %rd26;
	add.s64 	%rd12, %rd30, -26368;
	.loc	1 68 65                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:68:65
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p16 ld.global.b32 { %r23 }, [ %rd12 + 0 ];
	@!%p16 mov.u32 %r23, %r4;
	// end inline asm
	mov.b32 	%f17, %r23;
	.loc	1 69 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:69:20
	add.f32 	%f18, %f16, %f17;
	.loc	1 71 35                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:71:35
	selp.f32 	%f19, %f18, 0f00000000, %p16;
	.loc	1 0 0                           // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:0:0
	selp.f32 	%f20, %f11, %f19, %p10;
	selp.f32 	%f21, %f6, %f20, %p6;
	.loc	1 74 34                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:74:34
	selp.f32 	%f22, %f3, %f21, %p4;
	.loc	1 75 33                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:75:33
	selp.f32 	%f23, %f2, %f22, %p2;
	.loc	1 76 20                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:76:20
	add.f32 	%f24, %f23, %f1;
	.loc	1 77 28                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:77:28
	add.s64 	%rd13, %rd14, %rd21;
	.loc	1 77 40                         // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:77:40
	mov.b32 	%r25, %f24;
	// begin inline asm
	@%p1 st.global.b32 [ %rd13 + 0 ], { %r25 };
	// end inline asm
	.loc	1 77 4                          // cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py:77:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jk/cjkhe5a54w3aqorw7lnmiacrpdzbs22nyobtpka4kd3fpapwxwa3.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 107
.b8 104
.b8 101
.b8 53
.b8 97
.b8 53
.b8 52
.b8 119
.b8 51
.b8 97
.b8 113
.b8 111
.b8 114
.b8 119
.b8 55
.b8 108
.b8 110
.b8 109
.b8 105
.b8 97
.b8 99
.b8 114
.b8 112
.b8 100
.b8 122
.b8 98
.b8 115
.b8 50
.b8 50
.b8 110
.b8 121
.b8 111
.b8 98
.b8 116
.b8 112
.b8 107
.b8 97
.b8 52
.b8 107
.b8 100
.b8 51
.b8 102
.b8 112
.b8 97
.b8 112
.b8 119
.b8 120
.b8 119
.b8 97
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 107
.b8 0
	}
	.section	.debug_macinfo	{	}
