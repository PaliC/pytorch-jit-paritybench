; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_clone_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %10 = shl i32 %9, 4, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 15, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 16, !dbg !14
  %15 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !15
  %16 = shl i32 %15, 1, !dbg !16
  %17 = lshr i32 %11, 4, !dbg !17
  %.lobit = and i32 %17, 1, !dbg !17
  %18 = or disjoint i32 %16, %.lobit, !dbg !18
  %19 = icmp slt i32 %18, 8, !dbg !19
  %.frozen = freeze i32 %13, !dbg !20
  %20 = sdiv i32 %.frozen, 4, !dbg !20
  %21 = mul i32 %20, 4, !dbg !21
  %.decomposed = sub i32 %.frozen, %21, !dbg !21
  %22 = sdiv i32 %18, 4, !dbg !22
  %23 = shl i32 %18, 2, !dbg !23
  %24 = add i32 %23, %.decomposed, !dbg !24
  %25 = shl i32 %20, 5, !dbg !25
  %26 = add i32 %24, %25, !dbg !26
  %27 = sext i32 %26 to i64, !dbg !27
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !27
  %29 = and i1 %14, %19, !dbg !28
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %29) #4, !dbg !29
  %31 = sext i32 %22 to i64, !dbg !30
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %31, !dbg !30
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %19) #4, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %31, !dbg !32
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %34, i1 %19) #4, !dbg !33
  %36 = bitcast i32 %35 to float, !dbg !33
  %37 = getelementptr float, ptr addrspace(1) %3, i64 %31, !dbg !34
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %19) #4, !dbg !35
  %39 = getelementptr float, ptr addrspace(1) %4, i64 %31, !dbg !36
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %19) #4, !dbg !37
  %41 = fadd float %36, 0x3EE4F8B580000000, !dbg !38
  %42 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !39
  %.not.i = icmp eq i32 %42, 0, !dbg !39
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #4, !dbg !39
  %.not1.i = icmp eq i32 %43, 0, !dbg !39
  br i1 %.not.i, label %49, label %44, !dbg !39

44:                                               ; preds = %8
  br i1 %.not1.i, label %47, label %45, !dbg !39

45:                                               ; preds = %44
  %46 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %41) #4, !dbg !39
  br label %__nv_sqrtf.exit, !dbg !39

47:                                               ; preds = %44
  %48 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %41) #4, !dbg !39
  br label %__nv_sqrtf.exit, !dbg !39

49:                                               ; preds = %8
  br i1 %.not1.i, label %52, label %50, !dbg !39

50:                                               ; preds = %49
  %51 = tail call float @llvm.nvvm.sqrt.rn.f(float %41) #4, !dbg !39
  br label %__nv_sqrtf.exit, !dbg !39

52:                                               ; preds = %49
  %53 = tail call float @llvm.nvvm.sqrt.approx.f(float %41) #4, !dbg !39
  br label %__nv_sqrtf.exit, !dbg !39

__nv_sqrtf.exit:                                  ; preds = %45, %47, %50, %52
  %.0.i = phi float [ %46, %45 ], [ %48, %47 ], [ %51, %50 ], [ %53, %52 ], !dbg !39
  %54 = bitcast i32 %30 to float, !dbg !29
  %55 = bitcast i32 %33 to float, !dbg !31
  %56 = fsub float %54, %55, !dbg !40
  %57 = bitcast i32 %40 to float, !dbg !37
  %58 = bitcast i32 %38 to float, !dbg !35
  %59 = and i32 %11, 1, !dbg !12
  %60 = or disjoint i32 %16, %59, !dbg !18
  %61 = icmp slt i32 %60, 8, !dbg !19
  %62 = lshr i32 %11, 1, !dbg !12
  %63 = and i32 %62, 15, !dbg !12
  %64 = or disjoint i32 %10, %63, !dbg !13
  %65 = icmp slt i32 %64, 16, !dbg !14
  %66 = and i1 %65, %61, !dbg !28
  %67 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #4, !dbg !41
  %68 = fmul float %56, %67, !dbg !42
  %69 = fmul float %68, %58, !dbg !43
  %70 = fadd float %69, %57, !dbg !44
  %71 = fcmp olt float %70, 0.000000e+00, !dbg !45
  %72 = select i1 %71, float 0.000000e+00, float %70, !dbg !49
  %73 = shl i32 %64, 3, !dbg !50
  %74 = add i32 %60, %73, !dbg !51
  %75 = sext i32 %74 to i64, !dbg !52
  %76 = getelementptr float, ptr addrspace(1) %5, i64 %75, !dbg !52
  %77 = shl i32 %11, 1, !dbg !53
  %78 = and i32 %77, 30, !dbg !53
  %79 = or disjoint i32 %78, %.lobit, !dbg !53
  %80 = and i32 %11, 31, !dbg !53
  %81 = lshr exact i32 %78, 1, !dbg !53
  %82 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %81, !dbg !53
  %83 = getelementptr inbounds float, ptr addrspace(3) %82, i32 %79, !dbg !53
  %84 = bitcast float %72 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %83, <1 x i32> %84, i1 true) #4, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %85 = lshr i32 %80, 1, !dbg !53
  %86 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %85, !dbg !53
  %87 = getelementptr inbounds float, ptr addrspace(3) %86, i32 %80, !dbg !53
  %88 = load i32, ptr addrspace(3) %87, align 4, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %88, ptr addrspace(1) %76, i1 %66) #4, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctuqc37gmupdfuwv4vomeyiaou2uutiwl6o4vwtpqnpsl22hodlh.py", directory: "inductor_cache/tu")
!4 = !{ptr @triton_poi_fused_clone_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_2", linkageName: "triton_poi_fused_clone_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 44, scope: !7)
!18 = !DILocation(line: 26, column: 23, scope: !7)
!19 = !DILocation(line: 27, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 31, column: 19, scope: !7)
!23 = !DILocation(line: 33, column: 37, scope: !7)
!24 = !DILocation(line: 33, column: 35, scope: !7)
!25 = !DILocation(line: 33, column: 45, scope: !7)
!26 = !DILocation(line: 33, column: 42, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 58, scope: !7)
!29 = !DILocation(line: 33, column: 50, scope: !7)
!30 = !DILocation(line: 34, column: 30, scope: !7)
!31 = !DILocation(line: 34, column: 35, scope: !7)
!32 = !DILocation(line: 35, column: 30, scope: !7)
!33 = !DILocation(line: 35, column: 35, scope: !7)
!34 = !DILocation(line: 36, column: 31, scope: !7)
!35 = !DILocation(line: 36, column: 36, scope: !7)
!36 = !DILocation(line: 37, column: 31, scope: !7)
!37 = !DILocation(line: 37, column: 36, scope: !7)
!38 = !DILocation(line: 40, column: 18, scope: !7)
!39 = !DILocation(line: 41, column: 26, scope: !7)
!40 = !DILocation(line: 38, column: 18, scope: !7)
!41 = !DILocation(line: 43, column: 18, scope: !7)
!42 = !DILocation(line: 46, column: 19, scope: !7)
!43 = !DILocation(line: 47, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 20, scope: !7)
!45 = !DILocation(line: 118, column: 15, scope: !46, inlinedAt: !48)
!46 = distinct !DILexicalBlockFile(scope: !7, file: !47, discriminator: 0)
!47 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!48 = !DILocation(line: 50, column: 42, scope: !7)
!49 = !DILocation(line: 121, column: 29, scope: !46, inlinedAt: !48)
!50 = !DILocation(line: 51, column: 32, scope: !7)
!51 = !DILocation(line: 51, column: 30, scope: !7)
!52 = !DILocation(line: 51, column: 25, scope: !7)
!53 = !DILocation(line: 51, column: 44, scope: !7)
!54 = !DILocation(line: 51, column: 4, scope: !7)
