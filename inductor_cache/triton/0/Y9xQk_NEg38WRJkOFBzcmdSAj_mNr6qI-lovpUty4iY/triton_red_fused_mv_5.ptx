//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mv_5   // -- Begin function triton_red_fused_mv_5
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mv_5
.visible .entry triton_red_fused_mv_5(
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_5_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_5_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_5_param_2,
	.param .u32 triton_red_fused_mv_5_param_3,
	.param .u32 triton_red_fused_mv_5_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<31>;
	.reg .b32 	%r<128>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<41>;
	.loc	1 19 0                          // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_red_fused_mv_5_param_2];
	ld.param.u64 	%rd11, [triton_red_fused_mv_5_param_0];
	ld.param.u64 	%rd14, [triton_red_fused_mv_5_param_1];
$L__tmp0:
	.loc	1 22 28                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:22:28
	// begin inline asm
	mov.u32 %r14, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:22:33
	shl.b32 	%r15, %r14, 6;
	.loc	1 23 44                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:23:44
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 63;
	bfe.u32 	%r3, %r1, 2, 5;
	.loc	1 23 23                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:23:23
	or.b32  	%r4, %r15, %r3;
	or.b32  	%r5, %r4, 32;
	or.b32  	%r6, %r15, %r2;
	.loc	1 25 33                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:25:33
	shl.b32 	%r16, %r1, 1;
	and.b32  	%r17, %r16, 6;
	bfe.u32 	%r18, %r1, 6, 1;
	.loc	1 27 19                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:27:19
	shr.u32 	%r20, %r6, 31;
	add.s32 	%r21, %r6, %r20;
	shr.s32 	%r22, %r21, 1;
	.loc	1 26 19                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:26:19
	and.b32  	%r23, %r21, 2147483646;
	sub.s32 	%r24, %r6, %r23;
	bfe.u32 	%r25, %r14, 25, 1;
	add.s32 	%r26, %r4, %r25;
	and.b32  	%r27, %r26, 2147483646;
	sub.s32 	%r28, %r4, %r27;
	add.s32 	%r29, %r5, %r25;
	and.b32  	%r30, %r29, 2147483646;
	sub.s32 	%r31, %r5, %r30;
	.loc	1 34 36                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:36
	shl.b32 	%r32, %r24, 1;
	.loc	1 35 42                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:35:42
	mul.lo.s32 	%r33, %r28, 98;
	mul.lo.s32 	%r34, %r31, 98;
	mad.lo.s32 	%r7, %r22, 196, %r32;
	shl.b32 	%r35, %r1, 3;
	and.b32  	%r36, %r35, 504;
	or.b32  	%r37, %r36, %r18;
	and.b32  	%r38, %r16, 254;
	shr.u32 	%r39, %r36, 2;
	add.s32 	%r40, %r39, %r37;
	shl.b32 	%r41, %r40, 2;
	mov.u32 	%r42, global_smem;
	add.s32 	%r61, %r42, %r41;
	add.s32 	%r63, %r61, 8;
	add.s32 	%r65, %r61, 16;
	add.s32 	%r67, %r61, 24;
	shr.u32 	%r43, %r1, 1;
	and.b32  	%r44, %r43, 62;
	add.s32 	%r45, %r44, %r38;
	shl.b32 	%r46, %r45, 2;
	add.s32 	%r12, %r42, %r46;
	or.b32  	%r47, %r38, 256;
	shr.u32 	%r48, %r47, 2;
	and.b32  	%r49, %r48, 126;
	add.s32 	%r50, %r49, %r38;
	shl.b32 	%r51, %r50, 2;
	add.s32 	%r13, %r42, %r51;
	.loc	1 30 36                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:30:36
	cvt.u64.u32 	%rd1, %r18;
	cvt.u64.u32 	%rd2, %r17;
	and.b32  	%r52, %r1, 3;
	mul.wide.u32 	%rd15, %r52, 8;
	mul.wide.s32 	%rd16, %r34, 4;
	add.s64 	%rd17, %rd15, %rd16;
	add.s64 	%rd39, %rd14, %rd17;
	mul.wide.s32 	%rd18, %r33, 4;
	add.s64 	%rd19, %rd15, %rd18;
	add.s64 	%rd38, %rd14, %rd19;
	mov.f32 	%f35, 0f00000000;
	mov.u64 	%rd40, -8;
	setp.lt.s32 	%p1, %r6, 128;
	setp.lt.s32 	%p19, %r4, 128;
	setp.lt.s32 	%p20, %r5, 128;
	mov.f32 	%f36, %f35;
	mov.f32 	%f37, %f35;
	mov.f32 	%f38, %f35;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s64 	%rd8, %rd40, 8;
	.loc	1 31 27                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:31:27
	add.s64 	%rd26, %rd8, %rd2;
	add.s64 	%rd28, %rd1, %rd40;
	add.s64 	%rd29, %rd28, 10;
	add.s64 	%rd30, %rd28, 12;
	.loc	1 32 25                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:32:25
	add.s64 	%rd31, %rd28, 14;
	setp.lt.u64 	%p21, %rd26, 98;
	setp.lt.u64 	%p22, %rd29, 98;
	setp.lt.u64 	%p23, %rd30, 98;
	setp.lt.u64 	%p24, %rd31, 98;
	cvt.u32.u64 	%r77, %rd28;
	add.s32 	%r78, %r77, 8;
	.loc	1 34 73                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:73
	mul.hi.u32 	%r79, %r78, 1402438301;
	shr.u32 	%r80, %r79, 4;
	.loc	1 34 50                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:50
	mul.lo.s32 	%r81, %r80, 49;
	sub.s32 	%r82, %r78, %r81;
	cvt.u32.u64 	%r83, %rd29;
	.loc	1 34 73                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:73
	mul.hi.u32 	%r84, %r83, 1402438301;
	shr.u32 	%r85, %r84, 4;
	.loc	1 34 50                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:50
	mul.lo.s32 	%r86, %r85, 49;
	sub.s32 	%r87, %r83, %r86;
	cvt.u32.u64 	%r88, %rd30;
	.loc	1 34 73                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:73
	mul.hi.u32 	%r89, %r88, 1402438301;
	shr.u32 	%r90, %r89, 4;
	.loc	1 34 50                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:50
	mul.lo.s32 	%r91, %r90, 49;
	sub.s32 	%r92, %r88, %r91;
	cvt.u32.u64 	%r93, %rd31;
	.loc	1 34 73                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:73
	mul.hi.u32 	%r94, %r93, 1402438301;
	shr.u32 	%r95, %r94, 4;
	.loc	1 34 50                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:50
	mul.lo.s32 	%r96, %r95, 49;
	sub.s32 	%r97, %r93, %r96;
	.loc	1 34 45                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:45
	shl.b32 	%r98, %r82, 2;
	shl.b32 	%r99, %r87, 2;
	shl.b32 	%r100, %r92, 2;
	shl.b32 	%r101, %r97, 2;
	.loc	1 34 57                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:57
	add.s32 	%r102, %r7, %r80;
	.loc	1 34 67                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:67
	add.s32 	%r103, %r102, %r98;
	.loc	1 34 57                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:57
	add.s32 	%r104, %r7, %r85;
	.loc	1 34 67                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:67
	add.s32 	%r105, %r104, %r99;
	.loc	1 34 57                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:57
	add.s32 	%r106, %r7, %r90;
	.loc	1 34 67                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:67
	add.s32 	%r107, %r106, %r100;
	.loc	1 34 57                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:57
	add.s32 	%r108, %r7, %r95;
	.loc	1 34 67                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:67
	add.s32 	%r109, %r108, %r101;
	.loc	1 34 34                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:34
	mul.wide.s32 	%rd32, %r103, 4;
	add.s64 	%rd20, %rd11, %rd32;
	mul.wide.s32 	%rd33, %r105, 4;
	add.s64 	%rd21, %rd11, %rd33;
	mul.wide.s32 	%rd34, %r107, 4;
	add.s64 	%rd22, %rd11, %rd34;
	mul.wide.s32 	%rd35, %r109, 4;
	add.s64 	%rd23, %rd11, %rd35;
	.loc	1 34 87                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:87
	and.pred  	%p3, %p1, %p22;
	and.pred  	%p5, %p1, %p23;
	and.pred  	%p7, %p1, %p24;
	mov.b32 	%r54, 0;
	.loc	1 34 79                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:79
	// begin inline asm
	mov.u32 %r53, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r53 }, [ %rd20 + 0 ];
	@!%p1 mov.u32 %r53, %r54;
	// end inline asm
	// begin inline asm
	mov.u32 %r55, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r55 }, [ %rd21 + 0 ];
	@!%p3 mov.u32 %r55, %r54;
	// end inline asm
	// begin inline asm
	mov.u32 %r57, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r57 }, [ %rd22 + 0 ];
	@!%p5 mov.u32 %r57, %r54;
	// end inline asm
	// begin inline asm
	mov.u32 %r59, 0x0;
	@%p7 ld.global.L1::evict_last.b32 { %r59 }, [ %rd23 + 0 ];
	@!%p7 mov.u32 %r59, %r54;
	// end inline asm
	bar.sync 	0;
	mov.pred 	%p26, -1;
	// begin inline asm
	@%p26 st.shared.b32 [ %r61 + 0 ], %r53;
	// end inline asm
	// begin inline asm
	@%p26 st.shared.b32 [ %r63 + 0 ], %r55;
	// end inline asm
	// begin inline asm
	@%p26 st.shared.b32 [ %r65 + 0 ], %r57;
	// end inline asm
	// begin inline asm
	@%p26 st.shared.b32 [ %r67 + 0 ], %r59;
	// end inline asm
	bar.sync 	0;
	.loc	1 34 87                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:87
	and.pred  	%p17, %p20, %p21;
	and.pred  	%p14, %p19, %p21;
	.loc	1 34 79                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:34:79
	ld.shared.v2.f32 	{%f13, %f14}, [%r12];
	ld.shared.v2.f32 	{%f15, %f16}, [%r13+1024];
	.loc	1 35 47                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:35:47
	// begin inline asm
	mov.u32 %r69, 0x0;
	mov.u32 %r70, 0x0;
	@%p14 ld.global.L1::evict_last.v2.b32 { %r69, %r70 }, [ %rd38 + 0 ];
	@!%p14 mov.u32 %r69, %r54;
	@!%p14 mov.u32 %r70, %r54;
	// end inline asm
	// begin inline asm
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	@%p17 ld.global.L1::evict_last.v2.b32 { %r73, %r74 }, [ %rd39 + 0 ];
	@!%p17 mov.u32 %r73, %r54;
	@!%p17 mov.u32 %r74, %r54;
	// end inline asm
	mov.b32 	%f17, %r70;
	mov.b32 	%f18, %r69;
	mov.b32 	%f19, %r74;
	mov.b32 	%f20, %r73;
	.loc	1 38 23                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:38:23
	fma.rn.f32 	%f21, %f15, %f20, %f37;
	fma.rn.f32 	%f22, %f16, %f19, %f38;
	fma.rn.f32 	%f23, %f13, %f18, %f35;
	fma.rn.f32 	%f24, %f14, %f17, %f36;
	.loc	1 39 46                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:39:46
	selp.f32 	%f36, %f24, %f36, %p14;
	selp.f32 	%f35, %f23, %f35, %p14;
	selp.f32 	%f38, %f22, %f38, %p17;
	selp.f32 	%f37, %f21, %f37, %p17;
	.loc	1 30 36                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:30:36
	add.s64 	%rd39, %rd39, 32;
	add.s64 	%rd38, %rd38, 32;
	setp.lt.u64 	%p25, %rd8, 90;
	mov.u64 	%rd40, %rd8;
	@%p25 bra 	$L__BB0_1;
// %bb.2:
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f35, %f36;
	add.f32 	%f26, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f25;
	shfl.sync.bfly.b32	%r116, %r115, 2, 31, -1;
	mov.b32 	%f27, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f25, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f28;
	shfl.sync.bfly.b32	%r118, %r117, 1, 31, -1;
	mov.b32 	%f29, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r119, %f26;
	shfl.sync.bfly.b32	%r120, %r119, 2, 31, -1;
	mov.b32 	%f31, %r120;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f26, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r121, %f32;
	shfl.sync.bfly.b32	%r122, %r121, 1, 31, -1;
	mov.b32 	%f33, %r122;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f32, %f33;
$L__tmp2:
	.loc	1 40 28                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:40:28
	bar.sync 	0;
	shl.b32 	%r123, %r3, 2;
	add.s32 	%r110, %r42, %r123;
	mov.b32 	%r111, %f30;
	// begin inline asm
	@%p26 st.shared.b32 [ %r110 + 0 ], %r111;
	// end inline asm
	add.s32 	%r112, %r110, 128;
	mov.b32 	%r113, %f34;
	// begin inline asm
	@%p26 st.shared.b32 [ %r112 + 0 ], %r113;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r125, %r2, 2;
	add.s32 	%r126, %r42, %r125;
	ld.shared.u32 	%r114, [%r126];
	.loc	1 41 25                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:41:25
	mul.wide.s32 	%rd37, %r6, 4;
	add.s64 	%rd36, %rd12, %rd37;
	.loc	1 41 36                         // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:41:36
	and.b32  	%r127, %r1, 64;
	setp.eq.s32 	%p30, %r127, 0;
	and.pred  	%p28, %p30, %p1;
	// begin inline asm
	@%p28 st.global.b32 [ %rd36 + 0 ], { %r114 };
	// end inline asm
	.loc	1 41 4                          // cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py:41:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vm/cvmvuf5y3f4zrbhjwxryketil7nmgvgeo4mi64alpmjcjfxwa2tw.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 166                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 109
.b8 118
.b8 117
.b8 102
.b8 53
.b8 121
.b8 51
.b8 102
.b8 52
.b8 122
.b8 114
.b8 98
.b8 104
.b8 106
.b8 119
.b8 120
.b8 114
.b8 121
.b8 107
.b8 101
.b8 116
.b8 105
.b8 108
.b8 55
.b8 110
.b8 109
.b8 103
.b8 118
.b8 103
.b8 101
.b8 111
.b8 52
.b8 109
.b8 105
.b8 54
.b8 52
.b8 97
.b8 108
.b8 112
.b8 109
.b8 106
.b8 99
.b8 106
.b8 102
.b8 120
.b8 119
.b8 97
.b8 50
.b8 116
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x18 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 118
.b8 95
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x90:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
