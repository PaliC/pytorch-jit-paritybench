#loc = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":19:0)
#loc1 = loc(unknown)
#loc12 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":36:57)
#loc20 = loc(callsite(#loc1 at #loc12))
module {
  tt.func public @triton_per_fused_mv_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc3)
    %2 = arith.muli %0, %c1024_i32 : i32 loc(#loc4)
    %3 = tt.splat %2 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %1, %3 : tensor<1024xi32> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc6)
    %7 = tt.load %6 : tensor<1024x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %1 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc8)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>> loc(#loc9)
    %11 = arith.mulf %7, %10 : tensor<1024xf32> loc(#loc10)
    %12 = "tt.reduce"(%11) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc12)), %arg6: f32 loc(callsite(#loc1 at #loc12))):
      %17 = arith.addf %arg5, %arg6 : f32 loc(#loc23)
      tt.reduce.return %17 : f32 loc(#loc19)
    }) : (tensor<1024xf32>) -> f32 loc(#loc19)
    %13 = arith.addf %12, %cst : f32 loc(#loc22)
    %14 = tt.splat %13 : f32 -> tensor<1xf32> loc(#loc22)
    %15 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc16)
    %16 = tt.splat %15 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc16)
    tt.store %16, %14 : tensor<1x!tt.ptr<f32>> loc(#loc17)
    tt.return loc(#loc18)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":24:28)
#loc3 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":27:26)
#loc4 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":32:40)
#loc5 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":32:35)
#loc6 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":32:30)
#loc7 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":32:45)
#loc8 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":33:30)
#loc9 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":33:35)
#loc10 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":34:18)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc15 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":36:44)
#loc16 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":37:25)
#loc17 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":37:36)
#loc18 = loc("inductor_cache/fy/cfyyswdgbdrt7qtptz5jqa6he25pm65v7neiuwukybmjpmfotqrw.py":37:4)
#loc19 = loc(callsite(#loc11 at #loc12))
#loc21 = loc(callsite(#loc13 at #loc11))
#loc22 = loc(callsite(#loc14 at #loc15))
#loc23 = loc(callsite(#loc21 at #loc12))
