; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_mul_sub_sum_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, i32 %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %13 = shl i32 %12, 3, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 31, !dbg !12
  %16 = shl i32 %14, 2, !dbg !12
  %17 = and i32 %16, 4, !dbg !12
  %18 = and i32 %14, 7, !dbg !12
  %19 = or disjoint i32 %13, %17, !dbg !13
  %20 = or disjoint i32 %13, %18, !dbg !13
  %21 = icmp slt i32 %19, 16, !dbg !14
  %22 = icmp slt i32 %20, 16, !dbg !14
  %23 = lshr i32 %14, 5, !dbg !15
  %24 = shl i32 %14, 1, !dbg !16
  %25 = and i32 %24, 252, !dbg !16
  %26 = shl i32 %19, 6, !dbg !17
  %27 = or disjoint i32 %26, %25, !dbg !18
  %28 = sext i32 %27 to i64, !dbg !19
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !19
  %30 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %29, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #3, !dbg !20
  %31 = extractvalue { i32, i32, i32, i32 } %30, 0, !dbg !20
  %32 = extractvalue { i32, i32, i32, i32 } %30, 1, !dbg !20
  %33 = extractvalue { i32, i32, i32, i32 } %30, 2, !dbg !20
  %34 = extractvalue { i32, i32, i32, i32 } %30, 3, !dbg !20
  %35 = bitcast i32 %31 to float, !dbg !20
  %36 = bitcast i32 %32 to float, !dbg !20
  %37 = bitcast i32 %33 to float, !dbg !20
  %38 = bitcast i32 %34 to float, !dbg !20
  %39 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !21
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %39, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #3, !dbg !22
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !22
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !22
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !22
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !22
  %45 = bitcast i32 %41 to float, !dbg !22
  %46 = bitcast i32 %42 to float, !dbg !22
  %47 = bitcast i32 %43 to float, !dbg !22
  %48 = bitcast i32 %44 to float, !dbg !22
  %49 = getelementptr float, ptr addrspace(1) %2, i64 %28, !dbg !23
  %50 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %49, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #3, !dbg !24
  %51 = extractvalue { i32, i32, i32, i32 } %50, 0, !dbg !24
  %52 = extractvalue { i32, i32, i32, i32 } %50, 1, !dbg !24
  %53 = extractvalue { i32, i32, i32, i32 } %50, 2, !dbg !24
  %54 = extractvalue { i32, i32, i32, i32 } %50, 3, !dbg !24
  %55 = bitcast i32 %51 to float, !dbg !24
  %56 = bitcast i32 %52 to float, !dbg !24
  %57 = bitcast i32 %53 to float, !dbg !24
  %58 = bitcast i32 %54 to float, !dbg !24
  %59 = fmul float %35, %45, !dbg !25
  %60 = fmul float %36, %46, !dbg !25
  %61 = fmul float %37, %47, !dbg !25
  %62 = fmul float %38, %48, !dbg !25
  %63 = fmul float %59, %45, !dbg !26
  %64 = fmul float %60, %46, !dbg !26
  %65 = fmul float %61, %47, !dbg !26
  %66 = fmul float %62, %48, !dbg !26
  %67 = select i1 %21, float %63, float 0.000000e+00, !dbg !27
  %68 = select i1 %21, float %64, float 0.000000e+00, !dbg !27
  %69 = select i1 %21, float %65, float 0.000000e+00, !dbg !27
  %70 = select i1 %21, float %66, float 0.000000e+00, !dbg !27
  %71 = or disjoint i32 %17, 1, !dbg !28
  %72 = or disjoint i32 %17, 2, !dbg !28
  %73 = or disjoint i32 %17, 3, !dbg !28
  %74 = bitcast float %67 to i32, !dbg !28
  %75 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %74, i32 16, i32 31), !dbg !28
  %76 = bitcast i32 %75 to float, !dbg !28
  %77 = fadd float %67, %76, !dbg !32
  %78 = bitcast float %77 to i32, !dbg !28
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 8, i32 31), !dbg !28
  %80 = bitcast i32 %79 to float, !dbg !28
  %81 = fadd float %77, %80, !dbg !32
  %82 = bitcast float %81 to i32, !dbg !28
  %83 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %82, i32 4, i32 31), !dbg !28
  %84 = bitcast i32 %83 to float, !dbg !28
  %85 = fadd float %81, %84, !dbg !32
  %86 = bitcast float %85 to i32, !dbg !28
  %87 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %86, i32 2, i32 31), !dbg !28
  %88 = bitcast i32 %87 to float, !dbg !28
  %89 = fadd float %85, %88, !dbg !32
  %90 = bitcast float %68 to i32, !dbg !28
  %91 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %90, i32 16, i32 31), !dbg !28
  %92 = bitcast i32 %91 to float, !dbg !28
  %93 = fadd float %68, %92, !dbg !32
  %94 = bitcast float %93 to i32, !dbg !28
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 8, i32 31), !dbg !28
  %96 = bitcast i32 %95 to float, !dbg !28
  %97 = fadd float %93, %96, !dbg !32
  %98 = bitcast float %97 to i32, !dbg !28
  %99 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %98, i32 4, i32 31), !dbg !28
  %100 = bitcast i32 %99 to float, !dbg !28
  %101 = fadd float %97, %100, !dbg !32
  %102 = bitcast float %101 to i32, !dbg !28
  %103 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %102, i32 2, i32 31), !dbg !28
  %104 = bitcast i32 %103 to float, !dbg !28
  %105 = fadd float %101, %104, !dbg !32
  %106 = bitcast float %69 to i32, !dbg !28
  %107 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %106, i32 16, i32 31), !dbg !28
  %108 = bitcast i32 %107 to float, !dbg !28
  %109 = fadd float %69, %108, !dbg !32
  %110 = bitcast float %109 to i32, !dbg !28
  %111 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %110, i32 8, i32 31), !dbg !28
  %112 = bitcast i32 %111 to float, !dbg !28
  %113 = fadd float %109, %112, !dbg !32
  %114 = bitcast float %113 to i32, !dbg !28
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 4, i32 31), !dbg !28
  %116 = bitcast i32 %115 to float, !dbg !28
  %117 = fadd float %113, %116, !dbg !32
  %118 = bitcast float %117 to i32, !dbg !28
  %119 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %118, i32 2, i32 31), !dbg !28
  %120 = bitcast i32 %119 to float, !dbg !28
  %121 = fadd float %117, %120, !dbg !32
  %122 = bitcast float %70 to i32, !dbg !28
  %123 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %122, i32 16, i32 31), !dbg !28
  %124 = bitcast i32 %123 to float, !dbg !28
  %125 = fadd float %70, %124, !dbg !32
  %126 = bitcast float %125 to i32, !dbg !28
  %127 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %126, i32 8, i32 31), !dbg !28
  %128 = bitcast i32 %127 to float, !dbg !28
  %129 = fadd float %125, %128, !dbg !32
  %130 = bitcast float %129 to i32, !dbg !28
  %131 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %130, i32 4, i32 31), !dbg !28
  %132 = bitcast i32 %131 to float, !dbg !28
  %133 = fadd float %129, %132, !dbg !32
  %134 = bitcast float %133 to i32, !dbg !28
  %135 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %134, i32 2, i32 31), !dbg !28
  %136 = bitcast i32 %135 to float, !dbg !28
  %137 = fadd float %133, %136, !dbg !32
  %138 = icmp samesign ult i32 %15, 2, !dbg !28
  %139 = and i32 %23, 3, !dbg !28
  %140 = shl nuw nsw i32 %17, 2, !dbg !28
  %141 = or disjoint i32 %140, %139, !dbg !28
  %142 = zext nneg i32 %141 to i64, !dbg !28
  %143 = getelementptr float, ptr addrspace(3) @global_smem, i64 %142, !dbg !28
  %144 = bitcast float %89 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %143, <1 x i32> %144, i1 %138) #3, !dbg !28
  %145 = shl nuw nsw i32 %71, 2, !dbg !28
  %146 = or disjoint i32 %145, %139, !dbg !28
  %147 = zext nneg i32 %146 to i64, !dbg !28
  %148 = getelementptr float, ptr addrspace(3) @global_smem, i64 %147, !dbg !28
  %149 = bitcast float %105 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %148, <1 x i32> %149, i1 %138) #3, !dbg !28
  %150 = shl nuw nsw i32 %72, 2, !dbg !28
  %151 = or disjoint i32 %150, %139, !dbg !28
  %152 = zext nneg i32 %151 to i64, !dbg !28
  %153 = getelementptr float, ptr addrspace(3) @global_smem, i64 %152, !dbg !28
  %154 = bitcast float %121 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %153, <1 x i32> %154, i1 %138) #3, !dbg !28
  %155 = shl nuw nsw i32 %73, 2, !dbg !28
  %156 = or disjoint i32 %155, %139, !dbg !28
  %157 = zext nneg i32 %156 to i64, !dbg !28
  %158 = getelementptr float, ptr addrspace(3) @global_smem, i64 %157, !dbg !28
  %159 = bitcast float %137 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %158, <1 x i32> %159, i1 %138) #3, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %160 = icmp slt i32 %14, 32, !dbg !28
  %161 = sext i32 %14 to i64, !dbg !28
  %162 = getelementptr float, ptr addrspace(3) @global_smem, i64 %161, !dbg !28
  %163 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %162, i1 %160) #3, !dbg !28
  %164 = bitcast i32 %163 to float, !dbg !28
  %165 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %163, i32 2, i32 31), !dbg !28
  %166 = bitcast i32 %165 to float, !dbg !28
  %167 = fadd float %164, %166, !dbg !32
  %168 = bitcast float %167 to i32, !dbg !28
  %169 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %168, i32 1, i32 31), !dbg !28
  %170 = bitcast i32 %169 to float, !dbg !28
  %171 = fadd float %167, %170, !dbg !32
  %172 = and i32 %14, 3, !dbg !28
  %173 = icmp eq i32 %172, 0, !dbg !28
  %174 = and i1 %160, %173, !dbg !28
  %175 = bitcast float %171 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %162, <1 x i32> %175, i1 %174) #3, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %176 = zext nneg i32 %140 to i64, !dbg !28
  %177 = getelementptr float, ptr addrspace(3) @global_smem, i64 %176, !dbg !28
  %178 = load float, ptr addrspace(3) %177, align 16, !dbg !28
  %179 = zext nneg i32 %145 to i64, !dbg !28
  %180 = getelementptr float, ptr addrspace(3) @global_smem, i64 %179, !dbg !28
  %181 = load float, ptr addrspace(3) %180, align 16, !dbg !28
  %182 = zext nneg i32 %150 to i64, !dbg !28
  %183 = getelementptr float, ptr addrspace(3) @global_smem, i64 %182, !dbg !28
  %184 = load float, ptr addrspace(3) %183, align 16, !dbg !28
  %185 = zext nneg i32 %155 to i64, !dbg !28
  %186 = getelementptr float, ptr addrspace(3) @global_smem, i64 %185, !dbg !28
  %187 = load float, ptr addrspace(3) %186, align 16, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %188 = zext nneg i32 %17 to i64, !dbg !34
  %189 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %188, !dbg !34
  %190 = bitcast float %178 to i32, !dbg !34
  %191 = bitcast float %181 to i32, !dbg !34
  %192 = bitcast float %184 to i32, !dbg !34
  %193 = bitcast float %187 to i32, !dbg !34
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %189, i32 %190, i32 %191, i32 %192, i32 %193, i1 true) #3, !dbg !34
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %194 = zext nneg i32 %18 to i64, !dbg !34
  %195 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %194, !dbg !34
  %196 = load i32, ptr addrspace(3) %195, align 4, !dbg !34
  %197 = select i1 %21, float %59, float 0.000000e+00, !dbg !35
  %198 = select i1 %21, float %60, float 0.000000e+00, !dbg !35
  %199 = select i1 %21, float %61, float 0.000000e+00, !dbg !35
  %200 = select i1 %21, float %62, float 0.000000e+00, !dbg !35
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %201 = bitcast float %197 to i32, !dbg !36
  %202 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %201, i32 16, i32 31), !dbg !36
  %203 = bitcast i32 %202 to float, !dbg !36
  %204 = fadd float %197, %203, !dbg !38
  %205 = bitcast float %204 to i32, !dbg !36
  %206 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %205, i32 8, i32 31), !dbg !36
  %207 = bitcast i32 %206 to float, !dbg !36
  %208 = fadd float %204, %207, !dbg !38
  %209 = bitcast float %208 to i32, !dbg !36
  %210 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %209, i32 4, i32 31), !dbg !36
  %211 = bitcast i32 %210 to float, !dbg !36
  %212 = fadd float %208, %211, !dbg !38
  %213 = bitcast float %212 to i32, !dbg !36
  %214 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %213, i32 2, i32 31), !dbg !36
  %215 = bitcast i32 %214 to float, !dbg !36
  %216 = fadd float %212, %215, !dbg !38
  %217 = bitcast float %198 to i32, !dbg !36
  %218 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %217, i32 16, i32 31), !dbg !36
  %219 = bitcast i32 %218 to float, !dbg !36
  %220 = fadd float %198, %219, !dbg !38
  %221 = bitcast float %220 to i32, !dbg !36
  %222 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %221, i32 8, i32 31), !dbg !36
  %223 = bitcast i32 %222 to float, !dbg !36
  %224 = fadd float %220, %223, !dbg !38
  %225 = bitcast float %224 to i32, !dbg !36
  %226 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %225, i32 4, i32 31), !dbg !36
  %227 = bitcast i32 %226 to float, !dbg !36
  %228 = fadd float %224, %227, !dbg !38
  %229 = bitcast float %228 to i32, !dbg !36
  %230 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %229, i32 2, i32 31), !dbg !36
  %231 = bitcast i32 %230 to float, !dbg !36
  %232 = fadd float %228, %231, !dbg !38
  %233 = bitcast float %199 to i32, !dbg !36
  %234 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %233, i32 16, i32 31), !dbg !36
  %235 = bitcast i32 %234 to float, !dbg !36
  %236 = fadd float %199, %235, !dbg !38
  %237 = bitcast float %236 to i32, !dbg !36
  %238 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %237, i32 8, i32 31), !dbg !36
  %239 = bitcast i32 %238 to float, !dbg !36
  %240 = fadd float %236, %239, !dbg !38
  %241 = bitcast float %240 to i32, !dbg !36
  %242 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %241, i32 4, i32 31), !dbg !36
  %243 = bitcast i32 %242 to float, !dbg !36
  %244 = fadd float %240, %243, !dbg !38
  %245 = bitcast float %244 to i32, !dbg !36
  %246 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %245, i32 2, i32 31), !dbg !36
  %247 = bitcast i32 %246 to float, !dbg !36
  %248 = fadd float %244, %247, !dbg !38
  %249 = bitcast float %200 to i32, !dbg !36
  %250 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %249, i32 16, i32 31), !dbg !36
  %251 = bitcast i32 %250 to float, !dbg !36
  %252 = fadd float %200, %251, !dbg !38
  %253 = bitcast float %252 to i32, !dbg !36
  %254 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %253, i32 8, i32 31), !dbg !36
  %255 = bitcast i32 %254 to float, !dbg !36
  %256 = fadd float %252, %255, !dbg !38
  %257 = bitcast float %256 to i32, !dbg !36
  %258 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %257, i32 4, i32 31), !dbg !36
  %259 = bitcast i32 %258 to float, !dbg !36
  %260 = fadd float %256, %259, !dbg !38
  %261 = bitcast float %260 to i32, !dbg !36
  %262 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %261, i32 2, i32 31), !dbg !36
  %263 = bitcast i32 %262 to float, !dbg !36
  %264 = fadd float %260, %263, !dbg !38
  %265 = bitcast float %216 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %143, <1 x i32> %265, i1 %138) #3, !dbg !36
  %266 = bitcast float %232 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %148, <1 x i32> %266, i1 %138) #3, !dbg !36
  %267 = bitcast float %248 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %153, <1 x i32> %267, i1 %138) #3, !dbg !36
  %268 = bitcast float %264 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %158, <1 x i32> %268, i1 %138) #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %269 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %162, i1 %160) #3, !dbg !36
  %270 = bitcast i32 %269 to float, !dbg !36
  %271 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %269, i32 2, i32 31), !dbg !36
  %272 = bitcast i32 %271 to float, !dbg !36
  %273 = fadd float %270, %272, !dbg !38
  %274 = bitcast float %273 to i32, !dbg !36
  %275 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %274, i32 1, i32 31), !dbg !36
  %276 = bitcast i32 %275 to float, !dbg !36
  %277 = fadd float %273, %276, !dbg !38
  %278 = bitcast float %277 to <1 x i32>, !dbg !36
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %162, <1 x i32> %278, i1 %174) #3, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !36
  %279 = load float, ptr addrspace(3) %177, align 16, !dbg !36
  %280 = load float, ptr addrspace(3) %180, align 16, !dbg !36
  %281 = load float, ptr addrspace(3) %183, align 16, !dbg !36
  %282 = load float, ptr addrspace(3) %186, align 16, !dbg !36
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %283 = bitcast float %279 to i32, !dbg !39
  %284 = bitcast float %280 to i32, !dbg !39
  %285 = bitcast float %281 to i32, !dbg !39
  %286 = bitcast float %282 to i32, !dbg !39
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %189, i32 %283, i32 %284, i32 %285, i32 %286, i1 true) #3, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %287 = load i32, ptr addrspace(3) %195, align 4, !dbg !39
  %288 = fmul float %59, %55, !dbg !40
  %289 = fmul float %60, %56, !dbg !40
  %290 = fmul float %61, %57, !dbg !40
  %291 = fmul float %62, %58, !dbg !40
  %292 = select i1 %21, float %288, float 0.000000e+00, !dbg !41
  %293 = select i1 %21, float %289, float 0.000000e+00, !dbg !41
  %294 = select i1 %21, float %290, float 0.000000e+00, !dbg !41
  %295 = select i1 %21, float %291, float 0.000000e+00, !dbg !41
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %296 = bitcast float %292 to i32, !dbg !42
  %297 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %296, i32 16, i32 31), !dbg !42
  %298 = bitcast i32 %297 to float, !dbg !42
  %299 = fadd float %292, %298, !dbg !44
  %300 = bitcast float %299 to i32, !dbg !42
  %301 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %300, i32 8, i32 31), !dbg !42
  %302 = bitcast i32 %301 to float, !dbg !42
  %303 = fadd float %299, %302, !dbg !44
  %304 = bitcast float %303 to i32, !dbg !42
  %305 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %304, i32 4, i32 31), !dbg !42
  %306 = bitcast i32 %305 to float, !dbg !42
  %307 = fadd float %303, %306, !dbg !44
  %308 = bitcast float %307 to i32, !dbg !42
  %309 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %308, i32 2, i32 31), !dbg !42
  %310 = bitcast i32 %309 to float, !dbg !42
  %311 = fadd float %307, %310, !dbg !44
  %312 = bitcast float %293 to i32, !dbg !42
  %313 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %312, i32 16, i32 31), !dbg !42
  %314 = bitcast i32 %313 to float, !dbg !42
  %315 = fadd float %293, %314, !dbg !44
  %316 = bitcast float %315 to i32, !dbg !42
  %317 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %316, i32 8, i32 31), !dbg !42
  %318 = bitcast i32 %317 to float, !dbg !42
  %319 = fadd float %315, %318, !dbg !44
  %320 = bitcast float %319 to i32, !dbg !42
  %321 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %320, i32 4, i32 31), !dbg !42
  %322 = bitcast i32 %321 to float, !dbg !42
  %323 = fadd float %319, %322, !dbg !44
  %324 = bitcast float %323 to i32, !dbg !42
  %325 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %324, i32 2, i32 31), !dbg !42
  %326 = bitcast i32 %325 to float, !dbg !42
  %327 = fadd float %323, %326, !dbg !44
  %328 = bitcast float %294 to i32, !dbg !42
  %329 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %328, i32 16, i32 31), !dbg !42
  %330 = bitcast i32 %329 to float, !dbg !42
  %331 = fadd float %294, %330, !dbg !44
  %332 = bitcast float %331 to i32, !dbg !42
  %333 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %332, i32 8, i32 31), !dbg !42
  %334 = bitcast i32 %333 to float, !dbg !42
  %335 = fadd float %331, %334, !dbg !44
  %336 = bitcast float %335 to i32, !dbg !42
  %337 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %336, i32 4, i32 31), !dbg !42
  %338 = bitcast i32 %337 to float, !dbg !42
  %339 = fadd float %335, %338, !dbg !44
  %340 = bitcast float %339 to i32, !dbg !42
  %341 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %340, i32 2, i32 31), !dbg !42
  %342 = bitcast i32 %341 to float, !dbg !42
  %343 = fadd float %339, %342, !dbg !44
  %344 = bitcast float %295 to i32, !dbg !42
  %345 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %344, i32 16, i32 31), !dbg !42
  %346 = bitcast i32 %345 to float, !dbg !42
  %347 = fadd float %295, %346, !dbg !44
  %348 = bitcast float %347 to i32, !dbg !42
  %349 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %348, i32 8, i32 31), !dbg !42
  %350 = bitcast i32 %349 to float, !dbg !42
  %351 = fadd float %347, %350, !dbg !44
  %352 = bitcast float %351 to i32, !dbg !42
  %353 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %352, i32 4, i32 31), !dbg !42
  %354 = bitcast i32 %353 to float, !dbg !42
  %355 = fadd float %351, %354, !dbg !44
  %356 = bitcast float %355 to i32, !dbg !42
  %357 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %356, i32 2, i32 31), !dbg !42
  %358 = bitcast i32 %357 to float, !dbg !42
  %359 = fadd float %355, %358, !dbg !44
  %360 = bitcast float %311 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %143, <1 x i32> %360, i1 %138) #3, !dbg !42
  %361 = bitcast float %327 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %148, <1 x i32> %361, i1 %138) #3, !dbg !42
  %362 = bitcast float %343 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %153, <1 x i32> %362, i1 %138) #3, !dbg !42
  %363 = bitcast float %359 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %158, <1 x i32> %363, i1 %138) #3, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %364 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %162, i1 %160) #3, !dbg !42
  %365 = bitcast i32 %364 to float, !dbg !42
  %366 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %364, i32 2, i32 31), !dbg !42
  %367 = bitcast i32 %366 to float, !dbg !42
  %368 = fadd float %365, %367, !dbg !44
  %369 = bitcast float %368 to i32, !dbg !42
  %370 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %369, i32 1, i32 31), !dbg !42
  %371 = bitcast i32 %370 to float, !dbg !42
  %372 = fadd float %368, %371, !dbg !44
  %373 = bitcast float %372 to <1 x i32>, !dbg !42
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %162, <1 x i32> %373, i1 %174) #3, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !42
  %374 = load i32, ptr addrspace(3) %177, align 16, !dbg !42
  %375 = load i32, ptr addrspace(3) %180, align 16, !dbg !42
  %376 = load i32, ptr addrspace(3) %183, align 16, !dbg !42
  %377 = load i32, ptr addrspace(3) %186, align 16, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !45
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %189, i32 %374, i32 %375, i32 %376, i32 %377, i1 true) #3, !dbg !45
  tail call void @llvm.nvvm.barrier0(), !dbg !45
  %378 = load i32, ptr addrspace(3) %195, align 4, !dbg !45
  %379 = fmul float %35, %55, !dbg !46
  %380 = fmul float %36, %56, !dbg !46
  %381 = fmul float %37, %57, !dbg !46
  %382 = fmul float %38, %58, !dbg !46
  %383 = select i1 %21, float %379, float 0.000000e+00, !dbg !47
  %384 = select i1 %21, float %380, float 0.000000e+00, !dbg !47
  %385 = select i1 %21, float %381, float 0.000000e+00, !dbg !47
  %386 = select i1 %21, float %382, float 0.000000e+00, !dbg !47
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %387 = bitcast float %383 to i32, !dbg !48
  %388 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %387, i32 16, i32 31), !dbg !48
  %389 = bitcast i32 %388 to float, !dbg !48
  %390 = fadd float %383, %389, !dbg !50
  %391 = bitcast float %390 to i32, !dbg !48
  %392 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %391, i32 8, i32 31), !dbg !48
  %393 = bitcast i32 %392 to float, !dbg !48
  %394 = fadd float %390, %393, !dbg !50
  %395 = bitcast float %394 to i32, !dbg !48
  %396 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %395, i32 4, i32 31), !dbg !48
  %397 = bitcast i32 %396 to float, !dbg !48
  %398 = fadd float %394, %397, !dbg !50
  %399 = bitcast float %398 to i32, !dbg !48
  %400 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %399, i32 2, i32 31), !dbg !48
  %401 = bitcast i32 %400 to float, !dbg !48
  %402 = fadd float %398, %401, !dbg !50
  %403 = bitcast float %384 to i32, !dbg !48
  %404 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %403, i32 16, i32 31), !dbg !48
  %405 = bitcast i32 %404 to float, !dbg !48
  %406 = fadd float %384, %405, !dbg !50
  %407 = bitcast float %406 to i32, !dbg !48
  %408 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %407, i32 8, i32 31), !dbg !48
  %409 = bitcast i32 %408 to float, !dbg !48
  %410 = fadd float %406, %409, !dbg !50
  %411 = bitcast float %410 to i32, !dbg !48
  %412 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %411, i32 4, i32 31), !dbg !48
  %413 = bitcast i32 %412 to float, !dbg !48
  %414 = fadd float %410, %413, !dbg !50
  %415 = bitcast float %414 to i32, !dbg !48
  %416 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %415, i32 2, i32 31), !dbg !48
  %417 = bitcast i32 %416 to float, !dbg !48
  %418 = fadd float %414, %417, !dbg !50
  %419 = bitcast float %385 to i32, !dbg !48
  %420 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %419, i32 16, i32 31), !dbg !48
  %421 = bitcast i32 %420 to float, !dbg !48
  %422 = fadd float %385, %421, !dbg !50
  %423 = bitcast float %422 to i32, !dbg !48
  %424 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %423, i32 8, i32 31), !dbg !48
  %425 = bitcast i32 %424 to float, !dbg !48
  %426 = fadd float %422, %425, !dbg !50
  %427 = bitcast float %426 to i32, !dbg !48
  %428 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %427, i32 4, i32 31), !dbg !48
  %429 = bitcast i32 %428 to float, !dbg !48
  %430 = fadd float %426, %429, !dbg !50
  %431 = bitcast float %430 to i32, !dbg !48
  %432 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %431, i32 2, i32 31), !dbg !48
  %433 = bitcast i32 %432 to float, !dbg !48
  %434 = fadd float %430, %433, !dbg !50
  %435 = bitcast float %386 to i32, !dbg !48
  %436 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %435, i32 16, i32 31), !dbg !48
  %437 = bitcast i32 %436 to float, !dbg !48
  %438 = fadd float %386, %437, !dbg !50
  %439 = bitcast float %438 to i32, !dbg !48
  %440 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %439, i32 8, i32 31), !dbg !48
  %441 = bitcast i32 %440 to float, !dbg !48
  %442 = fadd float %438, %441, !dbg !50
  %443 = bitcast float %442 to i32, !dbg !48
  %444 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %443, i32 4, i32 31), !dbg !48
  %445 = bitcast i32 %444 to float, !dbg !48
  %446 = fadd float %442, %445, !dbg !50
  %447 = bitcast float %446 to i32, !dbg !48
  %448 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %447, i32 2, i32 31), !dbg !48
  %449 = bitcast i32 %448 to float, !dbg !48
  %450 = fadd float %446, %449, !dbg !50
  %451 = bitcast float %402 to <1 x i32>, !dbg !48
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %143, <1 x i32> %451, i1 %138) #3, !dbg !48
  %452 = bitcast float %418 to <1 x i32>, !dbg !48
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %148, <1 x i32> %452, i1 %138) #3, !dbg !48
  %453 = bitcast float %434 to <1 x i32>, !dbg !48
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %153, <1 x i32> %453, i1 %138) #3, !dbg !48
  %454 = bitcast float %450 to <1 x i32>, !dbg !48
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %158, <1 x i32> %454, i1 %138) #3, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %455 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %162, i1 %160) #3, !dbg !48
  %456 = bitcast i32 %455 to float, !dbg !48
  %457 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %455, i32 2, i32 31), !dbg !48
  %458 = bitcast i32 %457 to float, !dbg !48
  %459 = fadd float %456, %458, !dbg !50
  %460 = bitcast float %459 to i32, !dbg !48
  %461 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %460, i32 1, i32 31), !dbg !48
  %462 = bitcast i32 %461 to float, !dbg !48
  %463 = fadd float %459, %462, !dbg !50
  %464 = bitcast float %463 to <1 x i32>, !dbg !48
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %162, <1 x i32> %464, i1 %174) #3, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !48
  %465 = load i32, ptr addrspace(3) %177, align 16, !dbg !48
  %466 = load i32, ptr addrspace(3) %180, align 16, !dbg !48
  %467 = load i32, ptr addrspace(3) %183, align 16, !dbg !48
  %468 = load i32, ptr addrspace(3) %186, align 16, !dbg !48
  tail call void @llvm.nvvm.barrier0(), !dbg !51
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %189, i32 %465, i32 %466, i32 %467, i32 %468, i1 true) #3, !dbg !51
  tail call void @llvm.nvvm.barrier0(), !dbg !51
  %469 = load i32, ptr addrspace(3) %195, align 4, !dbg !51
  %470 = select i1 %21, float %35, float 0.000000e+00, !dbg !52
  %471 = select i1 %21, float %36, float 0.000000e+00, !dbg !52
  %472 = select i1 %21, float %37, float 0.000000e+00, !dbg !52
  %473 = select i1 %21, float %38, float 0.000000e+00, !dbg !52
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %474 = bitcast float %470 to i32, !dbg !53
  %475 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %474, i32 16, i32 31), !dbg !53
  %476 = bitcast i32 %475 to float, !dbg !53
  %477 = fadd float %470, %476, !dbg !55
  %478 = bitcast float %477 to i32, !dbg !53
  %479 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %478, i32 8, i32 31), !dbg !53
  %480 = bitcast i32 %479 to float, !dbg !53
  %481 = fadd float %477, %480, !dbg !55
  %482 = bitcast float %481 to i32, !dbg !53
  %483 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %482, i32 4, i32 31), !dbg !53
  %484 = bitcast i32 %483 to float, !dbg !53
  %485 = fadd float %481, %484, !dbg !55
  %486 = bitcast float %485 to i32, !dbg !53
  %487 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %486, i32 2, i32 31), !dbg !53
  %488 = bitcast i32 %487 to float, !dbg !53
  %489 = fadd float %485, %488, !dbg !55
  %490 = bitcast float %471 to i32, !dbg !53
  %491 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %490, i32 16, i32 31), !dbg !53
  %492 = bitcast i32 %491 to float, !dbg !53
  %493 = fadd float %471, %492, !dbg !55
  %494 = bitcast float %493 to i32, !dbg !53
  %495 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %494, i32 8, i32 31), !dbg !53
  %496 = bitcast i32 %495 to float, !dbg !53
  %497 = fadd float %493, %496, !dbg !55
  %498 = bitcast float %497 to i32, !dbg !53
  %499 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %498, i32 4, i32 31), !dbg !53
  %500 = bitcast i32 %499 to float, !dbg !53
  %501 = fadd float %497, %500, !dbg !55
  %502 = bitcast float %501 to i32, !dbg !53
  %503 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %502, i32 2, i32 31), !dbg !53
  %504 = bitcast i32 %503 to float, !dbg !53
  %505 = fadd float %501, %504, !dbg !55
  %506 = bitcast float %472 to i32, !dbg !53
  %507 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %506, i32 16, i32 31), !dbg !53
  %508 = bitcast i32 %507 to float, !dbg !53
  %509 = fadd float %472, %508, !dbg !55
  %510 = bitcast float %509 to i32, !dbg !53
  %511 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %510, i32 8, i32 31), !dbg !53
  %512 = bitcast i32 %511 to float, !dbg !53
  %513 = fadd float %509, %512, !dbg !55
  %514 = bitcast float %513 to i32, !dbg !53
  %515 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %514, i32 4, i32 31), !dbg !53
  %516 = bitcast i32 %515 to float, !dbg !53
  %517 = fadd float %513, %516, !dbg !55
  %518 = bitcast float %517 to i32, !dbg !53
  %519 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %518, i32 2, i32 31), !dbg !53
  %520 = bitcast i32 %519 to float, !dbg !53
  %521 = fadd float %517, %520, !dbg !55
  %522 = bitcast float %473 to i32, !dbg !53
  %523 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %522, i32 16, i32 31), !dbg !53
  %524 = bitcast i32 %523 to float, !dbg !53
  %525 = fadd float %473, %524, !dbg !55
  %526 = bitcast float %525 to i32, !dbg !53
  %527 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %526, i32 8, i32 31), !dbg !53
  %528 = bitcast i32 %527 to float, !dbg !53
  %529 = fadd float %525, %528, !dbg !55
  %530 = bitcast float %529 to i32, !dbg !53
  %531 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %530, i32 4, i32 31), !dbg !53
  %532 = bitcast i32 %531 to float, !dbg !53
  %533 = fadd float %529, %532, !dbg !55
  %534 = bitcast float %533 to i32, !dbg !53
  %535 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %534, i32 2, i32 31), !dbg !53
  %536 = bitcast i32 %535 to float, !dbg !53
  %537 = fadd float %533, %536, !dbg !55
  %538 = bitcast float %489 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %143, <1 x i32> %538, i1 %138) #3, !dbg !53
  %539 = bitcast float %505 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %148, <1 x i32> %539, i1 %138) #3, !dbg !53
  %540 = bitcast float %521 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %153, <1 x i32> %540, i1 %138) #3, !dbg !53
  %541 = bitcast float %537 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %158, <1 x i32> %541, i1 %138) #3, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %542 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %162, i1 %160) #3, !dbg !53
  %543 = bitcast i32 %542 to float, !dbg !53
  %544 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %542, i32 2, i32 31), !dbg !53
  %545 = bitcast i32 %544 to float, !dbg !53
  %546 = fadd float %543, %545, !dbg !55
  %547 = bitcast float %546 to i32, !dbg !53
  %548 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %547, i32 1, i32 31), !dbg !53
  %549 = bitcast i32 %548 to float, !dbg !53
  %550 = fadd float %546, %549, !dbg !55
  %551 = bitcast float %550 to <1 x i32>, !dbg !53
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %162, <1 x i32> %551, i1 %174) #3, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !53
  %552 = load float, ptr addrspace(3) %177, align 16, !dbg !53
  %553 = load float, ptr addrspace(3) %180, align 16, !dbg !53
  %554 = load float, ptr addrspace(3) %183, align 16, !dbg !53
  %555 = load float, ptr addrspace(3) %186, align 16, !dbg !53
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %556 = bitcast float %552 to i32, !dbg !56
  %557 = bitcast float %553 to i32, !dbg !56
  %558 = bitcast float %554 to i32, !dbg !56
  %559 = bitcast float %555 to i32, !dbg !56
  tail call void asm sideeffect "@$5 st.shared.v4.b32 [ $0 + 0 ], { $1, $2, $3, $4 };", "r,r,r,r,r,b"(ptr addrspace(3) %189, i32 %556, i32 %557, i32 %558, i32 %559, i1 true) #3, !dbg !56
  tail call void @llvm.nvvm.barrier0(), !dbg !56
  %560 = load i32, ptr addrspace(3) %195, align 4, !dbg !56
  %561 = fmul float %178, %552, !dbg !57
  %562 = fmul float %181, %553, !dbg !57
  %563 = fmul float %184, %554, !dbg !57
  %564 = fmul float %187, %555, !dbg !57
  %565 = fmul float %279, %279, !dbg !58
  %566 = fmul float %280, %280, !dbg !58
  %567 = fmul float %281, %281, !dbg !58
  %568 = fmul float %282, %282, !dbg !58
  %569 = fsub float %561, %565, !dbg !59
  %570 = fsub float %562, %566, !dbg !59
  %571 = fsub float %563, %567, !dbg !59
  %572 = fsub float %564, %568, !dbg !59
  %573 = sext i32 %20 to i64, !dbg !60
  %574 = getelementptr float, ptr addrspace(1) %8, i64 %573, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %575 = bitcast float %569 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %189, <1 x i32> %575, i1 true) #3, !dbg !61
  %576 = zext nneg i32 %71 to i64, !dbg !61
  %577 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %576, !dbg !61
  %578 = bitcast float %570 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %577, <1 x i32> %578, i1 true) #3, !dbg !61
  %579 = zext nneg i32 %72 to i64, !dbg !61
  %580 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %579, !dbg !61
  %581 = bitcast float %571 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %580, <1 x i32> %581, i1 true) #3, !dbg !61
  %582 = zext nneg i32 %73 to i64, !dbg !61
  %583 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i64 %582, !dbg !61
  %584 = bitcast float %572 to <1 x i32>, !dbg !61
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %583, <1 x i32> %584, i1 true) #3, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %585 = load i32, ptr addrspace(3) %195, align 4, !dbg !61
  %586 = lshr i32 %15, 3, !dbg !61
  %587 = shl nuw nsw i32 %139, 2, !dbg !61
  %588 = or disjoint i32 %587, %586, !dbg !61
  %589 = icmp eq i32 %588, 0, !dbg !61
  %590 = and i1 %589, %22, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %585, ptr addrspace(1) %574, i1 %590) #3, !dbg !61
  %591 = getelementptr float, ptr addrspace(1) %3, i64 %573, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %196, ptr addrspace(1) %591, i1 %590) #3, !dbg !63
  %592 = getelementptr float, ptr addrspace(1) %4, i64 %573, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %287, ptr addrspace(1) %592, i1 %590) #3, !dbg !65
  %593 = getelementptr float, ptr addrspace(1) %5, i64 %573, !dbg !66
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %378, ptr addrspace(1) %593, i1 %590) #3, !dbg !67
  %594 = getelementptr float, ptr addrspace(1) %6, i64 %573, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %469, ptr addrspace(1) %594, i1 %590) #3, !dbg !69
  %595 = getelementptr float, ptr addrspace(1) %7, i64 %573, !dbg !70
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %560, ptr addrspace(1) %595, i1 %590) #3, !dbg !71
  ret void, !dbg !72
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py", directory: "inductor_cache/42")
!4 = !{ptr @triton_per_fused_mul_sub_sum_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mul_sub_sum_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mul_sub_sum_0", linkageName: "triton_per_fused_mul_sub_sum_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 33, column: 37, scope: !7)
!17 = !DILocation(line: 33, column: 46, scope: !7)
!18 = !DILocation(line: 33, column: 42, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 51, scope: !7)
!21 = !DILocation(line: 34, column: 30, scope: !7)
!22 = !DILocation(line: 34, column: 51, scope: !7)
!23 = !DILocation(line: 35, column: 31, scope: !7)
!24 = !DILocation(line: 35, column: 52, scope: !7)
!25 = !DILocation(line: 36, column: 18, scope: !7)
!26 = !DILocation(line: 37, column: 18, scope: !7)
!27 = !DILocation(line: 39, column: 33, scope: !7)
!28 = !DILocation(line: 267, column: 36, scope: !29, inlinedAt: !31)
!29 = distinct !DILexicalBlockFile(scope: !7, file: !30, discriminator: 0)
!30 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!31 = !DILocation(line: 40, column: 24, scope: !7)
!32 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !31)
!33 = distinct !DILexicalBlockFile(scope: !29, file: !30, discriminator: 0)
!34 = !DILocation(line: 40, column: 27, scope: !7)
!35 = !DILocation(line: 42, column: 34, scope: !7)
!36 = !DILocation(line: 267, column: 36, scope: !29, inlinedAt: !37)
!37 = !DILocation(line: 43, column: 26, scope: !7)
!38 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !37)
!39 = !DILocation(line: 43, column: 29, scope: !7)
!40 = !DILocation(line: 44, column: 19, scope: !7)
!41 = !DILocation(line: 46, column: 35, scope: !7)
!42 = !DILocation(line: 267, column: 36, scope: !29, inlinedAt: !43)
!43 = !DILocation(line: 47, column: 26, scope: !7)
!44 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !43)
!45 = !DILocation(line: 47, column: 29, scope: !7)
!46 = !DILocation(line: 48, column: 19, scope: !7)
!47 = !DILocation(line: 50, column: 35, scope: !7)
!48 = !DILocation(line: 267, column: 36, scope: !29, inlinedAt: !49)
!49 = !DILocation(line: 51, column: 26, scope: !7)
!50 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !49)
!51 = !DILocation(line: 51, column: 29, scope: !7)
!52 = !DILocation(line: 53, column: 35, scope: !7)
!53 = !DILocation(line: 267, column: 36, scope: !29, inlinedAt: !54)
!54 = !DILocation(line: 54, column: 26, scope: !7)
!55 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !54)
!56 = !DILocation(line: 54, column: 29, scope: !7)
!57 = !DILocation(line: 55, column: 19, scope: !7)
!58 = !DILocation(line: 56, column: 20, scope: !7)
!59 = !DILocation(line: 57, column: 20, scope: !7)
!60 = !DILocation(line: 58, column: 25, scope: !7)
!61 = !DILocation(line: 58, column: 37, scope: !7)
!62 = !DILocation(line: 59, column: 25, scope: !7)
!63 = !DILocation(line: 59, column: 36, scope: !7)
!64 = !DILocation(line: 60, column: 25, scope: !7)
!65 = !DILocation(line: 60, column: 37, scope: !7)
!66 = !DILocation(line: 61, column: 25, scope: !7)
!67 = !DILocation(line: 61, column: 37, scope: !7)
!68 = !DILocation(line: 62, column: 25, scope: !7)
!69 = !DILocation(line: 62, column: 37, scope: !7)
!70 = !DILocation(line: 63, column: 25, scope: !7)
!71 = !DILocation(line: 63, column: 37, scope: !7)
!72 = !DILocation(line: 63, column: 4, scope: !7)
