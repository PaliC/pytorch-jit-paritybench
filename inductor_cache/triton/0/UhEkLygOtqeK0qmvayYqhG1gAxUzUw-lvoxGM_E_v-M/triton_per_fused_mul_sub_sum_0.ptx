//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mul_sub_sum_0 // -- Begin function triton_per_fused_mul_sub_sum_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mul_sub_sum_0
.visible .entry triton_per_fused_mul_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused_mul_sub_sum_0_param_8,
	.param .u32 triton_per_fused_mul_sub_sum_0_param_9,
	.param .u32 triton_per_fused_mul_sub_sum_0_param_10
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<64>;
	.reg .b32 	%r<334>;
	.reg .f32 	%f<258>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_per_fused_mul_sub_sum_0_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_mul_sub_sum_0_param_1];
$L__tmp0:
	.loc	1 23 28                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:23:33
	shl.b32 	%r125, %r1, 3;
	ld.param.u64 	%rd12, [triton_per_fused_mul_sub_sum_0_param_2];
	ld.param.u64 	%rd13, [triton_per_fused_mul_sub_sum_0_param_3];
	.loc	1 24 44                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:24:44
	mov.u32 	%r126, %tid.x;
	and.b32  	%r127, %r126, 31;
	ld.param.u64 	%rd14, [triton_per_fused_mul_sub_sum_0_param_4];
	shl.b32 	%r128, %r126, 2;
	ld.param.u64 	%rd15, [triton_per_fused_mul_sub_sum_0_param_5];
	and.b32  	%r129, %r128, 4;
	ld.param.u64 	%rd16, [triton_per_fused_mul_sub_sum_0_param_6];
	and.b32  	%r130, %r126, 7;
	ld.param.u64 	%rd17, [triton_per_fused_mul_sub_sum_0_param_7];
	.loc	1 24 23                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:24:23
	or.b32  	%r131, %r125, %r129;
	ld.param.u64 	%rd18, [triton_per_fused_mul_sub_sum_0_param_8];
	or.b32  	%r132, %r125, %r130;
	.loc	1 25 21                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:25:21
	setp.lt.s32 	%p1, %r131, 16;
	setp.lt.s32 	%p61, %r132, 16;
	.loc	1 33 37                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:33:37
	shl.b32 	%r133, %r126, 1;
	and.b32  	%r134, %r133, 252;
	.loc	1 33 46                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:33:46
	shl.b32 	%r135, %r131, 6;
	.loc	1 33 42                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:33:42
	or.b32  	%r136, %r135, %r134;
	.loc	1 33 30                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:33:30
	mul.wide.s32 	%rd19, %r136, 4;
	add.s64 	%rd1, %rd10, %rd19;
	mov.b32 	%r6, 0;
	.loc	1 33 51                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:33:51
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 34 30                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:34:30
	add.s64 	%rd2, %rd11, %rd19;
	.loc	1 34 51                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:34:51
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 35 31                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:35:31
	add.s64 	%rd3, %rd12, %rd19;
	.loc	1 35 52                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:35:52
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	.loc	1 36 18                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:36:18
	mul.f32 	%f13, %f1, %f5;
	mul.f32 	%f14, %f2, %f6;
	mul.f32 	%f15, %f3, %f7;
	mul.f32 	%f16, %f4, %f8;
	.loc	1 37 18                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:37:18
	mul.f32 	%f17, %f13, %f5;
	mul.f32 	%f18, %f14, %f6;
	mul.f32 	%f19, %f15, %f7;
	mul.f32 	%f20, %f16, %f8;
	.loc	1 39 33                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:39:33
	selp.f32 	%f21, %f17, 0f00000000, %p1;
	selp.f32 	%f22, %f18, 0f00000000, %p1;
	selp.f32 	%f23, %f19, 0f00000000, %p1;
	selp.f32 	%f24, %f20, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r137, %f21;
	shfl.sync.bfly.b32	%r138, %r137, 16, 31, -1;
	mov.b32 	%f25, %r138;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f21, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r139, %f26;
	shfl.sync.bfly.b32	%r140, %r139, 8, 31, -1;
	mov.b32 	%f27, %r140;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r141, %f28;
	shfl.sync.bfly.b32	%r142, %r141, 4, 31, -1;
	mov.b32 	%f29, %r142;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r143, %f30;
	shfl.sync.bfly.b32	%r144, %r143, 2, 31, -1;
	mov.b32 	%f31, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r145, %f22;
	shfl.sync.bfly.b32	%r146, %r145, 16, 31, -1;
	mov.b32 	%f33, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f34, %f22, %f33;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r147, %f34;
	shfl.sync.bfly.b32	%r148, %r147, 8, 31, -1;
	mov.b32 	%f35, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r149, %f36;
	shfl.sync.bfly.b32	%r150, %r149, 4, 31, -1;
	mov.b32 	%f37, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r151, %f38;
	shfl.sync.bfly.b32	%r152, %r151, 2, 31, -1;
	mov.b32 	%f39, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f23;
	shfl.sync.bfly.b32	%r154, %r153, 16, 31, -1;
	mov.b32 	%f41, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f23, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f42;
	shfl.sync.bfly.b32	%r156, %r155, 8, 31, -1;
	mov.b32 	%f43, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f44;
	shfl.sync.bfly.b32	%r158, %r157, 4, 31, -1;
	mov.b32 	%f45, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r159, %f46;
	shfl.sync.bfly.b32	%r160, %r159, 2, 31, -1;
	mov.b32 	%f47, %r160;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r161, %f24;
	shfl.sync.bfly.b32	%r162, %r161, 16, 31, -1;
	mov.b32 	%f49, %r162;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f24, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r163, %f50;
	shfl.sync.bfly.b32	%r164, %r163, 8, 31, -1;
	mov.b32 	%f51, %r164;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r165, %f52;
	shfl.sync.bfly.b32	%r166, %r165, 4, 31, -1;
	mov.b32 	%f53, %r166;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f54;
	shfl.sync.bfly.b32	%r168, %r167, 2, 31, -1;
	mov.b32 	%f55, %r168;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p16, %r127, 2;
	bfe.u32 	%r169, %r126, 5, 2;
	shl.b32 	%r170, %r129, 2;
	or.b32  	%r171, %r170, %r169;
	shl.b32 	%r172, %r171, 2;
	mov.u32 	%r173, global_smem;
	add.s32 	%r26, %r173, %r172;
	mov.b32 	%r27, %f32;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	shl.b32 	%r174, %r129, 4;
	or.b32  	%r175, %r174, 16;
	shl.b32 	%r176, %r169, 2;
	or.b32  	%r177, %r175, %r176;
	add.s32 	%r28, %r173, %r177;
	mov.b32 	%r29, %f40;
	// begin inline asm
	@%p16 st.shared.b32 [ %r28 + 0 ], %r29;
	// end inline asm
	or.b32  	%r178, %r174, 32;
	or.b32  	%r179, %r178, %r176;
	add.s32 	%r30, %r173, %r179;
	mov.b32 	%r31, %f48;
	// begin inline asm
	@%p16 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	or.b32  	%r180, %r174, 48;
	or.b32  	%r181, %r180, %r176;
	add.s32 	%r32, %r173, %r181;
	mov.b32 	%r33, %f56;
	// begin inline asm
	@%p16 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p20, %r126, 32;
	add.s32 	%r35, %r173, %r128;
	// begin inline asm
	@%p20 ld.shared.b32 %r34, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f57, %r34;
	shfl.sync.bfly.b32	%r182, %r34, 2, 31, -1;
	mov.b32 	%f58, %r182;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r183, %f59;
	shfl.sync.bfly.b32	%r184, %r183, 1, 31, -1;
	mov.b32 	%f60, %r184;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r185, %r126, 3;
	setp.eq.s32 	%p62, %r185, 0;
	and.pred  	%p21, %p20, %p62;
	mov.b32 	%r37, %f61;
	// begin inline asm
	@%p21 st.shared.b32 [ %r35 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r186, %r173, %r174;
	ld.shared.f32 	%f62, [%r186];
	add.s32 	%r187, %r173, %r175;
	ld.shared.f32 	%f63, [%r187];
	add.s32 	%r188, %r173, %r178;
	ld.shared.f32 	%f64, [%r188];
	add.s32 	%r189, %r173, %r180;
	ld.shared.f32 	%f65, [%r189];
$L__tmp2:
	.loc	1 40 27                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:40:27
	bar.sync 	0;
	add.s32 	%r38, %r173, %r170;
	mov.b32 	%r39, %f62;
	mov.b32 	%r40, %f63;
	mov.b32 	%r41, %f64;
	mov.b32 	%r42, %f65;
	mov.pred 	%p22, -1;
	// begin inline asm
	@%p22 st.shared.v4.b32 [ %r38 + 0 ], { %r39, %r40, %r41, %r42 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r190, %r130, 2;
	add.s32 	%r191, %r173, %r190;
	ld.shared.u32 	%r120, [%r191];
	.loc	1 42 34                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:42:34
	selp.f32 	%f66, %f13, 0f00000000, %p1;
	selp.f32 	%f67, %f14, 0f00000000, %p1;
	selp.f32 	%f68, %f15, 0f00000000, %p1;
	selp.f32 	%f69, %f16, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r192, %f66;
	shfl.sync.bfly.b32	%r193, %r192, 16, 31, -1;
	mov.b32 	%f70, %r193;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f71, %f66, %f70;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r194, %f71;
	shfl.sync.bfly.b32	%r195, %r194, 8, 31, -1;
	mov.b32 	%f72, %r195;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f73, %f71, %f72;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r196, %f73;
	shfl.sync.bfly.b32	%r197, %r196, 4, 31, -1;
	mov.b32 	%f74, %r197;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f75, %f73, %f74;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r198, %f75;
	shfl.sync.bfly.b32	%r199, %r198, 2, 31, -1;
	mov.b32 	%f76, %r199;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f77, %f75, %f76;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r200, %f67;
	shfl.sync.bfly.b32	%r201, %r200, 16, 31, -1;
	mov.b32 	%f78, %r201;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f67, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r202, %f79;
	shfl.sync.bfly.b32	%r203, %r202, 8, 31, -1;
	mov.b32 	%f80, %r203;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r204, %f81;
	shfl.sync.bfly.b32	%r205, %r204, 4, 31, -1;
	mov.b32 	%f82, %r205;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r206, %f83;
	shfl.sync.bfly.b32	%r207, %r206, 2, 31, -1;
	mov.b32 	%f84, %r207;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f85, %f83, %f84;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r208, %f68;
	shfl.sync.bfly.b32	%r209, %r208, 16, 31, -1;
	mov.b32 	%f86, %r209;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f87, %f68, %f86;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r210, %f87;
	shfl.sync.bfly.b32	%r211, %r210, 8, 31, -1;
	mov.b32 	%f88, %r211;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f89, %f87, %f88;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r212, %f89;
	shfl.sync.bfly.b32	%r213, %r212, 4, 31, -1;
	mov.b32 	%f90, %r213;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f91, %f89, %f90;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r214, %f91;
	shfl.sync.bfly.b32	%r215, %r214, 2, 31, -1;
	mov.b32 	%f92, %r215;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f93, %f91, %f92;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r216, %f69;
	shfl.sync.bfly.b32	%r217, %r216, 16, 31, -1;
	mov.b32 	%f94, %r217;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f95, %f69, %f94;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r218, %f95;
	shfl.sync.bfly.b32	%r219, %r218, 8, 31, -1;
	mov.b32 	%f96, %r219;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f97, %f95, %f96;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r220, %f97;
	shfl.sync.bfly.b32	%r221, %r220, 4, 31, -1;
	mov.b32 	%f98, %r221;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r222, %f99;
	shfl.sync.bfly.b32	%r223, %r222, 2, 31, -1;
	mov.b32 	%f100, %r223;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f101, %f99, %f100;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f77;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r44;
	// end inline asm
	mov.b32 	%r46, %f85;
	// begin inline asm
	@%p16 st.shared.b32 [ %r28 + 0 ], %r46;
	// end inline asm
	mov.b32 	%r48, %f93;
	// begin inline asm
	@%p16 st.shared.b32 [ %r30 + 0 ], %r48;
	// end inline asm
	mov.b32 	%r50, %f101;
	// begin inline asm
	@%p16 st.shared.b32 [ %r32 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p20 ld.shared.b32 %r51, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f102, %r51;
	shfl.sync.bfly.b32	%r224, %r51, 2, 31, -1;
	mov.b32 	%f103, %r224;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f104, %f102, %f103;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r225, %f104;
	shfl.sync.bfly.b32	%r226, %r225, 1, 31, -1;
	mov.b32 	%f105, %r226;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f106, %f104, %f105;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f106;
	// begin inline asm
	@%p21 st.shared.b32 [ %r35 + 0 ], %r54;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f107, [%r186];
	ld.shared.f32 	%f108, [%r187];
	ld.shared.f32 	%f109, [%r188];
	ld.shared.f32 	%f110, [%r189];
$L__tmp4:
	.loc	1 43 29                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:43:29
	bar.sync 	0;
	mov.b32 	%r56, %f107;
	mov.b32 	%r57, %f108;
	mov.b32 	%r58, %f109;
	mov.b32 	%r59, %f110;
	// begin inline asm
	@%p22 st.shared.v4.b32 [ %r38 + 0 ], { %r56, %r57, %r58, %r59 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r121, [%r191];
	.loc	1 44 19                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:44:19
	mul.f32 	%f111, %f13, %f9;
	mul.f32 	%f112, %f14, %f10;
	mul.f32 	%f113, %f15, %f11;
	mul.f32 	%f114, %f16, %f12;
	.loc	1 46 35                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:46:35
	selp.f32 	%f115, %f111, 0f00000000, %p1;
	selp.f32 	%f116, %f112, 0f00000000, %p1;
	selp.f32 	%f117, %f113, 0f00000000, %p1;
	selp.f32 	%f118, %f114, 0f00000000, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r227, %f115;
	shfl.sync.bfly.b32	%r228, %r227, 16, 31, -1;
	mov.b32 	%f119, %r228;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f120, %f115, %f119;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r229, %f120;
	shfl.sync.bfly.b32	%r230, %r229, 8, 31, -1;
	mov.b32 	%f121, %r230;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f122, %f120, %f121;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r231, %f122;
	shfl.sync.bfly.b32	%r232, %r231, 4, 31, -1;
	mov.b32 	%f123, %r232;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f124, %f122, %f123;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r233, %f124;
	shfl.sync.bfly.b32	%r234, %r233, 2, 31, -1;
	mov.b32 	%f125, %r234;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f126, %f124, %f125;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r235, %f116;
	shfl.sync.bfly.b32	%r236, %r235, 16, 31, -1;
	mov.b32 	%f127, %r236;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f128, %f116, %f127;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r237, %f128;
	shfl.sync.bfly.b32	%r238, %r237, 8, 31, -1;
	mov.b32 	%f129, %r238;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f130, %f128, %f129;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r239, %f130;
	shfl.sync.bfly.b32	%r240, %r239, 4, 31, -1;
	mov.b32 	%f131, %r240;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r241, %f132;
	shfl.sync.bfly.b32	%r242, %r241, 2, 31, -1;
	mov.b32 	%f133, %r242;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r243, %f117;
	shfl.sync.bfly.b32	%r244, %r243, 16, 31, -1;
	mov.b32 	%f135, %r244;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f136, %f117, %f135;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r245, %f136;
	shfl.sync.bfly.b32	%r246, %r245, 8, 31, -1;
	mov.b32 	%f137, %r246;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f138, %f136, %f137;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r247, %f138;
	shfl.sync.bfly.b32	%r248, %r247, 4, 31, -1;
	mov.b32 	%f139, %r248;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f140, %f138, %f139;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r249, %f140;
	shfl.sync.bfly.b32	%r250, %r249, 2, 31, -1;
	mov.b32 	%f141, %r250;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f140, %f141;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r251, %f118;
	shfl.sync.bfly.b32	%r252, %r251, 16, 31, -1;
	mov.b32 	%f143, %r252;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f144, %f118, %f143;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r253, %f144;
	shfl.sync.bfly.b32	%r254, %r253, 8, 31, -1;
	mov.b32 	%f145, %r254;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f144, %f145;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r255, %f146;
	shfl.sync.bfly.b32	%r256, %r255, 4, 31, -1;
	mov.b32 	%f147, %r256;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f148, %f146, %f147;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r257, %f148;
	shfl.sync.bfly.b32	%r258, %r257, 2, 31, -1;
	mov.b32 	%f149, %r258;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f150, %f148, %f149;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f126;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r61;
	// end inline asm
	mov.b32 	%r63, %f134;
	// begin inline asm
	@%p16 st.shared.b32 [ %r28 + 0 ], %r63;
	// end inline asm
	mov.b32 	%r65, %f142;
	// begin inline asm
	@%p16 st.shared.b32 [ %r30 + 0 ], %r65;
	// end inline asm
	mov.b32 	%r67, %f150;
	// begin inline asm
	@%p16 st.shared.b32 [ %r32 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p20 ld.shared.b32 %r68, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f151, %r68;
	shfl.sync.bfly.b32	%r259, %r68, 2, 31, -1;
	mov.b32 	%f152, %r259;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f153, %f151, %f152;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r260, %f153;
	shfl.sync.bfly.b32	%r261, %r260, 1, 31, -1;
	mov.b32 	%f154, %r261;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f155, %f153, %f154;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f155;
	// begin inline asm
	@%p21 st.shared.b32 [ %r35 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r73, [%r186];
	ld.shared.u32 	%r74, [%r187];
	ld.shared.u32 	%r75, [%r188];
	ld.shared.u32 	%r76, [%r189];
$L__tmp6:
	.loc	1 47 29                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:47:29
	bar.sync 	0;
	// begin inline asm
	@%p22 st.shared.v4.b32 [ %r38 + 0 ], { %r73, %r74, %r75, %r76 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r122, [%r191];
	.loc	1 48 19                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:48:19
	mul.f32 	%f156, %f1, %f9;
	mul.f32 	%f157, %f2, %f10;
	mul.f32 	%f158, %f3, %f11;
	mul.f32 	%f159, %f4, %f12;
	.loc	1 50 35                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:50:35
	selp.f32 	%f160, %f156, 0f00000000, %p1;
	selp.f32 	%f161, %f157, 0f00000000, %p1;
	selp.f32 	%f162, %f158, 0f00000000, %p1;
	selp.f32 	%f163, %f159, 0f00000000, %p1;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r262, %f160;
	shfl.sync.bfly.b32	%r263, %r262, 16, 31, -1;
	mov.b32 	%f164, %r263;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f165, %f160, %f164;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r264, %f165;
	shfl.sync.bfly.b32	%r265, %r264, 8, 31, -1;
	mov.b32 	%f166, %r265;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f165, %f166;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r266, %f167;
	shfl.sync.bfly.b32	%r267, %r266, 4, 31, -1;
	mov.b32 	%f168, %r267;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f169, %f167, %f168;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r268, %f169;
	shfl.sync.bfly.b32	%r269, %r268, 2, 31, -1;
	mov.b32 	%f170, %r269;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f171, %f169, %f170;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r270, %f161;
	shfl.sync.bfly.b32	%r271, %r270, 16, 31, -1;
	mov.b32 	%f172, %r271;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f173, %f161, %f172;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r272, %f173;
	shfl.sync.bfly.b32	%r273, %r272, 8, 31, -1;
	mov.b32 	%f174, %r273;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f175, %f173, %f174;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r274, %f175;
	shfl.sync.bfly.b32	%r275, %r274, 4, 31, -1;
	mov.b32 	%f176, %r275;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f177, %f175, %f176;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r276, %f177;
	shfl.sync.bfly.b32	%r277, %r276, 2, 31, -1;
	mov.b32 	%f178, %r277;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f179, %f177, %f178;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r278, %f162;
	shfl.sync.bfly.b32	%r279, %r278, 16, 31, -1;
	mov.b32 	%f180, %r279;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f181, %f162, %f180;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r280, %f181;
	shfl.sync.bfly.b32	%r281, %r280, 8, 31, -1;
	mov.b32 	%f182, %r281;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f183, %f181, %f182;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r282, %f183;
	shfl.sync.bfly.b32	%r283, %r282, 4, 31, -1;
	mov.b32 	%f184, %r283;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f185, %f183, %f184;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r284, %f185;
	shfl.sync.bfly.b32	%r285, %r284, 2, 31, -1;
	mov.b32 	%f186, %r285;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f187, %f185, %f186;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r286, %f163;
	shfl.sync.bfly.b32	%r287, %r286, 16, 31, -1;
	mov.b32 	%f188, %r287;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f189, %f163, %f188;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r288, %f189;
	shfl.sync.bfly.b32	%r289, %r288, 8, 31, -1;
	mov.b32 	%f190, %r289;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f191, %f189, %f190;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r290, %f191;
	shfl.sync.bfly.b32	%r291, %r290, 4, 31, -1;
	mov.b32 	%f192, %r291;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f193, %f191, %f192;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r292, %f193;
	shfl.sync.bfly.b32	%r293, %r292, 2, 31, -1;
	mov.b32 	%f194, %r293;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f195, %f193, %f194;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f171;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r78;
	// end inline asm
	mov.b32 	%r80, %f179;
	// begin inline asm
	@%p16 st.shared.b32 [ %r28 + 0 ], %r80;
	// end inline asm
	mov.b32 	%r82, %f187;
	// begin inline asm
	@%p16 st.shared.b32 [ %r30 + 0 ], %r82;
	// end inline asm
	mov.b32 	%r84, %f195;
	// begin inline asm
	@%p16 st.shared.b32 [ %r32 + 0 ], %r84;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p20 ld.shared.b32 %r85, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f196, %r85;
	shfl.sync.bfly.b32	%r294, %r85, 2, 31, -1;
	mov.b32 	%f197, %r294;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f198, %f196, %f197;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r295, %f198;
	shfl.sync.bfly.b32	%r296, %r295, 1, 31, -1;
	mov.b32 	%f199, %r296;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f200, %f198, %f199;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f200;
	// begin inline asm
	@%p21 st.shared.b32 [ %r35 + 0 ], %r88;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r90, [%r186];
	ld.shared.u32 	%r91, [%r187];
	ld.shared.u32 	%r92, [%r188];
	ld.shared.u32 	%r93, [%r189];
$L__tmp8:
	.loc	1 51 29                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:51:29
	bar.sync 	0;
	// begin inline asm
	@%p22 st.shared.v4.b32 [ %r38 + 0 ], { %r90, %r91, %r92, %r93 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r123, [%r191];
	.loc	1 53 35                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:53:35
	selp.f32 	%f201, %f1, 0f00000000, %p1;
	selp.f32 	%f202, %f2, 0f00000000, %p1;
	selp.f32 	%f203, %f3, 0f00000000, %p1;
	selp.f32 	%f204, %f4, 0f00000000, %p1;
$L__tmp9:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r297, %f201;
	shfl.sync.bfly.b32	%r298, %r297, 16, 31, -1;
	mov.b32 	%f205, %r298;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f206, %f201, %f205;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r299, %f206;
	shfl.sync.bfly.b32	%r300, %r299, 8, 31, -1;
	mov.b32 	%f207, %r300;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f208, %f206, %f207;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r301, %f208;
	shfl.sync.bfly.b32	%r302, %r301, 4, 31, -1;
	mov.b32 	%f209, %r302;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f210, %f208, %f209;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r303, %f210;
	shfl.sync.bfly.b32	%r304, %r303, 2, 31, -1;
	mov.b32 	%f211, %r304;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f212, %f210, %f211;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r305, %f202;
	shfl.sync.bfly.b32	%r306, %r305, 16, 31, -1;
	mov.b32 	%f213, %r306;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f214, %f202, %f213;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r307, %f214;
	shfl.sync.bfly.b32	%r308, %r307, 8, 31, -1;
	mov.b32 	%f215, %r308;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f216, %f214, %f215;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r309, %f216;
	shfl.sync.bfly.b32	%r310, %r309, 4, 31, -1;
	mov.b32 	%f217, %r310;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f218, %f216, %f217;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r311, %f218;
	shfl.sync.bfly.b32	%r312, %r311, 2, 31, -1;
	mov.b32 	%f219, %r312;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f220, %f218, %f219;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r313, %f203;
	shfl.sync.bfly.b32	%r314, %r313, 16, 31, -1;
	mov.b32 	%f221, %r314;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f222, %f203, %f221;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r315, %f222;
	shfl.sync.bfly.b32	%r316, %r315, 8, 31, -1;
	mov.b32 	%f223, %r316;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f224, %f222, %f223;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r317, %f224;
	shfl.sync.bfly.b32	%r318, %r317, 4, 31, -1;
	mov.b32 	%f225, %r318;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f226, %f224, %f225;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r319, %f226;
	shfl.sync.bfly.b32	%r320, %r319, 2, 31, -1;
	mov.b32 	%f227, %r320;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f228, %f226, %f227;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r321, %f204;
	shfl.sync.bfly.b32	%r322, %r321, 16, 31, -1;
	mov.b32 	%f229, %r322;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f230, %f204, %f229;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r323, %f230;
	shfl.sync.bfly.b32	%r324, %r323, 8, 31, -1;
	mov.b32 	%f231, %r324;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f232, %f230, %f231;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r325, %f232;
	shfl.sync.bfly.b32	%r326, %r325, 4, 31, -1;
	mov.b32 	%f233, %r326;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f234, %f232, %f233;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r327, %f234;
	shfl.sync.bfly.b32	%r328, %r327, 2, 31, -1;
	mov.b32 	%f235, %r328;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f236, %f234, %f235;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f212;
	// begin inline asm
	@%p16 st.shared.b32 [ %r26 + 0 ], %r95;
	// end inline asm
	mov.b32 	%r97, %f220;
	// begin inline asm
	@%p16 st.shared.b32 [ %r28 + 0 ], %r97;
	// end inline asm
	mov.b32 	%r99, %f228;
	// begin inline asm
	@%p16 st.shared.b32 [ %r30 + 0 ], %r99;
	// end inline asm
	mov.b32 	%r101, %f236;
	// begin inline asm
	@%p16 st.shared.b32 [ %r32 + 0 ], %r101;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p20 ld.shared.b32 %r102, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f237, %r102;
	shfl.sync.bfly.b32	%r329, %r102, 2, 31, -1;
	mov.b32 	%f238, %r329;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f239, %f237, %f238;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r330, %f239;
	shfl.sync.bfly.b32	%r331, %r330, 1, 31, -1;
	mov.b32 	%f240, %r331;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f241, %f239, %f240;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r105, %f241;
	// begin inline asm
	@%p21 st.shared.b32 [ %r35 + 0 ], %r105;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f242, [%r186];
	ld.shared.f32 	%f243, [%r187];
	ld.shared.f32 	%f244, [%r188];
	ld.shared.f32 	%f245, [%r189];
$L__tmp10:
	.loc	1 54 29                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:54:29
	bar.sync 	0;
	mov.b32 	%r107, %f242;
	mov.b32 	%r108, %f243;
	mov.b32 	%r109, %f244;
	mov.b32 	%r110, %f245;
	// begin inline asm
	@%p22 st.shared.v4.b32 [ %r38 + 0 ], { %r107, %r108, %r109, %r110 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r124, [%r191];
	.loc	1 56 20                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:56:20
	mul.f32 	%f246, %f107, %f107;
	mul.f32 	%f247, %f108, %f108;
	mul.f32 	%f248, %f109, %f109;
	mul.f32 	%f249, %f110, %f110;
	.loc	1 57 20                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:57:20
	neg.f32 	%f250, %f246;
	fma.rn.f32 	%f251, %f62, %f242, %f250;
	neg.f32 	%f252, %f247;
	fma.rn.f32 	%f253, %f63, %f243, %f252;
	neg.f32 	%f254, %f248;
	fma.rn.f32 	%f255, %f64, %f244, %f254;
	neg.f32 	%f256, %f249;
	fma.rn.f32 	%f257, %f65, %f245, %f256;
	.loc	1 58 25                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:58:25
	mul.wide.s32 	%rd20, %r132, 4;
	add.s64 	%rd4, %rd18, %rd20;
	.loc	1 58 37                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:58:37
	bar.sync 	0;
	mov.b32 	%r112, %f251;
	// begin inline asm
	@%p22 st.shared.b32 [ %r38 + 0 ], %r112;
	// end inline asm
	add.s32 	%r113, %r38, 4;
	mov.b32 	%r114, %f253;
	// begin inline asm
	@%p22 st.shared.b32 [ %r113 + 0 ], %r114;
	// end inline asm
	add.s32 	%r115, %r38, 8;
	mov.b32 	%r116, %f255;
	// begin inline asm
	@%p22 st.shared.b32 [ %r115 + 0 ], %r116;
	// end inline asm
	add.s32 	%r117, %r38, 12;
	mov.b32 	%r118, %f257;
	// begin inline asm
	@%p22 st.shared.b32 [ %r117 + 0 ], %r118;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r119, [%r191];
	bfe.u32 	%r332, %r126, 3, 2;
	or.b32  	%r333, %r176, %r332;
	setp.eq.s32 	%p63, %r333, 0;
	and.pred  	%p55, %p63, %p61;
	// begin inline asm
	@%p55 st.global.b32 [ %rd4 + 0 ], { %r119 };
	// end inline asm
	.loc	1 59 25                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:59:25
	add.s64 	%rd5, %rd13, %rd20;
	.loc	1 59 36                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:59:36
	// begin inline asm
	@%p55 st.global.b32 [ %rd5 + 0 ], { %r120 };
	// end inline asm
	.loc	1 60 25                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:60:25
	add.s64 	%rd6, %rd14, %rd20;
	.loc	1 60 37                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:60:37
	// begin inline asm
	@%p55 st.global.b32 [ %rd6 + 0 ], { %r121 };
	// end inline asm
	.loc	1 61 25                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:61:25
	add.s64 	%rd7, %rd15, %rd20;
	.loc	1 61 37                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:61:37
	// begin inline asm
	@%p55 st.global.b32 [ %rd7 + 0 ], { %r122 };
	// end inline asm
	.loc	1 62 25                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:62:25
	add.s64 	%rd8, %rd16, %rd20;
	.loc	1 62 37                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:62:37
	// begin inline asm
	@%p55 st.global.b32 [ %rd8 + 0 ], { %r123 };
	// end inline asm
	.loc	1 63 25                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:63:25
	add.s64 	%rd9, %rd17, %rd20;
	.loc	1 63 37                         // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:63:37
	// begin inline asm
	@%p55 st.global.b32 [ %rd9 + 0 ], { %r124 };
	// end inline asm
	.loc	1 63 4                          // c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py:63:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/42/c42rksqjkhbp3fns5kpvnpwayk3ngv6gjugpwbunvxn3wvpbqev2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 271                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x108 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 50
.b8 114
.b8 107
.b8 115
.b8 113
.b8 106
.b8 107
.b8 104
.b8 98
.b8 112
.b8 51
.b8 102
.b8 110
.b8 115
.b8 53
.b8 107
.b8 112
.b8 118
.b8 110
.b8 112
.b8 119
.b8 97
.b8 121
.b8 107
.b8 51
.b8 110
.b8 103
.b8 118
.b8 54
.b8 103
.b8 106
.b8 117
.b8 103
.b8 112
.b8 119
.b8 98
.b8 117
.b8 110
.b8 118
.b8 120
.b8 110
.b8 51
.b8 119
.b8 118
.b8 112
.b8 98
.b8 113
.b8 101
.b8 118
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 47                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
