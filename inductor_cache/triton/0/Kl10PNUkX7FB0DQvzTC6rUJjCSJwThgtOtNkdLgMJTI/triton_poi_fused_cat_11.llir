; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_11(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %.fr = freeze i32 %4, !dbg !11
  %5 = shl i32 %.fr, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = srem i32 %9, 12, !dbg !14
  %12 = srem i32 %10, 12, !dbg !14
  %13 = icmp slt i32 %11, 3, !dbg !15
  %14 = icmp slt i32 %12, 3, !dbg !15
  %15 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !16
  %16 = shufflevector <2 x i32> %15, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !16
  %17 = sdiv <2 x i32> %16, <i32 12, i32 384>, !dbg !16
  %18 = srem <2 x i32> %17, splat (i32 32), !dbg !17
  %19 = shl nsw <2 x i32> %18, <i32 1, i32 7>, !dbg !18
  %20 = extractelement <2 x i32> %19, i64 0, !dbg !19
  %21 = extractelement <2 x i32> %19, i64 1, !dbg !20
  %22 = add nsw i32 %20, %21, !dbg !20
  %23 = shl nsw i32 %11, 12, !dbg !21
  %24 = shl nsw i32 %12, 12, !dbg !21
  %25 = srem i32 %9, 12288, !dbg !22
  %26 = sub nsw i32 %9, %25, !dbg !22
  %27 = add i32 %26, %23, !dbg !23
  %28 = add i32 %27, %22, !dbg !24
  %29 = add i32 %26, %24, !dbg !23
  %30 = add i32 %29, %22, !dbg !24
  %31 = sext i32 %28 to i64, !dbg !25
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !25
  %33 = sext i32 %30 to i64, !dbg !25
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !25
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %13, i32 0, i1 %13) #1, !dbg !26
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %14, i32 0, i1 %14) #1, !dbg !26
  %37 = icmp sgt i32 %12, 2, !dbg !27
  %38 = icmp slt i32 %11, 6, !dbg !28
  %39 = add nsw i32 %11, -3, !dbg !29
  %40 = icmp ult i32 %39, 3, !dbg !29
  %41 = and i1 %37, %38, !dbg !29
  %42 = add nsw i32 %22, 64, !dbg !30
  %43 = add i32 %27, -12288, !dbg !31
  %44 = add i32 %43, %42, !dbg !32
  %45 = add i32 %29, -12288, !dbg !31
  %46 = add i32 %45, %42, !dbg !32
  %47 = sext i32 %44 to i64, !dbg !33
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !33
  %49 = sext i32 %46 to i64, !dbg !33
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !33
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %40, i32 0, i1 %40) #1, !dbg !34
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %41, i32 0, i1 %41) #1, !dbg !34
  %53 = icmp sgt i32 %11, 5, !dbg !35
  %54 = icmp slt i32 %12, 9, !dbg !36
  %55 = add nsw i32 %11, -6, !dbg !37
  %56 = icmp ult i32 %55, 3, !dbg !37
  %57 = and i1 %54, %53, !dbg !37
  %58 = or disjoint i32 %20, 1, !dbg !19
  %59 = add nsw i32 %58, %21, !dbg !38
  %60 = add i32 %27, -24576, !dbg !39
  %61 = add i32 %60, %59, !dbg !40
  %62 = add i32 %29, -24576, !dbg !39
  %63 = add i32 %62, %59, !dbg !40
  %64 = sext i32 %61 to i64, !dbg !41
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !41
  %66 = sext i32 %63 to i64, !dbg !41
  %67 = getelementptr float, ptr addrspace(1) %0, i64 %66, !dbg !41
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %56, i32 0, i1 %56) #1, !dbg !42
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %67, i1 %57, i32 0, i1 %57) #1, !dbg !42
  %70 = icmp sgt i32 %11, 8, !dbg !43
  %71 = icmp sgt i32 %12, 8, !dbg !43
  %72 = add nsw i32 %22, 65, !dbg !44
  %73 = add i32 %27, -36864, !dbg !45
  %74 = add i32 %73, %72, !dbg !46
  %75 = add i32 %29, -36864, !dbg !45
  %76 = add i32 %75, %72, !dbg !46
  %77 = sext i32 %74 to i64, !dbg !47
  %78 = getelementptr float, ptr addrspace(1) %0, i64 %77, !dbg !47
  %79 = sext i32 %76 to i64, !dbg !47
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !47
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %70, i32 0, i1 %70) #1, !dbg !48
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %80, i1 %71, i32 0, i1 %71) #1, !dbg !48
  %.v = select i1 %56, i32 %68, i32 %81, !dbg !49
  %.v1 = select i1 %57, i32 %69, i32 %82, !dbg !49
  %.v2 = select i1 %40, i32 %51, i32 %.v, !dbg !50
  %.v3 = select i1 %41, i32 %52, i32 %.v1, !dbg !50
  %.v4 = select i1 %13, i32 %35, i32 %.v2, !dbg !51
  %.v5 = select i1 %14, i32 %36, i32 %.v3, !dbg !51
  %83 = sext i32 %9 to i64, !dbg !52
  %84 = getelementptr float, ptr addrspace(1) %1, i64 %83, !dbg !52
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v4, i32 %.v5, ptr addrspace(1) %84, i1 true) #1, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cc6pp23ivyssvoaszg4lx4m43rmhnl35z5by5xvw37pvjw2azruk.py", directory: "inductor_cache/c6")
!4 = !{ptr @triton_poi_fused_cat_11, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_11, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_11", linkageName: "triton_poi_fused_cat_11", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 19, scope: !7)
!15 = !DILocation(line: 33, column: 18, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 25, column: 27, scope: !7)
!18 = !DILocation(line: 34, column: 32, scope: !7)
!19 = !DILocation(line: 44, column: 35, scope: !7)
!20 = !DILocation(line: 34, column: 37, scope: !7)
!21 = !DILocation(line: 34, column: 52, scope: !7)
!22 = !DILocation(line: 34, column: 64, scope: !7)
!23 = !DILocation(line: 34, column: 46, scope: !7)
!24 = !DILocation(line: 34, column: 58, scope: !7)
!25 = !DILocation(line: 34, column: 30, scope: !7)
!26 = !DILocation(line: 34, column: 69, scope: !7)
!27 = !DILocation(line: 35, column: 19, scope: !7)
!28 = !DILocation(line: 37, column: 18, scope: !7)
!29 = !DILocation(line: 38, column: 18, scope: !7)
!30 = !DILocation(line: 39, column: 43, scope: !7)
!31 = !DILocation(line: 39, column: 52, scope: !7)
!32 = !DILocation(line: 39, column: 71, scope: !7)
!33 = !DILocation(line: 39, column: 31, scope: !7)
!34 = !DILocation(line: 39, column: 82, scope: !7)
!35 = !DILocation(line: 40, column: 20, scope: !7)
!36 = !DILocation(line: 42, column: 19, scope: !7)
!37 = !DILocation(line: 43, column: 20, scope: !7)
!38 = !DILocation(line: 44, column: 42, scope: !7)
!39 = !DILocation(line: 44, column: 51, scope: !7)
!40 = !DILocation(line: 44, column: 70, scope: !7)
!41 = !DILocation(line: 44, column: 31, scope: !7)
!42 = !DILocation(line: 44, column: 81, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 48, column: 43, scope: !7)
!45 = !DILocation(line: 48, column: 52, scope: !7)
!46 = !DILocation(line: 48, column: 71, scope: !7)
!47 = !DILocation(line: 48, column: 31, scope: !7)
!48 = !DILocation(line: 48, column: 82, scope: !7)
!49 = !DILocation(line: 49, column: 35, scope: !7)
!50 = !DILocation(line: 50, column: 34, scope: !7)
!51 = !DILocation(line: 51, column: 33, scope: !7)
!52 = !DILocation(line: 52, column: 25, scope: !7)
!53 = !DILocation(line: 52, column: 37, scope: !7)
!54 = !DILocation(line: 52, column: 4, scope: !7)
