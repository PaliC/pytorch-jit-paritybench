; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_reflection_pad2d_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = and i32 %8, 127, !dbg !12
  %10 = or disjoint i32 %7, %9, !dbg !13
  %11 = icmp slt i32 %10, 576, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 6, !dbg !15
  %13 = mul i32 %12, 6, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = srem i32 %12, 6, !dbg !17
  %15 = sdiv i32 %10, 36, !dbg !18
  %16 = add nsw i32 %.decomposed, -1, !dbg !19
  %17 = tail call i32 @llvm.abs.i32(i32 %16, i1 true), !dbg !20
  %18 = add nsw i32 %17, -3, !dbg !21
  %19 = tail call i32 @llvm.abs.i32(i32 %18, i1 true), !dbg !22
  %20 = add nsw i32 %14, -1, !dbg !23
  %21 = tail call i32 @llvm.abs.i32(i32 %20, i1 true), !dbg !24
  %22 = add nsw i32 %21, -3, !dbg !25
  %23 = tail call i32 @llvm.abs.i32(i32 %22, i1 true), !dbg !26
  %24 = shl nsw i32 %15, 4, !dbg !27
  %reass.sub = or disjoint i32 %24, 15, !dbg !28
  %25 = shl nuw nsw i32 %23, 2, !dbg !29
  %26 = add nuw nsw i32 %19, %25, !dbg !29
  %27 = sub nuw i32 %reass.sub, %26, !dbg !29
  %28 = sext i32 %27 to i64, !dbg !30
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !30
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %11) #1, !dbg !31
  %31 = bitcast i32 %30 to float, !dbg !31
  %32 = sext i32 %15 to i64, !dbg !32
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !32
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %11) #1, !dbg !33
  %35 = bitcast i32 %34 to float, !dbg !33
  %36 = getelementptr float, ptr addrspace(1) %2, i64 %32, !dbg !34
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %36, i1 %11) #1, !dbg !35
  %38 = bitcast i32 %37 to float, !dbg !35
  %39 = fsub float %31, %35, !dbg !36
  %40 = fmul float %39, %38, !dbg !37
  %41 = fcmp olt float %40, 0.000000e+00, !dbg !38
  %42 = select i1 %41, float 0.000000e+00, float %40, !dbg !42
  %43 = sext i32 %10 to i64, !dbg !43
  %44 = getelementptr float, ptr addrspace(1) %3, i64 %43, !dbg !43
  %45 = bitcast float %42 to i32, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %45, ptr addrspace(1) %44, i1 %11) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cx5ith2nno2gq6rfxesu7bwp43dwoud2ggin5xav34lvlzgupd6z.py", directory: "inductor_cache/x5")
!4 = !{ptr @triton_poi_fused_reflection_pad2d_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_reflection_pad2d_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_reflection_pad2d_2", linkageName: "triton_poi_fused_reflection_pad2d_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 79, scope: !7)
!20 = !DILocation(line: 28, column: 72, scope: !7)
!21 = !DILocation(line: 28, column: 60, scope: !7)
!22 = !DILocation(line: 28, column: 53, scope: !7)
!23 = !DILocation(line: 28, column: 131, scope: !7)
!24 = !DILocation(line: 28, column: 124, scope: !7)
!25 = !DILocation(line: 28, column: 112, scope: !7)
!26 = !DILocation(line: 28, column: 105, scope: !7)
!27 = !DILocation(line: 28, column: 142, scope: !7)
!28 = !DILocation(line: 28, column: 88, scope: !7)
!29 = !DILocation(line: 28, column: 139, scope: !7)
!30 = !DILocation(line: 28, column: 30, scope: !7)
!31 = !DILocation(line: 28, column: 147, scope: !7)
!32 = !DILocation(line: 29, column: 30, scope: !7)
!33 = !DILocation(line: 29, column: 35, scope: !7)
!34 = !DILocation(line: 30, column: 30, scope: !7)
!35 = !DILocation(line: 30, column: 35, scope: !7)
!36 = !DILocation(line: 31, column: 18, scope: !7)
!37 = !DILocation(line: 32, column: 18, scope: !7)
!38 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!41 = !DILocation(line: 34, column: 40, scope: !7)
!42 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 35, column: 25, scope: !7)
!44 = !DILocation(line: 35, column: 36, scope: !7)
!45 = !DILocation(line: 35, column: 4, scope: !7)
