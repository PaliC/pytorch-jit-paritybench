; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_mean_54(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 3, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 4, !dbg !12
  %9 = and i32 %8, 7, !dbg !12
  %10 = and i32 %7, 7, !dbg !12
  %11 = or disjoint i32 %6, %9, !dbg !13
  %12 = or disjoint i32 %6, %10, !dbg !13
  %13 = shl i32 %7, 2, !dbg !14
  %14 = and i32 %13, 60, !dbg !14
  %15 = shl i32 %11, 6, !dbg !15
  %16 = or disjoint i32 %15, %14, !dbg !16
  %17 = sext i32 %16 to i64, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !17
  %19 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %18, i1 true) #3, !dbg !18
  %20 = extractvalue { i32, i32, i32, i32 } %19, 0, !dbg !18
  %21 = extractvalue { i32, i32, i32, i32 } %19, 1, !dbg !18
  %22 = extractvalue { i32, i32, i32, i32 } %19, 2, !dbg !18
  %23 = extractvalue { i32, i32, i32, i32 } %19, 3, !dbg !18
  %24 = bitcast i32 %20 to float, !dbg !18
  %25 = bitcast i32 %21 to float, !dbg !18
  %26 = bitcast i32 %22 to float, !dbg !18
  %27 = bitcast i32 %23 to float, !dbg !18
  %28 = fadd float %24, %25, !dbg !19
  %29 = fadd float %28, %26, !dbg !19
  %30 = fadd float %29, %27, !dbg !19
  %31 = bitcast float %30 to i32, !dbg !24
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 8, i32 31), !dbg !24
  %33 = bitcast i32 %32 to float, !dbg !24
  %34 = fadd float %30, %33, !dbg !19
  %35 = bitcast float %34 to i32, !dbg !24
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 4, i32 31), !dbg !24
  %37 = bitcast i32 %36 to float, !dbg !24
  %38 = fadd float %34, %37, !dbg !19
  %39 = bitcast float %38 to i32, !dbg !24
  %40 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %39, i32 2, i32 31), !dbg !24
  %41 = bitcast i32 %40 to float, !dbg !24
  %42 = fadd float %38, %41, !dbg !19
  %43 = bitcast float %42 to i32, !dbg !24
  %44 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %43, i32 1, i32 31), !dbg !24
  %45 = bitcast i32 %44 to float, !dbg !24
  %46 = fadd float %42, %45, !dbg !19
  %47 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %9, !dbg !25
  %48 = bitcast float %46 to <1 x i32>, !dbg !25
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %47, <1 x i32> %48, i1 true) #3, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !25
  %49 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !25
  %50 = load float, ptr addrspace(3) %49, align 4, !dbg !25
  %51 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %50, float 6.400000e+01) #3, !dbg !25
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %52 = sext i32 %12 to i64, !dbg !27
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !27
  %54 = and i32 %7, 120, !dbg !28
  %55 = icmp eq i32 %54, 0, !dbg !28
  %56 = bitcast float %51 to i32, !dbg !28
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %56, ptr addrspace(1) %53, i1 %55) #3, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfx53gfmhlehkljgtrbwik4g6cxxemgnucn5w4weztljyz7drtxp.py", directory: "inductor_cache/fx")
!4 = !{ptr @triton_per_fused_mean_54, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mean_54, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mean_54", linkageName: "triton_per_fused_mean_54", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 34, scope: !7)
!15 = !DILocation(line: 31, column: 38, scope: !7)
!16 = !DILocation(line: 31, column: 35, scope: !7)
!17 = !DILocation(line: 31, column: 30, scope: !7)
!18 = !DILocation(line: 31, column: 43, scope: !7)
!19 = !DILocation(line: 256, column: 15, scope: !20, inlinedAt: !23)
!20 = distinct !DILexicalBlockFile(scope: !22, file: !21, discriminator: 0)
!21 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!22 = distinct !DILexicalBlockFile(scope: !7, file: !21, discriminator: 0)
!23 = !DILocation(line: 33, column: 24, scope: !7)
!24 = !DILocation(line: 267, column: 36, scope: !22, inlinedAt: !23)
!25 = !DILocation(line: 35, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 4, scope: !7)
!27 = !DILocation(line: 37, column: 28, scope: !7)
!28 = !DILocation(line: 37, column: 39, scope: !7)
!29 = !DILocation(line: 37, column: 4, scope: !7)
