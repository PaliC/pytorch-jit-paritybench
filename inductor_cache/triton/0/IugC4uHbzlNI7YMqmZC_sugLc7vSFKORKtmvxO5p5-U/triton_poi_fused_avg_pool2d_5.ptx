//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_avg_pool2d_5 // -- Begin function triton_poi_fused_avg_pool2d_5
                                        // @triton_poi_fused_avg_pool2d_5
.visible .entry triton_poi_fused_avg_pool2d_5(
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_5_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_avg_pool2d_5_param_1,
	.param .u32 triton_poi_fused_avg_pool2d_5_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b32 	%r<96>;
	.reg .f32 	%f<36>;
	.reg .b64 	%rd<23>;
	.loc	1 19 0                          // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_avg_pool2d_5_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_avg_pool2d_5_param_1];
$L__tmp0:
	.loc	1 21 28                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:21:33
	shl.b32 	%r46, %r1, 8;
	.loc	1 22 36                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:22:36
	mov.u32 	%r47, %tid.x;
	shl.b32 	%r48, %r47, 1;
	and.b32  	%r49, %r48, 254;
	.loc	1 22 23                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:22:23
	or.b32  	%r50, %r46, %r49;
	.loc	1 26 19                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:26:19
	bfe.s32 	%r51, %r1, 23, 1;
	shr.u32 	%r52, %r51, 25;
	add.s32 	%r53, %r50, %r52;
	and.b32  	%r54, %r53, -128;
	sub.s32 	%r55, %r50, %r54;
	.loc	1 25 21                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:25:21
	shr.u32 	%r56, %r51, 23;
	add.s32 	%r57, %r50, %r56;
	shr.s32 	%r58, %r57, 9;
	shr.s32 	%r59, %r53, 7;
	.loc	1 25 28                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:25:28
	shr.u32 	%r60, %r59, 30;
	add.s32 	%r61, %r59, %r60;
	and.b32  	%r62, %r61, -4;
	sub.s32 	%r63, %r59, %r62;
	shr.u32 	%r64, %r58, 30;
	add.s32 	%r65, %r58, %r64;
	and.b32  	%r66, %r65, -4;
	sub.s32 	%r67, %r58, %r66;
	.loc	1 31 19                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:31:19
	setp.gt.s32 	%p29, %r67, 0;
	.loc	1 35 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:35:20
	shl.b32 	%r68, %r67, 1;
	.loc	1 36 19                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:36:19
	setp.gt.s32 	%p30, %r63, 0;
	.loc	1 39 19                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:39:19
	and.pred  	%p1, %p29, %p30;
	.loc	1 40 50                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:40:50
	shl.b32 	%r69, %r63, 8;
	.loc	1 40 60                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:40:60
	shl.b32 	%r70, %r58, 11;
	.loc	1 40 41                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:40:41
	add.s32 	%r71, %r70, %r55;
	.loc	1 40 46                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:40:46
	add.s32 	%r72, %r71, %r69;
	.loc	1 40 55                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:40:55
	add.s32 	%r73, %r72, -1152;
	.loc	1 40 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:40:31
	mul.wide.s32 	%rd13, %r73, 4;
	add.s64 	%rd1, %rd11, %rd13;
	mov.b32 	%r4, 0;
	.loc	1 40 65                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:40:65
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 42 21                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:42:21
	setp.gt.s32 	%p31, %r63, -1;
	.loc	1 45 19                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:45:19
	and.pred  	%p4, %p29, %p31;
	.loc	1 46 55                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:46:55
	add.s32 	%r74, %r72, -1024;
	.loc	1 46 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:46:31
	mul.wide.s32 	%rd14, %r74, 4;
	add.s64 	%rd2, %rd11, %rd14;
	.loc	1 46 65                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:46:65
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r6, %r4;
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f3, %r6;
	mov.b32 	%f4, %r7;
	.loc	1 47 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:47:20
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 53 54                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:53:54
	add.s32 	%r75, %r72, -896;
	.loc	1 53 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:53:31
	mul.wide.s32 	%rd15, %r75, 4;
	add.s64 	%rd3, %rd11, %rd15;
	.loc	1 53 64                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:53:64
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p4 ld.global.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	@!%p4 mov.u32 %r10, %r4;
	@!%p4 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f7, %r10;
	mov.b32 	%f8, %r11;
	.loc	1 54 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:54:20
	add.f32 	%f9, %f5, %f7;
	add.f32 	%f10, %f6, %f8;
	.loc	1 56 21                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:56:21
	setp.gt.s32 	%p32, %r67, -1;
	.loc	1 59 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:59:20
	and.pred  	%p10, %p32, %p30;
	.loc	1 60 54                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:60:54
	add.s32 	%r76, %r72, -128;
	.loc	1 60 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:60:31
	mul.wide.s32 	%rd16, %r76, 4;
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 60 64                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:60:64
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p10 ld.global.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r14, %r4;
	@!%p10 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f11, %r14;
	mov.b32 	%f12, %r15;
	.loc	1 61 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:61:20
	add.f32 	%f13, %f9, %f11;
	add.f32 	%f14, %f10, %f12;
	.loc	1 62 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:62:20
	or.b32  	%r77, %r67, %r63;
	setp.gt.s32 	%p13, %r77, -1;
	.loc	1 63 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:63:31
	mul.wide.s32 	%rd17, %r72, 4;
	add.s64 	%rd5, %rd11, %rd17;
	.loc	1 63 55                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:63:55
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p13 ld.global.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	@!%p13 mov.u32 %r18, %r4;
	@!%p13 mov.u32 %r19, %r4;
	// end inline asm
	mov.b32 	%f15, %r18;
	mov.b32 	%f16, %r19;
	.loc	1 64 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:64:20
	add.f32 	%f17, %f13, %f15;
	add.f32 	%f18, %f14, %f16;
	.loc	1 66 51                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:66:51
	add.s32 	%r78, %r72, 128;
	.loc	1 66 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:66:31
	mul.wide.s32 	%rd18, %r78, 4;
	add.s64 	%rd6, %rd11, %rd18;
	.loc	1 66 61                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:66:61
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p13 ld.global.v2.b32 { %r22, %r23 }, [ %rd6 + 0 ];
	@!%p13 mov.u32 %r22, %r4;
	@!%p13 mov.u32 %r23, %r4;
	// end inline asm
	mov.b32 	%f19, %r22;
	mov.b32 	%f20, %r23;
	.loc	1 67 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:67:20
	add.f32 	%f21, %f17, %f19;
	add.f32 	%f22, %f18, %f20;
	.loc	1 73 51                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:73:51
	add.s32 	%r79, %r72, 896;
	.loc	1 73 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:73:31
	mul.wide.s32 	%rd19, %r79, 4;
	add.s64 	%rd7, %rd11, %rd19;
	.loc	1 73 61                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:73:61
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p10 ld.global.v2.b32 { %r26, %r27 }, [ %rd7 + 0 ];
	@!%p10 mov.u32 %r26, %r4;
	@!%p10 mov.u32 %r27, %r4;
	// end inline asm
	mov.b32 	%f23, %r26;
	mov.b32 	%f24, %r27;
	.loc	1 74 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:74:20
	add.f32 	%f25, %f21, %f23;
	add.f32 	%f26, %f22, %f24;
	.loc	1 76 52                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:76:52
	add.s32 	%r80, %r72, 1024;
	.loc	1 76 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:76:31
	mul.wide.s32 	%rd20, %r80, 4;
	add.s64 	%rd8, %rd11, %rd20;
	.loc	1 76 62                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:76:62
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p13 ld.global.v2.b32 { %r30, %r31 }, [ %rd8 + 0 ];
	@!%p13 mov.u32 %r30, %r4;
	@!%p13 mov.u32 %r31, %r4;
	// end inline asm
	mov.b32 	%f27, %r30;
	mov.b32 	%f28, %r31;
	.loc	1 77 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:77:20
	add.f32 	%f29, %f25, %f27;
	add.f32 	%f30, %f26, %f28;
	.loc	1 79 52                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:79:52
	add.s32 	%r81, %r72, 1152;
	.loc	1 79 31                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:79:31
	mul.wide.s32 	%rd21, %r81, 4;
	add.s64 	%rd9, %rd11, %rd21;
	.loc	1 79 62                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:79:62
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p13 ld.global.v2.b32 { %r34, %r35 }, [ %rd9 + 0 ];
	@!%p13 mov.u32 %r34, %r4;
	@!%p13 mov.u32 %r35, %r4;
	// end inline asm
	mov.b32 	%f31, %r34;
	mov.b32 	%f32, %r35;
	.loc	1 80 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:80:20
	add.f32 	%f33, %f29, %f31;
	add.f32 	%f34, %f30, %f32;
	.loc	1 35 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:35:20
	shl.b32 	%r82, %r63, 1;
	.loc	1 81 34                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:34
	neg.s32 	%r83, %r68;
	.loc	1 81 60                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:60
	add.s32 	%r84, %r68, 2;
	add.s32 	%r85, %r82, 2;
	.loc	1 81 316                        // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:316
	shl.b32 	%r86, %r63, 2;
	.loc	1 81 40                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:40
	add.s32 	%r87, %r82, %r68;
	mov.b32 	%r88, 1;
	sub.s32 	%r89, %r88, %r87;
	.loc	1 81 167                        // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:167
	mad.lo.s32 	%r90, %r86, %r67, %r89;
	.loc	1 81 241                        // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:241
	add.s32 	%r91, %r90, %r85;
	.loc	1 81 314                        // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:314
	add.s32 	%r92, %r91, %r84;
	.loc	1 81 325                        // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:325
	mad.lo.s32 	%r93, %r85, %r83, %r92;
	mov.b32 	%r94, 2;
	.loc	1 81 389                        // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:81:389
	mad.lo.s32 	%r95, %r94, %r84, %r93;
	.loc	1 82 20                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:82:20
	cvt.rn.f32.s32 	%f35, %r95;
	mov.b32 	%r39, %f33;
	mov.b32 	%r40, %f35;
	// begin inline asm
	div.full.f32 %r44, %r39, %r40;
	// end inline asm
	mov.b32 	%r42, %f34;
	// begin inline asm
	div.full.f32 %r45, %r42, %r40;
	// end inline asm
	.loc	1 83 25                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:83:25
	mul.wide.s32 	%rd22, %r50, 4;
	add.s64 	%rd10, %rd12, %rd22;
	mov.pred 	%p28, -1;
	.loc	1 83 37                         // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:83:37
	// begin inline asm
	@%p28 st.global.v2.b32 [ %rd10 + 0 ], { %r44, %r45 };
	// end inline asm
	.loc	1 83 4                          // cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py:83:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/we/cwe2evxtxuagjv2fuyz5gmyivaseqnj77rc3vglukukxg34sudvu.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 119
.b8 101
.b8 50
.b8 101
.b8 118
.b8 120
.b8 116
.b8 120
.b8 117
.b8 97
.b8 103
.b8 106
.b8 118
.b8 50
.b8 102
.b8 117
.b8 121
.b8 122
.b8 53
.b8 103
.b8 109
.b8 121
.b8 105
.b8 118
.b8 97
.b8 115
.b8 101
.b8 113
.b8 110
.b8 106
.b8 55
.b8 55
.b8 114
.b8 99
.b8 51
.b8 118
.b8 103
.b8 108
.b8 117
.b8 107
.b8 117
.b8 107
.b8 120
.b8 103
.b8 51
.b8 52
.b8 115
.b8 117
.b8 100
.b8 118
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 119
.b8 101
.b8 0
	}
	.section	.debug_macinfo	{	}
