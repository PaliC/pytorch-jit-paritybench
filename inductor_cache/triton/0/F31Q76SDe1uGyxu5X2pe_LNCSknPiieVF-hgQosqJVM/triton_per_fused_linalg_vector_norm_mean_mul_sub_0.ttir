#loc = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":19:0)
#loc1 = loc(unknown)
#loc37 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":51:26)
#loc46 = loc(callsite(#loc1 at #loc37))
module {
  tt.func public @triton_per_fused_linalg_vector_norm_mean_mul_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<6.400000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<1x64xi32> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1x64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc3)
    %2 = arith.muli %1, %cst_3 : tensor<1x64xi32> loc(#loc4)
    %3 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc5)
    %4 = tt.addptr %3, %2 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc5)
    %5 = tt.load %4 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %2 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc7)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc8)
    %9 = arith.addi %2, %cst_2 : tensor<1x64xi32> loc(#loc9)
    %10 = tt.addptr %3, %9 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc10)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc11)
    %12 = tt.addptr %6, %9 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc12)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc13)
    %14 = arith.addi %2, %cst_1 : tensor<1x64xi32> loc(#loc14)
    %15 = tt.addptr %3, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc15)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc16)
    %17 = tt.addptr %6, %14 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc17)
    %18 = tt.load %17 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc18)
    %19 = arith.addi %2, %cst_0 : tensor<1x64xi32> loc(#loc19)
    %20 = tt.addptr %3, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc20)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc21)
    %22 = tt.addptr %6, %19 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc22)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<f32>> loc(#loc23)
    %24 = arith.subf %5, %8 : tensor<1x64xf32> loc(#loc24)
    %25 = arith.mulf %24, %24 : tensor<1x64xf32> loc(#loc25)
    %26 = arith.subf %11, %13 : tensor<1x64xf32> loc(#loc26)
    %27 = arith.mulf %26, %26 : tensor<1x64xf32> loc(#loc27)
    %28 = arith.addf %25, %27 : tensor<1x64xf32> loc(#loc28)
    %29 = arith.subf %16, %18 : tensor<1x64xf32> loc(#loc29)
    %30 = arith.mulf %29, %29 : tensor<1x64xf32> loc(#loc30)
    %31 = arith.addf %28, %30 : tensor<1x64xf32> loc(#loc31)
    %32 = arith.subf %21, %23 : tensor<1x64xf32> loc(#loc32)
    %33 = arith.mulf %32, %32 : tensor<1x64xf32> loc(#loc33)
    %34 = arith.addf %31, %33 : tensor<1x64xf32> loc(#loc34)
    %35 = tt.extern_elementwise %34 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<1x64xf32>) -> tensor<1x64xf32> loc(#loc35)
    %36 = "tt.reduce"(%35) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc37)), %arg5: f32 loc(callsite(#loc1 at #loc37))):
      %41 = arith.addf %arg4, %arg5 : f32 loc(#loc48)
      tt.reduce.return %41 : f32 loc(#loc45)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc45)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc39)
    %38 = arith.divf %37, %cst : tensor<1x1xf32> loc(#loc40)
    gpu.barrier loc(#loc41)
    %39 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc42)
    %40 = tt.splat %39 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc42)
    tt.store %40, %38 : tensor<1x1x!tt.ptr<f32>> loc(#loc43)
    tt.return loc(#loc44)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":26:26)
#loc3 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":26:34)
#loc4 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":30:32)
#loc5 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":30:30)
#loc6 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":30:37)
#loc7 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":31:30)
#loc8 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":31:37)
#loc9 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":32:34)
#loc10 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":32:30)
#loc11 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":32:41)
#loc12 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":33:30)
#loc13 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":33:41)
#loc14 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":34:34)
#loc15 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":34:30)
#loc16 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":34:41)
#loc17 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":35:31)
#loc18 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":35:42)
#loc19 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":36:35)
#loc20 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":36:31)
#loc21 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":36:42)
#loc22 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":37:31)
#loc23 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":37:42)
#loc24 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":38:18)
#loc25 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":39:18)
#loc26 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":40:18)
#loc27 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":41:18)
#loc28 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":42:18)
#loc29 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":43:19)
#loc30 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":44:20)
#loc31 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":45:19)
#loc32 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":46:20)
#loc33 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":47:20)
#loc34 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":48:20)
#loc35 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":49:27)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc39 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":51:29)
#loc40 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":53:20)
#loc41 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":56:4)
#loc42 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":57:28)
#loc43 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":57:71)
#loc44 = loc("inductor_cache/jq/cjqnu5saj3epxjzmpozwhreohgl6f4qobvous6pbrfapgfzo32fb.py":57:4)
#loc45 = loc(callsite(#loc36 at #loc37))
#loc47 = loc(callsite(#loc38 at #loc36))
#loc48 = loc(callsite(#loc47 at #loc37))
