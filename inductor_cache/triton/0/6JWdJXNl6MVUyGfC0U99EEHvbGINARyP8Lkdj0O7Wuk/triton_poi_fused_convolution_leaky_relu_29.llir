; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_leaky_relu_29(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 5120, !dbg !14
  %12 = sdiv i32 %10, 10, !dbg !15
  %13 = srem i32 %12, 128, !dbg !16
  %14 = sext i32 %10 to i64, !dbg !17
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !17
  %16 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %15, i1 %11) #1, !dbg !18
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !18
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !18
  %19 = sext i32 %13 to i64, !dbg !19
  %20 = getelementptr float, ptr addrspace(1) %2, i64 %19, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %11) #1, !dbg !20
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %11) #1, !dbg !20
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %14, !dbg !21
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %23, i1 %11) #1, !dbg !22
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !22
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !22
  %27 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !20
  %28 = insertelement <2 x i32> %27, i32 %21, i64 1, !dbg !20
  %29 = bitcast <2 x i32> %28 to <2 x float>, !dbg !20
  %30 = shufflevector <2 x float> %29, <2 x float> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 1>, !dbg !20
  %31 = insertelement <4 x i32> poison, i32 %26, i64 0, !dbg !22
  %32 = insertelement <4 x i32> %31, i32 %25, i64 1, !dbg !22
  %33 = insertelement <4 x i32> %32, i32 %18, i64 2, !dbg !22
  %34 = insertelement <4 x i32> %33, i32 %17, i64 3, !dbg !22
  %35 = bitcast <4 x i32> %34 to <4 x float>, !dbg !22
  %36 = fadd <4 x float> %30, %35, !dbg !23
  %37 = extractelement <4 x float> %36, i64 3, !dbg !24
  %38 = fmul float %37, 0x3FB99999A0000000, !dbg !25
  %39 = extractelement <4 x float> %36, i64 2, !dbg !24
  %40 = fmul float %39, 0x3FB99999A0000000, !dbg !25
  %41 = fcmp ogt <4 x float> %36, zeroinitializer, !dbg !26
  %42 = extractelement <4 x i1> %41, i64 3, !dbg !24
  %43 = select i1 %42, float %37, float %38, !dbg !24
  %44 = extractelement <4 x i1> %41, i64 2, !dbg !24
  %45 = select i1 %44, float %39, float %40, !dbg !24
  %46 = extractelement <4 x float> %36, i64 1, !dbg !27
  %47 = fmul float %46, 0x3FB99999A0000000, !dbg !28
  %48 = extractelement <4 x float> %36, i64 0, !dbg !27
  %49 = fmul float %48, 0x3FB99999A0000000, !dbg !28
  %50 = extractelement <4 x i1> %41, i64 1, !dbg !27
  %51 = select i1 %50, float %46, float %47, !dbg !27
  %52 = extractelement <4 x i1> %41, i64 0, !dbg !27
  %53 = select i1 %52, float %48, float %49, !dbg !27
  %54 = bitcast float %43 to i32, !dbg !29
  %55 = bitcast float %45 to i32, !dbg !29
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %54, i32 %55, ptr addrspace(1) %15, i1 %11) #1, !dbg !29
  %56 = bitcast float %51 to i32, !dbg !30
  %57 = bitcast float %53 to i32, !dbg !30
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %56, i32 %57, ptr addrspace(1) %23, i1 %11) #1, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgkqh6ffgwguj6aneup4rbgmk6tyz5advo3tqjhlam2dw2igumd4.py", directory: "inductor_cache/gk")
!4 = !{ptr @triton_poi_fused_convolution_leaky_relu_29, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_leaky_relu_29, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_leaky_relu_29", linkageName: "triton_poi_fused_convolution_leaky_relu_29", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 34, scope: !7)
!18 = !DILocation(line: 26, column: 39, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 35, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 39, scope: !7)
!23 = !DILocation(line: 35, column: 18, scope: !7)
!24 = !DILocation(line: 34, column: 32, scope: !7)
!25 = !DILocation(line: 33, column: 18, scope: !7)
!26 = !DILocation(line: 36, column: 19, scope: !7)
!27 = !DILocation(line: 38, column: 34, scope: !7)
!28 = !DILocation(line: 37, column: 19, scope: !7)
!29 = !DILocation(line: 39, column: 39, scope: !7)
!30 = !DILocation(line: 40, column: 40, scope: !7)
!31 = !DILocation(line: 40, column: 4, scope: !7)
