; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_reflection_pad2d_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = or disjoint i32 %9, 2, !dbg !13
  %12 = or disjoint i32 %9, 3, !dbg !13
  %13 = icmp slt i32 %9, 62208, !dbg !14
  %14 = srem i32 %10, 72, !dbg !15
  %15 = srem i32 %11, 72, !dbg !15
  %16 = srem i32 %12, 72, !dbg !15
  %17 = sdiv i32 %9, 72, !dbg !16
  %18 = sdiv i32 %9, 5184, !dbg !17
  %19 = add nsw i32 %14, -4, !dbg !18
  %20 = add nsw i32 %15, -4, !dbg !18
  %21 = add nsw i32 %16, -4, !dbg !18
  %22 = tail call i32 @llvm.abs.i32(i32 %19, i1 true), !dbg !19
  %23 = tail call i32 @llvm.abs.i32(i32 %20, i1 true), !dbg !19
  %24 = tail call i32 @llvm.abs.i32(i32 %21, i1 true), !dbg !19
  %25 = add nsw i32 %22, -63, !dbg !20
  %26 = add nsw i32 %23, -63, !dbg !20
  %27 = add nsw i32 %24, -63, !dbg !20
  %28 = tail call i32 @llvm.abs.i32(i32 %25, i1 true), !dbg !21
  %29 = tail call i32 @llvm.abs.i32(i32 %26, i1 true), !dbg !21
  %30 = tail call i32 @llvm.abs.i32(i32 %27, i1 true), !dbg !21
  %31 = shl nsw i32 %18, 12, !dbg !22
  %reass.sub = or disjoint i32 %31, 4095, !dbg !23
  %32 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !15
  %33 = insertelement <2 x i32> %32, i32 %17, i64 1, !dbg !15
  %34 = srem <2 x i32> %33, splat (i32 72), !dbg !15
  %35 = add nsw <2 x i32> %34, splat (i32 -4), !dbg !18
  %36 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %35, i1 true), !dbg !19
  %37 = add nsw <2 x i32> %36, splat (i32 -63), !dbg !20
  %38 = tail call <2 x i32> @llvm.abs.v2i32(<2 x i32> %37, i1 true), !dbg !21
  %39 = extractelement <2 x i32> %38, i64 0, !dbg !24
  %40 = sub nuw i32 %reass.sub, %39, !dbg !24
  %41 = extractelement <2 x i32> %38, i64 1, !dbg !24
  %42 = mul nsw i32 %41, -64, !dbg !24
  %43 = add i32 %40, %42, !dbg !24
  %44 = sub nuw i32 %reass.sub, %28, !dbg !23
  %45 = add i32 %44, %42, !dbg !24
  %46 = sub nuw i32 %reass.sub, %29, !dbg !23
  %47 = add i32 %46, %42, !dbg !24
  %48 = sub nuw i32 %reass.sub, %30, !dbg !23
  %49 = add i32 %48, %42, !dbg !24
  %50 = sext i32 %43 to i64, !dbg !25
  %51 = getelementptr float, ptr addrspace(1) %0, i64 %50, !dbg !25
  %52 = sext i32 %45 to i64, !dbg !25
  %53 = getelementptr float, ptr addrspace(1) %0, i64 %52, !dbg !25
  %54 = sext i32 %47 to i64, !dbg !25
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !25
  %56 = sext i32 %49 to i64, !dbg !25
  %57 = getelementptr float, ptr addrspace(1) %0, i64 %56, !dbg !25
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %51, i1 %13) #2, !dbg !26
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %53, i1 %13) #2, !dbg !26
  %60 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %13) #2, !dbg !26
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %57, i1 %13) #2, !dbg !26
  %62 = sext i32 %9 to i64, !dbg !27
  %63 = getelementptr float, ptr addrspace(1) %1, i64 %62, !dbg !27
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %58, i32 %59, i32 %60, i32 %61, ptr addrspace(1) %63, i1 %13) #2, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x i32> @llvm.abs.v2i32(<2 x i32>, i1 immarg) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cclz2vz4kwgnlnm32x532imbwxut4damzffqtcgsawi3fz2yud2y.py", directory: "inductor_cache/cl")
!4 = !{ptr @triton_poi_fused_reflection_pad2d_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_reflection_pad2d_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_reflection_pad2d_0", linkageName: "triton_poi_fused_reflection_pad2d_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 82, scope: !7)
!19 = !DILocation(line: 28, column: 75, scope: !7)
!20 = !DILocation(line: 28, column: 63, scope: !7)
!21 = !DILocation(line: 28, column: 55, scope: !7)
!22 = !DILocation(line: 28, column: 149, scope: !7)
!23 = !DILocation(line: 28, column: 91, scope: !7)
!24 = !DILocation(line: 28, column: 144, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 154, scope: !7)
!27 = !DILocation(line: 29, column: 25, scope: !7)
!28 = !DILocation(line: 29, column: 36, scope: !7)
!29 = !DILocation(line: 29, column: 4, scope: !7)
