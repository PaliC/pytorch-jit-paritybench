; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_add_div_relu_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #2, !dbg !10
  %7 = shl i32 %6, 4, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 14, !dbg !12
  %11 = lshr i32 %8, 3, !dbg !12
  %12 = and i32 %11, 15, !dbg !12
  %13 = or disjoint i32 %7, %10, !dbg !13
  %14 = or disjoint i32 %7, %12, !dbg !13
  %15 = icmp slt i32 %13, 64, !dbg !14
  %16 = icmp slt i32 %14, 64, !dbg !14
  %17 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !15
  %18 = shl i32 %17, 4, !dbg !16
  %19 = or disjoint i32 %18, %12, !dbg !17
  %20 = or disjoint i32 %18, %10, !dbg !17
  %21 = icmp slt i32 %19, 16, !dbg !18
  %22 = icmp slt i32 %20, 16, !dbg !18
  %.frozen = freeze i32 %13, !dbg !19
  %23 = sdiv i32 %.frozen, 16, !dbg !19
  %24 = mul i32 %23, 16, !dbg !20
  %.decomposed = sub i32 %.frozen, %24, !dbg !20
  %25 = sdiv i32 %14, 16, !dbg !19
  %26 = shl i32 %19, 4, !dbg !21
  %27 = add i32 %26, %.decomposed, !dbg !22
  %28 = shl i32 %23, 8, !dbg !23
  %29 = add i32 %27, %28, !dbg !24
  %30 = sext i32 %29 to i64, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !25
  %32 = and i1 %15, %21, !dbg !26
  %33 = and i1 %16, %22, !dbg !26
  %34 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %32) #2, !dbg !27
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !27
  %36 = extractvalue { i32, i32 } %34, 1, !dbg !27
  %37 = bitcast i32 %35 to float, !dbg !27
  %38 = bitcast i32 %36 to float, !dbg !27
  %39 = shl nsw i32 %25, 4, !dbg !28
  %40 = add i32 %39, %20, !dbg !29
  %41 = sext i32 %40 to i64, !dbg !30
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !30
  %43 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %42, i1 %33) #2, !dbg !31
  %44 = extractvalue { i32, i32 } %43, 0, !dbg !31
  %45 = extractvalue { i32, i32 } %43, 1, !dbg !31
  %46 = bitcast i32 %44 to float, !dbg !31
  %47 = bitcast i32 %45 to float, !dbg !31
  %48 = fcmp olt float %37, 0.000000e+00, !dbg !32
  %49 = fcmp olt float %38, 0.000000e+00, !dbg !32
  %50 = select i1 %48, float 0.000000e+00, float %37, !dbg !36
  %51 = select i1 %49, float 0.000000e+00, float %38, !dbg !36
  %52 = fadd float %50, 0x3F50624DE0000000, !dbg !37
  %53 = fadd float %51, 0x3F50624DE0000000, !dbg !37
  %54 = shl i32 %8, 5, !dbg !37
  %55 = and i32 %54, 224, !dbg !37
  %56 = or disjoint i32 %55, %12, !dbg !37
  %57 = and i32 %9, 254, !dbg !37
  %58 = lshr exact i32 %55, 2, !dbg !37
  %59 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %58, !dbg !37
  %60 = getelementptr float, ptr addrspace(3) %59, i32 %56, !dbg !37
  %61 = bitcast float %52 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %60, <1 x i32> %61, i1 true) #2, !dbg !37
  %62 = or disjoint i32 %56, 16, !dbg !37
  %63 = lshr i32 %62, 4, !dbg !37
  %64 = getelementptr float, ptr addrspace(3) @global_smem, i32 %63, !dbg !37
  %65 = getelementptr float, ptr addrspace(3) %64, i32 %62, !dbg !37
  %66 = bitcast float %53 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %65, <1 x i32> %66, i1 true) #2, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %67 = lshr i32 %57, 4, !dbg !37
  %68 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %67, !dbg !37
  %69 = getelementptr inbounds float, ptr addrspace(3) %68, i32 %57, !dbg !37
  %70 = load float, ptr addrspace(3) %69, align 4, !dbg !37
  %71 = or disjoint i32 %57, 1, !dbg !37
  %72 = getelementptr inbounds float, ptr addrspace(3) %68, i32 %71, !dbg !37
  %73 = load float, ptr addrspace(3) %72, align 4, !dbg !37
  %74 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %70, float %46) #2, !dbg !38
  %75 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %73, float %47) #2, !dbg !38
  %76 = shl i32 %14, 4, !dbg !39
  %77 = add i32 %20, %76, !dbg !40
  %78 = sext i32 %77 to i64, !dbg !41
  %79 = getelementptr float, ptr addrspace(1) %2, i64 %78, !dbg !41
  %80 = bitcast float %74 to i32, !dbg !42
  %81 = bitcast float %75 to i32, !dbg !42
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %80, i32 %81, ptr addrspace(1) %79, i1 %33) #2, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3ecwei2rataoseyblexmybp46ybodalvyngfnstjm27fe34lihf.py", directory: "inductor_cache/3e")
!4 = !{ptr @triton_poi_fused_add_div_relu_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_div_relu_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_div_relu_3", linkageName: "triton_poi_fused_add_div_relu_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 23, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 28, scope: !7)
!16 = !DILocation(line: 25, column: 33, scope: !7)
!17 = !DILocation(line: 26, column: 23, scope: !7)
!18 = !DILocation(line: 27, column: 21, scope: !7)
!19 = !DILocation(line: 30, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 19, scope: !7)
!21 = !DILocation(line: 32, column: 38, scope: !7)
!22 = !DILocation(line: 32, column: 35, scope: !7)
!23 = !DILocation(line: 32, column: 47, scope: !7)
!24 = !DILocation(line: 32, column: 43, scope: !7)
!25 = !DILocation(line: 32, column: 30, scope: !7)
!26 = !DILocation(line: 32, column: 60, scope: !7)
!27 = !DILocation(line: 32, column: 52, scope: !7)
!28 = !DILocation(line: 33, column: 38, scope: !7)
!29 = !DILocation(line: 33, column: 35, scope: !7)
!30 = !DILocation(line: 33, column: 30, scope: !7)
!31 = !DILocation(line: 33, column: 43, scope: !7)
!32 = !DILocation(line: 118, column: 15, scope: !33, inlinedAt: !35)
!33 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!34 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!35 = !DILocation(line: 35, column: 40, scope: !7)
!36 = !DILocation(line: 121, column: 29, scope: !33, inlinedAt: !35)
!37 = !DILocation(line: 37, column: 18, scope: !7)
!38 = !DILocation(line: 38, column: 18, scope: !7)
!39 = !DILocation(line: 39, column: 33, scope: !7)
!40 = !DILocation(line: 39, column: 30, scope: !7)
!41 = !DILocation(line: 39, column: 25, scope: !7)
!42 = !DILocation(line: 39, column: 44, scope: !7)
!43 = !DILocation(line: 39, column: 4, scope: !7)
