; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = sdiv i32 %9, 16, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 4096, !dbg !15
  %12 = mul i32 %11, 4096, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = shl i32 %10, 6, !dbg !17
  %14 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !18
  %15 = insertelement <2 x i32> %14, i32 %10, i64 1, !dbg !18
  %16 = srem <2 x i32> %15, splat (i32 16), !dbg !18
  %17 = extractelement <2 x i32> %16, i64 1, !dbg !19
  %18 = icmp sgt i32 %17, 0, !dbg !20
  %19 = extractelement <2 x i32> %16, i64 0, !dbg !19
  %20 = shl nsw i32 %19, 1, !dbg !21
  %21 = icmp sgt <2 x i32> %16, <i32 0, i32 -1>, !dbg !22
  %22 = extractelement <2 x i1> %21, i64 0, !dbg !23
  %23 = and i1 %22, %18, !dbg !23
  %24 = add i32 %13, %20, !dbg !24
  %25 = add i32 %24, -33, !dbg !25
  %26 = sext i32 %25 to i64, !dbg !26
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !26
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 %23, i32 -8388608, i1 %23) #1, !dbg !27
  %29 = bitcast i32 %28 to float, !dbg !27
  %30 = icmp sgt i32 %19, -1, !dbg !28
  %31 = and i1 %30, %18, !dbg !29
  %32 = add i32 %24, -32, !dbg !30
  %33 = sext i32 %32 to i64, !dbg !31
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !31
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %31, i32 -8388608, i1 %31) #1, !dbg !32
  %36 = bitcast i32 %35 to float, !dbg !32
  %37 = fcmp ogt float %36, %29, !dbg !33
  %38 = fcmp uno float %36, 0.000000e+00, !dbg !37
  %39 = or i1 %37, %38, !dbg !38
  %40 = select i1 %39, float %36, float %29, !dbg !39
  %41 = add i32 %24, -31, !dbg !40
  %42 = sext i32 %41 to i64, !dbg !41
  %43 = getelementptr float, ptr addrspace(1) %0, i64 %42, !dbg !41
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 %31, i32 -8388608, i1 %31) #1, !dbg !42
  %45 = bitcast i32 %44 to float, !dbg !42
  %46 = fcmp olt float %40, %45, !dbg !43
  %47 = fcmp uno float %45, 0.000000e+00, !dbg !45
  %48 = or i1 %47, %46, !dbg !46
  %49 = select i1 %48, float %45, float %40, !dbg !47
  %50 = extractelement <2 x i1> %21, i64 1, !dbg !48
  %51 = and i1 %22, %50, !dbg !48
  %52 = add i32 %24, -1, !dbg !49
  %53 = sext i32 %52 to i64, !dbg !50
  %54 = getelementptr float, ptr addrspace(1) %0, i64 %53, !dbg !50
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %51, i32 -8388608, i1 %51) #1, !dbg !51
  %56 = bitcast i32 %55 to float, !dbg !51
  %57 = fcmp olt float %49, %56, !dbg !52
  %58 = fcmp uno float %56, 0.000000e+00, !dbg !54
  %59 = or i1 %58, %57, !dbg !55
  %60 = select i1 %59, float %56, float %49, !dbg !56
  %61 = or i32 %17, %19, !dbg !19
  %62 = icmp sgt i32 %61, -1, !dbg !19
  %63 = sext i32 %24 to i64, !dbg !57
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !57
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %62, i32 -8388608, i1 %62) #1, !dbg !58
  %66 = bitcast i32 %65 to float, !dbg !58
  %67 = fcmp olt float %60, %66, !dbg !59
  %68 = fcmp uno float %66, 0.000000e+00, !dbg !61
  %69 = or i1 %68, %67, !dbg !62
  %70 = select i1 %69, float %66, float %60, !dbg !63
  %71 = or disjoint i32 %24, 1, !dbg !64
  %72 = sext i32 %71 to i64, !dbg !65
  %73 = getelementptr float, ptr addrspace(1) %0, i64 %72, !dbg !65
  %74 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %73, i1 %62, i32 -8388608, i1 %62) #1, !dbg !66
  %75 = bitcast i32 %74 to float, !dbg !66
  %76 = fcmp olt float %70, %75, !dbg !67
  %77 = fcmp uno float %75, 0.000000e+00, !dbg !69
  %78 = or i1 %77, %76, !dbg !70
  %79 = select i1 %78, float %75, float %70, !dbg !71
  %80 = add i32 %24, 31, !dbg !72
  %81 = sext i32 %80 to i64, !dbg !73
  %82 = getelementptr float, ptr addrspace(1) %0, i64 %81, !dbg !73
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %82, i1 %51, i32 -8388608, i1 %51) #1, !dbg !74
  %84 = bitcast i32 %83 to float, !dbg !74
  %85 = fcmp olt float %79, %84, !dbg !75
  %86 = fcmp uno float %84, 0.000000e+00, !dbg !77
  %87 = or i1 %86, %85, !dbg !78
  %88 = select i1 %87, float %84, float %79, !dbg !79
  %89 = add i32 %24, 32, !dbg !80
  %90 = sext i32 %89 to i64, !dbg !81
  %91 = getelementptr float, ptr addrspace(1) %0, i64 %90, !dbg !81
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %91, i1 %62, i32 -8388608, i1 %62) #1, !dbg !82
  %93 = bitcast i32 %92 to float, !dbg !82
  %94 = fcmp olt float %88, %93, !dbg !83
  %95 = fcmp uno float %93, 0.000000e+00, !dbg !85
  %96 = or i1 %95, %94, !dbg !86
  %97 = select i1 %96, float %93, float %88, !dbg !87
  %98 = add i32 %24, 33, !dbg !88
  %99 = sext i32 %98 to i64, !dbg !89
  %100 = getelementptr float, ptr addrspace(1) %0, i64 %99, !dbg !89
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %100, i1 %62, i32 -8388608, i1 %62) #1, !dbg !90
  %102 = bitcast i32 %101 to float, !dbg !90
  %103 = fcmp olt float %97, %102, !dbg !91
  %104 = fcmp uno float %102, 0.000000e+00, !dbg !93
  %105 = or i1 %104, %103, !dbg !94
  %106 = zext i1 %37 to i8, !dbg !95
  %107 = select i1 %46, i8 2, i8 %106, !dbg !96
  %108 = select i1 %57, i8 3, i8 %107, !dbg !97
  %109 = select i1 %67, i8 4, i8 %108, !dbg !98
  %110 = select i1 %76, i8 5, i8 %109, !dbg !99
  %111 = select i1 %85, i8 6, i8 %110, !dbg !100
  %112 = select i1 %94, i8 7, i8 %111, !dbg !101
  %113 = select i1 %103, i8 8, i8 %112, !dbg !102
  %114 = shl i32 %11, 13, !dbg !103
  %115 = add i32 %114, %.decomposed, !dbg !104
  %116 = sext i32 %115 to i64, !dbg !105
  %117 = getelementptr float, ptr addrspace(1) %1, i64 %116, !dbg !105
  %118 = bitcast float %97 to i32, !dbg !106
  %119 = select i1 %105, i32 %101, i32 %118, !dbg !107
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %119, ptr addrspace(1) %117, i1 true) #1, !dbg !106
  %120 = sext i32 %9 to i64, !dbg !108
  %121 = getelementptr i8, ptr addrspace(1) %2, i64 %120, !dbg !108
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %113, ptr addrspace(1) %121, i1 true) #1, !dbg !109
  ret void, !dbg !110
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clnfgtf372va7ixzv25zhwktllcjdbcsaul77nzhqc3qujt3csxf.py", directory: "inductor_cache/ln")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_5, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_5", linkageName: "triton_poi_fused_max_pool2d_with_indices_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 27, column: 19, scope: !7)
!16 = !DILocation(line: 28, column: 19, scope: !7)
!17 = !DILocation(line: 41, column: 49, scope: !7)
!18 = !DILocation(line: 25, column: 19, scope: !7)
!19 = !DILocation(line: 63, column: 20, scope: !7)
!20 = !DILocation(line: 32, column: 19, scope: !7)
!21 = !DILocation(line: 36, column: 20, scope: !7)
!22 = !DILocation(line: 37, column: 19, scope: !7)
!23 = !DILocation(line: 40, column: 19, scope: !7)
!24 = !DILocation(line: 41, column: 39, scope: !7)
!25 = !DILocation(line: 41, column: 46, scope: !7)
!26 = !DILocation(line: 41, column: 31, scope: !7)
!27 = !DILocation(line: 41, column: 54, scope: !7)
!28 = !DILocation(line: 43, column: 21, scope: !7)
!29 = !DILocation(line: 46, column: 19, scope: !7)
!30 = !DILocation(line: 47, column: 46, scope: !7)
!31 = !DILocation(line: 47, column: 31, scope: !7)
!32 = !DILocation(line: 47, column: 54, scope: !7)
!33 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !36)
!34 = distinct !DILexicalBlockFile(scope: !7, file: !35, discriminator: 0)
!35 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!36 = !DILocation(line: 48, column: 42, scope: !7)
!37 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !36)
!38 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !36)
!39 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !36)
!40 = !DILocation(line: 54, column: 46, scope: !7)
!41 = !DILocation(line: 54, column: 31, scope: !7)
!42 = !DILocation(line: 54, column: 54, scope: !7)
!43 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !44)
!44 = !DILocation(line: 55, column: 42, scope: !7)
!45 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !44)
!46 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !44)
!47 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !44)
!48 = !DILocation(line: 60, column: 20, scope: !7)
!49 = !DILocation(line: 61, column: 45, scope: !7)
!50 = !DILocation(line: 61, column: 31, scope: !7)
!51 = !DILocation(line: 61, column: 53, scope: !7)
!52 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !53)
!53 = !DILocation(line: 62, column: 42, scope: !7)
!54 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !53)
!55 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !53)
!56 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !53)
!57 = !DILocation(line: 64, column: 31, scope: !7)
!58 = !DILocation(line: 64, column: 46, scope: !7)
!59 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !60)
!60 = !DILocation(line: 65, column: 42, scope: !7)
!61 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !60)
!62 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !60)
!63 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !60)
!64 = !DILocation(line: 67, column: 42, scope: !7)
!65 = !DILocation(line: 67, column: 31, scope: !7)
!66 = !DILocation(line: 67, column: 50, scope: !7)
!67 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !68)
!68 = !DILocation(line: 68, column: 42, scope: !7)
!69 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !68)
!70 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !68)
!71 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !68)
!72 = !DILocation(line: 74, column: 43, scope: !7)
!73 = !DILocation(line: 74, column: 31, scope: !7)
!74 = !DILocation(line: 74, column: 51, scope: !7)
!75 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !76)
!76 = !DILocation(line: 75, column: 42, scope: !7)
!77 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !76)
!78 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !76)
!79 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !76)
!80 = !DILocation(line: 77, column: 43, scope: !7)
!81 = !DILocation(line: 77, column: 31, scope: !7)
!82 = !DILocation(line: 77, column: 51, scope: !7)
!83 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !84)
!84 = !DILocation(line: 78, column: 42, scope: !7)
!85 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !84)
!86 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !84)
!87 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !84)
!88 = !DILocation(line: 80, column: 43, scope: !7)
!89 = !DILocation(line: 80, column: 31, scope: !7)
!90 = !DILocation(line: 80, column: 51, scope: !7)
!91 = !DILocation(line: 118, column: 15, scope: !34, inlinedAt: !92)
!92 = !DILocation(line: 81, column: 42, scope: !7)
!93 = !DILocation(line: 120, column: 21, scope: !34, inlinedAt: !92)
!94 = !DILocation(line: 120, column: 16, scope: !34, inlinedAt: !92)
!95 = !DILocation(line: 85, column: 35, scope: !7)
!96 = !DILocation(line: 88, column: 35, scope: !7)
!97 = !DILocation(line: 91, column: 35, scope: !7)
!98 = !DILocation(line: 94, column: 35, scope: !7)
!99 = !DILocation(line: 97, column: 35, scope: !7)
!100 = !DILocation(line: 100, column: 35, scope: !7)
!101 = !DILocation(line: 103, column: 35, scope: !7)
!102 = !DILocation(line: 106, column: 35, scope: !7)
!103 = !DILocation(line: 107, column: 35, scope: !7)
!104 = !DILocation(line: 107, column: 30, scope: !7)
!105 = !DILocation(line: 107, column: 25, scope: !7)
!106 = !DILocation(line: 107, column: 47, scope: !7)
!107 = !DILocation(line: 121, column: 29, scope: !34, inlinedAt: !92)
!108 = !DILocation(line: 108, column: 25, scope: !7)
!109 = !DILocation(line: 108, column: 37, scope: !7)
!110 = !DILocation(line: 108, column: 4, scope: !7)
