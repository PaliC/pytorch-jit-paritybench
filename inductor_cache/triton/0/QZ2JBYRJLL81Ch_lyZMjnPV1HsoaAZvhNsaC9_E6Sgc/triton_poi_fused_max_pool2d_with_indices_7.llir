; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_max_pool2d_with_indices_7(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = and i32 %7, 255, !dbg !12
  %11 = or disjoint i32 %10, 256, !dbg !12
  %12 = or disjoint i32 %6, %9, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = or disjoint i32 %6, %10, !dbg !13
  %15 = or disjoint i32 %6, %11, !dbg !13
  %16 = icmp slt i32 %12, 2857728, !dbg !14
  %17 = icmp slt i32 %14, 2857728, !dbg !14
  %18 = icmp slt i32 %15, 2857728, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %19 = sdiv i32 %.frozen, 61, !dbg !15
  %20 = mul i32 %19, 61, !dbg !16
  %.decomposed = sub i32 %.frozen, %20, !dbg !16
  %.frozen1 = freeze i32 %13, !dbg !15
  %21 = sdiv i32 %.frozen1, 61, !dbg !15
  %22 = mul i32 %21, 61, !dbg !16
  %.decomposed2 = sub i32 %.frozen1, %22, !dbg !16
  %23 = srem i32 %19, 61, !dbg !17
  %24 = srem i32 %21, 61, !dbg !17
  %25 = sdiv i32 %12, 3721, !dbg !18
  %26 = sdiv i32 %13, 3721, !dbg !18
  %.frozen5 = freeze i32 %14, !dbg !18
  %27 = sdiv i32 %.frozen5, 3721, !dbg !18
  %.frozen7 = freeze i32 %15, !dbg !18
  %28 = sdiv i32 %.frozen7, 3721, !dbg !18
  %.frozen3 = freeze i32 %12, !dbg !19
  %29 = sdiv i32 %.frozen3, 714432, !dbg !19
  %30 = mul i32 %29, 714432, !dbg !20
  %.decomposed4 = sub i32 %.frozen3, %30, !dbg !20
  %31 = mul i32 %27, 3721, !dbg !21
  %.decomposed6 = sub i32 %.frozen5, %31, !dbg !21
  %32 = mul i32 %28, 3721, !dbg !21
  %.decomposed8 = sub i32 %.frozen7, %32, !dbg !21
  %33 = shl nsw i32 %.decomposed, 1, !dbg !22
  %34 = shl nsw i32 %.decomposed2, 1, !dbg !22
  %35 = mul nsw i32 %23, 248, !dbg !23
  %36 = mul nsw i32 %24, 248, !dbg !23
  %37 = mul i32 %25, 15376, !dbg !24
  %38 = mul i32 %26, 15376, !dbg !24
  %39 = add i32 %35, %37, !dbg !25
  %40 = add i32 %39, %33, !dbg !26
  %41 = add i32 %36, %38, !dbg !25
  %42 = add i32 %41, %34, !dbg !26
  %43 = sext i32 %40 to i64, !dbg !27
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !27
  %45 = sext i32 %42 to i64, !dbg !27
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !27
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 %16) #2, !dbg !28
  %48 = bitcast i32 %47 to float, !dbg !28
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %46, i1 %16) #2, !dbg !28
  %50 = bitcast i32 %49 to float, !dbg !28
  %51 = or disjoint i32 %39, 1, !dbg !29
  %52 = add i32 %51, %33, !dbg !30
  %53 = or disjoint i32 %41, 1, !dbg !29
  %54 = add i32 %53, %34, !dbg !30
  %55 = sext i32 %52 to i64, !dbg !31
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !31
  %57 = sext i32 %54 to i64, !dbg !31
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !31
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %16) #2, !dbg !32
  %60 = bitcast i32 %59 to float, !dbg !32
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %16) #2, !dbg !32
  %62 = bitcast i32 %61 to float, !dbg !32
  %63 = or disjoint i32 %39, 2, !dbg !33
  %64 = add i32 %63, %33, !dbg !34
  %65 = or disjoint i32 %41, 2, !dbg !33
  %66 = add i32 %65, %34, !dbg !34
  %67 = sext i32 %64 to i64, !dbg !35
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !35
  %69 = sext i32 %66 to i64, !dbg !35
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !35
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %68, i1 %16) #2, !dbg !36
  %72 = bitcast i32 %71 to float, !dbg !36
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 %16) #2, !dbg !36
  %74 = bitcast i32 %73 to float, !dbg !36
  %75 = add i32 %39, 124, !dbg !37
  %76 = add i32 %75, %33, !dbg !38
  %77 = add i32 %41, 124, !dbg !37
  %78 = add i32 %77, %34, !dbg !38
  %79 = sext i32 %76 to i64, !dbg !39
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !39
  %81 = sext i32 %78 to i64, !dbg !39
  %82 = getelementptr float, ptr addrspace(1) %0, i64 %81, !dbg !39
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %16) #2, !dbg !40
  %84 = bitcast i32 %83 to float, !dbg !40
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %82, i1 %16) #2, !dbg !40
  %86 = bitcast i32 %85 to float, !dbg !40
  %87 = add i32 %39, 125, !dbg !41
  %88 = add i32 %87, %33, !dbg !42
  %89 = add i32 %41, 125, !dbg !41
  %90 = add i32 %89, %34, !dbg !42
  %91 = sext i32 %88 to i64, !dbg !43
  %92 = getelementptr float, ptr addrspace(1) %0, i64 %91, !dbg !43
  %93 = sext i32 %90 to i64, !dbg !43
  %94 = getelementptr float, ptr addrspace(1) %0, i64 %93, !dbg !43
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %92, i1 %16) #2, !dbg !44
  %96 = bitcast i32 %95 to float, !dbg !44
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %94, i1 %16) #2, !dbg !44
  %98 = bitcast i32 %97 to float, !dbg !44
  %99 = add i32 %39, 126, !dbg !45
  %100 = add i32 %99, %33, !dbg !46
  %101 = add i32 %41, 126, !dbg !45
  %102 = add i32 %101, %34, !dbg !46
  %103 = sext i32 %100 to i64, !dbg !47
  %104 = getelementptr float, ptr addrspace(1) %0, i64 %103, !dbg !47
  %105 = sext i32 %102 to i64, !dbg !47
  %106 = getelementptr float, ptr addrspace(1) %0, i64 %105, !dbg !47
  %107 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %104, i1 %16) #2, !dbg !48
  %108 = bitcast i32 %107 to float, !dbg !48
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %106, i1 %16) #2, !dbg !48
  %110 = bitcast i32 %109 to float, !dbg !48
  %111 = add i32 %39, 248, !dbg !49
  %112 = add i32 %111, %33, !dbg !50
  %113 = add i32 %41, 248, !dbg !49
  %114 = add i32 %113, %34, !dbg !50
  %115 = sext i32 %112 to i64, !dbg !51
  %116 = getelementptr float, ptr addrspace(1) %0, i64 %115, !dbg !51
  %117 = sext i32 %114 to i64, !dbg !51
  %118 = getelementptr float, ptr addrspace(1) %0, i64 %117, !dbg !51
  %119 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %116, i1 %16) #2, !dbg !52
  %120 = bitcast i32 %119 to float, !dbg !52
  %121 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %118, i1 %16) #2, !dbg !52
  %122 = bitcast i32 %121 to float, !dbg !52
  %123 = add i32 %39, 249, !dbg !53
  %124 = add i32 %123, %33, !dbg !54
  %125 = add i32 %41, 249, !dbg !53
  %126 = add i32 %125, %34, !dbg !54
  %127 = sext i32 %124 to i64, !dbg !55
  %128 = getelementptr float, ptr addrspace(1) %0, i64 %127, !dbg !55
  %129 = sext i32 %126 to i64, !dbg !55
  %130 = getelementptr float, ptr addrspace(1) %0, i64 %129, !dbg !55
  %131 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %128, i1 %16) #2, !dbg !56
  %132 = bitcast i32 %131 to float, !dbg !56
  %133 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %130, i1 %16) #2, !dbg !56
  %134 = bitcast i32 %133 to float, !dbg !56
  %135 = add i32 %39, 250, !dbg !57
  %136 = add i32 %135, %33, !dbg !58
  %137 = add i32 %41, 250, !dbg !57
  %138 = add i32 %137, %34, !dbg !58
  %139 = sext i32 %136 to i64, !dbg !59
  %140 = getelementptr float, ptr addrspace(1) %0, i64 %139, !dbg !59
  %141 = sext i32 %138 to i64, !dbg !59
  %142 = getelementptr float, ptr addrspace(1) %0, i64 %141, !dbg !59
  %143 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %140, i1 %16) #2, !dbg !60
  %144 = bitcast i32 %143 to float, !dbg !60
  %145 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %142, i1 %16) #2, !dbg !60
  %146 = bitcast i32 %145 to float, !dbg !60
  %147 = fcmp ogt float %60, %48, !dbg !61
  %148 = fcmp ogt float %62, %50, !dbg !61
  %149 = fcmp uno float %60, 0.000000e+00, !dbg !65
  %150 = fcmp uno float %62, 0.000000e+00, !dbg !65
  %151 = or i1 %147, %149, !dbg !66
  %152 = or i1 %148, %150, !dbg !66
  %153 = select i1 %151, float %60, float %48, !dbg !67
  %154 = select i1 %152, float %62, float %50, !dbg !67
  %155 = fcmp olt float %153, %72, !dbg !68
  %156 = fcmp olt float %154, %74, !dbg !68
  %157 = fcmp uno float %72, 0.000000e+00, !dbg !70
  %158 = fcmp uno float %74, 0.000000e+00, !dbg !70
  %159 = or i1 %157, %155, !dbg !71
  %160 = or i1 %158, %156, !dbg !71
  %161 = select i1 %159, float %72, float %153, !dbg !72
  %162 = select i1 %160, float %74, float %154, !dbg !72
  %163 = fcmp olt float %161, %84, !dbg !73
  %164 = fcmp olt float %162, %86, !dbg !73
  %165 = fcmp uno float %84, 0.000000e+00, !dbg !75
  %166 = fcmp uno float %86, 0.000000e+00, !dbg !75
  %167 = or i1 %165, %163, !dbg !76
  %168 = or i1 %166, %164, !dbg !76
  %169 = select i1 %167, float %84, float %161, !dbg !77
  %170 = select i1 %168, float %86, float %162, !dbg !77
  %171 = fcmp olt float %169, %96, !dbg !78
  %172 = fcmp olt float %170, %98, !dbg !78
  %173 = fcmp uno float %96, 0.000000e+00, !dbg !80
  %174 = fcmp uno float %98, 0.000000e+00, !dbg !80
  %175 = or i1 %173, %171, !dbg !81
  %176 = or i1 %174, %172, !dbg !81
  %177 = select i1 %175, float %96, float %169, !dbg !82
  %178 = select i1 %176, float %98, float %170, !dbg !82
  %179 = fcmp olt float %177, %108, !dbg !83
  %180 = fcmp olt float %178, %110, !dbg !83
  %181 = fcmp uno float %108, 0.000000e+00, !dbg !85
  %182 = fcmp uno float %110, 0.000000e+00, !dbg !85
  %183 = or i1 %181, %179, !dbg !86
  %184 = or i1 %182, %180, !dbg !86
  %185 = select i1 %183, float %108, float %177, !dbg !87
  %186 = select i1 %184, float %110, float %178, !dbg !87
  %187 = fcmp olt float %185, %120, !dbg !88
  %188 = fcmp olt float %186, %122, !dbg !88
  %189 = fcmp uno float %120, 0.000000e+00, !dbg !90
  %190 = fcmp uno float %122, 0.000000e+00, !dbg !90
  %191 = or i1 %189, %187, !dbg !91
  %192 = or i1 %190, %188, !dbg !91
  %193 = select i1 %191, float %120, float %185, !dbg !92
  %194 = select i1 %192, float %122, float %186, !dbg !92
  %195 = fcmp olt float %193, %132, !dbg !93
  %196 = fcmp olt float %194, %134, !dbg !93
  %197 = fcmp uno float %132, 0.000000e+00, !dbg !95
  %198 = fcmp uno float %134, 0.000000e+00, !dbg !95
  %199 = or i1 %197, %195, !dbg !96
  %200 = or i1 %198, %196, !dbg !96
  %201 = select i1 %199, float %132, float %193, !dbg !97
  %202 = select i1 %200, float %134, float %194, !dbg !97
  %203 = fcmp olt float %201, %144, !dbg !98
  %204 = fcmp olt float %202, %146, !dbg !98
  %205 = fcmp uno float %144, 0.000000e+00, !dbg !100
  %206 = fcmp uno float %146, 0.000000e+00, !dbg !100
  %207 = or i1 %205, %203, !dbg !101
  %208 = or i1 %206, %204, !dbg !101
  %209 = zext i1 %147 to i8, !dbg !102
  %210 = zext i1 %148 to i8, !dbg !102
  %211 = select i1 %155, i8 2, i8 %209, !dbg !103
  %212 = select i1 %156, i8 2, i8 %210, !dbg !103
  %213 = select i1 %163, i8 3, i8 %211, !dbg !104
  %214 = select i1 %164, i8 3, i8 %212, !dbg !104
  %215 = select i1 %171, i8 4, i8 %213, !dbg !105
  %216 = select i1 %172, i8 4, i8 %214, !dbg !105
  %217 = select i1 %179, i8 5, i8 %215, !dbg !106
  %218 = select i1 %180, i8 5, i8 %216, !dbg !106
  %219 = select i1 %187, i8 6, i8 %217, !dbg !107
  %220 = select i1 %188, i8 6, i8 %218, !dbg !107
  %221 = select i1 %195, i8 7, i8 %219, !dbg !108
  %222 = select i1 %196, i8 7, i8 %220, !dbg !108
  %223 = select i1 %203, i8 8, i8 %221, !dbg !109
  %224 = select i1 %204, i8 8, i8 %222, !dbg !109
  %225 = mul i32 %29, 1428864, !dbg !110
  %226 = add i32 %225, %.decomposed4, !dbg !111
  %227 = sext i32 %226 to i64, !dbg !112
  %228 = getelementptr float, ptr addrspace(1) %1, i64 %227, !dbg !112
  %229 = bitcast float %201 to i32, !dbg !113
  %230 = select i1 %207, i32 %143, i32 %229, !dbg !114
  %231 = bitcast float %202 to i32, !dbg !113
  %232 = select i1 %208, i32 %145, i32 %231, !dbg !114
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %230, i32 %232, ptr addrspace(1) %228, i1 %16) #2, !dbg !113
  %233 = mul i32 %27, 3840, !dbg !115
  %234 = mul i32 %28, 3840, !dbg !115
  %235 = add i32 %233, %.decomposed6, !dbg !116
  %236 = add i32 %234, %.decomposed8, !dbg !116
  %237 = sext i32 %235 to i64, !dbg !117
  %238 = getelementptr i8, ptr addrspace(1) %2, i64 %237, !dbg !117
  %239 = sext i32 %236 to i64, !dbg !117
  %240 = getelementptr i8, ptr addrspace(1) %2, i64 %239, !dbg !117
  %241 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %9, !dbg !118
  tail call void asm sideeffect "@$3 st.shared.v2.b8 [ $0 + 0 ], { $1, $2 };", "r,h,h,b"(ptr addrspace(3) %241, i8 %223, i8 %224, i1 true) #2, !dbg !118
  tail call void @llvm.nvvm.barrier0(), !dbg !118
  %242 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %10, !dbg !118
  %243 = load i8, ptr addrspace(3) %242, align 1, !dbg !118
  %244 = getelementptr inbounds i8, ptr addrspace(3) @global_smem, i32 %11, !dbg !118
  %245 = load i8, ptr addrspace(3) %244, align 1, !dbg !118
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %243, ptr addrspace(1) %238, i1 %17) #2, !dbg !118
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %245, ptr addrspace(1) %240, i1 %18) #2, !dbg !118
  ret void, !dbg !119
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cx2tckj6cllfdx4rg3cbsamwqjucolxvt5bsi4cgzqjf3qwemwwq.py", directory: "inductor_cache/x2")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_7, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_7, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_7", linkageName: "triton_poi_fused_max_pool2d_with_indices_7", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 27, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 30, column: 32, scope: !7)
!23 = !DILocation(line: 30, column: 41, scope: !7)
!24 = !DILocation(line: 30, column: 52, scope: !7)
!25 = !DILocation(line: 30, column: 37, scope: !7)
!26 = !DILocation(line: 30, column: 46, scope: !7)
!27 = !DILocation(line: 30, column: 30, scope: !7)
!28 = !DILocation(line: 30, column: 57, scope: !7)
!29 = !DILocation(line: 31, column: 41, scope: !7)
!30 = !DILocation(line: 31, column: 50, scope: !7)
!31 = !DILocation(line: 31, column: 30, scope: !7)
!32 = !DILocation(line: 31, column: 61, scope: !7)
!33 = !DILocation(line: 32, column: 41, scope: !7)
!34 = !DILocation(line: 32, column: 50, scope: !7)
!35 = !DILocation(line: 32, column: 30, scope: !7)
!36 = !DILocation(line: 32, column: 61, scope: !7)
!37 = !DILocation(line: 33, column: 43, scope: !7)
!38 = !DILocation(line: 33, column: 52, scope: !7)
!39 = !DILocation(line: 33, column: 30, scope: !7)
!40 = !DILocation(line: 33, column: 63, scope: !7)
!41 = !DILocation(line: 34, column: 43, scope: !7)
!42 = !DILocation(line: 34, column: 52, scope: !7)
!43 = !DILocation(line: 34, column: 30, scope: !7)
!44 = !DILocation(line: 34, column: 63, scope: !7)
!45 = !DILocation(line: 35, column: 43, scope: !7)
!46 = !DILocation(line: 35, column: 52, scope: !7)
!47 = !DILocation(line: 35, column: 30, scope: !7)
!48 = !DILocation(line: 35, column: 63, scope: !7)
!49 = !DILocation(line: 36, column: 44, scope: !7)
!50 = !DILocation(line: 36, column: 53, scope: !7)
!51 = !DILocation(line: 36, column: 31, scope: !7)
!52 = !DILocation(line: 36, column: 64, scope: !7)
!53 = !DILocation(line: 37, column: 44, scope: !7)
!54 = !DILocation(line: 37, column: 53, scope: !7)
!55 = !DILocation(line: 37, column: 31, scope: !7)
!56 = !DILocation(line: 37, column: 64, scope: !7)
!57 = !DILocation(line: 38, column: 44, scope: !7)
!58 = !DILocation(line: 38, column: 53, scope: !7)
!59 = !DILocation(line: 38, column: 31, scope: !7)
!60 = !DILocation(line: 38, column: 64, scope: !7)
!61 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !64)
!62 = distinct !DILexicalBlockFile(scope: !7, file: !63, discriminator: 0)
!63 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!64 = !DILocation(line: 39, column: 40, scope: !7)
!65 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !64)
!66 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !64)
!67 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !64)
!68 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !69)
!69 = !DILocation(line: 40, column: 40, scope: !7)
!70 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !69)
!71 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !69)
!72 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !69)
!73 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !74)
!74 = !DILocation(line: 41, column: 40, scope: !7)
!75 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !74)
!76 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !74)
!77 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !74)
!78 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !79)
!79 = !DILocation(line: 42, column: 40, scope: !7)
!80 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !79)
!81 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !79)
!82 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !79)
!83 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !84)
!84 = !DILocation(line: 43, column: 41, scope: !7)
!85 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !84)
!86 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !84)
!87 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !84)
!88 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !89)
!89 = !DILocation(line: 44, column: 42, scope: !7)
!90 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !89)
!91 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !89)
!92 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !89)
!93 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !94)
!94 = !DILocation(line: 45, column: 42, scope: !7)
!95 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !94)
!96 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !94)
!97 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !94)
!98 = !DILocation(line: 118, column: 15, scope: !62, inlinedAt: !99)
!99 = !DILocation(line: 46, column: 42, scope: !7)
!100 = !DILocation(line: 120, column: 21, scope: !62, inlinedAt: !99)
!101 = !DILocation(line: 120, column: 16, scope: !62, inlinedAt: !99)
!102 = !DILocation(line: 50, column: 35, scope: !7)
!103 = !DILocation(line: 53, column: 35, scope: !7)
!104 = !DILocation(line: 56, column: 35, scope: !7)
!105 = !DILocation(line: 59, column: 35, scope: !7)
!106 = !DILocation(line: 62, column: 35, scope: !7)
!107 = !DILocation(line: 65, column: 35, scope: !7)
!108 = !DILocation(line: 68, column: 35, scope: !7)
!109 = !DILocation(line: 71, column: 35, scope: !7)
!110 = !DILocation(line: 72, column: 38, scope: !7)
!111 = !DILocation(line: 72, column: 30, scope: !7)
!112 = !DILocation(line: 72, column: 25, scope: !7)
!113 = !DILocation(line: 72, column: 50, scope: !7)
!114 = !DILocation(line: 121, column: 29, scope: !62, inlinedAt: !99)
!115 = !DILocation(line: 73, column: 35, scope: !7)
!116 = !DILocation(line: 73, column: 30, scope: !7)
!117 = !DILocation(line: 73, column: 25, scope: !7)
!118 = !DILocation(line: 73, column: 47, scope: !7)
!119 = !DILocation(line: 73, column: 4, scope: !7)
