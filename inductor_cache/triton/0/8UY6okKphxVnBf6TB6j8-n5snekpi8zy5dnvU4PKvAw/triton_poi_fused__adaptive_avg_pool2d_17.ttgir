#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__adaptive_avg_pool2d_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":19:0)) attributes {noinline = false} {
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<5> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<32768> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<9> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<3> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<2> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<73728> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<2048> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<6> : tensor<1024xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<12288> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_12 : tensor<1024xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_11 : tensor<1024xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_10 : tensor<1024xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %7, %cst_11 : tensor<1024xi32, #blocked> loc(#loc9)
    %9 = arith.remsi %4, %cst_10 : tensor<1024xi32, #blocked> loc(#loc10)
    %10 = arith.divsi %4, %cst_9 : tensor<1024xi32, #blocked> loc(#loc11)
    %11 = arith.muli %6, %cst_8 : tensor<1024xi32, #blocked> loc(#loc12)
    %12 = arith.divsi %11, %cst_7 : tensor<1024xi32, #blocked> loc(#loc13)
    %13 = arith.muli %6, %cst_6 : tensor<1024xi32, #blocked> loc(#loc14)
    %14 = arith.addi %13, %cst_5 : tensor<1024xi32, #blocked> loc(#loc15)
    %15 = arith.divsi %14, %cst_11 : tensor<1024xi32, #blocked> loc(#loc16)
    %16 = arith.cmpi slt, %12, %15 : tensor<1024xi32, #blocked> loc(#loc17)
    %17 = arith.muli %8, %cst_8 : tensor<1024xi32, #blocked> loc(#loc18)
    %18 = arith.divsi %17, %cst_7 : tensor<1024xi32, #blocked> loc(#loc19)
    %19 = arith.muli %8, %cst_6 : tensor<1024xi32, #blocked> loc(#loc20)
    %20 = arith.addi %19, %cst_5 : tensor<1024xi32, #blocked> loc(#loc21)
    %21 = arith.divsi %20, %cst_11 : tensor<1024xi32, #blocked> loc(#loc22)
    %22 = arith.cmpi slt, %18, %21 : tensor<1024xi32, #blocked> loc(#loc23)
    %23 = arith.andi %16, %22 : tensor<1024xi1, #blocked> loc(#loc24)
    %24 = arith.muli %12, %cst_6 : tensor<1024xi32, #blocked> loc(#loc25)
    %25 = arith.muli %9, %cst_4 : tensor<1024xi32, #blocked> loc(#loc26)
    %26 = arith.addi %24, %25 : tensor<1024xi32, #blocked> loc(#loc27)
    %27 = arith.muli %10, %cst_3 : tensor<1024xi32, #blocked> loc(#loc28)
    %28 = arith.addi %26, %27 : tensor<1024xi32, #blocked> loc(#loc29)
    %29 = arith.addi %28, %18 : tensor<1024xi32, #blocked> loc(#loc30)
    %30 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc31)
    %31 = tt.addptr %30, %29 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc31)
    %32 = tt.load %31, %23, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc32)
    %33 = arith.addi %18, %cst_2 : tensor<1024xi32, #blocked> loc(#loc33)
    %34 = arith.cmpi slt, %33, %21 : tensor<1024xi32, #blocked> loc(#loc34)
    %35 = arith.andi %16, %34 : tensor<1024xi1, #blocked> loc(#loc35)
    %36 = arith.addi %24, %cst_2 : tensor<1024xi32, #blocked> loc(#loc36)
    %37 = arith.addi %36, %25 : tensor<1024xi32, #blocked> loc(#loc37)
    %38 = arith.addi %37, %27 : tensor<1024xi32, #blocked> loc(#loc38)
    %39 = arith.addi %38, %18 : tensor<1024xi32, #blocked> loc(#loc39)
    %40 = tt.addptr %30, %39 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc40)
    %41 = tt.load %40, %35, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc41)
    %42 = arith.addf %41, %32 : tensor<1024xf32, #blocked> loc(#loc42)
    %43 = arith.addi %12, %cst_2 : tensor<1024xi32, #blocked> loc(#loc43)
    %44 = arith.cmpi slt, %43, %15 : tensor<1024xi32, #blocked> loc(#loc44)
    %45 = arith.andi %44, %22 : tensor<1024xi1, #blocked> loc(#loc45)
    %46 = arith.addi %24, %cst_6 : tensor<1024xi32, #blocked> loc(#loc46)
    %47 = arith.addi %46, %25 : tensor<1024xi32, #blocked> loc(#loc47)
    %48 = arith.addi %47, %27 : tensor<1024xi32, #blocked> loc(#loc48)
    %49 = arith.addi %48, %18 : tensor<1024xi32, #blocked> loc(#loc49)
    %50 = tt.addptr %30, %49 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc50)
    %51 = tt.load %50, %45, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc51)
    %52 = arith.addf %51, %42 : tensor<1024xf32, #blocked> loc(#loc52)
    %53 = arith.andi %44, %34 : tensor<1024xi1, #blocked> loc(#loc53)
    %54 = arith.addi %24, %cst_1 : tensor<1024xi32, #blocked> loc(#loc54)
    %55 = arith.addi %54, %25 : tensor<1024xi32, #blocked> loc(#loc55)
    %56 = arith.addi %55, %27 : tensor<1024xi32, #blocked> loc(#loc56)
    %57 = arith.addi %56, %18 : tensor<1024xi32, #blocked> loc(#loc57)
    %58 = tt.addptr %30, %57 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc58)
    %59 = tt.load %58, %53, %cst evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc59)
    %60 = arith.addf %59, %52 : tensor<1024xf32, #blocked> loc(#loc60)
    %61 = arith.select %23, %cst_0, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc61)
    %62 = arith.select %35, %cst_0, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc62)
    %63 = arith.addf %62, %61 : tensor<1024xf32, #blocked> loc(#loc63)
    %64 = arith.select %45, %cst_0, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc64)
    %65 = arith.addf %64, %63 : tensor<1024xf32, #blocked> loc(#loc65)
    %66 = arith.select %53, %cst_0, %cst : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc66)
    %67 = arith.addf %66, %65 : tensor<1024xf32, #blocked> loc(#loc67)
    %68 = arith.divf %60, %67 : tensor<1024xf32, #blocked> loc(#loc68)
    %69 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc69)
    %70 = tt.addptr %69, %4 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc69)
    tt.store %70, %68 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc70)
    tt.return loc(#loc71)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":21:28)
#loc3 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":21:33)
#loc4 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":22:36)
#loc5 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":22:23)
#loc6 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":24:21)
#loc7 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":24:30)
#loc8 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":25:21)
#loc9 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":25:29)
#loc10 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":26:19)
#loc11 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":27:19)
#loc12 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":29:14)
#loc13 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":29:21)
#loc14 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":30:18)
#loc15 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":30:16)
#loc16 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":30:25)
#loc17 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":31:18)
#loc18 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":32:14)
#loc19 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":32:21)
#loc20 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":33:18)
#loc21 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":33:16)
#loc22 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":33:25)
#loc23 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":34:18)
#loc24 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":35:18)
#loc25 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:33)
#loc26 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:51)
#loc27 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:48)
#loc28 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:62)
#loc29 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:56)
#loc30 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:68)
#loc31 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:30)
#loc32 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":36:83)
#loc33 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":37:16)
#loc34 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":38:18)
#loc35 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":39:19)
#loc36 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":40:35)
#loc37 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":40:53)
#loc38 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":40:61)
#loc39 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":40:73)
#loc40 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":40:31)
#loc41 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":40:88)
#loc42 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":41:20)
#loc43 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":42:17)
#loc44 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":43:20)
#loc45 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":44:20)
#loc46 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":45:35)
#loc47 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":45:53)
#loc48 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":45:61)
#loc49 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":45:73)
#loc50 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":45:31)
#loc51 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":45:88)
#loc52 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":46:20)
#loc53 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":47:20)
#loc54 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":48:35)
#loc55 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":48:53)
#loc56 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":48:61)
#loc57 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":48:73)
#loc58 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":48:31)
#loc59 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":48:88)
#loc60 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":49:20)
#loc61 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":52:34)
#loc62 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":55:35)
#loc63 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":56:20)
#loc64 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":59:35)
#loc65 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":60:20)
#loc66 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":63:35)
#loc67 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":64:20)
#loc68 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":65:20)
#loc69 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":66:25)
#loc70 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":66:37)
#loc71 = loc("inductor_cache/6g/c6gp767t6rfcjsqbpsth43b6phuhuqwglzqn7lyy7hoq6c75ogue.py":66:4)
