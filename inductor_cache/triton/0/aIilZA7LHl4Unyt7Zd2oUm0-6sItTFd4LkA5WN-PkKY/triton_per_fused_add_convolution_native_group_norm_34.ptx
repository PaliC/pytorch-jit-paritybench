//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_native_group_norm_34 // -- Begin function triton_per_fused_add_convolution_native_group_norm_34
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_convolution_native_group_norm_34
.visible .entry triton_per_fused_add_convolution_native_group_norm_34(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_34_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_34_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_34_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_34_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_34_param_4,
	.param .u32 triton_per_fused_add_convolution_native_group_norm_34_param_5,
	.param .u32 triton_per_fused_add_convolution_native_group_norm_34_param_6
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<79>;
	.reg .f32 	%f<66>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd10, [triton_per_fused_add_convolution_native_group_norm_34_param_0];
	ld.param.u64 	%rd11, [triton_per_fused_add_convolution_native_group_norm_34_param_1];
$L__tmp0:
	.loc	1 24 28                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd12, [triton_per_fused_add_convolution_native_group_norm_34_param_2];
	.loc	1 27 26                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:27:26
	mov.u32 	%r38, %tid.x;
	and.b32  	%r39, %r38, 31;
	ld.param.u64 	%rd13, [triton_per_fused_add_convolution_native_group_norm_34_param_3];
	ld.param.u64 	%rd14, [triton_per_fused_add_convolution_native_group_norm_34_param_4];
	shl.b32 	%r40, %r38, 2;
	and.b32  	%r41, %r40, 252;
	.loc	1 32 19                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:32:19
	bfe.u32 	%r42, %r40, 4, 4;
	.loc	1 33 19                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:33:19
	shr.s32 	%r43, %r1, 31;
	shr.u32 	%r44, %r43, 27;
	add.s32 	%r45, %r1, %r44;
	and.b32  	%r46, %r45, 268435424;
	sub.s32 	%r47, %r1, %r46;
	.loc	1 34 39                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:34:39
	shl.b32 	%r48, %r1, 8;
	.loc	1 34 35                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:34:35
	or.b32  	%r49, %r48, %r41;
	.loc	1 34 30                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:34:30
	mul.wide.s32 	%rd15, %r49, 4;
	add.s64 	%rd1, %rd12, %rd15;
	mov.pred 	%p1, -1;
	.loc	1 34 44                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:34:44
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 35 34                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:35:34
	add.s64 	%rd2, %rd10, %rd15;
	.loc	1 35 48                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:35:48
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 36 38                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:36:38
	shl.b32 	%r50, %r47, 4;
	.loc	1 36 35                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:36:35
	or.b32  	%r51, %r50, %r42;
	.loc	1 36 30                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:36:30
	mul.wide.s32 	%rd16, %r51, 4;
	add.s64 	%rd3, %rd13, %rd16;
	.loc	1 36 43                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:36:43
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 44                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:34:44
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 35 48                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:35:48
	mov.b32 	%f3, %r7;
	mov.b32 	%f4, %r6;
	.loc	1 36 43                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:36:43
	mov.b32 	%f5, %r11;
	mov.b32 	%f6, %r10;
	.loc	1 37 18                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:37:18
	add.f32 	%f7, %f4, %f6;
	add.f32 	%f8, %f3, %f5;
	.loc	1 38 18                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:38:18
	add.f32 	%f9, %f8, %f2;
	mov.b32 	%r33, %f9;
	add.f32 	%f10, %f7, %f1;
	.loc	1 34 44                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:34:44
	mov.b32 	%f11, %r4;
	mov.b32 	%f12, %r5;
	.loc	1 35 48                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:35:48
	mov.b32 	%f13, %r9;
	mov.b32 	%f14, %r8;
	.loc	1 36 43                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:36:43
	mov.b32 	%f15, %r13;
	mov.b32 	%f16, %r12;
	.loc	1 37 18                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:37:18
	add.f32 	%f17, %f14, %f16;
	add.f32 	%f18, %f13, %f15;
	.loc	1 38 18                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:38:18
	add.f32 	%f19, %f18, %f12;
	mov.b32 	%r35, %f19;
	add.f32 	%f20, %f17, %f11;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f10, %f9;
	add.f32 	%f22, %f21, %f20;
	add.f32 	%f23, %f22, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f23;
	shfl.sync.bfly.b32	%r53, %r52, 16, 31, -1;
	mov.b32 	%f24, %r53;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f25;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	mov.b32 	%f26, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f27;
	shfl.sync.bfly.b32	%r57, %r56, 4, 31, -1;
	mov.b32 	%f28, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f29;
	shfl.sync.bfly.b32	%r59, %r58, 2, 31, -1;
	mov.b32 	%f30, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f31;
	shfl.sync.bfly.b32	%r61, %r60, 1, 31, -1;
	mov.b32 	%f32, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p7, %r39, 0;
	shr.u32 	%r62, %r38, 3;
	and.b32  	%r63, %r62, 4;
	mov.u32 	%r64, global_smem;
	add.s32 	%r14, %r64, %r63;
	mov.b32 	%r15, %f33;
	// begin inline asm
	@%p7 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p8, %r38, 2;
	add.s32 	%r17, %r64, %r40;
	// begin inline asm
	@%p8 ld.shared.b32 %r16, [ %r17 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r16;
	shfl.sync.bfly.b32	%r65, %r16, 1, 31, -1;
	mov.b32 	%f35, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r66, %r38, 1;
	setp.eq.b32 	%p16, %r66, 1;
	not.pred 	%p17, %p16;
	and.pred  	%p9, %p8, %p17;
	mov.b32 	%r19, %f36;
	// begin inline asm
	@%p9 st.shared.b32 [ %r17 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f37, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f38, %f37, 0f00000000;
$L__tmp3:
	.loc	1 44 19                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:44:19
	mov.b32 	%r21, %f38;
	mov.b32 	%r22, 1132462080;
	// begin inline asm
	div.full.f32 %r37, %r21, %r22;
	// end inline asm
	mov.b32 	%f39, %r37;
	.loc	1 45 19                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:45:19
	sub.f32 	%f40, %f10, %f39;
	sub.f32 	%f41, %f9, %f39;
	sub.f32 	%f42, %f20, %f39;
	sub.f32 	%f43, %f19, %f39;
	.loc	1 46 20                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:46:20
	mul.f32 	%f44, %f41, %f41;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f45, %f40, %f40, %f44;
	fma.rn.f32 	%f46, %f42, %f42, %f45;
	fma.rn.f32 	%f47, %f43, %f43, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f47;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	mov.b32 	%f48, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f49;
	shfl.sync.bfly.b32	%r70, %r69, 8, 31, -1;
	mov.b32 	%f50, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f51;
	shfl.sync.bfly.b32	%r72, %r71, 4, 31, -1;
	mov.b32 	%f52, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f53;
	shfl.sync.bfly.b32	%r74, %r73, 2, 31, -1;
	mov.b32 	%f54, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f55;
	shfl.sync.bfly.b32	%r76, %r75, 1, 31, -1;
	mov.b32 	%f56, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r24, %f57;
	// begin inline asm
	@%p7 st.shared.b32 [ %r14 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 ld.shared.b32 %r25, [ %r17 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r25;
	shfl.sync.bfly.b32	%r77, %r25, 1, 31, -1;
	mov.b32 	%f59, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f60;
	// begin inline asm
	@%p9 st.shared.b32 [ %r17 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f61, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f62, %f61, 0f00000000;
$L__tmp6:
	.loc	1 50 20                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:50:20
	mov.b32 	%r30, %f62;
	// begin inline asm
	div.full.f32 %r29, %r30, %r22;
	// end inline asm
	mov.b32 	%f63, %r29;
	.loc	1 52 20                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:52:20
	add.f32 	%f64, %f63, 0f3727C5AC;
	.loc	1 53 28                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:53:28
	rsqrt.approx.ftz.f32 	%f65, %f64;
	.loc	1 38 18                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:38:18
	mov.b32 	%r32, %f10;
	mov.b32 	%r34, %f20;
	.loc	1 54 48                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:54:48
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd2 + 0 ], { %r32, %r33, %r34, %r35 };
	// end inline asm
	.loc	1 55 4                          // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:55:4
	bar.sync 	0;
	.loc	1 56 28                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:56:28
	mul.wide.s32 	%rd17, %r1, 4;
	add.s64 	%rd8, %rd11, %rd17;
	.loc	1 56 40                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:56:40
	and.b32  	%r78, %r38, 63;
	setp.eq.s32 	%p14, %r78, 0;
	mov.b32 	%r36, %f65;
	// begin inline asm
	@%p14 st.global.b32 [ %rd8 + 0 ], { %r36 };
	// end inline asm
	.loc	1 57 25                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:57:25
	add.s64 	%rd9, %rd14, %rd17;
	.loc	1 57 37                         // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:57:37
	// begin inline asm
	@%p14 st.global.b32 [ %rd9 + 0 ], { %r37 };
	// end inline asm
	.loc	1 57 4                          // cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py:57:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ij/cijsouv4joyvzatlod2xehdrx3ixodgw74yq7tev6yn24ei6kobw.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 270                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x107 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 106
.b8 115
.b8 111
.b8 117
.b8 118
.b8 52
.b8 106
.b8 111
.b8 121
.b8 118
.b8 122
.b8 97
.b8 116
.b8 108
.b8 111
.b8 100
.b8 50
.b8 120
.b8 101
.b8 104
.b8 100
.b8 114
.b8 120
.b8 51
.b8 105
.b8 120
.b8 111
.b8 100
.b8 103
.b8 119
.b8 55
.b8 52
.b8 121
.b8 113
.b8 55
.b8 116
.b8 101
.b8 118
.b8 54
.b8 121
.b8 110
.b8 50
.b8 52
.b8 101
.b8 105
.b8 54
.b8 107
.b8 111
.b8 98
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 51
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 57                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
