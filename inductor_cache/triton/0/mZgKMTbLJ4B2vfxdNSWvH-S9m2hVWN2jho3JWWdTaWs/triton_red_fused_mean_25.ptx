//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mean_25 // -- Begin function triton_red_fused_mean_25
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mean_25
.visible .entry triton_red_fused_mean_25(
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_25_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mean_25_param_1,
	.param .u32 triton_red_fused_mean_25_param_2,
	.param .u32 triton_red_fused_mean_25_param_3
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<49>;
	.reg .b32 	%r<103>;
	.reg .f32 	%f<58>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:19:0

// %bb.0:
	ld.param.u64 	%rd2, [triton_red_fused_mean_25_param_1];
	ld.param.u64 	%rd3, [triton_red_fused_mean_25_param_0];
$L__tmp0:
	.loc	1 22 28                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:22:28
	// begin inline asm
	mov.u32 %r3, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:24:21
	setp.lt.s32 	%p1, %r3, 32;
	.loc	1 25 33                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:25:33
	mov.u32 	%r2, %tid.x;
	shl.b32 	%r4, %r2, 2;
	and.b32  	%r5, %r4, 2044;
	.loc	1 32 44                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:44
	shl.b32 	%r6, %r3, 13;
	or.b32  	%r7, %r6, %r5;
	.loc	1 32 34                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:34
	mul.wide.s32 	%rd4, %r7, 4;
	add.s64 	%rd1, %rd3, %rd4;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.split.us.preheader
	.loc	1 0 34                          // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:0:34
	mov.b32 	%r44, 0;
	mov.pred 	%p22, -1;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	@%p22 ld.global.L1::evict_first.v4.b32 { %r40, %r41, %r42, %r43 }, [ %rd1 + 0 ];
	@!%p22 mov.u32 %r40, %r44;
	@!%p22 mov.u32 %r41, %r44;
	@!%p22 mov.u32 %r42, %r44;
	@!%p22 mov.u32 %r43, %r44;
	// end inline asm
	.loc	1 32 34                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:34
	add.s64 	%rd10, %rd1, 8192;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	@%p22 ld.global.L1::evict_first.v4.b32 { %r48, %r49, %r50, %r51 }, [ %rd10 + 0 ];
	@!%p22 mov.u32 %r48, %r44;
	@!%p22 mov.u32 %r49, %r44;
	@!%p22 mov.u32 %r50, %r44;
	@!%p22 mov.u32 %r51, %r44;
	// end inline asm
	.loc	1 32 34                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:34
	add.s64 	%rd11, %rd1, 16384;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	@%p22 ld.global.L1::evict_first.v4.b32 { %r56, %r57, %r58, %r59 }, [ %rd11 + 0 ];
	@!%p22 mov.u32 %r56, %r44;
	@!%p22 mov.u32 %r57, %r44;
	@!%p22 mov.u32 %r58, %r44;
	@!%p22 mov.u32 %r59, %r44;
	// end inline asm
	.loc	1 32 34                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:34
	add.s64 	%rd12, %rd1, 24576;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	@%p22 ld.global.L1::evict_first.v4.b32 { %r64, %r65, %r66, %r67 }, [ %rd12 + 0 ];
	@!%p22 mov.u32 %r64, %r44;
	@!%p22 mov.u32 %r65, %r44;
	@!%p22 mov.u32 %r66, %r44;
	@!%p22 mov.u32 %r67, %r44;
	// end inline asm
	mov.b32 	%f4, %r41;
	mov.b32 	%f5, %r40;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f6, %f5, 0f00000000;
	add.f32 	%f7, %f4, 0f00000000;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	mov.b32 	%f8, %r48;
	mov.b32 	%f9, %r49;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f10, %f7, %f9;
	add.f32 	%f11, %f6, %f8;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	mov.b32 	%f12, %r57;
	mov.b32 	%f13, %r56;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f14, %f11, %f13;
	add.f32 	%f15, %f10, %f12;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	mov.b32 	%f16, %r64;
	mov.b32 	%f17, %r65;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f18, %f15, %f17;
	add.f32 	%f19, %f14, %f16;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	mov.b32 	%f20, %r43;
	mov.b32 	%f21, %r42;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f22, %f21, 0f00000000;
	add.f32 	%f23, %f20, 0f00000000;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	mov.b32 	%f24, %r50;
	mov.b32 	%f25, %r51;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f26, %f23, %f25;
	add.f32 	%f27, %f22, %f24;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	mov.b32 	%f28, %r59;
	mov.b32 	%f29, %r58;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f30, %f27, %f29;
	add.f32 	%f31, %f26, %f28;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	mov.b32 	%f32, %r66;
	mov.b32 	%f33, %r67;
	.loc	1 34 23                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:34:23
	add.f32 	%f34, %f31, %f33;
	add.f32 	%f35, %f30, %f32;
	.loc	1 25 33                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:25:33
	add.f32 	%f36, %f19, %f18;
	add.f32 	%f37, %f35, %f36;
	add.f32 	%f57, %f34, %f37;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %.split.preheader
	.loc	1 0 33                          // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:0:33
	mov.b32 	%r12, 0;
	mov.pred 	%p2, 0;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r8, %r9, %r10, %r11 }, [ %rd1 + 0 ];
	@!%p2 mov.u32 %r8, %r12;
	@!%p2 mov.u32 %r9, %r12;
	@!%p2 mov.u32 %r10, %r12;
	@!%p2 mov.u32 %r11, %r12;
	// end inline asm
	.loc	1 32 34                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:34
	add.s64 	%rd6, %rd1, 8192;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r16, %r17, %r18, %r19 }, [ %rd6 + 0 ];
	@!%p2 mov.u32 %r16, %r12;
	@!%p2 mov.u32 %r17, %r12;
	@!%p2 mov.u32 %r18, %r12;
	@!%p2 mov.u32 %r19, %r12;
	// end inline asm
	.loc	1 32 34                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:34
	add.s64 	%rd7, %rd1, 16384;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r24, %r25, %r26, %r27 }, [ %rd7 + 0 ];
	@!%p2 mov.u32 %r24, %r12;
	@!%p2 mov.u32 %r25, %r12;
	@!%p2 mov.u32 %r26, %r12;
	@!%p2 mov.u32 %r27, %r12;
	// end inline asm
	.loc	1 32 34                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:34
	add.s64 	%rd8, %rd1, 24576;
	.loc	1 32 49                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:32:49
	// begin inline asm
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p2 ld.global.L1::evict_first.v4.b32 { %r32, %r33, %r34, %r35 }, [ %rd8 + 0 ];
	@!%p2 mov.u32 %r32, %r12;
	@!%p2 mov.u32 %r33, %r12;
	@!%p2 mov.u32 %r34, %r12;
	@!%p2 mov.u32 %r35, %r12;
	// end inline asm
	mov.f32 	%f57, 0f00000000;
$L__BB0_3:                              // %.split2.us
	.loc	1 25 33                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:25:33
	and.b32  	%r79, %r2, 31;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f57;
	shfl.sync.bfly.b32	%r81, %r80, 16, 31, -1;
	mov.b32 	%f38, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f57, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f39;
	shfl.sync.bfly.b32	%r83, %r82, 8, 31, -1;
	mov.b32 	%f40, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f41;
	shfl.sync.bfly.b32	%r85, %r84, 4, 31, -1;
	mov.b32 	%f42, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f43;
	shfl.sync.bfly.b32	%r87, %r86, 2, 31, -1;
	mov.b32 	%f44, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f45;
	shfl.sync.bfly.b32	%r89, %r88, 1, 31, -1;
	mov.b32 	%f46, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p42, %r79, 0;
	shr.u32 	%r90, %r2, 3;
	and.b32  	%r91, %r90, 60;
	mov.u32 	%r92, global_smem;
	add.s32 	%r72, %r92, %r91;
	mov.b32 	%r73, %f47;
	// begin inline asm
	@%p42 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p43, %r2, 16;
	add.s32 	%r75, %r92, %r4;
	// begin inline asm
	@%p43 ld.shared.b32 %r74, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f48, %r74;
	shfl.sync.bfly.b32	%r94, %r74, 8, 31, -1;
	mov.b32 	%f49, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f50;
	shfl.sync.bfly.b32	%r96, %r95, 4, 31, -1;
	mov.b32 	%f51, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f52;
	shfl.sync.bfly.b32	%r98, %r97, 2, 31, -1;
	mov.b32 	%f53, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f54;
	shfl.sync.bfly.b32	%r100, %r99, 1, 31, -1;
	mov.b32 	%f55, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r101, %r2, 15;
	setp.eq.s32 	%p47, %r101, 0;
	and.pred  	%p44, %p43, %p47;
	mov.b32 	%r77, %f56;
	// begin inline asm
	@%p44 st.shared.b32 [ %r75 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r78, [global_smem];
$L__tmp2:
	.loc	1 37 25                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:37:25
	mul.wide.s32 	%rd14, %r3, 4;
	add.s64 	%rd13, %rd2, %rd14;
	.loc	1 37 36                         // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:37:36
	and.b32  	%r102, %r2, 511;
	setp.eq.s32 	%p48, %r102, 0;
	and.pred  	%p45, %p48, %p1;
	// begin inline asm
	@%p45 st.global.b32 [ %rd13 + 0 ], { %r78 };
	// end inline asm
	.loc	1 37 4                          // cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py:37:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/jt/cjtqraoaoqkpesxrgcp3zod5sxmclr5djnatg3ljvuf64aah3sdo.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 106
.b8 116
.b8 113
.b8 114
.b8 97
.b8 111
.b8 97
.b8 111
.b8 113
.b8 107
.b8 112
.b8 101
.b8 115
.b8 120
.b8 114
.b8 103
.b8 99
.b8 112
.b8 51
.b8 122
.b8 111
.b8 100
.b8 53
.b8 115
.b8 120
.b8 109
.b8 99
.b8 108
.b8 114
.b8 53
.b8 100
.b8 106
.b8 110
.b8 97
.b8 116
.b8 103
.b8 51
.b8 108
.b8 106
.b8 118
.b8 117
.b8 102
.b8 54
.b8 52
.b8 97
.b8 97
.b8 104
.b8 51
.b8 115
.b8 100
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 106
.b8 116
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 50
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
