; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_mul_pow_sqrt_tanh_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #4, !dbg !10
  %7 = icmp slt i32 %6, 32, !dbg !11
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !12
  %9 = shl i32 %8, 10, !dbg !13
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !14
  %11 = shl i32 %10, 2, !dbg !14
  %12 = and i32 %11, 508, !dbg !14
  %13 = or disjoint i32 %9, %12, !dbg !15
  %14 = or disjoint i32 %13, 512, !dbg !15
  %15 = icmp slt i32 %13, 6144, !dbg !16
  %16 = icmp slt i32 %14, 6144, !dbg !16
  %17 = mul i32 %6, 6144, !dbg !17
  %18 = add i32 %13, %17, !dbg !18
  %19 = add i32 %17, %14, !dbg !18
  %20 = sext i32 %18 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = sext i32 %19 to i64, !dbg !19
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !19
  %24 = and i1 %7, %15, !dbg !20
  %25 = and i1 %16, %7, !dbg !20
  %26 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %21, i1 %24) #4, !dbg !21
  %27 = extractvalue { i32, i32, i32, i32 } %26, 0, !dbg !21
  %28 = extractvalue { i32, i32, i32, i32 } %26, 1, !dbg !21
  %29 = extractvalue { i32, i32, i32, i32 } %26, 2, !dbg !21
  %30 = extractvalue { i32, i32, i32, i32 } %26, 3, !dbg !21
  %31 = bitcast i32 %27 to float, !dbg !21
  %32 = bitcast i32 %28 to float, !dbg !21
  %33 = bitcast i32 %29 to float, !dbg !21
  %34 = bitcast i32 %30 to float, !dbg !21
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.L1::evict_last.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %23, i1 %25) #4, !dbg !21
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !21
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !21
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !21
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !21
  %40 = bitcast i32 %36 to float, !dbg !21
  %41 = bitcast i32 %37 to float, !dbg !21
  %42 = bitcast i32 %38 to float, !dbg !21
  %43 = bitcast i32 %39 to float, !dbg !21
  %44 = fmul float %31, %31, !dbg !22
  %45 = fmul float %32, %32, !dbg !22
  %46 = fmul float %33, %33, !dbg !22
  %47 = fmul float %34, %34, !dbg !22
  %48 = fmul float %40, %40, !dbg !22
  %49 = fmul float %41, %41, !dbg !22
  %50 = fmul float %42, %42, !dbg !22
  %51 = fmul float %43, %43, !dbg !22
  %52 = fmul float %44, %31, !dbg !23
  %53 = fmul float %45, %32, !dbg !23
  %54 = fmul float %46, %33, !dbg !23
  %55 = fmul float %47, %34, !dbg !23
  %56 = fmul float %48, %40, !dbg !23
  %57 = fmul float %49, %41, !dbg !23
  %58 = fmul float %50, %42, !dbg !23
  %59 = fmul float %51, %43, !dbg !23
  %60 = fmul float %52, 0x3FA6E4E260000000, !dbg !24
  %61 = fmul float %53, 0x3FA6E4E260000000, !dbg !24
  %62 = fmul float %54, 0x3FA6E4E260000000, !dbg !24
  %63 = fmul float %55, 0x3FA6E4E260000000, !dbg !24
  %64 = fmul float %56, 0x3FA6E4E260000000, !dbg !24
  %65 = fmul float %57, 0x3FA6E4E260000000, !dbg !24
  %66 = fmul float %58, 0x3FA6E4E260000000, !dbg !24
  %67 = fmul float %59, 0x3FA6E4E260000000, !dbg !24
  %68 = fadd float %60, %31, !dbg !25
  %69 = fadd float %61, %32, !dbg !25
  %70 = fadd float %62, %33, !dbg !25
  %71 = fadd float %63, %34, !dbg !25
  %72 = fadd float %64, %40, !dbg !25
  %73 = fadd float %65, %41, !dbg !25
  %74 = fadd float %66, %42, !dbg !25
  %75 = fadd float %67, %43, !dbg !25
  %76 = fmul float %68, 0x3FE9884540000000, !dbg !26
  %77 = fmul float %69, 0x3FE9884540000000, !dbg !26
  %78 = fmul float %70, 0x3FE9884540000000, !dbg !26
  %79 = fmul float %71, 0x3FE9884540000000, !dbg !26
  %80 = fmul float %72, 0x3FE9884540000000, !dbg !26
  %81 = fmul float %73, 0x3FE9884540000000, !dbg !26
  %82 = fmul float %74, 0x3FE9884540000000, !dbg !26
  %83 = fmul float %75, 0x3FE9884540000000, !dbg !26
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i = icmp eq i32 %84, 0, !dbg !27
  %85 = tail call float @llvm.nvvm.fabs.ftz.f(float %76) #4, !dbg !27
  %86 = tail call float @llvm.nvvm.fabs.f(float %76) #4, !dbg !27
  %.01.i = select i1 %.not.i, float %86, float %85, !dbg !27
  %87 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !27
  br i1 %87, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !27

__internal_fmad.exit1.i:                          ; preds = %5
  %88 = fmul float %.01.i, 0x4007154760000000, !dbg !27
  %89 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %88) #4, !dbg !27
  %90 = fadd float %89, 1.000000e+00, !dbg !27
  %91 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %90) #5, !dbg !27, !srcloc !28
  %92 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i = icmp eq i32 %92, 0, !dbg !27
  %93 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %91, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %94 = tail call float @llvm.nvvm.fma.rn.f(float %91, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i = select i1 %.not6.i, float %94, float %93, !dbg !27
  %95 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !27
  %s.0.i = select i1 %95, float 1.000000e+00, float %.03.i, !dbg !27
  %96 = bitcast float %s.0.i to i32, !dbg !27
  %97 = bitcast float %76 to i32, !dbg !27
  %98 = and i32 %97, -2147483648, !dbg !27
  %99 = or i32 %98, %96, !dbg !27
  %100 = bitcast i32 %99 to float, !dbg !27
  br label %__nv_tanhf.exit, !dbg !27

__internal_fmad.exit3.i:                          ; preds = %5
  %101 = fmul float %76, %76, !dbg !27
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i = icmp eq i32 %102, 0, !dbg !27
  %103 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %101, float 0xBFAAC795C0000000) #4, !dbg !27
  %104 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %101, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i = select i1 %.not1.i, float %104, float %103, !dbg !27
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i = icmp eq i32 %105, 0, !dbg !27
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %101, float 0x3FC10B2820000000) #4, !dbg !27
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %101, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i = select i1 %.not2.i, float %107, float %106, !dbg !27
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i = icmp eq i32 %108, 0, !dbg !27
  %109 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %101, float 0xBFD5553DA0000000) #4, !dbg !27
  %110 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %101, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i = select i1 %.not3.i, float %110, float %109, !dbg !27
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i = icmp eq i32 %111, 0, !dbg !27
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %101, float 0.000000e+00) #4, !dbg !27
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %101, float 0.000000e+00) #4, !dbg !27
  %.04.i = select i1 %.not4.i, float %113, float %112, !dbg !27
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i = icmp eq i32 %114, 0, !dbg !27
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %76, float %76) #4, !dbg !27
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %76, float %76) #4, !dbg !27
  %.02.i = select i1 %.not5.i, float %116, float %115, !dbg !27
  br label %__nv_tanhf.exit, !dbg !27

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %100, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !27
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i1 = icmp eq i32 %117, 0, !dbg !27
  %118 = tail call float @llvm.nvvm.fabs.ftz.f(float %77) #4, !dbg !27
  %119 = tail call float @llvm.nvvm.fabs.f(float %77) #4, !dbg !27
  %.01.i2 = select i1 %.not.i1, float %119, float %118, !dbg !27
  %120 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !27
  br i1 %120, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !27

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %121 = fmul float %.01.i2, 0x4007154760000000, !dbg !27
  %122 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %121) #4, !dbg !27
  %123 = fadd float %122, 1.000000e+00, !dbg !27
  %124 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %123) #5, !dbg !27, !srcloc !28
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i4 = icmp eq i32 %125, 0, !dbg !27
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %124, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %124, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i5 = select i1 %.not6.i4, float %127, float %126, !dbg !27
  %128 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !27
  %s.0.i6 = select i1 %128, float 1.000000e+00, float %.03.i5, !dbg !27
  %129 = bitcast float %s.0.i6 to i32, !dbg !27
  %130 = bitcast float %77 to i32, !dbg !27
  %131 = and i32 %130, -2147483648, !dbg !27
  %132 = or i32 %131, %129, !dbg !27
  %133 = bitcast i32 %132 to float, !dbg !27
  br label %__nv_tanhf.exit19, !dbg !27

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %134 = fmul float %77, %77, !dbg !27
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i9 = icmp eq i32 %135, 0, !dbg !27
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %134, float 0xBFAAC795C0000000) #4, !dbg !27
  %137 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %134, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i10 = select i1 %.not1.i9, float %137, float %136, !dbg !27
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i11 = icmp eq i32 %138, 0, !dbg !27
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %134, float 0x3FC10B2820000000) #4, !dbg !27
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %134, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i12 = select i1 %.not2.i11, float %140, float %139, !dbg !27
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i13 = icmp eq i32 %141, 0, !dbg !27
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %134, float 0xBFD5553DA0000000) #4, !dbg !27
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %134, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i14 = select i1 %.not3.i13, float %143, float %142, !dbg !27
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i15 = icmp eq i32 %144, 0, !dbg !27
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %134, float 0.000000e+00) #4, !dbg !27
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %134, float 0.000000e+00) #4, !dbg !27
  %.04.i16 = select i1 %.not4.i15, float %146, float %145, !dbg !27
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i17 = icmp eq i32 %147, 0, !dbg !27
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %77, float %77) #4, !dbg !27
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %77, float %77) #4, !dbg !27
  %.02.i18 = select i1 %.not5.i17, float %149, float %148, !dbg !27
  br label %__nv_tanhf.exit19, !dbg !27

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi float [ %133, %__internal_fmad.exit1.i3 ], [ %.02.i18, %__internal_fmad.exit3.i8 ], !dbg !27
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i20 = icmp eq i32 %150, 0, !dbg !27
  %151 = tail call float @llvm.nvvm.fabs.ftz.f(float %78) #4, !dbg !27
  %152 = tail call float @llvm.nvvm.fabs.f(float %78) #4, !dbg !27
  %.01.i21 = select i1 %.not.i20, float %152, float %151, !dbg !27
  %153 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !27
  br i1 %153, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !27

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %154 = fmul float %.01.i21, 0x4007154760000000, !dbg !27
  %155 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %154) #4, !dbg !27
  %156 = fadd float %155, 1.000000e+00, !dbg !27
  %157 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %156) #5, !dbg !27, !srcloc !28
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i23 = icmp eq i32 %158, 0, !dbg !27
  %159 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %157, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %160 = tail call float @llvm.nvvm.fma.rn.f(float %157, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i24 = select i1 %.not6.i23, float %160, float %159, !dbg !27
  %161 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !27
  %s.0.i25 = select i1 %161, float 1.000000e+00, float %.03.i24, !dbg !27
  %162 = bitcast float %s.0.i25 to i32, !dbg !27
  %163 = bitcast float %78 to i32, !dbg !27
  %164 = and i32 %163, -2147483648, !dbg !27
  %165 = or i32 %164, %162, !dbg !27
  %166 = bitcast i32 %165 to float, !dbg !27
  br label %__nv_tanhf.exit38, !dbg !27

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %167 = fmul float %78, %78, !dbg !27
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i28 = icmp eq i32 %168, 0, !dbg !27
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %167, float 0xBFAAC795C0000000) #4, !dbg !27
  %170 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %167, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i29 = select i1 %.not1.i28, float %170, float %169, !dbg !27
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i30 = icmp eq i32 %171, 0, !dbg !27
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %167, float 0x3FC10B2820000000) #4, !dbg !27
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %167, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i31 = select i1 %.not2.i30, float %173, float %172, !dbg !27
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i32 = icmp eq i32 %174, 0, !dbg !27
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %167, float 0xBFD5553DA0000000) #4, !dbg !27
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %167, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i33 = select i1 %.not3.i32, float %176, float %175, !dbg !27
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i34 = icmp eq i32 %177, 0, !dbg !27
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %167, float 0.000000e+00) #4, !dbg !27
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %167, float 0.000000e+00) #4, !dbg !27
  %.04.i35 = select i1 %.not4.i34, float %179, float %178, !dbg !27
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i36 = icmp eq i32 %180, 0, !dbg !27
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %78, float %78) #4, !dbg !27
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %78, float %78) #4, !dbg !27
  %.02.i37 = select i1 %.not5.i36, float %182, float %181, !dbg !27
  br label %__nv_tanhf.exit38, !dbg !27

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi float [ %166, %__internal_fmad.exit1.i22 ], [ %.02.i37, %__internal_fmad.exit3.i27 ], !dbg !27
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i39 = icmp eq i32 %183, 0, !dbg !27
  %184 = tail call float @llvm.nvvm.fabs.ftz.f(float %79) #4, !dbg !27
  %185 = tail call float @llvm.nvvm.fabs.f(float %79) #4, !dbg !27
  %.01.i40 = select i1 %.not.i39, float %185, float %184, !dbg !27
  %186 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !27
  br i1 %186, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !27

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %187 = fmul float %.01.i40, 0x4007154760000000, !dbg !27
  %188 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %187) #4, !dbg !27
  %189 = fadd float %188, 1.000000e+00, !dbg !27
  %190 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %189) #5, !dbg !27, !srcloc !28
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i42 = icmp eq i32 %191, 0, !dbg !27
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %190, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %190, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i43 = select i1 %.not6.i42, float %193, float %192, !dbg !27
  %194 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !27
  %s.0.i44 = select i1 %194, float 1.000000e+00, float %.03.i43, !dbg !27
  %195 = bitcast float %s.0.i44 to i32, !dbg !27
  %196 = bitcast float %79 to i32, !dbg !27
  %197 = and i32 %196, -2147483648, !dbg !27
  %198 = or i32 %197, %195, !dbg !27
  %199 = bitcast i32 %198 to float, !dbg !27
  br label %__nv_tanhf.exit57, !dbg !27

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %200 = fmul float %79, %79, !dbg !27
  %201 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i47 = icmp eq i32 %201, 0, !dbg !27
  %202 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %200, float 0xBFAAC795C0000000) #4, !dbg !27
  %203 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %200, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i48 = select i1 %.not1.i47, float %203, float %202, !dbg !27
  %204 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i49 = icmp eq i32 %204, 0, !dbg !27
  %205 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %200, float 0x3FC10B2820000000) #4, !dbg !27
  %206 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %200, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i50 = select i1 %.not2.i49, float %206, float %205, !dbg !27
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i51 = icmp eq i32 %207, 0, !dbg !27
  %208 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %200, float 0xBFD5553DA0000000) #4, !dbg !27
  %209 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %200, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i52 = select i1 %.not3.i51, float %209, float %208, !dbg !27
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i53 = icmp eq i32 %210, 0, !dbg !27
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %200, float 0.000000e+00) #4, !dbg !27
  %212 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %200, float 0.000000e+00) #4, !dbg !27
  %.04.i54 = select i1 %.not4.i53, float %212, float %211, !dbg !27
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i55 = icmp eq i32 %213, 0, !dbg !27
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %79, float %79) #4, !dbg !27
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %79, float %79) #4, !dbg !27
  %.02.i56 = select i1 %.not5.i55, float %215, float %214, !dbg !27
  br label %__nv_tanhf.exit57, !dbg !27

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi float [ %199, %__internal_fmad.exit1.i41 ], [ %.02.i56, %__internal_fmad.exit3.i46 ], !dbg !27
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i58 = icmp eq i32 %216, 0, !dbg !27
  %217 = tail call float @llvm.nvvm.fabs.ftz.f(float %80) #4, !dbg !27
  %218 = tail call float @llvm.nvvm.fabs.f(float %80) #4, !dbg !27
  %.01.i59 = select i1 %.not.i58, float %218, float %217, !dbg !27
  %219 = fcmp ult float %.01.i59, 0x3FE3333340000000, !dbg !27
  br i1 %219, label %__internal_fmad.exit3.i65, label %__internal_fmad.exit1.i60, !dbg !27

__internal_fmad.exit1.i60:                        ; preds = %__nv_tanhf.exit57
  %220 = fmul float %.01.i59, 0x4007154760000000, !dbg !27
  %221 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %220) #4, !dbg !27
  %222 = fadd float %221, 1.000000e+00, !dbg !27
  %223 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %222) #5, !dbg !27, !srcloc !28
  %224 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i61 = icmp eq i32 %224, 0, !dbg !27
  %225 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %223, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %226 = tail call float @llvm.nvvm.fma.rn.f(float %223, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i62 = select i1 %.not6.i61, float %226, float %225, !dbg !27
  %227 = fcmp oge float %.01.i59, 0x4022059680000000, !dbg !27
  %s.0.i63 = select i1 %227, float 1.000000e+00, float %.03.i62, !dbg !27
  %228 = bitcast float %s.0.i63 to i32, !dbg !27
  %229 = bitcast float %80 to i32, !dbg !27
  %230 = and i32 %229, -2147483648, !dbg !27
  %231 = or i32 %230, %228, !dbg !27
  %232 = bitcast i32 %231 to float, !dbg !27
  br label %__nv_tanhf.exit76, !dbg !27

__internal_fmad.exit3.i65:                        ; preds = %__nv_tanhf.exit57
  %233 = fmul float %80, %80, !dbg !27
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i66 = icmp eq i32 %234, 0, !dbg !27
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %233, float 0xBFAAC795C0000000) #4, !dbg !27
  %236 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %233, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i67 = select i1 %.not1.i66, float %236, float %235, !dbg !27
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i68 = icmp eq i32 %237, 0, !dbg !27
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i67, float %233, float 0x3FC10B2820000000) #4, !dbg !27
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i67, float %233, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i69 = select i1 %.not2.i68, float %239, float %238, !dbg !27
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i70 = icmp eq i32 %240, 0, !dbg !27
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i69, float %233, float 0xBFD5553DA0000000) #4, !dbg !27
  %242 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i69, float %233, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i71 = select i1 %.not3.i70, float %242, float %241, !dbg !27
  %243 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i72 = icmp eq i32 %243, 0, !dbg !27
  %244 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i71, float %233, float 0.000000e+00) #4, !dbg !27
  %245 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i71, float %233, float 0.000000e+00) #4, !dbg !27
  %.04.i73 = select i1 %.not4.i72, float %245, float %244, !dbg !27
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i74 = icmp eq i32 %246, 0, !dbg !27
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i73, float %80, float %80) #4, !dbg !27
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i73, float %80, float %80) #4, !dbg !27
  %.02.i75 = select i1 %.not5.i74, float %248, float %247, !dbg !27
  br label %__nv_tanhf.exit76, !dbg !27

__nv_tanhf.exit76:                                ; preds = %__internal_fmad.exit1.i60, %__internal_fmad.exit3.i65
  %s.1.i64 = phi float [ %232, %__internal_fmad.exit1.i60 ], [ %.02.i75, %__internal_fmad.exit3.i65 ], !dbg !27
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i77 = icmp eq i32 %249, 0, !dbg !27
  %250 = tail call float @llvm.nvvm.fabs.ftz.f(float %81) #4, !dbg !27
  %251 = tail call float @llvm.nvvm.fabs.f(float %81) #4, !dbg !27
  %.01.i78 = select i1 %.not.i77, float %251, float %250, !dbg !27
  %252 = fcmp ult float %.01.i78, 0x3FE3333340000000, !dbg !27
  br i1 %252, label %__internal_fmad.exit3.i84, label %__internal_fmad.exit1.i79, !dbg !27

__internal_fmad.exit1.i79:                        ; preds = %__nv_tanhf.exit76
  %253 = fmul float %.01.i78, 0x4007154760000000, !dbg !27
  %254 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %253) #4, !dbg !27
  %255 = fadd float %254, 1.000000e+00, !dbg !27
  %256 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %255) #5, !dbg !27, !srcloc !28
  %257 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i80 = icmp eq i32 %257, 0, !dbg !27
  %258 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %256, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %259 = tail call float @llvm.nvvm.fma.rn.f(float %256, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i81 = select i1 %.not6.i80, float %259, float %258, !dbg !27
  %260 = fcmp oge float %.01.i78, 0x4022059680000000, !dbg !27
  %s.0.i82 = select i1 %260, float 1.000000e+00, float %.03.i81, !dbg !27
  %261 = bitcast float %s.0.i82 to i32, !dbg !27
  %262 = bitcast float %81 to i32, !dbg !27
  %263 = and i32 %262, -2147483648, !dbg !27
  %264 = or i32 %263, %261, !dbg !27
  %265 = bitcast i32 %264 to float, !dbg !27
  br label %__nv_tanhf.exit95, !dbg !27

__internal_fmad.exit3.i84:                        ; preds = %__nv_tanhf.exit76
  %266 = fmul float %81, %81, !dbg !27
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i85 = icmp eq i32 %267, 0, !dbg !27
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %266, float 0xBFAAC795C0000000) #4, !dbg !27
  %269 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %266, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i86 = select i1 %.not1.i85, float %269, float %268, !dbg !27
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i87 = icmp eq i32 %270, 0, !dbg !27
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i86, float %266, float 0x3FC10B2820000000) #4, !dbg !27
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i86, float %266, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i88 = select i1 %.not2.i87, float %272, float %271, !dbg !27
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i89 = icmp eq i32 %273, 0, !dbg !27
  %274 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i88, float %266, float 0xBFD5553DA0000000) #4, !dbg !27
  %275 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i88, float %266, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i90 = select i1 %.not3.i89, float %275, float %274, !dbg !27
  %276 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i91 = icmp eq i32 %276, 0, !dbg !27
  %277 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i90, float %266, float 0.000000e+00) #4, !dbg !27
  %278 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i90, float %266, float 0.000000e+00) #4, !dbg !27
  %.04.i92 = select i1 %.not4.i91, float %278, float %277, !dbg !27
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i93 = icmp eq i32 %279, 0, !dbg !27
  %280 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i92, float %81, float %81) #4, !dbg !27
  %281 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i92, float %81, float %81) #4, !dbg !27
  %.02.i94 = select i1 %.not5.i93, float %281, float %280, !dbg !27
  br label %__nv_tanhf.exit95, !dbg !27

__nv_tanhf.exit95:                                ; preds = %__internal_fmad.exit1.i79, %__internal_fmad.exit3.i84
  %s.1.i83 = phi float [ %265, %__internal_fmad.exit1.i79 ], [ %.02.i94, %__internal_fmad.exit3.i84 ], !dbg !27
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i96 = icmp eq i32 %282, 0, !dbg !27
  %283 = tail call float @llvm.nvvm.fabs.ftz.f(float %82) #4, !dbg !27
  %284 = tail call float @llvm.nvvm.fabs.f(float %82) #4, !dbg !27
  %.01.i97 = select i1 %.not.i96, float %284, float %283, !dbg !27
  %285 = fcmp ult float %.01.i97, 0x3FE3333340000000, !dbg !27
  br i1 %285, label %__internal_fmad.exit3.i103, label %__internal_fmad.exit1.i98, !dbg !27

__internal_fmad.exit1.i98:                        ; preds = %__nv_tanhf.exit95
  %286 = fmul float %.01.i97, 0x4007154760000000, !dbg !27
  %287 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %286) #4, !dbg !27
  %288 = fadd float %287, 1.000000e+00, !dbg !27
  %289 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %288) #5, !dbg !27, !srcloc !28
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i99 = icmp eq i32 %290, 0, !dbg !27
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %289, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %292 = tail call float @llvm.nvvm.fma.rn.f(float %289, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i100 = select i1 %.not6.i99, float %292, float %291, !dbg !27
  %293 = fcmp oge float %.01.i97, 0x4022059680000000, !dbg !27
  %s.0.i101 = select i1 %293, float 1.000000e+00, float %.03.i100, !dbg !27
  %294 = bitcast float %s.0.i101 to i32, !dbg !27
  %295 = bitcast float %82 to i32, !dbg !27
  %296 = and i32 %295, -2147483648, !dbg !27
  %297 = or i32 %296, %294, !dbg !27
  %298 = bitcast i32 %297 to float, !dbg !27
  br label %__nv_tanhf.exit114, !dbg !27

__internal_fmad.exit3.i103:                       ; preds = %__nv_tanhf.exit95
  %299 = fmul float %82, %82, !dbg !27
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i104 = icmp eq i32 %300, 0, !dbg !27
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %299, float 0xBFAAC795C0000000) #4, !dbg !27
  %302 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %299, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i105 = select i1 %.not1.i104, float %302, float %301, !dbg !27
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i106 = icmp eq i32 %303, 0, !dbg !27
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i105, float %299, float 0x3FC10B2820000000) #4, !dbg !27
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i105, float %299, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i107 = select i1 %.not2.i106, float %305, float %304, !dbg !27
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i108 = icmp eq i32 %306, 0, !dbg !27
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i107, float %299, float 0xBFD5553DA0000000) #4, !dbg !27
  %308 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i107, float %299, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i109 = select i1 %.not3.i108, float %308, float %307, !dbg !27
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i110 = icmp eq i32 %309, 0, !dbg !27
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i109, float %299, float 0.000000e+00) #4, !dbg !27
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i109, float %299, float 0.000000e+00) #4, !dbg !27
  %.04.i111 = select i1 %.not4.i110, float %311, float %310, !dbg !27
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i112 = icmp eq i32 %312, 0, !dbg !27
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i111, float %82, float %82) #4, !dbg !27
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i111, float %82, float %82) #4, !dbg !27
  %.02.i113 = select i1 %.not5.i112, float %314, float %313, !dbg !27
  br label %__nv_tanhf.exit114, !dbg !27

__nv_tanhf.exit114:                               ; preds = %__internal_fmad.exit1.i98, %__internal_fmad.exit3.i103
  %s.1.i102 = phi float [ %298, %__internal_fmad.exit1.i98 ], [ %.02.i113, %__internal_fmad.exit3.i103 ], !dbg !27
  %315 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i115 = icmp eq i32 %315, 0, !dbg !27
  %316 = tail call float @llvm.nvvm.fabs.ftz.f(float %83) #4, !dbg !27
  %317 = tail call float @llvm.nvvm.fabs.f(float %83) #4, !dbg !27
  %.01.i116 = select i1 %.not.i115, float %317, float %316, !dbg !27
  %318 = fcmp ult float %.01.i116, 0x3FE3333340000000, !dbg !27
  br i1 %318, label %__internal_fmad.exit3.i122, label %__internal_fmad.exit1.i117, !dbg !27

__internal_fmad.exit1.i117:                       ; preds = %__nv_tanhf.exit114
  %319 = fmul float %.01.i116, 0x4007154760000000, !dbg !27
  %320 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %319) #4, !dbg !27
  %321 = fadd float %320, 1.000000e+00, !dbg !27
  %322 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %321) #5, !dbg !27, !srcloc !28
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not6.i118 = icmp eq i32 %323, 0, !dbg !27
  %324 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %322, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %325 = tail call float @llvm.nvvm.fma.rn.f(float %322, float -2.000000e+00, float 1.000000e+00) #4, !dbg !27
  %.03.i119 = select i1 %.not6.i118, float %325, float %324, !dbg !27
  %326 = fcmp oge float %.01.i116, 0x4022059680000000, !dbg !27
  %s.0.i120 = select i1 %326, float 1.000000e+00, float %.03.i119, !dbg !27
  %327 = bitcast float %s.0.i120 to i32, !dbg !27
  %328 = bitcast float %83 to i32, !dbg !27
  %329 = and i32 %328, -2147483648, !dbg !27
  %330 = or i32 %329, %327, !dbg !27
  %331 = bitcast i32 %330 to float, !dbg !27
  br label %__nv_tanhf.exit133, !dbg !27

__internal_fmad.exit3.i122:                       ; preds = %__nv_tanhf.exit114
  %332 = fmul float %83, %83, !dbg !27
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not1.i123 = icmp eq i32 %333, 0, !dbg !27
  %334 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %332, float 0xBFAAC795C0000000) #4, !dbg !27
  %335 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %332, float 0xBFAAC795C0000000) #4, !dbg !27
  %.06.i124 = select i1 %.not1.i123, float %335, float %334, !dbg !27
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not2.i125 = icmp eq i32 %336, 0, !dbg !27
  %337 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i124, float %332, float 0x3FC10B2820000000) #4, !dbg !27
  %338 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i124, float %332, float 0x3FC10B2820000000) #4, !dbg !27
  %.05.i126 = select i1 %.not2.i125, float %338, float %337, !dbg !27
  %339 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not3.i127 = icmp eq i32 %339, 0, !dbg !27
  %340 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i126, float %332, float 0xBFD5553DA0000000) #4, !dbg !27
  %341 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i126, float %332, float 0xBFD5553DA0000000) #4, !dbg !27
  %.0.i128 = select i1 %.not3.i127, float %341, float %340, !dbg !27
  %342 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not4.i129 = icmp eq i32 %342, 0, !dbg !27
  %343 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i128, float %332, float 0.000000e+00) #4, !dbg !27
  %344 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i128, float %332, float 0.000000e+00) #4, !dbg !27
  %.04.i130 = select i1 %.not4.i129, float %344, float %343, !dbg !27
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not5.i131 = icmp eq i32 %345, 0, !dbg !27
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i130, float %83, float %83) #4, !dbg !27
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i130, float %83, float %83) #4, !dbg !27
  %.02.i132 = select i1 %.not5.i131, float %347, float %346, !dbg !27
  br label %__nv_tanhf.exit133, !dbg !27

__nv_tanhf.exit133:                               ; preds = %__internal_fmad.exit1.i117, %__internal_fmad.exit3.i122
  %s.1.i121 = phi float [ %331, %__internal_fmad.exit1.i117 ], [ %.02.i132, %__internal_fmad.exit3.i122 ], !dbg !27
  %348 = and i32 %10, 127, !dbg !14
  %349 = or disjoint i32 %348, %9, !dbg !15
  %350 = or disjoint i32 %349, 896, !dbg !15
  %351 = icmp slt i32 %350, 6144, !dbg !16
  %352 = and i1 %7, %351, !dbg !20
  %353 = or disjoint i32 %349, 768, !dbg !15
  %354 = icmp slt i32 %353, 6144, !dbg !16
  %355 = and i1 %7, %354, !dbg !20
  %356 = or disjoint i32 %349, 640, !dbg !15
  %357 = icmp slt i32 %356, 6144, !dbg !16
  %358 = and i1 %7, %357, !dbg !20
  %359 = or disjoint i32 %349, 512, !dbg !15
  %360 = icmp slt i32 %359, 6144, !dbg !16
  %361 = and i1 %7, %360, !dbg !20
  %362 = or disjoint i32 %348, 384, !dbg !14
  %363 = or disjoint i32 %9, %362, !dbg !15
  %364 = icmp slt i32 %363, 6144, !dbg !16
  %365 = and i1 %7, %364, !dbg !20
  %366 = or disjoint i32 %348, 256, !dbg !14
  %367 = or disjoint i32 %9, %366, !dbg !15
  %368 = icmp slt i32 %367, 6144, !dbg !16
  %369 = and i1 %7, %368, !dbg !20
  %370 = or disjoint i32 %348, 128, !dbg !14
  %371 = or disjoint i32 %9, %370, !dbg !15
  %372 = icmp slt i32 %371, 6144, !dbg !16
  %373 = and i1 %7, %372, !dbg !20
  %374 = icmp slt i32 %349, 6144, !dbg !16
  %375 = and i1 %7, %374, !dbg !20
  %.frozen = freeze i32 %6, !dbg !29
  %376 = sdiv i32 %.frozen, 8, !dbg !29
  %377 = mul i32 %376, 8, !dbg !30
  %.decomposed = sub i32 %.frozen, %377, !dbg !30
  %378 = fmul float %31, 5.000000e-01, !dbg !31
  %379 = fmul float %32, 5.000000e-01, !dbg !31
  %380 = fmul float %33, 5.000000e-01, !dbg !31
  %381 = fmul float %34, 5.000000e-01, !dbg !31
  %382 = fmul float %40, 5.000000e-01, !dbg !31
  %383 = fmul float %41, 5.000000e-01, !dbg !31
  %384 = fmul float %42, 5.000000e-01, !dbg !31
  %385 = fmul float %43, 5.000000e-01, !dbg !31
  %386 = fadd float %s.1.i, 1.000000e+00, !dbg !32
  %387 = fadd float %s.1.i7, 1.000000e+00, !dbg !32
  %388 = fadd float %s.1.i26, 1.000000e+00, !dbg !32
  %389 = fadd float %s.1.i45, 1.000000e+00, !dbg !32
  %390 = fadd float %s.1.i64, 1.000000e+00, !dbg !32
  %391 = fadd float %s.1.i83, 1.000000e+00, !dbg !32
  %392 = fadd float %s.1.i102, 1.000000e+00, !dbg !32
  %393 = fadd float %s.1.i121, 1.000000e+00, !dbg !32
  %394 = fmul float %378, %386, !dbg !33
  %395 = fmul float %379, %387, !dbg !33
  %396 = fmul float %380, %388, !dbg !33
  %397 = fmul float %381, %389, !dbg !33
  %398 = fmul float %382, %390, !dbg !33
  %399 = fmul float %383, %391, !dbg !33
  %400 = fmul float %384, %392, !dbg !33
  %401 = fmul float %385, %393, !dbg !33
  %402 = shl i32 %349, 3, !dbg !34
  %403 = shl i32 %371, 3, !dbg !34
  %404 = shl i32 %367, 3, !dbg !34
  %405 = shl i32 %363, 3, !dbg !34
  %406 = shl i32 %359, 3, !dbg !34
  %407 = shl i32 %356, 3, !dbg !34
  %408 = shl i32 %353, 3, !dbg !34
  %409 = shl i32 %350, 3, !dbg !34
  %410 = mul i32 %376, 49152, !dbg !35
  %411 = add i32 %410, %.decomposed, !dbg !36
  %412 = add i32 %411, %402, !dbg !37
  %413 = add i32 %411, %403, !dbg !37
  %414 = add i32 %411, %404, !dbg !37
  %415 = add i32 %411, %405, !dbg !37
  %416 = add i32 %411, %406, !dbg !37
  %417 = add i32 %411, %407, !dbg !37
  %418 = add i32 %411, %408, !dbg !37
  %419 = add i32 %411, %409, !dbg !37
  %420 = sext i32 %412 to i64, !dbg !38
  %421 = getelementptr float, ptr addrspace(1) %1, i64 %420, !dbg !38
  %422 = sext i32 %413 to i64, !dbg !38
  %423 = getelementptr float, ptr addrspace(1) %1, i64 %422, !dbg !38
  %424 = sext i32 %414 to i64, !dbg !38
  %425 = getelementptr float, ptr addrspace(1) %1, i64 %424, !dbg !38
  %426 = sext i32 %415 to i64, !dbg !38
  %427 = getelementptr float, ptr addrspace(1) %1, i64 %426, !dbg !38
  %428 = sext i32 %416 to i64, !dbg !38
  %429 = getelementptr float, ptr addrspace(1) %1, i64 %428, !dbg !38
  %430 = sext i32 %417 to i64, !dbg !38
  %431 = getelementptr float, ptr addrspace(1) %1, i64 %430, !dbg !38
  %432 = sext i32 %418 to i64, !dbg !38
  %433 = getelementptr float, ptr addrspace(1) %1, i64 %432, !dbg !38
  %434 = sext i32 %419 to i64, !dbg !38
  %435 = getelementptr float, ptr addrspace(1) %1, i64 %434, !dbg !38
  %436 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !39
  %437 = bitcast float %s.1.i to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %436, <1 x i32> %437, i1 true) #4, !dbg !39
  %438 = or disjoint i32 %12, 1, !dbg !39
  %439 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %438, !dbg !39
  %440 = bitcast float %s.1.i7 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %439, <1 x i32> %440, i1 true) #4, !dbg !39
  %441 = or disjoint i32 %12, 2, !dbg !39
  %442 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %441, !dbg !39
  %443 = bitcast float %s.1.i26 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %442, <1 x i32> %443, i1 true) #4, !dbg !39
  %444 = or disjoint i32 %12, 3, !dbg !39
  %445 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %444, !dbg !39
  %446 = bitcast float %s.1.i45 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %445, <1 x i32> %446, i1 true) #4, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %447 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %348, !dbg !39
  %448 = load i32, ptr addrspace(3) %447, align 4, !dbg !39
  %449 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %370, !dbg !39
  %450 = load i32, ptr addrspace(3) %449, align 4, !dbg !39
  %451 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %366, !dbg !39
  %452 = load i32, ptr addrspace(3) %451, align 4, !dbg !39
  %453 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %362, !dbg !39
  %454 = load i32, ptr addrspace(3) %453, align 4, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %455 = bitcast float %s.1.i64 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %436, <1 x i32> %455, i1 true) #4, !dbg !39
  %456 = bitcast float %s.1.i83 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %439, <1 x i32> %456, i1 true) #4, !dbg !39
  %457 = bitcast float %s.1.i102 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %442, <1 x i32> %457, i1 true) #4, !dbg !39
  %458 = bitcast float %s.1.i121 to <1 x i32>, !dbg !39
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %445, <1 x i32> %458, i1 true) #4, !dbg !39
  tail call void @llvm.nvvm.barrier0(), !dbg !39
  %459 = load i32, ptr addrspace(3) %447, align 4, !dbg !39
  %460 = load i32, ptr addrspace(3) %449, align 4, !dbg !39
  %461 = load i32, ptr addrspace(3) %451, align 4, !dbg !39
  %462 = load i32, ptr addrspace(3) %453, align 4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %448, ptr addrspace(1) %421, i1 %375) #4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %450, ptr addrspace(1) %423, i1 %373) #4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %452, ptr addrspace(1) %425, i1 %369) #4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %454, ptr addrspace(1) %427, i1 %365) #4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %459, ptr addrspace(1) %429, i1 %361) #4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %460, ptr addrspace(1) %431, i1 %358) #4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %461, ptr addrspace(1) %433, i1 %355) #4, !dbg !39
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %462, ptr addrspace(1) %435, i1 %352) #4, !dbg !39
  %463 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !40
  %464 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !40
  %465 = bitcast float %394 to i32, !dbg !41
  %466 = bitcast float %395 to i32, !dbg !41
  %467 = bitcast float %396 to i32, !dbg !41
  %468 = bitcast float %397 to i32, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %465, i32 %466, i32 %467, i32 %468, ptr addrspace(1) %463, i1 %24) #4, !dbg !41
  %469 = bitcast float %398 to i32, !dbg !41
  %470 = bitcast float %399 to i32, !dbg !41
  %471 = bitcast float %400 to i32, !dbg !41
  %472 = bitcast float %401 to i32, !dbg !41
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %469, i32 %470, i32 %471, i32 %472, ptr addrspace(1) %464, i1 %25) #4, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cck4ovzhk2jcyq52fqby2nzgxm4onnktbkmmqek2wgvk4wbjaelt.py", directory: "inductor_cache/ck")
!4 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_mul_pow_sqrt_tanh_13, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_mul_pow_sqrt_tanh_13", linkageName: "triton_poi_fused_add_mul_pow_sqrt_tanh_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 24, column: 21, scope: !7)
!12 = !DILocation(line: 25, column: 28, scope: !7)
!13 = !DILocation(line: 25, column: 33, scope: !7)
!14 = !DILocation(line: 26, column: 44, scope: !7)
!15 = !DILocation(line: 26, column: 23, scope: !7)
!16 = !DILocation(line: 27, column: 21, scope: !7)
!17 = !DILocation(line: 32, column: 40, scope: !7)
!18 = !DILocation(line: 32, column: 35, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 53, scope: !7)
!21 = !DILocation(line: 32, column: 45, scope: !7)
!22 = !DILocation(line: 33, column: 18, scope: !7)
!23 = !DILocation(line: 34, column: 18, scope: !7)
!24 = !DILocation(line: 36, column: 18, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 39, column: 18, scope: !7)
!27 = !DILocation(line: 40, column: 26, scope: !7)
!28 = !{i32 21046}
!29 = !DILocation(line: 31, column: 19, scope: !7)
!30 = !DILocation(line: 30, column: 19, scope: !7)
!31 = !DILocation(line: 42, column: 19, scope: !7)
!32 = !DILocation(line: 44, column: 19, scope: !7)
!33 = !DILocation(line: 45, column: 20, scope: !7)
!34 = !DILocation(line: 46, column: 32, scope: !7)
!35 = !DILocation(line: 46, column: 43, scope: !7)
!36 = !DILocation(line: 46, column: 30, scope: !7)
!37 = !DILocation(line: 46, column: 37, scope: !7)
!38 = !DILocation(line: 46, column: 25, scope: !7)
!39 = !DILocation(line: 46, column: 54, scope: !7)
!40 = !DILocation(line: 47, column: 25, scope: !7)
!41 = !DILocation(line: 47, column: 47, scope: !7)
!42 = !DILocation(line: 47, column: 4, scope: !7)
