; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_div_masked_fill_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 256, !dbg !14
  %13 = srem i32 %11, 64, !dbg !15
  %14 = sdiv i32 %11, 4, !dbg !16
  %15 = sext i32 %13 to i64, !dbg !17
  %16 = getelementptr i1, ptr addrspace(1) %1, i64 %15, !dbg !17
  %17 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %16, i1 %12) #1, !dbg !18
  %18 = bitcast i16 %17 to <2 x i8>, !dbg !18
  %19 = icmp eq <2 x i8> %18, zeroinitializer, !dbg !18
  %20 = sext i32 %11 to i64, !dbg !19
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !19
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 %12) #1, !dbg !20
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !20
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !20
  %25 = bitcast i32 %23 to float, !dbg !20
  %26 = bitcast i32 %24 to float, !dbg !20
  %27 = sext i32 %14 to i64, !dbg !21
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !21
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !22
  %30 = bitcast i32 %29 to float, !dbg !22
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %12) #1, !dbg !22
  %32 = bitcast i32 %31 to float, !dbg !22
  %33 = getelementptr float, ptr addrspace(1) %3, i64 %27, !dbg !23
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %12) #1, !dbg !24
  %35 = bitcast i32 %34 to float, !dbg !24
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %12) #1, !dbg !24
  %37 = bitcast i32 %36 to float, !dbg !24
  %38 = extractelement <2 x i1> %19, i64 0, !dbg !25
  %39 = select i1 %38, float %25, float -1.000000e+09, !dbg !25
  %40 = extractelement <2 x i1> %19, i64 1, !dbg !25
  %41 = select i1 %40, float %26, float -1.000000e+09, !dbg !25
  %42 = fsub float %39, %30, !dbg !26
  %43 = fsub float %41, %32, !dbg !26
  %44 = fmul float %42, 0x3FF7154760000000, !dbg !27
  %45 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %44) #1, !dbg !27
  %46 = fmul float %43, 0x3FF7154760000000, !dbg !27
  %47 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %46) #1, !dbg !27
  %48 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %45, float %35) #1, !dbg !28
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %47, float %37) #1, !dbg !28
  %50 = bitcast float %48 to i32, !dbg !29
  %51 = bitcast float %49 to i32, !dbg !29
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %50, i32 %51, ptr addrspace(1) %21, i1 %12) #1, !dbg !29
  ret void, !dbg !30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7u6uegfde737oxaznf2in2w7d55p5ddce4jbt5syf67n72rfbpx.py", directory: "inductor_cache/7u")
!4 = !{ptr @triton_poi_fused__softmax_div_masked_fill_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_div_masked_fill_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_div_masked_fill_4", linkageName: "triton_poi_fused__softmax_div_masked_fill_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 30, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 28, column: 34, scope: !7)
!20 = !DILocation(line: 28, column: 39, scope: !7)
!21 = !DILocation(line: 29, column: 30, scope: !7)
!22 = !DILocation(line: 29, column: 35, scope: !7)
!23 = !DILocation(line: 30, column: 30, scope: !7)
!24 = !DILocation(line: 30, column: 35, scope: !7)
!25 = !DILocation(line: 34, column: 32, scope: !7)
!26 = !DILocation(line: 35, column: 18, scope: !7)
!27 = !DILocation(line: 36, column: 23, scope: !7)
!28 = !DILocation(line: 37, column: 19, scope: !7)
!29 = !DILocation(line: 38, column: 40, scope: !7)
!30 = !DILocation(line: 38, column: 4, scope: !7)
