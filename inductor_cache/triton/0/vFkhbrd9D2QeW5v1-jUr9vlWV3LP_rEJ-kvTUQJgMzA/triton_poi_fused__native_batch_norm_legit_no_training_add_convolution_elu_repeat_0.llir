; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %.frozen = freeze i32 %15, !dbg !14
  %16 = sdiv i32 %.frozen, 64, !dbg !14
  %17 = srem i32 %16, 16, !dbg !15
  %18 = mul i32 %16, 64, !dbg !16
  %.decomposed = sub i32 %.frozen, %18, !dbg !16
  %19 = sdiv i32 %15, 1024, !dbg !17
  %20 = sext i32 %15 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !18
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %21, i1 true) #3, !dbg !19
  %23 = extractvalue { i32, i32 } %22, 0, !dbg !19
  %24 = extractvalue { i32, i32 } %22, 1, !dbg !19
  %25 = bitcast i32 %23 to float, !dbg !19
  %26 = bitcast i32 %24 to float, !dbg !19
  %27 = sext i32 %17 to i64, !dbg !20
  %28 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !20
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %30 = bitcast i32 %29 to float, !dbg !21
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 true) #3, !dbg !21
  %32 = bitcast i32 %31 to float, !dbg !21
  %33 = getelementptr float, ptr addrspace(1) %3, i64 %27, !dbg !22
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #3, !dbg !23
  %35 = bitcast i32 %34 to float, !dbg !23
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #3, !dbg !23
  %37 = bitcast i32 %36 to float, !dbg !23
  %38 = getelementptr float, ptr addrspace(1) %4, i64 %27, !dbg !24
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #3, !dbg !25
  %40 = bitcast i32 %39 to float, !dbg !25
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #3, !dbg !25
  %42 = bitcast i32 %41 to float, !dbg !25
  %43 = getelementptr float, ptr addrspace(1) %5, i64 %27, !dbg !26
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #3, !dbg !27
  %45 = bitcast i32 %44 to float, !dbg !27
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %43, i1 true) #3, !dbg !27
  %47 = bitcast i32 %46 to float, !dbg !27
  %48 = getelementptr float, ptr addrspace(1) %6, i64 %27, !dbg !28
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 true) #3, !dbg !29
  %50 = bitcast i32 %49 to float, !dbg !29
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %48, i1 true) #3, !dbg !29
  %52 = bitcast i32 %51 to float, !dbg !29
  %.lhs.trunc = trunc nsw i32 %17 to i8, !dbg !30
  %53 = srem i8 %.lhs.trunc, 4, !dbg !30
  %.sext = sext i8 %53 to i32, !dbg !30
  %54 = shl nsw i32 %.sext, 6, !dbg !31
  %55 = shl nsw i32 %19, 8, !dbg !32
  %56 = add nsw i32 %55, %.decomposed, !dbg !33
  %57 = add nsw i32 %56, %54, !dbg !34
  %58 = sext i32 %57 to i64, !dbg !35
  %59 = getelementptr float, ptr addrspace(1) %7, i64 %58, !dbg !35
  %60 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %59, i1 true) #3, !dbg !36
  %61 = extractvalue { i32, i32 } %60, 0, !dbg !36
  %62 = extractvalue { i32, i32 } %60, 1, !dbg !36
  %63 = bitcast i32 %61 to float, !dbg !36
  %64 = bitcast i32 %62 to float, !dbg !36
  %65 = fadd float %25, %30, !dbg !37
  %66 = fadd float %26, %32, !dbg !37
  %67 = fsub float %65, %35, !dbg !38
  %68 = fsub float %66, %37, !dbg !38
  %69 = fadd float %40, 0x3EE4F8B580000000, !dbg !39
  %70 = fadd float %42, 0x3EE4F8B580000000, !dbg !39
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i = icmp eq i32 %71, 0, !dbg !40
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !40
  %.not1.i = icmp eq i32 %72, 0, !dbg !40
  br i1 %.not.i, label %78, label %73, !dbg !40

73:                                               ; preds = %9
  br i1 %.not1.i, label %76, label %74, !dbg !40

74:                                               ; preds = %73
  %75 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %69) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

76:                                               ; preds = %73
  %77 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %69) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

78:                                               ; preds = %9
  br i1 %.not1.i, label %81, label %79, !dbg !40

79:                                               ; preds = %78
  %80 = tail call float @llvm.nvvm.sqrt.rn.f(float %69) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

81:                                               ; preds = %78
  %82 = tail call float @llvm.nvvm.sqrt.approx.f(float %69) #3, !dbg !40
  br label %__nv_sqrtf.exit, !dbg !40

__nv_sqrtf.exit:                                  ; preds = %74, %76, %79, %81
  %.0.i = phi float [ %75, %74 ], [ %77, %76 ], [ %80, %79 ], [ %82, %81 ], !dbg !40
  %83 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !40
  %.not.i1 = icmp eq i32 %83, 0, !dbg !40
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !40
  %.not1.i4 = icmp eq i32 %84, 0, !dbg !40
  br i1 %.not.i1, label %90, label %85, !dbg !40

85:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %88, label %86, !dbg !40

86:                                               ; preds = %85
  %87 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %70) #3, !dbg !40
  br label %__nv_sqrtf.exit5, !dbg !40

88:                                               ; preds = %85
  %89 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %70) #3, !dbg !40
  br label %__nv_sqrtf.exit5, !dbg !40

90:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %93, label %91, !dbg !40

91:                                               ; preds = %90
  %92 = tail call float @llvm.nvvm.sqrt.rn.f(float %70) #3, !dbg !40
  br label %__nv_sqrtf.exit5, !dbg !40

93:                                               ; preds = %90
  %94 = tail call float @llvm.nvvm.sqrt.approx.f(float %70) #3, !dbg !40
  br label %__nv_sqrtf.exit5, !dbg !40

__nv_sqrtf.exit5:                                 ; preds = %86, %88, %91, %93
  %.0.i3 = phi float [ %87, %86 ], [ %89, %88 ], [ %92, %91 ], [ %94, %93 ], !dbg !40
  %95 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !41
  %96 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !41
  %97 = fmul float %67, %95, !dbg !42
  %98 = fmul float %68, %96, !dbg !42
  %99 = fmul float %97, %45, !dbg !43
  %100 = fmul float %98, %47, !dbg !43
  %101 = fadd float %99, %50, !dbg !44
  %102 = fadd float %100, %52, !dbg !44
  %103 = fadd float %101, %63, !dbg !45
  %104 = fadd float %102, %64, !dbg !45
  %105 = fmul float %103, 0x3FF7154760000000, !dbg !46
  %106 = tail call float @llvm.nvvm.round.f(float %105) #3, !dbg !46
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not.i6 = icmp eq i32 %107, 0, !dbg !46
  %108 = tail call float @llvm.nvvm.fabs.ftz.f(float %103) #3, !dbg !46
  %109 = tail call float @llvm.nvvm.fabs.f(float %103) #3, !dbg !46
  %.03.i = select i1 %.not.i6, float %109, float %108, !dbg !46
  %110 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !46
  %t.0.i = select i1 %110, float 0.000000e+00, float %106, !dbg !46
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %113 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !46
  %j.0.i = select i1 %113, float 1.270000e+02, float %t.0.i, !dbg !46
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not8.i = icmp eq i32 %119, 0, !dbg !46
  br i1 %.not8.i, label %122, label %120, !dbg !46

120:                                              ; preds = %__nv_sqrtf.exit5
  %121 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !46
  br label %__nv_expm1f.exit, !dbg !46

122:                                              ; preds = %__nv_sqrtf.exit5
  %123 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !46
  br label %__nv_expm1f.exit, !dbg !46

__nv_expm1f.exit:                                 ; preds = %120, %122
  %.0.i7 = phi float [ %121, %120 ], [ %123, %122 ], !dbg !46
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %125 = fmul float %104, 0x3FF7154760000000, !dbg !46
  %126 = tail call float @llvm.nvvm.round.f(float %125) #3, !dbg !46
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not.i10 = icmp eq i32 %127, 0, !dbg !46
  %128 = tail call float @llvm.nvvm.fabs.ftz.f(float %104) #3, !dbg !46
  %129 = tail call float @llvm.nvvm.fabs.f(float %104) #3, !dbg !46
  %.03.i11 = select i1 %.not.i10, float %129, float %128, !dbg !46
  %130 = fcmp olt float %.03.i11, 0x3FDA3D70A0000000, !dbg !46
  %t.0.i12 = select i1 %130, float 0.000000e+00, float %126, !dbg !46
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %133 = fcmp oeq float %t.0.i12, 1.280000e+02, !dbg !46
  %j.0.i13 = select i1 %133, float 1.270000e+02, float %t.0.i12, !dbg !46
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not8.i14 = icmp eq i32 %139, 0, !dbg !46
  br i1 %.not8.i14, label %142, label %140, !dbg !46

140:                                              ; preds = %__nv_expm1f.exit
  %141 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i13) #3, !dbg !46
  br label %__nv_expm1f.exit36, !dbg !46

142:                                              ; preds = %__nv_expm1f.exit
  %143 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i13) #3, !dbg !46
  br label %__nv_expm1f.exit36, !dbg !46

__nv_expm1f.exit36:                               ; preds = %140, %142
  %.0.i15 = phi float [ %141, %140 ], [ %143, %142 ], !dbg !46
  %144 = fcmp oeq float %103, 0.000000e+00, !dbg !46
  %145 = fadd float %103, %103, !dbg !46
  %146 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !46
  %147 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !46
  %.not9.i = icmp eq i32 %124, 0, !dbg !46
  %.not7.i = icmp eq i32 %118, 0, !dbg !46
  %.not6.i = icmp eq i32 %117, 0, !dbg !46
  %.not5.i = icmp eq i32 %116, 0, !dbg !46
  %.not4.i = icmp eq i32 %115, 0, !dbg !46
  %.not3.i = icmp eq i32 %114, 0, !dbg !46
  %.not2.i8 = icmp eq i32 %112, 0, !dbg !46
  %148 = fneg float %t.0.i, !dbg !46
  %.not1.i9 = icmp eq i32 %111, 0, !dbg !46
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0x3FE62E4000000000, float %103) #3, !dbg !46
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0x3FE62E4000000000, float %103) #3, !dbg !46
  %.04.i = select i1 %.not1.i9, float %149, float %150, !dbg !46
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %148, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !46
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %148, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !46
  %.05.i = select i1 %.not2.i8, float %151, float %152, !dbg !46
  %153 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !46
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !46
  %.07.i = select i1 %.not3.i, float %153, float %154, !dbg !46
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !46
  %156 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !46
  %.08.i = select i1 %.not4.i, float %155, float %156, !dbg !46
  %157 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !46
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !46
  %.09.i = select i1 %.not5.i, float %157, float %158, !dbg !46
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !46
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !46
  %.06.i = select i1 %.not6.i, float %159, float %160, !dbg !46
  %161 = fmul float %.05.i, %.06.i, !dbg !46
  %162 = tail call float @llvm.nvvm.fma.rn.f(float %161, float %.05.i, float %.05.i) #3, !dbg !46
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %161, float %.05.i, float %.05.i) #3, !dbg !46
  %.01.i = select i1 %.not7.i, float %162, float %163, !dbg !46
  %164 = fadd float %.0.i7, -1.000000e+00, !dbg !46
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i7, float %164) #3, !dbg !46
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i7, float %164) #3, !dbg !46
  %.02.i = select i1 %.not9.i, float %165, float %166, !dbg !46
  %167 = fadd float %.02.i, %.02.i, !dbg !46
  %u.0.i = select i1 %113, float %167, float %.02.i, !dbg !46
  %u.1.i = select i1 %147, float 0x7FF0000000000000, float %u.0.i, !dbg !46
  %u.2.i = select i1 %146, float -1.000000e+00, float %u.1.i, !dbg !46
  %u.3.i = select i1 %144, float %145, float %u.2.i, !dbg !46
  %168 = fcmp ogt float %104, 0.000000e+00, !dbg !47
  %169 = fcmp ogt float %103, 0.000000e+00, !dbg !47
  %.not7.i16 = icmp eq i32 %138, 0, !dbg !46
  %.not6.i17 = icmp eq i32 %137, 0, !dbg !46
  %.not5.i18 = icmp eq i32 %136, 0, !dbg !46
  %.not4.i19 = icmp eq i32 %135, 0, !dbg !46
  %.not3.i20 = icmp eq i32 %134, 0, !dbg !46
  %.not2.i21 = icmp eq i32 %132, 0, !dbg !46
  %170 = fneg float %t.0.i12, !dbg !46
  %.not1.i22 = icmp eq i32 %131, 0, !dbg !46
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %170, float 0x3FE62E4000000000, float %104) #3, !dbg !46
  %172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float 0x3FE62E4000000000, float %104) #3, !dbg !46
  %.04.i23 = select i1 %.not1.i22, float %171, float %172, !dbg !46
  %173 = tail call float @llvm.nvvm.fma.rn.f(float %170, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !46
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %170, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !46
  %.05.i24 = select i1 %.not2.i21, float %173, float %174, !dbg !46
  %175 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !46
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !46
  %.07.i25 = select i1 %.not3.i20, float %175, float %176, !dbg !46
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !46
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !46
  %.08.i26 = select i1 %.not4.i19, float %177, float %178, !dbg !46
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !46
  %180 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !46
  %.09.i27 = select i1 %.not5.i18, float %179, float %180, !dbg !46
  %181 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !46
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !46
  %.06.i28 = select i1 %.not6.i17, float %181, float %182, !dbg !46
  %183 = fmul float %.05.i24, %.06.i28, !dbg !46
  %184 = tail call float @llvm.nvvm.fma.rn.f(float %183, float %.05.i24, float %.05.i24) #3, !dbg !46
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %183, float %.05.i24, float %.05.i24) #3, !dbg !46
  %.01.i29 = select i1 %.not7.i16, float %184, float %185, !dbg !46
  %186 = fadd float %.0.i15, -1.000000e+00, !dbg !46
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !46
  %.not9.i30 = icmp eq i32 %187, 0, !dbg !46
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i29, float %.0.i15, float %186) #3, !dbg !46
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i29, float %.0.i15, float %186) #3, !dbg !46
  %.02.i31 = select i1 %.not9.i30, float %189, float %188, !dbg !46
  %190 = fadd float %.02.i31, %.02.i31, !dbg !46
  %u.0.i32 = select i1 %133, float %190, float %.02.i31, !dbg !46
  %191 = fcmp ogt float %j.0.i13, 1.280000e+02, !dbg !46
  %u.1.i33 = select i1 %191, float 0x7FF0000000000000, float %u.0.i32, !dbg !46
  %192 = fcmp olt float %j.0.i13, -2.500000e+01, !dbg !46
  %u.2.i34 = select i1 %192, float -1.000000e+00, float %u.1.i33, !dbg !46
  %193 = fcmp oeq float %104, 0.000000e+00, !dbg !46
  %194 = fadd float %104, %104, !dbg !46
  %u.3.i35 = select i1 %193, float %194, float %u.2.i34, !dbg !46
  %195 = select i1 %169, float %103, float %u.3.i, !dbg !48
  %196 = select i1 %168, float %104, float %u.3.i35, !dbg !48
  %197 = bitcast float %65 to i32, !dbg !49
  %198 = bitcast float %66 to i32, !dbg !49
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %197, i32 %198, ptr addrspace(1) %21, i1 true) #3, !dbg !49
  %199 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !50
  %200 = bitcast float %195 to i32, !dbg !51
  %201 = bitcast float %196 to i32, !dbg !51
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %200, i32 %201, ptr addrspace(1) %199, i1 true) #3, !dbg !51
  ret void, !dbg !52
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cnztlude3olovz2vbgxpssr6l36osyiw7nayww3b26twmsil7azp.py", directory: "inductor_cache/nz")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_elu_repeat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 27, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 34, scope: !7)
!19 = !DILocation(line: 28, column: 39, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 35, scope: !7)
!26 = !DILocation(line: 32, column: 31, scope: !7)
!27 = !DILocation(line: 32, column: 36, scope: !7)
!28 = !DILocation(line: 33, column: 31, scope: !7)
!29 = !DILocation(line: 33, column: 36, scope: !7)
!30 = !DILocation(line: 34, column: 46, scope: !7)
!31 = !DILocation(line: 34, column: 41, scope: !7)
!32 = !DILocation(line: 34, column: 56, scope: !7)
!33 = !DILocation(line: 34, column: 36, scope: !7)
!34 = !DILocation(line: 34, column: 52, scope: !7)
!35 = !DILocation(line: 34, column: 31, scope: !7)
!36 = !DILocation(line: 34, column: 61, scope: !7)
!37 = !DILocation(line: 35, column: 18, scope: !7)
!38 = !DILocation(line: 36, column: 18, scope: !7)
!39 = !DILocation(line: 38, column: 18, scope: !7)
!40 = !DILocation(line: 39, column: 26, scope: !7)
!41 = !DILocation(line: 41, column: 19, scope: !7)
!42 = !DILocation(line: 44, column: 19, scope: !7)
!43 = !DILocation(line: 45, column: 20, scope: !7)
!44 = !DILocation(line: 46, column: 20, scope: !7)
!45 = !DILocation(line: 47, column: 20, scope: !7)
!46 = !DILocation(line: 51, column: 28, scope: !7)
!47 = !DILocation(line: 49, column: 20, scope: !7)
!48 = !DILocation(line: 53, column: 35, scope: !7)
!49 = !DILocation(line: 54, column: 39, scope: !7)
!50 = !DILocation(line: 55, column: 28, scope: !7)
!51 = !DILocation(line: 55, column: 40, scope: !7)
!52 = !DILocation(line: 55, column: 4, scope: !7)
