//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_pixel_shuffle_0 // -- Begin function triton_poi_fused_pixel_shuffle_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_pixel_shuffle_0
.visible .entry triton_poi_fused_pixel_shuffle_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_pixel_shuffle_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_pixel_shuffle_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_pixel_shuffle_0_param_2,
	.param .u32 triton_poi_fused_pixel_shuffle_0_param_3,
	.param .u32 triton_poi_fused_pixel_shuffle_0_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<15>;
	.reg .b32 	%r<107>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:19:0

// %bb.0:
	ld.param.u64 	%rd6, [triton_poi_fused_pixel_shuffle_0_param_0];
	ld.param.u64 	%rd7, [triton_poi_fused_pixel_shuffle_0_param_1];
$L__tmp0:
	.loc	1 22 28                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:22:33
	shl.b32 	%r23, %r1, 8;
	ld.param.u64 	%rd8, [triton_poi_fused_pixel_shuffle_0_param_2];
	.loc	1 23 44                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:23:44
	mov.u32 	%r24, %tid.x;
	shl.b32 	%r25, %r24, 2;
	and.b32  	%r26, %r25, 252;
	and.b32  	%r27, %r24, 127;
	.loc	1 23 23                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:23:23
	or.b32  	%r28, %r23, %r26;
	or.b32  	%r29, %r23, %r27;
	or.b32  	%r30, %r29, 128;
	.loc	1 24 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:24:21
	setp.lt.s32 	%p10, %r28, 512;
	setp.lt.s32 	%p11, %r29, 512;
	setp.lt.s32 	%p12, %r30, 512;
	.loc	1 25 28                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:25:33
	shl.b32 	%r31, %r2, 1;
	.loc	1 26 44                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:26:44
	bfe.u32 	%r32, %r24, 6, 1;
	.loc	1 26 23                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:26:23
	or.b32  	%r33, %r31, %r32;
	.loc	1 27 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:27:21
	setp.lt.s32 	%p13, %r33, 2;
	setp.lt.s32 	%p14, %r31, 2;
	.loc	1 30 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:30:21
	shr.s32 	%r34, %r28, 2;
	bfe.s32 	%r35, %r1, 23, 1;
	shr.u32 	%r36, %r35, 30;
	add.s32 	%r37, %r29, %r36;
	shr.s32 	%r38, %r37, 2;
	add.s32 	%r39, %r30, %r36;
	shr.s32 	%r40, %r39, 2;
	.loc	1 30 26                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:30:26
	shr.u32 	%r41, %r37, 31;
	add.s32 	%r42, %r38, %r41;
	and.b32  	%r43, %r42, 2147483646;
	sub.s32 	%r44, %r38, %r43;
	shr.u32 	%r45, %r39, 31;
	add.s32 	%r46, %r40, %r45;
	and.b32  	%r47, %r46, 2147483646;
	sub.s32 	%r48, %r40, %r47;
	.loc	1 31 21                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:31:21
	shr.u32 	%r49, %r35, 29;
	add.s32 	%r50, %r28, %r49;
	shr.s32 	%r51, %r50, 3;
	.loc	1 32 19                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:32:19
	shr.u32 	%r52, %r35, 27;
	add.s32 	%r53, %r28, %r52;
	add.s32 	%r54, %r29, %r52;
	shr.s32 	%r55, %r54, 5;
	add.s32 	%r56, %r30, %r52;
	shr.s32 	%r57, %r56, 5;
	.loc	1 33 27                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:33:27
	shr.u32 	%r58, %r55, 30;
	add.s32 	%r59, %r55, %r58;
	and.b32  	%r60, %r59, 1073741820;
	sub.s32 	%r61, %r55, %r60;
	shr.u32 	%r62, %r57, 30;
	add.s32 	%r63, %r57, %r62;
	and.b32  	%r64, %r63, 1073741820;
	sub.s32 	%r65, %r57, %r64;
	.loc	1 31 26                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:31:26
	bfe.u32 	%r66, %r1, 23, 1;
	add.s32 	%r67, %r34, %r66;
	and.b32  	%r68, %r67, 134217726;
	sub.s32 	%r69, %r34, %r68;
	shr.u32 	%r70, %r51, 30;
	add.s32 	%r71, %r51, %r70;
	and.b32  	%r72, %r71, 1073741820;
	sub.s32 	%r73, %r51, %r72;
	.loc	1 35 61                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:61
	shl.b32 	%r74, %r73, 2;
	shl.b32 	%r75, %r69, 5;
	shl.b32 	%r76, %r53, 1;
	and.b32  	%r77, %r76, -64;
	shl.b32 	%r78, %r33, 4;
	.loc	1 35 58                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:58
	add.s32 	%r79, %r78, %r75;
	add.s32 	%r80, %r77, %r74;
	add.s32 	%r81, %r80, %r79;
	.loc	1 35 30                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:30
	mul.wide.s32 	%rd9, %r81, 4;
	add.s64 	%rd1, %rd6, %rd9;
	.loc	1 35 74                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:74
	and.pred  	%p1, %p10, %p13;
	and.pred  	%p6, %p14, %p11;
	and.pred  	%p7, %p12, %p14;
	.loc	1 35 66                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:35:66
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r8, %r10, %r12, %r14 }, [ %rd1 + 0 ];
	// end inline asm
	shl.b32 	%r82, %r24, 3;
	and.b32  	%r83, %r82, 504;
	or.b32  	%r84, %r83, %r32;
	shl.b32 	%r85, %r24, 1;
	and.b32  	%r86, %r85, 254;
	mov.u32 	%r87, global_smem;
	shl.b32 	%r88, %r84, 2;
	shl.b32 	%r89, %r83, 1;
	add.s32 	%r90, %r87, %r89;
	add.s32 	%r7, %r90, %r88;
	mov.pred 	%p2, -1;
	// begin inline asm
	@%p2 st.shared.b32 [ %r7 + 0 ], %r8;
	// end inline asm
	add.s32 	%r9, %r7, 12;
	// begin inline asm
	@%p2 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	add.s32 	%r11, %r7, 24;
	// begin inline asm
	@%p2 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r7, 36;
	// begin inline asm
	@%p2 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r91, %r86, 2;
	shl.b32 	%r92, %r86, 1;
	add.s32 	%r93, %r87, %r92;
	add.s32 	%r94, %r93, %r91;
	ld.shared.f32 	%f1, [%r94];
	ld.shared.f32 	%f2, [%r94+4];
	ld.shared.f32 	%f3, [%r94+1536];
	ld.shared.f32 	%f4, [%r94+1540];
	.loc	1 36 35                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:35
	add.s32 	%r95, %r44, %r2;
	shl.b32 	%r96, %r95, 1;
	add.s32 	%r97, %r2, %r48;
	shl.b32 	%r98, %r97, 1;
	.loc	1 36 44                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:44
	shl.b32 	%r99, %r61, 2;
	shl.b32 	%r100, %r65, 2;
	.loc	1 36 42                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:42
	add.s32 	%r101, %r96, %r99;
	add.s32 	%r102, %r98, %r100;
	.loc	1 36 30                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:30
	mul.wide.s32 	%rd10, %r101, 4;
	add.s64 	%rd2, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r102, 4;
	add.s64 	%rd3, %rd7, %rd11;
	.loc	1 36 49                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:36:49
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b32 { %r15, %r16 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r15;
	mov.b32 	%f6, %r16;
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p7 ld.global.L1::evict_last.v2.b32 { %r17, %r18 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r17;
	mov.b32 	%f8, %r18;
	.loc	1 37 18                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:37:18
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
	.loc	1 38 30                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:30
	add.s32 	%r103, %r29, %r2;
	shl.b32 	%r104, %r103, 1;
	add.s32 	%r105, %r2, %r30;
	shl.b32 	%r106, %r105, 1;
	.loc	1 38 25                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:25
	mul.wide.s32 	%rd12, %r104, 4;
	add.s64 	%rd4, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r106, 4;
	add.s64 	%rd5, %rd8, %rd13;
	.loc	1 38 43                         // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:43
	mov.b32 	%r19, %f9;
	mov.b32 	%r20, %f10;
	// begin inline asm
	@%p6 st.global.v2.b32 [ %rd4 + 0 ], { %r19, %r20 };
	// end inline asm
	mov.b32 	%r21, %f11;
	mov.b32 	%r22, %f12;
	// begin inline asm
	@%p7 st.global.v2.b32 [ %rd5 + 0 ], { %r21, %r22 };
	// end inline asm
	.loc	1 38 4                          // cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py:38:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mj/cmjz3j7lrspsebplkxh3syylmm74limbcw5ophyqc3ex4bek6o6t.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 106
.b8 122
.b8 51
.b8 106
.b8 55
.b8 108
.b8 114
.b8 115
.b8 112
.b8 115
.b8 101
.b8 98
.b8 112
.b8 108
.b8 107
.b8 120
.b8 104
.b8 51
.b8 115
.b8 121
.b8 121
.b8 108
.b8 109
.b8 109
.b8 55
.b8 52
.b8 108
.b8 105
.b8 109
.b8 98
.b8 99
.b8 119
.b8 53
.b8 111
.b8 112
.b8 104
.b8 121
.b8 113
.b8 99
.b8 51
.b8 101
.b8 120
.b8 52
.b8 98
.b8 101
.b8 107
.b8 54
.b8 111
.b8 54
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 106
.b8 0
	}
	.section	.debug_macinfo	{	}
