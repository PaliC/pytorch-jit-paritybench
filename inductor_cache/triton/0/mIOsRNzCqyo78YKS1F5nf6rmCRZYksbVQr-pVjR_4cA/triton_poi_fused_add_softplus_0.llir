; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_add_softplus_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 256, !dbg !14
  %10 = sext i32 %8 to i64, !dbg !15
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !15
  %12 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %11, i1 %9) #2, !dbg !16
  %13 = bitcast i32 %12 to float, !dbg !16
  %14 = fadd float %13, 5.000000e-01, !dbg !17
  %15 = fmul float %14, 0x3FF7154760000000, !dbg !18
  %16 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %15) #2, !dbg !18
  %17 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not.i = icmp eq i32 %17, 0, !dbg !19
  %18 = tail call float @llvm.nvvm.add.rz.ftz.f(float %16, float 1.000000e+00) #2, !dbg !19
  %19 = tail call float @llvm.nvvm.add.rz.f(float %16, float 1.000000e+00) #2, !dbg !19
  %.01.i = select i1 %.not.i, float %19, float %18, !dbg !19
  %20 = bitcast float %.01.i to i32, !dbg !19
  %21 = add i32 %20, -1061158912, !dbg !19
  %22 = and i32 %21, -8388608, !dbg !19
  %23 = bitcast float %16 to i32, !dbg !19
  %24 = sub i32 %23, %22, !dbg !19
  %25 = bitcast i32 %24 to float, !dbg !19
  %26 = sub i32 1082130432, %22, !dbg !19
  %27 = bitcast i32 %26 to float, !dbg !19
  %28 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not14.i = icmp eq i32 %28, 0, !dbg !19
  %29 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %27, float -1.000000e+00) #2, !dbg !19
  %30 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %27, float -1.000000e+00) #2, !dbg !19
  %.09.i = select i1 %.not14.i, float %30, float %29, !dbg !19
  %31 = fadd float %.09.i, %25, !dbg !19
  %32 = sitofp i32 %22 to float, !dbg !19
  %33 = fmul float %32, 0x3E80000000000000, !dbg !19
  %34 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not15.i = icmp eq i32 %34, 0, !dbg !19
  %35 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %31, float 0x3FBB000240000000) #2, !dbg !19
  %36 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %31, float 0x3FBB000240000000) #2, !dbg !19
  %.012.i = select i1 %.not15.i, float %36, float %35, !dbg !19
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not16.i = icmp eq i32 %37, 0, !dbg !19
  %38 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %31, float 0xBFC0EF1C00000000) #2, !dbg !19
  %39 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %31, float 0xBFC0EF1C00000000) #2, !dbg !19
  %.010.i = select i1 %.not16.i, float %39, float %38, !dbg !19
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not17.i = icmp eq i32 %40, 0, !dbg !19
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %31, float 0x3FC28C8EA0000000) #2, !dbg !19
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %31, float 0x3FC28C8EA0000000) #2, !dbg !19
  %.06.i = select i1 %.not17.i, float %42, float %41, !dbg !19
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not18.i = icmp eq i32 %43, 0, !dbg !19
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %31, float 0xBFC54D1BA0000000) #2, !dbg !19
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %31, float 0xBFC54D1BA0000000) #2, !dbg !19
  %.02.i = select i1 %.not18.i, float %45, float %44, !dbg !19
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not19.i = icmp eq i32 %46, 0, !dbg !19
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float %31, float 0x3FC995F3C0000000) #2, !dbg !19
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float %31, float 0x3FC995F3C0000000) #2, !dbg !19
  %.0.i = select i1 %.not19.i, float %48, float %47, !dbg !19
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not20.i = icmp eq i32 %49, 0, !dbg !19
  %50 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %31, float 0xBFD0000840000000) #2, !dbg !19
  %51 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %31, float 0xBFD0000840000000) #2, !dbg !19
  %.011.i = select i1 %.not20.i, float %51, float %50, !dbg !19
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not21.i = icmp eq i32 %52, 0, !dbg !19
  %53 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %31, float 0x3FD5555CC0000000) #2, !dbg !19
  %54 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %31, float 0x3FD5555CC0000000) #2, !dbg !19
  %.08.i = select i1 %.not21.i, float %54, float %53, !dbg !19
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not22.i = icmp eq i32 %55, 0, !dbg !19
  %56 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %31, float -5.000000e-01) #2, !dbg !19
  %57 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %31, float -5.000000e-01) #2, !dbg !19
  %.07.i = select i1 %.not22.i, float %57, float %56, !dbg !19
  %58 = fmul float %31, %.07.i, !dbg !19
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not23.i = icmp eq i32 %59, 0, !dbg !19
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %58, float %31, float %31) #2, !dbg !19
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %58, float %31, float %31) #2, !dbg !19
  %.05.i = select i1 %.not23.i, float %61, float %60, !dbg !19
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not24.i = icmp eq i32 %62, 0, !dbg !19
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %33, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !19
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %33, float 0x3FE62E4300000000, float %.05.i) #2, !dbg !19
  %.04.i = select i1 %.not24.i, float %64, float %63, !dbg !19
  %65 = icmp ugt i32 %23, 2139095039, !dbg !19
  br i1 %65, label %66, label %__nv_log1pf.exit, !dbg !19

66:                                               ; preds = %3
  %67 = icmp sgt i32 %23, -1082130432, !dbg !19
  br i1 %67, label %__nv_fmaf_rn.exit.i, label %71, !dbg !19

__nv_fmaf_rn.exit.i:                              ; preds = %66
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !19
  %.not25.i = icmp eq i32 %68, 0, !dbg !19
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %16, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !19
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %16, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !19
  %.03.i = select i1 %.not25.i, float %70, float %69, !dbg !19
  br label %71, !dbg !19

71:                                               ; preds = %__nv_fmaf_rn.exit.i, %66
  %r.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i ], [ %.04.i, %66 ], !dbg !19
  %72 = fcmp oeq float %16, 0.000000e+00, !dbg !19
  %r.1.i = select i1 %72, float -0.000000e+00, float %r.0.i, !dbg !19
  br label %__nv_log1pf.exit, !dbg !19

__nv_log1pf.exit:                                 ; preds = %3, %71
  %r.2.i = phi float [ %r.1.i, %71 ], [ %.04.i, %3 ], !dbg !19
  %73 = fcmp ogt float %14, 2.000000e+01, !dbg !20
  %74 = select i1 %73, float %14, float %r.2.i, !dbg !21
  %75 = fadd float %74, 0x3E45798EE0000000, !dbg !22
  %76 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !23
  %77 = bitcast float %75 to i32, !dbg !24
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %77, ptr addrspace(1) %76, i1 %9) #2, !dbg !24
  ret void, !dbg !25
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cw6zr6hzy57psdgu6jo7aqd2qgmfkutp6duwrjrggx7jngihp662.py", directory: "inductor_cache/w6")
!4 = !{ptr @triton_poi_fused_add_softplus_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_softplus_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_softplus_0", linkageName: "triton_poi_fused_add_softplus_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 27, column: 18, scope: !7)
!18 = !DILocation(line: 30, column: 23, scope: !7)
!19 = !DILocation(line: 31, column: 27, scope: !7)
!20 = !DILocation(line: 29, column: 18, scope: !7)
!21 = !DILocation(line: 32, column: 32, scope: !7)
!22 = !DILocation(line: 34, column: 18, scope: !7)
!23 = !DILocation(line: 35, column: 25, scope: !7)
!24 = !DILocation(line: 35, column: 36, scope: !7)
!25 = !DILocation(line: 35, column: 4, scope: !7)
