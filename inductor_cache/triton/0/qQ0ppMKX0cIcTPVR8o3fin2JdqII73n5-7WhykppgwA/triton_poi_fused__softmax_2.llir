; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_2(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 5, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 31, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 32, !dbg !14
  %10 = sdiv i32 %8, 2, !dbg !15
  %11 = sext i32 %8 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #1, !dbg !17
  %14 = bitcast i32 %13 to float, !dbg !17
  %15 = shl nsw i32 %10, 1, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %9) #1, !dbg !20
  %19 = bitcast i32 %18 to float, !dbg !20
  %20 = or disjoint i32 %15, 1, !dbg !21
  %21 = sext i32 %20 to i64, !dbg !22
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !22
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %22, i1 %9) #1, !dbg !23
  %24 = bitcast i32 %23 to float, !dbg !23
  %25 = fcmp ogt float %19, %24, !dbg !24
  %26 = fcmp uno float %19, 0.000000e+00, !dbg !28
  %27 = or i1 %26, %25, !dbg !29
  %28 = select i1 %27, float %19, float %24, !dbg !30
  %29 = fsub float %14, %28, !dbg !31
  %30 = fmul float %29, 0x3FF7154760000000, !dbg !32
  %31 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %30) #1, !dbg !32
  %32 = fsub float %19, %28, !dbg !33
  %33 = fmul float %32, 0x3FF7154760000000, !dbg !34
  %34 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %33) #1, !dbg !34
  %35 = fsub float %24, %28, !dbg !35
  %36 = fmul float %35, 0x3FF7154760000000, !dbg !36
  %37 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %36) #1, !dbg !36
  %38 = fadd float %34, %37, !dbg !37
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %31, float %38) #1, !dbg !38
  %40 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !39
  %41 = bitcast float %39 to i32, !dbg !40
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %41, ptr addrspace(1) %40, i1 %9) #1, !dbg !40
  ret void, !dbg !41
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2xrxsy567u4icm55i7xrmt672riepvkburnejfqphsrbjl6vrdf.py", directory: "inductor_cache/2x")
!4 = !{ptr @triton_poi_fused__softmax_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_2", linkageName: "triton_poi_fused__softmax_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 32, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 37, scope: !7)
!21 = !DILocation(line: 28, column: 34, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 41, scope: !7)
!24 = !DILocation(line: 118, column: 15, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!27 = !DILocation(line: 29, column: 40, scope: !7)
!28 = !DILocation(line: 120, column: 21, scope: !25, inlinedAt: !27)
!29 = !DILocation(line: 120, column: 16, scope: !25, inlinedAt: !27)
!30 = !DILocation(line: 121, column: 29, scope: !25, inlinedAt: !27)
!31 = !DILocation(line: 30, column: 18, scope: !7)
!32 = !DILocation(line: 31, column: 23, scope: !7)
!33 = !DILocation(line: 32, column: 18, scope: !7)
!34 = !DILocation(line: 33, column: 23, scope: !7)
!35 = !DILocation(line: 34, column: 18, scope: !7)
!36 = !DILocation(line: 35, column: 23, scope: !7)
!37 = !DILocation(line: 36, column: 19, scope: !7)
!38 = !DILocation(line: 37, column: 19, scope: !7)
!39 = !DILocation(line: 38, column: 25, scope: !7)
!40 = !DILocation(line: 38, column: 37, scope: !7)
!41 = !DILocation(line: 38, column: 4, scope: !7)
