//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_threshold_backward_22 // -- Begin function triton_poi_fused_convolution_relu_threshold_backward_22
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_threshold_backward_22
.visible .entry triton_poi_fused_convolution_relu_threshold_backward_22(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_22_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_22_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_22_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_threshold_backward_22_param_3,
	.param .u32 triton_poi_fused_convolution_relu_threshold_backward_22_param_4,
	.param .u32 triton_poi_fused_convolution_relu_threshold_backward_22_param_5
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<112>;
	.reg .b16 	%rs<45>;
	.reg .b32 	%r<344>;
	.reg .f32 	%f<86>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_relu_threshold_backward_22_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_convolution_relu_threshold_backward_22_param_1];
$L__tmp0:
	.loc	1 22 28                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:22:33
	shl.b32 	%r110, %r1, 8;
	ld.param.u64 	%rd13, [triton_poi_fused_convolution_relu_threshold_backward_22_param_2];
	ld.param.u64 	%rd14, [triton_poi_fused_convolution_relu_threshold_backward_22_param_3];
	.loc	1 23 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:23:44
	mov.u32 	%r111, %tid.x;
	shl.b32 	%r112, %r111, 4;
	and.b32  	%r113, %r112, 240;
	bfe.u32 	%r114, %r111, 2, 6;
	or.b32  	%r115, %r114, 64;
	or.b32  	%r116, %r114, 128;
	or.b32  	%r117, %r114, 192;
	and.b32  	%r118, %r111, 255;
	.loc	1 23 23                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:23:23
	or.b32  	%r119, %r110, %r113;
	or.b32  	%r120, %r119, 4;
	or.b32  	%r121, %r119, 8;
	or.b32  	%r122, %r119, 12;
	or.b32  	%r123, %r110, %r114;
	or.b32  	%r124, %r110, %r115;
	or.b32  	%r125, %r110, %r116;
	or.b32  	%r126, %r110, %r117;
	or.b32  	%r127, %r110, %r118;
	.loc	1 25 28                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:25:33
	shl.b32 	%r128, %r2, 4;
	.loc	1 26 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:26:44
	bfe.u32 	%r129, %r111, 4, 4;
	shl.b32 	%r130, %r111, 2;
	and.b32  	%r131, %r130, 12;
	.loc	1 26 23                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:26:23
	or.b32  	%r132, %r128, %r129;
	or.b32  	%r133, %r128, %r131;
	.loc	1 27 21                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:27:21
	setp.lt.s32 	%p1, %r132, 16;
	setp.lt.s32 	%p27, %r133, 16;
	.loc	1 30 19                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:30:19
	shr.s32 	%r135, %r119, 31;
	shr.u32 	%r136, %r135, 23;
	add.s32 	%r137, %r119, %r136;
	.loc	1 29 19                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:29:19
	and.b32  	%r138, %r137, -512;
	sub.s32 	%r139, %r119, %r138;
	bfe.s32 	%r140, %r1, 23, 1;
	shr.u32 	%r141, %r140, 23;
	add.s32 	%r142, %r120, %r141;
	and.b32  	%r143, %r142, -512;
	sub.s32 	%r144, %r120, %r143;
	add.s32 	%r145, %r121, %r141;
	and.b32  	%r146, %r145, -512;
	sub.s32 	%r147, %r121, %r146;
	add.s32 	%r148, %r122, %r141;
	and.b32  	%r149, %r148, -512;
	sub.s32 	%r150, %r122, %r149;
	add.s32 	%r151, %r127, %r141;
	and.b32  	%r152, %r151, -512;
	sub.s32 	%r153, %r127, %r152;
	.loc	1 32 39                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:32:39
	shl.b32 	%r154, %r132, 9;
	.loc	1 32 49                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:32:49
	shl.b32 	%r155, %r137, 4;
	and.b32  	%r156, %r155, -8192;
	.loc	1 32 35                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:32:35
	add.s32 	%r157, %r156, %r154;
	.loc	1 32 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:32:44
	add.s32 	%r158, %r157, %r139;
	add.s32 	%r159, %r157, %r144;
	add.s32 	%r160, %r157, %r147;
	add.s32 	%r161, %r157, %r150;
	.loc	1 32 30                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:32:30
	cvt.s64.s32 	%rd15, %r158;
	mul.wide.s32 	%rd16, %r158, 4;
	add.s64 	%rd1, %rd11, %rd16;
	mul.wide.s32 	%rd17, %r159, 4;
	add.s64 	%rd2, %rd11, %rd17;
	mul.wide.s32 	%rd18, %r160, 4;
	add.s64 	%rd3, %rd11, %rd18;
	mul.wide.s32 	%rd19, %r161, 4;
	add.s64 	%rd4, %rd11, %rd19;
	.loc	1 32 54                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:32:54
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r28, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r28, %r30, %r32, %r34 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r36, 0x0;
	mov.u32 %r38, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r36, %r38, %r40, %r42 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r44, 0x0;
	mov.u32 %r46, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r50, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r44, %r46, %r48, %r50 }, [ %rd4 + 0 ];
	// end inline asm
	shl.b32 	%r162, %r111, 8;
	and.b32  	%r163, %r162, 3840;
	or.b32  	%r164, %r163, %r129;
	and.b32  	%r165, %r130, 1020;
	shr.u32 	%r166, %r163, 2;
	mov.u32 	%r167, global_smem;
	add.s32 	%r168, %r167, %r166;
	shl.b32 	%r169, %r164, 2;
	add.s32 	%r19, %r168, %r169;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r170, %r163, 16;
	shr.u32 	%r171, %r170, 2;
	add.s32 	%r172, %r167, %r171;
	add.s32 	%r173, %r172, %r169;
	add.s32 	%r21, %r173, 64;
	// begin inline asm
	@%p5 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	or.b32  	%r174, %r163, 32;
	shr.u32 	%r175, %r174, 2;
	add.s32 	%r176, %r167, %r175;
	add.s32 	%r177, %r176, %r169;
	add.s32 	%r23, %r177, 128;
	// begin inline asm
	@%p5 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	or.b32  	%r178, %r163, 48;
	shr.u32 	%r179, %r178, 2;
	add.s32 	%r180, %r167, %r179;
	add.s32 	%r181, %r180, %r169;
	add.s32 	%r25, %r181, 192;
	// begin inline asm
	@%p5 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	or.b32  	%r182, %r163, 64;
	shr.u32 	%r183, %r182, 2;
	add.s32 	%r184, %r167, %r183;
	add.s32 	%r185, %r184, %r169;
	add.s32 	%r27, %r185, 256;
	// begin inline asm
	@%p5 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	or.b32  	%r186, %r163, 80;
	shr.u32 	%r187, %r186, 2;
	add.s32 	%r188, %r167, %r187;
	add.s32 	%r189, %r188, %r169;
	add.s32 	%r29, %r189, 320;
	// begin inline asm
	@%p5 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	or.b32  	%r190, %r163, 96;
	shr.u32 	%r191, %r190, 2;
	add.s32 	%r192, %r167, %r191;
	add.s32 	%r193, %r192, %r169;
	add.s32 	%r31, %r193, 384;
	// begin inline asm
	@%p5 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	or.b32  	%r194, %r163, 112;
	shr.u32 	%r195, %r194, 2;
	add.s32 	%r196, %r167, %r195;
	add.s32 	%r197, %r196, %r169;
	add.s32 	%r33, %r197, 448;
	// begin inline asm
	@%p5 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	or.b32  	%r198, %r163, 128;
	shr.u32 	%r199, %r198, 2;
	add.s32 	%r200, %r167, %r199;
	add.s32 	%r201, %r200, %r169;
	add.s32 	%r35, %r201, 512;
	// begin inline asm
	@%p5 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	or.b32  	%r202, %r163, 144;
	shr.u32 	%r203, %r202, 2;
	add.s32 	%r204, %r167, %r203;
	add.s32 	%r205, %r204, %r169;
	add.s32 	%r37, %r205, 576;
	// begin inline asm
	@%p5 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	or.b32  	%r206, %r163, 160;
	shr.u32 	%r207, %r206, 2;
	add.s32 	%r208, %r167, %r207;
	add.s32 	%r209, %r208, %r169;
	add.s32 	%r39, %r209, 640;
	// begin inline asm
	@%p5 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	or.b32  	%r210, %r163, 176;
	shr.u32 	%r211, %r210, 2;
	add.s32 	%r212, %r167, %r211;
	add.s32 	%r213, %r212, %r169;
	add.s32 	%r41, %r213, 704;
	// begin inline asm
	@%p5 st.shared.b32 [ %r41 + 0 ], %r42;
	// end inline asm
	or.b32  	%r214, %r163, 192;
	shr.u32 	%r215, %r214, 2;
	add.s32 	%r216, %r167, %r215;
	add.s32 	%r217, %r216, %r169;
	add.s32 	%r43, %r217, 768;
	// begin inline asm
	@%p5 st.shared.b32 [ %r43 + 0 ], %r44;
	// end inline asm
	or.b32  	%r218, %r163, 208;
	shr.u32 	%r219, %r218, 2;
	add.s32 	%r220, %r167, %r219;
	add.s32 	%r221, %r220, %r169;
	add.s32 	%r45, %r221, 832;
	// begin inline asm
	@%p5 st.shared.b32 [ %r45 + 0 ], %r46;
	// end inline asm
	or.b32  	%r222, %r163, 224;
	shr.u32 	%r223, %r222, 2;
	add.s32 	%r224, %r167, %r223;
	add.s32 	%r225, %r224, %r169;
	add.s32 	%r47, %r225, 896;
	// begin inline asm
	@%p5 st.shared.b32 [ %r47 + 0 ], %r48;
	// end inline asm
	or.b32  	%r226, %r163, 240;
	shr.u32 	%r227, %r226, 2;
	add.s32 	%r228, %r167, %r227;
	add.s32 	%r229, %r228, %r169;
	add.s32 	%r49, %r229, 960;
	// begin inline asm
	@%p5 st.shared.b32 [ %r49 + 0 ], %r50;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r230, %r111, 252;
	add.s32 	%r231, %r167, %r230;
	shl.b32 	%r232, %r165, 2;
	add.s32 	%r233, %r231, %r232;
	or.b32  	%r234, %r165, 1024;
	shr.u32 	%r235, %r234, 2;
	and.b32  	%r236, %r235, 508;
	add.s32 	%r237, %r167, %r236;
	add.s32 	%r238, %r237, %r232;
	ld.shared.f32 	%f1, [%r238+4096];
	ld.shared.f32 	%f2, [%r238+4100];
	ld.shared.f32 	%f3, [%r238+4104];
	ld.shared.f32 	%f4, [%r238+4108];
	or.b32  	%r239, %r165, 2048;
	shr.u32 	%r240, %r239, 2;
	and.b32  	%r241, %r240, 764;
	add.s32 	%r242, %r167, %r241;
	add.s32 	%r243, %r242, %r232;
	ld.shared.f32 	%f5, [%r243+8192];
	ld.shared.f32 	%f6, [%r243+8196];
	ld.shared.f32 	%f7, [%r243+8200];
	ld.shared.f32 	%f8, [%r243+8204];
	or.b32  	%r244, %r165, 3072;
	shr.u32 	%r245, %r244, 2;
	and.b32  	%r246, %r245, 1020;
	add.s32 	%r247, %r167, %r246;
	add.s32 	%r248, %r247, %r232;
	ld.shared.f32 	%f9, [%r248+12288];
	ld.shared.f32 	%f10, [%r248+12292];
	ld.shared.f32 	%f11, [%r248+12296];
	ld.shared.f32 	%f12, [%r248+12300];
	and.b32  	%r249, %r112, 4080;
	and.b32  	%r250, %r111, 240;
	add.s32 	%r251, %r249, %r250;
	shl.b32 	%r252, %r251, 2;
	add.s32 	%r51, %r167, %r252;
	add.s32 	%r56, %r51, 16;
	add.s32 	%r61, %r51, 32;
	add.s32 	%r66, %r51, 48;
	shl.b32 	%r253, %r118, 2;
	add.s32 	%r254, %r167, %r253;
	.loc	1 33 30                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:33:30
	mul.wide.s32 	%rd20, %r153, 4;
	add.s64 	%rd5, %rd12, %rd20;
$L__tmp1:
	.loc	2 121 29                        // triton_helpers.py:121:29
	add.s32 	%r72, %r254, %r253;
	shl.b32 	%r255, %r114, 3;
	add.s32 	%r256, %r167, %r255;
	shl.b32 	%r257, %r115, 3;
	add.s32 	%r258, %r167, %r257;
	shl.b32 	%r259, %r116, 3;
	add.s32 	%r260, %r167, %r259;
	shl.b32 	%r261, %r117, 3;
	add.s32 	%r262, %r167, %r261;
$L__tmp2:
	.loc	1 32 54                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:32:54
	ld.shared.f32 	%f13, [%r233+12];
	ld.shared.f32 	%f14, [%r233+8];
	ld.shared.f32 	%f15, [%r233+4];
	ld.shared.f32 	%f16, [%r233];
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r51 + 0 ], { %r20, %r22, %r24, %r26 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r56 + 0 ], { %r28, %r30, %r32, %r34 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r61 + 0 ], { %r36, %r38, %r40, %r42 };
	// end inline asm
	// begin inline asm
	@%p5 st.shared.v4.b32 [ %r66 + 0 ], { %r44, %r46, %r48, %r50 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f17, [%r254];
	ld.shared.f32 	%f18, [%r254+1088];
	ld.shared.f32 	%f19, [%r254+2176];
	ld.shared.f32 	%f20, [%r254+3264];
	ld.shared.f32 	%f21, [%r254+4352];
	ld.shared.f32 	%f22, [%r254+5440];
	ld.shared.f32 	%f23, [%r254+6528];
	ld.shared.f32 	%f24, [%r254+7616];
	ld.shared.f32 	%f25, [%r254+8704];
	ld.shared.f32 	%f26, [%r254+9792];
	ld.shared.f32 	%f27, [%r254+10880];
	ld.shared.f32 	%f28, [%r254+11968];
	ld.shared.f32 	%f29, [%r254+13056];
	ld.shared.f32 	%f30, [%r254+14144];
	ld.shared.f32 	%f31, [%r254+15232];
	ld.shared.f32 	%f32, [%r254+16320];
	.loc	1 33 35                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:33:35
	// begin inline asm
	mov.u32 %r73, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r73 }, [ %rd5 + 0 ];
	// end inline asm
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	bar.sync 	0;
	// begin inline asm
	@%p5 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f33, [%r256];
	ld.shared.f32 	%f34, [%r258];
	ld.shared.f32 	%f35, [%r260];
	ld.shared.f32 	%f36, [%r262];
$L__tmp4:
	.loc	1 34 18                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:34:18
	mov.b32 	%f37, %r73;
	add.f32 	%f38, %f28, %f37;
	add.f32 	%f39, %f27, %f37;
	add.f32 	%f40, %f24, %f37;
	add.f32 	%f41, %f23, %f37;
	add.f32 	%f42, %f20, %f37;
	add.f32 	%f43, %f19, %f37;
	add.f32 	%f44, %f32, %f37;
	add.f32 	%f45, %f30, %f37;
	add.f32 	%f46, %f26, %f37;
	add.f32 	%f47, %f22, %f37;
	add.f32 	%f48, %f18, %f37;
	add.f32 	%f49, %f31, %f37;
	add.f32 	%f50, %f29, %f37;
	add.f32 	%f51, %f25, %f37;
	add.f32 	%f52, %f21, %f37;
	add.f32 	%f53, %f17, %f37;
	add.f32 	%f54, %f16, %f33;
	add.f32 	%f55, %f15, %f33;
	add.f32 	%f56, %f14, %f33;
	add.f32 	%f57, %f13, %f33;
	add.f32 	%f58, %f1, %f34;
	add.f32 	%f59, %f2, %f34;
	add.f32 	%f60, %f3, %f34;
	add.f32 	%f61, %f4, %f34;
	add.f32 	%f62, %f5, %f35;
	add.f32 	%f63, %f6, %f35;
	add.f32 	%f64, %f7, %f35;
	add.f32 	%f65, %f8, %f35;
	add.f32 	%f66, %f9, %f36;
	add.f32 	%f67, %f10, %f36;
	add.f32 	%f68, %f11, %f36;
	add.f32 	%f69, %f12, %f36;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p48, %f69, 0f00000000;
	setp.lt.f32 	%p49, %f68, 0f00000000;
	setp.lt.f32 	%p50, %f67, 0f00000000;
	setp.lt.f32 	%p51, %f66, 0f00000000;
	setp.lt.f32 	%p52, %f65, 0f00000000;
	setp.lt.f32 	%p53, %f64, 0f00000000;
	setp.lt.f32 	%p54, %f63, 0f00000000;
	setp.lt.f32 	%p55, %f62, 0f00000000;
	setp.lt.f32 	%p56, %f61, 0f00000000;
	setp.lt.f32 	%p57, %f60, 0f00000000;
	setp.lt.f32 	%p58, %f59, 0f00000000;
	setp.lt.f32 	%p59, %f58, 0f00000000;
	setp.lt.f32 	%p60, %f57, 0f00000000;
	setp.lt.f32 	%p61, %f56, 0f00000000;
	setp.lt.f32 	%p62, %f55, 0f00000000;
	setp.lt.f32 	%p63, %f54, 0f00000000;
	setp.lt.f32 	%p64, %f53, 0f00000000;
	setp.lt.f32 	%p65, %f52, 0f00000000;
	setp.lt.f32 	%p66, %f51, 0f00000000;
	setp.lt.f32 	%p67, %f50, 0f00000000;
	setp.lt.f32 	%p68, %f49, 0f00000000;
	setp.lt.f32 	%p69, %f48, 0f00000000;
	setp.lt.f32 	%p70, %f47, 0f00000000;
	setp.lt.f32 	%p71, %f46, 0f00000000;
	setp.lt.f32 	%p72, %f45, 0f00000000;
	setp.lt.f32 	%p73, %f44, 0f00000000;
	setp.lt.f32 	%p74, %f43, 0f00000000;
	setp.lt.f32 	%p75, %f42, 0f00000000;
	setp.lt.f32 	%p76, %f41, 0f00000000;
	setp.lt.f32 	%p77, %f40, 0f00000000;
	setp.lt.f32 	%p78, %f39, 0f00000000;
	setp.lt.f32 	%p79, %f38, 0f00000000;
$L__tmp6:
	.loc	1 38 19                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:38:19
	setp.le.f32 	%p80, %f53, 0f00000000;
	setp.le.f32 	%p81, %f52, 0f00000000;
	setp.le.f32 	%p82, %f51, 0f00000000;
	setp.le.f32 	%p83, %f50, 0f00000000;
	setp.le.f32 	%p84, %f49, 0f00000000;
	setp.le.f32 	%p85, %f48, 0f00000000;
	setp.le.f32 	%p86, %f47, 0f00000000;
	setp.le.f32 	%p87, %f46, 0f00000000;
	setp.le.f32 	%p88, %f45, 0f00000000;
	setp.le.f32 	%p89, %f44, 0f00000000;
	setp.le.f32 	%p90, %f43, 0f00000000;
	setp.le.f32 	%p91, %f42, 0f00000000;
	setp.le.f32 	%p92, %f41, 0f00000000;
	setp.le.f32 	%p93, %f40, 0f00000000;
	setp.le.f32 	%p94, %f39, 0f00000000;
	setp.le.f32 	%p95, %f38, 0f00000000;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	or.pred  	%p96, %p79, %p95;
	selp.u16 	%rs17, 1, 0, %p96;
	or.pred  	%p97, %p78, %p94;
	selp.u16 	%rs18, -1, 0, %p97;
	shl.b16 	%rs19, %rs18, 1;
	or.b16  	%rs20, %rs17, %rs19;
	or.pred  	%p98, %p77, %p93;
	selp.u16 	%rs21, 1, 0, %p98;
	or.pred  	%p99, %p76, %p92;
	selp.u16 	%rs22, -1, 0, %p99;
	shl.b16 	%rs23, %rs22, 1;
	or.b16  	%rs24, %rs21, %rs23;
	or.pred  	%p100, %p75, %p91;
	selp.u16 	%rs25, 1, 0, %p100;
	or.pred  	%p101, %p74, %p90;
	selp.u16 	%rs26, -1, 0, %p101;
	shl.b16 	%rs27, %rs26, 1;
	or.b16  	%rs28, %rs25, %rs27;
	or.pred  	%p102, %p73, %p89;
	or.pred  	%p103, %p72, %p88;
	selp.u16 	%rs14, 1, 0, %p103;
	or.pred  	%p104, %p71, %p87;
	selp.u16 	%rs10, 1, 0, %p104;
	or.pred  	%p105, %p70, %p86;
	selp.u16 	%rs6, 1, 0, %p105;
	or.pred  	%p106, %p69, %p85;
	selp.u16 	%rs2, 1, 0, %p106;
	or.pred  	%p107, %p68, %p84;
	or.pred  	%p108, %p67, %p83;
	or.pred  	%p109, %p66, %p82;
	or.pred  	%p110, %p65, %p81;
	or.pred  	%p111, %p64, %p80;
$L__tmp8:
	.loc	1 39 33                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:33
	shl.b32 	%r263, %r123, 4;
	shl.b32 	%r264, %r124, 4;
	shl.b32 	%r265, %r125, 4;
	shl.b32 	%r266, %r126, 4;
	.loc	1 39 30                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:30
	add.s32 	%r267, %r133, %r263;
	add.s32 	%r268, %r133, %r264;
	add.s32 	%r269, %r133, %r265;
	add.s32 	%r270, %r133, %r266;
	.loc	1 39 25                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:25
	mul.wide.s32 	%rd21, %r267, 4;
	add.s64 	%rd6, %rd13, %rd21;
	mul.wide.s32 	%rd22, %r268, 4;
	add.s64 	%rd7, %rd13, %rd22;
	mul.wide.s32 	%rd23, %r269, 4;
	add.s64 	%rd8, %rd13, %rd23;
	mul.wide.s32 	%rd24, %r270, 4;
	add.s64 	%rd9, %rd13, %rd24;
	.loc	1 39 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:44
	mov.b32 	%r271, %f69;
	mov.b32 	%r272, %f68;
	mov.b32 	%r273, %f67;
	mov.b32 	%r274, %f66;
	mov.b32 	%r275, %f65;
	mov.b32 	%r276, %f64;
	mov.b32 	%r277, %f63;
	mov.b32 	%r278, %f62;
	mov.b32 	%r279, %f61;
	mov.b32 	%r280, %f60;
	mov.b32 	%r281, %f59;
	mov.b32 	%r282, %f58;
	mov.b32 	%r283, %f57;
	mov.b32 	%r284, %f56;
	mov.b32 	%r285, %f55;
	mov.b32 	%r286, %f54;
$L__tmp9:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r74, 0, %r286, %p63;
	selp.b32 	%r75, 0, %r285, %p62;
	selp.b32 	%r76, 0, %r284, %p61;
	selp.b32 	%r77, 0, %r283, %p60;
$L__tmp10:
	.loc	1 39 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:44
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd6 + 0 ], { %r74, %r75, %r76, %r77 };
	// end inline asm
$L__tmp11:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r78, 0, %r282, %p59;
	selp.b32 	%r79, 0, %r281, %p58;
	selp.b32 	%r80, 0, %r280, %p57;
	selp.b32 	%r81, 0, %r279, %p56;
$L__tmp12:
	.loc	1 39 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:44
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd7 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
$L__tmp13:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r82, 0, %r278, %p55;
	selp.b32 	%r83, 0, %r277, %p54;
	selp.b32 	%r84, 0, %r276, %p53;
	selp.b32 	%r85, 0, %r275, %p52;
$L__tmp14:
	.loc	1 39 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:44
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd8 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
$L__tmp15:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r86, 0, %r274, %p51;
	selp.b32 	%r87, 0, %r273, %p50;
	selp.b32 	%r88, 0, %r272, %p49;
	selp.b32 	%r89, 0, %r271, %p48;
$L__tmp16:
	.loc	1 39 44                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:39:44
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd9 + 0 ], { %r86, %r87, %r88, %r89 };
	// end inline asm
	.loc	1 40 25                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:40:25
	add.s64 	%rd10, %rd14, %rd15;
	.loc	1 40 55                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:40:55
	bar.sync 	0;
	selp.u16 	%rs1, 1, 0, %p111;
	selp.u16 	%rs3, 1, 0, %p101;
	selp.u16 	%rs5, 1, 0, %p110;
	selp.u16 	%rs7, 1, 0, %p99;
	selp.u16 	%rs9, 1, 0, %p109;
	selp.u16 	%rs11, 1, 0, %p97;
	selp.u16 	%rs13, 1, 0, %p108;
	selp.u16 	%rs15, 1, 0, %p107;
	add.s32 	%r90, %r167, %r118;
	// begin inline asm
	@%p5 st.shared.b8 [ %r90 + 0 ], %rs1;
	// end inline asm
	add.s32 	%r91, %r90, 272;
	// begin inline asm
	@%p5 st.shared.b8 [ %r91 + 0 ], %rs2;
	// end inline asm
	add.s32 	%r92, %r90, 544;
	// begin inline asm
	@%p5 st.shared.b8 [ %r92 + 0 ], %rs3;
	// end inline asm
	add.s32 	%r93, %r90, 816;
	and.b16  	%rs4, %rs28, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r93 + 0 ], %rs4;
	// end inline asm
	add.s32 	%r94, %r90, 1088;
	// begin inline asm
	@%p5 st.shared.b8 [ %r94 + 0 ], %rs5;
	// end inline asm
	add.s32 	%r95, %r90, 1360;
	// begin inline asm
	@%p5 st.shared.b8 [ %r95 + 0 ], %rs6;
	// end inline asm
	add.s32 	%r96, %r90, 1632;
	// begin inline asm
	@%p5 st.shared.b8 [ %r96 + 0 ], %rs7;
	// end inline asm
	add.s32 	%r97, %r90, 1904;
	and.b16  	%rs8, %rs24, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r97 + 0 ], %rs8;
	// end inline asm
	add.s32 	%r98, %r90, 2176;
	// begin inline asm
	@%p5 st.shared.b8 [ %r98 + 0 ], %rs9;
	// end inline asm
	add.s32 	%r99, %r90, 2448;
	// begin inline asm
	@%p5 st.shared.b8 [ %r99 + 0 ], %rs10;
	// end inline asm
	add.s32 	%r100, %r90, 2720;
	// begin inline asm
	@%p5 st.shared.b8 [ %r100 + 0 ], %rs11;
	// end inline asm
	add.s32 	%r101, %r90, 2992;
	and.b16  	%rs12, %rs20, 1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r101 + 0 ], %rs12;
	// end inline asm
	add.s32 	%r102, %r90, 3264;
	// begin inline asm
	@%p5 st.shared.b8 [ %r102 + 0 ], %rs13;
	// end inline asm
	add.s32 	%r103, %r90, 3536;
	// begin inline asm
	@%p5 st.shared.b8 [ %r103 + 0 ], %rs14;
	// end inline asm
	add.s32 	%r104, %r90, 3808;
	// begin inline asm
	@%p5 st.shared.b8 [ %r104 + 0 ], %rs15;
	// end inline asm
	add.s32 	%r105, %r90, 4080;
$L__tmp17:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.u16 	%rs16, 1, 0, %p102;
$L__tmp18:
	.loc	1 40 55                         // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:40:55
	// begin inline asm
	@%p5 st.shared.b8 [ %r105 + 0 ], %rs16;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r287, %r167, %r251;
	ld.shared.v4.u32 	{%r288, %r289, %r290, %r291}, [%r287];
	bfe.u32 	%r296, %r288, 0, 8;
	bfe.u32 	%r297, %r288, 16, 8;
	cvt.u16.u32 	%rs29, %r297;
	bfe.u32 	%r298, %r288, 8, 8;
	cvt.u16.u32 	%rs30, %r298;
	mov.b32 	%r299, {%rs30, %rs29};
	and.b32  	%r300, %r299, 65537;
	bfe.u32 	%r301, %r289, 0, 8;
	bfe.u32 	%r302, %r289, 16, 8;
	cvt.u16.u32 	%rs31, %r302;
	bfe.u32 	%r303, %r289, 8, 8;
	cvt.u16.u32 	%rs32, %r303;
	mov.b32 	%r304, {%rs32, %rs31};
	and.b32  	%r305, %r304, 65537;
	bfe.u32 	%r306, %r290, 0, 8;
	bfe.u32 	%r307, %r290, 16, 8;
	cvt.u16.u32 	%rs33, %r307;
	bfe.u32 	%r308, %r290, 8, 8;
	cvt.u16.u32 	%rs34, %r308;
	mov.b32 	%r309, {%rs34, %rs33};
	and.b32  	%r310, %r309, 65537;
	bfe.u32 	%r311, %r291, 0, 8;
	bfe.u32 	%r312, %r291, 16, 8;
	cvt.u16.u32 	%rs35, %r312;
	bfe.u32 	%r313, %r291, 8, 8;
	cvt.u16.u32 	%rs36, %r313;
	mov.b32 	%r314, {%rs36, %rs35};
	and.b32  	%r315, %r314, 65537;
	mov.b32 	{%rs37, %rs38}, %r300;
	cvt.u32.u16 	%r316, %rs38;
	bfe.u32 	%r317, %r288, 24, 1;
	prmt.b32 	%r318, %r316, %r317, 0x3340U;
	cvt.u32.u16 	%r319, %rs37;
	and.b32  	%r320, %r296, 1;
	prmt.b32 	%r321, %r320, %r319, 0x3340U;
	prmt.b32 	%r322, %r321, %r318, 0x5410U;
	mov.b32 	{%rs39, %rs40}, %r305;
	cvt.u32.u16 	%r323, %rs40;
	bfe.u32 	%r324, %r289, 24, 1;
	prmt.b32 	%r325, %r323, %r324, 0x3340U;
	cvt.u32.u16 	%r326, %rs39;
	and.b32  	%r327, %r301, 1;
	prmt.b32 	%r328, %r327, %r326, 0x3340U;
	prmt.b32 	%r329, %r328, %r325, 0x5410U;
	mov.b32 	{%rs41, %rs42}, %r310;
	cvt.u32.u16 	%r330, %rs42;
	bfe.u32 	%r331, %r290, 24, 1;
	prmt.b32 	%r332, %r330, %r331, 0x3340U;
	cvt.u32.u16 	%r333, %rs41;
	and.b32  	%r334, %r306, 1;
	prmt.b32 	%r335, %r334, %r333, 0x3340U;
	prmt.b32 	%r336, %r335, %r332, 0x5410U;
	mov.b32 	{%rs43, %rs44}, %r315;
	cvt.u32.u16 	%r337, %rs44;
	bfe.u32 	%r338, %r291, 24, 1;
	prmt.b32 	%r339, %r337, %r338, 0x3340U;
	cvt.u32.u16 	%r340, %rs43;
	and.b32  	%r341, %r311, 1;
	prmt.b32 	%r342, %r341, %r340, 0x3340U;
	prmt.b32 	%r343, %r342, %r339, 0x5410U;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r322, %r329, %r336, %r343 };
	// end inline asm
	.loc	1 40 4                          // ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py:40:4
	ret;
$L__tmp19:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/t4/ct4wag5fpoudapbk7mrunebpno6bdue7npz4ibowccjgt7gn7yhz.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 200                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 52
.b8 119
.b8 97
.b8 103
.b8 53
.b8 102
.b8 112
.b8 111
.b8 117
.b8 100
.b8 97
.b8 112
.b8 98
.b8 107
.b8 55
.b8 109
.b8 114
.b8 117
.b8 110
.b8 101
.b8 98
.b8 112
.b8 110
.b8 111
.b8 54
.b8 98
.b8 100
.b8 117
.b8 101
.b8 55
.b8 110
.b8 112
.b8 122
.b8 52
.b8 105
.b8 98
.b8 111
.b8 119
.b8 99
.b8 99
.b8 106
.b8 103
.b8 116
.b8 55
.b8 103
.b8 110
.b8 55
.b8 121
.b8 104
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 50
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp18                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
