//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<155>;
	.reg .f32 	%f<137>;
	.reg .b64 	%rd<40>;
	.loc	1 19 0                          // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_0];
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_1];
$L__tmp0:
	.loc	1 21 28                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:21:33
	shl.b32 	%r120, %r1, 10;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_2];
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_3];
	.loc	1 22 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:22:36
	mov.u32 	%r121, %tid.x;
	shl.b32 	%r122, %r121, 3;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_4];
	and.b32  	%r123, %r122, 1016;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_5];
	.loc	1 22 23                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:22:23
	or.b32  	%r124, %r120, %r123;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_6];
	or.b32  	%r125, %r124, 4;
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_7];
	.loc	1 25 19                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:25:19
	bfe.s32 	%r126, %r1, 21, 1;
	shr.u32 	%r127, %r126, 26;
	add.s32 	%r128, %r124, %r127;
	and.b32  	%r129, %r128, -64;
	sub.s32 	%r130, %r124, %r129;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_leaky_relu_10_param_8];
	add.s32 	%r131, %r125, %r127;
	and.b32  	%r132, %r131, -64;
	sub.s32 	%r133, %r125, %r132;
	.loc	1 26 34                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:26:34
	cvt.s64.s32 	%rd29, %r124;
	mul.wide.s32 	%rd30, %r124, 4;
	add.s64 	%rd1, %rd20, %rd30;
	add.s64 	%rd2, %rd1, 16;
	mov.pred 	%p1, -1;
	.loc	1 26 39                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 27 30                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:27:30
	mul.wide.s32 	%rd31, %r130, 4;
	add.s64 	%rd3, %rd22, %rd31;
	mul.wide.s32 	%rd32, %r133, 4;
	add.s64 	%rd4, %rd22, %rd32;
	.loc	1 27 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:27:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 28 30                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:28:30
	add.s64 	%rd5, %rd23, %rd31;
	add.s64 	%rd6, %rd23, %rd32;
	.loc	1 28 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:28:35
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 29 30                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:29:30
	add.s64 	%rd7, %rd24, %rd31;
	add.s64 	%rd8, %rd24, %rd32;
	.loc	1 29 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:29:35
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r26;
	mov.b32 	%f2, %r27;
	mov.b32 	%f3, %r28;
	mov.b32 	%f4, %r29;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r30;
	mov.b32 	%f6, %r31;
	mov.b32 	%f7, %r32;
	mov.b32 	%f8, %r33;
	.loc	1 30 31                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:30:31
	add.s64 	%rd9, %rd25, %rd31;
	add.s64 	%rd10, %rd25, %rd32;
	.loc	1 30 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:30:36
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r38, %r39, %r40, %r41 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 31 31                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:31:31
	add.s64 	%rd11, %rd26, %rd31;
	add.s64 	%rd12, %rd26, %rd32;
	.loc	1 31 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:31:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r46, 0x0;
	mov.u32 %r47, 0x0;
	mov.u32 %r48, 0x0;
	mov.u32 %r49, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r46, %r47, %r48, %r49 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 32 31                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:32:31
	add.s64 	%rd13, %rd27, %rd30;
	add.s64 	%rd14, %rd13, 16;
	.loc	1 32 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:32:36
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p1 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r54, 0x0;
	mov.u32 %r55, 0x0;
	mov.u32 %r56, 0x0;
	mov.u32 %r57, 0x0;
	@%p1 ld.global.v4.b32 { %r54, %r55, %r56, %r57 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 36 18                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:36:18
	add.f32 	%f9, %f1, 0f3727C5AC;
	add.f32 	%f10, %f2, 0f3727C5AC;
	add.f32 	%f11, %f3, 0f3727C5AC;
	add.f32 	%f12, %f4, 0f3727C5AC;
	add.f32 	%f13, %f5, 0f3727C5AC;
	add.f32 	%f14, %f6, 0f3727C5AC;
	add.f32 	%f15, %f7, 0f3727C5AC;
	add.f32 	%f16, %f8, 0f3727C5AC;
	.loc	1 37 26                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:37:26
	sqrt.approx.ftz.f32 	%f17, %f9;
	sqrt.approx.ftz.f32 	%f18, %f10;
	sqrt.approx.ftz.f32 	%f19, %f11;
	sqrt.approx.ftz.f32 	%f20, %f12;
	sqrt.approx.ftz.f32 	%f21, %f13;
	sqrt.approx.ftz.f32 	%f22, %f14;
	sqrt.approx.ftz.f32 	%f23, %f15;
	sqrt.approx.ftz.f32 	%f24, %f16;
	.loc	1 22 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:22:36
	shl.b32 	%r134, %r121, 2;
	and.b32  	%r135, %r134, 508;
	.loc	1 26 34                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:26:34
	cvt.s64.s32 	%rd33, %r120;
	cvt.u64.u32 	%rd34, %r135;
	or.b64  	%rd35, %rd33, %rd34;
	shl.b64 	%rd36, %rd35, 2;
	add.s64 	%rd37, %rd20, %rd36;
	add.s64 	%rd16, %rd37, 2048;
	.loc	1 22 23                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:22:23
	or.b32  	%r136, %r120, %r135;
	.loc	1 26 34                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:26:34
	mul.wide.s32 	%rd38, %r136, 4;
	add.s64 	%rd15, %rd20, %rd38;
	.loc	1 39 19                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:39:19
	mov.b32 	%r60, %f17;
	mov.b32 	%r59, 1065353216;
	// begin inline asm
	div.full.f32 %r58, %r59, %r60;
	// end inline asm
	mov.b32 	%f25, %r58;
	mov.b32 	%r63, %f18;
	// begin inline asm
	div.full.f32 %r61, %r59, %r63;
	// end inline asm
	mov.b32 	%f26, %r61;
	mov.b32 	%r66, %f19;
	// begin inline asm
	div.full.f32 %r64, %r59, %r66;
	// end inline asm
	mov.b32 	%f27, %r64;
	mov.b32 	%r69, %f20;
	// begin inline asm
	div.full.f32 %r67, %r59, %r69;
	// end inline asm
	mov.b32 	%f28, %r67;
	mov.b32 	%r72, %f21;
	// begin inline asm
	div.full.f32 %r70, %r59, %r72;
	// end inline asm
	mov.b32 	%f29, %r70;
	mov.b32 	%r75, %f22;
	// begin inline asm
	div.full.f32 %r73, %r59, %r75;
	// end inline asm
	mov.b32 	%f30, %r73;
	mov.b32 	%r78, %f23;
	// begin inline asm
	div.full.f32 %r76, %r59, %r78;
	// end inline asm
	mov.b32 	%f31, %r76;
	mov.b32 	%r81, %f24;
	// begin inline asm
	div.full.f32 %r79, %r59, %r81;
	// end inline asm
	mov.b32 	%f32, %r79;
	.loc	1 51 39                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:51:39
	shl.b32 	%r137, %r123, 2;
	mov.u32 	%r138, global_smem;
	add.s32 	%r82, %r138, %r137;
	add.s32 	%r87, %r82, 16;
	shl.b32 	%r139, %r135, 2;
	add.s32 	%r140, %r138, %r139;
	.loc	1 52 25                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:52:25
	add.s64 	%rd17, %rd28, %rd29;
	.loc	1 26 39                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:26:39
	mov.b32 	%f33, %r5;
	mov.b32 	%f34, %r4;
	mov.b32 	%f35, %r3;
	mov.b32 	%f36, %r2;
	.loc	1 27 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:27:35
	mov.b32 	%f37, %r13;
	mov.b32 	%f38, %r12;
	mov.b32 	%f39, %r11;
	mov.b32 	%f40, %r10;
	.loc	1 33 18                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:33:18
	add.f32 	%f41, %f36, %f40;
	add.f32 	%f42, %f35, %f39;
	add.f32 	%f43, %f34, %f38;
	add.f32 	%f44, %f33, %f37;
	.loc	1 28 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:28:35
	mov.b32 	%f45, %r18;
	mov.b32 	%f46, %r19;
	mov.b32 	%f47, %r20;
	mov.b32 	%f48, %r21;
	.loc	1 34 18                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:34:18
	sub.f32 	%f49, %f44, %f48;
	sub.f32 	%f50, %f43, %f47;
	sub.f32 	%f51, %f42, %f46;
	sub.f32 	%f52, %f41, %f45;
	.loc	1 32 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:32:36
	mov.b32 	%f53, %r53;
	mov.b32 	%f54, %r52;
	mov.b32 	%f55, %r51;
	mov.b32 	%f56, %r50;
	.loc	1 31 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:31:36
	mov.b32 	%f57, %r42;
	mov.b32 	%f58, %r43;
	mov.b32 	%f59, %r44;
	mov.b32 	%f60, %r45;
	.loc	1 30 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:30:36
	mov.b32 	%f61, %r34;
	mov.b32 	%f62, %r35;
	mov.b32 	%f63, %r36;
	mov.b32 	%f64, %r37;
	.loc	1 42 19                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:42:19
	mul.f32 	%f65, %f52, %f25;
	mul.f32 	%f66, %f51, %f26;
	mul.f32 	%f67, %f50, %f27;
	mul.f32 	%f68, %f49, %f28;
	.loc	1 44 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:44:20
	fma.rn.f32 	%f69, %f68, %f64, %f60;
	fma.rn.f32 	%f70, %f67, %f63, %f59;
	fma.rn.f32 	%f71, %f66, %f62, %f58;
	fma.rn.f32 	%f72, %f65, %f61, %f57;
	.loc	1 45 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:45:20
	add.f32 	%f73, %f72, %f56;
	add.f32 	%f74, %f71, %f55;
	add.f32 	%f75, %f70, %f54;
	add.f32 	%f76, %f69, %f53;
	.loc	1 47 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:47:20
	setp.gt.f32 	%p24, %f76, 0f00000000;
	setp.gt.f32 	%p25, %f75, 0f00000000;
	setp.gt.f32 	%p26, %f74, 0f00000000;
	setp.gt.f32 	%p27, %f73, 0f00000000;
	.loc	1 49 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:49:20
	mul.f32 	%f77, %f73, 0f3C23D70A;
	mul.f32 	%f78, %f74, 0f3C23D70A;
	mul.f32 	%f79, %f75, 0f3C23D70A;
	mul.f32 	%f80, %f76, 0f3C23D70A;
	.loc	1 50 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:50:35
	selp.f32 	%f81, %f73, %f77, %p27;
	selp.f32 	%f82, %f74, %f78, %p26;
	selp.f32 	%f83, %f75, %f79, %p25;
	selp.f32 	%f84, %f76, %f80, %p24;
	.loc	1 51 39                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:51:39
	mov.b32 	%r83, %f41;
	mov.b32 	%r84, %f42;
	mov.b32 	%r85, %f43;
	mov.b32 	%r86, %f44;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r82 + 0 ], { %r83, %r84, %r85, %r86 };
	// end inline asm
	.loc	1 26 39                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:26:39
	mov.b32 	%f85, %r9;
	mov.b32 	%f86, %r8;
	mov.b32 	%f87, %r7;
	mov.b32 	%f88, %r6;
	.loc	1 27 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:27:35
	mov.b32 	%f89, %r17;
	mov.b32 	%f90, %r16;
	mov.b32 	%f91, %r15;
	mov.b32 	%f92, %r14;
	.loc	1 33 18                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:33:18
	add.f32 	%f93, %f88, %f92;
	add.f32 	%f94, %f87, %f91;
	add.f32 	%f95, %f86, %f90;
	add.f32 	%f96, %f85, %f89;
	.loc	1 28 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:28:35
	mov.b32 	%f97, %r22;
	mov.b32 	%f98, %r23;
	mov.b32 	%f99, %r24;
	mov.b32 	%f100, %r25;
	.loc	1 34 18                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:34:18
	sub.f32 	%f101, %f96, %f100;
	sub.f32 	%f102, %f95, %f99;
	sub.f32 	%f103, %f94, %f98;
	sub.f32 	%f104, %f93, %f97;
	.loc	1 32 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:32:36
	mov.b32 	%f105, %r57;
	mov.b32 	%f106, %r56;
	mov.b32 	%f107, %r55;
	mov.b32 	%f108, %r54;
	.loc	1 31 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:31:36
	mov.b32 	%f109, %r46;
	mov.b32 	%f110, %r47;
	mov.b32 	%f111, %r48;
	mov.b32 	%f112, %r49;
	.loc	1 30 36                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:30:36
	mov.b32 	%f113, %r38;
	mov.b32 	%f114, %r39;
	mov.b32 	%f115, %r40;
	mov.b32 	%f116, %r41;
	.loc	1 42 19                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:42:19
	mul.f32 	%f117, %f104, %f29;
	mul.f32 	%f118, %f103, %f30;
	mul.f32 	%f119, %f102, %f31;
	mul.f32 	%f120, %f101, %f32;
	.loc	1 44 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:44:20
	fma.rn.f32 	%f121, %f120, %f116, %f112;
	fma.rn.f32 	%f122, %f119, %f115, %f111;
	fma.rn.f32 	%f123, %f118, %f114, %f110;
	fma.rn.f32 	%f124, %f117, %f113, %f109;
	.loc	1 45 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:45:20
	add.f32 	%f125, %f124, %f108;
	add.f32 	%f126, %f123, %f107;
	add.f32 	%f127, %f122, %f106;
	add.f32 	%f128, %f121, %f105;
	.loc	1 47 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:47:20
	setp.gt.f32 	%p28, %f128, 0f00000000;
	setp.gt.f32 	%p29, %f127, 0f00000000;
	setp.gt.f32 	%p30, %f126, 0f00000000;
	setp.gt.f32 	%p31, %f125, 0f00000000;
	.loc	1 49 20                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:49:20
	mul.f32 	%f129, %f125, 0f3C23D70A;
	mul.f32 	%f130, %f126, 0f3C23D70A;
	mul.f32 	%f131, %f127, 0f3C23D70A;
	mul.f32 	%f132, %f128, 0f3C23D70A;
	.loc	1 50 35                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:50:35
	selp.f32 	%f133, %f125, %f129, %p31;
	selp.f32 	%f134, %f126, %f130, %p30;
	selp.f32 	%f135, %f127, %f131, %p29;
	selp.f32 	%f136, %f128, %f132, %p28;
	.loc	1 51 39                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:51:39
	mov.b32 	%r88, %f93;
	mov.b32 	%r89, %f94;
	mov.b32 	%r90, %f95;
	mov.b32 	%r91, %f96;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r87 + 0 ], { %r88, %r89, %r90, %r91 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r96, %r97, %r98, %r99}, [%r140+2048];
	ld.shared.v4.u32 	{%r92, %r93, %r94, %r95}, [%r140];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd15 + 0 ], { %r92, %r93, %r94, %r95 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd16 + 0 ], { %r96, %r97, %r98, %r99 };
	// end inline asm
	.loc	1 52 37                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:52:37
	selp.u32 	%r141, 1, 0, %p24;
	selp.u32 	%r142, 1, 0, %p25;
	prmt.b32 	%r143, %r142, %r141, 0x3340U;
	selp.u32 	%r144, 1, 0, %p26;
	selp.u32 	%r145, 1, 0, %p27;
	prmt.b32 	%r146, %r145, %r144, 0x3340U;
	prmt.b32 	%r147, %r146, %r143, 0x5410U;
	selp.u32 	%r148, 1, 0, %p28;
	selp.u32 	%r149, 1, 0, %p29;
	prmt.b32 	%r150, %r149, %r148, 0x3340U;
	selp.u32 	%r151, 1, 0, %p30;
	selp.u32 	%r152, 1, 0, %p31;
	prmt.b32 	%r153, %r152, %r151, 0x3340U;
	prmt.b32 	%r154, %r153, %r150, 0x5410U;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd17 + 0 ], { %r147, %r154 };
	// end inline asm
	.loc	1 53 28                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:53:28
	add.s64 	%rd18, %rd21, %rd38;
	add.s64 	%rd39, %rd21, %rd36;
	add.s64 	%rd19, %rd39, 2048;
	.loc	1 53 40                         // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:53:40
	bar.sync 	0;
	mov.b32 	%r103, %f81;
	mov.b32 	%r104, %f82;
	mov.b32 	%r105, %f83;
	mov.b32 	%r106, %f84;
	mov.b32 	%r108, %f133;
	mov.b32 	%r109, %f134;
	mov.b32 	%r110, %f135;
	mov.b32 	%r111, %f136;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r82 + 0 ], { %r103, %r104, %r105, %r106 };
	// end inline asm
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r87 + 0 ], { %r108, %r109, %r110, %r111 };
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r116, %r117, %r118, %r119}, [%r140+2048];
	ld.shared.v4.u32 	{%r112, %r113, %r114, %r115}, [%r140];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd18 + 0 ], { %r112, %r113, %r114, %r115 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd19 + 0 ], { %r116, %r117, %r118, %r119 };
	// end inline asm
	.loc	1 53 4                          // clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py:53:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/lx/clxlf36x4h7fk2vwfdvgrkmpxwhb6fps2tt46vabc4hycr5eifrp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 108
.b8 120
.b8 108
.b8 102
.b8 51
.b8 54
.b8 120
.b8 52
.b8 104
.b8 55
.b8 102
.b8 107
.b8 50
.b8 118
.b8 119
.b8 102
.b8 100
.b8 118
.b8 103
.b8 114
.b8 107
.b8 109
.b8 112
.b8 120
.b8 119
.b8 104
.b8 98
.b8 54
.b8 102
.b8 112
.b8 115
.b8 50
.b8 116
.b8 116
.b8 52
.b8 54
.b8 118
.b8 97
.b8 98
.b8 99
.b8 52
.b8 104
.b8 121
.b8 99
.b8 114
.b8 53
.b8 101
.b8 105
.b8 102
.b8 114
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 108
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
