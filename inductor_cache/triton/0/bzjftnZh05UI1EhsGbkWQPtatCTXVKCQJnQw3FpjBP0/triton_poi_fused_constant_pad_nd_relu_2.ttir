#loc = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":19:0)
module {
  tt.func public @triton_poi_fused_constant_pad_nd_relu_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-5> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<128xi64> loc(#loc1)
    %cst_4 = arith.constant dense<-1> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<25> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<5> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<400> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_6 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_6 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_6 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_5 : tensor<128xi32> loc(#loc10)
    %10 = arith.addi %7, %cst_4 : tensor<128xi32> loc(#loc11)
    %11 = arith.extsi %10 : tensor<128xi32> to tensor<128xi64> loc(#loc12)
    %12 = arith.cmpi sge, %11, %cst_3 : tensor<128xi64> loc(#loc12)
    %13 = arith.addi %8, %cst_4 : tensor<128xi32> loc(#loc13)
    %14 = arith.extsi %13 : tensor<128xi32> to tensor<128xi64> loc(#loc14)
    %15 = arith.cmpi sge, %14, %cst_3 : tensor<128xi64> loc(#loc14)
    %16 = arith.andi %12, %15 : tensor<128xi1> loc(#loc15)
    %17 = arith.addi %8, %cst_2 : tensor<128xi32> loc(#loc16)
    %18 = arith.muli %7, %cst_1 : tensor<128xi32> loc(#loc17)
    %19 = arith.addi %17, %18 : tensor<128xi32> loc(#loc18)
    %20 = arith.muli %9, %cst_0 : tensor<128xi32> loc(#loc19)
    %21 = arith.addi %19, %20 : tensor<128xi32> loc(#loc20)
    %22 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc21)
    %23 = tt.addptr %22, %21 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc21)
    %24 = arith.andi %16, %5 : tensor<128xi1> loc(#loc22)
    %25 = tt.load %23, %24, %cst : tensor<128x!tt.ptr<f32>> loc(#loc23)
    %26 = arith.cmpf ogt, %cst, %25 : tensor<128xf32> loc(#loc33)
    %27 = arith.select %26, %cst, %25 : tensor<128xi1>, tensor<128xf32> loc(#loc34)
    %28 = arith.select %16, %27, %cst : tensor<128xi1>, tensor<128xf32> loc(#loc27)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc28)
    %30 = tt.addptr %29, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc28)
    tt.store %30, %28, %5 : tensor<128x!tt.ptr<f32>> loc(#loc29)
    %31 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc30)
    %32 = tt.addptr %31, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc30)
    tt.store %32, %25, %5 : tensor<128x!tt.ptr<f32>> loc(#loc31)
    tt.return loc(#loc32)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":21:28)
#loc3 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":21:33)
#loc4 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":22:36)
#loc5 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":22:23)
#loc6 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":23:21)
#loc7 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":24:21)
#loc8 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":24:26)
#loc9 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":25:19)
#loc10 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":26:19)
#loc11 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":28:18)
#loc12 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":30:19)
#loc13 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":31:18)
#loc14 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":32:19)
#loc15 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":33:18)
#loc16 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:37)
#loc17 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:44)
#loc18 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:42)
#loc19 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:52)
#loc20 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:49)
#loc21 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:30)
#loc22 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:64)
#loc23 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":34:57)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc25 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":36:40)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc27 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":38:33)
#loc28 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":39:25)
#loc29 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":39:37)
#loc30 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":40:25)
#loc31 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":40:36)
#loc32 = loc("inductor_cache/fu/cfukxdj6cdw66vvx6k5x3cewg6nkhd7euy3aq2iyy6babirh67ok.py":40:4)
#loc33 = loc(callsite(#loc24 at #loc25))
#loc34 = loc(callsite(#loc26 at #loc25))
