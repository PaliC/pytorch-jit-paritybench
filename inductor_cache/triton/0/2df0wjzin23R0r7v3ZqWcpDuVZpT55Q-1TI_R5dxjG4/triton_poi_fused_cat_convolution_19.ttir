#loc = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_convolution_19(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0), %arg7: i32 loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4608> : tensor<1x16xi32> loc(#loc1)
    %cst_0 = arith.constant dense<512> : tensor<16x1xi32> loc(#loc1)
    %cst_1 = arith.constant dense<9> : tensor<1x16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-256> : tensor<1x16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<16x16xf32> loc(#loc1)
    %cst_4 = arith.constant dense<2304> : tensor<1x16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<16x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<1x16xi64> loc(#loc1)
    %cst_7 = arith.constant dense<512> : tensor<1x16xi32> loc(#loc1)
    %cst_8 = arith.constant dense<9> : tensor<16x1xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<1x16xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<1x16xi32> loc(#loc6)
    %6 = tt.get_program_id x : i32 loc(#loc7)
    %7 = arith.muli %6, %c16_i32 : i32 loc(#loc8)
    %8 = tt.expand_dims %2 {axis = 1 : i32} : tensor<16xi32> -> tensor<16x1xi32> loc(#loc9)
    %9 = tt.splat %7 : i32 -> tensor<16x1xi32> loc(#loc10)
    %10 = arith.addi %9, %8 : tensor<16x1xi32> loc(#loc10)
    %11 = arith.cmpi slt, %10, %cst_8 : tensor<16x1xi32> loc(#loc11)
    %12 = arith.remsi %5, %cst_7 : tensor<1x16xi32> loc(#loc12)
    %13 = arith.divsi %5, %cst_7 : tensor<1x16xi32> loc(#loc13)
    %14 = arith.extsi %12 : tensor<1x16xi32> to tensor<1x16xi64> loc(#loc14)
    %15 = arith.cmpi slt, %14, %cst_6 : tensor<1x16xi64> loc(#loc14)
    %16 = arith.muli %10, %cst_5 : tensor<16x1xi32> loc(#loc15)
    %17 = arith.muli %13, %cst_4 : tensor<1x16xi32> loc(#loc16)
    %18 = tt.broadcast %16 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc17)
    %19 = tt.broadcast %17 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc17)
    %20 = arith.addi %18, %19 : tensor<16x16xi32> loc(#loc17)
    %21 = tt.broadcast %12 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc18)
    %22 = arith.addi %20, %21 : tensor<16x16xi32> loc(#loc18)
    %23 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc19)
    %24 = tt.addptr %23, %22 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc19)
    %25 = tt.broadcast %15 : tensor<1x16xi1> -> tensor<16x16xi1> loc(#loc20)
    %26 = tt.broadcast %11 : tensor<16x1xi1> -> tensor<16x16xi1> loc(#loc20)
    %27 = arith.andi %25, %26 : tensor<16x16xi1> loc(#loc20)
    %28 = tt.load %24, %27, %cst_3 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc21)
    %29 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %30 = tt.addptr %29, %12 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc22)
    %31 = tt.broadcast %30 : tensor<1x16x!tt.ptr<f32>> -> tensor<16x16x!tt.ptr<f32>> loc(#loc22)
    %32 = tt.load %31, %27, %cst_3 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc23)
    %33 = arith.addf %28, %32 : tensor<16x16xf32> loc(#loc24)
    %34 = arith.cmpf ogt, %cst_3, %33 : tensor<16x16xf32> loc(#loc52)
    %35 = arith.select %34, %cst_3, %33 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc53)
    %36 = arith.select %25, %35, %cst_3 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc28)
    %37 = arith.cmpi sge, %14, %cst_6 : tensor<1x16xi64> loc(#loc29)
    %38 = arith.addi %12, %cst_2 : tensor<1x16xi32> loc(#loc30)
    %39 = tt.broadcast %38 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc31)
    %40 = arith.addi %20, %39 : tensor<16x16xi32> loc(#loc31)
    %41 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc32)
    %42 = tt.addptr %41, %40 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc32)
    %43 = tt.broadcast %37 : tensor<1x16xi1> -> tensor<16x16xi1> loc(#loc33)
    %44 = arith.andi %43, %26 : tensor<16x16xi1> loc(#loc33)
    %45 = tt.load %42, %44, %cst_3 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc34)
    %46 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc35)
    %47 = tt.addptr %46, %38 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc35)
    %48 = tt.broadcast %47 : tensor<1x16x!tt.ptr<f32>> -> tensor<16x16x!tt.ptr<f32>> loc(#loc35)
    %49 = tt.load %48, %44, %cst_3 evictionPolicy = evict_last : tensor<16x16x!tt.ptr<f32>> loc(#loc36)
    %50 = arith.addf %45, %49 : tensor<16x16xf32> loc(#loc37)
    %51 = arith.cmpf ogt, %cst_3, %50 : tensor<16x16xf32> loc(#loc54)
    %52 = arith.select %51, %cst_3, %50 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc55)
    %53 = arith.select %43, %52, %cst_3 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc39)
    %54 = arith.select %25, %36, %53 : tensor<16x16xi1>, tensor<16x16xf32> loc(#loc40)
    %55 = arith.muli %5, %cst_1 : tensor<1x16xi32> loc(#loc41)
    %56 = tt.broadcast %10 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc42)
    %57 = tt.broadcast %55 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc42)
    %58 = arith.addi %56, %57 : tensor<16x16xi32> loc(#loc42)
    %59 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc43)
    %60 = tt.addptr %59, %58 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc43)
    tt.store %60, %54, %26 : tensor<16x16x!tt.ptr<f32>> loc(#loc44)
    %61 = arith.muli %10, %cst_0 : tensor<16x1xi32> loc(#loc45)
    %62 = tt.broadcast %61 : tensor<16x1xi32> -> tensor<16x16xi32> loc(#loc46)
    %63 = arith.addi %21, %62 : tensor<16x16xi32> loc(#loc46)
    %64 = arith.muli %13, %cst : tensor<1x16xi32> loc(#loc47)
    %65 = tt.broadcast %64 : tensor<1x16xi32> -> tensor<16x16xi32> loc(#loc48)
    %66 = arith.addi %63, %65 : tensor<16x16xi32> loc(#loc48)
    %67 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<16x16x!tt.ptr<f32>> loc(#loc49)
    %68 = tt.addptr %67, %66 : tensor<16x16x!tt.ptr<f32>>, tensor<16x16xi32> loc(#loc49)
    tt.store %68, %54, %26 : tensor<16x16x!tt.ptr<f32>> loc(#loc50)
    tt.return loc(#loc51)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":22:28)
#loc3 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":22:33)
#loc4 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":23:36)
#loc5 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":23:44)
#loc6 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":23:23)
#loc7 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":25:28)
#loc8 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":25:33)
#loc9 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":26:44)
#loc10 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":26:23)
#loc11 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":27:21)
#loc12 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":28:19)
#loc13 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":30:19)
#loc14 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":36:18)
#loc15 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":37:34)
#loc16 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":37:44)
#loc17 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":37:39)
#loc18 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":37:50)
#loc19 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":37:30)
#loc20 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":37:63)
#loc21 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":37:56)
#loc22 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":38:30)
#loc23 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":38:70)
#loc24 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":39:18)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc26 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":41:40)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc28 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":43:33)
#loc29 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":44:20)
#loc30 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":47:60)
#loc31 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":47:51)
#loc32 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":47:31)
#loc33 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":47:74)
#loc34 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":47:66)
#loc35 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":48:31)
#loc36 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":48:80)
#loc37 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":49:20)
#loc38 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":51:42)
#loc39 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":53:35)
#loc40 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":54:34)
#loc41 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":55:32)
#loc42 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":55:30)
#loc43 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":55:25)
#loc44 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":55:44)
#loc45 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":56:34)
#loc46 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":56:30)
#loc47 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":56:44)
#loc48 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":56:39)
#loc49 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":56:25)
#loc50 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":56:56)
#loc51 = loc("inductor_cache/dm/cdmfdvlg2iv3a4r2haan3d4we6vxu6nyqnyrmyabcctwwytb6yhh.py":56:4)
#loc52 = loc(callsite(#loc25 at #loc26))
#loc53 = loc(callsite(#loc27 at #loc26))
#loc54 = loc(callsite(#loc25 at #loc38))
#loc55 = loc(callsite(#loc27 at #loc38))
