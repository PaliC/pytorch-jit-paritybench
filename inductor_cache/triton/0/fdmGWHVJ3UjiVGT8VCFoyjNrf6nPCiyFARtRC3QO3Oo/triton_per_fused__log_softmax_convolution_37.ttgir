#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [8, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 8], order = [0, 1]}>
#loc = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":19:0)
#loc1 = loc(unknown)
#loc17 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":36:37)
#loc27 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":41:26)
#loc36 = loc(callsite(#loc1 at #loc17))
#loc42 = loc(callsite(#loc1 at #loc27))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__log_softmax_convolution_37(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":19:0), %arg5: i32 loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":19:0)) attributes {noinline = false} {
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst = arith.constant dense<21> : tensor<1x32xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<32x32xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x32xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<32x32xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<21> : tensor<32x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<32x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<32x1xi32, #blocked1> loc(#loc5)
    %10 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc6)
    %11 = tt.expand_dims %10 {axis = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x32xi32, #blocked> loc(#loc6)
    %12 = arith.cmpi slt, %11, %cst : tensor<1x32xi32, #blocked> loc(#loc7)
    %13 = arith.muli %8, %cst_3 : tensor<32x1xi32, #blocked> loc(#loc8)
    %14 = tt.broadcast %11 : tensor<1x32xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc9)
    %15 = tt.broadcast %13 : tensor<32x1xi32, #blocked> -> tensor<32x32xi32, #blocked> loc(#loc9)
    %16 = arith.addi %14, %15 : tensor<32x32xi32, #blocked> loc(#loc9)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc10)
    %18 = tt.addptr %17, %16 : tensor<32x32x!tt.ptr<f32>, #blocked>, tensor<32x32xi32, #blocked> loc(#loc10)
    %19 = tt.broadcast %12 : tensor<1x32xi1, #blocked> -> tensor<32x32xi1, #blocked> loc(#loc11)
    %20 = tt.load %18, %19, %cst_2 : tensor<32x32x!tt.ptr<f32>, #blocked> loc(#loc11)
    %21 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc12)
    %22 = tt.addptr %21, %11 : tensor<1x32x!tt.ptr<f32>, #blocked>, tensor<1x32xi32, #blocked> loc(#loc12)
    %23 = tt.load %22, %12, %cst_1 evictionPolicy = evict_last : tensor<1x32x!tt.ptr<f32>, #blocked> loc(#loc13)
    %24 = tt.broadcast %23 : tensor<1x32xf32, #blocked> -> tensor<32x32xf32, #blocked> loc(#loc14)
    %25 = arith.addf %20, %24 : tensor<32x32xf32, #blocked> loc(#loc14)
    %26 = arith.select %19, %25, %cst_0 : tensor<32x32xi1, #blocked>, tensor<32x32xf32, #blocked> loc(#loc15)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc17)), %arg7: f32 loc(callsite(#loc1 at #loc17))):
      %42 = arith.cmpf ogt, %arg6, %arg7 : f32 loc(#loc44)
      %43 = arith.cmpf une, %arg6, %arg6 : f32 loc(#loc45)
      %44 = arith.ori %42, %43 : i1 loc(#loc46)
      %45 = arith.select %44, %arg6, %arg7 : f32 loc(#loc47)
      tt.reduce.return %45 : f32 loc(#loc35)
    }) : (tensor<32x32xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc35)
    %28 = triton_gpu.convert_layout %27 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc22)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc22)
    %30 = tt.expand_dims %27 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xf32, #blocked> loc(#loc22)
    %31 = tt.broadcast %30 : tensor<32x1xf32, #blocked> -> tensor<32x32xf32, #blocked> loc(#loc23)
    %32 = arith.subf %25, %31 : tensor<32x32xf32, #blocked> loc(#loc23)
    %33 = math.exp %32 : tensor<32x32xf32, #blocked> loc(#loc24)
    %34 = arith.select %19, %33, %cst_2 : tensor<32x32xi1, #blocked>, tensor<32x32xf32, #blocked> loc(#loc25)
    %35 = "tt.reduce"(%34) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc27)), %arg7: f32 loc(callsite(#loc1 at #loc27))):
      %42 = arith.addf %arg6, %arg7 : f32 loc(#loc48)
      tt.reduce.return %42 : f32 loc(#loc41)
    }) : (tensor<32x32xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc41)
    %36 = triton_gpu.convert_layout %35 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc29)
    %37 = tt.expand_dims %36 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc29)
    %38 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc30)
    %39 = tt.addptr %38, %9 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc30)
    tt.store %39, %29 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc31)
    %40 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc32)
    %41 = tt.addptr %40, %9 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc32)
    tt.store %41, %37 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc33)
    tt.return loc(#loc34)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":23:28)
#loc3 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":23:33)
#loc4 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":24:44)
#loc5 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":24:23)
#loc6 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":26:34)
#loc7 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":28:21)
#loc8 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":31:38)
#loc9 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":31:35)
#loc10 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":31:30)
#loc11 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":31:43)
#loc12 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":32:30)
#loc13 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":32:35)
#loc14 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":33:18)
#loc15 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":35:33)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc22 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":36:40)
#loc23 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":37:18)
#loc24 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":38:23)
#loc25 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":40:34)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc29 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":41:29)
#loc30 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":42:25)
#loc31 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":42:36)
#loc32 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":43:25)
#loc33 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":43:37)
#loc34 = loc("inductor_cache/3u/c3u3wsnztpjiavvxywxtu7zu6aniv34eimzkkvvtb2c6n6jne2ig.py":43:4)
#loc35 = loc(callsite(#loc16 at #loc17))
#loc37 = loc(callsite(#loc18 at #loc16))
#loc38 = loc(callsite(#loc19 at #loc16))
#loc39 = loc(callsite(#loc20 at #loc16))
#loc40 = loc(callsite(#loc21 at #loc16))
#loc41 = loc(callsite(#loc26 at #loc27))
#loc43 = loc(callsite(#loc28 at #loc26))
#loc44 = loc(callsite(#loc37 at #loc17))
#loc45 = loc(callsite(#loc38 at #loc17))
#loc46 = loc(callsite(#loc39 at #loc17))
#loc47 = loc(callsite(#loc40 at #loc17))
#loc48 = loc(callsite(#loc43 at #loc27))
