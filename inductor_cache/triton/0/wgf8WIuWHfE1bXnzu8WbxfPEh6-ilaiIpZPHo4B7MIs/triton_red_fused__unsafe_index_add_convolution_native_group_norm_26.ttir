#loc = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0)
#loc1 = loc(unknown)
#loc73 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":66:44)
#loc106 = loc(callsite(#loc1 at #loc73))
module {
  tt.func public @triton_red_fused__unsafe_index_add_convolution_native_group_norm_26(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<64> : tensor<1x64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<1x64xi64> loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %c8192_i32 = arith.constant 8192 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<1024> : tensor<64x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<512> : tensor<1x64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<8192> : tensor<64x1xi32> loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %cst_8 = arith.constant dense<2> : tensor<64x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<4096> : tensor<1x64xi32> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<1x64xi32> loc(#loc1)
    %cst_11 = arith.constant dense<256> : tensor<1x64xi32> loc(#loc1)
    %cst_12 = arith.constant dense<8192> : tensor<1x64xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_13 = arith.constant dense<64> : tensor<64x1xi32> loc(#loc1)
    %cst_14 = arith.constant dense<256> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_14 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.expand_dims %2 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc8)
    %8 = arith.remsi %5, %cst_13 : tensor<64x1xi32> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<1x64x!tt.ptr<i64>> loc(#loc10)
    %10 = arith.muli %8, %cst_8 : tensor<64x1xi32> loc(#loc11)
    %11 = tt.broadcast %10 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc12)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc13)
    %13 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc14)
    %14 = arith.muli %5, %cst_6 : tensor<64x1xi32> loc(#loc15)
    %15 = tt.broadcast %14 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc16)
    %16 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc17)
    %17 = arith.muli %5, %cst_4 : tensor<64x1xi32> loc(#loc18)
    %18 = arith.extsi %17 : tensor<64x1xi32> to tensor<64x1xi64> loc(#loc19)
    %19 = tt.broadcast %18 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc19)
    %20 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc20)
    %21 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc21)
    %22:3 = scf.for %arg10 = %c0_i32 to %c8192_i32 step %c64_i32 iter_args(%arg11 = %cst_7, %arg12 = %cst_7, %arg13 = %cst_7) -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>)  : i32 {
      %33 = tt.splat %arg10 : i32 -> tensor<1x64xi32> loc(#loc23)
      %34 = arith.addi %33, %7 : tensor<1x64xi32> loc(#loc23)
      %35 = arith.cmpi slt, %34, %cst_12 : tensor<1x64xi32> loc(#loc24)
      %36 = arith.divsi %34, %cst_11 : tensor<1x64xi32> loc(#loc25)
      %37 = arith.remsi %36, %cst_10 : tensor<1x64xi32> loc(#loc26)
      %38 = arith.divsi %34, %cst_10 : tensor<1x64xi32> loc(#loc27)
      %39 = arith.remsi %38, %cst_10 : tensor<1x64xi32> loc(#loc28)
      %40 = arith.remsi %34, %cst_10 : tensor<1x64xi32> loc(#loc29)
      %41 = arith.divsi %34, %cst_9 : tensor<1x64xi32> loc(#loc30)
      %42 = tt.addptr %9, %37 : tensor<1x64x!tt.ptr<i64>>, tensor<1x64xi32> loc(#loc10)
      %43 = tt.load %42, %35, %cst_3 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<i64>> loc(#loc31)
      %44 = tt.addptr %9, %39 : tensor<1x64x!tt.ptr<i64>>, tensor<1x64xi32> loc(#loc32)
      %45 = tt.load %44, %35, %cst_3 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<i64>> loc(#loc33)
      %46 = tt.addptr %9, %40 : tensor<1x64x!tt.ptr<i64>>, tensor<1x64xi32> loc(#loc34)
      %47 = tt.load %46, %35, %cst_3 evictionPolicy = evict_last : tensor<1x64x!tt.ptr<i64>> loc(#loc35)
      %48 = tt.broadcast %41 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc12)
      %49 = arith.addi %48, %11 : tensor<64x64xi32> loc(#loc12)
      %50 = tt.addptr %12, %49 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc13)
      %51 = tt.broadcast %35 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc14)
      %52 = arith.andi %51, %13 : tensor<64x64xi1> loc(#loc14)
      %53 = tt.load %50, %52, %cst_7 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc36)
      %54 = tt.broadcast %34 : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc16)
      %55 = arith.addi %54, %15 : tensor<64x64xi32> loc(#loc16)
      %56 = tt.addptr %16, %55 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc17)
      %57 = tt.load %56, %52, %cst_7 evictionPolicy = evict_first : tensor<64x64x!tt.ptr<f32>> loc(#loc37)
      %58 = arith.addi %43, %cst_0 : tensor<1x64xi64> loc(#loc38)
      %59 = arith.cmpi slt, %43, %cst_3 : tensor<1x64xi64> loc(#loc39)
      %60 = arith.select %59, %58, %43 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc40)
      %61 = arith.addi %45, %cst_0 : tensor<1x64xi64> loc(#loc41)
      %62 = arith.cmpi slt, %45, %cst_3 : tensor<1x64xi64> loc(#loc42)
      %63 = arith.select %62, %61, %45 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc43)
      %64 = arith.addi %47, %cst_0 : tensor<1x64xi64> loc(#loc44)
      %65 = arith.cmpi slt, %47, %cst_3 : tensor<1x64xi64> loc(#loc45)
      %66 = arith.select %65, %64, %47 : tensor<1x64xi1>, tensor<1x64xi64> loc(#loc46)
      %67 = arith.muli %63, %cst_0 : tensor<1x64xi64> loc(#loc47)
      %68 = arith.addi %66, %67 : tensor<1x64xi64> loc(#loc48)
      %69 = arith.muli %60, %cst : tensor<1x64xi64> loc(#loc49)
      %70 = arith.addi %68, %69 : tensor<1x64xi64> loc(#loc50)
      %71 = arith.muli %41, %cst_5 : tensor<1x64xi32> loc(#loc51)
      %72 = arith.extsi %71 : tensor<1x64xi32> to tensor<1x64xi64> loc(#loc52)
      %73 = arith.addi %70, %72 : tensor<1x64xi64> loc(#loc52)
      %74 = tt.broadcast %73 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc52)
      %75 = arith.addi %74, %19 : tensor<64x64xi64> loc(#loc19)
      %76 = tt.addptr %20, %75 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi64> loc(#loc20)
      %77 = tt.load %76, %52, %cst_7 evictionPolicy = evict_last : tensor<64x64x!tt.ptr<f32>> loc(#loc53)
      %78 = arith.addf %77, %53 : tensor<64x64xf32> loc(#loc54)
      %79 = arith.addf %78, %57 : tensor<64x64xf32> loc(#loc55)
      %80 = arith.cmpi eq, %arg10, %c0_i32 : i32 loc(#loc56)
      %81:3 = scf.if %80 -> (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) {
        scf.yield %cst_7, %79, %cst_2 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc97)
      } else {
        %86 = arith.subf %79, %arg11 : tensor<64x64xf32> loc(#loc98)
        %87 = arith.addf %arg13, %cst_2 : tensor<64x64xf32> loc(#loc99)
        %88 = arith.divf %86, %87 : tensor<64x64xf32> loc(#loc100)
        %89 = arith.addf %arg11, %88 : tensor<64x64xf32> loc(#loc101)
        %90 = arith.subf %79, %89 : tensor<64x64xf32> loc(#loc102)
        %91 = arith.mulf %86, %90 : tensor<64x64xf32> loc(#loc103)
        %92 = arith.addf %arg12, %91 : tensor<64x64xf32> loc(#loc104)
        scf.yield %92, %89, %87 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc104)
      } loc(#loc96)
      %82 = arith.select %52, %81#1, %arg11 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc67)
      %83 = arith.select %52, %81#0, %arg12 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc68)
      %84 = arith.select %52, %81#2, %arg13 : tensor<64x64xi1>, tensor<64x64xf32> loc(#loc69)
      %85 = tt.addptr %21, %55 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi32> loc(#loc21)
      tt.store %85, %79, %52 : tensor<64x64x!tt.ptr<f32>> loc(#loc70)
      scf.yield %82, %83, %84 : tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32> loc(#loc71)
    } loc(#loc22)
    %23:3 = "tt.reduce"(%22#0, %22#1, %22#2) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc73)), %arg11: f32 loc(callsite(#loc1 at #loc73)), %arg12: f32 loc(callsite(#loc1 at #loc73)), %arg13: f32 loc(callsite(#loc1 at #loc73)), %arg14: f32 loc(callsite(#loc1 at #loc73)), %arg15: f32 loc(callsite(#loc1 at #loc73))):
      %33 = arith.subf %arg13, %arg10 : f32 loc(#loc119)
      %34 = arith.addf %arg12, %arg15 : f32 loc(#loc120)
      %35 = arith.cmpf oeq, %34, %cst_1 : f32 loc(#loc121)
      %36 = arith.divf %arg15, %34 : f32 loc(#loc122)
      %37 = arith.select %35, %cst_1, %36 : f32 loc(#loc123)
      %38 = arith.mulf %33, %37 : f32 loc(#loc124)
      %39 = arith.addf %arg10, %38 : f32 loc(#loc125)
      %40 = arith.addf %arg11, %arg14 : f32 loc(#loc126)
      %41 = arith.mulf %33, %33 : f32 loc(#loc127)
      %42 = arith.mulf %41, %arg12 : f32 loc(#loc128)
      %43 = arith.mulf %42, %37 : f32 loc(#loc129)
      %44 = arith.addf %40, %43 : f32 loc(#loc130)
      tt.reduce.return %39, %44, %34 : f32, f32, f32 loc(#loc105)
    }) : (tensor<64x64xf32>, tensor<64x64xf32>, tensor<64x64xf32>) -> (tensor<64xf32>, tensor<64xf32>, tensor<64xf32>) loc(#loc105)
    %24 = tt.expand_dims %23#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc86)
    %25 = tt.expand_dims %23#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc87)
    %26 = tt.expand_dims %23#2 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc88)
    %27 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc89)
    %28 = tt.addptr %27, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc89)
    tt.store %28, %24, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc90)
    %29 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc91)
    %30 = tt.addptr %29, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc91)
    tt.store %30, %25, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc92)
    %31 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc93)
    %32 = tt.addptr %31, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc93)
    tt.store %32, %26, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc94)
    tt.return loc(#loc95)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":22:28)
#loc3 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":22:33)
#loc4 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":23:36)
#loc5 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":23:44)
#loc6 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":23:23)
#loc7 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":24:21)
#loc8 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":25:33)
#loc9 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":27:19)
#loc10 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":39:34)
#loc11 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":42:42)
#loc12 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":42:40)
#loc13 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":42:35)
#loc14 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":42:55)
#loc15 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":43:45)
#loc16 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":43:40)
#loc17 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":43:35)
#loc18 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:76)
#loc19 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:71)
#loc20 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:35)
#loc21 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":64:29)
#loc22 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":31:36)
#loc23 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":32:27)
#loc24 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":33:25)
#loc25 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":34:25)
#loc26 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":34:32)
#loc27 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":35:25)
#loc28 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":35:31)
#loc29 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":36:23)
#loc30 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":37:23)
#loc31 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":39:39)
#loc32 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":40:34)
#loc33 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":40:39)
#loc34 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":41:34)
#loc35 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":41:39)
#loc36 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":42:47)
#loc37 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":43:50)
#loc38 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":45:22)
#loc39 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":46:22)
#loc40 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":47:36)
#loc41 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":48:22)
#loc42 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":49:22)
#loc43 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":50:36)
#loc44 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":51:23)
#loc45 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":52:23)
#loc46 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":53:39)
#loc47 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:45)
#loc48 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:43)
#loc49 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:55)
#loc50 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:52)
#loc51 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:66)
#loc52 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:62)
#loc53 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":54:81)
#loc54 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":55:24)
#loc55 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":56:24)
#loc56 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":59:66)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc58 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":59:55)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc67 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":61:62)
#loc68 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":62:58)
#loc69 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":63:66)
#loc70 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":64:51)
#loc71 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":64:8)
#loc72 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc74 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc76 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc77 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc78 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc79 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc80 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc81 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc82 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc83 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc84 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc85 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc86 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":68:22)
#loc87 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":69:22)
#loc88 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":70:22)
#loc89 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":71:25)
#loc90 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":71:37)
#loc91 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":72:25)
#loc92 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":72:37)
#loc93 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":73:25)
#loc94 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":73:37)
#loc95 = loc("inductor_cache/tn/ctnhk2r467eoeoptdlq6oaxcbntq3dkpsvrynoq6gnxejh5fsqdg.py":73:4)
#loc96 = loc(callsite(#loc57 at #loc58))
#loc97 = loc(callsite(#loc59 at #loc58))
#loc98 = loc(callsite(#loc60 at #loc58))
#loc99 = loc(callsite(#loc61 at #loc58))
#loc100 = loc(callsite(#loc62 at #loc58))
#loc101 = loc(callsite(#loc63 at #loc58))
#loc102 = loc(callsite(#loc64 at #loc58))
#loc103 = loc(callsite(#loc65 at #loc58))
#loc104 = loc(callsite(#loc66 at #loc58))
#loc105 = loc(callsite(#loc72 at #loc73))
#loc107 = loc(callsite(#loc74 at #loc72))
#loc108 = loc(callsite(#loc75 at #loc72))
#loc109 = loc(callsite(#loc76 at #loc72))
#loc110 = loc(callsite(#loc77 at #loc72))
#loc111 = loc(callsite(#loc78 at #loc72))
#loc112 = loc(callsite(#loc79 at #loc72))
#loc113 = loc(callsite(#loc80 at #loc72))
#loc114 = loc(callsite(#loc81 at #loc72))
#loc115 = loc(callsite(#loc82 at #loc72))
#loc116 = loc(callsite(#loc83 at #loc72))
#loc117 = loc(callsite(#loc84 at #loc72))
#loc118 = loc(callsite(#loc85 at #loc72))
#loc119 = loc(callsite(#loc107 at #loc73))
#loc120 = loc(callsite(#loc108 at #loc73))
#loc121 = loc(callsite(#loc109 at #loc73))
#loc122 = loc(callsite(#loc110 at #loc73))
#loc123 = loc(callsite(#loc111 at #loc73))
#loc124 = loc(callsite(#loc112 at #loc73))
#loc125 = loc(callsite(#loc113 at #loc73))
#loc126 = loc(callsite(#loc114 at #loc73))
#loc127 = loc(callsite(#loc115 at #loc73))
#loc128 = loc(callsite(#loc116 at #loc73))
#loc129 = loc(callsite(#loc117 at #loc73))
#loc130 = loc(callsite(#loc118 at #loc73))
