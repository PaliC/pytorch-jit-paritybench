//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8 // -- Begin function triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8
                                        // @triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8
.visible .entry triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_5,
	.param .u32 triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<16>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<26>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_0];
	ld.param.u64 	%rd11, [triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:21:33
	shl.b32 	%r12, %r1, 8;
	ld.param.u64 	%rd12, [triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_2];
	ld.param.u64 	%rd13, [triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_3];
	.loc	1 22 36                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:22:36
	mov.u32 	%r13, %tid.x;
	shl.b32 	%r14, %r13, 1;
	ld.param.u64 	%rd14, [triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_4];
	and.b32  	%r15, %r14, 254;
	ld.param.u64 	%rd15, [triton_poi_fused_add_convolution_leaky_relu_relu_threshold_backward_8_param_5];
	.loc	1 22 23                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:22:23
	or.b32  	%r16, %r12, %r15;
	.loc	1 23 21                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:23:21
	setp.lt.s32 	%p1, %r16, 1024;
	.loc	1 25 21                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:25:21
	bfe.s32 	%r17, %r1, 23, 1;
	shr.u32 	%r18, %r17, 30;
	add.s32 	%r19, %r16, %r18;
	shr.s32 	%r20, %r19, 2;
	.loc	1 25 26                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:25:26
	shr.s32 	%r21, %r19, 31;
	shr.u32 	%r22, %r21, 26;
	add.s32 	%r23, %r20, %r22;
	and.b32  	%r24, %r23, -64;
	sub.s32 	%r25, %r20, %r24;
	.loc	1 26 30                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:26:30
	cvt.s64.s32 	%rd16, %r16;
	mul.wide.s32 	%rd17, %r16, 4;
	add.s64 	%rd1, %rd11, %rd17;
	.loc	1 26 35                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:26:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:27:30
	mul.wide.s32 	%rd18, %r25, 4;
	add.s64 	%rd2, %rd12, %rd18;
	.loc	1 27 35                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:27:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 34                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:28:34
	add.s64 	%rd4, %rd10, %rd17;
	.loc	1 28 39                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:28:39
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:29:30
	add.s64 	%rd5, %rd13, %rd18;
	.loc	1 29 35                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:29:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 41 25                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:41:25
	add.s64 	%rd7, %rd14, %rd16;
	.loc	1 26 35                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:26:35
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 27 35                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:27:35
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 28 39                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:28:39
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	.loc	1 29 35                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:29:35
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 30 18                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:30:18
	add.f32 	%f9, %f2, %f4;
	add.f32 	%f10, %f1, %f3;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p10, %f10, 0f00000000;
	setp.lt.f32 	%p11, %f9, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f11, 0f00000000, %f9, %p11;
	selp.f32 	%f12, 0f00000000, %f10, %p10;
$L__tmp2:
	.loc	1 33 18                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:33:18
	add.f32 	%f13, %f6, %f8;
	add.f32 	%f14, %f5, %f7;
	.loc	1 34 18                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:34:18
	add.f32 	%f15, %f12, %f14;
	add.f32 	%f16, %f11, %f13;
	.loc	1 36 19                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:36:19
	setp.gt.f32 	%p12, %f16, 0f00000000;
	setp.gt.f32 	%p13, %f15, 0f00000000;
	.loc	1 38 19                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:38:19
	mul.f32 	%f17, %f15, 0f3C23D70A;
	mul.f32 	%f18, %f16, 0f3C23D70A;
	.loc	1 39 34                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:39:34
	selp.f32 	%f19, %f15, %f17, %p13;
	selp.f32 	%f20, %f16, %f18, %p12;
	.loc	1 41 37                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:41:37
	selp.u16 	%rs3, 1, 0, %p13;
	selp.u16 	%rs4, 1, 0, %p12;
	shl.b16 	%rs5, %rs4, 8;
	or.b16  	%rs1, %rs3, %rs5;
	// begin inline asm
	@%p1 st.global.b16 [ %rd7 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 42 40                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:42:40
	mov.b32 	%r10, %f19;
	mov.b32 	%r11, %f20;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd4 + 0 ], { %r10, %r11 };
	// end inline asm
	.loc	1 43 25                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:43:25
	add.s64 	%rd9, %rd15, %rd16;
	.loc	1 40 20                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:40:20
	setp.le.f32 	%p14, %f11, 0f00000000;
	setp.le.f32 	%p15, %f12, 0f00000000;
	.loc	1 43 37                         // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:43:37
	selp.u16 	%rs6, 1, 0, %p15;
	selp.u16 	%rs7, 1, 0, %p14;
	shl.b16 	%rs8, %rs7, 8;
	or.b16  	%rs2, %rs6, %rs8;
	// begin inline asm
	@%p1 st.global.b16 [ %rd9 + 0 ], { %rs2 };
	// end inline asm
	.loc	1 43 4                          // cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py:43:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/br/cbriivfqlors6mgtyqhr7cd2lpykegubl4aw3ol72sl44di73u2x.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 214                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 114
.b8 105
.b8 105
.b8 118
.b8 102
.b8 113
.b8 108
.b8 111
.b8 114
.b8 115
.b8 54
.b8 109
.b8 103
.b8 116
.b8 121
.b8 113
.b8 104
.b8 114
.b8 55
.b8 99
.b8 100
.b8 50
.b8 108
.b8 112
.b8 121
.b8 107
.b8 101
.b8 103
.b8 117
.b8 98
.b8 108
.b8 52
.b8 97
.b8 119
.b8 51
.b8 111
.b8 108
.b8 55
.b8 50
.b8 115
.b8 108
.b8 52
.b8 52
.b8 100
.b8 105
.b8 55
.b8 51
.b8 117
.b8 50
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x48 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 108
.b8 101
.b8 97
.b8 107
.b8 121
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xab:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 32                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
