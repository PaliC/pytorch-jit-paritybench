; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_hardtanh_backward_25(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 4608, !dbg !14
  %13 = srem i32 %11, 128, !dbg !15
  %14 = sext i32 %11 to i64, !dbg !16
  %15 = getelementptr float, ptr addrspace(1) %0, i64 %14, !dbg !16
  %16 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %15, i1 %12) #1, !dbg !17
  %17 = extractvalue { i32, i32 } %16, 0, !dbg !17
  %18 = extractvalue { i32, i32 } %16, 1, !dbg !17
  %19 = sext i32 %13 to i64, !dbg !18
  %20 = getelementptr float, ptr addrspace(1) %1, i64 %19, !dbg !18
  %21 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %20, i1 %12) #1, !dbg !19
  %22 = extractvalue { i32, i32 } %21, 0, !dbg !19
  %23 = extractvalue { i32, i32 } %21, 1, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %14, !dbg !20
  %25 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %24, i1 %12) #1, !dbg !21
  %26 = extractvalue { i32, i32 } %25, 0, !dbg !21
  %27 = extractvalue { i32, i32 } %25, 1, !dbg !21
  %28 = getelementptr i1, ptr addrspace(1) %3, i64 %14, !dbg !22
  %29 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !17
  %30 = insertelement <2 x i32> %29, i32 %18, i64 1, !dbg !17
  %31 = bitcast <2 x i32> %30 to <2 x float>, !dbg !17
  %32 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !19
  %33 = insertelement <2 x i32> %32, i32 %23, i64 1, !dbg !19
  %34 = bitcast <2 x i32> %33 to <2 x float>, !dbg !19
  %35 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !21
  %36 = insertelement <2 x i32> %35, i32 %27, i64 1, !dbg !21
  %37 = bitcast <2 x i32> %36 to <2 x float>, !dbg !21
  %38 = fadd <2 x float> %31, %34, !dbg !23
  %39 = fadd <2 x float> %38, %37, !dbg !24
  %40 = fcmp ole <2 x float> %39, zeroinitializer, !dbg !25
  %41 = fcmp oge <2 x float> %39, splat (float 6.000000e+00), !dbg !26
  %42 = or <2 x i1> %40, %41, !dbg !27
  %43 = zext <2 x i1> %42 to <2 x i8>, !dbg !28
  %44 = bitcast <2 x i8> %43 to i16, !dbg !28
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %44, ptr addrspace(1) %28, i1 %12) #1, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cqeenfeq5ts6gdunm4xpbxg2n3fonibkvhlndjfyuykpvjz6qo3i.py", directory: "inductor_cache/qe")
!4 = !{ptr @triton_poi_fused_add_convolution_hardtanh_backward_25, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_hardtanh_backward_25, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_hardtanh_backward_25", linkageName: "triton_poi_fused_add_convolution_hardtanh_backward_25", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 36, column: 25, scope: !7)
!23 = !DILocation(line: 29, column: 18, scope: !7)
!24 = !DILocation(line: 30, column: 18, scope: !7)
!25 = !DILocation(line: 32, column: 19, scope: !7)
!26 = !DILocation(line: 34, column: 19, scope: !7)
!27 = !DILocation(line: 35, column: 18, scope: !7)
!28 = !DILocation(line: 36, column: 36, scope: !7)
!29 = !DILocation(line: 36, column: 4, scope: !7)
