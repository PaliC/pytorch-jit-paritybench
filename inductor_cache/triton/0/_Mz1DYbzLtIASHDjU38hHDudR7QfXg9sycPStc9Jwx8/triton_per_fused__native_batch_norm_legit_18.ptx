//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_18 // -- Begin function triton_per_fused__native_batch_norm_legit_18
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_18
.visible .entry triton_per_fused__native_batch_norm_legit_18(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_18_param_3,
	.param .u32 triton_per_fused__native_batch_norm_legit_18_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_18_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<105>;
	.reg .f32 	%f<46>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd5, [triton_per_fused__native_batch_norm_legit_18_param_0];
	ld.param.u64 	%rd6, [triton_per_fused__native_batch_norm_legit_18_param_1];
$L__tmp0:
	.loc	1 23 28                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:23:33
	shl.b32 	%r46, %r1, 3;
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_18_param_2];
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_18_param_3];
	.loc	1 24 44                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:24:44
	mov.u32 	%r47, %tid.x;
	and.b32  	%r48, %r47, 31;
	shl.b32 	%r49, %r47, 1;
	and.b32  	%r50, %r49, 6;
	and.b32  	%r51, %r47, 7;
	.loc	1 24 23                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:24:23
	or.b32  	%r52, %r46, %r50;
	.loc	1 25 21                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:25:21
	setp.lt.s32 	%p1, %r52, 1024;
	.loc	1 31 34                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:34
	shl.b32 	%r53, %r47, 6;
	and.b32  	%r54, %r53, 3840;
	.loc	1 31 51                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:51
	shr.s32 	%r56, %r52, 31;
	shr.u32 	%r57, %r56, 24;
	add.s32 	%r58, %r52, %r57;
	.loc	1 31 45                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:45
	shl.b32 	%r59, %r58, 4;
	and.b32  	%r60, %r59, -4096;
	.loc	1 31 65                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:65
	and.b32  	%r61, %r58, -256;
	sub.s32 	%r62, %r52, %r61;
	.loc	1 31 39                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:39
	add.s32 	%r63, %r62, %r54;
	.loc	1 31 60                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:60
	add.s32 	%r64, %r63, %r60;
	.loc	1 31 30                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:30
	mul.wide.s32 	%rd9, %r64, 4;
	add.s64 	%rd1, %rd5, %rd9;
	mov.b32 	%r4, 0;
	.loc	1 31 73                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:31:73
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	.loc	1 35 33                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:35:33
	selp.f32 	%f3, %f1, 0f00000000, %p1;
	selp.f32 	%f4, %f2, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f3;
	shfl.sync.bfly.b32	%r66, %r65, 16, 31, -1;
	mov.b32 	%f5, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f3, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f6;
	shfl.sync.bfly.b32	%r68, %r67, 8, 31, -1;
	mov.b32 	%f7, %r68;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f8, %f6, %f7;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f8;
	shfl.sync.bfly.b32	%r70, %r69, 4, 31, -1;
	mov.b32 	%f9, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f8, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f4;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	mov.b32 	%f11, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f4, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f12;
	shfl.sync.bfly.b32	%r74, %r73, 8, 31, -1;
	mov.b32 	%f13, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f14;
	shfl.sync.bfly.b32	%r76, %r75, 4, 31, -1;
	mov.b32 	%f15, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p4, %r48, 4;
	shl.b32 	%r77, %r50, 3;
	shr.u32 	%r78, %r47, 3;
	and.b32  	%r79, %r78, 4;
	or.b32  	%r80, %r77, %r79;
	mov.u32 	%r81, global_smem;
	add.s32 	%r6, %r81, %r80;
	mov.b32 	%r7, %f10;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	add.s32 	%r8, %r6, 8;
	mov.b32 	%r9, %f16;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p6, %r47, 16;
	shl.b32 	%r82, %r47, 2;
	add.s32 	%r11, %r81, %r82;
	// begin inline asm
	@%p6 ld.shared.b32 %r10, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r10;
	shfl.sync.bfly.b32	%r83, %r10, 1, 31, -1;
	mov.b32 	%f18, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r84, %r47, 1;
	setp.eq.b32 	%p18, %r84, 1;
	not.pred 	%p19, %p18;
	and.pred  	%p7, %p6, %p19;
	mov.b32 	%r13, %f19;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r13;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r85, %r81, %r77;
$L__tmp2:
	.loc	1 39 19                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:39:19
	ld.shared.u32 	%r15, [%r85];
	ld.shared.u32 	%r16, [%r85+8];
	bar.sync 	0;
	shl.b32 	%r86, %r50, 2;
	sub.s32 	%r34, %r85, %r86;
	mov.pred 	%p8, -1;
	// begin inline asm
	@%p8 st.shared.v2.b32 [ %r34 + 0 ], { %r15, %r16 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r87, %r51, 2;
	add.s32 	%r88, %r81, %r87;
	ld.shared.u32 	%r18, [%r88];
	mov.b32 	%r19, 1098907648;
	// begin inline asm
	div.full.f32 %r44, %r18, %r19;
	// end inline asm
	// begin inline asm
	div.full.f32 %r20, %r15, %r19;
	// end inline asm
	mov.b32 	%f20, %r20;
	// begin inline asm
	div.full.f32 %r23, %r16, %r19;
	// end inline asm
	mov.b32 	%f21, %r23;
	.loc	1 40 19                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:40:19
	sub.f32 	%f22, %f1, %f20;
	sub.f32 	%f23, %f2, %f21;
	.loc	1 41 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:41:20
	mul.f32 	%f24, %f22, %f22;
	mul.f32 	%f25, %f23, %f23;
	.loc	1 43 35                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:43:35
	selp.f32 	%f26, %f24, 0f00000000, %p1;
	selp.f32 	%f27, %f25, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r89, %f26;
	shfl.sync.bfly.b32	%r90, %r89, 16, 31, -1;
	mov.b32 	%f28, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f26, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f29;
	shfl.sync.bfly.b32	%r92, %r91, 8, 31, -1;
	mov.b32 	%f30, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f31;
	shfl.sync.bfly.b32	%r94, %r93, 4, 31, -1;
	mov.b32 	%f32, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f27;
	shfl.sync.bfly.b32	%r96, %r95, 16, 31, -1;
	mov.b32 	%f34, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f27, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f35;
	shfl.sync.bfly.b32	%r98, %r97, 8, 31, -1;
	mov.b32 	%f36, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f37;
	shfl.sync.bfly.b32	%r100, %r99, 4, 31, -1;
	mov.b32 	%f38, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r27, %f33;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r27;
	// end inline asm
	mov.b32 	%r29, %f39;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r29;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r30, [ %r11 + 0 ];
	// end inline asm
	mov.b32 	%f40, %r30;
	shfl.sync.bfly.b32	%r101, %r30, 1, 31, -1;
	mov.b32 	%f41, %r101;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f42;
	// begin inline asm
	@%p7 st.shared.b32 [ %r11 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r38, [%r85];
	ld.shared.u32 	%r39, [%r85+8];
$L__tmp4:
	.loc	1 49 28                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:49:28
	bar.sync 	0;
	// begin inline asm
	@%p8 st.shared.v2.b32 [ %r34 + 0 ], { %r38, %r39 };
	// end inline asm
	bar.sync 	0;
	.loc	1 46 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:46:20
	ld.shared.u32 	%r41, [%r88];
	.loc	1 44 29                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:44:29
	bar.sync 	0;
	// begin inline asm
	@%p8 st.shared.v2.b32 [ %r34 + 0 ], { %r38, %r39 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r45, [%r88];
	.loc	1 46 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:46:20
	// begin inline asm
	div.full.f32 %r40, %r41, %r19;
	// end inline asm
	mov.b32 	%f43, %r40;
	.loc	1 48 20                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:48:20
	add.f32 	%f44, %f43, 0f3727C5AC;
	.loc	1 49 28                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:49:28
	rsqrt.approx.ftz.f32 	%f45, %f44;
	.loc	1 24 23                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:24:23
	or.b32  	%r102, %r46, %r51;
	.loc	1 25 21                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:25:21
	setp.lt.s32 	%p20, %r102, 1024;
	.loc	1 50 25                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:50:25
	mul.wide.s32 	%rd10, %r102, 4;
	add.s64 	%rd2, %rd8, %rd10;
	.loc	1 50 37                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:50:37
	bfe.u32 	%r103, %r47, 3, 2;
	or.b32  	%r104, %r79, %r103;
	setp.eq.s32 	%p21, %r104, 0;
	mov.b32 	%r43, %f45;
	and.pred  	%p15, %p21, %p20;
	// begin inline asm
	@%p15 st.global.b32 [ %rd2 + 0 ], { %r43 };
	// end inline asm
	.loc	1 51 25                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:51:25
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 51 37                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:51:37
	// begin inline asm
	@%p15 st.global.b32 [ %rd3 + 0 ], { %r44 };
	// end inline asm
	.loc	1 52 25                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:52:25
	add.s64 	%rd4, %rd7, %rd10;
	.loc	1 52 37                         // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:52:37
	// begin inline asm
	@%p15 st.global.b32 [ %rd4 + 0 ], { %r45 };
	// end inline asm
	.loc	1 52 4                          // c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py:52:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/6b/c6bbytuccku3kxsjwx3kcoc3qm52nwu2yum5mxc2sujj4xaeuiwc.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 54
.b8 98
.b8 98
.b8 121
.b8 116
.b8 117
.b8 99
.b8 99
.b8 107
.b8 117
.b8 51
.b8 107
.b8 120
.b8 115
.b8 106
.b8 119
.b8 120
.b8 51
.b8 107
.b8 99
.b8 111
.b8 99
.b8 51
.b8 113
.b8 109
.b8 53
.b8 50
.b8 110
.b8 119
.b8 117
.b8 50
.b8 121
.b8 117
.b8 109
.b8 53
.b8 109
.b8 120
.b8 99
.b8 50
.b8 115
.b8 117
.b8 106
.b8 106
.b8 52
.b8 120
.b8 97
.b8 101
.b8 117
.b8 105
.b8 119
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 54
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 49
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
