//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__unsafe_index_add_convolution_17 // -- Begin function triton_poi_fused__unsafe_index_add_convolution_17
                                        // @triton_poi_fused__unsafe_index_add_convolution_17
.visible .entry triton_poi_fused__unsafe_index_add_convolution_17(
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_17_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_17_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_17_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__unsafe_index_add_convolution_17_param_3,
	.param .u32 triton_poi_fused__unsafe_index_add_convolution_17_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<49>;
	.reg .f32 	%f<21>;
	.reg .b64 	%rd<63>;
	.loc	1 19 0                          // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:19:0

// %bb.0:
	ld.param.u64 	%rd25, [triton_poi_fused__unsafe_index_add_convolution_17_param_0];
	ld.param.u64 	%rd26, [triton_poi_fused__unsafe_index_add_convolution_17_param_1];
$L__tmp0:
	.loc	1 21 28                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:21:33
	shl.b32 	%r18, %r1, 9;
	ld.param.u64 	%rd27, [triton_poi_fused__unsafe_index_add_convolution_17_param_2];
	ld.param.u64 	%rd28, [triton_poi_fused__unsafe_index_add_convolution_17_param_3];
	.loc	1 22 36                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:22:36
	mov.u32 	%r19, %tid.x;
	shl.b32 	%r20, %r19, 2;
	and.b32  	%r21, %r20, 508;
	.loc	1 22 23                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:22:23
	or.b32  	%r22, %r18, %r21;
	or.b32  	%r23, %r22, 2;
	.loc	1 24 21                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:24:21
	shr.s32 	%r25, %r22, 31;
	shr.u32 	%r26, %r25, 29;
	add.s32 	%r27, %r22, %r26;
	shr.s32 	%r28, %r27, 3;
	.loc	1 24 26                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:24:26
	shr.u32 	%r29, %r28, 29;
	add.s32 	%r30, %r28, %r29;
	and.b32  	%r31, %r30, -8;
	sub.s32 	%r32, %r28, %r31;
	.loc	1 25 19                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:25:19
	and.b32  	%r33, %r27, -8;
	sub.s32 	%r34, %r22, %r33;
	bfe.s32 	%r35, %r1, 22, 1;
	shr.u32 	%r36, %r35, 29;
	add.s32 	%r37, %r23, %r36;
	and.b32  	%r38, %r37, -8;
	sub.s32 	%r39, %r23, %r38;
	.loc	1 26 19                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:26:19
	shr.u32 	%r40, %r35, 26;
	add.s32 	%r41, %r22, %r40;
	shr.s32 	%r42, %r41, 6;
	.loc	1 28 27                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:28:27
	shr.s32 	%r43, %r41, 31;
	shr.u32 	%r44, %r43, 24;
	add.s32 	%r45, %r42, %r44;
	and.b32  	%r46, %r45, -256;
	sub.s32 	%r47, %r42, %r46;
	.loc	1 29 30                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:29:30
	mul.wide.s32 	%rd29, %r32, 8;
	add.s64 	%rd2, %rd26, %rd29;
	mov.pred 	%p1, -1;
	.loc	1 29 35                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:29:35
	// begin inline asm
	mov.u64 %rd1, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd1 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd3, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd3 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd5, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd5 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p1 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:30:30
	mul.wide.s32 	%rd30, %r34, 8;
	add.s64 	%rd11, %rd26, %rd30;
	mul.wide.s32 	%rd31, %r39, 8;
	add.s64 	%rd14, %rd26, %rd31;
	.loc	1 30 35                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:30:35
	// begin inline asm
	mov.u64 %rd9, 0x0;
	mov.u64 %rd10, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd9, %rd10 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u64 %rd12, 0x0;
	mov.u64 %rd13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b64 { %rd12, %rd13 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 31 35                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:31:35
	mul.wide.s32 	%rd32, %r22, 4;
	add.s64 	%rd15, %rd25, %rd32;
	.loc	1 31 40                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:31:40
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 32 31                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:32:31
	mul.wide.s32 	%rd33, %r47, 4;
	add.s64 	%rd16, %rd28, %rd33;
	.loc	1 32 36                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:32:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r9;
	.loc	1 36 32                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:36:32
	shr.u64 	%rd34, %rd1, 61;
	and.b64  	%rd35, %rd34, 4;
	add.s64 	%rd36, %rd35, %rd1;
	.loc	1 40 49                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:40:49
	shl.b32 	%r48, %r42, 4;
	.loc	1 40 30                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:40:30
	shl.b64 	%rd37, %rd9, 2;
	add.s64 	%rd38, %rd27, %rd37;
	shr.u64 	%rd39, %rd9, 59;
	and.b64  	%rd40, %rd39, 16;
	add.s64 	%rd41, %rd38, %rd40;
	shl.b64 	%rd42, %rd36, 4;
	add.s64 	%rd43, %rd41, %rd42;
	mul.wide.s32 	%rd44, %r48, 4;
	add.s64 	%rd20, %rd43, %rd44;
	shl.b64 	%rd45, %rd10, 2;
	add.s64 	%rd46, %rd27, %rd45;
	shr.u64 	%rd47, %rd10, 59;
	and.b64  	%rd48, %rd47, 16;
	add.s64 	%rd49, %rd46, %rd48;
	add.s64 	%rd50, %rd49, %rd42;
	add.s64 	%rd21, %rd50, %rd44;
	shl.b64 	%rd51, %rd12, 2;
	add.s64 	%rd52, %rd27, %rd51;
	shr.u64 	%rd53, %rd12, 59;
	and.b64  	%rd54, %rd53, 16;
	add.s64 	%rd55, %rd52, %rd54;
	add.s64 	%rd56, %rd55, %rd42;
	add.s64 	%rd22, %rd56, %rd44;
	shl.b64 	%rd57, %rd13, 2;
	add.s64 	%rd58, %rd27, %rd57;
	shr.u64 	%rd59, %rd13, 59;
	and.b64  	%rd60, %rd59, 16;
	add.s64 	%rd61, %rd58, %rd60;
	add.s64 	%rd62, %rd61, %rd42;
	add.s64 	%rd23, %rd62, %rd44;
	.loc	1 40 54                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:40:54
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd20 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd21 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd22 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd23 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r13;
	.loc	1 41 20                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:41:20
	add.f32 	%f13, %f1, %f5;
	add.f32 	%f14, %f2, %f6;
	add.f32 	%f15, %f3, %f7;
	add.f32 	%f16, %f4, %f8;
	.loc	1 42 19                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:42:19
	add.f32 	%f17, %f13, %f9;
	add.f32 	%f18, %f14, %f10;
	add.f32 	%f19, %f15, %f11;
	add.f32 	%f20, %f16, %f12;
	.loc	1 43 40                         // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:43:40
	mov.b32 	%r14, %f17;
	mov.b32 	%r15, %f18;
	mov.b32 	%r16, %f19;
	mov.b32 	%r17, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd15 + 0 ], { %r14, %r15, %r16, %r17 };
	// end inline asm
	.loc	1 43 4                          // cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py:43:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fs/cfspkkctj3r3rzjaz3ooei3j5f6vsefjrlx5u2lt3joagi75e5ep.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 115
.b8 112
.b8 107
.b8 107
.b8 99
.b8 116
.b8 106
.b8 51
.b8 114
.b8 51
.b8 114
.b8 122
.b8 106
.b8 97
.b8 122
.b8 51
.b8 111
.b8 111
.b8 101
.b8 105
.b8 51
.b8 106
.b8 53
.b8 102
.b8 54
.b8 118
.b8 115
.b8 101
.b8 102
.b8 106
.b8 114
.b8 108
.b8 120
.b8 53
.b8 117
.b8 50
.b8 108
.b8 116
.b8 51
.b8 106
.b8 111
.b8 97
.b8 103
.b8 105
.b8 55
.b8 53
.b8 101
.b8 53
.b8 101
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 115
.b8 0
	}
	.section	.debug_macinfo	{	}
