; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 512, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = srem i32 %13, 8, !dbg !16
  %15 = mul i32 %13, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %15, !dbg !17
  %.frozen1 = freeze i32 %11, !dbg !18
  %16 = sdiv i32 %.frozen1, 128, !dbg !18
  %17 = icmp slt i32 %14, 4, !dbg !19
  %18 = mul i32 %16, 128, !dbg !20
  %srem.decomposed = sub i32 %.frozen1, %18, !dbg !20
  %19 = shl nsw i32 %16, 6, !dbg !21
  %20 = add nsw i32 %19, %srem.decomposed, !dbg !22
  %21 = sext i32 %20 to i64, !dbg !23
  %22 = getelementptr float, ptr addrspace(1) %0, i64 %21, !dbg !23
  %23 = and i1 %12, %17, !dbg !24
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %22, i1 %23, i32 0, i1 %23, i32 0, i1 %23) #1, !dbg !25
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !25
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !25
  %27 = and i32 %14, -2, !dbg !26
  %28 = icmp eq i32 %27, 4, !dbg !26
  %29 = shl nsw i32 %14, 4, !dbg !27
  %30 = shl nsw i32 %16, 5, !dbg !28
  %31 = add nsw i32 %30, %.decomposed, !dbg !27
  %32 = add nsw i32 %31, -64, !dbg !29
  %33 = add nsw i32 %32, %29, !dbg !30
  %34 = sext i32 %33 to i64, !dbg !31
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !31
  %36 = and i1 %12, %28, !dbg !32
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %35, i1 %36, i32 0, i1 %36, i32 0, i1 %36) #1, !dbg !33
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !33
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !33
  %40 = bitcast i32 %38 to float, !dbg !33
  %41 = bitcast i32 %39 to float, !dbg !33
  %42 = fcmp ogt float %40, 0.000000e+00, !dbg !34
  %43 = fcmp ogt float %41, 0.000000e+00, !dbg !34
  %44 = fmul float %40, 0x3FB99999A0000000, !dbg !35
  %45 = fmul float %41, 0x3FB99999A0000000, !dbg !35
  %46 = select i1 %42, float %40, float %44, !dbg !36
  %47 = select i1 %43, float %41, float %45, !dbg !36
  %48 = icmp sgt i32 %14, 5, !dbg !37
  %49 = add nsw i32 %31, -96, !dbg !38
  %50 = add nsw i32 %49, %29, !dbg !39
  %51 = sext i32 %50 to i64, !dbg !40
  %52 = getelementptr float, ptr addrspace(1) %2, i64 %51, !dbg !40
  %53 = and i1 %12, %48, !dbg !41
  %54 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %52, i1 %53, i32 0, i1 %53, i32 0, i1 %53) #1, !dbg !42
  %55 = extractvalue { i32, i32 } %54, 0, !dbg !42
  %56 = extractvalue { i32, i32 } %54, 1, !dbg !42
  %57 = bitcast i32 %55 to float, !dbg !42
  %58 = bitcast i32 %56 to float, !dbg !42
  %59 = fcmp ogt float %57, 0.000000e+00, !dbg !43
  %60 = fcmp ogt float %58, 0.000000e+00, !dbg !43
  %61 = fmul float %57, 0x3FB99999A0000000, !dbg !44
  %62 = fmul float %58, 0x3FB99999A0000000, !dbg !44
  %63 = select i1 %59, float %57, float %61, !dbg !45
  %64 = select i1 %60, float %58, float %62, !dbg !45
  %65 = select i1 %48, float %63, float 0.000000e+00, !dbg !46
  %66 = select i1 %48, float %64, float 0.000000e+00, !dbg !46
  %67 = select i1 %28, float %46, float %65, !dbg !47
  %68 = select i1 %28, float %47, float %66, !dbg !47
  %69 = sext i32 %11 to i64, !dbg !48
  %70 = getelementptr float, ptr addrspace(1) %3, i64 %69, !dbg !48
  %71 = bitcast float %67 to i32, !dbg !49
  %72 = select i1 %17, i32 %25, i32 %71, !dbg !50
  %73 = bitcast float %68 to i32, !dbg !49
  %74 = select i1 %17, i32 %26, i32 %73, !dbg !50
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %72, i32 %74, ptr addrspace(1) %70, i1 %12) #1, !dbg !49
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "clhlyjkrc4fzpii667avhniisrbhaxypf6ckoqmwjstzcyajbunw.py", directory: "inductor_cache/lh")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 48, scope: !7)
!22 = !DILocation(line: 33, column: 45, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 60, scope: !7)
!25 = !DILocation(line: 33, column: 53, scope: !7)
!26 = !DILocation(line: 37, column: 18, scope: !7)
!27 = !DILocation(line: 38, column: 40, scope: !7)
!28 = !DILocation(line: 38, column: 56, scope: !7)
!29 = !DILocation(line: 38, column: 36, scope: !7)
!30 = !DILocation(line: 38, column: 53, scope: !7)
!31 = !DILocation(line: 38, column: 31, scope: !7)
!32 = !DILocation(line: 38, column: 68, scope: !7)
!33 = !DILocation(line: 38, column: 61, scope: !7)
!34 = !DILocation(line: 40, column: 20, scope: !7)
!35 = !DILocation(line: 42, column: 20, scope: !7)
!36 = !DILocation(line: 43, column: 35, scope: !7)
!37 = !DILocation(line: 46, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 36, scope: !7)
!39 = !DILocation(line: 49, column: 53, scope: !7)
!40 = !DILocation(line: 49, column: 31, scope: !7)
!41 = !DILocation(line: 49, column: 69, scope: !7)
!42 = !DILocation(line: 49, column: 61, scope: !7)
!43 = !DILocation(line: 51, column: 20, scope: !7)
!44 = !DILocation(line: 53, column: 20, scope: !7)
!45 = !DILocation(line: 54, column: 35, scope: !7)
!46 = !DILocation(line: 56, column: 35, scope: !7)
!47 = !DILocation(line: 0, scope: !7)
!48 = !DILocation(line: 59, column: 25, scope: !7)
!49 = !DILocation(line: 59, column: 37, scope: !7)
!50 = !DILocation(line: 58, column: 33, scope: !7)
!51 = !DILocation(line: 59, column: 4, scope: !7)
