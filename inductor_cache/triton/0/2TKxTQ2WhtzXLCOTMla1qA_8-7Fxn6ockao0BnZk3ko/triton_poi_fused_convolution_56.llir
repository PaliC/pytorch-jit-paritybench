; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_convolution_56(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 10, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = or disjoint i32 %9, 2, !dbg !13
  %12 = or disjoint i32 %9, 3, !dbg !13
  %13 = or disjoint i32 %9, 512, !dbg !13
  %14 = or disjoint i32 %9, 513, !dbg !13
  %15 = or disjoint i32 %9, 514, !dbg !13
  %16 = or disjoint i32 %9, 515, !dbg !13
  %17 = icmp slt i32 %9, 87372, !dbg !14
  %18 = icmp slt i32 %13, 87372, !dbg !14
  %19 = srem i32 %9, 21843, !dbg !15
  %20 = srem i32 %10, 21843, !dbg !15
  %21 = srem i32 %11, 21843, !dbg !15
  %22 = srem i32 %12, 21843, !dbg !15
  %23 = srem i32 %13, 21843, !dbg !15
  %24 = srem i32 %14, 21843, !dbg !15
  %25 = srem i32 %15, 21843, !dbg !15
  %26 = srem i32 %16, 21843, !dbg !15
  %27 = sext i32 %9 to i64, !dbg !16
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !16
  %29 = sext i32 %13 to i64, !dbg !16
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !16
  %31 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %28, i1 %17) #1, !dbg !17
  %32 = extractvalue { i32, i32, i32, i32 } %31, 0, !dbg !17
  %33 = extractvalue { i32, i32, i32, i32 } %31, 1, !dbg !17
  %34 = extractvalue { i32, i32, i32, i32 } %31, 2, !dbg !17
  %35 = extractvalue { i32, i32, i32, i32 } %31, 3, !dbg !17
  %36 = bitcast i32 %32 to float, !dbg !17
  %37 = bitcast i32 %33 to float, !dbg !17
  %38 = bitcast i32 %34 to float, !dbg !17
  %39 = bitcast i32 %35 to float, !dbg !17
  %40 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %30, i1 %18) #1, !dbg !17
  %41 = extractvalue { i32, i32, i32, i32 } %40, 0, !dbg !17
  %42 = extractvalue { i32, i32, i32, i32 } %40, 1, !dbg !17
  %43 = extractvalue { i32, i32, i32, i32 } %40, 2, !dbg !17
  %44 = extractvalue { i32, i32, i32, i32 } %40, 3, !dbg !17
  %45 = bitcast i32 %41 to float, !dbg !17
  %46 = bitcast i32 %42 to float, !dbg !17
  %47 = bitcast i32 %43 to float, !dbg !17
  %48 = bitcast i32 %44 to float, !dbg !17
  %49 = sext i32 %19 to i64, !dbg !18
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !18
  %51 = sext i32 %20 to i64, !dbg !18
  %52 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !18
  %53 = sext i32 %21 to i64, !dbg !18
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !18
  %55 = sext i32 %22 to i64, !dbg !18
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !18
  %57 = sext i32 %23 to i64, !dbg !18
  %58 = getelementptr float, ptr addrspace(1) %1, i64 %57, !dbg !18
  %59 = sext i32 %24 to i64, !dbg !18
  %60 = getelementptr float, ptr addrspace(1) %1, i64 %59, !dbg !18
  %61 = sext i32 %25 to i64, !dbg !18
  %62 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !18
  %63 = sext i32 %26 to i64, !dbg !18
  %64 = getelementptr float, ptr addrspace(1) %1, i64 %63, !dbg !18
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %17) #1, !dbg !19
  %66 = bitcast i32 %65 to float, !dbg !19
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %52, i1 %17) #1, !dbg !19
  %68 = bitcast i32 %67 to float, !dbg !19
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %54, i1 %17) #1, !dbg !19
  %70 = bitcast i32 %69 to float, !dbg !19
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %56, i1 %17) #1, !dbg !19
  %72 = bitcast i32 %71 to float, !dbg !19
  %73 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %58, i1 %18) #1, !dbg !19
  %74 = bitcast i32 %73 to float, !dbg !19
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %18) #1, !dbg !19
  %76 = bitcast i32 %75 to float, !dbg !19
  %77 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %62, i1 %18) #1, !dbg !19
  %78 = bitcast i32 %77 to float, !dbg !19
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %64, i1 %18) #1, !dbg !19
  %80 = bitcast i32 %79 to float, !dbg !19
  %81 = fadd float %36, %66, !dbg !20
  %82 = fadd float %37, %68, !dbg !20
  %83 = fadd float %38, %70, !dbg !20
  %84 = fadd float %39, %72, !dbg !20
  %85 = fadd float %45, %74, !dbg !20
  %86 = fadd float %46, %76, !dbg !20
  %87 = fadd float %47, %78, !dbg !20
  %88 = fadd float %48, %80, !dbg !20
  %89 = bitcast float %81 to i32, !dbg !21
  %90 = bitcast float %82 to i32, !dbg !21
  %91 = bitcast float %83 to i32, !dbg !21
  %92 = bitcast float %84 to i32, !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %89, i32 %90, i32 %91, i32 %92, ptr addrspace(1) %28, i1 %17) #1, !dbg !21
  %93 = bitcast float %85 to i32, !dbg !21
  %94 = bitcast float %86 to i32, !dbg !21
  %95 = bitcast float %87 to i32, !dbg !21
  %96 = bitcast float %88 to i32, !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %93, i32 %94, i32 %95, i32 %96, ptr addrspace(1) %30, i1 %18) #1, !dbg !21
  ret void, !dbg !22
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c4jqgbtfxusma2q3fwc7vd3c32mxqjvqbz23shhiaqomwe7meezu.py", directory: "inductor_cache/4j")
!4 = !{ptr @triton_poi_fused_convolution_56, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_56, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_56", linkageName: "triton_poi_fused_convolution_56", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 18, scope: !7)
!21 = !DILocation(line: 29, column: 39, scope: !7)
!22 = !DILocation(line: 29, column: 4, scope: !7)
