#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__softmax_convolution_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":19:0)) attributes {noinline = false} {
    %c3_i32 = arith.constant 3 : i32 loc(#loc1)
    %cst = arith.constant dense<12288> : tensor<128xi32, #blocked> loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<8192> : tensor<128xi32, #blocked> loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<16384> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.remsi %4, %cst_2 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_2 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.muli %6, %cst_1 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.addi %5, %7 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc10)
    %10 = tt.addptr %9, %8 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc10)
    %11 = tt.load %10 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc12)
    %13 = tt.load %12 : !tt.ptr<f32> loc(#loc13)
    %14 = tt.splat %13 : f32 -> tensor<128xf32, #blocked> loc(#loc14)
    %15 = arith.addi %5, %cst_2 : tensor<128xi32, #blocked> loc(#loc15)
    %16 = arith.addi %15, %7 : tensor<128xi32, #blocked> loc(#loc16)
    %17 = tt.addptr %9, %16 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc17)
    %18 = tt.load %17 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc18)
    %19 = tt.addptr %arg1, %c1_i32 : !tt.ptr<f32>, i32 loc(#loc19)
    %20 = tt.load %19 : !tt.ptr<f32> loc(#loc20)
    %21 = tt.splat %20 : f32 -> tensor<128xf32, #blocked> loc(#loc21)
    %22 = arith.addi %5, %cst_0 : tensor<128xi32, #blocked> loc(#loc22)
    %23 = arith.addi %22, %7 : tensor<128xi32, #blocked> loc(#loc23)
    %24 = tt.addptr %9, %23 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc24)
    %25 = tt.load %24 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc25)
    %26 = tt.addptr %arg1, %c2_i32 : !tt.ptr<f32>, i32 loc(#loc26)
    %27 = tt.load %26 : !tt.ptr<f32> loc(#loc27)
    %28 = tt.splat %27 : f32 -> tensor<128xf32, #blocked> loc(#loc28)
    %29 = arith.addi %5, %cst : tensor<128xi32, #blocked> loc(#loc29)
    %30 = arith.addi %29, %7 : tensor<128xi32, #blocked> loc(#loc30)
    %31 = tt.addptr %9, %30 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc31)
    %32 = tt.load %31 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc32)
    %33 = tt.addptr %arg1, %c3_i32 : !tt.ptr<f32>, i32 loc(#loc33)
    %34 = tt.load %33 : !tt.ptr<f32> loc(#loc34)
    %35 = tt.splat %34 : f32 -> tensor<128xf32, #blocked> loc(#loc35)
    %36 = arith.addf %11, %14 : tensor<128xf32, #blocked> loc(#loc36)
    %37 = arith.addf %18, %21 : tensor<128xf32, #blocked> loc(#loc37)
    %38 = arith.cmpf ogt, %36, %37 : tensor<128xf32, #blocked> loc(#loc63)
    %39 = arith.cmpf une, %36, %36 : tensor<128xf32, #blocked> loc(#loc64)
    %40 = arith.ori %38, %39 : tensor<128xi1, #blocked> loc(#loc65)
    %41 = arith.select %40, %36, %37 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc66)
    %42 = arith.addf %25, %28 : tensor<128xf32, #blocked> loc(#loc43)
    %43 = arith.cmpf ogt, %41, %42 : tensor<128xf32, #blocked> loc(#loc67)
    %44 = arith.cmpf une, %41, %41 : tensor<128xf32, #blocked> loc(#loc68)
    %45 = arith.ori %43, %44 : tensor<128xi1, #blocked> loc(#loc69)
    %46 = arith.select %45, %41, %42 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc70)
    %47 = arith.addf %32, %35 : tensor<128xf32, #blocked> loc(#loc45)
    %48 = arith.cmpf ogt, %46, %47 : tensor<128xf32, #blocked> loc(#loc71)
    %49 = arith.cmpf une, %46, %46 : tensor<128xf32, #blocked> loc(#loc72)
    %50 = arith.ori %48, %49 : tensor<128xi1, #blocked> loc(#loc73)
    %51 = arith.select %50, %46, %47 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc74)
    %52 = arith.subf %36, %51 : tensor<128xf32, #blocked> loc(#loc47)
    %53 = math.exp %52 : tensor<128xf32, #blocked> loc(#loc48)
    %54 = arith.subf %37, %51 : tensor<128xf32, #blocked> loc(#loc49)
    %55 = math.exp %54 : tensor<128xf32, #blocked> loc(#loc50)
    %56 = arith.addf %53, %55 : tensor<128xf32, #blocked> loc(#loc51)
    %57 = arith.subf %42, %51 : tensor<128xf32, #blocked> loc(#loc52)
    %58 = math.exp %57 : tensor<128xf32, #blocked> loc(#loc53)
    %59 = arith.addf %56, %58 : tensor<128xf32, #blocked> loc(#loc54)
    %60 = arith.subf %47, %51 : tensor<128xf32, #blocked> loc(#loc55)
    %61 = math.exp %60 : tensor<128xf32, #blocked> loc(#loc56)
    %62 = arith.addf %59, %61 : tensor<128xf32, #blocked> loc(#loc57)
    %63 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc58)
    %64 = tt.addptr %63, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc58)
    tt.store %64, %51 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc59)
    %65 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc60)
    %66 = tt.addptr %65, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc60)
    tt.store %66, %62 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc61)
    tt.return loc(#loc62)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":21:28)
#loc3 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":21:33)
#loc4 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":22:36)
#loc5 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":22:23)
#loc6 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":24:19)
#loc7 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":25:19)
#loc8 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":27:41)
#loc9 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":27:35)
#loc10 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":27:30)
#loc11 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":27:46)
#loc12 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":28:30)
#loc13 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":28:19)
#loc14 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":29:33)
#loc15 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":30:37)
#loc16 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":30:42)
#loc17 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":30:30)
#loc18 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":30:53)
#loc19 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":31:30)
#loc20 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":31:19)
#loc21 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":32:33)
#loc22 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":33:37)
#loc23 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":33:42)
#loc24 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":33:30)
#loc25 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":33:53)
#loc26 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":34:31)
#loc27 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":34:20)
#loc28 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":35:35)
#loc29 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":36:39)
#loc30 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":36:44)
#loc31 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":36:31)
#loc32 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":36:55)
#loc33 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":37:31)
#loc34 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":37:20)
#loc35 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":38:35)
#loc36 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":39:18)
#loc37 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":40:18)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc39 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":41:40)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc43 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":42:19)
#loc44 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":43:41)
#loc45 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":44:20)
#loc46 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":45:42)
#loc47 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":46:19)
#loc48 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":47:24)
#loc49 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":48:19)
#loc50 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":49:24)
#loc51 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":50:20)
#loc52 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":51:20)
#loc53 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":52:24)
#loc54 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":53:20)
#loc55 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":54:20)
#loc56 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":55:24)
#loc57 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":56:20)
#loc58 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":57:25)
#loc59 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":57:37)
#loc60 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":58:25)
#loc61 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":58:37)
#loc62 = loc("inductor_cache/r6/cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py":58:4)
#loc63 = loc(callsite(#loc38 at #loc39))
#loc64 = loc(callsite(#loc40 at #loc39))
#loc65 = loc(callsite(#loc41 at #loc39))
#loc66 = loc(callsite(#loc42 at #loc39))
#loc67 = loc(callsite(#loc38 at #loc44))
#loc68 = loc(callsite(#loc40 at #loc44))
#loc69 = loc(callsite(#loc41 at #loc44))
#loc70 = loc(callsite(#loc42 at #loc44))
#loc71 = loc(callsite(#loc38 at #loc46))
#loc72 = loc(callsite(#loc40 at #loc46))
#loc73 = loc(callsite(#loc41 at #loc46))
#loc74 = loc(callsite(#loc42 at #loc46))
