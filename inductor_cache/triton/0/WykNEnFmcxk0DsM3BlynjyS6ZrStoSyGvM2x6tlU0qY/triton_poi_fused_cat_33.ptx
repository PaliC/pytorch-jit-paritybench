//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_33 // -- Begin function triton_poi_fused_cat_33
                                        // @triton_poi_fused_cat_33
.visible .entry triton_poi_fused_cat_33(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_33_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_33_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_33_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_33_param_3,
	.param .u32 triton_poi_fused_cat_33_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<29>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<66>;
	.loc	1 19 0                          // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:19:0

// %bb.0:
	ld.param.u64 	%rd21, [triton_poi_fused_cat_33_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_cat_33_param_1];
$L__tmp0:
	.loc	1 21 28                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:21:33
	shl.b32 	%r22, %r1, 9;
	ld.param.u64 	%rd22, [triton_poi_fused_cat_33_param_2];
	ld.param.u64 	%rd23, [triton_poi_fused_cat_33_param_3];
	.loc	1 22 36                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 2;
	and.b32  	%r25, %r24, 508;
	.loc	1 22 23                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:22:23
	or.b32  	%r26, %r22, %r25;
	or.b32  	%r27, %r22, 2;
	.loc	1 24 21                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:24:21
	bfe.s32 	%r28, %r1, 22, 1;
	shr.u32 	%r29, %r28, 28;
	add.s32 	%r30, %r26, %r29;
	shr.s32 	%r31, %r30, 4;
	.loc	1 24 27                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:24:27
	mul.hi.s32 	%r32, %r31, 715827883;
	shr.u32 	%r33, %r32, 31;
	shr.u32 	%r34, %r32, 7;
	add.s32 	%r35, %r34, %r33;
	mul.lo.s32 	%r36, %r35, 768;
	sub.s32 	%r37, %r31, %r36;
	.loc	1 25 19                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:25:19
	mul.hi.s32 	%r39, %r26, 715827883;
	shr.u32 	%r40, %r39, 31;
	shr.s32 	%r41, %r39, 11;
	add.s32 	%r42, %r41, %r40;
	.loc	1 27 21                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:27:21
	shr.s32 	%r43, %r26, 2;
	.loc	1 27 26                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:27:26
	shr.u32 	%r44, %r43, 30;
	add.s32 	%r45, %r43, %r44;
	and.b32  	%r46, %r45, -4;
	sub.s32 	%r47, %r43, %r46;
	.loc	1 28 19                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:28:19
	shr.u32 	%r48, %r28, 30;
	add.s32 	%r49, %r27, %r48;
	and.b32  	%r50, %r49, -508;
	sub.s32 	%r51, %r27, %r50;
	.loc	1 34 18                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:34:18
	setp.lt.s32 	%p1, %r37, 256;
	.loc	1 35 35                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:35:35
	mul.lo.s32 	%r52, %r42, 12288;
	sub.s32 	%r53, %r26, %r52;
	.loc	1 35 50                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:35:50
	shl.b32 	%r54, %r42, 12;
	.loc	1 35 45                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:35:45
	add.s32 	%r55, %r54, %r53;
	.loc	1 35 30                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:35:30
	mul.wide.s32 	%rd24, %r55, 4;
	add.s64 	%rd1, %rd21, %rd24;
	mov.b32 	%r6, 0;
	.loc	1 35 55                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:35:55
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 36 19                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:36:19
	setp.gt.s32 	%p6, %r37, 255;
	.loc	1 39 30                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:39:30
	mul.wide.s32 	%rd25, %r47, 8;
	add.s64 	%rd3, %rd12, %rd25;
	.loc	1 39 35                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:39:35
	// begin inline asm
	mov.u64 %rd2, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd2 }, [ %rd3 + 0 ];
	@!%p6 mov.u64 %rd2, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd4, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd4 }, [ %rd3 + 0 ];
	@!%p6 mov.u64 %rd4, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd6, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd6 }, [ %rd3 + 0 ];
	@!%p6 mov.u64 %rd6, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd8, 0x0;
	@%p6 ld.global.L1::evict_last.b64 { %rd8 }, [ %rd3 + 0 ];
	@!%p6 mov.u64 %rd8, 0x0;
	// end inline asm
	.loc	1 43 35                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:43:35
	shr.u64 	%rd26, %rd2, 62;
	and.b64  	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd27, %rd2;
	.loc	1 44 31                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:44:31
	mul.wide.s32 	%rd29, %r51, 8;
	add.s64 	%rd15, %rd12, %rd29;
	.loc	1 44 36                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:44:36
	// begin inline asm
	mov.u64 %rd10, 0x0;
	mov.u64 %rd11, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b64 { %rd10, %rd11 }, [ %rd12 + 0 ];
	@!%p6 mov.u64 %rd10, 0x0;
	@!%p6 mov.u64 %rd11, 0x0;
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, 0x0;
	mov.u64 %rd14, 0x0;
	@%p6 ld.global.L1::evict_last.v2.b64 { %rd13, %rd14 }, [ %rd15 + 0 ];
	@!%p6 mov.u64 %rd13, 0x0;
	@!%p6 mov.u64 %rd14, 0x0;
	// end inline asm
	.loc	1 48 52                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:48:52
	shl.b32 	%r56, %r37, 2;
	.loc	1 48 72                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:48:72
	shl.b32 	%r57, %r42, 11;
	.loc	1 48 31                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:48:31
	shl.b64 	%rd30, %rd10, 2;
	add.s64 	%rd31, %rd22, %rd30;
	shr.u64 	%rd32, %rd10, 60;
	and.b64  	%rd33, %rd32, 8;
	add.s64 	%rd34, %rd31, %rd33;
	shl.b64 	%rd35, %rd28, 3;
	add.s64 	%rd36, %rd34, %rd35;
	mul.wide.s32 	%rd37, %r56, 4;
	add.s64 	%rd38, %rd36, %rd37;
	mul.wide.s32 	%rd39, %r57, 4;
	add.s64 	%rd40, %rd38, %rd39;
	add.s64 	%rd16, %rd40, -4096;
	shl.b64 	%rd41, %rd11, 2;
	add.s64 	%rd42, %rd22, %rd41;
	shr.u64 	%rd43, %rd11, 60;
	and.b64  	%rd44, %rd43, 8;
	add.s64 	%rd45, %rd42, %rd44;
	add.s64 	%rd46, %rd45, %rd35;
	add.s64 	%rd47, %rd46, %rd37;
	add.s64 	%rd48, %rd47, %rd39;
	add.s64 	%rd17, %rd48, -4096;
	shl.b64 	%rd49, %rd13, 2;
	add.s64 	%rd50, %rd22, %rd49;
	shr.u64 	%rd51, %rd13, 60;
	and.b64  	%rd52, %rd51, 8;
	add.s64 	%rd53, %rd50, %rd52;
	add.s64 	%rd54, %rd53, %rd35;
	add.s64 	%rd55, %rd54, %rd37;
	add.s64 	%rd56, %rd55, %rd39;
	add.s64 	%rd18, %rd56, -4096;
	shl.b64 	%rd57, %rd14, 2;
	add.s64 	%rd58, %rd22, %rd57;
	shr.u64 	%rd59, %rd14, 60;
	and.b64  	%rd60, %rd59, 8;
	add.s64 	%rd61, %rd58, %rd60;
	add.s64 	%rd62, %rd61, %rd35;
	add.s64 	%rd63, %rd62, %rd37;
	add.s64 	%rd64, %rd63, %rd39;
	add.s64 	%rd19, %rd64, -4096;
	.loc	1 48 77                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:48:77
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r10 }, [ %rd16 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd17 + 0 ];
	@!%p6 mov.u32 %r12, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r14 }, [ %rd18 + 0 ];
	@!%p6 mov.u32 %r14, %r6;
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r16 }, [ %rd19 + 0 ];
	@!%p6 mov.u32 %r16, %r6;
	// end inline asm
	.loc	1 49 33                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:49:33
	selp.b32 	%r18, %r2, %r10, %p1;
	selp.b32 	%r19, %r3, %r12, %p1;
	selp.b32 	%r20, %r4, %r14, %p1;
	selp.b32 	%r21, %r5, %r16, %p1;
	.loc	1 50 25                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:50:25
	mul.wide.s32 	%rd65, %r26, 4;
	add.s64 	%rd20, %rd23, %rd65;
	mov.pred 	%p28, -1;
	.loc	1 50 37                         // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:50:37
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd20 + 0 ], { %r18, %r19, %r20, %r21 };
	// end inline asm
	.loc	1 50 4                          // c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py:50:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/5g/c5goy7f2pxmdvds2ct7cws7w65jcu7a3iff7qt7a7csebpu3h5cp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 103
.b8 111
.b8 121
.b8 55
.b8 102
.b8 50
.b8 112
.b8 120
.b8 109
.b8 100
.b8 118
.b8 100
.b8 115
.b8 50
.b8 99
.b8 116
.b8 55
.b8 99
.b8 119
.b8 115
.b8 55
.b8 119
.b8 54
.b8 53
.b8 106
.b8 99
.b8 117
.b8 55
.b8 97
.b8 51
.b8 105
.b8 102
.b8 102
.b8 55
.b8 113
.b8 116
.b8 55
.b8 97
.b8 55
.b8 99
.b8 115
.b8 101
.b8 98
.b8 112
.b8 117
.b8 51
.b8 104
.b8 53
.b8 99
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 103
.b8 0
	}
	.section	.debug_macinfo	{	}
