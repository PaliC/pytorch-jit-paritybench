#loc = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":38:37)
#loc31 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":45:26)
#loc43 = loc(callsite(#loc1 at #loc20))
#loc49 = loc(callsite(#loc1 at #loc31))
module {
  tt.func public @triton_per_fused__softmax_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0), %arg3: i32 loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3488> : tensor<128x1xi32> loc(#loc1)
    %cst_0 = arith.constant dense<1.250000e-01> : tensor<128x32xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0xFF800000> : tensor<128x32xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<128x32xf32> loc(#loc1)
    %cst_3 = arith.constant dense<17> : tensor<128x1xi32> loc(#loc1)
    %cst_4 = arith.constant dense<204> : tensor<128x1xi32> loc(#loc1)
    %cst_5 = arith.constant dense<17> : tensor<1x32xi32> loc(#loc1)
    %cst_6 = arith.constant dense<816> : tensor<128x1xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<128x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<128x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_6 : tensor<128x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_5 : tensor<1x32xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_4 : tensor<128x1xi32> loc(#loc11)
    %11 = arith.divsi %5, %cst_4 : tensor<128x1xi32> loc(#loc12)
    %12 = arith.muli %5, %cst_3 : tensor<128x1xi32> loc(#loc13)
    %13 = tt.broadcast %8 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc14)
    %14 = tt.broadcast %12 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc14)
    %15 = arith.addi %13, %14 : tensor<128x32xi32> loc(#loc14)
    %16 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %15 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc15)
    %18 = tt.broadcast %9 : tensor<1x32xi1> -> tensor<128x32xi1> loc(#loc16)
    %19 = tt.broadcast %6 : tensor<128x1xi1> -> tensor<128x32xi1> loc(#loc16)
    %20 = arith.andi %18, %19 : tensor<128x32xi1> loc(#loc16)
    %21 = tt.load %17, %20, %cst_2 : tensor<128x32x!tt.ptr<f32>> loc(#loc17)
    %22 = arith.select %20, %21, %cst_1 : tensor<128x32xi1>, tensor<128x32xf32> loc(#loc18)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc20)), %arg5: f32 loc(callsite(#loc1 at #loc20))):
      %42 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc51)
      %43 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc52)
      %44 = arith.ori %42, %43 : i1 loc(#loc53)
      %45 = arith.select %44, %arg4, %arg5 : f32 loc(#loc54)
      tt.reduce.return %45 : f32 loc(#loc42)
    }) : (tensor<128x32xf32>) -> tensor<128xf32> loc(#loc42)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc25)
    %25 = tt.broadcast %24 : tensor<128x1xf32> -> tensor<128x32xf32> loc(#loc26)
    %26 = arith.subf %21, %25 : tensor<128x32xf32> loc(#loc26)
    %27 = arith.mulf %26, %cst_0 : tensor<128x32xf32> loc(#loc27)
    %28 = math.exp %27 : tensor<128x32xf32> loc(#loc28)
    %29 = arith.select %20, %28, %cst_2 : tensor<128x32xi1>, tensor<128x32xf32> loc(#loc29)
    %30 = "tt.reduce"(%29) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc31)), %arg5: f32 loc(callsite(#loc1 at #loc31))):
      %42 = arith.addf %arg4, %arg5 : f32 loc(#loc55)
      tt.reduce.return %42 : f32 loc(#loc48)
    }) : (tensor<128x32xf32>) -> tensor<128xf32> loc(#loc48)
    %31 = tt.expand_dims %30 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc33)
    %32 = tt.broadcast %31 : tensor<128x1xf32> -> tensor<128x32xf32> loc(#loc34)
    %33 = arith.divf %28, %32 : tensor<128x32xf32> loc(#loc34)
    %34 = arith.muli %10, %cst_3 : tensor<128x1xi32> loc(#loc35)
    %35 = tt.broadcast %34 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc36)
    %36 = arith.addi %13, %35 : tensor<128x32xi32> loc(#loc36)
    %37 = arith.muli %11, %cst : tensor<128x1xi32> loc(#loc37)
    %38 = tt.broadcast %37 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc38)
    %39 = arith.addi %36, %38 : tensor<128x32xi32> loc(#loc38)
    %40 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc39)
    %41 = tt.addptr %40, %39 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc39)
    tt.store %41, %33, %20 : tensor<128x32x!tt.ptr<f32>> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":23:28)
#loc3 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":23:33)
#loc4 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":24:36)
#loc5 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":24:44)
#loc6 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":24:23)
#loc7 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":25:21)
#loc8 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":26:26)
#loc9 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":26:34)
#loc10 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":28:21)
#loc11 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":31:19)
#loc12 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":32:19)
#loc13 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:38)
#loc14 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:35)
#loc15 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:30)
#loc16 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:51)
#loc17 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":33:43)
#loc18 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":37:41)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc25 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":38:40)
#loc26 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":39:18)
#loc27 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":41:18)
#loc28 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":42:24)
#loc29 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":44:43)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc33 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":45:29)
#loc34 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":46:20)
#loc35 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:33)
#loc36 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:30)
#loc37 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:43)
#loc38 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:38)
#loc39 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:25)
#loc40 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:55)
#loc41 = loc("inductor_cache/lf/clffunojwetdne43dccnw7oezn4hxgmc23e52s7co43dasizgtrc.py":47:4)
#loc42 = loc(callsite(#loc19 at #loc20))
#loc44 = loc(callsite(#loc21 at #loc19))
#loc45 = loc(callsite(#loc22 at #loc19))
#loc46 = loc(callsite(#loc23 at #loc19))
#loc47 = loc(callsite(#loc24 at #loc19))
#loc48 = loc(callsite(#loc30 at #loc31))
#loc50 = loc(callsite(#loc32 at #loc30))
#loc51 = loc(callsite(#loc44 at #loc20))
#loc52 = loc(callsite(#loc45 at #loc20))
#loc53 = loc(callsite(#loc46 at #loc20))
#loc54 = loc(callsite(#loc47 at #loc20))
#loc55 = loc(callsite(#loc50 at #loc31))
