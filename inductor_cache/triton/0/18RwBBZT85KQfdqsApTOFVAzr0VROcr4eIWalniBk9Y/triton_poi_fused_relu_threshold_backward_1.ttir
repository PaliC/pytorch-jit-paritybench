#loc = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":19:0)
module {
  tt.func public @triton_poi_fused_relu_threshold_backward_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":19:0), %arg1: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<1024xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<1024xi32> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<1024x!tt.ptr<f32>>, tensor<1024xi32> loc(#loc6)
    %7 = tt.load %6 : tensor<1024x!tt.ptr<f32>> loc(#loc7)
    %8 = arith.cmpf ogt, %cst, %7 : tensor<1024xf32> loc(#loc15)
    %9 = arith.select %8, %cst, %7 : tensor<1024xi1>, tensor<1024xf32> loc(#loc16)
    %10 = arith.cmpf ole, %9, %cst : tensor<1024xf32> loc(#loc11)
    %11 = tt.splat %arg1 : !tt.ptr<i1> -> tensor<1024x!tt.ptr<i1>> loc(#loc12)
    %12 = tt.addptr %11, %4 : tensor<1024x!tt.ptr<i1>>, tensor<1024xi32> loc(#loc12)
    %13 = tt.bitcast %12 : tensor<1024x!tt.ptr<i1>> -> tensor<1024x!tt.ptr<i8>> loc(#loc13)
    %14 = arith.extui %10 : tensor<1024xi1> to tensor<1024xi8> loc(#loc13)
    tt.store %13, %14 : tensor<1024x!tt.ptr<i8>> loc(#loc13)
    tt.return loc(#loc14)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":21:28)
#loc3 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":21:33)
#loc4 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":22:36)
#loc5 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":22:23)
#loc6 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":25:30)
#loc7 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":25:35)
#loc8 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc9 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":27:40)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc11 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":29:19)
#loc12 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":30:25)
#loc13 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":30:36)
#loc14 = loc("inductor_cache/i3/ci3pkhutzsjztg7dcyyikhnaffkokhxrce7fnkbmpotjf6rklyfj.py":30:4)
#loc15 = loc(callsite(#loc8 at #loc9))
#loc16 = loc(callsite(#loc10 at #loc9))
