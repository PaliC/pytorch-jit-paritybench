#loc = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":19:0)
module {
  tt.func public @triton_poi_fused__softmax_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<768> : tensor<128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<512> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<1024> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_2 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_1 : tensor<128xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc8)
    %9 = tt.load %8 : tensor<128x!tt.ptr<f32>> loc(#loc9)
    %10 = arith.muli %6, %cst_1 : tensor<128xi32> loc(#loc10)
    %11 = arith.addi %5, %10 : tensor<128xi32> loc(#loc11)
    %12 = tt.addptr %7, %11 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc12)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc13)
    %14 = arith.addi %5, %cst_2 : tensor<128xi32> loc(#loc14)
    %15 = arith.addi %14, %10 : tensor<128xi32> loc(#loc15)
    %16 = tt.addptr %7, %15 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc16)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc17)
    %18 = arith.addi %5, %cst_0 : tensor<128xi32> loc(#loc18)
    %19 = arith.addi %18, %10 : tensor<128xi32> loc(#loc19)
    %20 = tt.addptr %7, %19 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc20)
    %21 = tt.load %20 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc21)
    %22 = arith.addi %5, %cst : tensor<128xi32> loc(#loc22)
    %23 = arith.addi %22, %10 : tensor<128xi32> loc(#loc23)
    %24 = tt.addptr %7, %23 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc24)
    %25 = tt.load %24 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc25)
    %26 = arith.cmpf ogt, %13, %17 : tensor<128xf32> loc(#loc38)
    %27 = arith.cmpf une, %13, %13 : tensor<128xf32> loc(#loc39)
    %28 = arith.ori %26, %27 : tensor<128xi1> loc(#loc40)
    %29 = arith.select %28, %13, %17 : tensor<128xi1>, tensor<128xf32> loc(#loc41)
    %30 = arith.cmpf ogt, %29, %21 : tensor<128xf32> loc(#loc42)
    %31 = arith.cmpf une, %29, %29 : tensor<128xf32> loc(#loc43)
    %32 = arith.ori %30, %31 : tensor<128xi1> loc(#loc44)
    %33 = arith.select %32, %29, %21 : tensor<128xi1>, tensor<128xf32> loc(#loc45)
    %34 = arith.cmpf ogt, %33, %25 : tensor<128xf32> loc(#loc46)
    %35 = arith.cmpf une, %33, %33 : tensor<128xf32> loc(#loc47)
    %36 = arith.ori %34, %35 : tensor<128xi1> loc(#loc48)
    %37 = arith.select %36, %33, %25 : tensor<128xi1>, tensor<128xf32> loc(#loc49)
    %38 = arith.subf %9, %37 : tensor<128xf32> loc(#loc33)
    %39 = math.exp %38 : tensor<128xf32> loc(#loc34)
    %40 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc35)
    %41 = tt.addptr %40, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc35)
    tt.store %41, %39 : tensor<128x!tt.ptr<f32>> loc(#loc36)
    tt.return loc(#loc37)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":21:28)
#loc3 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":21:33)
#loc4 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":22:36)
#loc5 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":22:23)
#loc6 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":25:19)
#loc7 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":26:19)
#loc8 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":27:30)
#loc9 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":27:35)
#loc10 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":28:40)
#loc11 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":28:35)
#loc12 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":28:30)
#loc13 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":28:45)
#loc14 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":29:36)
#loc15 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":29:41)
#loc16 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":29:30)
#loc17 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":29:51)
#loc18 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":30:36)
#loc19 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":30:41)
#loc20 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":30:30)
#loc21 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":30:51)
#loc22 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":31:36)
#loc23 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":31:41)
#loc24 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":31:30)
#loc25 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":31:51)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc27 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":32:40)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc31 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":33:40)
#loc32 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":34:40)
#loc33 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":35:18)
#loc34 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":36:23)
#loc35 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":37:25)
#loc36 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":37:36)
#loc37 = loc("inductor_cache/pk/cpkhemc34sp7qmbmmulvf4u647ap3366pbputbkbcml75xb7qpjg.py":37:4)
#loc38 = loc(callsite(#loc26 at #loc27))
#loc39 = loc(callsite(#loc28 at #loc27))
#loc40 = loc(callsite(#loc29 at #loc27))
#loc41 = loc(callsite(#loc30 at #loc27))
#loc42 = loc(callsite(#loc26 at #loc31))
#loc43 = loc(callsite(#loc28 at #loc31))
#loc44 = loc(callsite(#loc29 at #loc31))
#loc45 = loc(callsite(#loc30 at #loc31))
#loc46 = loc(callsite(#loc26 at #loc32))
#loc47 = loc(callsite(#loc28 at #loc32))
#loc48 = loc(callsite(#loc29 at #loc32))
#loc49 = loc(callsite(#loc30 at #loc32))
