//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_max_pool2d_with_indices_20 // -- Begin function triton_poi_fused_max_pool2d_with_indices_20
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_max_pool2d_with_indices_20
.visible .entry triton_poi_fused_max_pool2d_with_indices_20(
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_pool2d_with_indices_20_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_pool2d_with_indices_20_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_max_pool2d_with_indices_20_param_2,
	.param .u32 triton_poi_fused_max_pool2d_with_indices_20_param_3,
	.param .u32 triton_poi_fused_max_pool2d_with_indices_20_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<51>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<117>;
	.reg .f32 	%f<33>;
	.reg .b64 	%rd<40>;
	.loc	1 19 0                          // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:19:0

// %bb.0:
	ld.param.u64 	%rd19, [triton_poi_fused_max_pool2d_with_indices_20_param_0];
	ld.param.u64 	%rd20, [triton_poi_fused_max_pool2d_with_indices_20_param_1];
$L__tmp0:
	.loc	1 22 28                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:22:33
	shl.b32 	%r36, %r1, 3;
	ld.param.u64 	%rd21, [triton_poi_fused_max_pool2d_with_indices_20_param_2];
	.loc	1 23 44                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:23:44
	mov.u32 	%r37, %tid.x;
	and.b32  	%r39, %r37, 64;
	bfe.u32 	%r40, %r37, 6, 1;
	shl.b32 	%r41, %r37, 2;
	and.b32  	%r42, %r41, 4;
	.loc	1 23 23                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:23:23
	or.b32  	%r43, %r36, %r40;
	or.b32  	%r44, %r36, %r42;
	.loc	1 25 28                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:25:33
	shl.b32 	%r45, %r2, 6;
	.loc	1 26 44                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:26:44
	and.b32  	%r46, %r37, 63;
	bfe.u32 	%r47, %r37, 1, 6;
	.loc	1 26 23                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:26:23
	or.b32  	%r48, %r45, %r46;
	or.b32  	%r49, %r45, %r47;
	.loc	1 27 21                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:27:21
	setp.lt.s32 	%p1, %r48, 64;
	setp.lt.s32 	%p21, %r49, 64;
	.loc	1 29 19                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:29:19
	shr.s32 	%r51, %r48, 31;
	shr.u32 	%r52, %r51, 29;
	add.s32 	%r53, %r48, %r52;
	.loc	1 28 19                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:28:19
	and.b32  	%r54, %r53, 2147483640;
	sub.s32 	%r55, %r48, %r54;
	.loc	1 33 19                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:33:19
	bfe.s32 	%r56, %r1, 28, 1;
	shr.u32 	%r57, %r56, 24;
	add.s32 	%r58, %r44, %r57;
	.loc	1 32 19                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:32:19
	and.b32  	%r59, %r58, -256;
	sub.s32 	%r60, %r44, %r59;
	.loc	1 34 32                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:34:32
	shl.b32 	%r61, %r55, 1;
	.loc	1 34 40                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:34:40
	shl.b32 	%r62, %r53, 2;
	and.b32  	%r63, %r62, -32;
	.loc	1 34 37                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:34:37
	add.s32 	%r64, %r61, %r63;
	.loc	1 34 49                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:34:49
	shl.b32 	%r65, %r43, 8;
	or.b32  	%r66, %r65, 512;
	or.b32  	%r67, %r65, 1024;
	or.b32  	%r68, %r65, 1536;
	.loc	1 34 45                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:34:45
	add.s32 	%r69, %r64, %r65;
	add.s32 	%r70, %r64, %r66;
	add.s32 	%r71, %r64, %r67;
	add.s32 	%r72, %r64, %r68;
	.loc	1 34 30                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:34:30
	mul.wide.s32 	%rd22, %r69, 4;
	add.s64 	%rd1, %rd19, %rd22;
	mul.wide.s32 	%rd23, %r70, 4;
	add.s64 	%rd2, %rd19, %rd23;
	mul.wide.s32 	%rd24, %r71, 4;
	add.s64 	%rd3, %rd19, %rd24;
	mul.wide.s32 	%rd25, %r72, 4;
	add.s64 	%rd4, %rd19, %rd25;
	.loc	1 34 54                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:34:54
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 35 41                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:35:41
	or.b32  	%r73, %r64, 1;
	.loc	1 35 49                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:35:49
	add.s32 	%r74, %r73, %r65;
	add.s32 	%r75, %r73, %r66;
	add.s32 	%r76, %r73, %r67;
	add.s32 	%r77, %r73, %r68;
	.loc	1 35 30                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:35:30
	mul.wide.s32 	%rd26, %r74, 4;
	add.s64 	%rd5, %rd19, %rd26;
	mul.wide.s32 	%rd27, %r75, 4;
	add.s64 	%rd6, %rd19, %rd27;
	mul.wide.s32 	%rd28, %r76, 4;
	add.s64 	%rd7, %rd19, %rd28;
	mul.wide.s32 	%rd29, %r77, 4;
	add.s64 	%rd8, %rd19, %rd29;
	.loc	1 35 58                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:35:58
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r10;
	.loc	1 36 42                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:36:42
	add.s32 	%r78, %r64, 16;
	.loc	1 36 50                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:36:50
	add.s32 	%r79, %r78, %r65;
	add.s32 	%r80, %r78, %r66;
	add.s32 	%r81, %r78, %r67;
	add.s32 	%r82, %r78, %r68;
	.loc	1 36 30                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:36:30
	mul.wide.s32 	%rd30, %r79, 4;
	add.s64 	%rd9, %rd19, %rd30;
	mul.wide.s32 	%rd31, %r80, 4;
	add.s64 	%rd10, %rd19, %rd31;
	mul.wide.s32 	%rd32, %r81, 4;
	add.s64 	%rd11, %rd19, %rd32;
	mul.wide.s32 	%rd33, %r82, 4;
	add.s64 	%rd12, %rd19, %rd33;
	.loc	1 36 59                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:36:59
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r11;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd11 + 0 ];
	// end inline asm
	mov.b32 	%f11, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f12, %r14;
	.loc	1 37 42                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:37:42
	add.s32 	%r83, %r64, 17;
	.loc	1 37 50                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:37:50
	add.s32 	%r84, %r83, %r65;
	add.s32 	%r85, %r83, %r66;
	add.s32 	%r86, %r83, %r67;
	add.s32 	%r87, %r83, %r68;
	.loc	1 37 30                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:37:30
	mul.wide.s32 	%rd34, %r84, 4;
	add.s64 	%rd13, %rd19, %rd34;
	mul.wide.s32 	%rd35, %r85, 4;
	add.s64 	%rd14, %rd19, %rd35;
	mul.wide.s32 	%rd36, %r86, 4;
	add.s64 	%rd15, %rd19, %rd36;
	mul.wide.s32 	%rd37, %r87, 4;
	add.s64 	%rd16, %rd19, %rd37;
	.loc	1 37 59                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:37:59
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd14 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r16;
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r17;
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r18;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p27, %f5, %f1;
	setp.gt.f32 	%p28, %f6, %f2;
	setp.gt.f32 	%p29, %f7, %f3;
	setp.gt.f32 	%p30, %f8, %f4;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p31, %f5, %f5;
	setp.nan.f32 	%p32, %f6, %f6;
	setp.nan.f32 	%p33, %f7, %f7;
	setp.nan.f32 	%p34, %f8, %f8;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f17, %f5, %f1, %p31;
	selp.f32 	%f18, %f5, %f17, %p27;
	selp.f32 	%f19, %f6, %f2, %p32;
	selp.f32 	%f20, %f6, %f19, %p28;
	selp.f32 	%f21, %f7, %f3, %p33;
	selp.f32 	%f22, %f7, %f21, %p29;
	selp.f32 	%f23, %f8, %f4, %p34;
	selp.f32 	%f24, %f8, %f23, %p30;
$L__tmp2:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p35, %f18, %f9;
	setp.lt.f32 	%p36, %f20, %f10;
	setp.lt.f32 	%p37, %f22, %f11;
	setp.lt.f32 	%p38, %f24, %f12;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p39, %f9, %f9;
	setp.nan.f32 	%p40, %f10, %f10;
	setp.nan.f32 	%p41, %f11, %f11;
	setp.nan.f32 	%p42, %f12, %f12;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, %f9, %f18, %p39;
	selp.f32 	%f26, %f9, %f25, %p35;
	selp.f32 	%f27, %f10, %f20, %p40;
	selp.f32 	%f28, %f10, %f27, %p36;
	selp.f32 	%f29, %f11, %f22, %p41;
	selp.f32 	%f30, %f11, %f29, %p37;
	selp.f32 	%f31, %f12, %f24, %p42;
	selp.f32 	%f32, %f12, %f31, %p38;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p43, %f26, %f13;
	setp.lt.f32 	%p44, %f28, %f14;
	setp.lt.f32 	%p45, %f30, %f15;
	setp.lt.f32 	%p46, %f32, %f16;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p47, %f13, %f13;
	setp.nan.f32 	%p48, %f14, %f14;
	setp.nan.f32 	%p49, %f15, %f15;
	setp.nan.f32 	%p50, %f16, %f16;
$L__tmp4:
	.loc	1 44 33                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:44:33
	selp.u16 	%rs5, 1, 0, %p27;
	selp.u16 	%rs6, 1, 0, %p28;
	selp.u16 	%rs7, 1, 0, %p29;
	selp.u16 	%rs8, 1, 0, %p30;
	.loc	1 47 35                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:47:35
	selp.b16 	%rs9, 2, %rs5, %p35;
	selp.b16 	%rs10, 2, %rs6, %p36;
	selp.b16 	%rs11, 2, %rs7, %p37;
	selp.b16 	%rs12, 2, %rs8, %p38;
	.loc	1 50 35                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:50:35
	selp.b16 	%rs1, 3, %rs9, %p43;
	selp.b16 	%rs2, 3, %rs10, %p44;
	selp.b16 	%rs3, 3, %rs11, %p45;
	selp.b16 	%rs4, 3, %rs12, %p46;
	.loc	1 51 34                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:34
	shl.b32 	%r88, %r49, 8;
	.loc	1 51 30                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:30
	add.s32 	%r89, %r88, %r60;
	.loc	1 51 45                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:45
	shl.b32 	%r90, %r58, 6;
	and.b32  	%r91, %r90, -16384;
	.loc	1 51 39                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:39
	add.s32 	%r92, %r89, %r91;
	.loc	1 51 25                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:25
	cvt.s64.s32 	%rd38, %r92;
	mul.wide.s32 	%rd39, %r92, 4;
	add.s64 	%rd17, %rd20, %rd39;
	.loc	1 51 56                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:56
	shl.b32 	%r93, %r37, 3;
	and.b32  	%r94, %r93, 504;
	or.b32  	%r95, %r94, %r40;
	and.b32  	%r96, %r41, 252;
	shl.b32 	%r97, %r39, 2;
	or.b32  	%r98, %r96, %r97;
	shr.u32 	%r99, %r94, 1;
	add.s32 	%r100, %r99, %r95;
	shl.b32 	%r101, %r100, 2;
	mov.u32 	%r102, global_smem;
	add.s32 	%r19, %r102, %r101;
	mov.b32 	%r103, %f26;
$L__tmp5:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r104, %r15, %r103, %p47;
	selp.b32 	%r20, %r15, %r104, %p43;
	mov.pred 	%p17, -1;
$L__tmp6:
	.loc	1 51 56                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:56
	// begin inline asm
	@%p17 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r19, 8;
	mov.b32 	%r105, %f28;
$L__tmp7:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r106, %r16, %r105, %p48;
	selp.b32 	%r22, %r16, %r106, %p44;
$L__tmp8:
	.loc	1 51 56                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:56
	// begin inline asm
	@%p17 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r19, 16;
	mov.b32 	%r107, %f30;
$L__tmp9:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r108, %r17, %r107, %p49;
	selp.b32 	%r24, %r17, %r108, %p45;
$L__tmp10:
	.loc	1 51 56                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:56
	// begin inline asm
	@%p17 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r19, 24;
	mov.b32 	%r109, %f32;
$L__tmp11:
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r110, %r18, %r109, %p50;
	selp.b32 	%r26, %r18, %r110, %p46;
$L__tmp12:
	.loc	1 51 56                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:51:56
	// begin inline asm
	@%p17 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r111, %r98, 1;
	and.b32  	%r112, %r111, 252;
	add.s32 	%r113, %r112, %r98;
	shl.b32 	%r114, %r113, 2;
	add.s32 	%r115, %r102, %r114;
	ld.shared.v4.u32 	{%r27, %r28, %r29, %r30}, [%r115];
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd17 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	.loc	1 52 25                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:52:25
	add.s64 	%rd18, %rd21, %rd38;
	.loc	1 52 57                         // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:52:57
	bar.sync 	0;
	add.s32 	%r31, %r102, %r100;
	// begin inline asm
	@%p17 st.shared.b8 [ %r31 + 0 ], %rs1;
	// end inline asm
	add.s32 	%r32, %r31, 2;
	// begin inline asm
	@%p17 st.shared.b8 [ %r32 + 0 ], %rs2;
	// end inline asm
	add.s32 	%r33, %r31, 4;
	// begin inline asm
	@%p17 st.shared.b8 [ %r33 + 0 ], %rs3;
	// end inline asm
	add.s32 	%r34, %r31, 6;
	// begin inline asm
	@%p17 st.shared.b8 [ %r34 + 0 ], %rs4;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r116, %r102, %r113;
	ld.shared.u32 	%r35, [%r116];
	// begin inline asm
	@%p21 st.global.b32 [ %rd18 + 0 ], { %r35 };
	// end inline asm
	.loc	1 52 4                          // ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py:52:4
	ret;
$L__tmp13:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ib/ciblhlcbdclcyagfffgmvt4eozwaqmdevqc4rfhfxrgmdfxxxr6h.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 236                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 98
.b8 108
.b8 104
.b8 108
.b8 99
.b8 98
.b8 100
.b8 99
.b8 108
.b8 99
.b8 121
.b8 97
.b8 103
.b8 102
.b8 102
.b8 102
.b8 103
.b8 109
.b8 118
.b8 116
.b8 52
.b8 101
.b8 111
.b8 122
.b8 119
.b8 97
.b8 113
.b8 109
.b8 100
.b8 101
.b8 118
.b8 113
.b8 99
.b8 52
.b8 114
.b8 102
.b8 104
.b8 102
.b8 120
.b8 114
.b8 103
.b8 109
.b8 100
.b8 102
.b8 120
.b8 120
.b8 120
.b8 114
.b8 54
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 97
.b8 120
.b8 95
.b8 112
.b8 111
.b8 111
.b8 108
.b8 50
.b8 100
.b8 95
.b8 119
.b8 105
.b8 116
.b8 104
.b8 95
.b8 105
.b8 110
.b8 100
.b8 105
.b8 99
.b8 101
.b8 115
.b8 95
.b8 50
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x91:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbe:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
