; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_1(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 5, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = lshr i32 %6, 2, !dbg !12
  %8 = and i32 %7, 31, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %11 = shl i32 %6, 2, !dbg !15
  %12 = and i32 %11, 12, !dbg !15
  %13 = shl i32 %9, 4, !dbg !16
  %14 = or disjoint i32 %13, %12, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %16, i1 %10, i32 0, i1 %10, i32 0, i1 %10, i32 0, i1 %10, i32 0, i1 %10) #2, !dbg !19
  %18 = extractvalue { i32, i32, i32, i32 } %17, 0, !dbg !19
  %19 = extractvalue { i32, i32, i32, i32 } %17, 1, !dbg !19
  %20 = extractvalue { i32, i32, i32, i32 } %17, 2, !dbg !19
  %21 = extractvalue { i32, i32, i32, i32 } %17, 3, !dbg !19
  %22 = bitcast i32 %18 to float, !dbg !19
  %23 = bitcast i32 %19 to float, !dbg !19
  %24 = bitcast i32 %20 to float, !dbg !19
  %25 = bitcast i32 %21 to float, !dbg !19
  %26 = select i1 %10, float %22, float 0xFFF0000000000000, !dbg !20
  %27 = select i1 %10, float %23, float 0xFFF0000000000000, !dbg !20
  %28 = select i1 %10, float %24, float 0xFFF0000000000000, !dbg !20
  %29 = select i1 %10, float %25, float 0xFFF0000000000000, !dbg !20
  %30 = fcmp ogt float %26, %27, !dbg !21
  %31 = fcmp uno float %26, 0.000000e+00, !dbg !26
  %32 = or i1 %30, %31, !dbg !27
  %33 = select i1 %32, float %26, float %27, !dbg !28
  %34 = fcmp ogt float %33, %28, !dbg !21
  %35 = fcmp uno float %33, 0.000000e+00, !dbg !26
  %36 = or i1 %34, %35, !dbg !27
  %37 = select i1 %36, float %33, float %28, !dbg !28
  %38 = fcmp ogt float %37, %29, !dbg !21
  %39 = fcmp uno float %37, 0.000000e+00, !dbg !26
  %40 = or i1 %38, %39, !dbg !27
  %41 = select i1 %40, float %37, float %29, !dbg !28
  %42 = bitcast float %41 to i32, !dbg !29
  %43 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %42, i32 2, i32 31), !dbg !29
  %44 = bitcast i32 %43 to float, !dbg !29
  %45 = fcmp ogt float %41, %44, !dbg !21
  %46 = fcmp uno float %41, 0.000000e+00, !dbg !26
  %47 = or i1 %45, %46, !dbg !27
  %48 = select i1 %47, float %41, float %44, !dbg !28
  %49 = bitcast float %48 to i32, !dbg !29
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 1, i32 31), !dbg !29
  %51 = bitcast i32 %50 to float, !dbg !29
  %52 = fcmp ogt float %48, %51, !dbg !21
  %53 = fcmp uno float %48, 0.000000e+00, !dbg !26
  %54 = or i1 %52, %53, !dbg !27
  %55 = select i1 %54, float %48, float %51, !dbg !28
  %56 = fsub float %22, %55, !dbg !30
  %57 = fsub float %23, %55, !dbg !30
  %58 = fsub float %24, %55, !dbg !30
  %59 = fsub float %25, %55, !dbg !30
  %60 = fmul float %56, 0x3FF7154760000000, !dbg !31
  %61 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %60) #2, !dbg !31
  %62 = fmul float %57, 0x3FF7154760000000, !dbg !31
  %63 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %62) #2, !dbg !31
  %64 = fmul float %58, 0x3FF7154760000000, !dbg !31
  %65 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %64) #2, !dbg !31
  %66 = fmul float %59, 0x3FF7154760000000, !dbg !31
  %67 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %66) #2, !dbg !31
  %68 = fadd float %61, %63, !dbg !32
  %69 = fadd float %68, %65, !dbg !32
  %70 = fadd float %69, %67, !dbg !32
  %71 = select i1 %10, float %70, float 0.000000e+00, !dbg !32
  %72 = bitcast float %71 to i32, !dbg !37
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %72, i32 2, i32 31), !dbg !37
  %74 = bitcast i32 %73 to float, !dbg !37
  %75 = fadd float %71, %74, !dbg !32
  %76 = bitcast float %75 to i32, !dbg !37
  %77 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %76, i32 1, i32 31), !dbg !37
  %78 = bitcast i32 %77 to float, !dbg !37
  %79 = fadd float %75, %78, !dbg !32
  %80 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %61, float %79) #2, !dbg !38
  %81 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %63, float %79) #2, !dbg !38
  %82 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %65, float %79) #2, !dbg !38
  %83 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %67, float %79) #2, !dbg !38
  %84 = bitcast float %80 to i32, !dbg !39
  %85 = bitcast float %81 to i32, !dbg !39
  %86 = bitcast float %82 to i32, !dbg !39
  %87 = bitcast float %83 to i32, !dbg !39
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %84, i32 %85, i32 %86, i32 %87, ptr addrspace(1) %16, i1 %10) #2, !dbg !39
  ret void, !dbg !40
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbamah2uspzwausehbgg3aotmb5ajpqdzzvdcohapyf7xx7heb7e.py", directory: "inductor_cache/ba")
!4 = !{ptr @triton_per_fused__softmax_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_1", linkageName: "triton_per_fused__softmax_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 42, scope: !7)
!17 = !DILocation(line: 31, column: 39, scope: !7)
!18 = !DILocation(line: 31, column: 34, scope: !7)
!19 = !DILocation(line: 31, column: 47, scope: !7)
!20 = !DILocation(line: 35, column: 33, scope: !7)
!21 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !25)
!22 = distinct !DILexicalBlockFile(scope: !24, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!24 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!25 = !DILocation(line: 36, column: 37, scope: !7)
!26 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !25)
!27 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !25)
!28 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !25)
!29 = !DILocation(line: 131, column: 29, scope: !24, inlinedAt: !25)
!30 = !DILocation(line: 37, column: 18, scope: !7)
!31 = !DILocation(line: 39, column: 23, scope: !7)
!32 = !DILocation(line: 256, column: 15, scope: !33, inlinedAt: !36)
!33 = distinct !DILexicalBlockFile(scope: !35, file: !34, discriminator: 0)
!34 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!35 = distinct !DILexicalBlockFile(scope: !7, file: !34, discriminator: 0)
!36 = !DILocation(line: 42, column: 26, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !35, inlinedAt: !36)
!38 = !DILocation(line: 43, column: 19, scope: !7)
!39 = !DILocation(line: 44, column: 48, scope: !7)
!40 = !DILocation(line: 44, column: 4, scope: !7)
