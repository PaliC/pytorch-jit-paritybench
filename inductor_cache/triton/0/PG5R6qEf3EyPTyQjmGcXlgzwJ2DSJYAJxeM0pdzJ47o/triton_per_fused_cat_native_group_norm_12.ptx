//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_cat_native_group_norm_12 // -- Begin function triton_per_fused_cat_native_group_norm_12
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_cat_native_group_norm_12
.visible .entry triton_per_fused_cat_native_group_norm_12(
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_native_group_norm_12_param_7,
	.param .u32 triton_per_fused_cat_native_group_norm_12_param_8,
	.param .u32 triton_per_fused_cat_native_group_norm_12_param_9
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<120>;
	.reg .f32 	%f<66>;
	.reg .b64 	%rd<22>;
	.loc	1 19 0                          // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_per_fused_cat_native_group_norm_12_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_cat_native_group_norm_12_param_1];
$L__tmp0:
	.loc	1 24 28                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd11, [triton_per_fused_cat_native_group_norm_12_param_2];
	.loc	1 27 26                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:27:26
	mov.u32 	%r55, %tid.x;
	and.b32  	%r56, %r55, 31;
	ld.param.u64 	%rd12, [triton_per_fused_cat_native_group_norm_12_param_3];
	ld.param.u64 	%rd13, [triton_per_fused_cat_native_group_norm_12_param_4];
	shl.b32 	%r57, %r55, 2;
	ld.param.u64 	%rd14, [triton_per_fused_cat_native_group_norm_12_param_5];
	and.b32  	%r58, %r57, 252;
	ld.param.u64 	%rd15, [triton_per_fused_cat_native_group_norm_12_param_6];
	and.b32  	%r59, %r57, 1020;
	ld.param.u64 	%rd16, [triton_per_fused_cat_native_group_norm_12_param_7];
	.loc	1 30 19                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:30:19
	bfe.u32 	%r60, %r57, 8, 2;
	.loc	1 33 19                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:33:19
	shr.s32 	%r61, %r1, 31;
	shr.u32 	%r62, %r61, 27;
	add.s32 	%r63, %r1, %r62;
	shr.s32 	%r64, %r63, 5;
	.loc	1 31 19                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:31:19
	and.b32  	%r65, %r63, -32;
	sub.s32 	%r66, %r1, %r65;
	.loc	1 36 41                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:36:41
	shl.b32 	%r67, %r1, 10;
	.loc	1 36 36                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:36:36
	or.b32  	%r68, %r67, %r59;
	.loc	1 36 31                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:36:31
	mul.wide.s32 	%rd17, %r68, 4;
	add.s64 	%rd1, %rd12, %rd17;
	mov.pred 	%p1, -1;
	.loc	1 36 46                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:36:46
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 37 18                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:37:18
	shl.b32 	%r69, %r66, 2;
	.loc	1 37 16                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:37:16
	or.b32  	%r70, %r69, %r60;
	.loc	1 41 18                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:41:18
	setp.lt.s32 	%p2, %r70, 64;
	.loc	1 42 40                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:42:40
	shl.b32 	%r71, %r70, 8;
	.loc	1 42 59                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:42:59
	shl.b32 	%r72, %r64, 14;
	.loc	1 42 35                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:42:35
	or.b32  	%r73, %r72, %r58;
	.loc	1 42 53                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:42:53
	add.s32 	%r74, %r73, %r71;
	.loc	1 42 30                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:42:30
	mul.wide.s32 	%rd18, %r74, 4;
	add.s64 	%rd2, %rd9, %rd18;
	mov.b32 	%r10, 0;
	.loc	1 42 64                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:42:64
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p2 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	@!%p2 mov.u32 %r6, %r10;
	@!%p2 mov.u32 %r7, %r10;
	@!%p2 mov.u32 %r8, %r10;
	@!%p2 mov.u32 %r9, %r10;
	// end inline asm
	.loc	1 46 18                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:46:18
	and.b32  	%r75, %r66, 1073741816;
	setp.eq.s32 	%p7, %r75, 16;
	.loc	1 47 67                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:47:67
	shl.b32 	%r76, %r64, 13;
	.loc	1 47 36                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:47:36
	or.b32  	%r77, %r76, %r58;
	.loc	1 47 41                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:47:41
	add.s32 	%r78, %r71, %r77;
	.loc	1 47 62                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:47:62
	add.s32 	%r79, %r78, -16384;
	.loc	1 47 31                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:47:31
	mul.wide.s32 	%rd19, %r79, 4;
	add.s64 	%rd3, %rd10, %rd19;
	.loc	1 47 72                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:47:72
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p7 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd3 + 0 ];
	@!%p7 mov.u32 %r14, %r10;
	@!%p7 mov.u32 %r15, %r10;
	@!%p7 mov.u32 %r16, %r10;
	@!%p7 mov.u32 %r17, %r10;
	// end inline asm
	.loc	1 48 20                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:48:20
	setp.gt.s32 	%p12, %r70, 95;
	.loc	1 51 62                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:51:62
	add.s32 	%r80, %r78, -24576;
	.loc	1 51 31                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:51:31
	mul.wide.s32 	%rd20, %r80, 4;
	add.s64 	%rd4, %rd11, %rd20;
	.loc	1 51 72                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:51:72
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p12 ld.global.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd4 + 0 ];
	@!%p12 mov.u32 %r22, %r10;
	@!%p12 mov.u32 %r23, %r10;
	@!%p12 mov.u32 %r24, %r10;
	@!%p12 mov.u32 %r25, %r10;
	// end inline asm
	.loc	1 52 34                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:52:34
	selp.b32 	%r81, %r14, %r22, %p7;
	selp.b32 	%r82, %r15, %r23, %p7;
	selp.b32 	%r83, %r16, %r24, %p7;
	selp.b32 	%r84, %r17, %r25, %p7;
	.loc	1 53 33                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:53:33
	selp.b32 	%r48, %r6, %r81, %p2;
	mov.b32 	%f5, %r48;
	selp.b32 	%r49, %r7, %r82, %p2;
	mov.b32 	%f6, %r49;
	selp.b32 	%r50, %r8, %r83, %p2;
	mov.b32 	%f7, %r50;
	selp.b32 	%r51, %r9, %r84, %p2;
	mov.b32 	%f8, %r51;
	.loc	1 54 20                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:54:20
	add.f32 	%f9, %f1, %f5;
	add.f32 	%f10, %f2, %f6;
	add.f32 	%f11, %f3, %f7;
	add.f32 	%f12, %f4, %f8;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f13, %f9, %f10;
	add.f32 	%f14, %f11, %f13;
	add.f32 	%f15, %f12, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f15;
	shfl.sync.bfly.b32	%r86, %r85, 16, 31, -1;
	mov.b32 	%f16, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f17;
	shfl.sync.bfly.b32	%r88, %r87, 8, 31, -1;
	mov.b32 	%f18, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f19;
	shfl.sync.bfly.b32	%r90, %r89, 4, 31, -1;
	mov.b32 	%f20, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f21;
	shfl.sync.bfly.b32	%r92, %r91, 2, 31, -1;
	mov.b32 	%f22, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f23;
	shfl.sync.bfly.b32	%r94, %r93, 1, 31, -1;
	mov.b32 	%f24, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p17, %r56, 0;
	shr.u32 	%r95, %r55, 3;
	and.b32  	%r96, %r95, 28;
	mov.u32 	%r97, global_smem;
	add.s32 	%r30, %r97, %r96;
	mov.b32 	%r31, %f25;
	// begin inline asm
	@%p17 st.shared.b32 [ %r30 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p18, %r55, 8;
	add.s32 	%r33, %r97, %r57;
	// begin inline asm
	@%p18 ld.shared.b32 %r32, [ %r33 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r32;
	shfl.sync.bfly.b32	%r98, %r32, 4, 31, -1;
	mov.b32 	%f27, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f28;
	shfl.sync.bfly.b32	%r100, %r99, 2, 31, -1;
	mov.b32 	%f29, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f30;
	shfl.sync.bfly.b32	%r102, %r101, 1, 31, -1;
	mov.b32 	%f31, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r103, %r55, 7;
	setp.eq.s32 	%p27, %r103, 0;
	and.pred  	%p19, %p18, %p27;
	mov.b32 	%r35, %f32;
	// begin inline asm
	@%p19 st.shared.b32 [ %r33 + 0 ], %r35;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f33, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f34, %f33, 0f00000000;
$L__tmp3:
	.loc	1 60 20                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:60:20
	mov.b32 	%r37, %f34;
	mov.b32 	%r38, 1149239296;
	// begin inline asm
	div.full.f32 %r53, %r37, %r38;
	// end inline asm
	mov.b32 	%f35, %r53;
	.loc	1 61 20                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:61:20
	sub.f32 	%f36, %f9, %f35;
	sub.f32 	%f37, %f10, %f35;
	sub.f32 	%f38, %f11, %f35;
	sub.f32 	%f39, %f12, %f35;
	.loc	1 62 20                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:62:20
	mul.f32 	%f40, %f37, %f37;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f41, %f36, %f36, %f40;
	fma.rn.f32 	%f42, %f38, %f38, %f41;
	fma.rn.f32 	%f43, %f39, %f39, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r104, %f43;
	shfl.sync.bfly.b32	%r105, %r104, 16, 31, -1;
	mov.b32 	%f44, %r105;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r106, %f45;
	shfl.sync.bfly.b32	%r107, %r106, 8, 31, -1;
	mov.b32 	%f46, %r107;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r108, %f47;
	shfl.sync.bfly.b32	%r109, %r108, 4, 31, -1;
	mov.b32 	%f48, %r109;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r110, %f49;
	shfl.sync.bfly.b32	%r111, %r110, 2, 31, -1;
	mov.b32 	%f50, %r111;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r112, %f51;
	shfl.sync.bfly.b32	%r113, %r112, 1, 31, -1;
	mov.b32 	%f52, %r113;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f53;
	// begin inline asm
	@%p17 st.shared.b32 [ %r30 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p18 ld.shared.b32 %r41, [ %r33 + 0 ];
	// end inline asm
	mov.b32 	%f54, %r41;
	shfl.sync.bfly.b32	%r114, %r41, 4, 31, -1;
	mov.b32 	%f55, %r114;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r115, %f56;
	shfl.sync.bfly.b32	%r116, %r115, 2, 31, -1;
	mov.b32 	%f57, %r116;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r117, %f58;
	shfl.sync.bfly.b32	%r118, %r117, 1, 31, -1;
	mov.b32 	%f59, %r118;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f60;
	// begin inline asm
	@%p19 st.shared.b32 [ %r33 + 0 ], %r44;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f61, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f62, %f61, 0f00000000;
$L__tmp6:
	.loc	1 66 20                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:66:20
	mov.b32 	%r46, %f62;
	// begin inline asm
	div.full.f32 %r45, %r46, %r38;
	// end inline asm
	mov.b32 	%f63, %r45;
	.loc	1 68 20                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:68:20
	add.f32 	%f64, %f63, 0f3727C5AC;
	.loc	1 69 28                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:69:28
	rsqrt.approx.ftz.f32 	%f65, %f64;
	.loc	1 70 25                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:70:25
	add.s64 	%rd5, %rd13, %rd17;
	.loc	1 70 47                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:70:47
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r48, %r49, %r50, %r51 };
	// end inline asm
	.loc	1 71 25                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:71:25
	mul.wide.s32 	%rd21, %r1, 4;
	add.s64 	%rd6, %rd16, %rd21;
	.loc	1 71 37                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:71:37
	and.b32  	%r119, %r55, 255;
	setp.eq.s32 	%p24, %r119, 0;
	mov.b32 	%r52, %f65;
	// begin inline asm
	@%p24 st.global.b32 [ %rd6 + 0 ], { %r52 };
	// end inline asm
	.loc	1 72 25                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:72:25
	add.s64 	%rd7, %rd14, %rd21;
	.loc	1 72 37                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:72:37
	// begin inline asm
	@%p24 st.global.b32 [ %rd7 + 0 ], { %r53 };
	// end inline asm
	.loc	1 73 25                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:73:25
	add.s64 	%rd8, %rd15, %rd21;
	.loc	1 73 37                         // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:73:37
	// begin inline asm
	@%p24 st.global.b32 [ %rd8 + 0 ], { %r46 };
	// end inline asm
	.loc	1 73 4                          // c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py:73:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3e/c3eav24kuket4i2vyu5676p7x6sryfjgbrq7tthhpiisglrbvc2v.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 258                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xfb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 101
.b8 97
.b8 118
.b8 50
.b8 52
.b8 107
.b8 117
.b8 107
.b8 101
.b8 116
.b8 52
.b8 105
.b8 50
.b8 118
.b8 121
.b8 117
.b8 53
.b8 54
.b8 55
.b8 54
.b8 112
.b8 55
.b8 120
.b8 54
.b8 115
.b8 114
.b8 121
.b8 102
.b8 106
.b8 103
.b8 98
.b8 114
.b8 113
.b8 55
.b8 116
.b8 116
.b8 104
.b8 104
.b8 112
.b8 105
.b8 105
.b8 115
.b8 103
.b8 108
.b8 114
.b8 98
.b8 118
.b8 99
.b8 50
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 101
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8f:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 57                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 57                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xec:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
