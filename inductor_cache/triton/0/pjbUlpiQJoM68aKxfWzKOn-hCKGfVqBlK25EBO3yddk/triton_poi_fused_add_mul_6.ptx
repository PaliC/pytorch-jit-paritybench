//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mul_6 // -- Begin function triton_poi_fused_add_mul_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_mul_6
.visible .entry triton_poi_fused_add_mul_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_6_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mul_6_param_6,
	.param .u32 triton_poi_fused_add_mul_6_param_7,
	.param .u32 triton_poi_fused_add_mul_6_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<11>;
	.reg .b32 	%r<67>;
	.reg .f32 	%f<24>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd9, [triton_poi_fused_add_mul_6_param_0];
	ld.param.u64 	%rd10, [triton_poi_fused_add_mul_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:22:33
	shl.b32 	%r20, %r1, 4;
	ld.param.u64 	%rd11, [triton_poi_fused_add_mul_6_param_2];
	ld.param.u64 	%rd12, [triton_poi_fused_add_mul_6_param_3];
	.loc	1 23 44                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:23:44
	mov.u32 	%r21, %tid.x;
	ld.param.u64 	%rd13, [triton_poi_fused_add_mul_6_param_4];
	bfe.u32 	%r22, %r21, 3, 4;
	ld.param.u64 	%rd6, [triton_poi_fused_add_mul_6_param_5];
	shl.b32 	%r23, %r21, 1;
	ld.param.u64 	%rd14, [triton_poi_fused_add_mul_6_param_6];
	and.b32  	%r24, %r23, 14;
	.loc	1 23 23                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:23:23
	or.b32  	%r25, %r20, %r22;
	.loc	1 25 28                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:25:33
	shl.b32 	%r26, %r2, 4;
	.loc	1 26 23                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:26:23
	or.b32  	%r27, %r26, %r24;
	.loc	1 30 19                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:30:19
	bfe.s32 	%r28, %r1, 27, 1;
	shr.u32 	%r29, %r28, 30;
	add.s32 	%r30, %r25, %r29;
	.loc	1 32 38                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:38
	shl.b32 	%r31, %r25, 4;
	.loc	1 32 35                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:35
	add.s32 	%r32, %r27, %r31;
	.loc	1 32 30                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:30
	mul.wide.s32 	%rd15, %r32, 4;
	add.s64 	%rd1, %rd9, %rd15;
	.loc	1 32 51                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:51
	max.s32 	%r33, %r25, %r27;
	setp.lt.s32 	%p2, %r33, 16;
	.loc	1 32 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:43
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p2 ld.global.v2.b32 { %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 33 30                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:33:30
	add.s64 	%rd2, %rd10, %rd15;
	.loc	1 33 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:33:43
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p2 ld.global.v2.b32 { %r5, %r6 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:34:30
	add.s64 	%rd3, %rd11, 8;
	mov.pred 	%p3, -1;
	.loc	1 34 19                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:34:19
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 36 38                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:36:38
	shl.b32 	%r34, %r30, 2;
	and.b32  	%r35, %r34, -16;
	.loc	1 36 35                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:36:35
	add.s32 	%r36, %r35, %r27;
	.loc	1 36 30                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:36:30
	mul.wide.s32 	%rd16, %r36, 4;
	add.s64 	%rd4, %rd12, %rd16;
	.loc	1 36 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:36:43
	// begin inline asm
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r8, %r9 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 37 30                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:37:30
	add.s64 	%rd5, %rd13, %rd16;
	.loc	1 37 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:37:43
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p2 ld.global.L1::evict_last.v2.b32 { %r10, %r11 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r10;
	mov.b32 	%f2, %r11;
	.loc	1 38 20                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:38:20
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p3 ld.global.b32 { %r12 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 40 31                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:40:31
	add.s64 	%rd7, %rd11, 16;
	.loc	1 40 20                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:40:20
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p3 ld.global.b32 { %r13 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 46 19                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:46:19
	add.f32 	%f3, %f1, 0f358637BD;
	add.f32 	%f4, %f2, 0f358637BD;
	.loc	1 47 28                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:47:28
	rsqrt.approx.ftz.f32 	%f5, %f3;
	rsqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 33 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:33:43
	mov.b32 	%f7, %r6;
	.loc	1 34 19                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:34:19
	mov.b32 	%f8, %r7;
	.loc	1 32 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:43
	mov.b32 	%f9, %r4;
	.loc	1 43 18                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:43:18
	fma.rn.f32 	%f10, %f7, %f8, %f9;
	.loc	1 36 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:36:43
	mov.b32 	%f11, %r9;
	.loc	1 44 18                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:44:18
	sub.f32 	%f12, %f10, %f11;
	.loc	1 33 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:33:43
	mov.b32 	%f13, %r5;
	.loc	1 32 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:43
	mov.b32 	%f14, %r3;
	.loc	1 43 18                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:43:18
	fma.rn.f32 	%f15, %f13, %f8, %f14;
	.loc	1 36 43                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:36:43
	mov.b32 	%f16, %r8;
	.loc	1 44 18                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:44:18
	sub.f32 	%f17, %f15, %f16;
	.loc	1 40 20                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:40:20
	mov.b32 	%f18, %r13;
	.loc	1 38 20                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:38:20
	mov.b32 	%f19, %r12;
	.loc	1 26 23                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:26:23
	or.b32  	%r37, %r26, %r22;
	.loc	1 23 23                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:23:23
	or.b32  	%r38, %r20, %r24;
	.loc	1 32 51                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:32:51
	max.s32 	%r39, %r38, %r37;
	setp.lt.s32 	%p10, %r39, 16;
	.loc	1 30 19                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:30:19
	shr.s32 	%r41, %r38, 31;
	shr.u32 	%r42, %r41, 30;
	add.s32 	%r43, %r38, %r42;
	.loc	1 31 19                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:31:19
	and.b32  	%r44, %r43, -4;
	sub.s32 	%r45, %r38, %r44;
	.loc	1 48 19                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:48:19
	mul.f32 	%f20, %f17, %f5;
	mul.f32 	%f21, %f12, %f6;
	.loc	1 50 20                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:50:20
	fma.rn.f32 	%f22, %f20, %f19, %f18;
	fma.rn.f32 	%f23, %f21, %f19, %f18;
	.loc	1 51 32                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:51:32
	shl.b32 	%r46, %r37, 2;
	.loc	1 51 30                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:51:30
	add.s32 	%r47, %r46, %r45;
	.loc	1 51 40                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:51:40
	shl.b32 	%r48, %r43, 4;
	and.b32  	%r49, %r48, -64;
	.loc	1 51 37                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:51:37
	add.s32 	%r50, %r47, %r49;
	.loc	1 51 25                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:51:25
	mul.wide.s32 	%rd17, %r50, 4;
	add.s64 	%rd8, %rd14, %rd17;
	.loc	1 51 52                         // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:51:52
	shl.b32 	%r51, %r21, 5;
	and.b32  	%r52, %r51, 224;
	or.b32  	%r53, %r52, %r22;
	shr.u32 	%r54, %r52, 1;
	mov.u32 	%r55, global_smem;
	add.s32 	%r56, %r55, %r54;
	shl.b32 	%r57, %r53, 2;
	add.s32 	%r14, %r56, %r57;
	mov.b32 	%r15, %f22;
	// begin inline asm
	@%p3 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	or.b32  	%r58, %r52, 16;
	shr.u32 	%r59, %r58, 1;
	add.s32 	%r60, %r55, %r59;
	add.s32 	%r61, %r60, %r57;
	add.s32 	%r16, %r61, 64;
	mov.b32 	%r17, %f23;
	// begin inline asm
	@%p3 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r62, %r21, 120;
	add.s32 	%r63, %r55, %r62;
	shl.b32 	%r64, %r21, 3;
	and.b32  	%r65, %r64, 1016;
	add.s32 	%r66, %r63, %r65;
	ld.shared.v2.u32 	{%r18, %r19}, [%r66];
	// begin inline asm
	@%p10 st.global.v2.b32 [ %rd8 + 0 ], { %r18, %r19 };
	// end inline asm
	.loc	1 51 4                          // casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py:51:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/as/casm4t6qf7wcc7pgmgcs4oxdbjkjscekr22l5pyhfz2rwvbrrryc.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 97
.b8 115
.b8 109
.b8 52
.b8 116
.b8 54
.b8 113
.b8 102
.b8 55
.b8 119
.b8 99
.b8 99
.b8 55
.b8 112
.b8 103
.b8 109
.b8 103
.b8 99
.b8 115
.b8 52
.b8 111
.b8 120
.b8 100
.b8 98
.b8 106
.b8 107
.b8 106
.b8 115
.b8 99
.b8 101
.b8 107
.b8 114
.b8 50
.b8 50
.b8 108
.b8 53
.b8 112
.b8 121
.b8 104
.b8 102
.b8 122
.b8 50
.b8 114
.b8 119
.b8 118
.b8 98
.b8 114
.b8 114
.b8 114
.b8 121
.b8 99
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 97
.b8 115
.b8 0
	}
	.section	.debug_macinfo	{	}
