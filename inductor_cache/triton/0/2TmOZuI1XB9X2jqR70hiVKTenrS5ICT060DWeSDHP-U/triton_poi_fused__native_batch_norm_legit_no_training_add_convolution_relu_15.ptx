//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_8,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b32 	%r<147>;
	.reg .f32 	%f<97>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_1];
$L__tmp0:
	.loc	1 22 28                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:22:33
	shl.b32 	%r83, %r1, 5;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_3];
	.loc	1 23 44                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:23:44
	mov.u32 	%r84, %tid.x;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_4];
	bfe.u32 	%r85, %r84, 3, 4;
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_5];
	or.b32  	%r86, %r85, 16;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_6];
	shl.b32 	%r87, %r84, 2;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_15_param_7];
	and.b32  	%r88, %r87, 28;
	.loc	1 23 23                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:23:23
	or.b32  	%r89, %r83, %r85;
	or.b32  	%r90, %r83, %r86;
	.loc	1 24 21                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:24:21
	setp.lt.s32 	%p22, %r89, 256;
	setp.lt.s32 	%p23, %r90, 256;
	.loc	1 25 28                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:25:33
	shl.b32 	%r91, %r2, 5;
	.loc	1 26 23                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:26:23
	or.b32  	%r92, %r91, %r88;
	.loc	1 27 21                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:27:21
	setp.lt.s32 	%p3, %r92, 128;
	.loc	1 32 43                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:43
	shl.b32 	%r93, %r89, 7;
	shl.b32 	%r94, %r90, 7;
	.loc	1 32 39                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:39
	add.s32 	%r95, %r92, %r93;
	add.s32 	%r96, %r92, %r94;
	.loc	1 32 34                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:34
	mul.wide.s32 	%rd22, %r95, 4;
	add.s64 	%rd1, %rd14, %rd22;
	mul.wide.s32 	%rd23, %r96, 4;
	add.s64 	%rd2, %rd14, %rd23;
	.loc	1 32 56                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:56
	and.pred  	%p1, %p22, %p3;
	and.pred  	%p2, %p23, %p3;
	.loc	1 32 48                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:48
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:33:30
	mul.wide.s32 	%rd24, %r92, 4;
	add.s64 	%rd3, %rd15, %rd24;
	.loc	1 33 35                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:34:30
	add.s64 	%rd4, %rd16, %rd24;
	.loc	1 34 35                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:34:35
	// begin inline asm
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r15, %r16, %r17, %r18 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 35 30                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:35:30
	add.s64 	%rd5, %rd17, %rd24;
	.loc	1 35 35                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:35:35
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r19, %r20, %r21, %r22 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r19;
	mov.b32 	%f2, %r20;
	mov.b32 	%f3, %r21;
	mov.b32 	%f4, %r22;
	.loc	1 36 31                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:36:31
	add.s64 	%rd6, %rd18, %rd24;
	.loc	1 36 36                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:36:36
	// begin inline asm
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r23, %r24, %r25, %r26 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:37:31
	add.s64 	%rd7, %rd19, %rd24;
	.loc	1 37 36                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:37:36
	// begin inline asm
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	@%p3 ld.global.L1::evict_last.v4.b32 { %r27, %r28, %r29, %r30 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:38:31
	add.s64 	%rd8, %rd20, %rd22;
	add.s64 	%rd9, %rd20, %rd23;
	.loc	1 38 45                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:38:45
	// begin inline asm
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	mov.u32 %r34, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r31, %r32, %r33, %r34 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 42 18                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:42:18
	add.f32 	%f5, %f1, 0f3A83126F;
	add.f32 	%f6, %f2, 0f3A83126F;
	add.f32 	%f7, %f3, 0f3A83126F;
	add.f32 	%f8, %f4, 0f3A83126F;
	.loc	1 43 26                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:43:26
	sqrt.approx.ftz.f32 	%f9, %f5;
	sqrt.approx.ftz.f32 	%f10, %f6;
	sqrt.approx.ftz.f32 	%f11, %f7;
	sqrt.approx.ftz.f32 	%f12, %f8;
	.loc	1 26 23                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:26:23
	or.b32  	%r97, %r91, %r86;
	.loc	1 27 21                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:27:21
	setp.lt.s32 	%p24, %r97, 128;
	.loc	1 23 23                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:23:23
	or.b32  	%r98, %r83, %r88;
	.loc	1 24 21                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:24:21
	setp.lt.s32 	%p25, %r98, 256;
	.loc	1 32 56                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:56
	and.pred  	%p21, %p25, %p24;
	.loc	1 26 23                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:26:23
	or.b32  	%r99, %r91, %r85;
	.loc	1 27 21                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:27:21
	setp.lt.s32 	%p26, %r99, 128;
	.loc	1 32 56                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:56
	and.pred  	%p20, %p25, %p26;
	.loc	1 31 19                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:31:19
	shr.s32 	%r101, %r98, 31;
	shr.u32 	%r102, %r101, 26;
	add.s32 	%r103, %r98, %r102;
	.loc	1 30 19                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:30:19
	and.b32  	%r104, %r103, -64;
	sub.s32 	%r105, %r98, %r104;
	.loc	1 45 19                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:45:19
	mov.b32 	%r41, %f9;
	mov.b32 	%r40, 1065353216;
	// begin inline asm
	div.full.f32 %r39, %r40, %r41;
	// end inline asm
	mov.b32 	%f13, %r39;
	mov.b32 	%r44, %f10;
	// begin inline asm
	div.full.f32 %r42, %r40, %r44;
	// end inline asm
	mov.b32 	%f14, %r42;
	mov.b32 	%r47, %f11;
	// begin inline asm
	div.full.f32 %r45, %r40, %r47;
	// end inline asm
	mov.b32 	%f15, %r45;
	mov.b32 	%r50, %f12;
	// begin inline asm
	div.full.f32 %r48, %r40, %r50;
	// end inline asm
	mov.b32 	%f16, %r48;
	.loc	1 33 35                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:33:35
	mov.b32 	%f17, %r14;
	mov.b32 	%f18, %r13;
	mov.b32 	%f19, %r12;
	mov.b32 	%f20, %r11;
	.loc	1 34 35                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:34:35
	mov.b32 	%f21, %r15;
	mov.b32 	%f22, %r16;
	mov.b32 	%f23, %r17;
	mov.b32 	%f24, %r18;
	.loc	1 32 48                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:32:48
	mov.b32 	%f25, %r10;
	mov.b32 	%f26, %r9;
	mov.b32 	%f27, %r8;
	mov.b32 	%f28, %r7;
	mov.b32 	%f29, %r6;
	mov.b32 	%f30, %r5;
	mov.b32 	%f31, %r4;
	mov.b32 	%f32, %r3;
	.loc	1 39 18                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:39:18
	add.f32 	%f33, %f20, %f32;
	add.f32 	%f34, %f19, %f31;
	add.f32 	%f35, %f18, %f30;
	add.f32 	%f36, %f17, %f29;
	add.f32 	%f37, %f20, %f28;
	add.f32 	%f38, %f19, %f27;
	add.f32 	%f39, %f18, %f26;
	add.f32 	%f40, %f17, %f25;
	.loc	1 40 18                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:40:18
	sub.f32 	%f41, %f40, %f24;
	sub.f32 	%f42, %f39, %f23;
	sub.f32 	%f43, %f38, %f22;
	sub.f32 	%f44, %f37, %f21;
	sub.f32 	%f45, %f36, %f24;
	sub.f32 	%f46, %f35, %f23;
	sub.f32 	%f47, %f34, %f22;
	sub.f32 	%f48, %f33, %f21;
	.loc	1 38 45                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:38:45
	mov.b32 	%f49, %r38;
	mov.b32 	%f50, %r37;
	mov.b32 	%f51, %r36;
	mov.b32 	%f52, %r35;
	mov.b32 	%f53, %r34;
	mov.b32 	%f54, %r33;
	mov.b32 	%f55, %r32;
	mov.b32 	%f56, %r31;
	.loc	1 37 36                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:37:36
	mov.b32 	%f57, %r27;
	mov.b32 	%f58, %r28;
	mov.b32 	%f59, %r29;
	mov.b32 	%f60, %r30;
	.loc	1 36 36                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:36:36
	mov.b32 	%f61, %r23;
	mov.b32 	%f62, %r24;
	mov.b32 	%f63, %r25;
	mov.b32 	%f64, %r26;
	.loc	1 48 19                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:48:19
	mul.f32 	%f65, %f48, %f13;
	mul.f32 	%f66, %f47, %f14;
	mul.f32 	%f67, %f46, %f15;
	mul.f32 	%f68, %f45, %f16;
	mul.f32 	%f69, %f44, %f13;
	mul.f32 	%f70, %f43, %f14;
	mul.f32 	%f71, %f42, %f15;
	mul.f32 	%f72, %f41, %f16;
	.loc	1 50 20                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:50:20
	fma.rn.f32 	%f73, %f72, %f64, %f60;
	fma.rn.f32 	%f74, %f71, %f63, %f59;
	fma.rn.f32 	%f75, %f70, %f62, %f58;
	fma.rn.f32 	%f76, %f69, %f61, %f57;
	fma.rn.f32 	%f77, %f68, %f64, %f60;
	fma.rn.f32 	%f78, %f67, %f63, %f59;
	fma.rn.f32 	%f79, %f66, %f62, %f58;
	fma.rn.f32 	%f80, %f65, %f61, %f57;
	.loc	1 51 20                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:51:20
	add.f32 	%f81, %f80, %f56;
	add.f32 	%f82, %f79, %f55;
	add.f32 	%f83, %f78, %f54;
	add.f32 	%f84, %f77, %f53;
	add.f32 	%f85, %f76, %f52;
	add.f32 	%f86, %f75, %f51;
	add.f32 	%f87, %f74, %f50;
	add.f32 	%f88, %f73, %f49;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p27, %f88, 0f00000000;
	setp.lt.f32 	%p28, %f87, 0f00000000;
	setp.lt.f32 	%p29, %f86, 0f00000000;
	setp.lt.f32 	%p30, %f85, 0f00000000;
	setp.lt.f32 	%p31, %f84, 0f00000000;
	setp.lt.f32 	%p32, %f83, 0f00000000;
	setp.lt.f32 	%p33, %f82, 0f00000000;
	setp.lt.f32 	%p34, %f81, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f89, 0f00000000, %f81, %p34;
	selp.f32 	%f90, 0f00000000, %f82, %p33;
	selp.f32 	%f91, 0f00000000, %f83, %p32;
	selp.f32 	%f92, 0f00000000, %f84, %p31;
	selp.f32 	%f93, 0f00000000, %f85, %p30;
	selp.f32 	%f94, 0f00000000, %f86, %p29;
	selp.f32 	%f95, 0f00000000, %f87, %p28;
	selp.f32 	%f96, 0f00000000, %f88, %p27;
$L__tmp2:
	.loc	1 54 4                          // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:54:4
	bar.sync 	0;
	.loc	1 55 48                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:55:48
	mov.b32 	%r55, %f37;
	mov.b32 	%r56, %f38;
	mov.b32 	%r57, %f39;
	mov.b32 	%r58, %f40;
	mov.b32 	%r51, %f33;
	mov.b32 	%r52, %f34;
	mov.b32 	%r53, %f35;
	mov.b32 	%r54, %f36;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r51, %r52, %r53, %r54 };
	// end inline asm
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd2 + 0 ], { %r55, %r56, %r57, %r58 };
	// end inline asm
	.loc	1 56 33                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:56:33
	shl.b32 	%r106, %r99, 6;
	shl.b32 	%r107, %r97, 6;
	.loc	1 56 43                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:56:43
	shl.b32 	%r108, %r103, 7;
	and.b32  	%r109, %r108, -8192;
	.loc	1 56 30                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:56:30
	add.s32 	%r110, %r109, %r105;
	.loc	1 56 38                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:56:38
	add.s32 	%r111, %r110, %r106;
	add.s32 	%r112, %r110, %r107;
	.loc	1 56 25                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:56:25
	mul.wide.s32 	%rd25, %r111, 4;
	add.s64 	%rd12, %rd21, %rd25;
	mul.wide.s32 	%rd26, %r112, 4;
	add.s64 	%rd13, %rd21, %rd26;
	.loc	1 56 55                         // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:56:55
	shl.b32 	%r113, %r84, 7;
	and.b32  	%r114, %r113, 896;
	or.b32  	%r115, %r114, %r85;
	and.b32  	%r116, %r87, 508;
	shr.u32 	%r117, %r114, 3;
	or.b32  	%r118, %r117, %r115;
	shl.b32 	%r119, %r118, 2;
	mov.u32 	%r120, global_smem;
	add.s32 	%r59, %r120, %r119;
	mov.b32 	%r60, %f89;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.b32 [ %r59 + 0 ], %r60;
	// end inline asm
	or.b32  	%r121, %r114, 32;
	shr.u32 	%r122, %r121, 3;
	add.s32 	%r123, %r122, %r115;
	shl.b32 	%r124, %r123, 2;
	add.s32 	%r125, %r120, %r124;
	add.s32 	%r61, %r125, 128;
	mov.b32 	%r62, %f90;
	// begin inline asm
	@%p12 st.shared.b32 [ %r61 + 0 ], %r62;
	// end inline asm
	or.b32  	%r126, %r114, 64;
	shr.u32 	%r127, %r126, 3;
	add.s32 	%r128, %r127, %r115;
	shl.b32 	%r129, %r128, 2;
	add.s32 	%r130, %r120, %r129;
	add.s32 	%r63, %r130, 256;
	mov.b32 	%r64, %f91;
	// begin inline asm
	@%p12 st.shared.b32 [ %r63 + 0 ], %r64;
	// end inline asm
	or.b32  	%r131, %r114, 96;
	shr.u32 	%r132, %r131, 3;
	add.s32 	%r133, %r132, %r115;
	shl.b32 	%r134, %r133, 2;
	add.s32 	%r135, %r120, %r134;
	add.s32 	%r65, %r135, 384;
	mov.b32 	%r66, %f92;
	// begin inline asm
	@%p12 st.shared.b32 [ %r65 + 0 ], %r66;
	// end inline asm
	add.s32 	%r67, %r59, 64;
	mov.b32 	%r68, %f93;
	// begin inline asm
	@%p12 st.shared.b32 [ %r67 + 0 ], %r68;
	// end inline asm
	add.s32 	%r69, %r125, 192;
	mov.b32 	%r70, %f94;
	// begin inline asm
	@%p12 st.shared.b32 [ %r69 + 0 ], %r70;
	// end inline asm
	add.s32 	%r71, %r130, 320;
	mov.b32 	%r72, %f95;
	// begin inline asm
	@%p12 st.shared.b32 [ %r71 + 0 ], %r72;
	// end inline asm
	add.s32 	%r73, %r135, 448;
	mov.b32 	%r74, %f96;
	// begin inline asm
	@%p12 st.shared.b32 [ %r73 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r136, %r84, 1;
	and.b32  	%r137, %r136, 60;
	add.s32 	%r138, %r137, %r116;
	shl.b32 	%r139, %r138, 2;
	add.s32 	%r140, %r120, %r139;
	or.b32  	%r141, %r116, 512;
	shr.u32 	%r142, %r141, 3;
	and.b32  	%r143, %r142, 124;
	add.s32 	%r144, %r143, %r116;
	shl.b32 	%r145, %r144, 2;
	add.s32 	%r146, %r120, %r145;
	ld.shared.v4.u32 	{%r79, %r80, %r81, %r82}, [%r146+2048];
	ld.shared.v4.u32 	{%r75, %r76, %r77, %r78}, [%r140];
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd12 + 0 ], { %r75, %r76, %r77, %r78 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd13 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	.loc	1 56 4                          // cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py:56:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ha/cha5qjameu5f3izoqxxhva6chl4cn5sj6a7i4evb4nu3k46iuo7w.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 222                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd7 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 97
.b8 53
.b8 113
.b8 106
.b8 97
.b8 109
.b8 101
.b8 117
.b8 53
.b8 102
.b8 51
.b8 105
.b8 122
.b8 111
.b8 113
.b8 120
.b8 120
.b8 104
.b8 118
.b8 97
.b8 54
.b8 99
.b8 104
.b8 108
.b8 52
.b8 99
.b8 110
.b8 53
.b8 115
.b8 106
.b8 54
.b8 97
.b8 55
.b8 105
.b8 52
.b8 101
.b8 118
.b8 98
.b8 52
.b8 110
.b8 117
.b8 51
.b8 107
.b8 52
.b8 54
.b8 105
.b8 117
.b8 111
.b8 55
.b8 119
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 53
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
