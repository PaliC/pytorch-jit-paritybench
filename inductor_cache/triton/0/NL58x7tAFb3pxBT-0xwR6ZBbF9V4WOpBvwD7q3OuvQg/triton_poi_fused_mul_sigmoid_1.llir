; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_mul_sigmoid_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 1296, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 324, !dbg !15
  %12 = mul i32 %11, 324, !dbg !16
  %.decomposed = sub i32 %.frozen, %12, !dbg !16
  %13 = mul i32 %11, 648, !dbg !17
  %14 = add i32 %13, %.decomposed, !dbg !18
  %15 = add i32 %14, 324, !dbg !19
  %16 = sext i32 %15 to i64, !dbg !20
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !20
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %10) #1, !dbg !21
  %19 = bitcast i32 %18 to float, !dbg !21
  %20 = sext i32 %14 to i64, !dbg !22
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !22
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %10) #1, !dbg !23
  %23 = bitcast i32 %22 to float, !dbg !23
  %24 = fsub float 0.000000e+00, %19, !dbg !24
  %25 = fmul float %24, 0x3FF7154760000000, !dbg !28
  %26 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %25) #1, !dbg !28
  %27 = fadd float %26, 1.000000e+00, !dbg !29
  %28 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %27) #1, !dbg !30
  %29 = fmul float %28, %23, !dbg !31
  %30 = sext i32 %9 to i64, !dbg !32
  %31 = getelementptr float, ptr addrspace(1) %1, i64 %30, !dbg !32
  %32 = bitcast float %28 to i32, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %32, ptr addrspace(1) %31, i1 %10) #1, !dbg !33
  %33 = getelementptr float, ptr addrspace(1) %2, i64 %30, !dbg !34
  %34 = bitcast float %29 to i32, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %34, ptr addrspace(1) %33, i1 %10) #1, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csytlyekbbxm22wm4r75ajjko6lr3oyfl5p2eze6j65e2t7uo3ds.py", directory: "inductor_cache/sy")
!4 = !{ptr @triton_poi_fused_mul_sigmoid_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_mul_sigmoid_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_mul_sigmoid_1", linkageName: "triton_poi_fused_mul_sigmoid_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 45, scope: !7)
!18 = !DILocation(line: 27, column: 36, scope: !7)
!19 = !DILocation(line: 27, column: 41, scope: !7)
!20 = !DILocation(line: 27, column: 30, scope: !7)
!21 = !DILocation(line: 27, column: 50, scope: !7)
!22 = !DILocation(line: 28, column: 30, scope: !7)
!23 = !DILocation(line: 28, column: 44, scope: !7)
!24 = !DILocation(line: 47, column: 30, scope: !25, inlinedAt: !27)
!25 = distinct !DILexicalBlockFile(scope: !7, file: !26, discriminator: 0)
!26 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!27 = !DILocation(line: 29, column: 22, scope: !7)
!28 = !DILocation(line: 47, column: 29, scope: !25, inlinedAt: !27)
!29 = !DILocation(line: 47, column: 20, scope: !25, inlinedAt: !27)
!30 = !DILocation(line: 47, column: 16, scope: !25, inlinedAt: !27)
!31 = !DILocation(line: 30, column: 18, scope: !7)
!32 = !DILocation(line: 31, column: 25, scope: !7)
!33 = !DILocation(line: 31, column: 36, scope: !7)
!34 = !DILocation(line: 32, column: 25, scope: !7)
!35 = !DILocation(line: 32, column: 36, scope: !7)
!36 = !DILocation(line: 32, column: 4, scope: !7)
