; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 2, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 3, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 4, !dbg !14
  %11 = sext i32 %9 to i64, !dbg !15
  %12 = getelementptr i64, ptr addrspace(1) %1, i64 %11, !dbg !15
  %13 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %12, i1 %10) #2, !dbg !16
  %14 = shl i32 %9, 2, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %2, i64 %15, !dbg !18
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %10) #2, !dbg !19
  %18 = bitcast i32 %17 to float, !dbg !19
  %19 = or disjoint i32 %14, 1, !dbg !20
  %20 = sext i32 %19 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !21
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %10) #2, !dbg !22
  %23 = bitcast i32 %22 to float, !dbg !22
  %24 = or disjoint i32 %14, 2, !dbg !23
  %25 = sext i32 %24 to i64, !dbg !24
  %26 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !24
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %26, i1 %10) #2, !dbg !25
  %28 = bitcast i32 %27 to float, !dbg !25
  %29 = or disjoint i32 %14, 3, !dbg !26
  %30 = sext i32 %29 to i64, !dbg !27
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %30, !dbg !27
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %10) #2, !dbg !28
  %33 = bitcast i32 %32 to float, !dbg !28
  %34 = fmul float %18, 0x3FF7154760000000, !dbg !29
  %35 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %34) #2, !dbg !29
  %36 = fmul float %23, 0x3FF7154760000000, !dbg !30
  %37 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %36) #2, !dbg !30
  %38 = fadd float %35, %37, !dbg !31
  %39 = fmul float %28, 0x3FF7154760000000, !dbg !32
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #2, !dbg !32
  %41 = fadd float %38, %40, !dbg !33
  %42 = fmul float %33, 0x3FF7154760000000, !dbg !34
  %43 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %42) #2, !dbg !34
  %44 = fadd float %41, %43, !dbg !35
  %45 = fcmp olt float %44, 0x3810000000000000, !dbg !36
  %46 = fmul float %44, 0x4160000000000000, !dbg !36
  %.02.i = select i1 %45, float %46, float %44, !dbg !36
  %i.i.0.i = select i1 %45, float -2.300000e+01, float 0.000000e+00, !dbg !36
  %47 = bitcast float %.02.i to i32, !dbg !36
  %48 = add i32 %47, -1059760811, !dbg !36
  %49 = and i32 %48, -8388608, !dbg !36
  %50 = sub i32 %47, %49, !dbg !36
  %51 = bitcast i32 %50 to float, !dbg !36
  %52 = sitofp i32 %49 to float, !dbg !36
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not.i = icmp eq i32 %53, 0, !dbg !36
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !36
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %52, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !36
  %.08.i = select i1 %.not.i, float %55, float %54, !dbg !36
  %56 = fadd float %51, -1.000000e+00, !dbg !36
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not1.i = icmp eq i32 %57, 0, !dbg !36
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %56, float 0x3FC2073EC0000000) #2, !dbg !36
  %59 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %56, float 0x3FC2073EC0000000) #2, !dbg !36
  %.010.i = select i1 %.not1.i, float %59, float %58, !dbg !36
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not2.i = icmp eq i32 %60, 0, !dbg !36
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %56, float 0xBFBF19B980000000) #2, !dbg !36
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %56, float 0xBFBF19B980000000) #2, !dbg !36
  %.011.i = select i1 %.not2.i, float %62, float %61, !dbg !36
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not3.i = icmp eq i32 %63, 0, !dbg !36
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %56, float 0x3FC1E52AA0000000) #2, !dbg !36
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %56, float 0x3FC1E52AA0000000) #2, !dbg !36
  %.012.i = select i1 %.not3.i, float %65, float %64, !dbg !36
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not4.i = icmp eq i32 %66, 0, !dbg !36
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %56, float 0xBFC55B1720000000) #2, !dbg !36
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %56, float 0xBFC55B1720000000) #2, !dbg !36
  %.09.i = select i1 %.not4.i, float %68, float %67, !dbg !36
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not5.i = icmp eq i32 %69, 0, !dbg !36
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %56, float 0x3FC99DA160000000) #2, !dbg !36
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %56, float 0x3FC99DA160000000) #2, !dbg !36
  %.05.i = select i1 %.not5.i, float %71, float %70, !dbg !36
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not6.i = icmp eq i32 %72, 0, !dbg !36
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %56, float 0xBFCFFFE440000000) #2, !dbg !36
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %56, float 0xBFCFFFE440000000) #2, !dbg !36
  %.01.i = select i1 %.not6.i, float %74, float %73, !dbg !36
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not7.i = icmp eq i32 %75, 0, !dbg !36
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %56, float 0x3FD5554F00000000) #2, !dbg !36
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %56, float 0x3FD5554F00000000) #2, !dbg !36
  %.0.i = select i1 %.not7.i, float %77, float %76, !dbg !36
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not8.i = icmp eq i32 %78, 0, !dbg !36
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %56, float -5.000000e-01) #2, !dbg !36
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %56, float -5.000000e-01) #2, !dbg !36
  %.07.i = select i1 %.not8.i, float %80, float %79, !dbg !36
  %81 = fmul float %56, %.07.i, !dbg !36
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not9.i = icmp eq i32 %82, 0, !dbg !36
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %81, float %56, float %56) #2, !dbg !36
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %81, float %56, float %56) #2, !dbg !36
  %.06.i = select i1 %.not9.i, float %84, float %83, !dbg !36
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not10.i = icmp eq i32 %85, 0, !dbg !36
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !36
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #2, !dbg !36
  %.04.i = select i1 %.not10.i, float %87, float %86, !dbg !36
  %88 = icmp ugt i32 %47, 2139095039, !dbg !36
  br i1 %88, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !36

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !36
  %.not11.i = icmp eq i32 %89, 0, !dbg !36
  %90 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !36
  %91 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !36
  %.03.i = select i1 %.not11.i, float %91, float %90, !dbg !36
  br label %__nv_logf.exit, !dbg !36

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !36
  %92 = icmp eq i64 %13, -100, !dbg !37
  %93 = select i1 %92, i64 0, i64 %13, !dbg !38
  %94 = and i32 %7, 28, !dbg !12
  %95 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !36
  %r.i.1.i = select i1 %95, float 0xFFF0000000000000, float %r.i.0.i, !dbg !36
  %96 = fsub float %18, %r.i.1.i, !dbg !39
  %97 = icmp eq i64 %93, 0, !dbg !40
  %98 = select i1 %97, float 0x3FECCCCCC0000000, float 0x3F999999A0000000, !dbg !41
  %99 = fmul float %98, %96, !dbg !42
  %100 = fsub float %23, %r.i.1.i, !dbg !43
  %101 = icmp eq i64 %93, 1, !dbg !44
  %102 = select i1 %101, float 0x3FECCCCCC0000000, float 0x3F999999A0000000, !dbg !45
  %103 = fmul float %102, %100, !dbg !46
  %104 = fadd float %99, %103, !dbg !47
  %105 = fsub float %28, %r.i.1.i, !dbg !48
  %106 = icmp eq i64 %93, 2, !dbg !49
  %107 = select i1 %106, float 0x3FECCCCCC0000000, float 0x3F999999A0000000, !dbg !50
  %108 = fmul float %107, %105, !dbg !51
  %109 = fadd float %108, %104, !dbg !52
  %110 = fsub float %33, %r.i.1.i, !dbg !53
  %111 = icmp eq i64 %93, 3, !dbg !54
  %112 = select i1 %111, float 0x3FECCCCCC0000000, float 0x3F999999A0000000, !dbg !55
  %113 = fmul float %112, %110, !dbg !56
  %114 = fadd float %113, %109, !dbg !57
  %115 = fsub float 0.000000e+00, %114, !dbg !58
  %116 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !59
  %117 = icmp eq i32 %94, 0, !dbg !60
  %118 = bitcast float %115 to i32, !dbg !60
  %119 = select i1 %92, i32 0, i32 %118, !dbg !61
  %120 = and i1 %117, %10, !dbg !60
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %119, ptr addrspace(1) %116, i1 %120) #2, !dbg !60
  ret void, !dbg !62
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfxv2mcqauthrxytgtwmwwo6fx2sly473z2blbibzkaanmmjpn26.py", directory: "inductor_cache/fx")
!4 = !{ptr @triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1", linkageName: "triton_poi_fused__log_softmax_index_put_lift_fresh_mul_neg_scatter_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 30, scope: !7)
!16 = !DILocation(line: 25, column: 35, scope: !7)
!17 = !DILocation(line: 26, column: 32, scope: !7)
!18 = !DILocation(line: 26, column: 30, scope: !7)
!19 = !DILocation(line: 26, column: 37, scope: !7)
!20 = !DILocation(line: 27, column: 34, scope: !7)
!21 = !DILocation(line: 27, column: 30, scope: !7)
!22 = !DILocation(line: 27, column: 41, scope: !7)
!23 = !DILocation(line: 28, column: 35, scope: !7)
!24 = !DILocation(line: 28, column: 31, scope: !7)
!25 = !DILocation(line: 28, column: 42, scope: !7)
!26 = !DILocation(line: 29, column: 35, scope: !7)
!27 = !DILocation(line: 29, column: 31, scope: !7)
!28 = !DILocation(line: 29, column: 42, scope: !7)
!29 = !DILocation(line: 34, column: 23, scope: !7)
!30 = !DILocation(line: 35, column: 23, scope: !7)
!31 = !DILocation(line: 36, column: 18, scope: !7)
!32 = !DILocation(line: 37, column: 24, scope: !7)
!33 = !DILocation(line: 38, column: 19, scope: !7)
!34 = !DILocation(line: 39, column: 24, scope: !7)
!35 = !DILocation(line: 40, column: 20, scope: !7)
!36 = !DILocation(line: 41, column: 24, scope: !7)
!37 = !DILocation(line: 31, column: 19, scope: !7)
!38 = !DILocation(line: 33, column: 32, scope: !7)
!39 = !DILocation(line: 42, column: 19, scope: !7)
!40 = !DILocation(line: 43, column: 20, scope: !7)
!41 = !DILocation(line: 46, column: 35, scope: !7)
!42 = !DILocation(line: 47, column: 20, scope: !7)
!43 = !DILocation(line: 48, column: 19, scope: !7)
!44 = !DILocation(line: 50, column: 20, scope: !7)
!45 = !DILocation(line: 51, column: 35, scope: !7)
!46 = !DILocation(line: 52, column: 20, scope: !7)
!47 = !DILocation(line: 53, column: 20, scope: !7)
!48 = !DILocation(line: 54, column: 20, scope: !7)
!49 = !DILocation(line: 56, column: 20, scope: !7)
!50 = !DILocation(line: 57, column: 35, scope: !7)
!51 = !DILocation(line: 58, column: 20, scope: !7)
!52 = !DILocation(line: 59, column: 20, scope: !7)
!53 = !DILocation(line: 60, column: 20, scope: !7)
!54 = !DILocation(line: 62, column: 20, scope: !7)
!55 = !DILocation(line: 63, column: 35, scope: !7)
!56 = !DILocation(line: 64, column: 20, scope: !7)
!57 = !DILocation(line: 65, column: 20, scope: !7)
!58 = !DILocation(line: 66, column: 13, scope: !7)
!59 = !DILocation(line: 69, column: 28, scope: !7)
!60 = !DILocation(line: 69, column: 40, scope: !7)
!61 = !DILocation(line: 68, column: 34, scope: !7)
!62 = !DILocation(line: 69, column: 4, scope: !7)
