//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__softmax_convolution_56 // -- Begin function triton_per_fused__softmax_convolution_56
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused__softmax_convolution_56
.visible .entry triton_per_fused__softmax_convolution_56(
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_convolution_56_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_convolution_56_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__softmax_convolution_56_param_2,
	.param .u32 triton_per_fused__softmax_convolution_56_param_3,
	.param .u32 triton_per_fused__softmax_convolution_56_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<34>;
	.reg .b32 	%r<81>;
	.reg .f32 	%f<63>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_per_fused__softmax_convolution_56_param_0];
	ld.param.u64 	%rd9, [triton_per_fused__softmax_convolution_56_param_1];
$L__tmp0:
	.loc	1 24 28                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd10, [triton_per_fused__softmax_convolution_56_param_2];
	.loc	1 27 26                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:27:26
	mov.u32 	%r42, %tid.x;
	and.b32  	%r43, %r42, 31;
	shl.b32 	%r44, %r42, 2;
	and.b32  	%r45, %r44, 252;
	.loc	1 32 19                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:32:19
	shr.s32 	%r46, %r1, 31;
	shr.u32 	%r47, %r46, 30;
	add.s32 	%r48, %r1, %r47;
	and.b32  	%r49, %r48, -4;
	sub.s32 	%r50, %r1, %r49;
	.loc	1 33 43                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:33:43
	shl.b32 	%r51, %r1, 8;
	.loc	1 33 39                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:33:39
	or.b32  	%r52, %r51, %r45;
	.loc	1 33 34                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:33:34
	mul.wide.s32 	%rd11, %r52, 4;
	add.s64 	%rd1, %rd8, %rd11;
	mov.pred 	%p1, -1;
	.loc	1 33 48                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:33:48
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r2;
	mov.b32 	%f10, %r3;
	mov.b32 	%f11, %r4;
	mov.b32 	%f12, %r5;
	.loc	1 34 30                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:34:30
	mul.wide.s32 	%rd12, %r50, 4;
	add.s64 	%rd2, %rd9, %rd12;
	.loc	1 34 35                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:34:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r9;
	.loc	1 35 18                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:35:18
	add.f32 	%f14, %f9, %f13;
	add.f32 	%f15, %f10, %f13;
	add.f32 	%f16, %f11, %f13;
	add.f32 	%f17, %f12, %f13;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p14, %f14, %f15;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p15, %f14, %f14;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f18, %f14, %f15, %p15;
	selp.f32 	%f19, %f14, %f18, %p14;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p16, %f19, %f16;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p17, %f19, %f19;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f20, %f19, %f16, %p17;
	selp.f32 	%f21, %f19, %f20, %p16;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p18, %f21, %f17;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p19, %f21, %f21;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f22, %f21, %f17, %p19;
	selp.f32 	%f23, %f21, %f22, %p18;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r53, %f23;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	mov.b32 	%f24, %r54;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p20, %f23, %f24;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p21, %f23, %f23;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, %f23, %f24, %p21;
	selp.f32 	%f26, %f23, %f25, %p20;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r55, %f26;
	shfl.sync.bfly.b32	%r56, %r55, 8, 31, -1;
	mov.b32 	%f27, %r56;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p22, %f26, %f27;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p23, %f26, %f26;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f28, %f26, %f27, %p23;
	selp.f32 	%f29, %f26, %f28, %p22;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r57, %f29;
	shfl.sync.bfly.b32	%r58, %r57, 4, 31, -1;
	mov.b32 	%f30, %r58;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p24, %f29, %f30;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p25, %f29, %f29;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f31, %f29, %f30, %p25;
	selp.f32 	%f32, %f29, %f31, %p24;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r59, %f32;
	shfl.sync.bfly.b32	%r60, %r59, 2, 31, -1;
	mov.b32 	%f33, %r60;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p26, %f32, %f33;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p27, %f32, %f32;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f34, %f32, %f33, %p27;
	selp.f32 	%f35, %f32, %f34, %p26;
	.loc	2 131 29                        // triton_helpers.py:131:29
	mov.b32 	%r61, %f35;
	shfl.sync.bfly.b32	%r62, %r61, 1, 31, -1;
	mov.b32 	%f36, %r62;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p28, %f35, %f36;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p29, %f35, %f35;
	.loc	2 131 29                        // triton_helpers.py:131:29
	setp.eq.s32 	%p6, %r43, 0;
	shr.u32 	%r63, %r42, 3;
	and.b32  	%r64, %r63, 4;
	mov.u32 	%r65, global_smem;
	add.s32 	%r10, %r65, %r64;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r66, %r61, %r62, %p29;
	selp.b32 	%r11, %r61, %r66, %p28;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p7, %r42, 2;
	add.s32 	%r13, %r65, %r44;
	// begin inline asm
	@%p7 ld.shared.b32 %r12, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r12;
	shfl.sync.bfly.b32	%r67, %r12, 1, 31, -1;
	mov.b32 	%f38, %r67;
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p30, %f37, %f38;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p31, %f37, %f37;
	.loc	2 131 29                        // triton_helpers.py:131:29
	and.b32  	%r68, %r42, 1;
	setp.eq.b32 	%p32, %r68, 1;
	not.pred 	%p33, %p32;
	and.pred  	%p8, %p7, %p33;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r69, %r12, %r67, %p30;
	selp.b32 	%r15, %r12, %r69, %p31;
	.loc	2 131 29                        // triton_helpers.py:131:29
	// begin inline asm
	@%p8 st.shared.b32 [ %r13 + 0 ], %r15;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f39, [global_smem];
$L__tmp2:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f40, %f39, 0f00000000;
$L__tmp3:
	.loc	1 40 18                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:40:18
	sub.f32 	%f41, %f14, %f40;
	sub.f32 	%f42, %f15, %f40;
	sub.f32 	%f43, %f16, %f40;
	sub.f32 	%f44, %f17, %f40;
	.loc	1 42 24                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:42:24
	mul.f32 	%f2, %f41, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f42, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	mul.f32 	%f6, %f43, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f44, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
$L__tmp4:
	.loc	3 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f45, %f1, %f3;
	add.f32 	%f46, %f45, %f5;
	add.f32 	%f47, %f46, %f7;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r70, %f47;
	shfl.sync.bfly.b32	%r71, %r70, 16, 31, -1;
	mov.b32 	%f48, %r71;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f49;
	shfl.sync.bfly.b32	%r73, %r72, 8, 31, -1;
	mov.b32 	%f50, %r73;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f51;
	shfl.sync.bfly.b32	%r75, %r74, 4, 31, -1;
	mov.b32 	%f52, %r75;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f53;
	shfl.sync.bfly.b32	%r77, %r76, 2, 31, -1;
	mov.b32 	%f54, %r77;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f55;
	shfl.sync.bfly.b32	%r79, %r78, 1, 31, -1;
	mov.b32 	%f56, %r79;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r17, %f57;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p7 ld.shared.b32 %r18, [ %r13 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r18;
	shfl.sync.bfly.b32	%r80, %r18, 1, 31, -1;
	mov.b32 	%f59, %r80;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r21, %f60;
	// begin inline asm
	@%p8 st.shared.b32 [ %r13 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f61, [global_smem];
$L__tmp5:
	.loc	2 73 15                         // triton_helpers.py:73:15
	add.f32 	%f62, %f61, 0f00000000;
$L__tmp6:
	.loc	1 45 20                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:45:20
	mov.b32 	%r23, %f1;
	mov.b32 	%r24, %f62;
	// begin inline asm
	div.full.f32 %r38, %r23, %r24;
	// end inline asm
	mov.b32 	%r26, %f3;
	// begin inline asm
	div.full.f32 %r39, %r26, %r24;
	// end inline asm
	mov.b32 	%r29, %f5;
	// begin inline asm
	div.full.f32 %r40, %r29, %r24;
	// end inline asm
	mov.b32 	%r32, %f7;
	// begin inline asm
	div.full.f32 %r41, %r32, %r24;
	// end inline asm
	.loc	1 46 48                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:46:48
	mov.b32 	%r34, %f14;
	mov.b32 	%r35, %f15;
	mov.b32 	%r36, %f16;
	mov.b32 	%r37, %f17;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r34, %r35, %r36, %r37 };
	// end inline asm
	.loc	1 47 25                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:47:25
	add.s64 	%rd7, %rd10, %rd11;
	.loc	1 47 46                         // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:47:46
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r38, %r39, %r40, %r41 };
	// end inline asm
	.loc	1 47 4                          // cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py:47:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/cz/cczea36a6msoqgwe4n754imz2a72iuhtsxefbfkwehw5ycrg66mi.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 257                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xfa DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 99
.b8 122
.b8 101
.b8 97
.b8 51
.b8 54
.b8 97
.b8 54
.b8 109
.b8 115
.b8 111
.b8 113
.b8 103
.b8 119
.b8 101
.b8 52
.b8 110
.b8 55
.b8 53
.b8 52
.b8 105
.b8 109
.b8 122
.b8 50
.b8 97
.b8 55
.b8 50
.b8 105
.b8 117
.b8 104
.b8 116
.b8 115
.b8 120
.b8 101
.b8 102
.b8 98
.b8 102
.b8 107
.b8 119
.b8 101
.b8 104
.b8 119
.b8 53
.b8 121
.b8 99
.b8 114
.b8 103
.b8 54
.b8 54
.b8 109
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 99
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 53
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 70                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xeb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
