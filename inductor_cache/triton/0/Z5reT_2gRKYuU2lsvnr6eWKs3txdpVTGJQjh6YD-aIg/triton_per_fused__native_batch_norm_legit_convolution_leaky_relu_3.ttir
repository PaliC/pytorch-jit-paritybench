#loc = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":39:24)
#loc25 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":47:26)
#loc43 = loc(callsite(#loc1 at #loc18))
#loc46 = loc(callsite(#loc1 at #loc25))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_convolution_leaky_relu_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0), %arg6: i32 loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":19:0)) attributes {noinline = false} {
    %c49_i32 = arith.constant 49 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %cst = arith.constant dense<2.000000e-01> : tensor<1x64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4.900000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x64xf32> loc(#loc1)
    %cst_3 = arith.constant dense<49> : tensor<1x64xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c2048_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<1x64xi32> loc(#loc6)
    %6 = arith.remsi %0, %c512_i32 : i32 loc(#loc7)
    %7 = arith.muli %0, %c49_i32 : i32 loc(#loc8)
    %8 = tt.splat %7 : i32 -> tensor<1x64xi32> loc(#loc9)
    %9 = arith.addi %4, %8 : tensor<1x64xi32> loc(#loc9)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %9 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc10)
    %12 = tt.splat %1 : i1 -> tensor<1x64xi1> loc(#loc11)
    %13 = arith.andi %5, %12 : tensor<1x64xi1> loc(#loc11)
    %14 = tt.load %11, %13, %cst_2 : tensor<1x64x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.addptr %arg1, %6 : !tt.ptr<f32>, i32 loc(#loc13)
    %16 = tt.splat %15 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.load %16, %2 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.broadcast %17 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc15)
    %19 = arith.addf %14, %18 : tensor<1x64xf32> loc(#loc15)
    %20 = arith.select %13, %19, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc16)
    %21 = "tt.reduce"(%20) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc18)), %arg8: f32 loc(callsite(#loc1 at #loc18))):
      %44 = arith.addf %arg7, %arg8 : f32 loc(#loc47)
      tt.reduce.return %44 : f32 loc(#loc42)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc42)
    %22 = tt.expand_dims %21 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc20)
    %23 = arith.divf %22, %cst_1 : tensor<1x1xf32> loc(#loc21)
    %24 = tt.broadcast %23 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc22)
    %25 = arith.subf %19, %24 : tensor<1x64xf32> loc(#loc22)
    %26 = arith.mulf %25, %25 : tensor<1x64xf32> loc(#loc23)
    %27 = arith.select %13, %26, %cst_2 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc24)
    %28 = "tt.reduce"(%27) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc25)), %arg8: f32 loc(callsite(#loc1 at #loc25))):
      %44 = arith.addf %arg7, %arg8 : f32 loc(#loc48)
      tt.reduce.return %44 : f32 loc(#loc45)
    }) : (tensor<1x64xf32>) -> tensor<1xf32> loc(#loc45)
    %29 = tt.expand_dims %28 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc26)
    %30 = arith.divf %29, %cst_1 : tensor<1x1xf32> loc(#loc27)
    %31 = arith.addf %30, %cst_0 : tensor<1x1xf32> loc(#loc28)
    %32 = tt.extern_elementwise %31 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc29)
    %33 = tt.broadcast %32 : tensor<1x1xf32> -> tensor<1x64xf32> loc(#loc30)
    %34 = arith.mulf %25, %33 : tensor<1x64xf32> loc(#loc30)
    %35 = arith.cmpf ogt, %34, %cst_2 : tensor<1x64xf32> loc(#loc31)
    %36 = arith.mulf %34, %cst : tensor<1x64xf32> loc(#loc32)
    %37 = arith.select %35, %34, %36 : tensor<1x64xi1>, tensor<1x64xf32> loc(#loc33)
    tt.store %11, %19, %13 : tensor<1x64x!tt.ptr<f32>> loc(#loc34)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x64x!tt.ptr<f32>> loc(#loc35)
    %39 = tt.addptr %38, %9 : tensor<1x64x!tt.ptr<f32>>, tensor<1x64xi32> loc(#loc35)
    tt.store %39, %37, %13 : tensor<1x64x!tt.ptr<f32>> loc(#loc36)
    %40 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc37)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc37)
    tt.store %41, %32, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    %42 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc39)
    %43 = tt.splat %42 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    tt.store %43, %23, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    tt.return loc(#loc41)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":23:28)
#loc3 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":25:21)
#loc4 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":26:26)
#loc5 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":26:34)
#loc6 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":28:21)
#loc7 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":31:19)
#loc8 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":32:42)
#loc9 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":32:39)
#loc10 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":32:34)
#loc11 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":32:55)
#loc12 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":32:47)
#loc13 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":33:30)
#loc14 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":33:35)
#loc15 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":34:18)
#loc16 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":38:41)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc20 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":39:27)
#loc21 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":42:19)
#loc22 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":43:19)
#loc23 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":44:20)
#loc24 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":46:43)
#loc26 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":47:29)
#loc27 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":50:20)
#loc28 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":52:20)
#loc29 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":53:28)
#loc30 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":54:20)
#loc31 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":56:20)
#loc32 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":58:20)
#loc33 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":59:35)
#loc34 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":60:47)
#loc35 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":61:25)
#loc36 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":61:45)
#loc37 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":62:25)
#loc38 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":62:37)
#loc39 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":63:25)
#loc40 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":63:37)
#loc41 = loc("inductor_cache/on/con45dogmsquhfirckkmuqjrtqw572npwqpo6mhbon6fvcackmgu.py":63:4)
#loc42 = loc(callsite(#loc17 at #loc18))
#loc44 = loc(callsite(#loc19 at #loc17))
#loc45 = loc(callsite(#loc17 at #loc25))
#loc47 = loc(callsite(#loc44 at #loc18))
#loc48 = loc(callsite(#loc44 at #loc25))
