//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_24 // -- Begin function triton_poi_fused_convolution_24
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_24
.visible .entry triton_poi_fused_convolution_24(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_24_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_24_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_24_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_24_param_3,
	.param .u32 triton_poi_fused_convolution_24_param_4,
	.param .u32 triton_poi_fused_convolution_24_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_24_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_24_param_1];
$L__tmp0:
	.loc	1 22 28                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:22:33
	shl.b32 	%r52, %r1, 8;
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_24_param_2];
	.loc	1 23 44                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:23:44
	mov.u32 	%r53, %tid.x;
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_24_param_3];
	shl.b32 	%r55, %r53, 2;
	and.b32  	%r56, %r55, 252;
	shl.b32 	%r57, %r53, 1;
	and.b32  	%r58, %r57, 254;
	and.b32  	%r59, %r53, 127;
	or.b32  	%r60, %r59, 128;
	.loc	1 23 23                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:23:23
	or.b32  	%r61, %r52, %r56;
	or.b32  	%r62, %r52, %r58;
	or.b32  	%r63, %r52, %r59;
	or.b32  	%r64, %r52, %r60;
	.loc	1 25 28                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:25:33
	shl.b32 	%r65, %r2, 2;
	.loc	1 26 44                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:26:44
	bfe.u32 	%r66, %r53, 6, 1;
	.loc	1 26 23                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:26:23
	or.b32  	%r67, %r65, %r66;
	or.b32  	%r68, %r67, 2;
	.loc	1 27 21                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:27:21
	setp.lt.s32 	%p1, %r67, 4;
	setp.lt.s32 	%p2, %r68, 4;
	setp.lt.s32 	%p15, %r65, 4;
	.loc	1 30 19                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:30:19
	bfe.s32 	%r69, %r1, 23, 1;
	.loc	1 29 19                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:29:19
	shr.u32 	%r70, %r69, 24;
	.loc	1 30 19                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:30:19
	add.s32 	%r71, %r61, %r70;
	.loc	1 29 19                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:29:19
	and.b32  	%r72, %r71, -256;
	sub.s32 	%r73, %r61, %r72;
	add.s32 	%r74, %r62, %r70;
	and.b32  	%r75, %r74, -256;
	sub.s32 	%r76, %r62, %r75;
	.loc	1 32 39                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:32:39
	shl.b32 	%r77, %r67, 8;
	shl.b32 	%r78, %r68, 8;
	.loc	1 32 49                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:32:49
	shl.b32 	%r79, %r71, 2;
	and.b32  	%r80, %r79, -1024;
	.loc	1 32 35                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:32:35
	add.s32 	%r81, %r80, %r73;
	.loc	1 32 44                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:32:44
	add.s32 	%r82, %r81, %r77;
	add.s32 	%r83, %r81, %r78;
	.loc	1 32 30                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:32:30
	mul.wide.s32 	%rd12, %r82, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r83, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 32 54                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:32:54
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r12;
	mov.b32 	%f2, %r14;
	mov.b32 	%f3, %r16;
	mov.b32 	%f4, %r18;
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r20;
	mov.b32 	%f6, %r22;
	mov.b32 	%f7, %r24;
	mov.b32 	%f8, %r26;
	shl.b32 	%r84, %r53, 4;
	and.b32  	%r85, %r84, 1008;
	or.b32  	%r86, %r85, %r66;
	and.b32  	%r87, %r55, 508;
	mov.u32 	%r88, global_smem;
	add.s32 	%r89, %r88, %r85;
	shl.b32 	%r90, %r86, 2;
	add.s32 	%r11, %r89, %r90;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	add.s32 	%r13, %r11, 20;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	add.s32 	%r15, %r11, 40;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	add.s32 	%r17, %r11, 60;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r11, 28;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r11, 48;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r11, 68;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r91, %r88, %r87;
	shl.b32 	%r92, %r87, 2;
	add.s32 	%r93, %r91, %r92;
	ld.shared.f32 	%f9, [%r93];
	ld.shared.f32 	%f10, [%r93+4];
	ld.shared.f32 	%f11, [%r93+8];
	ld.shared.f32 	%f12, [%r93+12];
	ld.shared.f32 	%f13, [%r93+2560];
	ld.shared.f32 	%f14, [%r93+2564];
	ld.shared.f32 	%f15, [%r93+2568];
	ld.shared.f32 	%f16, [%r93+2572];
	.loc	1 33 30                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:33:30
	mul.wide.s32 	%rd14, %r76, 4;
	add.s64 	%rd3, %rd9, %rd14;
	.loc	1 33 35                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:33:35
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r32, 0x0;
	@%p3 ld.global.L1::evict_last.v2.b32 { %r30, %r32 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 18                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:34:18
	bar.sync 	0;
	shl.b32 	%r94, %r58, 3;
	add.s32 	%r29, %r88, %r94;
	// begin inline asm
	@%p3 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	add.s32 	%r31, %r29, 8;
	// begin inline asm
	@%p3 st.shared.b32 [ %r31 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r95, %r59, 3;
	add.s32 	%r96, %r88, %r95;
	ld.shared.f32 	%f17, [%r96];
	shl.b32 	%r97, %r60, 3;
	add.s32 	%r98, %r88, %r97;
	ld.shared.f32 	%f18, [%r98];
	bar.sync 	0;
	shl.b32 	%r99, %r58, 2;
	sub.s32 	%r33, %r29, %r99;
	// begin inline asm
	@%p3 st.shared.v2.b32 [ %r33 + 0 ], { %r30, %r32 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r100, %r56, 2;
	add.s32 	%r101, %r88, %r100;
	ld.shared.v4.f32 	{%f19, %f20, %f21, %f22}, [%r101];
	add.f32 	%f23, %f9, %f17;
	add.f32 	%f24, %f10, %f17;
	add.f32 	%f25, %f11, %f17;
	add.f32 	%f26, %f12, %f17;
	add.f32 	%f27, %f13, %f18;
	add.f32 	%f28, %f14, %f18;
	add.f32 	%f29, %f15, %f18;
	add.f32 	%f30, %f16, %f18;
	add.f32 	%f31, %f19, %f1;
	add.f32 	%f32, %f20, %f2;
	add.f32 	%f33, %f21, %f3;
	add.f32 	%f34, %f22, %f4;
	add.f32 	%f35, %f19, %f5;
	add.f32 	%f36, %f20, %f6;
	add.f32 	%f37, %f21, %f7;
	add.f32 	%f38, %f22, %f8;
	.loc	1 35 30                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:35:30
	add.s32 	%r102, %r63, %r2;
	shl.b32 	%r103, %r102, 2;
	add.s32 	%r104, %r64, %r2;
	shl.b32 	%r105, %r104, 2;
	.loc	1 35 25                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:35:25
	mul.wide.s32 	%rd15, %r103, 4;
	add.s64 	%rd4, %rd10, %rd15;
	mul.wide.s32 	%rd16, %r105, 4;
	add.s64 	%rd5, %rd10, %rd16;
	.loc	1 35 43                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:35:43
	mov.b32 	%r36, %f23;
	mov.b32 	%r37, %f24;
	mov.b32 	%r38, %f25;
	mov.b32 	%r39, %f26;
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd4 + 0 ], { %r36, %r37, %r38, %r39 };
	// end inline asm
	mov.b32 	%r40, %f27;
	mov.b32 	%r41, %f28;
	mov.b32 	%r42, %f29;
	mov.b32 	%r43, %f30;
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd5 + 0 ], { %r40, %r41, %r42, %r43 };
	// end inline asm
	.loc	1 36 25                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:36:25
	add.s64 	%rd6, %rd11, %rd12;
	add.s64 	%rd7, %rd11, %rd13;
	.loc	1 36 55                         // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:36:55
	mov.b32 	%r44, %f31;
	mov.b32 	%r45, %f32;
	mov.b32 	%r46, %f33;
	mov.b32 	%r47, %f34;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	mov.b32 	%r48, %f35;
	mov.b32 	%r49, %f36;
	mov.b32 	%r50, %f37;
	mov.b32 	%r51, %f38;
	// begin inline asm
	@%p2 st.global.v4.b32 [ %rd7 + 0 ], { %r48, %r49, %r50, %r51 };
	// end inline asm
	.loc	1 36 4                          // cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py:36:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qx/cqx3zdp5pw27wct37ty4ywplyqponchc7nms6f554f6aut5qeaeu.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 120
.b8 51
.b8 122
.b8 100
.b8 112
.b8 53
.b8 112
.b8 119
.b8 50
.b8 55
.b8 119
.b8 99
.b8 116
.b8 51
.b8 55
.b8 116
.b8 121
.b8 52
.b8 121
.b8 119
.b8 112
.b8 108
.b8 121
.b8 113
.b8 112
.b8 111
.b8 110
.b8 99
.b8 104
.b8 99
.b8 55
.b8 110
.b8 109
.b8 115
.b8 54
.b8 102
.b8 53
.b8 53
.b8 52
.b8 102
.b8 54
.b8 97
.b8 117
.b8 116
.b8 53
.b8 113
.b8 101
.b8 97
.b8 101
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
