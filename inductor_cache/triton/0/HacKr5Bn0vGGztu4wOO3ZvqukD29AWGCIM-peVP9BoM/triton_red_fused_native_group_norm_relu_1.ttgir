#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 4], threadsPerWarp = [1, 32], warpsPerCTA = [1, 16], order = [1, 0]}>
#loc = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0)
#loc1 = loc(unknown)
#loc38 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":61:44)
#loc72 = loc(callsite(#loc1 at #loc38))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 16 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_red_fused_native_group_norm_relu_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg12: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<2.048000e+03> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c2048_i32 = arith.constant 2048 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x2048xf32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<2048> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2048> : tensor<1x2048xi32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<1024> : tensor<1x2048xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<2.048000e+03> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<1.000000e+00> : tensor<1x2048xf32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 2048 : i32, start = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x2048xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 0 : i32} : tensor<2048xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x2048xi32, #blocked1> loc(#loc4)
    %6 = tt.addptr %arg1, %0 : !tt.ptr<f32>, i32 loc(#loc5)
    %7 = tt.splat %6 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc6)
    %8 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked1> loc(#loc6)
    %9 = tt.load %7, %8 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc6)
    %10 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc7)
    %11 = tt.splat %10 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc8)
    %12 = tt.load %11, %8 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc8)
    %13 = arith.remsi %0, %c32_i32 : i32 loc(#loc9)
    %14 = arith.cmpi slt, %4, %cst_4 : tensor<1x2048xi32, #blocked> loc(#loc10)
    %15 = arith.cmpi slt, %5, %cst_5 : tensor<1x2048xi32, #blocked1> loc(#loc10)
    %16 = arith.divsi %4, %cst_6 : tensor<1x2048xi32, #blocked> loc(#loc11)
    %17 = arith.muli %0, %c2048_i32 : i32 loc(#loc12)
    %18 = tt.splat %17 : i32 -> tensor<1x2048xi32, #blocked1> loc(#loc13)
    %19 = arith.addi %5, %18 : tensor<1x2048xi32, #blocked1> loc(#loc13)
    %20 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc14)
    %21 = tt.addptr %20, %19 : tensor<1x2048x!tt.ptr<f32>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc14)
    %22 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked> loc(#loc15)
    %23 = tt.splat %1 : i1 -> tensor<1x2048xi1, #blocked1> loc(#loc15)
    %24 = arith.andi %14, %22 : tensor<1x2048xi1, #blocked> loc(#loc15)
    %25 = arith.andi %15, %23 : tensor<1x2048xi1, #blocked1> loc(#loc15)
    %26 = tt.load %21, %25, %cst_3 evictionPolicy = evict_first : tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %27 = arith.muli %13, %c2_i32 : i32 loc(#loc17)
    %28 = tt.splat %27 : i32 -> tensor<1x2048xi32, #blocked> loc(#loc18)
    %29 = arith.addi %16, %28 : tensor<1x2048xi32, #blocked> loc(#loc18)
    %30 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc19)
    %31 = tt.addptr %30, %29 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc19)
    %32 = tt.load %31, %24, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc20)
    %33 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc21)
    %34 = tt.addptr %33, %29 : tensor<1x2048x!tt.ptr<f32>, #blocked>, tensor<1x2048xi32, #blocked> loc(#loc21)
    %35 = tt.load %34, %24, %cst evictionPolicy = evict_last : tensor<1x2048x!tt.ptr<f32>, #blocked> loc(#loc22)
    %36 = tt.broadcast %9 : tensor<1x1xf32, #blocked1> -> tensor<1x2048xf32, #blocked1> loc(#loc23)
    %37 = arith.subf %26, %36 : tensor<1x2048xf32, #blocked1> loc(#loc23)
    %38 = arith.divf %12, %cst_7 : tensor<1x1xf32, #blocked1> loc(#loc24)
    %39 = arith.addf %38, %cst_9 : tensor<1x1xf32, #blocked1> loc(#loc25)
    %40 = tt.extern_elementwise %39 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked1>) -> tensor<1x1xf32, #blocked1> loc(#loc26)
    %41 = tt.broadcast %40 : tensor<1x1xf32, #blocked1> -> tensor<1x2048xf32, #blocked1> loc(#loc27)
    %42 = arith.mulf %37, %41 : tensor<1x2048xf32, #blocked1> loc(#loc27)
    %43 = triton_gpu.convert_layout %42 {fastmath = #arith.fastmath<none>} : tensor<1x2048xf32, #blocked1> -> tensor<1x2048xf32, #blocked> loc(#loc27)
    %44 = arith.mulf %43, %32 : tensor<1x2048xf32, #blocked> loc(#loc28)
    %45 = arith.addf %44, %35 : tensor<1x2048xf32, #blocked> loc(#loc29)
    %46 = arith.cmpf ogt, %cst, %45 : tensor<1x2048xf32, #blocked> loc(#loc69)
    %47 = arith.select %46, %cst, %45 : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc70)
    %48 = arith.select %24, %47, %cst : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc33)
    %49 = arith.select %24, %cst_8, %cst : tensor<1x2048xi1, #blocked>, tensor<1x2048xf32, #blocked> loc(#loc34)
    %50 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc35)
    %51 = tt.addptr %50, %19 : tensor<1x2048x!tt.ptr<f32>, #blocked1>, tensor<1x2048xi32, #blocked1> loc(#loc35)
    %52 = triton_gpu.convert_layout %47 : tensor<1x2048xf32, #blocked> -> tensor<1x2048xf32, #blocked1> loc(#loc36)
    tt.store %51, %52, %25 : tensor<1x2048x!tt.ptr<f32>, #blocked1> loc(#loc36)
    %53:3 = "tt.reduce"(%48, %cst, %49) <{axis = 1 : i32}> ({
    ^bb0(%arg14: f32 loc(callsite(#loc1 at #loc38)), %arg15: f32 loc(callsite(#loc1 at #loc38)), %arg16: f32 loc(callsite(#loc1 at #loc38)), %arg17: f32 loc(callsite(#loc1 at #loc38)), %arg18: f32 loc(callsite(#loc1 at #loc38)), %arg19: f32 loc(callsite(#loc1 at #loc38))):
      %72 = arith.subf %arg17, %arg14 : f32 loc(#loc85)
      %73 = arith.addf %arg16, %arg19 : f32 loc(#loc86)
      %74 = arith.cmpf oeq, %73, %cst_2 : f32 loc(#loc87)
      %75 = arith.divf %arg19, %73 : f32 loc(#loc88)
      %76 = arith.select %74, %cst_2, %75 : f32 loc(#loc89)
      %77 = arith.mulf %72, %76 : f32 loc(#loc90)
      %78 = arith.addf %arg14, %77 : f32 loc(#loc91)
      %79 = arith.addf %arg15, %arg18 : f32 loc(#loc92)
      %80 = arith.mulf %72, %72 : f32 loc(#loc93)
      %81 = arith.mulf %80, %arg16 : f32 loc(#loc94)
      %82 = arith.mulf %81, %76 : f32 loc(#loc95)
      %83 = arith.addf %79, %82 : f32 loc(#loc96)
      tt.reduce.return %78, %83, %73 : f32, f32, f32 loc(#loc71)
    }) : (tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>, tensor<1x2048xf32, #blocked>) -> (tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>, tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>>) loc(#loc71)
    %54 = tt.expand_dims %53#0 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc51)
    %55 = tt.expand_dims %53#1 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<1x1xf32, #blocked> loc(#loc52)
    %56 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc53)
    %57 = tt.splat %56 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc54)
    %58 = tt.splat %1 : i1 -> tensor<1x1xi1, #blocked> loc(#loc54)
    tt.store %57, %54, %58 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc54)
    %59 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc55)
    %60 = tt.splat %59 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc56)
    tt.store %60, %55, %58 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc56)
    %61 = tt.addptr %arg8, %0 : !tt.ptr<f32>, i32 loc(#loc57)
    %62 = tt.splat %61 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc58)
    tt.store %62, %54, %58 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc58)
    %63 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc59)
    %64 = tt.splat %63 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc60)
    tt.store %64, %55, %58 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc60)
    %65 = arith.divf %55, %cst_0 : tensor<1x1xf32, #blocked> loc(#loc61)
    %66 = arith.addf %65, %cst_1 : tensor<1x1xf32, #blocked> loc(#loc62)
    %67 = tt.extern_elementwise %66 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32, #blocked>) -> tensor<1x1xf32, #blocked> loc(#loc63)
    %68 = tt.addptr %arg10, %0 : !tt.ptr<f32>, i32 loc(#loc64)
    %69 = tt.splat %68 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc65)
    tt.store %69, %67, %58 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc65)
    %70 = tt.addptr %arg11, %0 : !tt.ptr<f32>, i32 loc(#loc66)
    %71 = tt.splat %70 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc67)
    tt.store %71, %67, %58 : tensor<1x1x!tt.ptr<f32>, #blocked> loc(#loc67)
    tt.return loc(#loc68)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":22:28)
#loc3 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":24:21)
#loc4 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":25:33)
#loc5 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":27:30)
#loc6 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":27:35)
#loc7 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":28:30)
#loc8 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":28:35)
#loc9 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":29:19)
#loc10 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":35:25)
#loc11 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":37:23)
#loc12 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":38:44)
#loc13 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":38:39)
#loc14 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":38:34)
#loc15 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":38:57)
#loc16 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":38:49)
#loc17 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":39:42)
#loc18 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":39:40)
#loc19 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":39:35)
#loc20 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":39:47)
#loc21 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":40:35)
#loc22 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":40:47)
#loc23 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":41:22)
#loc24 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":43:22)
#loc25 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":45:22)
#loc26 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":46:31)
#loc27 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":47:22)
#loc28 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":48:23)
#loc29 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":49:24)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc31 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":51:46)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc33 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":56:62)
#loc34 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":58:66)
#loc35 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":59:29)
#loc36 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":59:51)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc51 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":63:22)
#loc52 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":64:22)
#loc53 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":66:25)
#loc54 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":66:37)
#loc55 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":67:25)
#loc56 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":67:37)
#loc57 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":68:25)
#loc58 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":68:37)
#loc59 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":69:25)
#loc60 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":69:37)
#loc61 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":71:20)
#loc62 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":73:20)
#loc63 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":74:28)
#loc64 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":75:25)
#loc65 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":75:37)
#loc66 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":76:25)
#loc67 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":76:37)
#loc68 = loc("inductor_cache/dd/cdd5kx3h4nf7ktsyxllzdabsrczhjo3e5uxaxpugxlbji2qidtza.py":76:4)
#loc69 = loc(callsite(#loc30 at #loc31))
#loc70 = loc(callsite(#loc32 at #loc31))
#loc71 = loc(callsite(#loc37 at #loc38))
#loc73 = loc(callsite(#loc39 at #loc37))
#loc74 = loc(callsite(#loc40 at #loc37))
#loc75 = loc(callsite(#loc41 at #loc37))
#loc76 = loc(callsite(#loc42 at #loc37))
#loc77 = loc(callsite(#loc43 at #loc37))
#loc78 = loc(callsite(#loc44 at #loc37))
#loc79 = loc(callsite(#loc45 at #loc37))
#loc80 = loc(callsite(#loc46 at #loc37))
#loc81 = loc(callsite(#loc47 at #loc37))
#loc82 = loc(callsite(#loc48 at #loc37))
#loc83 = loc(callsite(#loc49 at #loc37))
#loc84 = loc(callsite(#loc50 at #loc37))
#loc85 = loc(callsite(#loc73 at #loc38))
#loc86 = loc(callsite(#loc74 at #loc38))
#loc87 = loc(callsite(#loc75 at #loc38))
#loc88 = loc(callsite(#loc76 at #loc38))
#loc89 = loc(callsite(#loc77 at #loc38))
#loc90 = loc(callsite(#loc78 at #loc38))
#loc91 = loc(callsite(#loc79 at #loc38))
#loc92 = loc(callsite(#loc80 at #loc38))
#loc93 = loc(callsite(#loc81 at #loc38))
#loc94 = loc(callsite(#loc82 at #loc38))
#loc95 = loc(callsite(#loc83 at #loc38))
#loc96 = loc(callsite(#loc84 at #loc38))
