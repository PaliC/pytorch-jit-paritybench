#loc = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_72(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-128> : tensor<128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<128> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_2 = arith.constant dense<512> : tensor<128xi32> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<128xi64> loc(#loc1)
    %cst_4 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_5 = arith.constant dense<1024> : tensor<128xi32> loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %cst_7 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.divsi %4, %cst_7 : tensor<128xi32> loc(#loc6)
    %6 = arith.remsi %5, %cst_6 : tensor<128xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_5 : tensor<128xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_7 : tensor<128xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_4 : tensor<128xi32> loc(#loc10)
    %10 = arith.remsi %9, %cst_4 : tensor<128xi32> loc(#loc11)
    %11 = arith.remsi %4, %cst_4 : tensor<128xi32> loc(#loc12)
    %12 = arith.extsi %6 : tensor<128xi32> to tensor<128xi64> loc(#loc13)
    %13 = arith.cmpi slt, %12, %cst_3 : tensor<128xi64> loc(#loc13)
    %14 = arith.muli %6, %cst_7 : tensor<128xi32> loc(#loc14)
    %15 = arith.addi %8, %14 : tensor<128xi32> loc(#loc15)
    %16 = arith.muli %7, %cst_2 : tensor<128xi32> loc(#loc16)
    %17 = arith.addi %15, %16 : tensor<128xi32> loc(#loc17)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc18)
    %19 = tt.addptr %18, %17 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc18)
    %20 = tt.load %19, %13, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc19)
    %21 = arith.muli %7, %cst_0 : tensor<128xi32> loc(#loc20)
    %22 = arith.addi %21, %6 : tensor<128xi32> loc(#loc21)
    %23 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc22)
    %24 = tt.addptr %23, %22 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc22)
    %25 = tt.load %24, %13, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc23)
    %26 = arith.subf %25, %25 : tensor<128xf32> loc(#loc24)
    %27 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc25)
    %28 = tt.addptr %27, %11 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc25)
    %29 = tt.load %28, %13, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc26)
    %30 = arith.mulf %26, %29 : tensor<128xf32> loc(#loc27)
    %31 = arith.addf %25, %30 : tensor<128xf32> loc(#loc28)
    %32 = arith.subf %31, %20 : tensor<128xf32> loc(#loc29)
    %33 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc30)
    %34 = tt.addptr %33, %10 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc30)
    %35 = tt.load %34, %13, %cst_1 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc31)
    %36 = arith.mulf %32, %35 : tensor<128xf32> loc(#loc32)
    %37 = arith.addf %20, %36 : tensor<128xf32> loc(#loc33)
    %38 = arith.cmpi sge, %12, %cst_3 : tensor<128xi64> loc(#loc34)
    %39 = arith.addi %6, %cst : tensor<128xi32> loc(#loc35)
    %40 = arith.muli %39, %cst_7 : tensor<128xi32> loc(#loc36)
    %41 = arith.addi %8, %40 : tensor<128xi32> loc(#loc37)
    %42 = arith.addi %41, %16 : tensor<128xi32> loc(#loc38)
    %43 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc39)
    %44 = tt.addptr %43, %42 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc39)
    %45 = tt.load %44, %38, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc40)
    %46 = arith.select %13, %37, %45 : tensor<128xi1>, tensor<128xf32> loc(#loc46)
    %47 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc43)
    %48 = tt.addptr %47, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc43)
    tt.store %48, %46 : tensor<128x!tt.ptr<f32>> loc(#loc44)
    tt.return loc(#loc45)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":21:28)
#loc3 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":21:33)
#loc4 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":22:36)
#loc5 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":22:23)
#loc6 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":24:21)
#loc7 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":24:26)
#loc8 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":25:19)
#loc9 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":26:19)
#loc10 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":27:21)
#loc11 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":27:26)
#loc12 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":28:19)
#loc13 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":34:18)
#loc14 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":35:38)
#loc15 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":35:35)
#loc16 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":35:48)
#loc17 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":35:44)
#loc18 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":35:30)
#loc19 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":35:53)
#loc20 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":45:35)
#loc21 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":45:41)
#loc22 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":45:31)
#loc23 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":45:47)
#loc24 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":50:20)
#loc25 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":51:31)
#loc26 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":51:36)
#loc27 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":52:20)
#loc28 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":53:20)
#loc29 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":54:20)
#loc30 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":55:31)
#loc31 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":55:36)
#loc32 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":56:20)
#loc33 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":57:19)
#loc34 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":60:20)
#loc35 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":63:48)
#loc36 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":63:39)
#loc37 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":63:36)
#loc38 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":63:54)
#loc39 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":63:31)
#loc40 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":63:63)
#loc41 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":64:34)
#loc42 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":59:34)
#loc43 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":65:25)
#loc44 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":65:37)
#loc45 = loc("inductor_cache/4p/c4pmuey3w75elfd3zuqs75bqb3a73yomyk3tlxmg4d262otiqltr.py":65:4)
#loc46 = loc(fused[#loc41, #loc42])
