#loc = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":19:0)
module {
  tt.func public @triton_poi_fused_abs_add_clamp_div_erf_log2_mul_neg_reciprocal_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9.99999997E-7> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999971E-10> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.707106769> : tensor<256xf32> loc(#loc1)
    %cst_4 = arith.constant dense<5.000000e-01> : tensor<256xf32> loc(#loc1)
    %cst_5 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_5 : tensor<256xi32> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<256x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.addptr %9, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc9)
    %11 = tt.load %10, %5 : tensor<256x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %14 = tt.load %13, %5 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %15 = arith.addf %8, %cst_4 : tensor<256xf32> loc(#loc13)
    %16 = arith.subf %15, %11 : tensor<256xf32> loc(#loc14)
    %17 = arith.cmpf ogt, %14, %cst_0 : tensor<256xf32> loc(#loc41)
    %18 = arith.cmpf une, %14, %14 : tensor<256xf32> loc(#loc42)
    %19 = arith.ori %17, %18 : tensor<256xi1> loc(#loc43)
    %20 = arith.select %19, %14, %cst_0 : tensor<256xi1>, tensor<256xf32> loc(#loc44)
    %21 = arith.divf %cst_2, %20 : tensor<256xf32> loc(#loc20)
    %22 = arith.mulf %16, %21 : tensor<256xf32> loc(#loc21)
    %23 = arith.mulf %22, %cst_3 : tensor<256xf32> loc(#loc22)
    %24 = tt.extern_elementwise %23 {libname = "", libpath = "", pure = true, symbol = "__nv_erff"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc23)
    %25 = arith.addf %24, %cst_2 : tensor<256xf32> loc(#loc24)
    %26 = arith.mulf %25, %cst_4 : tensor<256xf32> loc(#loc25)
    %27 = arith.subf %8, %cst_4 : tensor<256xf32> loc(#loc26)
    %28 = arith.subf %27, %11 : tensor<256xf32> loc(#loc27)
    %29 = arith.mulf %28, %21 : tensor<256xf32> loc(#loc28)
    %30 = arith.mulf %29, %cst_3 : tensor<256xf32> loc(#loc29)
    %31 = tt.extern_elementwise %30 {libname = "", libpath = "", pure = true, symbol = "__nv_erff"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc30)
    %32 = arith.addf %31, %cst_2 : tensor<256xf32> loc(#loc31)
    %33 = arith.mulf %32, %cst_4 : tensor<256xf32> loc(#loc32)
    %34 = arith.subf %26, %33 : tensor<256xf32> loc(#loc33)
    %35 = math.absf %34 : tensor<256xf32> loc(#loc34)
    %36 = arith.cmpf ogt, %35, %cst : tensor<256xf32> loc(#loc45)
    %37 = arith.cmpf une, %35, %35 : tensor<256xf32> loc(#loc46)
    %38 = arith.ori %36, %37 : tensor<256xi1> loc(#loc47)
    %39 = arith.select %38, %35, %cst : tensor<256xi1>, tensor<256xf32> loc(#loc48)
    %40 = tt.extern_elementwise %39 {libname = "", libpath = "", pure = true, symbol = "__nv_log2f"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc36)
    %41 = arith.subf %cst_1, %40 : tensor<256xf32> loc(#loc37)
    %42 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc38)
    %43 = tt.addptr %42, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc38)
    tt.store %43, %41, %5 : tensor<256x!tt.ptr<f32>> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":21:28)
#loc3 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":21:33)
#loc4 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":22:36)
#loc5 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":22:23)
#loc6 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":23:21)
#loc7 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":25:30)
#loc8 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":25:35)
#loc9 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":26:30)
#loc10 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":26:35)
#loc11 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":27:30)
#loc12 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":27:35)
#loc13 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":29:18)
#loc14 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":30:18)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc16 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":32:40)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc20 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":34:18)
#loc21 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":35:19)
#loc22 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":37:20)
#loc23 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":38:26)
#loc24 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":40:20)
#loc25 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":41:20)
#loc26 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":42:19)
#loc27 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":43:20)
#loc28 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":44:20)
#loc29 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":45:20)
#loc30 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":46:26)
#loc31 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":47:20)
#loc32 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":48:20)
#loc33 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":49:20)
#loc34 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":50:24)
#loc35 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":52:42)
#loc36 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":53:27)
#loc37 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":54:13)
#loc38 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":55:25)
#loc39 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":55:37)
#loc40 = loc("inductor_cache/6s/c6so75zy6c5vlvmzpfusy32bwpfevjeeihv736whuu73oi5v5uss.py":55:4)
#loc41 = loc(callsite(#loc15 at #loc16))
#loc42 = loc(callsite(#loc17 at #loc16))
#loc43 = loc(callsite(#loc18 at #loc16))
#loc44 = loc(callsite(#loc19 at #loc16))
#loc45 = loc(callsite(#loc15 at #loc35))
#loc46 = loc(callsite(#loc17 at #loc35))
#loc47 = loc(callsite(#loc18 at #loc35))
#loc48 = loc(callsite(#loc19 at #loc35))
