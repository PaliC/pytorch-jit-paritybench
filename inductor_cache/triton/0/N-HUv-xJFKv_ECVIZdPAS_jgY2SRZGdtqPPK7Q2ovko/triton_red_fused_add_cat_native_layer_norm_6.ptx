//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_add_cat_native_layer_norm_6 // -- Begin function triton_red_fused_add_cat_native_layer_norm_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_add_cat_native_layer_norm_6
.visible .entry triton_red_fused_add_cat_native_layer_norm_6(
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_6,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_7,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_8,
	.param .u64 .ptr .global .align 1 triton_red_fused_add_cat_native_layer_norm_6_param_9,
	.param .u32 triton_red_fused_add_cat_native_layer_norm_6_param_10,
	.param .u32 triton_red_fused_add_cat_native_layer_norm_6_param_11
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<48>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<123>;
	.reg .f32 	%f<71>;
	.reg .b64 	%rd<79>;
	.loc	1 19 0                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd34, [triton_red_fused_add_cat_native_layer_norm_6_param_9];
	ld.param.u64 	%rd33, [triton_red_fused_add_cat_native_layer_norm_6_param_8];
	ld.param.u64 	%rd32, [triton_red_fused_add_cat_native_layer_norm_6_param_7];
	ld.param.u64 	%rd31, [triton_red_fused_add_cat_native_layer_norm_6_param_6];
	ld.param.u64 	%rd30, [triton_red_fused_add_cat_native_layer_norm_6_param_5];
	ld.param.u64 	%rd29, [triton_red_fused_add_cat_native_layer_norm_6_param_4];
	ld.param.u64 	%rd28, [triton_red_fused_add_cat_native_layer_norm_6_param_2];
	ld.param.u64 	%rd27, [triton_red_fused_add_cat_native_layer_norm_6_param_0];
	ld.param.u64 	%rd41, [triton_red_fused_add_cat_native_layer_norm_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:22:28
	// begin inline asm
	mov.u32 %r13, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:22:33
	shl.b32 	%r25, %r13, 6;
	.loc	1 23 44                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:23:44
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd42, [triton_red_fused_add_cat_native_layer_norm_6_param_3];
	and.b32  	%r26, %r1, 3;
	and.b32  	%r2, %r1, 63;
	bfe.u32 	%r3, %r1, 2, 6;
	.loc	1 23 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:23:23
	or.b32  	%r4, %r25, %r2;
	or.b32  	%r5, %r25, %r3;
	.loc	1 24 21                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:24:21
	setp.lt.s32 	%p14, %r4, 68;
	setp.lt.s32 	%p4, %r5, 68;
	.loc	1 25 33                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:25:33
	bfe.u32 	%r27, %r1, 6, 2;
	.loc	1 27 19                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:27:19
	mul.hi.s32 	%r29, %r4, 2021161081;
	shr.u32 	%r30, %r29, 31;
	shr.s32 	%r31, %r29, 3;
	add.s32 	%r32, %r31, %r30;
	.loc	1 26 19                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:26:19
	mul.lo.s32 	%r33, %r32, 17;
	sub.s32 	%r34, %r4, %r33;
	mul.hi.s32 	%r35, %r5, 2021161081;
	shr.u32 	%r36, %r35, 31;
	shr.s32 	%r37, %r35, 3;
	add.s32 	%r38, %r37, %r36;
	mul.lo.s32 	%r39, %r38, 17;
	sub.s32 	%r6, %r5, %r39;
	.loc	1 36 44                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:44
	mul.lo.s32 	%r40, %r6, 768;
	.loc	1 41 22                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:41:22
	setp.lt.s32 	%p15, %r6, 1;
	.loc	1 43 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:43:23
	setp.gt.s32 	%p16, %r34, 0;
	setp.gt.s32 	%p17, %r6, 0;
	.loc	1 46 48                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:48
	mul.lo.s32 	%r41, %r32, 12288;
	.loc	1 46 69                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:69
	cvt.u16.u32 	%rs1, %r34;
	add.s16 	%rs2, %rs1, -1;
	cvt.s16.s8 	%rs3, %rs2;
	shr.u16 	%rs4, %rs3, 11;
	and.b16  	%rs5, %rs4, 15;
	add.s16 	%rs6, %rs2, %rs5;
	and.b16  	%rs7, %rs6, 240;
	sub.s16 	%rs8, %rs2, %rs7;
	cvt.u32.u16 	%r42, %rs8;
	cvt.s32.s8 	%r43, %r42;
	.loc	1 60 38                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:38
	mul.lo.s32 	%r44, %r5, 768;
	and.pred  	%p20, %p4, %p15;
	add.s32 	%r45, %r41, %r43;
	and.pred  	%p22, %p14, %p16;
	and.pred  	%p25, %p4, %p17;
	shl.b32 	%r46, %r1, 2;
	and.b32  	%r47, %r46, 252;
	or.b32  	%r48, %r47, %r27;
	and.b32  	%r49, %r1, 255;
	mov.u32 	%r50, global_smem;
	add.s32 	%r51, %r50, %r47;
	shl.b32 	%r52, %r48, 2;
	add.s32 	%r70, %r51, %r52;
	and.b32  	%r53, %r1, 252;
	add.s32 	%r54, %r50, %r53;
	shl.b32 	%r55, %r49, 2;
	add.s32 	%r8, %r54, %r55;
	.loc	1 32 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:32:36
	cvt.u64.u32 	%rd43, %r26;
	cvt.s64.s32 	%rd44, %r40;
	.loc	1 36 40                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:40
	or.b64  	%rd45, %rd43, %rd44;
	.loc	1 36 35                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:35
	shl.b64 	%rd46, %rd45, 2;
	add.s64 	%rd35, %rd29, %rd46;
	mov.b32 	%r15, 0;
	.loc	1 36 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:49
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r14 }, [ %rd35 + 0 ];
	@!%p4 mov.u32 %r14, %r15;
	// end inline asm
	.loc	1 42 34                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:42:34
	mul.wide.u32 	%rd2, %r26, 4;
	add.s64 	%rd36, %rd41, %rd2;
	.loc	1 42 74                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:42:74
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r16 }, [ %rd36 + 0 ];
	@!%p20 mov.u32 %r16, %r15;
	// end inline asm
	.loc	1 46 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:37
	shl.b32 	%r56, %r27, 4;
	.loc	1 46 55                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:55
	add.s32 	%r57, %r45, %r56;
	.loc	1 46 34                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:34
	mul.wide.s32 	%rd47, %r57, 4;
	add.s64 	%rd37, %rd28, %rd47;
	.loc	1 46 76                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:76
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p22 ld.global.L1::evict_last.b32 { %r21 }, [ %rd37 + 0 ];
	@!%p22 mov.u32 %r21, %r15;
	// end inline asm
	bar.sync 	0;
	mov.pred 	%p30, -1;
	// begin inline asm
	@%p30 st.shared.b32 [ %r70 + 0 ], %r21;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f12, [%r8];
	.loc	1 47 35                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:47:35
	add.s64 	%rd38, %rd42, %rd2;
	.loc	1 47 75                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:47:75
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r22 }, [ %rd38 + 0 ];
	@!%p25 mov.u32 %r22, %r15;
	// end inline asm
	.loc	1 42 74                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:42:74
	mov.b32 	%f13, %r16;
	.loc	1 47 75                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:47:75
	mov.b32 	%f14, %r22;
	.loc	1 48 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:48:23
	add.f32 	%f15, %f12, %f14;
	.loc	1 51 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:51:37
	selp.f32 	%f16, %f13, %f15, %p15;
	.loc	1 60 34                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:34
	or.b32  	%r58, %r26, %r44;
	.loc	1 60 29                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:29
	mul.wide.s32 	%rd48, %r58, 4;
	add.s64 	%rd39, %rd32, %rd48;
	.loc	1 60 50                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:50
	mov.b32 	%r24, %f16;
	// begin inline asm
	@%p4 st.global.b32 [ %rd39 + 0 ], { %r24 };
	// end inline asm
	.loc	1 59 66                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:59:66
	selp.f32 	%f68, 0f3F800000, 0f00000000, %p4;
	.loc	1 36 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:49
	mov.b32 	%f17, %r14;
	.loc	1 52 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:52:24
	add.f32 	%f18, %f16, %f17;
	.loc	1 57 62                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:57:62
	selp.f32 	%f70, %f18, 0f00000000, %p4;
	.loc	1 32 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:32:36
	or.b32  	%r59, %r41, %r56;
	add.s32 	%r60, %r59, %r43;
	add.s32 	%r122, %r60, 64;
	mul.lo.s32 	%r61, %r3, 768;
	mad.lo.s32 	%r62, %r13, 49152, %r61;
	or.b32  	%r10, %r62, %r26;
	or.b32  	%r63, %r10, 4;
	cvt.u64.u32 	%rd1, %r63;
	or.b64  	%rd49, %rd2, 16;
	add.s64 	%rd73, %rd42, %rd49;
	add.s64 	%rd72, %rd41, %rd49;
	mul.wide.s32 	%rd50, %r40, 4;
	or.b64  	%rd5, %rd50, %rd2;
	add.s64 	%rd51, %rd5, %rd29;
	add.s64 	%rd71, %rd51, 16;
	mov.f32 	%f69, 0f00000000;
	mov.u64 	%rd74, 0;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 36 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:49
	// begin inline asm
	mov.u32 %r64, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r64 }, [ %rd71 + 0 ];
	@!%p4 mov.u32 %r64, %r15;
	// end inline asm
	.loc	1 42 74                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:42:74
	// begin inline asm
	mov.u32 %r66, 0x0;
	@%p20 ld.global.L1::evict_last.b32 { %r66 }, [ %rd72 + 0 ];
	@!%p20 mov.u32 %r66, %r15;
	// end inline asm
	mov.b32 	%f19, %r66;
	.loc	1 46 34                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:34
	mul.wide.s32 	%rd57, %r122, 4;
	add.s64 	%rd54, %rd28, %rd57;
	.loc	1 46 76                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:46:76
	// begin inline asm
	mov.u32 %r68, 0x0;
	@%p22 ld.global.L1::evict_last.b32 { %r68 }, [ %rd54 + 0 ];
	@!%p22 mov.u32 %r68, %r15;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p30 st.shared.b32 [ %r70 + 0 ], %r68;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f20, [%r8];
	.loc	1 47 75                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:47:75
	// begin inline asm
	mov.u32 %r72, 0x0;
	@%p25 ld.global.L1::evict_last.b32 { %r72 }, [ %rd73 + 0 ];
	@!%p25 mov.u32 %r72, %r15;
	// end inline asm
	mov.b32 	%f21, %r72;
	.loc	1 48 23                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:48:23
	add.f32 	%f22, %f20, %f21;
	.loc	1 51 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:51:37
	selp.f32 	%f23, %f19, %f22, %p15;
	.loc	1 36 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:36:49
	mov.b32 	%f24, %r64;
	.loc	1 52 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:52:24
	add.f32 	%f25, %f23, %f24;
$L__tmp1:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f26, %f25, %f70;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f27, %f68, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r75, %f26;
	mov.b32 	%r76, %f27;
	// begin inline asm
	div.full.f32 %r74, %r75, %r76;
	// end inline asm
	mov.b32 	%f28, %r74;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f29, %f70, %f28;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f30, %f25, %f29;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f31, %f26, %f30, %f69;
$L__tmp2:
	.loc	1 57 62                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:57:62
	selp.f32 	%f70, %f29, %f70, %p4;
	.loc	1 58 58                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:58:58
	selp.f32 	%f69, %f31, %f69, %p4;
	.loc	1 59 66                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:59:66
	selp.f32 	%f68, %f27, %f68, %p4;
	.loc	1 60 29                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:29
	add.s64 	%rd58, %rd1, %rd74;
	cvt.u32.u64 	%r78, %rd58;
	mul.wide.s32 	%rd59, %r78, 4;
	add.s64 	%rd56, %rd32, %rd59;
	.loc	1 60 50                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:60:50
	mov.b32 	%r77, %f23;
	// begin inline asm
	@%p4 st.global.b32 [ %rd56 + 0 ], { %r77 };
	// end inline asm
	.loc	1 32 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:32:36
	add.s64 	%rd74, %rd74, 4;
	add.s32 	%r122, %r122, 64;
	add.s64 	%rd73, %rd73, 16;
	add.s64 	%rd72, %rd72, 16;
	add.s64 	%rd71, %rd71, 16;
	setp.lt.u64 	%p29, %rd74, 764;
	@%p29 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
$L__tmp3:
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r97, %f70;
	shfl.sync.bfly.b32	%r98, %r97, 2, 31, -1;
	mov.b32 	%f32, %r98;
	mov.b32 	%r99, %f69;
	shfl.sync.bfly.b32	%r100, %r99, 2, 31, -1;
	mov.b32 	%f33, %r100;
	mov.b32 	%r101, %f68;
	shfl.sync.bfly.b32	%r80, %r101, 2, 31, -1;
	mov.b32 	%f34, %r80;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f35, %f32, %f70;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f36, %f68, %f34;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p35, %f36, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r81, %f36;
	// begin inline asm
	div.full.f32 %r79, %r80, %r81;
	// end inline asm
	mov.b32 	%f37, %r79;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f38, 0f00000000, %f37, %p35;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f39, %f35, %f38, %f70;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f40, %f69, %f33;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f41, %f35, %f35;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f42, %f68, %f41;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f43, %f42, %f38, %f40;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r102, %f39;
	shfl.sync.bfly.b32	%r103, %r102, 1, 31, -1;
	mov.b32 	%f44, %r103;
	mov.b32 	%r104, %f43;
	shfl.sync.bfly.b32	%r105, %r104, 1, 31, -1;
	mov.b32 	%f45, %r105;
	shfl.sync.bfly.b32	%r83, %r81, 1, 31, -1;
	mov.b32 	%f46, %r83;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f47, %f44, %f39;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f48, %f36, %f46;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p36, %f48, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r84, %f48;
	// begin inline asm
	div.full.f32 %r82, %r83, %r84;
	// end inline asm
	mov.b32 	%f49, %r82;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f50, 0f00000000, %f49, %p36;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f9, %f47, %f50, %f39;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f51, %f43, %f45;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f52, %f47, %f47;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f53, %f36, %f52;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f54, %f50, %f53, %f51;
$L__tmp4:
	.loc	1 64 22                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:64:22
	bar.sync 	0;
	shl.b32 	%r106, %r3, 2;
	add.s32 	%r85, %r50, %r106;
	mov.b32 	%r86, %f9;
	// begin inline asm
	@%p30 st.shared.b32 [ %r85 + 0 ], %r86;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r108, %r2, 2;
	add.s32 	%r109, %r50, %r108;
	ld.shared.u32 	%r89, [%r109];
	.loc	1 72 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:72:28
	bar.sync 	0;
	mov.b32 	%r88, %f54;
	// begin inline asm
	@%p30 st.shared.b32 [ %r85 + 0 ], %r88;
	// end inline asm
	bar.sync 	0;
	.loc	1 67 25                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:67:25
	mul.wide.s32 	%rd63, %r4, 4;
	add.s64 	%rd60, %rd33, %rd63;
	.loc	1 67 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:67:37
	and.b32  	%r110, %r1, 192;
	setp.eq.s32 	%p37, %r110, 0;
	and.pred  	%p32, %p37, %p14;
	.loc	1 69 20                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:69:20
	ld.shared.u32 	%r91, [%r109];
	.loc	1 67 37                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:67:37
	// begin inline asm
	@%p32 st.global.b32 [ %rd60 + 0 ], { %r89 };
	// end inline asm
	mov.b32 	%r92, 1145044992;
	.loc	1 69 20                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:69:20
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f55, %r90;
	// begin inline asm
	div.full.f32 %r93, %r88, %r92;
	// end inline asm
	mov.b32 	%f56, %r93;
	.loc	1 71 20                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:71:20
	add.f32 	%f57, %f55, 0f3727C5AC;
	add.f32 	%f58, %f56, 0f3727C5AC;
	.loc	1 72 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:72:28
	rsqrt.approx.ftz.f32 	%f59, %f57;
	rsqrt.approx.ftz.f32 	%f10, %f58;
	.loc	1 73 4                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:73:4
	bar.sync 	0;
	.loc	1 74 28                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:74:28
	add.s64 	%rd61, %rd27, %rd63;
	.loc	1 74 40                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:74:40
	mov.b32 	%r96, %f59;
	// begin inline asm
	@%p32 st.global.b32 [ %rd61 + 0 ], { %r96 };
	// end inline asm
	.loc	1 75 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:75:36
	add.s64 	%rd77, %rd31, %rd2;
	add.s64 	%rd76, %rd30, %rd2;
	add.s64 	%rd75, %rd29, %rd5;
	cvt.u64.u32 	%rd18, %r10;
	mov.u64 	%rd78, -4;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 79 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:79:36
	add.s64 	%rd69, %rd18, %rd78;
	cvt.u32.u64 	%r120, %rd69;
	add.s32 	%r121, %r120, 4;
	mul.wide.s32 	%rd70, %r121, 4;
	add.s64 	%rd64, %rd32, %rd70;
	.loc	1 79 50                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:79:50
	// begin inline asm
	mov.u32 %r111, 0x0;
	@%p4 ld.global.L1::evict_first.b32 { %r111 }, [ %rd64 + 0 ];
	@!%p4 mov.u32 %r111, %r15;
	// end inline asm
	mov.b32 	%f60, %r111;
	.loc	1 80 49                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:80:49
	// begin inline asm
	mov.u32 %r113, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r113 }, [ %rd75 + 0 ];
	@!%p4 mov.u32 %r113, %r15;
	// end inline asm
	mov.b32 	%f61, %r113;
	.loc	1 81 40                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:81:40
	// begin inline asm
	mov.u32 %r115, 0x0;
	@%p30 ld.global.L1::evict_last.b32 { %r115 }, [ %rd76 + 0 ];
	@!%p30 mov.u32 %r115, %r15;
	// end inline asm
	mov.b32 	%f62, %r115;
	.loc	1 82 40                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:82:40
	// begin inline asm
	mov.u32 %r117, 0x0;
	@%p30 ld.global.L1::evict_last.b32 { %r117 }, [ %rd77 + 0 ];
	@!%p30 mov.u32 %r117, %r15;
	// end inline asm
	mov.b32 	%f63, %r117;
	.loc	1 83 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:83:24
	add.f32 	%f64, %f60, %f61;
	.loc	1 84 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:84:24
	sub.f32 	%f65, %f64, %f9;
	.loc	1 85 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:85:24
	mul.f32 	%f66, %f10, %f65;
	.loc	1 87 24                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:87:24
	fma.rn.f32 	%f67, %f66, %f62, %f63;
	.loc	1 88 29                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:88:29
	add.s64 	%rd68, %rd34, %rd70;
	.loc	1 88 50                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:88:50
	mov.b32 	%r119, %f67;
	// begin inline asm
	@%p4 st.global.b32 [ %rd68 + 0 ], { %r119 };
	// end inline asm
	.loc	1 75 36                         // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:75:36
	add.s64 	%rd78, %rd78, 4;
	add.s64 	%rd77, %rd77, 16;
	add.s64 	%rd76, %rd76, 16;
	add.s64 	%rd75, %rd75, 16;
	setp.lt.u64 	%p47, %rd78, 764;
	@%p47 bra 	$L__BB0_3;
// %bb.4:
	.loc	1 75 4                          // cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py:75:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/u4/cu4lf52tjilpns5v26o6pj24w37gxw2m7zkwrvpjaim2yrhgjew6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 213                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xce DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 52
.b8 108
.b8 102
.b8 53
.b8 50
.b8 116
.b8 106
.b8 105
.b8 108
.b8 112
.b8 110
.b8 115
.b8 53
.b8 118
.b8 50
.b8 54
.b8 111
.b8 54
.b8 112
.b8 106
.b8 50
.b8 52
.b8 119
.b8 51
.b8 55
.b8 103
.b8 120
.b8 119
.b8 50
.b8 109
.b8 55
.b8 122
.b8 107
.b8 119
.b8 114
.b8 118
.b8 112
.b8 106
.b8 97
.b8 105
.b8 109
.b8 50
.b8 121
.b8 114
.b8 104
.b8 103
.b8 106
.b8 101
.b8 119
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 52
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x92:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 55                                  // DW_AT_call_line
.b8 55                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xbf:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
