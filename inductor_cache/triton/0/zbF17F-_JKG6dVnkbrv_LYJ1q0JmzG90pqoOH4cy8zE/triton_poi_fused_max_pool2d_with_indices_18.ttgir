#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [8], order = [0]}>
#loc = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_18(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<512xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<512xi8, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<309760> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<640> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<11> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<7040> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<1280> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<28160> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<14080> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<14720> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_4 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_4 : tensor<512xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %7, %cst_5 : tensor<512xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_6 : tensor<512xi32, #blocked> loc(#loc10)
    %10 = arith.muli %8, %cst_7 : tensor<512xi32, #blocked> loc(#loc11)
    %11 = arith.addi %6, %10 : tensor<512xi32, #blocked> loc(#loc12)
    %12 = arith.muli %9, %cst_8 : tensor<512xi32, #blocked> loc(#loc13)
    %13 = arith.addi %11, %12 : tensor<512xi32, #blocked> loc(#loc14)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc15)
    %15 = tt.addptr %14, %13 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc15)
    %16 = tt.load %15, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc16)
    %17 = arith.addi %6, %cst_4 : tensor<512xi32, #blocked> loc(#loc17)
    %18 = arith.addi %17, %10 : tensor<512xi32, #blocked> loc(#loc18)
    %19 = arith.addi %18, %12 : tensor<512xi32, #blocked> loc(#loc19)
    %20 = tt.addptr %14, %19 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc20)
    %21 = tt.load %20, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc21)
    %22 = arith.addi %6, %cst_9 : tensor<512xi32, #blocked> loc(#loc22)
    %23 = arith.addi %22, %10 : tensor<512xi32, #blocked> loc(#loc23)
    %24 = arith.addi %23, %12 : tensor<512xi32, #blocked> loc(#loc24)
    %25 = tt.addptr %14, %24 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc25)
    %26 = tt.load %25, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc26)
    %27 = arith.addi %6, %cst_10 : tensor<512xi32, #blocked> loc(#loc27)
    %28 = arith.addi %27, %10 : tensor<512xi32, #blocked> loc(#loc28)
    %29 = arith.addi %28, %12 : tensor<512xi32, #blocked> loc(#loc29)
    %30 = tt.addptr %14, %29 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc30)
    %31 = tt.load %30, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc31)
    %32 = arith.cmpf ogt, %21, %16 : tensor<512xf32, #blocked> loc(#loc47)
    %33 = arith.cmpf une, %21, %21 : tensor<512xf32, #blocked> loc(#loc48)
    %34 = arith.ori %32, %33 : tensor<512xi1, #blocked> loc(#loc49)
    %35 = arith.select %34, %21, %16 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc50)
    %36 = arith.cmpf ogt, %26, %35 : tensor<512xf32, #blocked> loc(#loc51)
    %37 = arith.cmpf une, %26, %26 : tensor<512xf32, #blocked> loc(#loc52)
    %38 = arith.ori %36, %37 : tensor<512xi1, #blocked> loc(#loc53)
    %39 = arith.select %38, %26, %35 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc54)
    %40 = arith.cmpf ogt, %31, %39 : tensor<512xf32, #blocked> loc(#loc55)
    %41 = arith.cmpf une, %31, %31 : tensor<512xf32, #blocked> loc(#loc56)
    %42 = arith.ori %40, %41 : tensor<512xi1, #blocked> loc(#loc57)
    %43 = arith.select %42, %31, %39 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc58)
    %44 = arith.select %32, %cst, %cst_0 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc39)
    %45 = arith.select %36, %cst_1, %44 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc40)
    %46 = arith.select %40, %cst_2, %45 : tensor<512xi1, #blocked>, tensor<512xi8, #blocked> loc(#loc41)
    %47 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc42)
    %48 = tt.addptr %47, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc42)
    tt.store %48, %43, %5 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc43)
    %49 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<512x!tt.ptr<i8>, #blocked> loc(#loc44)
    %50 = tt.addptr %49, %4 : tensor<512x!tt.ptr<i8>, #blocked>, tensor<512xi32, #blocked> loc(#loc44)
    tt.store %50, %46, %5 : tensor<512x!tt.ptr<i8>, #blocked> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":21:28)
#loc3 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":21:33)
#loc4 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":22:36)
#loc5 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":22:23)
#loc6 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":23:21)
#loc7 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":24:19)
#loc8 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":25:21)
#loc9 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":25:28)
#loc10 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":26:19)
#loc11 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":28:40)
#loc12 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":28:35)
#loc13 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":28:51)
#loc14 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":28:45)
#loc15 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":28:30)
#loc16 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":28:56)
#loc17 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":29:36)
#loc18 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":29:41)
#loc19 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":29:51)
#loc20 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":29:30)
#loc21 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":29:62)
#loc22 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":30:38)
#loc23 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":30:43)
#loc24 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":30:53)
#loc25 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":30:30)
#loc26 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":30:64)
#loc27 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":31:38)
#loc28 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":31:43)
#loc29 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":31:53)
#loc30 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":31:30)
#loc31 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":31:64)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc33 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":32:40)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc37 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":33:40)
#loc38 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":34:40)
#loc39 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":38:33)
#loc40 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":41:35)
#loc41 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":44:35)
#loc42 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":45:25)
#loc43 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":45:36)
#loc44 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":46:25)
#loc45 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":46:37)
#loc46 = loc("inductor_cache/am/cam3moa6eqxoe36yxtcalkgqjkbdjw3mb4cdlyba62fhaztrguf3.py":46:4)
#loc47 = loc(callsite(#loc32 at #loc33))
#loc48 = loc(callsite(#loc34 at #loc33))
#loc49 = loc(callsite(#loc35 at #loc33))
#loc50 = loc(callsite(#loc36 at #loc33))
#loc51 = loc(callsite(#loc32 at #loc37))
#loc52 = loc(callsite(#loc34 at #loc37))
#loc53 = loc(callsite(#loc35 at #loc37))
#loc54 = loc(callsite(#loc36 at #loc37))
#loc55 = loc(callsite(#loc32 at #loc38))
#loc56 = loc(callsite(#loc34 at #loc38))
#loc57 = loc(callsite(#loc35 at #loc38))
#loc58 = loc(callsite(#loc36 at #loc38))
