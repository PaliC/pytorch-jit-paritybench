; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused__softmax_1(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = icmp slt i32 %4, 256, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 31, !dbg !12
  %8 = lshr i32 %6, 5, !dbg !12
  %9 = and i32 %6, 63, !dbg !12
  %10 = shl i32 %4, 6, !dbg !13
  %11 = or disjoint i32 %10, %9, !dbg !14
  %12 = sext i32 %11 to i64, !dbg !15
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !15
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 %5, i32 0, i1 %5) #3, !dbg !16
  %15 = bitcast i32 %14 to float, !dbg !16
  %16 = select i1 %5, float %15, float 0xFFF0000000000000, !dbg !17
  %17 = bitcast float %16 to i32, !dbg !18
  %18 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %17, i32 16, i32 31), !dbg !18
  %19 = bitcast i32 %18 to float, !dbg !18
  %20 = fcmp ogt float %16, %19, !dbg !22
  %21 = fcmp uno float %16, 0.000000e+00, !dbg !24
  %22 = or i1 %20, %21, !dbg !25
  %23 = select i1 %22, float %16, float %19, !dbg !26
  %24 = bitcast float %23 to i32, !dbg !18
  %25 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %24, i32 8, i32 31), !dbg !18
  %26 = bitcast i32 %25 to float, !dbg !18
  %27 = fcmp ogt float %23, %26, !dbg !22
  %28 = fcmp uno float %23, 0.000000e+00, !dbg !24
  %29 = or i1 %27, %28, !dbg !25
  %30 = select i1 %29, float %23, float %26, !dbg !26
  %31 = bitcast float %30 to i32, !dbg !18
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 4, i32 31), !dbg !18
  %33 = bitcast i32 %32 to float, !dbg !18
  %34 = fcmp ogt float %30, %33, !dbg !22
  %35 = fcmp uno float %30, 0.000000e+00, !dbg !24
  %36 = or i1 %34, %35, !dbg !25
  %37 = select i1 %36, float %30, float %33, !dbg !26
  %38 = bitcast float %37 to i32, !dbg !18
  %39 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %38, i32 2, i32 31), !dbg !18
  %40 = bitcast i32 %39 to float, !dbg !18
  %41 = fcmp ogt float %37, %40, !dbg !22
  %42 = fcmp uno float %37, 0.000000e+00, !dbg !24
  %43 = or i1 %41, %42, !dbg !25
  %44 = select i1 %43, float %37, float %40, !dbg !26
  %45 = bitcast float %44 to i32, !dbg !18
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 1, i32 31), !dbg !18
  %47 = bitcast i32 %46 to float, !dbg !18
  %48 = fcmp ogt float %44, %47, !dbg !22
  %49 = fcmp uno float %44, 0.000000e+00, !dbg !24
  %50 = or i1 %48, %49, !dbg !25
  %51 = icmp eq i32 %7, 0, !dbg !18
  %52 = and i32 %8, 1, !dbg !18
  %53 = zext nneg i32 %52 to i64, !dbg !18
  %54 = getelementptr float, ptr addrspace(3) @global_smem, i64 %53, !dbg !18
  %55 = select i1 %50, i32 %45, i32 %46, !dbg !26
  %56 = insertelement <1 x i32> poison, i32 %55, i64 0, !dbg !18
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %54, <1 x i32> %56, i1 %51) #3, !dbg !18
  tail call void @llvm.nvvm.barrier0(), !dbg !18
  %57 = icmp slt i32 %6, 2, !dbg !18
  %58 = sext i32 %6 to i64, !dbg !18
  %59 = getelementptr float, ptr addrspace(3) @global_smem, i64 %58, !dbg !18
  %60 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %59, i1 %57) #3, !dbg !18
  %61 = bitcast i32 %60 to float, !dbg !18
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %60, i32 1, i32 31), !dbg !18
  %63 = bitcast i32 %62 to float, !dbg !18
  %64 = fcmp ogt float %61, %63, !dbg !22
  %65 = fcmp uno float %61, 0.000000e+00, !dbg !24
  %66 = or i1 %65, %64, !dbg !25
  %67 = and i32 %6, 1, !dbg !18
  %68 = icmp eq i32 %67, 0, !dbg !18
  %69 = and i1 %57, %68, !dbg !18
  %70 = select i1 %66, i32 %60, i32 %62, !dbg !26
  %71 = insertelement <1 x i32> poison, i32 %70, i64 0, !dbg !18
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %59, <1 x i32> %71, i1 %69) #3, !dbg !18
  tail call void @llvm.nvvm.barrier0(), !dbg !18
  %72 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !18
  %73 = fsub float %15, %72, !dbg !27
  %74 = fmul float %73, 5.000000e-01, !dbg !28
  %75 = fmul float %74, 0x3FF7154760000000, !dbg !29
  %76 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %75) #3, !dbg !29
  %77 = select i1 %5, float %76, float 0.000000e+00, !dbg !30
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %78 = bitcast float %77 to i32, !dbg !31
  %79 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %78, i32 16, i32 31), !dbg !31
  %80 = bitcast i32 %79 to float, !dbg !31
  %81 = fadd float %77, %80, !dbg !35
  %82 = bitcast float %81 to i32, !dbg !31
  %83 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %82, i32 8, i32 31), !dbg !31
  %84 = bitcast i32 %83 to float, !dbg !31
  %85 = fadd float %81, %84, !dbg !35
  %86 = bitcast float %85 to i32, !dbg !31
  %87 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %86, i32 4, i32 31), !dbg !31
  %88 = bitcast i32 %87 to float, !dbg !31
  %89 = fadd float %85, %88, !dbg !35
  %90 = bitcast float %89 to i32, !dbg !31
  %91 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %90, i32 2, i32 31), !dbg !31
  %92 = bitcast i32 %91 to float, !dbg !31
  %93 = fadd float %89, %92, !dbg !35
  %94 = bitcast float %93 to i32, !dbg !31
  %95 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %94, i32 1, i32 31), !dbg !31
  %96 = bitcast i32 %95 to float, !dbg !31
  %97 = fadd float %93, %96, !dbg !35
  %98 = bitcast float %97 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %54, <1 x i32> %98, i1 %51) #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %99 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %59, i1 %57) #3, !dbg !31
  %100 = bitcast i32 %99 to float, !dbg !31
  %101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %99, i32 1, i32 31), !dbg !31
  %102 = bitcast i32 %101 to float, !dbg !31
  %103 = fadd float %100, %102, !dbg !35
  %104 = bitcast float %103 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %59, <1 x i32> %104, i1 %69) #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %105 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !31
  %106 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %76, float %105) #3, !dbg !37
  %107 = bitcast float %106 to i32, !dbg !38
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %107, ptr addrspace(1) %13, i1 %5) #3, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgxp6kauehtmyehcnqpuua7z52hzmcidnuayob2hdw4o3hme47jy.py", directory: "inductor_cache/gx")
!4 = !{ptr @triton_per_fused__softmax_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_1", linkageName: "triton_per_fused__softmax_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 42, scope: !7)
!14 = !DILocation(line: 31, column: 39, scope: !7)
!15 = !DILocation(line: 31, column: 34, scope: !7)
!16 = !DILocation(line: 31, column: 47, scope: !7)
!17 = !DILocation(line: 35, column: 33, scope: !7)
!18 = !DILocation(line: 131, column: 29, scope: !19, inlinedAt: !21)
!19 = distinct !DILexicalBlockFile(scope: !7, file: !20, discriminator: 0)
!20 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!21 = !DILocation(line: 36, column: 37, scope: !7)
!22 = !DILocation(line: 118, column: 15, scope: !23, inlinedAt: !21)
!23 = distinct !DILexicalBlockFile(scope: !19, file: !20, discriminator: 0)
!24 = !DILocation(line: 120, column: 21, scope: !23, inlinedAt: !21)
!25 = !DILocation(line: 120, column: 16, scope: !23, inlinedAt: !21)
!26 = !DILocation(line: 121, column: 29, scope: !23, inlinedAt: !21)
!27 = !DILocation(line: 37, column: 18, scope: !7)
!28 = !DILocation(line: 39, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 24, scope: !7)
!30 = !DILocation(line: 42, column: 35, scope: !7)
!31 = !DILocation(line: 267, column: 36, scope: !32, inlinedAt: !34)
!32 = distinct !DILexicalBlockFile(scope: !7, file: !33, discriminator: 0)
!33 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!34 = !DILocation(line: 43, column: 26, scope: !7)
!35 = !DILocation(line: 256, column: 15, scope: !36, inlinedAt: !34)
!36 = distinct !DILexicalBlockFile(scope: !32, file: !33, discriminator: 0)
!37 = !DILocation(line: 44, column: 20, scope: !7)
!38 = !DILocation(line: 45, column: 48, scope: !7)
!39 = !DILocation(line: 45, column: 4, scope: !7)
