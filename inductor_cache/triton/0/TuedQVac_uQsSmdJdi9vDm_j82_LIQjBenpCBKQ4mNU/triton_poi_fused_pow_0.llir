; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_pow_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 2, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 3, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 4, !dbg !14
  %10 = shl i32 %8, 2, !dbg !15
  %11 = sext i32 %10 to i64, !dbg !16
  %12 = getelementptr float, ptr addrspace(1) %0, i64 %11, !dbg !16
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %12, i1 %9) #4, !dbg !17
  %14 = or disjoint i32 %10, 1, !dbg !18
  %15 = sext i32 %14 to i64, !dbg !19
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !19
  %17 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %16, i1 %9) #4, !dbg !20
  %18 = or disjoint i32 %10, 2, !dbg !21
  %19 = sext i32 %18 to i64, !dbg !22
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !22
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %20, i1 %9) #4, !dbg !23
  %22 = or disjoint i32 %10, 3, !dbg !24
  %23 = sext i32 %22 to i64, !dbg !25
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !25
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %9) #4, !dbg !26
  %26 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !17
  %27 = insertelement <2 x i32> %26, i32 %17, i64 1, !dbg !17
  %28 = bitcast <2 x i32> %27 to <2 x float>, !dbg !17
  %29 = fcmp ogt <2 x float> %28, splat (float 0x3EB0C6F7A0000000), !dbg !27
  %30 = fcmp uno <2 x float> %28, zeroinitializer, !dbg !31
  %31 = or <2 x i1> %29, %30, !dbg !32
  %32 = select <2 x i1> %31, <2 x float> %28, <2 x float> splat (float 0x3EB0C6F7A0000000), !dbg !33
  %33 = fmul <2 x float> %32, %32, !dbg !34
  %34 = fmul <2 x float> %32, %33, !dbg !35
  %shift = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %35 = fadd <2 x float> %34, %shift, !dbg !36
  %36 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !23
  %37 = insertelement <2 x i32> %36, i32 %25, i64 1, !dbg !23
  %38 = bitcast <2 x i32> %37 to <2 x float>, !dbg !23
  %39 = fcmp ogt <2 x float> %38, splat (float 0x3EB0C6F7A0000000), !dbg !37
  %40 = fcmp uno <2 x float> %38, zeroinitializer, !dbg !39
  %41 = or <2 x i1> %39, %40, !dbg !40
  %42 = select <2 x i1> %41, <2 x float> %38, <2 x float> splat (float 0x3EB0C6F7A0000000), !dbg !41
  %43 = fmul <2 x float> %42, %42, !dbg !42
  %44 = fmul <2 x float> %42, %43, !dbg !43
  %45 = fadd <2 x float> %35, %44, !dbg !44
  %shift1 = shufflevector <2 x float> %44, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !45
  %46 = fadd <2 x float> %45, %shift1, !dbg !45
  %47 = extractelement <2 x float> %46, i64 0, !dbg !45
  %48 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %47, float 4.000000e+00) #4, !dbg !46
  %49 = tail call float @llvm.nvvm.trunc.f(float 0x3FC5555560000000) #4, !dbg !47
  %50 = fmul float %49, 2.000000e+00, !dbg !47
  %51 = fsub float 0x3FD5555560000000, %50, !dbg !47
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not.i = icmp eq i32 %52, 0, !dbg !47
  %53 = tail call float @llvm.nvvm.fabs.ftz.f(float %51) #4, !dbg !47
  %54 = tail call float @llvm.nvvm.fabs.f(float %51) #4, !dbg !47
  %.08.i = select i1 %.not.i, float %54, float %53, !dbg !47
  %55 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !47
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not12.i = icmp eq i32 %56, 0, !dbg !47
  %57 = tail call float @llvm.nvvm.fabs.ftz.f(float %48) #4, !dbg !47
  %58 = tail call float @llvm.nvvm.fabs.f(float %48) #4, !dbg !47
  %.09.i = select i1 %.not12.i, float %58, float %57, !dbg !47
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not13.i = icmp eq i32 %59, 0, !dbg !47
  %60 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !47
  %61 = fmul float %.09.i, 0x4170000000000000, !dbg !47
  %62 = select i1 %.not13.i, i1 %60, i1 false, !dbg !47
  %.116.i = select i1 %62, float %61, float %.09.i, !dbg !47
  %expo.i.i.1.i = select i1 %62, float -1.510000e+02, float -1.270000e+02, !dbg !47
  %63 = bitcast float %.116.i to i32, !dbg !47
  %64 = and i32 %63, 8388607, !dbg !47
  %65 = or disjoint i32 %64, 1065353216, !dbg !47
  %66 = bitcast i32 %65 to float, !dbg !47
  %67 = lshr i32 %63, 23, !dbg !47
  %68 = uitofp nneg i32 %67 to float, !dbg !47
  %69 = fadd float %expo.i.i.1.i, %68, !dbg !47
  %70 = fcmp ogt float %66, 0x3FF6A09E60000000, !dbg !47
  %71 = fmul float %66, 5.000000e-01, !dbg !47
  %72 = fadd float %69, 1.000000e+00, !dbg !47
  %expo.i.i.2.i = select i1 %70, float %72, float %69, !dbg !47
  %m.i.i.0.i = select i1 %70, float %71, float %66, !dbg !47
  %73 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !47
  %74 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !47
  %75 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %74) #5, !dbg !47, !srcloc !48
  %76 = fmul float %73, 2.000000e+00, !dbg !47
  %77 = fmul float %75, %76, !dbg !47
  %78 = fmul float %77, %77, !dbg !47
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not14.i = icmp eq i32 %79, 0, !dbg !47
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %78, float 0x3F8995EC60000000) #4, !dbg !47
  %81 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %78, float 0x3F8995EC60000000) #4, !dbg !47
  %.020.i = select i1 %.not14.i, float %81, float %80, !dbg !47
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not15.i = icmp eq i32 %82, 0, !dbg !47
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %78, float 0x3FB55557A0000000) #4, !dbg !47
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %78, float 0x3FB55557A0000000) #4, !dbg !47
  %.021.i = select i1 %.not15.i, float %84, float %83, !dbg !47
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not16.i = icmp eq i32 %85, 0, !dbg !47
  %86 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %78) #4, !dbg !47
  %87 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %78) #4, !dbg !47
  %.022.i = select i1 %.not16.i, float %87, float %86, !dbg !47
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not17.i = icmp eq i32 %88, 0, !dbg !47
  %89 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %77) #4, !dbg !47
  %90 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %77) #4, !dbg !47
  %.024.i = select i1 %.not17.i, float %90, float %89, !dbg !47
  %91 = fsub float %73, %77, !dbg !47
  %92 = fmul float %91, 2.000000e+00, !dbg !47
  %93 = fneg float %77, !dbg !47
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not18.i = icmp eq i32 %94, 0, !dbg !47
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float %73, float %92) #4, !dbg !47
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %93, float %73, float %92) #4, !dbg !47
  %.025.i = select i1 %.not18.i, float %96, float %95, !dbg !47
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not19.i = icmp eq i32 %97, 0, !dbg !47
  %98 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %75, float %.025.i) #4, !dbg !47
  %99 = tail call float @llvm.nvvm.mul.rn.f(float %75, float %.025.i) #4, !dbg !47
  %.026.i = select i1 %.not19.i, float %99, float %98, !dbg !47
  %100 = fadd float %77, %.024.i, !dbg !47
  %101 = fsub float %77, %100, !dbg !47
  %102 = fadd float %.024.i, %101, !dbg !47
  %103 = fadd float %.026.i, %102, !dbg !47
  %104 = fadd float %100, %103, !dbg !47
  %105 = fsub float %100, %104, !dbg !47
  %106 = fadd float %103, %105, !dbg !47
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not20.i = icmp eq i32 %107, 0, !dbg !47
  %108 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !47
  %109 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #4, !dbg !47
  %.019.i = select i1 %.not20.i, float %109, float %108, !dbg !47
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not21.i = icmp eq i32 %110, 0, !dbg !47
  %111 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !47
  %112 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #4, !dbg !47
  %.018.i = select i1 %.not21.i, float %112, float %111, !dbg !47
  %113 = fadd float %.019.i, %104, !dbg !47
  %114 = fsub float %.019.i, %113, !dbg !47
  %115 = fadd float %104, %114, !dbg !47
  %116 = fadd float %106, %115, !dbg !47
  %117 = fadd float %.018.i, %116, !dbg !47
  %118 = fadd float %113, %117, !dbg !47
  %119 = fsub float %113, %118, !dbg !47
  %120 = fadd float %117, %119, !dbg !47
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not22.i = icmp eq i32 %121, 0, !dbg !47
  %122 = tail call float @llvm.nvvm.fabs.ftz.f(float 0x3FD5555560000000) #4, !dbg !47
  %123 = tail call float @llvm.nvvm.fabs.f(float 0x3FD5555560000000) #4, !dbg !47
  %.027.i = select i1 %.not22.i, float %123, float %122, !dbg !47
  %124 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !47
  %.013.i = select i1 %124, float 0x3F05555560000000, float 0x3FD5555560000000, !dbg !47
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not23.i = icmp eq i32 %125, 0, !dbg !47
  %126 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %118) #4, !dbg !47
  %127 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %118) #4, !dbg !47
  %.028.i = select i1 %.not23.i, float %127, float %126, !dbg !47
  %128 = fneg float %.028.i, !dbg !47
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not24.i = icmp eq i32 %129, 0, !dbg !47
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %118, float %128) #4, !dbg !47
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %118, float %128) #4, !dbg !47
  %.029.i = select i1 %.not24.i, float %131, float %130, !dbg !47
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not25.i = icmp eq i32 %132, 0, !dbg !47
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %120, float %.029.i) #4, !dbg !47
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %120, float %.029.i) #4, !dbg !47
  %.030.i = select i1 %.not25.i, float %134, float %133, !dbg !47
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not26.i = icmp eq i32 %135, 0, !dbg !47
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %118, float %.030.i) #4, !dbg !47
  %137 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %118, float %.030.i) #4, !dbg !47
  %.031.i = select i1 %.not26.i, float %137, float %136, !dbg !47
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not27.i = icmp eq i32 %138, 0, !dbg !47
  %139 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #4, !dbg !47
  %140 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #4, !dbg !47
  %.032.i = select i1 %.not27.i, float %140, float %139, !dbg !47
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %142 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %143 = bitcast float %.032.i to i32, !dbg !47
  %144 = icmp eq i32 %143, 1118925336, !dbg !47
  %prod.i.145.0.i = select i1 %144, float 0x40562E42E0000000, float %.032.i, !dbg !47
  %145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not30.i = icmp eq i32 %145, 0, !dbg !47
  %146 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !47
  %147 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #4, !dbg !47
  %.017.i = select i1 %.not30.i, float %147, float %146, !dbg !47
  %148 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #4, !dbg !47
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not31.i = icmp eq i32 %149, 0, !dbg !47
  %150 = tail call float @llvm.nvvm.fabs.ftz.f(float %148) #4, !dbg !47
  %151 = tail call float @llvm.nvvm.fabs.f(float %148) #4, !dbg !47
  %.023.i = select i1 %.not31.i, float %151, float %150, !dbg !47
  %152 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !47
  %153 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %148), !dbg !47
  %j.i.i.0.i = select i1 %152, float %153, float %148, !dbg !47
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not32.i = icmp eq i32 %154, 0, !dbg !47
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !47
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #4, !dbg !47
  %.035.i = select i1 %.not32.i, float %156, float %155, !dbg !47
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not33.i = icmp eq i32 %157, 0, !dbg !47
  %158 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !47
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #4, !dbg !47
  %.036.i = select i1 %.not33.i, float %159, float %158, !dbg !47
  %160 = fmul float %.036.i, 0x3FF7154760000000, !dbg !47
  %161 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !47
  %162 = bitcast float %161 to i32, !dbg !47
  %163 = shl i32 %162, 23, !dbg !47
  %164 = bitcast i32 %163 to float, !dbg !47
  %165 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %160) #4, !dbg !47
  %166 = fmul float %165, %164, !dbg !47
  %167 = fcmp une float %166, 0x7FF0000000000000, !dbg !47
  br i1 %167, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !47

__internal_fmad.exit.i.i:                         ; preds = %3
  %.not29.i = icmp eq i32 %142, 0, !dbg !47
  %.not28.i = icmp eq i32 %141, 0, !dbg !47
  %168 = fneg float %.032.i, !dbg !47
  %169 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %168) #4, !dbg !47
  %170 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %168) #4, !dbg !47
  %.033.i = select i1 %.not28.i, float %169, float %170, !dbg !47
  %171 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #4, !dbg !47
  %172 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #4, !dbg !47
  %.034.i = select i1 %.not29.i, float %171, float %172, !dbg !47
  %173 = fadd float %.034.i, 0x3EE0000000000000, !dbg !47
  %prod.i.044.0.i = select i1 %144, float %173, float %.034.i, !dbg !47
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not34.i = icmp eq i32 %174, 0, !dbg !47
  %175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %166, float %prod.i.044.0.i, float %166) #4, !dbg !47
  %176 = tail call float @llvm.nvvm.fma.rn.f(float %166, float %prod.i.044.0.i, float %166) #4, !dbg !47
  %.014.i = select i1 %.not34.i, float %176, float %175, !dbg !47
  br label %__internal_accurate_powf.exit.i, !dbg !47

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %3
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %3 ], !dbg !47
  %177 = fcmp olt float %48, 0.000000e+00, !dbg !47
  %or.cond.i = select i1 %177, i1 %55, i1 false, !dbg !47
  %178 = fcmp oeq float %48, 0.000000e+00, !dbg !47
  br i1 %178, label %179, label %182, !dbg !47

179:                                              ; preds = %__internal_accurate_powf.exit.i
  %180 = fadd float %48, %48, !dbg !47
  %181 = select i1 %55, float %180, float 0.000000e+00, !dbg !47
  br label %__internal_powf_corner_cases.exit.i, !dbg !47

182:                                              ; preds = %__internal_accurate_powf.exit.i
  %183 = fneg float %t.i.0.i, !dbg !47
  %.010.i = select i1 %or.cond.i, float %183, float %t.i.0.i, !dbg !47
  %184 = tail call float @llvm.nvvm.trunc.f(float 0x3FD5555560000000) #4, !dbg !47
  %185 = fcmp une float %184, 0x3FD5555560000000, !dbg !47
  %or.cond2.i = select i1 %177, i1 %185, i1 false, !dbg !47
  %.111.i = select i1 %or.cond2.i, float 0x7FFFFFFFE0000000, float %.010.i, !dbg !47
  br label %__internal_powf_corner_cases.exit.i, !dbg !47

__internal_powf_corner_cases.exit.i:              ; preds = %182, %179
  %.212.i = phi float [ %181, %179 ], [ %.111.i, %182 ], !dbg !47
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not35.i = icmp eq i32 %186, 0, !dbg !47
  %.01.i = select i1 %.not35.i, float %58, float %57, !dbg !47
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not36.i = icmp eq i32 %187, 0, !dbg !47
  %.02.i = select i1 %.not36.i, float %123, float %122, !dbg !47
  %188 = fadd float %.01.i, %.02.i, !dbg !47
  %189 = bitcast float %188 to i32, !dbg !47
  %190 = icmp sgt i32 %189, 2139095039, !dbg !47
  br i1 %190, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !47

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not37.i = icmp eq i32 %191, 0, !dbg !47
  %.06.i = select i1 %.not37.i, float %58, float %57, !dbg !47
  %192 = fcmp uno float %.06.i, 0.000000e+00, !dbg !47
  br i1 %192, label %195, label %__nv_isnanf.exit11.i.i, !dbg !47

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not38.i = icmp eq i32 %193, 0, !dbg !47
  %.07.i = select i1 %.not38.i, float %123, float %122, !dbg !47
  %194 = fcmp uno float %.07.i, 0.000000e+00, !dbg !47
  br i1 %194, label %195, label %__nv_isinff.exit8.i.i, !dbg !47

195:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %196 = fadd float %48, 0x3FD5555560000000, !dbg !47
  br label %__nv_powf.exit, !dbg !47

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not39.i = icmp eq i32 %197, 0, !dbg !47
  %.05.i = select i1 %.not39.i, float %123, float %122, !dbg !47
  %198 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !47
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !47
  %.not41.i = icmp eq i32 %199, 0, !dbg !47
  %.04.i = select i1 %.not41.i, float %58, float %57, !dbg !47
  br i1 %198, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !47

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %200 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !47
  %201 = fcmp oeq float %48, -1.000000e+00, !dbg !47
  %202 = select i1 %200, float 0x7FF0000000000000, float 0.000000e+00, !dbg !47
  %203 = select i1 %201, float 1.000000e+00, float %202, !dbg !47
  br label %__nv_powf.exit, !dbg !47

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %204 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !47
  br i1 %204, label %205, label %__nv_powf.exit, !dbg !47

205:                                              ; preds = %__nv_isinff.exit.i.i
  %206 = select i1 %or.cond.i, float 0xFFF0000000000000, float 0x7FF0000000000000, !dbg !47
  br label %__nv_powf.exit, !dbg !47

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %195, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %205
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %196, %195 ], [ %203, %__nv_fabsf.exit5.i.i ], [ %206, %205 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !47
  %207 = and i32 %6, 28, !dbg !12
  %208 = fcmp oeq float %48, 1.000000e+00, !dbg !47
  %t.0.i = select i1 %208, float 1.000000e+00, float %.3.i, !dbg !47
  %209 = sext i32 %8 to i64, !dbg !49
  %210 = getelementptr float, ptr addrspace(1) %1, i64 %209, !dbg !49
  %211 = icmp eq i32 %207, 0, !dbg !50
  %212 = bitcast float %t.0.i to i32, !dbg !50
  %213 = and i1 %211, %9, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %212, ptr addrspace(1) %210, i1 %213) #4, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cllxt3g3jxodqwcabr7phfrepylhgem2ikj27jadjnll2zxnrkzv.py", directory: "inductor_cache/ll")
!4 = !{ptr @triton_poi_fused_pow_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_pow_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_pow_0", linkageName: "triton_poi_fused_pow_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 32, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 37, scope: !7)
!18 = !DILocation(line: 26, column: 34, scope: !7)
!19 = !DILocation(line: 26, column: 30, scope: !7)
!20 = !DILocation(line: 26, column: 41, scope: !7)
!21 = !DILocation(line: 27, column: 35, scope: !7)
!22 = !DILocation(line: 27, column: 31, scope: !7)
!23 = !DILocation(line: 27, column: 42, scope: !7)
!24 = !DILocation(line: 28, column: 35, scope: !7)
!25 = !DILocation(line: 28, column: 31, scope: !7)
!26 = !DILocation(line: 28, column: 42, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 30, column: 40, scope: !7)
!31 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !30)
!33 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !30)
!34 = !DILocation(line: 31, column: 18, scope: !7)
!35 = !DILocation(line: 32, column: 18, scope: !7)
!36 = !DILocation(line: 36, column: 18, scope: !7)
!37 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !38)
!38 = !DILocation(line: 37, column: 42, scope: !7)
!39 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !38)
!40 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !38)
!41 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !38)
!42 = !DILocation(line: 38, column: 20, scope: !7)
!43 = !DILocation(line: 39, column: 20, scope: !7)
!44 = !DILocation(line: 40, column: 19, scope: !7)
!45 = !DILocation(line: 44, column: 20, scope: !7)
!46 = !DILocation(line: 46, column: 20, scope: !7)
!47 = !DILocation(line: 48, column: 33, scope: !7)
!48 = !{i32 21046}
!49 = !DILocation(line: 49, column: 25, scope: !7)
!50 = !DILocation(line: 49, column: 37, scope: !7)
!51 = !DILocation(line: 49, column: 4, scope: !7)
