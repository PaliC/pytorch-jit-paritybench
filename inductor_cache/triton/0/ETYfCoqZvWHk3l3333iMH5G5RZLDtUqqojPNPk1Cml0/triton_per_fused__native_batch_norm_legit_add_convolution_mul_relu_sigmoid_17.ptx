//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17 // -- Begin function triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17
.visible .entry triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_7,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_8,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_9,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_10,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_11
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<106>;
	.reg .f32 	%f<89>;
	.reg .b64 	%rd<43>;
	.loc	1 19 0                          // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd30, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_0];
	ld.param.u64 	%rd31, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_1];
$L__tmp0:
	.loc	1 24 28                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd32, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_2];
	.loc	1 27 26                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:27:26
	mov.u32 	%r64, %tid.x;
	and.b32  	%r65, %r64, 31;
	ld.param.u64 	%rd33, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_3];
	ld.param.u64 	%rd34, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_4];
	shl.b32 	%r66, %r64, 2;
	ld.param.u64 	%rd35, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_5];
	and.b32  	%r67, %r66, 252;
	ld.param.u64 	%rd36, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_6];
	.loc	1 31 19                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:31:19
	shr.s32 	%r68, %r1, 31;
	shr.u32 	%r69, %r68, 24;
	add.s32 	%r70, %r1, %r69;
	and.b32  	%r71, %r70, -256;
	sub.s32 	%r72, %r1, %r71;
	ld.param.u64 	%rd37, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_7];
	ld.param.u64 	%rd38, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_8];
	.loc	1 33 34                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:33:34
	mul.wide.s32 	%rd39, %r1, 4;
	add.s64 	%rd1, %rd30, %rd39;
	ld.param.u64 	%rd40, [triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17_param_9];
	mov.pred 	%p1, -1;
	.loc	1 33 39                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:33:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:34:30
	mul.wide.s32 	%rd41, %r72, 4;
	add.s64 	%rd6, %rd32, %rd41;
	.loc	1 34 35                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:34:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 35 43                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:35:43
	shl.b32 	%r73, %r1, 8;
	.loc	1 35 39                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:35:39
	or.b32  	%r74, %r73, %r67;
	.loc	1 35 34                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:35:34
	mul.wide.s32 	%rd42, %r74, 4;
	add.s64 	%rd11, %rd31, %rd42;
	.loc	1 35 48                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:35:48
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v4.b32 { %r12, %r13, %r14, %r15 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 36 30                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:36:30
	add.s64 	%rd12, %rd33, %rd41;
	.loc	1 36 35                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:36:35
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:37:31
	add.s64 	%rd16, %rd34, %rd42;
	.loc	1 37 45                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:37:45
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 38 31                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:38:31
	add.s64 	%rd17, %rd35, %rd39;
	.loc	1 38 36                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:38:36
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r26, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r26 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r27, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r27 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 39 31                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:39:31
	add.s64 	%rd21, %rd36, %rd39;
	.loc	1 39 36                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:39:36
	// begin inline asm
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r28 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r29 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r30 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r31, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r31 }, [ %rd21 + 0 ];
	// end inline asm
	.loc	1 40 18                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:40:18
	add.f32 	%f5, %f3, %f4;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p25, %r65, 0;
	shr.u32 	%r75, %r64, 3;
	and.b32  	%r76, %r75, 4;
	mov.u32 	%r77, global_smem;
	add.s32 	%r32, %r77, %r76;
	setp.lt.s32 	%p26, %r64, 2;
	add.s32 	%r35, %r77, %r66;
	and.b32  	%r78, %r64, 1;
	setp.eq.b32 	%p36, %r78, 1;
	not.pred 	%p37, %p36;
	and.pred  	%p27, %p26, %p37;
$L__tmp2:
	.loc	1 35 48                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:35:48
	mov.b32 	%f6, %r12;
	mov.b32 	%f7, %r13;
	mov.b32 	%f8, %r14;
	mov.b32 	%f9, %r15;
	.loc	1 41 18                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:41:18
	mov.b32 	%f10, %r19;
	add.f32 	%f11, %f10, %f9;
	add.f32 	%f12, %f10, %f8;
	add.f32 	%f13, %f10, %f7;
	add.f32 	%f14, %f10, %f6;
$L__tmp3:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f14, %f13;
	add.f32 	%f16, %f12, %f15;
	add.f32 	%f17, %f11, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f17;
	shfl.sync.bfly.b32	%r80, %r79, 16, 31, -1;
	mov.b32 	%f18, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r81, %f19;
	shfl.sync.bfly.b32	%r82, %r81, 8, 31, -1;
	mov.b32 	%f20, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f21;
	shfl.sync.bfly.b32	%r84, %r83, 4, 31, -1;
	mov.b32 	%f22, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f23;
	shfl.sync.bfly.b32	%r86, %r85, 2, 31, -1;
	mov.b32 	%f24, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f25;
	shfl.sync.bfly.b32	%r88, %r87, 1, 31, -1;
	mov.b32 	%f26, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f27;
	// begin inline asm
	@%p25 st.shared.b32 [ %r32 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p26 ld.shared.b32 %r34, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f28, %r34;
	shfl.sync.bfly.b32	%r89, %r34, 1, 31, -1;
	mov.b32 	%f29, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f30;
	// begin inline asm
	@%p27 st.shared.b32 [ %r35 + 0 ], %r37;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f31, [global_smem];
$L__tmp4:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f32, %f31, 0f00000000;
$L__tmp5:
	.loc	1 47 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:47:20
	mov.b32 	%r39, %f32;
	mov.b32 	%r40, 1132462080;
	// begin inline asm
	div.full.f32 %r63, %r39, %r40;
	// end inline asm
	mov.b32 	%f33, %r63;
	.loc	1 48 19                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:48:19
	sub.f32 	%f34, %f11, %f33;
	sub.f32 	%f35, %f12, %f33;
	sub.f32 	%f36, %f13, %f33;
	sub.f32 	%f37, %f14, %f33;
	.loc	1 49 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:49:20
	mul.f32 	%f38, %f37, %f37;
$L__tmp6:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f39, %f36, %f36, %f38;
	fma.rn.f32 	%f40, %f35, %f35, %f39;
	fma.rn.f32 	%f41, %f34, %f34, %f40;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f41;
	shfl.sync.bfly.b32	%r91, %r90, 16, 31, -1;
	mov.b32 	%f42, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f43;
	shfl.sync.bfly.b32	%r93, %r92, 8, 31, -1;
	mov.b32 	%f44, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f45;
	shfl.sync.bfly.b32	%r95, %r94, 4, 31, -1;
	mov.b32 	%f46, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r96, %f47;
	shfl.sync.bfly.b32	%r97, %r96, 2, 31, -1;
	mov.b32 	%f48, %r97;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r98, %f49;
	shfl.sync.bfly.b32	%r99, %r98, 1, 31, -1;
	mov.b32 	%f50, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r42, %f51;
	// begin inline asm
	@%p25 st.shared.b32 [ %r32 + 0 ], %r42;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p26 ld.shared.b32 %r43, [ %r35 + 0 ];
	// end inline asm
	mov.b32 	%f52, %r43;
	shfl.sync.bfly.b32	%r100, %r43, 1, 31, -1;
	mov.b32 	%f53, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r46, %f54;
	// begin inline asm
	@%p27 st.shared.b32 [ %r35 + 0 ], %r46;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f55, [global_smem];
$L__tmp7:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f56, %f55, 0f00000000;
	mov.f32 	%f57, 0f00000000;
$L__tmp8:
	.loc	2 47 30                         // standard.py:47:30
	sub.f32 	%f58, %f57, %f5;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f2, %f58, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f59, %f1, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r49, %f59;
	mov.b32 	%r48, 1065353216;
	// begin inline asm
	div.full.f32 %r47, %r48, %r49;
	// end inline asm
	mov.b32 	%f60, %r47;
$L__tmp9:
	.loc	1 58 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:58:20
	mov.b32 	%r51, %f56;
	// begin inline asm
	div.full.f32 %r50, %r51, %r40;
	// end inline asm
	mov.b32 	%f61, %r50;
	.loc	1 60 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:60:20
	add.f32 	%f62, %f61, 0f3727C5AC;
	.loc	1 61 28                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:61:28
	rsqrt.approx.ftz.f32 	%f63, %f62;
	.loc	1 33 39                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:33:39
	mov.b32 	%f64, %r6;
	.loc	1 34 35                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:34:35
	mov.b32 	%f65, %r11;
	.loc	1 40 18                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:40:18
	add.f32 	%f66, %f64, %f65;
	.loc	1 62 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:62:20
	mul.f32 	%f67, %f34, %f63;
	mul.f32 	%f68, %f35, %f63;
	mul.f32 	%f69, %f36, %f63;
	mul.f32 	%f70, %f37, %f63;
	.loc	1 37 45                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:37:45
	mov.b32 	%f71, %r23;
	mov.b32 	%f72, %r22;
	mov.b32 	%f73, %r21;
	mov.b32 	%f74, %r20;
	.loc	1 52 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:52:20
	mov.b32 	%f75, %r27;
	sub.f32 	%f76, %f74, %f75;
	sub.f32 	%f77, %f73, %f75;
	sub.f32 	%f78, %f72, %f75;
	sub.f32 	%f79, %f71, %f75;
	.loc	1 53 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:53:20
	mov.b32 	%f80, %r31;
	mul.f32 	%f81, %f79, %f80;
	mul.f32 	%f82, %f78, %f80;
	mul.f32 	%f83, %f77, %f80;
	mul.f32 	%f84, %f76, %f80;
	.loc	1 63 20                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:63:20
	fma.rn.f32 	%f85, %f84, %f60, %f70;
	fma.rn.f32 	%f86, %f83, %f60, %f69;
	fma.rn.f32 	%f87, %f82, %f60, %f68;
	fma.rn.f32 	%f88, %f81, %f60, %f67;
$L__tmp10:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p38, %f88, 0f00000000;
	setp.lt.f32 	%p39, %f87, 0f00000000;
	setp.lt.f32 	%p40, %f86, 0f00000000;
	setp.lt.f32 	%p41, %f85, 0f00000000;
$L__tmp11:
	.loc	1 66 4                          // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:66:4
	bar.sync 	0;
	.loc	1 67 39                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:67:39
	and.b32  	%r101, %r64, 63;
	setp.eq.s32 	%p31, %r101, 0;
	mov.b32 	%r53, %f66;
	// begin inline asm
	@%p31 st.global.b32 [ %rd1 + 0 ], { %r53 };
	// end inline asm
	.loc	1 68 48                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:68:48
	mov.b32 	%r54, %f14;
	mov.b32 	%r55, %f13;
	mov.b32 	%r56, %f12;
	mov.b32 	%r57, %f11;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	.loc	1 69 25                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:69:25
	add.s64 	%rd27, %rd38, %rd42;
	.loc	1 69 46                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:69:46
	mov.b32 	%r102, %f88;
	mov.b32 	%r103, %f87;
	mov.b32 	%r104, %f86;
	mov.b32 	%r105, %f85;
$L__tmp12:
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.b32 	%r58, 0, %r105, %p41;
	selp.b32 	%r59, 0, %r104, %p40;
	selp.b32 	%r60, 0, %r103, %p39;
	selp.b32 	%r61, 0, %r102, %p38;
$L__tmp13:
	.loc	1 69 46                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:69:46
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd27 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
	.loc	1 70 25                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:70:25
	add.s64 	%rd28, %rd40, %rd39;
	.loc	1 70 37                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:70:37
	mov.b32 	%r62, %f63;
	// begin inline asm
	@%p31 st.global.b32 [ %rd28 + 0 ], { %r62 };
	// end inline asm
	.loc	1 71 25                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:71:25
	add.s64 	%rd29, %rd37, %rd39;
	.loc	1 71 37                         // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:71:37
	// begin inline asm
	@%p31 st.global.b32 [ %rd29 + 0 ], { %r63 };
	// end inline asm
	.loc	1 71 4                          // cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py:71:4
	ret;
$L__tmp14:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 342                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x14f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 120
.b8 54
.b8 51
.b8 101
.b8 100
.b8 100
.b8 55
.b8 122
.b8 108
.b8 113
.b8 112
.b8 108
.b8 111
.b8 113
.b8 106
.b8 111
.b8 105
.b8 97
.b8 119
.b8 105
.b8 100
.b8 108
.b8 111
.b8 50
.b8 98
.b8 53
.b8 108
.b8 112
.b8 114
.b8 100
.b8 55
.b8 108
.b8 121
.b8 106
.b8 52
.b8 114
.b8 112
.b8 54
.b8 51
.b8 114
.b8 105
.b8 107
.b8 119
.b8 100
.b8 115
.b8 97
.b8 112
.b8 119
.b8 54
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x50 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 49
.b8 55
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb3:0xa6 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 58                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp6                           // DW_AT_low_pc
.b64 $L__tmp7                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x110:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x128:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp8                           // DW_AT_low_pc
.b64 $L__tmp9                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x140:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp10                          // DW_AT_low_pc
.b64 $L__tmp13                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 65                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
