#loc = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0)
#loc1 = loc(unknown)
#loc24 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":44:58)
#loc31 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":51:59)
#loc60 = loc(callsite(#loc1 at #loc24))
#loc64 = loc(callsite(#loc1 at #loc31))
module {
  tt.func public @triton_per_fused__native_batch_norm_legit_add_convolution_mul_relu_sigmoid_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0), %arg11: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_0 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1.000000e+00> : tensor<1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc3)
    %2 = arith.remsi %0, %c256_i32 : i32 loc(#loc4)
    %3 = tt.addptr %arg0, %0 : !tt.ptr<f32>, i32 loc(#loc5)
    %4 = tt.splat %3 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.load %4 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %arg2, %2 : !tt.ptr<f32>, i32 loc(#loc7)
    %7 = tt.splat %6 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc7)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc8)
    %9 = arith.muli %0, %c256_i32 : i32 loc(#loc9)
    %10 = tt.splat %9 : i32 -> tensor<256xi32> loc(#loc10)
    %11 = arith.addi %1, %10 : tensor<256xi32> loc(#loc10)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %14 = tt.load %13 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.addptr %arg3, %2 : !tt.ptr<f32>, i32 loc(#loc13)
    %16 = tt.splat %15 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc13)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %20 = tt.load %19 : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc17)
    %22 = tt.splat %21 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc17)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc18)
    %24 = tt.addptr %arg6, %0 : !tt.ptr<f32>, i32 loc(#loc19)
    %25 = tt.splat %24 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc19)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<1x!tt.ptr<f32>> loc(#loc20)
    %27 = arith.addf %5, %8 : tensor<1xf32> loc(#loc21)
    %28 = tt.broadcast %17 : tensor<1xf32> -> tensor<256xf32> loc(#loc22)
    %29 = arith.addf %14, %28 : tensor<256xf32> loc(#loc22)
    %30 = "tt.reduce"(%29) <{axis = 0 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc24)), %arg13: f32 loc(callsite(#loc1 at #loc24))):
      %64 = arith.addf %arg12, %arg13 : f32 loc(#loc72)
      tt.reduce.return %64 : f32 loc(#loc59)
    }) : (tensor<256xf32>) -> f32 loc(#loc59)
    %31 = arith.addf %30, %cst_1 : f32 loc(#loc62)
    %32 = arith.divf %31, %cst_0 : f32 loc(#loc28)
    %33 = tt.splat %32 : f32 -> tensor<1xf32> loc(#loc28)
    %34 = tt.splat %32 : f32 -> tensor<256xf32> loc(#loc29)
    %35 = arith.subf %29, %34 : tensor<256xf32> loc(#loc29)
    %36 = arith.mulf %35, %35 : tensor<256xf32> loc(#loc30)
    %37 = "tt.reduce"(%36) <{axis = 0 : i32}> ({
    ^bb0(%arg12: f32 loc(callsite(#loc1 at #loc31)), %arg13: f32 loc(callsite(#loc1 at #loc31))):
      %64 = arith.addf %arg12, %arg13 : f32 loc(#loc73)
      tt.reduce.return %64 : f32 loc(#loc63)
    }) : (tensor<256xf32>) -> f32 loc(#loc63)
    %38 = arith.addf %37, %cst_1 : f32 loc(#loc65)
    %39 = tt.broadcast %23 : tensor<1xf32> -> tensor<256xf32> loc(#loc33)
    %40 = arith.subf %20, %39 : tensor<256xf32> loc(#loc33)
    %41 = tt.broadcast %26 : tensor<1xf32> -> tensor<256xf32> loc(#loc34)
    %42 = arith.mulf %40, %41 : tensor<256xf32> loc(#loc34)
    %43 = arith.subf %cst_4, %27 : tensor<1xf32> loc(#loc66)
    %44 = math.exp %43 : tensor<1xf32> loc(#loc67)
    %45 = arith.addf %44, %cst_3 : tensor<1xf32> loc(#loc68)
    %46 = arith.divf %cst_3, %45 : tensor<1xf32> loc(#loc69)
    %47 = tt.broadcast %46 : tensor<1xf32> -> tensor<256xf32> loc(#loc40)
    %48 = arith.mulf %42, %47 : tensor<256xf32> loc(#loc40)
    %49 = arith.divf %38, %cst_0 : f32 loc(#loc41)
    %50 = arith.addf %49, %cst : f32 loc(#loc42)
    %51 = tt.extern_elementwise %50 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (f32) -> f32 loc(#loc43)
    %52 = tt.splat %51 : f32 -> tensor<1xf32> loc(#loc43)
    %53 = tt.splat %51 : f32 -> tensor<256xf32> loc(#loc44)
    %54 = arith.mulf %35, %53 : tensor<256xf32> loc(#loc44)
    %55 = arith.addf %48, %54 : tensor<256xf32> loc(#loc45)
    %56 = arith.cmpf ogt, %cst_2, %55 : tensor<256xf32> loc(#loc70)
    %57 = arith.select %56, %cst_2, %55 : tensor<256xi1>, tensor<256xf32> loc(#loc71)
    gpu.barrier loc(#loc49)
    tt.store %4, %27 : tensor<1x!tt.ptr<f32>> loc(#loc50)
    tt.store %13, %29 : tensor<256x!tt.ptr<f32>> loc(#loc51)
    %58 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc52)
    %59 = tt.addptr %58, %11 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc52)
    tt.store %59, %57 : tensor<256x!tt.ptr<f32>> loc(#loc53)
    %60 = tt.addptr %arg9, %0 : !tt.ptr<f32>, i32 loc(#loc54)
    %61 = tt.splat %60 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc54)
    tt.store %61, %52 : tensor<1x!tt.ptr<f32>> loc(#loc55)
    %62 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc56)
    %63 = tt.splat %62 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc56)
    tt.store %63, %33 : tensor<1x!tt.ptr<f32>> loc(#loc57)
    tt.return loc(#loc58)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":24:28)
#loc3 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":27:26)
#loc4 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":31:19)
#loc5 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":33:34)
#loc6 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":33:39)
#loc7 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":34:30)
#loc8 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":34:35)
#loc9 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":35:43)
#loc10 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":35:39)
#loc11 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":35:34)
#loc12 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":35:48)
#loc13 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":36:30)
#loc14 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":36:35)
#loc15 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":37:31)
#loc16 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":37:45)
#loc17 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":38:31)
#loc18 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":38:36)
#loc19 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":39:31)
#loc20 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":39:36)
#loc21 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":40:18)
#loc22 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":41:18)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc27 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":44:45)
#loc28 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":47:20)
#loc29 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":48:19)
#loc30 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":49:20)
#loc32 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":51:45)
#loc33 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":52:20)
#loc34 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":53:20)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc36 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":54:23)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc40 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":55:20)
#loc41 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":58:20)
#loc42 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":60:20)
#loc43 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":61:28)
#loc44 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":62:20)
#loc45 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":63:20)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc47 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":65:42)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc49 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":66:4)
#loc50 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":67:39)
#loc51 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":68:48)
#loc52 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":69:25)
#loc53 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":69:46)
#loc54 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":70:25)
#loc55 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":70:37)
#loc56 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":71:25)
#loc57 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":71:37)
#loc58 = loc("inductor_cache/vx/cvx63edd7zlqploqjoiawidlo2b5lprd7lyj4rp63rikwdsapw6q.py":71:4)
#loc59 = loc(callsite(#loc23 at #loc24))
#loc61 = loc(callsite(#loc25 at #loc23))
#loc62 = loc(callsite(#loc26 at #loc27))
#loc63 = loc(callsite(#loc23 at #loc31))
#loc65 = loc(callsite(#loc26 at #loc32))
#loc66 = loc(callsite(#loc35 at #loc36))
#loc67 = loc(callsite(#loc37 at #loc36))
#loc68 = loc(callsite(#loc38 at #loc36))
#loc69 = loc(callsite(#loc39 at #loc36))
#loc70 = loc(callsite(#loc46 at #loc47))
#loc71 = loc(callsite(#loc48 at #loc47))
#loc72 = loc(callsite(#loc61 at #loc24))
#loc73 = loc(callsite(#loc61 at #loc31))
