#loc = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0)
#loc1 = loc(unknown)
#loc25 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":44:26)
#loc32 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":52:26)
#loc48 = loc(callsite(#loc1 at #loc25))
#loc51 = loc(callsite(#loc1 at #loc32))
module {
  tt.func public @triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg8: i32 loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<6.250000e-02> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x16xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x16xi32> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.addptr %12, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc10)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.addptr %15, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc12)
    %17 = tt.load %16, %10, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc13)
    %18 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc14)
    %19 = tt.addptr %18, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc14)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %21 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc16)
    %22 = tt.addptr %21, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc16)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc17)
    %24 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc18)
    %25 = tt.addptr %24, %4 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc18)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc19)
    %27 = arith.addf %11, %14 : tensor<1x16xf32> loc(#loc20)
    %28 = arith.addf %17, %20 : tensor<1x16xf32> loc(#loc21)
    %29 = arith.addf %27, %28 : tensor<1x16xf32> loc(#loc22)
    %30 = arith.select %10, %29, %cst_2 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc23)
    %31 = "tt.reduce"(%30) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc25)), %arg11: f32 loc(callsite(#loc1 at #loc25))):
      %52 = arith.addf %arg10, %arg11 : f32 loc(#loc52)
      tt.reduce.return %52 : f32 loc(#loc47)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc47)
    %32 = tt.expand_dims %31 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc27)
    %33 = arith.divf %32, %cst_1 : tensor<1x1xf32> loc(#loc28)
    %34 = tt.broadcast %33 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc29)
    %35 = arith.subf %29, %34 : tensor<1x16xf32> loc(#loc29)
    %36 = arith.mulf %35, %35 : tensor<1x16xf32> loc(#loc30)
    %37 = arith.select %10, %36, %cst_2 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc31)
    %38 = "tt.reduce"(%37) <{axis = 1 : i32}> ({
    ^bb0(%arg10: f32 loc(callsite(#loc1 at #loc32)), %arg11: f32 loc(callsite(#loc1 at #loc32))):
      %52 = arith.addf %arg10, %arg11 : f32 loc(#loc53)
      tt.reduce.return %52 : f32 loc(#loc50)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc50)
    %39 = tt.expand_dims %38 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc33)
    %40 = arith.divf %39, %cst_1 : tensor<1x1xf32> loc(#loc34)
    %41 = arith.addf %40, %cst_0 : tensor<1x1xf32> loc(#loc35)
    %42 = tt.extern_elementwise %41 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc36)
    %43 = tt.broadcast %42 : tensor<1x1xf32> -> tensor<1x16xf32> loc(#loc37)
    %44 = arith.mulf %35, %43 : tensor<1x16xf32> loc(#loc37)
    %45 = arith.mulf %44, %23 : tensor<1x16xf32> loc(#loc38)
    %46 = arith.addf %45, %26 : tensor<1x16xf32> loc(#loc39)
    %47 = arith.mulf %42, %cst : tensor<1x1xf32> loc(#loc40)
    tt.store %9, %44, %10 : tensor<1x16x!tt.ptr<f32>> loc(#loc41)
    %48 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc42)
    %49 = tt.addptr %48, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc42)
    tt.store %49, %46, %10 : tensor<1x16x!tt.ptr<f32>> loc(#loc43)
    %50 = tt.addptr %arg7, %0 : !tt.ptr<f32>, i32 loc(#loc44)
    %51 = tt.splat %50 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.store %51, %47, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":23:28)
#loc3 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":25:21)
#loc4 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":26:26)
#loc5 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":26:34)
#loc6 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":31:42)
#loc7 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":31:39)
#loc8 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":31:34)
#loc9 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":31:47)
#loc10 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":32:30)
#loc11 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":32:35)
#loc12 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":33:30)
#loc13 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":33:43)
#loc14 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":34:30)
#loc15 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":34:35)
#loc16 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":35:31)
#loc17 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":35:36)
#loc18 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":36:31)
#loc19 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":36:36)
#loc20 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":37:18)
#loc21 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":38:18)
#loc22 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":39:18)
#loc23 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":43:35)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc27 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":44:29)
#loc28 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":47:20)
#loc29 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":48:19)
#loc30 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":49:20)
#loc31 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":51:35)
#loc33 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":52:29)
#loc34 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":55:20)
#loc35 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":57:20)
#loc36 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":58:28)
#loc37 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":59:20)
#loc38 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":60:20)
#loc39 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":61:20)
#loc40 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":63:20)
#loc41 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":64:48)
#loc42 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":65:25)
#loc43 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":65:45)
#loc44 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":66:25)
#loc45 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":66:37)
#loc46 = loc("inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py":66:4)
#loc47 = loc(callsite(#loc24 at #loc25))
#loc49 = loc(callsite(#loc26 at #loc24))
#loc50 = loc(callsite(#loc24 at #loc32))
#loc52 = loc(callsite(#loc49 at #loc25))
#loc53 = loc(callsite(#loc49 at #loc32))
