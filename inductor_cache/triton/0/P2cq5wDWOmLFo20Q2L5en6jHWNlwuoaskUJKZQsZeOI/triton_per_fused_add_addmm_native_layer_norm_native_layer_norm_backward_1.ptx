//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1 // -- Begin function triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1
.visible .entry triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_7,
	.param .u32 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_8,
	.param .u32 triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_9
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<69>;
	.reg .f32 	%f<68>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd14, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_0];
	ld.param.u64 	%rd15, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 25 21                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:25:21
	setp.lt.s32 	%p1, %r1, 4;
	ld.param.u64 	%rd16, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_2];
	ld.param.u64 	%rd17, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_3];
	.loc	1 26 34                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:26:34
	mov.u32 	%r31, %tid.x;
	and.b32  	%r32, %r31, 15;
	ld.param.u64 	%rd18, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_4];
	.loc	1 31 42                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:31:42
	shl.b32 	%r33, %r1, 4;
	ld.param.u64 	%rd19, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_5];
	.loc	1 31 39                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:31:39
	or.b32  	%r34, %r33, %r32;
	ld.param.u64 	%rd20, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_6];
	ld.param.u64 	%rd21, [triton_per_fused_add_addmm_native_layer_norm_native_layer_norm_backward_1_param_7];
	.loc	1 31 34                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:31:34
	mul.wide.s32 	%rd22, %r34, 4;
	add.s64 	%rd1, %rd14, %rd22;
	mov.b32 	%r3, 0;
	.loc	1 31 47                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:31:47
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r3;
	// end inline asm
	mov.b32 	%f1, %r2;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r4, %r3;
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 32 30                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:32:30
	mul.wide.u32 	%rd23, %r32, 4;
	add.s64 	%rd3, %rd15, %rd23;
	mov.pred 	%p5, -1;
	.loc	1 32 35                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:32:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r7 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r7;
	.loc	1 33 30                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:33:30
	add.s64 	%rd5, %rd16, %rd22;
	.loc	1 33 43                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:33:43
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r8, %r3;
	// end inline asm
	mov.b32 	%f5, %r8;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.b32 { %r10 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r10, %r3;
	// end inline asm
	mov.b32 	%f6, %r10;
	.loc	1 34 30                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:34:30
	add.s64 	%rd7, %rd17, %rd23;
	.loc	1 34 35                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:34:35
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r12 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r12;
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r13 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r13;
	.loc	1 35 31                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:35:31
	add.s64 	%rd9, %rd18, %rd23;
	.loc	1 35 36                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:35:36
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r14 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:36:31
	add.s64 	%rd10, %rd19, %rd23;
	.loc	1 36 36                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:36:36
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r15 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 37 18                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:37:18
	add.f32 	%f9, %f1, %f3;
	add.f32 	%f10, %f2, %f4;
	.loc	1 38 18                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:38:18
	add.f32 	%f11, %f5, %f7;
	add.f32 	%f12, %f6, %f8;
	.loc	1 39 18                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:39:18
	add.f32 	%f13, %f9, %f11;
	add.f32 	%f14, %f10, %f12;
	.loc	1 43 35                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:43:35
	selp.f32 	%f15, %f13, 0f00000000, %p1;
	selp.f32 	%f16, %f14, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f15;
	shfl.sync.bfly.b32	%r36, %r35, 8, 31, -1;
	mov.b32 	%f17, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f15, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f18;
	shfl.sync.bfly.b32	%r38, %r37, 4, 31, -1;
	mov.b32 	%f19, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f20;
	shfl.sync.bfly.b32	%r40, %r39, 2, 31, -1;
	mov.b32 	%f21, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f22;
	shfl.sync.bfly.b32	%r42, %r41, 1, 31, -1;
	mov.b32 	%f23, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f16;
	shfl.sync.bfly.b32	%r44, %r43, 8, 31, -1;
	mov.b32 	%f25, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f16, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r45, %f26;
	shfl.sync.bfly.b32	%r46, %r45, 4, 31, -1;
	mov.b32 	%f27, %r46;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r47, %f28;
	shfl.sync.bfly.b32	%r48, %r47, 2, 31, -1;
	mov.b32 	%f29, %r48;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f30, %f28, %f29;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r49, %f30;
	shfl.sync.bfly.b32	%r50, %r49, 1, 31, -1;
	mov.b32 	%f31, %r50;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f32, %f30, %f31;
$L__tmp2:
	.loc	1 47 20                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:47:20
	mov.b32 	%r17, %f24;
	mov.b32 	%r18, 1098907648;
	// begin inline asm
	div.full.f32 %r16, %r17, %r18;
	// end inline asm
	mov.b32 	%f33, %r16;
	mov.b32 	%r20, %f32;
	// begin inline asm
	div.full.f32 %r19, %r20, %r18;
	// end inline asm
	mov.b32 	%f34, %r19;
	.loc	1 48 19                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:48:19
	sub.f32 	%f35, %f13, %f33;
	sub.f32 	%f36, %f14, %f34;
	.loc	1 49 20                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:49:20
	mul.f32 	%f37, %f35, %f35;
	mul.f32 	%f38, %f36, %f36;
	.loc	1 51 35                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:51:35
	selp.f32 	%f39, %f37, 0f00000000, %p1;
	selp.f32 	%f40, %f38, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r51, %f39;
	shfl.sync.bfly.b32	%r52, %r51, 8, 31, -1;
	mov.b32 	%f41, %r52;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f39, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r53, %f42;
	shfl.sync.bfly.b32	%r54, %r53, 4, 31, -1;
	mov.b32 	%f43, %r54;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r55, %f44;
	shfl.sync.bfly.b32	%r56, %r55, 2, 31, -1;
	mov.b32 	%f45, %r56;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f46;
	shfl.sync.bfly.b32	%r58, %r57, 1, 31, -1;
	mov.b32 	%f47, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f40;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f49, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f40, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f50;
	shfl.sync.bfly.b32	%r62, %r61, 4, 31, -1;
	mov.b32 	%f51, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f52, %f50, %f51;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f52;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f53, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f54, %f52, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f54;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f55, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f54, %f55;
$L__tmp4:
	.loc	1 55 20                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:55:20
	mov.b32 	%r23, %f48;
	// begin inline asm
	div.full.f32 %r22, %r23, %r18;
	// end inline asm
	mov.b32 	%f57, %r22;
	mov.b32 	%r26, %f56;
	// begin inline asm
	div.full.f32 %r25, %r26, %r18;
	// end inline asm
	mov.b32 	%f58, %r25;
	.loc	1 57 20                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:57:20
	add.f32 	%f59, %f57, 0f3727C5AC;
	add.f32 	%f60, %f58, 0f3727C5AC;
	.loc	1 58 28                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:58:28
	rsqrt.approx.ftz.f32 	%f61, %f59;
	rsqrt.approx.ftz.f32 	%f62, %f60;
	.loc	1 36 36                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:36:36
	mov.b32 	%f63, %r15;
	.loc	1 35 36                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:35:36
	mov.b32 	%f64, %r14;
	.loc	1 59 20                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:59:20
	mul.f32 	%f65, %f35, %f61;
	.loc	1 61 20                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:61:20
	fma.rn.f32 	%f66, %f65, %f64, %f63;
	.loc	1 63 20                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:63:20
	mul.f32 	%f67, %f62, 0f3D800000;
	.loc	1 64 48                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:64:48
	and.b32  	%r67, %r31, 48;
	setp.eq.s32 	%p18, %r67, 0;
	mov.b32 	%r28, %f65;
	and.pred  	%p15, %p18, %p1;
	// begin inline asm
	@%p15 st.global.b32 [ %rd1 + 0 ], { %r28 };
	// end inline asm
	.loc	1 65 25                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:65:25
	add.s64 	%rd12, %rd20, %rd22;
	.loc	1 65 45                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:65:45
	mov.b32 	%r29, %f66;
	// begin inline asm
	@%p15 st.global.b32 [ %rd12 + 0 ], { %r29 };
	// end inline asm
	.loc	1 66 25                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:66:25
	mul.wide.s32 	%rd24, %r1, 4;
	add.s64 	%rd13, %rd21, %rd24;
	.loc	1 66 37                         // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:66:37
	and.b32  	%r68, %r31, 63;
	setp.eq.s32 	%p19, %r68, 0;
	mov.b32 	%r30, %f67;
	and.pred  	%p17, %p19, %p1;
	// begin inline asm
	@%p17 st.global.b32 [ %rd13 + 0 ], { %r30 };
	// end inline asm
	.loc	1 66 4                          // cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py:66:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ms/cmszmfqrnpdcidhb5qklfc47msoitngim4i3h7pu26irnxd3ihum.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 242                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xeb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 115
.b8 122
.b8 109
.b8 102
.b8 113
.b8 114
.b8 110
.b8 112
.b8 100
.b8 99
.b8 105
.b8 100
.b8 104
.b8 98
.b8 53
.b8 113
.b8 107
.b8 108
.b8 102
.b8 99
.b8 52
.b8 55
.b8 109
.b8 115
.b8 111
.b8 105
.b8 116
.b8 110
.b8 103
.b8 105
.b8 109
.b8 52
.b8 105
.b8 51
.b8 104
.b8 55
.b8 112
.b8 117
.b8 50
.b8 54
.b8 105
.b8 114
.b8 110
.b8 120
.b8 100
.b8 51
.b8 105
.b8 104
.b8 117
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 109
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xaf:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 44                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xdc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 52                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
