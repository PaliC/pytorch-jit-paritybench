; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused_mean_sum_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = icmp slt i32 %5, 16, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 15, !dbg !12
  %9 = shl i32 %5, 4, !dbg !13
  %10 = or disjoint i32 %9, %8, !dbg !14
  %11 = sext i32 %10 to i64, !dbg !15
  %12 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !15
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 %6, i32 0, i1 %6) #3, !dbg !16
  %14 = bitcast i32 %13 to float, !dbg !16
  %15 = or disjoint i32 %8, 256, !dbg !17
  %16 = add i32 %15, %9, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 %6, i32 0, i1 %6) #3, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = fadd float %14, %20, !dbg !21
  %22 = select i1 %6, float %21, float 0.000000e+00, !dbg !22
  %23 = bitcast float %22 to i32, !dbg !23
  %24 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %23, i32 8, i32 31), !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = fadd float %22, %25, !dbg !27
  %27 = bitcast float %26 to i32, !dbg !23
  %28 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %27, i32 4, i32 31), !dbg !23
  %29 = bitcast i32 %28 to float, !dbg !23
  %30 = fadd float %26, %29, !dbg !27
  %31 = bitcast float %30 to i32, !dbg !23
  %32 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %31, i32 2, i32 31), !dbg !23
  %33 = bitcast i32 %32 to float, !dbg !23
  %34 = fadd float %30, %33, !dbg !27
  %35 = bitcast float %34 to i32, !dbg !23
  %36 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %35, i32 1, i32 31), !dbg !23
  %37 = bitcast i32 %36 to float, !dbg !23
  %38 = fadd float %34, %37, !dbg !27
  %39 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %38, float 1.600000e+01) #3, !dbg !29
  tail call void @llvm.nvvm.barrier0(), !dbg !30
  %40 = sext i32 %5 to i64, !dbg !31
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !31
  %42 = and i32 %7, 63, !dbg !32
  %43 = icmp eq i32 %42, 0, !dbg !32
  %44 = bitcast float %39 to i32, !dbg !32
  %45 = and i1 %43, %6, !dbg !32
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %44, ptr addrspace(1) %41, i1 %45) #3, !dbg !32
  ret void, !dbg !33
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cysperrveqftar7tgaf3goxm5e34n2atbgak7spchdat6zwhwszw.py", directory: "inductor_cache/ys")
!4 = !{ptr @triton_per_fused_mean_sum_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mean_sum_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mean_sum_1", linkageName: "triton_per_fused_mean_sum_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 21, scope: !7)
!12 = !DILocation(line: 26, column: 34, scope: !7)
!13 = !DILocation(line: 31, column: 38, scope: !7)
!14 = !DILocation(line: 31, column: 35, scope: !7)
!15 = !DILocation(line: 31, column: 30, scope: !7)
!16 = !DILocation(line: 31, column: 43, scope: !7)
!17 = !DILocation(line: 32, column: 36, scope: !7)
!18 = !DILocation(line: 32, column: 41, scope: !7)
!19 = !DILocation(line: 32, column: 30, scope: !7)
!20 = !DILocation(line: 32, column: 49, scope: !7)
!21 = !DILocation(line: 33, column: 18, scope: !7)
!22 = !DILocation(line: 35, column: 33, scope: !7)
!23 = !DILocation(line: 267, column: 36, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!26 = !DILocation(line: 36, column: 24, scope: !7)
!27 = !DILocation(line: 256, column: 15, scope: !28, inlinedAt: !26)
!28 = distinct !DILexicalBlockFile(scope: !24, file: !25, discriminator: 0)
!29 = !DILocation(line: 38, column: 18, scope: !7)
!30 = !DILocation(line: 39, column: 4, scope: !7)
!31 = !DILocation(line: 40, column: 28, scope: !7)
!32 = !DILocation(line: 40, column: 39, scope: !7)
!33 = !DILocation(line: 40, column: 4, scope: !7)
