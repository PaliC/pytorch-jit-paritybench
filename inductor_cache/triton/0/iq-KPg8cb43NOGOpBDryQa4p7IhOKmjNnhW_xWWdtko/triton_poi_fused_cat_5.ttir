#loc = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<3> : tensor<16xi32> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<16xi32> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<16xi32> loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<16xi32> loc(#loc1)
    %cst_4 = arith.constant dense<-2> : tensor<16xi32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<16xf32> loc(#loc1)
    %cst_6 = arith.constant dense<1> : tensor<16xi64> loc(#loc1)
    %cst_7 = arith.constant dense<2> : tensor<16xi64> loc(#loc1)
    %cst_8 = arith.constant dense<4> : tensor<16xi32> loc(#loc1)
    %cst_9 = arith.constant dense<16> : tensor<16xi32> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<16xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<16xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_9 : tensor<16xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_8 : tensor<16xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_8 : tensor<16xi32> loc(#loc8)
    %8 = arith.extsi %6 : tensor<16xi32> to tensor<16xi64> loc(#loc9)
    %9 = arith.cmpi slt, %8, %cst_7 : tensor<16xi64> loc(#loc9)
    %10 = arith.cmpi slt, %8, %cst_6 : tensor<16xi64> loc(#loc10)
    %11 = arith.andi %10, %9 : tensor<16xi1> loc(#loc11)
    %12 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.addptr %12, %7 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc12)
    %14 = arith.andi %11, %5 : tensor<16xi1> loc(#loc13)
    %15 = tt.load %13, %14, %cst_5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc14)
    %16 = arith.cmpi sge, %8, %cst_6 : tensor<16xi64> loc(#loc15)
    %17 = arith.andi %16, %9 : tensor<16xi1> loc(#loc16)
    %18 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc17)
    %19 = tt.addptr %18, %7 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc17)
    %20 = arith.andi %17, %5 : tensor<16xi1> loc(#loc18)
    %21 = tt.load %19, %20, %cst_5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc19)
    %22 = arith.subf %cst_5, %21 : tensor<16xf32> loc(#loc61)
    %23 = math.exp %22 : tensor<16xf32> loc(#loc62)
    %24 = arith.addf %23, %cst : tensor<16xf32> loc(#loc63)
    %25 = arith.divf %cst, %24 : tensor<16xf32> loc(#loc64)
    %26 = arith.mulf %21, %25 : tensor<16xf32> loc(#loc25)
    %27 = arith.select %17, %26, %cst_5 : tensor<16xi1>, tensor<16xf32> loc(#loc26)
    %28 = arith.select %10, %15, %27 : tensor<16xi1>, tensor<16xf32> loc(#loc27)
    %29 = arith.cmpi sge, %8, %cst_7 : tensor<16xi64> loc(#loc28)
    %30 = arith.addi %6, %cst_4 : tensor<16xi32> loc(#loc29)
    %31 = arith.muli %30, %cst_8 : tensor<16xi32> loc(#loc30)
    %32 = arith.muli %7, %cst_3 : tensor<16xi32> loc(#loc31)
    %33 = arith.addi %31, %32 : tensor<16xi32> loc(#loc32)
    %34 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc33)
    %35 = tt.addptr %34, %33 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc33)
    %36 = arith.andi %29, %5 : tensor<16xi1> loc(#loc34)
    %37 = tt.load %35, %36, %cst_5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc35)
    %38 = arith.addi %31, %cst_2 : tensor<16xi32> loc(#loc36)
    %39 = arith.addi %38, %32 : tensor<16xi32> loc(#loc37)
    %40 = tt.addptr %34, %39 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc38)
    %41 = tt.load %40, %36, %cst_5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc39)
    %42 = arith.cmpf ogt, %41, %37 : tensor<16xf32> loc(#loc65)
    %43 = arith.cmpf une, %41, %41 : tensor<16xf32> loc(#loc66)
    %44 = arith.ori %42, %43 : tensor<16xi1> loc(#loc67)
    %45 = arith.select %44, %41, %37 : tensor<16xi1>, tensor<16xf32> loc(#loc68)
    %46 = arith.addi %31, %cst_1 : tensor<16xi32> loc(#loc45)
    %47 = arith.addi %46, %32 : tensor<16xi32> loc(#loc46)
    %48 = tt.addptr %34, %47 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc47)
    %49 = tt.load %48, %36, %cst_5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc48)
    %50 = arith.cmpf ogt, %49, %45 : tensor<16xf32> loc(#loc69)
    %51 = arith.cmpf une, %49, %49 : tensor<16xf32> loc(#loc70)
    %52 = arith.ori %50, %51 : tensor<16xi1> loc(#loc71)
    %53 = arith.select %52, %49, %45 : tensor<16xi1>, tensor<16xf32> loc(#loc72)
    %54 = arith.addi %31, %cst_0 : tensor<16xi32> loc(#loc50)
    %55 = arith.addi %54, %32 : tensor<16xi32> loc(#loc51)
    %56 = tt.addptr %34, %55 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc52)
    %57 = tt.load %56, %36, %cst_5 evictionPolicy = evict_last : tensor<16x!tt.ptr<f32>> loc(#loc53)
    %58 = arith.cmpf ogt, %57, %53 : tensor<16xf32> loc(#loc73)
    %59 = arith.cmpf une, %57, %57 : tensor<16xf32> loc(#loc74)
    %60 = arith.ori %58, %59 : tensor<16xi1> loc(#loc75)
    %61 = arith.select %60, %57, %53 : tensor<16xi1>, tensor<16xf32> loc(#loc76)
    %62 = arith.select %29, %61, %cst_5 : tensor<16xi1>, tensor<16xf32> loc(#loc55)
    %63 = arith.select %9, %28, %62 : tensor<16xi1>, tensor<16xf32> loc(#loc77)
    %64 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>> loc(#loc58)
    %65 = tt.addptr %64, %4 : tensor<16x!tt.ptr<f32>>, tensor<16xi32> loc(#loc58)
    tt.store %65, %63, %5 : tensor<16x!tt.ptr<f32>> loc(#loc59)
    tt.return loc(#loc60)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":21:28)
#loc3 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":21:33)
#loc4 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":22:36)
#loc5 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":22:23)
#loc6 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":23:21)
#loc7 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":24:19)
#loc8 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":25:19)
#loc9 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":31:18)
#loc10 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":36:18)
#loc11 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":37:19)
#loc12 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":38:31)
#loc13 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":38:44)
#loc14 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":38:36)
#loc15 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":39:20)
#loc16 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":42:20)
#loc17 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":43:31)
#loc18 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":43:44)
#loc19 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":43:36)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc21 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":44:23)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc25 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":45:20)
#loc26 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":47:35)
#loc27 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":48:34)
#loc28 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":51:20)
#loc29 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":54:41)
#loc30 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":54:34)
#loc31 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":54:49)
#loc32 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":54:47)
#loc33 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":54:31)
#loc34 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":54:62)
#loc35 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":54:54)
#loc36 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":55:35)
#loc37 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":55:51)
#loc38 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":55:31)
#loc39 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":55:58)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc41 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":56:42)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc45 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":57:35)
#loc46 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":57:51)
#loc47 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":57:31)
#loc48 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":57:58)
#loc49 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":58:42)
#loc50 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":59:35)
#loc51 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":59:51)
#loc52 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":59:31)
#loc53 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":59:58)
#loc54 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":60:42)
#loc55 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":62:35)
#loc56 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":63:34)
#loc57 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":50:34)
#loc58 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":64:25)
#loc59 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":64:37)
#loc60 = loc("inductor_cache/tf/ctff4tjklrtelspkyvtjhfkm6ul4u6obiqzielnnugn5oqsgmzh6.py":64:4)
#loc61 = loc(callsite(#loc20 at #loc21))
#loc62 = loc(callsite(#loc22 at #loc21))
#loc63 = loc(callsite(#loc23 at #loc21))
#loc64 = loc(callsite(#loc24 at #loc21))
#loc65 = loc(callsite(#loc40 at #loc41))
#loc66 = loc(callsite(#loc42 at #loc41))
#loc67 = loc(callsite(#loc43 at #loc41))
#loc68 = loc(callsite(#loc44 at #loc41))
#loc69 = loc(callsite(#loc40 at #loc49))
#loc70 = loc(callsite(#loc42 at #loc49))
#loc71 = loc(callsite(#loc43 at #loc49))
#loc72 = loc(callsite(#loc44 at #loc49))
#loc73 = loc(callsite(#loc40 at #loc54))
#loc74 = loc(callsite(#loc42 at #loc54))
#loc75 = loc(callsite(#loc43 at #loc54))
#loc76 = loc(callsite(#loc44 at #loc54))
#loc77 = loc(fused[#loc56, #loc57])
