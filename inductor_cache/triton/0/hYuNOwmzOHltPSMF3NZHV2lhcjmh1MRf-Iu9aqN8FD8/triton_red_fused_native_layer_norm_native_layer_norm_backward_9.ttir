#loc = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0)
#loc1 = loc(unknown)
#loc38 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":45:41)
#loc97 = loc(callsite(#loc1 at #loc38))
module {
  tt.func public @triton_red_fused_native_layer_norm_native_layer_norm_backward_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64x8xf32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c96_i32 = arith.constant 96 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.010416667> : tensor<64x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<96> : tensor<64x1xi32> loc(#loc1)
    %cst_3 = arith.constant dense<9.99999997E-7> : tensor<64x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<9.600000e+01> : tensor<64x1xf32> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x8xf32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<64x8xf32> loc(#loc1)
    %cst_7 = arith.constant dense<24576> : tensor<64x1xi32> loc(#loc1)
    %cst_8 = arith.constant dense<256> : tensor<1x8xi32> loc(#loc1)
    %cst_9 = arith.constant dense<96> : tensor<1x8xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_10 = arith.constant dense<256> : tensor<64x1xi32> loc(#loc1)
    %cst_11 = arith.constant dense<1024> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_11 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc9)
    %9 = arith.remsi %5, %cst_10 : tensor<64x1xi32> loc(#loc10)
    %10 = arith.divsi %5, %cst_10 : tensor<64x1xi32> loc(#loc11)
    %11 = tt.broadcast %9 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc12)
    %12 = arith.muli %10, %cst_7 : tensor<64x1xi32> loc(#loc13)
    %13 = tt.broadcast %12 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc14)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc15)
    %15 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x8xi1> loc(#loc16)
    %16:3 = scf.for %arg8 = %c0_i32 to %c96_i32 step %c8_i32 iter_args(%arg9 = %cst_6, %arg10 = %cst_6, %arg11 = %cst_6) -> (tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32>)  : i32 {
      %42 = tt.splat %arg8 : i32 -> tensor<1x8xi32> loc(#loc18)
      %43 = arith.addi %42, %8 : tensor<1x8xi32> loc(#loc18)
      %44 = arith.cmpi slt, %43, %cst_9 : tensor<1x8xi32> loc(#loc19)
      %45 = arith.muli %43, %cst_8 : tensor<1x8xi32> loc(#loc20)
      %46 = tt.broadcast %45 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc12)
      %47 = arith.addi %11, %46 : tensor<64x8xi32> loc(#loc12)
      %48 = arith.addi %47, %13 : tensor<64x8xi32> loc(#loc14)
      %49 = tt.addptr %14, %48 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc15)
      %50 = tt.broadcast %44 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc16)
      %51 = arith.andi %50, %15 : tensor<64x8xi1> loc(#loc16)
      %52 = tt.load %49, %51, %cst_6 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f32>> loc(#loc21)
      %53 = arith.cmpi eq, %arg8, %c0_i32 : i32 loc(#loc22)
      %54:3 = scf.if %53 -> (tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32>) {
        scf.yield %cst_6, %52, %cst_0 : tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32> loc(#loc88)
      } else {
        %58 = arith.subf %52, %arg9 : tensor<64x8xf32> loc(#loc89)
        %59 = arith.addf %arg11, %cst_0 : tensor<64x8xf32> loc(#loc90)
        %60 = arith.divf %58, %59 : tensor<64x8xf32> loc(#loc91)
        %61 = arith.addf %arg9, %60 : tensor<64x8xf32> loc(#loc92)
        %62 = arith.subf %52, %61 : tensor<64x8xf32> loc(#loc93)
        %63 = arith.mulf %58, %62 : tensor<64x8xf32> loc(#loc94)
        %64 = arith.addf %arg10, %63 : tensor<64x8xf32> loc(#loc95)
        scf.yield %64, %61, %59 : tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32> loc(#loc95)
      } loc(#loc87)
      %55 = arith.select %51, %54#1, %arg9 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc33)
      %56 = arith.select %51, %54#0, %arg10 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc34)
      %57 = arith.select %51, %54#2, %arg11 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc35)
      scf.yield %55, %56, %57 : tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32> loc(#loc36)
    } loc(#loc17)
    %17:3 = "tt.reduce"(%16#0, %16#1, %16#2) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc38)), %arg9: f32 loc(callsite(#loc1 at #loc38)), %arg10: f32 loc(callsite(#loc1 at #loc38)), %arg11: f32 loc(callsite(#loc1 at #loc38)), %arg12: f32 loc(callsite(#loc1 at #loc38)), %arg13: f32 loc(callsite(#loc1 at #loc38))):
      %42 = arith.subf %arg11, %arg8 : f32 loc(#loc110)
      %43 = arith.addf %arg10, %arg13 : f32 loc(#loc111)
      %44 = arith.cmpf oeq, %43, %cst : f32 loc(#loc112)
      %45 = arith.divf %arg13, %43 : f32 loc(#loc113)
      %46 = arith.select %44, %cst, %45 : f32 loc(#loc114)
      %47 = arith.mulf %42, %46 : f32 loc(#loc115)
      %48 = arith.addf %arg8, %47 : f32 loc(#loc116)
      %49 = arith.addf %arg9, %arg12 : f32 loc(#loc117)
      %50 = arith.mulf %42, %42 : f32 loc(#loc118)
      %51 = arith.mulf %50, %arg10 : f32 loc(#loc119)
      %52 = arith.mulf %51, %46 : f32 loc(#loc120)
      %53 = arith.addf %49, %52 : f32 loc(#loc121)
      tt.reduce.return %48, %53, %43 : f32, f32, f32 loc(#loc96)
    }) : (tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32>) -> (tensor<64xf32>, tensor<64xf32>, tensor<64xf32>) loc(#loc96)
    %18 = tt.expand_dims %17#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc51)
    %19 = tt.expand_dims %17#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc52)
    %20 = tt.broadcast %9 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc53)
    %21 = arith.muli %10, %cst_7 : tensor<64x1xi32> loc(#loc54)
    %22 = tt.broadcast %21 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc55)
    %23 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc56)
    %24 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x8xi1> loc(#loc57)
    %25 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc58)
    %26 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc59)
    %27 = tt.broadcast %18 : tensor<64x1xf32> -> tensor<64x8xf32> loc(#loc60)
    %28 = arith.divf %19, %cst_4 : tensor<64x1xf32> loc(#loc61)
    %29 = arith.addf %28, %cst_3 : tensor<64x1xf32> loc(#loc62)
    %30 = tt.extern_elementwise %29 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc63)
    %31 = tt.broadcast %30 : tensor<64x1xf32> -> tensor<64x8xf32> loc(#loc64)
    %32 = arith.muli %5, %cst_2 : tensor<64x1xi32> loc(#loc65)
    %33 = tt.broadcast %32 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc66)
    %34 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc67)
    %35 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc68)
    scf.for %arg8 = %c0_i32 to %c96_i32 step %c8_i32  : i32 {
      %42 = tt.splat %arg8 : i32 -> tensor<1x8xi32> loc(#loc70)
      %43 = arith.addi %42, %8 : tensor<1x8xi32> loc(#loc70)
      %44 = arith.cmpi slt, %43, %cst_9 : tensor<1x8xi32> loc(#loc71)
      %45 = arith.muli %43, %cst_8 : tensor<1x8xi32> loc(#loc72)
      %46 = tt.broadcast %45 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc53)
      %47 = arith.addi %20, %46 : tensor<64x8xi32> loc(#loc53)
      %48 = arith.addi %47, %22 : tensor<64x8xi32> loc(#loc55)
      %49 = tt.addptr %23, %48 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc56)
      %50 = tt.broadcast %44 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc57)
      %51 = arith.andi %50, %24 : tensor<64x8xi1> loc(#loc57)
      %52 = tt.load %49, %51, %cst_6 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<f32>> loc(#loc73)
      %53 = tt.addptr %25, %43 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc58)
      %54 = tt.load %53, %44, %cst_5 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc74)
      %55 = tt.addptr %26, %43 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc59)
      %56 = tt.load %55, %44, %cst_5 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc75)
      %57 = arith.subf %52, %27 : tensor<64x8xf32> loc(#loc60)
      %58 = arith.mulf %57, %31 : tensor<64x8xf32> loc(#loc64)
      %59 = tt.broadcast %54 : tensor<1x8xf32> -> tensor<64x8xf32> loc(#loc76)
      %60 = arith.mulf %58, %59 : tensor<64x8xf32> loc(#loc76)
      %61 = tt.broadcast %56 : tensor<1x8xf32> -> tensor<64x8xf32> loc(#loc77)
      %62 = arith.addf %60, %61 : tensor<64x8xf32> loc(#loc77)
      %63 = tt.broadcast %43 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc66)
      %64 = arith.addi %63, %33 : tensor<64x8xi32> loc(#loc66)
      %65 = tt.addptr %34, %64 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc67)
      tt.store %65, %58, %51 : tensor<64x8x!tt.ptr<f32>> loc(#loc78)
      %66 = tt.addptr %35, %64 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc68)
      tt.store %66, %62, %51 : tensor<64x8x!tt.ptr<f32>> loc(#loc79)
    } loc(#loc69)
    %36 = arith.divf %19, %cst_4 : tensor<64x1xf32> loc(#loc80)
    %37 = arith.addf %36, %cst_3 : tensor<64x1xf32> loc(#loc81)
    %38 = tt.extern_elementwise %37 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc82)
    %39 = arith.mulf %38, %cst_1 : tensor<64x1xf32> loc(#loc83)
    %40 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc84)
    %41 = tt.addptr %40, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc84)
    tt.store %41, %39, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc85)
    tt.return loc(#loc86)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":22:28)
#loc3 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":22:33)
#loc4 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":23:36)
#loc5 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":23:44)
#loc6 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":23:23)
#loc7 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":24:21)
#loc8 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":25:25)
#loc9 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":25:33)
#loc10 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":26:19)
#loc11 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":27:19)
#loc12 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":36:39)
#loc13 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":36:54)
#loc14 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":36:48)
#loc15 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":36:34)
#loc16 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":36:67)
#loc17 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":32:36)
#loc18 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":33:27)
#loc19 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":34:25)
#loc20 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":36:43)
#loc21 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":36:59)
#loc22 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":39:62)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc24 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":39:51)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc33 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":41:60)
#loc34 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":42:56)
#loc35 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":43:64)
#loc36 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":43:8)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc51 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":47:20)
#loc52 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":48:20)
#loc53 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":54:39)
#loc54 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":54:54)
#loc55 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":54:48)
#loc56 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":54:34)
#loc57 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":54:67)
#loc58 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":55:35)
#loc59 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":56:35)
#loc60 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":57:22)
#loc61 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":59:22)
#loc62 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":61:23)
#loc63 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":62:32)
#loc64 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":63:23)
#loc65 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":66:37)
#loc66 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":66:34)
#loc67 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":66:29)
#loc68 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":67:29)
#loc69 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":50:36)
#loc70 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":51:27)
#loc71 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":52:25)
#loc72 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":54:43)
#loc73 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":54:59)
#loc74 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":55:40)
#loc75 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":56:40)
#loc76 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":64:24)
#loc77 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":65:24)
#loc78 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":66:49)
#loc79 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":67:49)
#loc80 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":69:19)
#loc81 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":71:20)
#loc82 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":72:28)
#loc83 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":74:20)
#loc84 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":75:25)
#loc85 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":75:37)
#loc86 = loc("inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py":75:4)
#loc87 = loc(callsite(#loc23 at #loc24))
#loc88 = loc(callsite(#loc25 at #loc24))
#loc89 = loc(callsite(#loc26 at #loc24))
#loc90 = loc(callsite(#loc27 at #loc24))
#loc91 = loc(callsite(#loc28 at #loc24))
#loc92 = loc(callsite(#loc29 at #loc24))
#loc93 = loc(callsite(#loc30 at #loc24))
#loc94 = loc(callsite(#loc31 at #loc24))
#loc95 = loc(callsite(#loc32 at #loc24))
#loc96 = loc(callsite(#loc37 at #loc38))
#loc98 = loc(callsite(#loc39 at #loc37))
#loc99 = loc(callsite(#loc40 at #loc37))
#loc100 = loc(callsite(#loc41 at #loc37))
#loc101 = loc(callsite(#loc42 at #loc37))
#loc102 = loc(callsite(#loc43 at #loc37))
#loc103 = loc(callsite(#loc44 at #loc37))
#loc104 = loc(callsite(#loc45 at #loc37))
#loc105 = loc(callsite(#loc46 at #loc37))
#loc106 = loc(callsite(#loc47 at #loc37))
#loc107 = loc(callsite(#loc48 at #loc37))
#loc108 = loc(callsite(#loc49 at #loc37))
#loc109 = loc(callsite(#loc50 at #loc37))
#loc110 = loc(callsite(#loc98 at #loc38))
#loc111 = loc(callsite(#loc99 at #loc38))
#loc112 = loc(callsite(#loc100 at #loc38))
#loc113 = loc(callsite(#loc101 at #loc38))
#loc114 = loc(callsite(#loc102 at #loc38))
#loc115 = loc(callsite(#loc103 at #loc38))
#loc116 = loc(callsite(#loc104 at #loc38))
#loc117 = loc(callsite(#loc105 at #loc38))
#loc118 = loc(callsite(#loc106 at #loc38))
#loc119 = loc(callsite(#loc107 at #loc38))
#loc120 = loc(callsite(#loc108 at #loc38))
#loc121 = loc(callsite(#loc109 at #loc38))
