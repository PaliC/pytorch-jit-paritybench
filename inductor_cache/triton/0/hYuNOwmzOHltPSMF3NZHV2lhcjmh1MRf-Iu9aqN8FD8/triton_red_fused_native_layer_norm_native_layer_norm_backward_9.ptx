//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_native_layer_norm_native_layer_norm_backward_9 // -- Begin function triton_red_fused_native_layer_norm_native_layer_norm_backward_9
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_native_layer_norm_native_layer_norm_backward_9
.visible .entry triton_red_fused_native_layer_norm_native_layer_norm_backward_9(
	.param .u64 .ptr .global .align 1 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_5,
	.param .u32 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_6,
	.param .u32 triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<85>;
	.reg .b32 	%r<271>;
	.reg .f32 	%f<219>;
	.reg .b64 	%rd<46>;
	.loc	1 19 0                          // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:19:0

// %bb.0:                               // %.peel.next
	ld.param.u64 	%rd18, [triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_5];
	ld.param.u64 	%rd17, [triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_4];
	ld.param.u64 	%rd16, [triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_3];
	ld.param.u64 	%rd15, [triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_2];
	ld.param.u64 	%rd14, [triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_1];
	ld.param.u64 	%rd13, [triton_red_fused_native_layer_norm_native_layer_norm_backward_9_param_0];
$L__tmp0:
	.loc	1 22 28                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:22:28
	// begin inline asm
	mov.u32 %r21, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:22:33
	shl.b32 	%r2, %r21, 6;
	.loc	1 23 44                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:23:44
	mov.u32 	%r3, %tid.x;
	shl.b32 	%r4, %r3, 2;
	and.b32  	%r5, %r4, 60;
	bfe.u32 	%r6, %r3, 1, 6;
	.loc	1 23 23                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:23:23
	or.b32  	%r7, %r2, %r5;
	.loc	1 24 21                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:24:21
	setp.lt.s32 	%p5, %r7, 1024;
	.loc	1 25 33                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:25:33
	bfe.u32 	%r30, %r3, 4, 3;
	.loc	1 27 19                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:27:19
	shr.s32 	%r32, %r7, 31;
	shr.u32 	%r33, %r32, 24;
	add.s32 	%r34, %r7, %r33;
	shr.s32 	%r35, %r34, 8;
	.loc	1 26 19                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:26:19
	and.b32  	%r36, %r34, -256;
	sub.s32 	%r37, %r7, %r36;
	mad.lo.s32 	%r38, %r35, 24576, %r37;
	.loc	1 32 36                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:32:36
	cvt.u64.u32 	%rd1, %r30;
	.loc	1 36 43                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:43
	shl.b32 	%r39, %r30, 8;
	.loc	1 36 48                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:48
	add.s32 	%r40, %r38, %r39;
	.loc	1 36 34                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:34
	mul.wide.s32 	%rd21, %r40, 4;
	add.s64 	%rd19, %rd13, %rd21;
	mov.b32 	%r26, 0;
	.loc	1 36 59                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:59
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd19 + 0 ];
	@!%p5 mov.u32 %r22, %r26;
	@!%p5 mov.u32 %r23, %r26;
	@!%p5 mov.u32 %r24, %r26;
	@!%p5 mov.u32 %r25, %r26;
	// end inline asm
	.loc	1 43 64                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:43:64
	selp.f32 	%f207, 0f3F800000, 0f00000000, %p5;
	.loc	1 36 59                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:59
	mov.b32 	%f43, %r22;
	mov.b32 	%f44, %r23;
	mov.b32 	%f45, %r24;
	mov.b32 	%f46, %r25;
	.loc	1 41 60                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:41:60
	selp.f32 	%f218, %f46, 0f00000000, %p5;
	selp.f32 	%f217, %f45, 0f00000000, %p5;
	selp.f32 	%f216, %f44, 0f00000000, %p5;
	selp.f32 	%f215, %f43, 0f00000000, %p5;
	.loc	1 32 36                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:32:36
	mad.lo.s32 	%r41, %r35, 24320, %r7;
	add.s32 	%r270, %r41, %r39;
	add.s32 	%r269, %r270, 2048;
	mov.f32 	%f211, 0f00000000;
	mov.u64 	%rd42, 0;
	mov.f32 	%f208, %f207;
	mov.f32 	%f209, %f207;
	mov.f32 	%f210, %f207;
	mov.f32 	%f212, %f211;
	mov.f32 	%f213, %f211;
	mov.f32 	%f214, %f211;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 36 34                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:34
	mul.wide.s32 	%rd23, %r269, 4;
	add.s64 	%rd22, %rd13, %rd23;
	.loc	1 36 59                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:59
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p5 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd22 + 0 ];
	@!%p5 mov.u32 %r42, %r26;
	@!%p5 mov.u32 %r43, %r26;
	@!%p5 mov.u32 %r44, %r26;
	@!%p5 mov.u32 %r45, %r26;
	// end inline asm
$L__tmp1:
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f47, %f207, 0f3F800000;
	add.f32 	%f48, %f208, 0f3F800000;
	add.f32 	%f49, %f209, 0f3F800000;
	add.f32 	%f50, %f210, 0f3F800000;
$L__tmp2:
	.loc	1 36 59                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:36:59
	mov.b32 	%f51, %r42;
	mov.b32 	%f52, %r43;
	mov.b32 	%f53, %r44;
	mov.b32 	%f54, %r45;
$L__tmp3:
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f55, %f54, %f218;
	sub.f32 	%f56, %f53, %f217;
	sub.f32 	%f57, %f52, %f216;
	sub.f32 	%f58, %f51, %f215;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r51, %f58;
	mov.b32 	%r52, %f47;
	// begin inline asm
	div.full.f32 %r50, %r51, %r52;
	// end inline asm
	mov.b32 	%f59, %r50;
	mov.b32 	%r54, %f57;
	mov.b32 	%r55, %f48;
	// begin inline asm
	div.full.f32 %r53, %r54, %r55;
	// end inline asm
	mov.b32 	%f60, %r53;
	mov.b32 	%r57, %f56;
	mov.b32 	%r58, %f49;
	// begin inline asm
	div.full.f32 %r56, %r57, %r58;
	// end inline asm
	mov.b32 	%f61, %r56;
	mov.b32 	%r60, %f55;
	mov.b32 	%r61, %f50;
	// begin inline asm
	div.full.f32 %r59, %r60, %r61;
	// end inline asm
	mov.b32 	%f62, %r59;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f63, %f215, %f59;
	add.f32 	%f64, %f216, %f60;
	add.f32 	%f65, %f217, %f61;
	add.f32 	%f66, %f218, %f62;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f67, %f54, %f66;
	sub.f32 	%f68, %f53, %f65;
	sub.f32 	%f69, %f52, %f64;
	sub.f32 	%f70, %f51, %f63;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f71, %f58, %f70, %f211;
	fma.rn.f32 	%f72, %f57, %f69, %f212;
	fma.rn.f32 	%f73, %f56, %f68, %f213;
	fma.rn.f32 	%f74, %f55, %f67, %f214;
$L__tmp4:
	.loc	1 41 60                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:41:60
	selp.f32 	%f218, %f66, %f218, %p5;
	selp.f32 	%f217, %f65, %f217, %p5;
	selp.f32 	%f216, %f64, %f216, %p5;
	selp.f32 	%f215, %f63, %f215, %p5;
	.loc	1 42 56                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:42:56
	selp.f32 	%f214, %f74, %f214, %p5;
	selp.f32 	%f213, %f73, %f213, %p5;
	selp.f32 	%f212, %f72, %f212, %p5;
	selp.f32 	%f211, %f71, %f211, %p5;
	.loc	1 43 64                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:43:64
	selp.f32 	%f207, %f47, %f207, %p5;
	selp.f32 	%f208, %f48, %f208, %p5;
	selp.f32 	%f209, %f49, %f209, %p5;
	selp.f32 	%f210, %f50, %f210, %p5;
	.loc	1 32 36                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:32:36
	add.s64 	%rd42, %rd42, 8;
	add.s32 	%r269, %r269, 2048;
	setp.lt.u64 	%p15, %rd42, 88;
	@%p15 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
	.loc	1 0 36                          // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:0:36
	cvt.u32.u64 	%r151, %rd1;
	.loc	1 23 44                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:23:44
	and.b32  	%r152, %r3, 16;
	and.b32  	%r153, %r4, 4;
	and.b32  	%r12, %r3, 63;
	.loc	1 23 23                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:23:23
	or.b32  	%r13, %r2, %r6;
$L__tmp5:
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r154, %f215;
	shfl.sync.bfly.b32	%r155, %r154, 16, 31, -1;
	mov.b32 	%f75, %r155;
	mov.b32 	%r156, %f211;
	shfl.sync.bfly.b32	%r157, %r156, 16, 31, -1;
	mov.b32 	%f76, %r157;
	mov.b32 	%r158, %f207;
	shfl.sync.bfly.b32	%r63, %r158, 16, 31, -1;
	mov.b32 	%f77, %r63;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f78, %f75, %f215;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f79, %f207, %f77;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p41, %f79, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r64, %f79;
	// begin inline asm
	div.full.f32 %r62, %r63, %r64;
	// end inline asm
	mov.b32 	%f80, %r62;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f81, 0f00000000, %f80, %p41;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f82, %f78, %f81, %f215;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f83, %f211, %f76;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f84, %f78, %f78;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f85, %f207, %f84;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f86, %f85, %f81, %f83;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r159, %f216;
	shfl.sync.bfly.b32	%r160, %r159, 16, 31, -1;
	mov.b32 	%f87, %r160;
	mov.b32 	%r161, %f212;
	shfl.sync.bfly.b32	%r162, %r161, 16, 31, -1;
	mov.b32 	%f88, %r162;
	mov.b32 	%r163, %f208;
	shfl.sync.bfly.b32	%r66, %r163, 16, 31, -1;
	mov.b32 	%f89, %r66;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f90, %f87, %f216;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f91, %f208, %f89;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p42, %f91, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r67, %f91;
	// begin inline asm
	div.full.f32 %r65, %r66, %r67;
	// end inline asm
	mov.b32 	%f92, %r65;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f93, 0f00000000, %f92, %p42;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f94, %f90, %f93, %f216;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f95, %f212, %f88;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f96, %f90, %f90;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f97, %f208, %f96;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f98, %f97, %f93, %f95;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r164, %f217;
	shfl.sync.bfly.b32	%r165, %r164, 16, 31, -1;
	mov.b32 	%f99, %r165;
	mov.b32 	%r166, %f213;
	shfl.sync.bfly.b32	%r167, %r166, 16, 31, -1;
	mov.b32 	%f100, %r167;
	mov.b32 	%r168, %f209;
	shfl.sync.bfly.b32	%r69, %r168, 16, 31, -1;
	mov.b32 	%f101, %r69;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f102, %f99, %f217;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f103, %f209, %f101;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p43, %f103, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r70, %f103;
	// begin inline asm
	div.full.f32 %r68, %r69, %r70;
	// end inline asm
	mov.b32 	%f104, %r68;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f105, 0f00000000, %f104, %p43;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f106, %f102, %f105, %f217;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f107, %f213, %f100;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f108, %f102, %f102;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f109, %f209, %f108;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f110, %f109, %f105, %f107;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r169, %f218;
	shfl.sync.bfly.b32	%r170, %r169, 16, 31, -1;
	mov.b32 	%f111, %r170;
	mov.b32 	%r171, %f214;
	shfl.sync.bfly.b32	%r172, %r171, 16, 31, -1;
	mov.b32 	%f112, %r172;
	mov.b32 	%r173, %f210;
	shfl.sync.bfly.b32	%r72, %r173, 16, 31, -1;
	mov.b32 	%f113, %r72;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f114, %f111, %f218;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f115, %f210, %f113;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p44, %f115, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r73, %f115;
	// begin inline asm
	div.full.f32 %r71, %r72, %r73;
	// end inline asm
	mov.b32 	%f116, %r71;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f117, 0f00000000, %f116, %p44;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f118, %f114, %f117, %f218;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f119, %f214, %f112;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f120, %f114, %f114;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f121, %f210, %f120;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f122, %f121, %f117, %f119;
	.loc	2 204 46                        // triton_helpers.py:204:46
	setp.eq.s32 	%p16, %r152, 0;
	shr.u32 	%r174, %r3, 3;
	and.b32  	%r175, %r174, 12;
	shl.b32 	%r176, %r5, 4;
	or.b32  	%r177, %r176, %r175;
	mov.u32 	%r178, global_smem;
	add.s32 	%r74, %r178, %r177;
	mov.b32 	%r75, %f82;
	// begin inline asm
	@%p16 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r179, %r178, 1024;
	add.s32 	%r76, %r179, %r177;
	mov.b32 	%r77, %f86;
	// begin inline asm
	@%p16 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	add.s32 	%r180, %r178, 2048;
	add.s32 	%r78, %r180, %r177;
	// begin inline asm
	@%p16 st.shared.b32 [ %r78 + 0 ], %r64;
	// end inline asm
	add.s32 	%r80, %r74, 16;
	mov.b32 	%r81, %f94;
	// begin inline asm
	@%p16 st.shared.b32 [ %r80 + 0 ], %r81;
	// end inline asm
	add.s32 	%r82, %r76, 16;
	mov.b32 	%r83, %f98;
	// begin inline asm
	@%p16 st.shared.b32 [ %r82 + 0 ], %r83;
	// end inline asm
	add.s32 	%r84, %r78, 16;
	// begin inline asm
	@%p16 st.shared.b32 [ %r84 + 0 ], %r67;
	// end inline asm
	add.s32 	%r86, %r74, 32;
	mov.b32 	%r87, %f106;
	// begin inline asm
	@%p16 st.shared.b32 [ %r86 + 0 ], %r87;
	// end inline asm
	add.s32 	%r88, %r76, 32;
	mov.b32 	%r89, %f110;
	// begin inline asm
	@%p16 st.shared.b32 [ %r88 + 0 ], %r89;
	// end inline asm
	add.s32 	%r90, %r78, 32;
	// begin inline asm
	@%p16 st.shared.b32 [ %r90 + 0 ], %r70;
	// end inline asm
	add.s32 	%r92, %r74, 48;
	mov.b32 	%r93, %f118;
	// begin inline asm
	@%p16 st.shared.b32 [ %r92 + 0 ], %r93;
	// end inline asm
	add.s32 	%r94, %r76, 48;
	mov.b32 	%r95, %f122;
	// begin inline asm
	@%p16 st.shared.b32 [ %r94 + 0 ], %r95;
	// end inline asm
	add.s32 	%r96, %r78, 48;
	// begin inline asm
	@%p16 st.shared.b32 [ %r96 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p28, %r3, 256;
	add.s32 	%r99, %r178, %r4;
	// begin inline asm
	@%p28 ld.shared.b32 %r98, [ %r99 + 0 ];
	// end inline asm
	mov.b32 	%f123, %r98;
	add.s32 	%r101, %r179, %r4;
	// begin inline asm
	@%p28 ld.shared.b32 %r100, [ %r101 + 0 ];
	// end inline asm
	mov.b32 	%f124, %r100;
	add.s32 	%r103, %r180, %r4;
	// begin inline asm
	@%p28 ld.shared.b32 %r102, [ %r103 + 0 ];
	// end inline asm
	mov.b32 	%f125, %r102;
	shfl.sync.bfly.b32	%r182, %r98, 2, 31, -1;
	mov.b32 	%f126, %r182;
	shfl.sync.bfly.b32	%r183, %r100, 2, 31, -1;
	mov.b32 	%f127, %r183;
	shfl.sync.bfly.b32	%r105, %r102, 2, 31, -1;
	mov.b32 	%f128, %r105;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f129, %f126, %f123;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f130, %f125, %f128;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p45, %f130, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r106, %f130;
	// begin inline asm
	div.full.f32 %r104, %r105, %r106;
	// end inline asm
	mov.b32 	%f131, %r104;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f132, 0f00000000, %f131, %p45;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f133, %f129, %f132, %f123;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f134, %f124, %f127;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f135, %f129, %f129;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f136, %f135, %f125;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f137, %f136, %f132, %f134;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r184, %f133;
	shfl.sync.bfly.b32	%r185, %r184, 1, 31, -1;
	mov.b32 	%f138, %r185;
	mov.b32 	%r186, %f137;
	shfl.sync.bfly.b32	%r187, %r186, 1, 31, -1;
	mov.b32 	%f139, %r187;
	shfl.sync.bfly.b32	%r108, %r106, 1, 31, -1;
	mov.b32 	%f140, %r108;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f141, %f138, %f133;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f142, %f130, %f140;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p46, %f142, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r109, %f142;
	// begin inline asm
	div.full.f32 %r107, %r108, %r109;
	// end inline asm
	mov.b32 	%f143, %r107;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f144, 0f00000000, %f143, %p46;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f145, %f141, %f144, %f133;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f146, %f137, %f139;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f147, %f141, %f141;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f148, %f130, %f147;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f149, %f144, %f148, %f146;
	.loc	2 204 46                        // triton_helpers.py:204:46
	and.b32  	%r188, %r3, 3;
	setp.eq.s32 	%p47, %r188, 0;
	and.pred  	%p31, %p28, %p47;
	mov.b32 	%r111, %f145;
	// begin inline asm
	@%p31 st.shared.b32 [ %r99 + 0 ], %r111;
	// end inline asm
	mov.b32 	%r113, %f149;
	// begin inline asm
	@%p31 st.shared.b32 [ %r101 + 0 ], %r113;
	// end inline asm
	// begin inline asm
	@%p31 st.shared.b32 [ %r103 + 0 ], %r109;
	// end inline asm
	add.s32 	%r117, %r99, 512;
	// begin inline asm
	@%p28 ld.shared.b32 %r116, [ %r117 + 0 ];
	// end inline asm
	mov.b32 	%f150, %r116;
	add.s32 	%r119, %r101, 512;
	// begin inline asm
	@%p28 ld.shared.b32 %r118, [ %r119 + 0 ];
	// end inline asm
	mov.b32 	%f151, %r118;
	add.s32 	%r121, %r103, 512;
	// begin inline asm
	@%p28 ld.shared.b32 %r120, [ %r121 + 0 ];
	// end inline asm
	mov.b32 	%f152, %r120;
	shfl.sync.bfly.b32	%r189, %r116, 2, 31, -1;
	mov.b32 	%f153, %r189;
	shfl.sync.bfly.b32	%r190, %r118, 2, 31, -1;
	mov.b32 	%f154, %r190;
	shfl.sync.bfly.b32	%r123, %r120, 2, 31, -1;
	mov.b32 	%f155, %r123;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f156, %f153, %f150;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f157, %f152, %f155;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p48, %f157, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r124, %f157;
	// begin inline asm
	div.full.f32 %r122, %r123, %r124;
	// end inline asm
	mov.b32 	%f158, %r122;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f159, 0f00000000, %f158, %p48;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f160, %f156, %f159, %f150;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f161, %f151, %f154;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f162, %f156, %f156;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f163, %f162, %f152;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f164, %f163, %f159, %f161;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r191, %f160;
	shfl.sync.bfly.b32	%r192, %r191, 1, 31, -1;
	mov.b32 	%f165, %r192;
	mov.b32 	%r193, %f164;
	shfl.sync.bfly.b32	%r194, %r193, 1, 31, -1;
	mov.b32 	%f166, %r194;
	shfl.sync.bfly.b32	%r126, %r124, 1, 31, -1;
	mov.b32 	%f167, %r126;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f168, %f165, %f160;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f169, %f157, %f167;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p49, %f169, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r127, %f169;
	// begin inline asm
	div.full.f32 %r125, %r126, %r127;
	// end inline asm
	mov.b32 	%f170, %r125;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f171, 0f00000000, %f170, %p49;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f172, %f168, %f171, %f160;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f173, %f164, %f166;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f174, %f168, %f168;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f175, %f157, %f174;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f176, %f171, %f175, %f173;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r129, %f172;
	// begin inline asm
	@%p31 st.shared.b32 [ %r117 + 0 ], %r129;
	// end inline asm
	mov.b32 	%r131, %f176;
	// begin inline asm
	@%p31 st.shared.b32 [ %r119 + 0 ], %r131;
	// end inline asm
	// begin inline asm
	@%p31 st.shared.b32 [ %r121 + 0 ], %r127;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r195, %r178, %r176;
	ld.shared.f32 	%f30, [%r195];
	ld.shared.f32 	%f31, [%r195+16];
	ld.shared.f32 	%f32, [%r195+32];
	ld.shared.f32 	%f33, [%r195+48];
	add.s32 	%r196, %r179, %r176;
$L__tmp6:
	.loc	1 74 20                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:74:20
	ld.shared.u32 	%r135, [%r196];
	ld.shared.u32 	%r136, [%r196+16];
	ld.shared.u32 	%r137, [%r196+32];
	ld.shared.u32 	%r138, [%r196+48];
	bar.sync 	0;
	mad.lo.s32 	%r134, %r5, -12, %r195;
	mov.pred 	%p55, -1;
	// begin inline asm
	@%p55 st.shared.v4.b32 [ %r134 + 0 ], { %r135, %r136, %r137, %r138 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r197, %r12, 2;
	add.s32 	%r198, %r178, %r197;
	ld.shared.f32 	%f34, [%r198];
	mov.b32 	%r141, 1119879168;
	.loc	1 59 22                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:59:22
	// begin inline asm
	div.full.f32 %r139, %r135, %r141;
	// end inline asm
	mov.b32 	%f177, %r139;
	// begin inline asm
	div.full.f32 %r142, %r136, %r141;
	// end inline asm
	mov.b32 	%f178, %r142;
	// begin inline asm
	div.full.f32 %r145, %r137, %r141;
	// end inline asm
	mov.b32 	%f179, %r145;
	// begin inline asm
	div.full.f32 %r148, %r138, %r141;
	// end inline asm
	mov.b32 	%f180, %r148;
	.loc	1 61 23                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:61:23
	add.f32 	%f181, %f177, 0f358637BD;
	add.f32 	%f182, %f178, 0f358637BD;
	add.f32 	%f183, %f179, 0f358637BD;
	add.f32 	%f184, %f180, 0f358637BD;
	.loc	1 62 32                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:62:32
	rsqrt.approx.ftz.f32 	%f35, %f181;
	rsqrt.approx.ftz.f32 	%f36, %f182;
	rsqrt.approx.ftz.f32 	%f37, %f183;
	rsqrt.approx.ftz.f32 	%f38, %f184;
	shl.b32 	%r199, %r3, 5;
	and.b32  	%r200, %r199, 480;
	or.b32  	%r201, %r200, %r151;
	and.b32  	%r202, %r4, 508;
	shl.b32 	%r203, %r201, 2;
	shl.b32 	%r204, %r200, 1;
	add.s32 	%r205, %r178, %r204;
	add.s32 	%r237, %r205, %r203;
	add.s32 	%r239, %r237, 48;
	add.s32 	%r241, %r237, 96;
	add.s32 	%r243, %r237, 144;
	shl.b32 	%r206, %r4, 1;
	and.b32  	%r207, %r206, 1008;
	add.s32 	%r208, %r178, %r207;
	shl.b32 	%r209, %r202, 2;
	add.s32 	%r18, %r208, %r209;
	.loc	1 50 36                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:50:36
	mul.lo.s32 	%r210, %r6, 96;
	mad.lo.s32 	%r211, %r21, 6144, %r210;
	or.b32  	%r212, %r211, %r153;
	cvt.u64.u32 	%rd4, %r212;
	shl.b64 	%rd25, %rd1, 2;
	add.s64 	%rd44, %rd15, %rd25;
	add.s64 	%rd43, %rd14, %rd25;
	mov.u64 	%rd45, -8;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	.loc	1 24 21                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:24:21
	setp.lt.s32 	%p75, %r13, 1024;
	.loc	1 54 34                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:54:34
	mul.wide.s32 	%rd37, %r270, 4;
	add.s64 	%rd26, %rd13, %rd37;
	.loc	1 54 59                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:54:59
	// begin inline asm
	mov.u32 %r213, 0x0;
	mov.u32 %r214, 0x0;
	mov.u32 %r215, 0x0;
	mov.u32 %r216, 0x0;
	@%p5 ld.global.L1::evict_first.v4.b32 { %r213, %r214, %r215, %r216 }, [ %rd26 + 0 ];
	@!%p5 mov.u32 %r213, %r26;
	@!%p5 mov.u32 %r214, %r26;
	@!%p5 mov.u32 %r215, %r26;
	@!%p5 mov.u32 %r216, %r26;
	// end inline asm
	mov.b32 	%f185, %r213;
	mov.b32 	%f186, %r214;
	mov.b32 	%f187, %r215;
	mov.b32 	%f188, %r216;
	.loc	1 55 40                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:55:40
	// begin inline asm
	mov.u32 %r221, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r221 }, [ %rd43 + 0 ];
	@!%p55 mov.u32 %r221, %r26;
	// end inline asm
	// begin inline asm
	mov.u32 %r223, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r223 }, [ %rd43 + 0 ];
	@!%p55 mov.u32 %r223, %r26;
	// end inline asm
	// begin inline asm
	mov.u32 %r225, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r225 }, [ %rd43 + 0 ];
	@!%p55 mov.u32 %r225, %r26;
	// end inline asm
	// begin inline asm
	mov.u32 %r227, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r227 }, [ %rd43 + 0 ];
	@!%p55 mov.u32 %r227, %r26;
	// end inline asm
	mov.b32 	%f189, %r227;
	.loc	1 56 40                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:56:40
	// begin inline asm
	mov.u32 %r229, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r229 }, [ %rd44 + 0 ];
	@!%p55 mov.u32 %r229, %r26;
	// end inline asm
	// begin inline asm
	mov.u32 %r231, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r231 }, [ %rd44 + 0 ];
	@!%p55 mov.u32 %r231, %r26;
	// end inline asm
	// begin inline asm
	mov.u32 %r233, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r233 }, [ %rd44 + 0 ];
	@!%p55 mov.u32 %r233, %r26;
	// end inline asm
	// begin inline asm
	mov.u32 %r235, 0x0;
	@%p55 ld.global.L1::evict_last.b32 { %r235 }, [ %rd44 + 0 ];
	@!%p55 mov.u32 %r235, %r26;
	// end inline asm
	mov.b32 	%f190, %r235;
	.loc	1 57 22                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:57:22
	sub.f32 	%f191, %f185, %f30;
	sub.f32 	%f192, %f186, %f31;
	sub.f32 	%f193, %f187, %f32;
	sub.f32 	%f194, %f188, %f33;
	.loc	1 63 23                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:63:23
	mul.f32 	%f195, %f35, %f191;
	mul.f32 	%f196, %f36, %f192;
	mul.f32 	%f197, %f37, %f193;
	mul.f32 	%f198, %f38, %f194;
	.loc	1 65 24                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:65:24
	fma.rn.f32 	%f199, %f195, %f189, %f190;
	fma.rn.f32 	%f200, %f196, %f189, %f190;
	fma.rn.f32 	%f201, %f197, %f189, %f190;
	fma.rn.f32 	%f202, %f198, %f189, %f190;
	.loc	1 66 29                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:66:29
	add.s64 	%rd38, %rd4, %rd45;
	cvt.u32.u64 	%r261, %rd38;
	add.s32 	%r262, %r261, 8;
	mul.wide.s32 	%rd39, %r262, 4;
	add.s64 	%rd35, %rd16, %rd39;
	.loc	1 66 49                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:66:49
	bar.sync 	0;
	mov.b32 	%r238, %f195;
	// begin inline asm
	@%p55 st.shared.b32 [ %r237 + 0 ], %r238;
	// end inline asm
	mov.b32 	%r240, %f196;
	// begin inline asm
	@%p55 st.shared.b32 [ %r239 + 0 ], %r240;
	// end inline asm
	mov.b32 	%r242, %f197;
	// begin inline asm
	@%p55 st.shared.b32 [ %r241 + 0 ], %r242;
	// end inline asm
	mov.b32 	%r244, %f198;
	// begin inline asm
	@%p55 st.shared.b32 [ %r243 + 0 ], %r244;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r245, %r246, %r247, %r248}, [%r18];
	// begin inline asm
	@%p75 st.global.v4.b32 [ %rd35 + 0 ], { %r245, %r246, %r247, %r248 };
	// end inline asm
	.loc	1 67 29                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:67:29
	add.s64 	%rd36, %rd17, %rd39;
	.loc	1 67 49                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:67:49
	bar.sync 	0;
	mov.b32 	%r250, %f199;
	// begin inline asm
	@%p55 st.shared.b32 [ %r237 + 0 ], %r250;
	// end inline asm
	mov.b32 	%r252, %f200;
	// begin inline asm
	@%p55 st.shared.b32 [ %r239 + 0 ], %r252;
	// end inline asm
	mov.b32 	%r254, %f201;
	// begin inline asm
	@%p55 st.shared.b32 [ %r241 + 0 ], %r254;
	// end inline asm
	mov.b32 	%r256, %f202;
	// begin inline asm
	@%p55 st.shared.b32 [ %r243 + 0 ], %r256;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.u32 	{%r257, %r258, %r259, %r260}, [%r18];
	// begin inline asm
	@%p75 st.global.v4.b32 [ %rd36 + 0 ], { %r257, %r258, %r259, %r260 };
	// end inline asm
	.loc	1 50 36                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:50:36
	add.s64 	%rd45, %rd45, 8;
	add.s64 	%rd44, %rd44, 32;
	add.s64 	%rd43, %rd43, 32;
	add.s32 	%r270, %r270, 2048;
	setp.lt.u64 	%p81, %rd45, 88;
	@%p81 bra 	$L__BB0_3;
// %bb.4:                               // %__nv_rsqrtf.exit36
	.loc	1 69 19                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:69:19
	mov.b32 	%r264, %f34;
	// begin inline asm
	div.full.f32 %r263, %r264, %r141;
	// end inline asm
	mov.b32 	%f203, %r263;
	.loc	1 71 20                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:71:20
	add.f32 	%f204, %f203, 0f358637BD;
	.loc	1 72 28                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:72:28
	rsqrt.approx.ftz.f32 	%f205, %f204;
	.loc	1 23 23                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:23:23
	or.b32  	%r267, %r2, %r12;
	.loc	1 24 21                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:24:21
	setp.lt.s32 	%p83, %r267, 1024;
	.loc	1 74 20                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:74:20
	mul.f32 	%f206, %f205, 0f3C2AAAAB;
	.loc	1 75 25                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:75:25
	mul.wide.s32 	%rd41, %r267, 4;
	add.s64 	%rd40, %rd18, %rd41;
	.loc	1 75 37                         // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:75:37
	and.b32  	%r268, %r3, 64;
	setp.eq.s32 	%p84, %r268, 0;
	mov.b32 	%r266, %f206;
	and.pred  	%p82, %p84, %p83;
	// begin inline asm
	@%p82 st.global.b32 [ %rd40 + 0 ], { %r266 };
	// end inline asm
	.loc	1 75 4                          // ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py:75:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/kd/ckdvdc3fspc5cmcwg2oghcck65neoxyvgeiwtbnt5l7jigpibrri.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 100
.b8 118
.b8 100
.b8 99
.b8 51
.b8 102
.b8 115
.b8 112
.b8 99
.b8 53
.b8 99
.b8 109
.b8 99
.b8 119
.b8 103
.b8 50
.b8 111
.b8 103
.b8 104
.b8 99
.b8 99
.b8 107
.b8 54
.b8 53
.b8 110
.b8 101
.b8 111
.b8 120
.b8 121
.b8 118
.b8 103
.b8 101
.b8 105
.b8 119
.b8 116
.b8 98
.b8 110
.b8 116
.b8 53
.b8 108
.b8 55
.b8 106
.b8 105
.b8 103
.b8 112
.b8 105
.b8 98
.b8 114
.b8 114
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 100
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 51                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 45                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
