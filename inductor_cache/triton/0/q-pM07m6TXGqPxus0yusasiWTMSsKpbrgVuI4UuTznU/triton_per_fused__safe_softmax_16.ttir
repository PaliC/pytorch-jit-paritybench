#loc = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":19:0)
#loc1 = loc(unknown)
#loc13 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":39:70)
#loc24 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":44:58)
#loc33 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":52:71)
#loc46 = loc(callsite(#loc1 at #loc13))
#loc53 = loc(callsite(#loc1 at #loc24))
#loc57 = loc(callsite(#loc1 at #loc33))
module {
  tt.func public @triton_per_fused__safe_softmax_16(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":19:0), %arg3: i32 loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":19:0)) attributes {noinline = false} {
    %c66080_i32 = arith.constant 66080 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c257_i32 = arith.constant 257 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<512xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<512xi32> loc(#loc1)
    %cst_2 = arith.constant dense<0xFF800000> : tensor<512xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<512xf32> loc(#loc1)
    %cst_4 = arith.constant dense<257> : tensor<512xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_4 : tensor<512xi32> loc(#loc4)
    %3 = arith.remsi %0, %c257_i32 : i32 loc(#loc5)
    %4 = arith.divsi %0, %c257_i32 : i32 loc(#loc6)
    %5 = arith.muli %0, %c257_i32 : i32 loc(#loc7)
    %6 = tt.splat %5 : i32 -> tensor<512xi32> loc(#loc8)
    %7 = arith.addi %1, %6 : tensor<512xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %7 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc9)
    %10 = tt.load %9, %2, %cst_3 : tensor<512x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.select %2, %10, %cst_2 : tensor<512xi1>, tensor<512xf32> loc(#loc11)
    %12 = "tt.reduce"(%11) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc13)), %arg5: f32 loc(callsite(#loc1 at #loc13))):
      %41 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc59)
      %42 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc60)
      %43 = arith.ori %41, %42 : i1 loc(#loc61)
      %44 = arith.select %43, %arg4, %arg5 : f32 loc(#loc62)
      tt.reduce.return %44 : f32 loc(#loc45)
    }) : (tensor<512xf32>) -> f32 loc(#loc45)
    %13 = arith.addf %12, %cst : f32 loc(#loc51)
    %14 = tt.splat %13 : f32 -> tensor<512xf32> loc(#loc20)
    %15 = arith.subf %10, %14 : tensor<512xf32> loc(#loc20)
    %16 = math.exp %15 : tensor<512xf32> loc(#loc21)
    %17 = arith.select %2, %16, %cst_3 : tensor<512xi1>, tensor<512xf32> loc(#loc22)
    %18 = "tt.reduce"(%17) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc24)), %arg5: f32 loc(callsite(#loc1 at #loc24))):
      %41 = arith.addf %arg4, %arg5 : f32 loc(#loc63)
      tt.reduce.return %41 : f32 loc(#loc52)
    }) : (tensor<512xf32>) -> f32 loc(#loc52)
    %19 = arith.addf %18, %cst : f32 loc(#loc55)
    %20 = arith.cmpf oeq, %10, %cst_2 : tensor<512xf32> loc(#loc27)
    %21 = arith.extui %20 : tensor<512xi1> to tensor<512xi32> loc(#loc28)
    %22 = arith.cmpi eq, %21, %cst_1 : tensor<512xi32> loc(#loc28)
    %23 = arith.extui %22 : tensor<512xi1> to tensor<512xi64> loc(#loc29)
    %24 = arith.cmpi ne, %23, %cst_0 : tensor<512xi64> loc(#loc30)
    %25 = arith.extui %24 : tensor<512xi1> to tensor<512xi32> loc(#loc31)
    %26 = arith.select %2, %25, %cst_1 : tensor<512xi1>, tensor<512xi32> loc(#loc31)
    %27 = "tt.reduce"(%26) <{axis = 0 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc1 at #loc33)), %arg5: i32 loc(callsite(#loc1 at #loc33))):
      %41 = arith.ori %arg4, %arg5 : i32 loc(#loc64)
      tt.reduce.return %41 : i32 loc(#loc56)
    }) : (tensor<512xi32>) -> i32 loc(#loc56)
    %28 = arith.cmpi eq, %27, %c0_i32 : i32 loc(#loc35)
    %29 = tt.splat %19 : f32 -> tensor<512xf32> loc(#loc36)
    %30 = arith.divf %16, %29 : tensor<512xf32> loc(#loc36)
    %31 = tt.splat %28 : i1 -> tensor<512xi1> loc(#loc37)
    %32 = arith.select %31, %cst_3, %30 : tensor<512xi1>, tensor<512xf32> loc(#loc37)
    %33 = arith.muli %3, %c257_i32 : i32 loc(#loc38)
    %34 = tt.splat %33 : i32 -> tensor<512xi32> loc(#loc39)
    %35 = arith.addi %1, %34 : tensor<512xi32> loc(#loc39)
    %36 = arith.muli %4, %c66080_i32 : i32 loc(#loc40)
    %37 = tt.splat %36 : i32 -> tensor<512xi32> loc(#loc41)
    %38 = arith.addi %35, %37 : tensor<512xi32> loc(#loc41)
    %39 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>> loc(#loc42)
    %40 = tt.addptr %39, %38 : tensor<512x!tt.ptr<f32>>, tensor<512xi32> loc(#loc42)
    tt.store %40, %32, %2 : tensor<512x!tt.ptr<f32>> loc(#loc43)
    tt.return loc(#loc44)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":24:28)
#loc3 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":27:26)
#loc4 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":29:21)
#loc5 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":34:19)
#loc6 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":35:19)
#loc7 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":36:39)
#loc8 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":36:35)
#loc9 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":36:30)
#loc10 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":36:44)
#loc11 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":38:33)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc19 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":39:44)
#loc20 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":40:18)
#loc21 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":41:23)
#loc22 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":43:33)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc26 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":44:45)
#loc27 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":46:20)
#loc28 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":47:21)
#loc29 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":48:21)
#loc30 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":49:22)
#loc31 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":51:35)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":232:29)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":227:15)
#loc35 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":53:21)
#loc36 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":54:19)
#loc37 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":56:35)
#loc38 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":57:34)
#loc39 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":57:30)
#loc40 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":57:45)
#loc41 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":57:39)
#loc42 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":57:25)
#loc43 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":57:57)
#loc44 = loc("inductor_cache/li/clikztztje644adykjs3rtqlo2wga54e2pnssislqdckiyo2drot.py":57:4)
#loc45 = loc(callsite(#loc12 at #loc13))
#loc47 = loc(callsite(#loc14 at #loc12))
#loc48 = loc(callsite(#loc15 at #loc12))
#loc49 = loc(callsite(#loc16 at #loc12))
#loc50 = loc(callsite(#loc17 at #loc12))
#loc51 = loc(callsite(#loc18 at #loc19))
#loc52 = loc(callsite(#loc23 at #loc24))
#loc54 = loc(callsite(#loc25 at #loc23))
#loc55 = loc(callsite(#loc18 at #loc26))
#loc56 = loc(callsite(#loc32 at #loc33))
#loc58 = loc(callsite(#loc34 at #loc32))
#loc59 = loc(callsite(#loc47 at #loc13))
#loc60 = loc(callsite(#loc48 at #loc13))
#loc61 = loc(callsite(#loc49 at #loc13))
#loc62 = loc(callsite(#loc50 at #loc13))
#loc63 = loc(callsite(#loc54 at #loc24))
#loc64 = loc(callsite(#loc58 at #loc33))
