//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_relu_1 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_relu_1
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_relu_1
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_relu_1(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_1_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_1_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_relu_1_param_2,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_relu_1_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<29>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd7, [triton_poi_fused__native_batch_norm_legit_no_training_relu_1_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused__native_batch_norm_legit_no_training_relu_1_param_1];
$L__tmp0:
	.loc	1 21 28                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:21:33
	shl.b32 	%r16, %r1, 8;
	ld.param.u64 	%rd9, [triton_poi_fused__native_batch_norm_legit_no_training_relu_1_param_2];
	.loc	1 22 36                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:22:36
	mov.u32 	%r17, %tid.x;
	shl.b32 	%r18, %r17, 1;
	and.b32  	%r19, %r18, 254;
	.loc	1 22 23                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:22:23
	or.b32  	%r20, %r16, %r19;
	.loc	1 23 21                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:23:21
	setp.lt.s32 	%p1, %r20, 256;
	.loc	1 25 21                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:25:21
	bfe.s32 	%r21, %r1, 23, 1;
	shr.u32 	%r22, %r21, 28;
	add.s32 	%r23, %r20, %r22;
	shr.s32 	%r24, %r23, 4;
	.loc	1 25 27                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:25:27
	shr.u32 	%r25, %r24, 30;
	add.s32 	%r26, %r24, %r25;
	and.b32  	%r27, %r26, -4;
	sub.s32 	%r28, %r24, %r27;
	.loc	1 26 34                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:26:34
	mul.wide.s32 	%rd10, %r20, 4;
	add.s64 	%rd1, %rd7, %rd10;
	.loc	1 26 39                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:26:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 27 30                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:27:30
	mul.wide.s32 	%rd11, %r28, 4;
	add.s64 	%rd2, %rd8, %rd11;
	.loc	1 27 35                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:27:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 30                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:28:30
	add.s64 	%rd4, %rd9, %rd11;
	.loc	1 28 35                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:28:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r7;
	.loc	1 31 18                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:31:18
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 32 26                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:32:26
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 26 39                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:26:39
	mov.b32 	%f7, %r3;
	.loc	1 27 35                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:27:35
	mov.b32 	%f8, %r5;
	.loc	1 29 18                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:29:18
	sub.f32 	%f9, %f7, %f8;
	.loc	1 26 39                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:26:39
	mov.b32 	%f10, %r2;
	.loc	1 27 35                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:27:35
	mov.b32 	%f11, %r4;
	.loc	1 29 18                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:29:18
	sub.f32 	%f12, %f10, %f11;
	.loc	1 34 18                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:34:18
	mov.b32 	%r10, %f5;
	mov.b32 	%r9, 1065353216;
	// begin inline asm
	div.full.f32 %r8, %r9, %r10;
	// end inline asm
	mov.b32 	%f13, %r8;
	mov.b32 	%r13, %f6;
	// begin inline asm
	div.full.f32 %r11, %r9, %r13;
	// end inline asm
	mov.b32 	%f14, %r11;
	.loc	1 37 19                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:37:19
	mul.f32 	%f15, %f12, %f13;
	mul.f32 	%f16, %f9, %f14;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p7, %f15, 0f00000000;
	setp.lt.f32 	%p8, %f16, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f17, 0f00000000, %f15, %p7;
	selp.f32 	%f18, 0f00000000, %f16, %p8;
$L__tmp2:
	.loc	1 40 40                         // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:40:40
	mov.b32 	%r14, %f17;
	mov.b32 	%r15, %f18;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r14, %r15 };
	// end inline asm
	.loc	1 40 4                          // cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ug/cugjpgfadr6vxupr4c7uvfk2hsbllb4t6fcgklc56gxj7rngd7ky.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 205                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc6 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 103
.b8 106
.b8 112
.b8 103
.b8 102
.b8 97
.b8 100
.b8 114
.b8 54
.b8 118
.b8 120
.b8 117
.b8 112
.b8 114
.b8 52
.b8 99
.b8 55
.b8 117
.b8 118
.b8 102
.b8 107
.b8 50
.b8 104
.b8 115
.b8 98
.b8 108
.b8 108
.b8 98
.b8 52
.b8 116
.b8 54
.b8 102
.b8 99
.b8 103
.b8 107
.b8 108
.b8 99
.b8 53
.b8 54
.b8 103
.b8 120
.b8 106
.b8 55
.b8 114
.b8 110
.b8 103
.b8 100
.b8 55
.b8 107
.b8 121
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 103
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3f DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa2:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb7:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
