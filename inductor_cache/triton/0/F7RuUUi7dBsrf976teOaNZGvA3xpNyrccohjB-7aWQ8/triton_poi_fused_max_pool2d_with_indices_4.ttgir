#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_max_pool2d_with_indices_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0xFF800000> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<5> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<6> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<7> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<8> : tensor<256xi8, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<256xi8, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<64> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<128> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<192> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %4, %cst_7 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.divsi %4, %cst_7 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.muli %7, %cst_6 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc11)
    %12 = tt.load %11, %5, %cst : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %13 = arith.cmpf ogt, %12, %cst : tensor<256xf32, #blocked> loc(#loc44)
    %14 = arith.cmpf une, %12, %12 : tensor<256xf32, #blocked> loc(#loc45)
    %15 = arith.ori %13, %14 : tensor<256xi1, #blocked> loc(#loc46)
    %16 = arith.select %15, %12, %cst : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc47)
    %17 = arith.addi %6, %cst_7 : tensor<256xi32, #blocked> loc(#loc18)
    %18 = arith.addi %17, %8 : tensor<256xi32, #blocked> loc(#loc19)
    %19 = tt.addptr %10, %18 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc20)
    %20 = tt.load %19, %5, %cst : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc21)
    %21 = arith.cmpf ogt, %20, %16 : tensor<256xf32, #blocked> loc(#loc48)
    %22 = arith.cmpf une, %20, %20 : tensor<256xf32, #blocked> loc(#loc49)
    %23 = arith.ori %21, %22 : tensor<256xi1, #blocked> loc(#loc50)
    %24 = arith.select %23, %20, %16 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc51)
    %25 = arith.cmpf ogt, %cst, %24 : tensor<256xf32, #blocked> loc(#loc52)
    %26 = arith.select %25, %cst, %24 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc53)
    %27 = arith.addi %6, %cst_8 : tensor<256xi32, #blocked> loc(#loc24)
    %28 = arith.addi %27, %8 : tensor<256xi32, #blocked> loc(#loc25)
    %29 = tt.addptr %10, %28 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc26)
    %30 = tt.load %29, %5, %cst : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc27)
    %31 = arith.cmpf ogt, %30, %26 : tensor<256xf32, #blocked> loc(#loc54)
    %32 = arith.cmpf une, %30, %30 : tensor<256xf32, #blocked> loc(#loc55)
    %33 = arith.ori %31, %32 : tensor<256xi1, #blocked> loc(#loc56)
    %34 = arith.select %33, %30, %26 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc57)
    %35 = arith.addi %6, %cst_9 : tensor<256xi32, #blocked> loc(#loc29)
    %36 = arith.addi %35, %8 : tensor<256xi32, #blocked> loc(#loc30)
    %37 = tt.addptr %10, %36 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc31)
    %38 = tt.load %37, %5, %cst : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc32)
    %39 = arith.cmpf ogt, %38, %34 : tensor<256xf32, #blocked> loc(#loc58)
    %40 = arith.cmpf une, %38, %38 : tensor<256xf32, #blocked> loc(#loc59)
    %41 = arith.ori %39, %40 : tensor<256xi1, #blocked> loc(#loc60)
    %42 = arith.select %41, %38, %34 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc61)
    %43 = arith.select %13, %cst_0, %cst_5 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc34)
    %44 = arith.select %21, %cst_1, %43 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc35)
    %45 = arith.select %25, %cst_2, %44 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc36)
    %46 = arith.select %31, %cst_3, %45 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc37)
    %47 = arith.select %39, %cst_4, %46 : tensor<256xi1, #blocked>, tensor<256xi8, #blocked> loc(#loc38)
    %48 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc39)
    %49 = tt.addptr %48, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc39)
    tt.store %49, %42, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc40)
    %50 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<256x!tt.ptr<i8>, #blocked> loc(#loc41)
    %51 = tt.addptr %50, %4 : tensor<256x!tt.ptr<i8>, #blocked>, tensor<256xi32, #blocked> loc(#loc41)
    tt.store %51, %47, %5 : tensor<256x!tt.ptr<i8>, #blocked> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":21:28)
#loc3 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":21:33)
#loc4 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":22:36)
#loc5 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":22:23)
#loc6 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":23:21)
#loc7 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":24:19)
#loc8 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":25:19)
#loc9 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":52:40)
#loc10 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":52:36)
#loc11 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":52:31)
#loc12 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":52:45)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc14 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":53:42)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc18 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":55:36)
#loc19 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":55:41)
#loc20 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":55:31)
#loc21 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":55:50)
#loc22 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":56:42)
#loc23 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":59:42)
#loc24 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":61:37)
#loc25 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":61:42)
#loc26 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":61:31)
#loc27 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":61:51)
#loc28 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":62:42)
#loc29 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":64:37)
#loc30 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":64:42)
#loc31 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":64:31)
#loc32 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":64:51)
#loc33 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":65:42)
#loc34 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":78:35)
#loc35 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":81:35)
#loc36 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":84:35)
#loc37 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":87:35)
#loc38 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":90:35)
#loc39 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":91:25)
#loc40 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":91:37)
#loc41 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":92:25)
#loc42 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":92:37)
#loc43 = loc("inductor_cache/7r/c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py":92:4)
#loc44 = loc(callsite(#loc13 at #loc14))
#loc45 = loc(callsite(#loc15 at #loc14))
#loc46 = loc(callsite(#loc16 at #loc14))
#loc47 = loc(callsite(#loc17 at #loc14))
#loc48 = loc(callsite(#loc13 at #loc22))
#loc49 = loc(callsite(#loc15 at #loc22))
#loc50 = loc(callsite(#loc16 at #loc22))
#loc51 = loc(callsite(#loc17 at #loc22))
#loc52 = loc(callsite(#loc13 at #loc23))
#loc53 = loc(callsite(#loc17 at #loc23))
#loc54 = loc(callsite(#loc13 at #loc28))
#loc55 = loc(callsite(#loc15 at #loc28))
#loc56 = loc(callsite(#loc16 at #loc28))
#loc57 = loc(callsite(#loc17 at #loc28))
#loc58 = loc(callsite(#loc13 at #loc33))
#loc59 = loc(callsite(#loc15 at #loc33))
#loc60 = loc(callsite(#loc16 at #loc33))
#loc61 = loc(callsite(#loc17 at #loc33))
