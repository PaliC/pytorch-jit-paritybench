; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = icmp slt i32 %10, 256, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 64, !dbg !15
  %13 = mul i32 %12, 64, !dbg !16
  %.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = shl i32 %12, 8, !dbg !17
  %15 = add i32 %14, %.decomposed, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %17, i1 %11, i32 -8388608, i1 %11, i32 -8388608, i1 %11) #1, !dbg !20
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !20
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !20
  %21 = add i32 %15, 64, !dbg !21
  %22 = sext i32 %21 to i64, !dbg !22
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %23, i1 %11, i32 -8388608, i1 %11, i32 -8388608, i1 %11) #1, !dbg !23
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !23
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !23
  %27 = add i32 %15, 128, !dbg !24
  %28 = sext i32 %27 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !25
  %30 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %29, i1 %11, i32 -8388608, i1 %11, i32 -8388608, i1 %11) #1, !dbg !26
  %31 = extractvalue { i32, i32 } %30, 0, !dbg !26
  %32 = extractvalue { i32, i32 } %30, 1, !dbg !26
  %33 = add i32 %15, 192, !dbg !27
  %34 = sext i32 %33 to i64, !dbg !28
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !28
  %36 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %35, i1 %11, i32 -8388608, i1 %11, i32 -8388608, i1 %11) #1, !dbg !29
  %37 = extractvalue { i32, i32 } %36, 0, !dbg !29
  %38 = extractvalue { i32, i32 } %36, 1, !dbg !29
  %39 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !20
  %40 = insertelement <2 x i32> %39, i32 %20, i64 1, !dbg !20
  %41 = bitcast <2 x i32> %40 to <2 x float>, !dbg !20
  %42 = fcmp one <2 x float> %41, splat (float 0xFFF0000000000000), !dbg !30
  %43 = bitcast i32 %19 to float, !dbg !34
  %44 = fcmp uno float %43, 0.000000e+00, !dbg !34
  %45 = bitcast i32 %20 to float, !dbg !34
  %46 = fcmp uno float %45, 0.000000e+00, !dbg !34
  %47 = insertelement <2 x i1> %42, i1 %44, i64 0, !dbg !35
  %48 = insertelement <2 x i1> %42, i1 %46, i64 1, !dbg !35
  %49 = or <2 x i1> %47, %48, !dbg !35
  %50 = select <2 x i1> %49, <2 x float> %41, <2 x float> splat (float 0xFFF0000000000000), !dbg !36
  %51 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !23
  %52 = insertelement <2 x i32> %51, i32 %26, i64 1, !dbg !23
  %53 = bitcast <2 x i32> %52 to <2 x float>, !dbg !23
  %54 = fcmp olt <2 x float> %50, %53, !dbg !37
  %55 = fcmp uno <2 x float> %53, zeroinitializer, !dbg !39
  %56 = or <2 x i1> %55, %54, !dbg !40
  %57 = select <2 x i1> %56, <2 x float> %53, <2 x float> %50, !dbg !41
  %58 = insertelement <2 x i32> poison, i32 %31, i64 0, !dbg !26
  %59 = insertelement <2 x i32> %58, i32 %32, i64 1, !dbg !26
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !26
  %61 = fcmp olt <2 x float> %57, %60, !dbg !42
  %62 = fcmp uno <2 x float> %60, zeroinitializer, !dbg !44
  %63 = or <2 x i1> %62, %61, !dbg !45
  %64 = select <2 x i1> %63, <2 x float> %60, <2 x float> %57, !dbg !46
  %65 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !29
  %66 = insertelement <2 x i32> %65, i32 %38, i64 1, !dbg !29
  %67 = bitcast <2 x i32> %66 to <2 x float>, !dbg !29
  %68 = fcmp olt <2 x float> %64, %67, !dbg !47
  %69 = bitcast i32 %37 to float, !dbg !49
  %70 = fcmp uno float %69, 0.000000e+00, !dbg !49
  %71 = bitcast i32 %38 to float, !dbg !49
  %72 = fcmp uno float %71, 0.000000e+00, !dbg !49
  %73 = extractelement <2 x i1> %68, i64 0, !dbg !50
  %74 = or i1 %70, %73, !dbg !50
  %75 = extractelement <2 x i1> %68, i64 1, !dbg !50
  %76 = or i1 %72, %75, !dbg !50
  %77 = select <2 x i1> %42, <2 x i8> splat (i8 4), <2 x i8> zeroinitializer, !dbg !51
  %78 = select <2 x i1> %54, <2 x i8> splat (i8 5), <2 x i8> %77, !dbg !52
  %79 = select <2 x i1> %61, <2 x i8> splat (i8 7), <2 x i8> %78, !dbg !53
  %80 = select <2 x i1> %68, <2 x i8> splat (i8 8), <2 x i8> %79, !dbg !54
  %81 = sext i32 %10 to i64, !dbg !55
  %82 = getelementptr float, ptr addrspace(1) %1, i64 %81, !dbg !55
  %bc = bitcast <2 x float> %64 to <2 x i32>, !dbg !56
  %83 = extractelement <2 x i32> %bc, i64 0, !dbg !56
  %84 = select i1 %74, i32 %37, i32 %83, !dbg !57
  %bc1 = bitcast <2 x float> %64 to <2 x i32>, !dbg !56
  %85 = extractelement <2 x i32> %bc1, i64 1, !dbg !56
  %86 = select i1 %76, i32 %38, i32 %85, !dbg !57
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %84, i32 %86, ptr addrspace(1) %82, i1 %11) #1, !dbg !56
  %87 = getelementptr i8, ptr addrspace(1) %2, i64 %81, !dbg !58
  %88 = bitcast <2 x i8> %80 to i16, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b16 [ $1 + 0 ], { $0 };", "c,l,b"(i16 %88, ptr addrspace(1) %87, i1 %11) #1, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7ripiyn5vvhggjuf4di3g5xyydfzqhaericyhn3t6dbozyznjzj.py", directory: "inductor_cache/7r")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_4, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_4", linkageName: "triton_poi_fused_max_pool2d_with_indices_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 52, column: 40, scope: !7)
!18 = !DILocation(line: 52, column: 36, scope: !7)
!19 = !DILocation(line: 52, column: 31, scope: !7)
!20 = !DILocation(line: 52, column: 45, scope: !7)
!21 = !DILocation(line: 55, column: 41, scope: !7)
!22 = !DILocation(line: 55, column: 31, scope: !7)
!23 = !DILocation(line: 55, column: 50, scope: !7)
!24 = !DILocation(line: 61, column: 42, scope: !7)
!25 = !DILocation(line: 61, column: 31, scope: !7)
!26 = !DILocation(line: 61, column: 51, scope: !7)
!27 = !DILocation(line: 64, column: 42, scope: !7)
!28 = !DILocation(line: 64, column: 31, scope: !7)
!29 = !DILocation(line: 64, column: 51, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 53, column: 42, scope: !7)
!34 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !33)
!36 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!37 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !38)
!38 = !DILocation(line: 56, column: 42, scope: !7)
!39 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !38)
!40 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !38)
!41 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !38)
!42 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !43)
!43 = !DILocation(line: 62, column: 42, scope: !7)
!44 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !43)
!45 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !43)
!46 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !43)
!47 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !48)
!48 = !DILocation(line: 65, column: 42, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !31, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !31, inlinedAt: !48)
!51 = !DILocation(line: 78, column: 35, scope: !7)
!52 = !DILocation(line: 81, column: 35, scope: !7)
!53 = !DILocation(line: 87, column: 35, scope: !7)
!54 = !DILocation(line: 90, column: 35, scope: !7)
!55 = !DILocation(line: 91, column: 25, scope: !7)
!56 = !DILocation(line: 91, column: 37, scope: !7)
!57 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !48)
!58 = !DILocation(line: 92, column: 25, scope: !7)
!59 = !DILocation(line: 92, column: 37, scope: !7)
!60 = !DILocation(line: 92, column: 4, scope: !7)
