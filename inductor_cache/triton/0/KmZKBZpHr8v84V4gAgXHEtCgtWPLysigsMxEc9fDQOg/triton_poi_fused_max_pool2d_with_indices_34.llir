; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_34(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = sdiv i32 %9, 2, !dbg !14
  %11 = add i32 %9, -6, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 false, i32 -8388608, i1 false) #1, !dbg !17
  %15 = bitcast i32 %14 to float, !dbg !17
  %16 = add i32 %9, -5, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %18, i1 false, i32 -8388608, i1 false) #1, !dbg !20
  %20 = bitcast i32 %19 to float, !dbg !20
  %21 = fcmp ogt float %20, %15, !dbg !21
  %22 = fcmp uno float %20, 0.000000e+00, !dbg !25
  %23 = or i1 %21, %22, !dbg !26
  %24 = select i1 %23, float %20, float %15, !dbg !27
  %25 = add i32 %9, -4, !dbg !28
  %26 = sext i32 %25 to i64, !dbg !29
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !29
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 false, i32 -8388608, i1 false) #1, !dbg !30
  %29 = bitcast i32 %28 to float, !dbg !30
  %30 = fcmp olt float %24, %29, !dbg !31
  %31 = fcmp uno float %29, 0.000000e+00, !dbg !33
  %32 = or i1 %31, %30, !dbg !34
  %33 = select i1 %32, float %29, float %24, !dbg !35
  %34 = add i32 %9, -3, !dbg !36
  %35 = sext i32 %34 to i64, !dbg !37
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !37
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 false, i32 -8388608, i1 false) #1, !dbg !38
  %38 = bitcast i32 %37 to float, !dbg !38
  %39 = fcmp olt float %33, %38, !dbg !39
  %40 = fcmp uno float %38, 0.000000e+00, !dbg !41
  %41 = or i1 %40, %39, !dbg !42
  %42 = select i1 %41, float %38, float %33, !dbg !43
  %43 = add i32 %9, -2, !dbg !44
  %44 = sext i32 %43 to i64, !dbg !45
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !45
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 false, i32 -8388608, i1 false) #1, !dbg !46
  %47 = bitcast i32 %46 to float, !dbg !46
  %48 = fcmp olt float %42, %47, !dbg !47
  %49 = fcmp uno float %47, 0.000000e+00, !dbg !49
  %50 = or i1 %49, %48, !dbg !50
  %51 = select i1 %50, float %47, float %42, !dbg !51
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 false, i32 -8388608, i1 false) #1, !dbg !52
  %53 = bitcast i32 %52 to float, !dbg !52
  %54 = fcmp olt float %51, %53, !dbg !53
  %55 = fcmp uno float %53, 0.000000e+00, !dbg !55
  %56 = or i1 %55, %54, !dbg !56
  %57 = select i1 %56, float %53, float %51, !dbg !57
  %58 = add i32 %9, -1, !dbg !58
  %59 = sext i32 %58 to i64, !dbg !59
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !59
  %61 = sext i32 %9 to i64, !dbg !60
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !60
  %63 = add i32 %9, 1, !dbg !61
  %64 = sext i32 %63 to i64, !dbg !62
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !62
  %66 = add i32 %9, 2, !dbg !63
  %67 = sext i32 %66 to i64, !dbg !64
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !64
  %69 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !65
  %70 = insertelement <2 x i32> %69, i32 %10, i64 1, !dbg !65
  %71 = srem <2 x i32> %70, splat (i32 2), !dbg !65
  %72 = extractelement <2 x i32> %71, i64 0, !dbg !66
  %73 = icmp sgt i32 %72, 0, !dbg !67
  %74 = icmp sgt i32 %72, -1, !dbg !68
  %75 = icmp ugt i32 %72, -3, !dbg !69
  %76 = extractelement <2 x i32> %71, i64 1, !dbg !66
  %77 = icmp sgt i32 %76, 0, !dbg !70
  %78 = and i1 %73, %77, !dbg !71
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %78, i32 -8388608, i1 %78) #1, !dbg !72
  %80 = bitcast i32 %79 to float, !dbg !72
  %81 = fcmp olt float %57, %80, !dbg !73
  %82 = fcmp uno float %80, 0.000000e+00, !dbg !75
  %83 = or i1 %82, %81, !dbg !76
  %84 = select i1 %83, float %80, float %57, !dbg !77
  %85 = and i1 %74, %77, !dbg !78
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %85, i32 -8388608, i1 %85) #1, !dbg !79
  %87 = bitcast i32 %86 to float, !dbg !79
  %88 = fcmp olt float %84, %87, !dbg !80
  %89 = fcmp uno float %87, 0.000000e+00, !dbg !82
  %90 = or i1 %89, %88, !dbg !83
  %91 = select i1 %90, float %87, float %84, !dbg !84
  %92 = icmp slt <2 x i32> %71, splat (i32 1), !dbg !85
  %93 = extractelement <2 x i1> %92, i64 0, !dbg !86
  %94 = and i1 %93, %77, !dbg !86
  %95 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %94, i32 -8388608, i1 %94) #1, !dbg !87
  %96 = bitcast i32 %95 to float, !dbg !87
  %97 = fcmp olt float %91, %96, !dbg !88
  %98 = fcmp uno float %96, 0.000000e+00, !dbg !90
  %99 = or i1 %98, %97, !dbg !91
  %100 = select i1 %99, float %96, float %91, !dbg !92
  %101 = and i1 %75, %77, !dbg !93
  %102 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %101, i32 -8388608, i1 %101) #1, !dbg !94
  %103 = bitcast i32 %102 to float, !dbg !94
  %104 = fcmp olt float %100, %103, !dbg !95
  %105 = fcmp uno float %103, 0.000000e+00, !dbg !97
  %106 = or i1 %105, %104, !dbg !98
  %107 = select i1 %106, float %103, float %100, !dbg !99
  %108 = icmp sgt i32 %76, -1, !dbg !100
  %109 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 false, i32 -8388608, i1 false) #1, !dbg !101
  %110 = bitcast i32 %109 to float, !dbg !101
  %111 = fcmp olt float %107, %110, !dbg !102
  %112 = fcmp uno float %110, 0.000000e+00, !dbg !104
  %113 = or i1 %112, %111, !dbg !105
  %114 = select i1 %113, float %110, float %107, !dbg !106
  %115 = and i1 %73, %108, !dbg !107
  %116 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %115, i32 -8388608, i1 %115) #1, !dbg !108
  %117 = bitcast i32 %116 to float, !dbg !108
  %118 = fcmp olt float %114, %117, !dbg !109
  %119 = fcmp uno float %117, 0.000000e+00, !dbg !111
  %120 = or i1 %119, %118, !dbg !112
  %121 = select i1 %120, float %117, float %114, !dbg !113
  %122 = or i32 %76, %72, !dbg !114
  %123 = icmp sgt i32 %122, -1, !dbg !114
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %123, i32 -8388608, i1 %123) #1, !dbg !115
  %125 = bitcast i32 %124 to float, !dbg !115
  %126 = fcmp olt float %121, %125, !dbg !116
  %127 = fcmp uno float %125, 0.000000e+00, !dbg !118
  %128 = or i1 %127, %126, !dbg !119
  %129 = select i1 %128, float %125, float %121, !dbg !120
  %130 = and i1 %93, %108, !dbg !121
  %131 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %130, i32 -8388608, i1 %130) #1, !dbg !122
  %132 = bitcast i32 %131 to float, !dbg !122
  %133 = fcmp olt float %129, %132, !dbg !123
  %134 = fcmp uno float %132, 0.000000e+00, !dbg !125
  %135 = or i1 %134, %133, !dbg !126
  %136 = select i1 %135, float %132, float %129, !dbg !127
  %137 = and i1 %75, %108, !dbg !128
  %138 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %137, i32 -8388608, i1 %137) #1, !dbg !129
  %139 = bitcast i32 %138 to float, !dbg !129
  %140 = fcmp olt float %136, %139, !dbg !130
  %141 = fcmp uno float %139, 0.000000e+00, !dbg !132
  %142 = or i1 %141, %140, !dbg !133
  %143 = select i1 %142, float %139, float %136, !dbg !134
  %144 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 false, i32 -8388608, i1 false) #1, !dbg !135
  %145 = bitcast i32 %144 to float, !dbg !135
  %146 = fcmp olt float %143, %145, !dbg !136
  %147 = fcmp uno float %145, 0.000000e+00, !dbg !138
  %148 = or i1 %147, %146, !dbg !139
  %149 = select i1 %148, float %145, float %143, !dbg !140
  %150 = extractelement <2 x i1> %92, i64 1, !dbg !141
  %151 = and i1 %73, %150, !dbg !141
  %152 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %65, i1 %151, i32 -8388608, i1 %151) #1, !dbg !142
  %153 = bitcast i32 %152 to float, !dbg !142
  %154 = fcmp olt float %149, %153, !dbg !143
  %155 = fcmp uno float %153, 0.000000e+00, !dbg !145
  %156 = or i1 %155, %154, !dbg !146
  %157 = select i1 %156, float %153, float %149, !dbg !147
  %158 = and i1 %74, %150, !dbg !148
  %159 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %158, i32 -8388608, i1 %158) #1, !dbg !149
  %160 = bitcast i32 %159 to float, !dbg !149
  %161 = fcmp olt float %157, %160, !dbg !150
  %162 = fcmp uno float %160, 0.000000e+00, !dbg !152
  %163 = or i1 %162, %161, !dbg !153
  %164 = select i1 %163, float %160, float %157, !dbg !154
  %165 = and i1 %93, %150, !dbg !155
  %166 = add i32 %9, 3, !dbg !156
  %167 = sext i32 %166 to i64, !dbg !157
  %168 = getelementptr float, ptr addrspace(1) %0, i64 %167, !dbg !157
  %169 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %168, i1 %165, i32 -8388608, i1 %165) #1, !dbg !158
  %170 = bitcast i32 %169 to float, !dbg !158
  %171 = fcmp olt float %164, %170, !dbg !159
  %172 = fcmp uno float %170, 0.000000e+00, !dbg !161
  %173 = or i1 %172, %171, !dbg !162
  %174 = select i1 %173, float %170, float %164, !dbg !163
  %175 = and i1 %75, %150, !dbg !164
  %176 = add i32 %9, 4, !dbg !165
  %177 = sext i32 %176 to i64, !dbg !166
  %178 = getelementptr float, ptr addrspace(1) %0, i64 %177, !dbg !166
  %179 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %178, i1 %175, i32 -8388608, i1 %175) #1, !dbg !167
  %180 = bitcast i32 %179 to float, !dbg !167
  %181 = fcmp olt float %174, %180, !dbg !168
  %182 = fcmp uno float %180, 0.000000e+00, !dbg !170
  %183 = or i1 %182, %181, !dbg !171
  %184 = select i1 %183, float %180, float %174, !dbg !172
  %185 = icmp ugt i32 %76, -3, !dbg !173
  %186 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 false, i32 -8388608, i1 false) #1, !dbg !174
  %187 = bitcast i32 %186 to float, !dbg !174
  %188 = fcmp olt float %184, %187, !dbg !175
  %189 = fcmp uno float %187, 0.000000e+00, !dbg !177
  %190 = or i1 %189, %188, !dbg !178
  %191 = select i1 %190, float %187, float %184, !dbg !179
  %192 = and i1 %73, %185, !dbg !180
  %193 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %168, i1 %192, i32 -8388608, i1 %192) #1, !dbg !181
  %194 = bitcast i32 %193 to float, !dbg !181
  %195 = fcmp olt float %191, %194, !dbg !182
  %196 = fcmp uno float %194, 0.000000e+00, !dbg !184
  %197 = or i1 %196, %195, !dbg !185
  %198 = select i1 %197, float %194, float %191, !dbg !186
  %199 = and i1 %74, %185, !dbg !187
  %200 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %178, i1 %199, i32 -8388608, i1 %199) #1, !dbg !188
  %201 = bitcast i32 %200 to float, !dbg !188
  %202 = fcmp olt float %198, %201, !dbg !189
  %203 = fcmp uno float %201, 0.000000e+00, !dbg !191
  %204 = or i1 %203, %202, !dbg !192
  %205 = select i1 %204, float %201, float %198, !dbg !193
  %206 = and i1 %93, %185, !dbg !194
  %207 = add i32 %9, 5, !dbg !195
  %208 = sext i32 %207 to i64, !dbg !196
  %209 = getelementptr float, ptr addrspace(1) %0, i64 %208, !dbg !196
  %210 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %209, i1 %206, i32 -8388608, i1 %206) #1, !dbg !197
  %211 = bitcast i32 %210 to float, !dbg !197
  %212 = fcmp olt float %205, %211, !dbg !198
  %213 = fcmp uno float %211, 0.000000e+00, !dbg !200
  %214 = or i1 %213, %212, !dbg !201
  %215 = select i1 %214, float %211, float %205, !dbg !202
  %216 = and i32 %76, %72, !dbg !66
  %217 = icmp ugt i32 %216, -3, !dbg !66
  %218 = add i32 %9, 6, !dbg !203
  %219 = sext i32 %218 to i64, !dbg !204
  %220 = getelementptr float, ptr addrspace(1) %0, i64 %219, !dbg !204
  %221 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %220, i1 %217, i32 -8388608, i1 %217) #1, !dbg !205
  %222 = bitcast i32 %221 to float, !dbg !205
  %223 = fcmp olt float %215, %222, !dbg !206
  %224 = fcmp uno float %222, 0.000000e+00, !dbg !208
  %225 = or i1 %224, %223, !dbg !209
  %226 = zext i1 %21 to i8, !dbg !210
  %227 = select i1 %30, i8 2, i8 %226, !dbg !211
  %228 = select i1 %39, i8 3, i8 %227, !dbg !212
  %229 = select i1 %48, i8 4, i8 %228, !dbg !213
  %230 = select i1 %54, i8 5, i8 %229, !dbg !214
  %231 = select i1 %81, i8 6, i8 %230, !dbg !215
  %232 = select i1 %88, i8 7, i8 %231, !dbg !216
  %233 = select i1 %97, i8 8, i8 %232, !dbg !217
  %234 = select i1 %104, i8 9, i8 %233, !dbg !218
  %235 = select i1 %111, i8 10, i8 %234, !dbg !219
  %236 = select i1 %118, i8 11, i8 %235, !dbg !220
  %237 = select i1 %126, i8 12, i8 %236, !dbg !221
  %238 = select i1 %133, i8 13, i8 %237, !dbg !222
  %239 = select i1 %140, i8 14, i8 %238, !dbg !223
  %240 = select i1 %146, i8 15, i8 %239, !dbg !224
  %241 = select i1 %154, i8 16, i8 %240, !dbg !225
  %242 = select i1 %161, i8 17, i8 %241, !dbg !226
  %243 = select i1 %171, i8 18, i8 %242, !dbg !227
  %244 = select i1 %181, i8 19, i8 %243, !dbg !228
  %245 = select i1 %188, i8 20, i8 %244, !dbg !229
  %246 = select i1 %195, i8 21, i8 %245, !dbg !230
  %247 = select i1 %202, i8 22, i8 %246, !dbg !231
  %248 = select i1 %212, i8 23, i8 %247, !dbg !232
  %249 = select i1 %223, i8 24, i8 %248, !dbg !233
  %250 = getelementptr float, ptr addrspace(1) %1, i64 %61, !dbg !234
  %251 = bitcast float %215 to i32, !dbg !235
  %252 = select i1 %225, i32 %221, i32 %251, !dbg !236
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %252, ptr addrspace(1) %250, i1 true) #1, !dbg !235
  %253 = getelementptr i8, ptr addrspace(1) %2, i64 %61, !dbg !237
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %249, ptr addrspace(1) %253, i1 true) #1, !dbg !238
  ret void, !dbg !239
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cahys5rgd4dbdbovqgo3qtdu3lwkvh62uf6hmpsdcrjhgdtlmjmd.py", directory: "inductor_cache/ah")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_34, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_34, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_34", linkageName: "triton_poi_fused_max_pool2d_with_indices_34", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 38, column: 38, scope: !7)
!16 = !DILocation(line: 38, column: 31, scope: !7)
!17 = !DILocation(line: 38, column: 43, scope: !7)
!18 = !DILocation(line: 44, column: 38, scope: !7)
!19 = !DILocation(line: 44, column: 31, scope: !7)
!20 = !DILocation(line: 44, column: 43, scope: !7)
!21 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !24)
!22 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!23 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!24 = !DILocation(line: 45, column: 42, scope: !7)
!25 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !24)
!26 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !24)
!27 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !24)
!28 = !DILocation(line: 51, column: 38, scope: !7)
!29 = !DILocation(line: 51, column: 31, scope: !7)
!30 = !DILocation(line: 51, column: 43, scope: !7)
!31 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !32)
!32 = !DILocation(line: 52, column: 42, scope: !7)
!33 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !32)
!34 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !32)
!35 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !32)
!36 = !DILocation(line: 58, column: 38, scope: !7)
!37 = !DILocation(line: 58, column: 31, scope: !7)
!38 = !DILocation(line: 58, column: 43, scope: !7)
!39 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !40)
!40 = !DILocation(line: 59, column: 42, scope: !7)
!41 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !40)
!42 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !40)
!43 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !40)
!44 = !DILocation(line: 65, column: 38, scope: !7)
!45 = !DILocation(line: 65, column: 31, scope: !7)
!46 = !DILocation(line: 65, column: 43, scope: !7)
!47 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !48)
!48 = !DILocation(line: 66, column: 42, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !48)
!52 = !DILocation(line: 72, column: 43, scope: !7)
!53 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !54)
!54 = !DILocation(line: 73, column: 42, scope: !7)
!55 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !54)
!56 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !54)
!57 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !54)
!58 = !DILocation(line: 81, column: 38, scope: !7)
!59 = !DILocation(line: 81, column: 31, scope: !7)
!60 = !DILocation(line: 84, column: 31, scope: !7)
!61 = !DILocation(line: 100, column: 35, scope: !7)
!62 = !DILocation(line: 100, column: 31, scope: !7)
!63 = !DILocation(line: 103, column: 35, scope: !7)
!64 = !DILocation(line: 103, column: 31, scope: !7)
!65 = !DILocation(line: 25, column: 19, scope: !7)
!66 = !DILocation(line: 140, column: 22, scope: !7)
!67 = !DILocation(line: 40, column: 21, scope: !7)
!68 = !DILocation(line: 47, column: 21, scope: !7)
!69 = !DILocation(line: 62, column: 20, scope: !7)
!70 = !DILocation(line: 68, column: 21, scope: !7)
!71 = !DILocation(line: 74, column: 20, scope: !7)
!72 = !DILocation(line: 75, column: 43, scope: !7)
!73 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !74)
!74 = !DILocation(line: 76, column: 42, scope: !7)
!75 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !74)
!76 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !74)
!77 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !74)
!78 = !DILocation(line: 77, column: 20, scope: !7)
!79 = !DILocation(line: 78, column: 43, scope: !7)
!80 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !81)
!81 = !DILocation(line: 79, column: 42, scope: !7)
!82 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !81)
!83 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !81)
!84 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !81)
!85 = !DILocation(line: 55, column: 20, scope: !7)
!86 = !DILocation(line: 80, column: 20, scope: !7)
!87 = !DILocation(line: 81, column: 43, scope: !7)
!88 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !89)
!89 = !DILocation(line: 82, column: 42, scope: !7)
!90 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !89)
!91 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !89)
!92 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !89)
!93 = !DILocation(line: 83, column: 20, scope: !7)
!94 = !DILocation(line: 84, column: 36, scope: !7)
!95 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !96)
!96 = !DILocation(line: 85, column: 42, scope: !7)
!97 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !96)
!98 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !96)
!99 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !96)
!100 = !DILocation(line: 87, column: 21, scope: !7)
!101 = !DILocation(line: 91, column: 43, scope: !7)
!102 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !103)
!103 = !DILocation(line: 92, column: 42, scope: !7)
!104 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !103)
!105 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !103)
!106 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !103)
!107 = !DILocation(line: 93, column: 20, scope: !7)
!108 = !DILocation(line: 94, column: 43, scope: !7)
!109 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !110)
!110 = !DILocation(line: 95, column: 42, scope: !7)
!111 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !110)
!112 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !110)
!113 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !110)
!114 = !DILocation(line: 96, column: 20, scope: !7)
!115 = !DILocation(line: 97, column: 36, scope: !7)
!116 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !117)
!117 = !DILocation(line: 98, column: 42, scope: !7)
!118 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !117)
!119 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !117)
!120 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !117)
!121 = !DILocation(line: 99, column: 20, scope: !7)
!122 = !DILocation(line: 100, column: 40, scope: !7)
!123 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !124)
!124 = !DILocation(line: 101, column: 42, scope: !7)
!125 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !124)
!126 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !124)
!127 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !124)
!128 = !DILocation(line: 102, column: 20, scope: !7)
!129 = !DILocation(line: 103, column: 40, scope: !7)
!130 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !131)
!131 = !DILocation(line: 104, column: 42, scope: !7)
!132 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !131)
!133 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !131)
!134 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !131)
!135 = !DILocation(line: 110, column: 36, scope: !7)
!136 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !137)
!137 = !DILocation(line: 111, column: 42, scope: !7)
!138 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !137)
!139 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !137)
!140 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !137)
!141 = !DILocation(line: 112, column: 20, scope: !7)
!142 = !DILocation(line: 113, column: 40, scope: !7)
!143 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !144)
!144 = !DILocation(line: 114, column: 42, scope: !7)
!145 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !144)
!146 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !144)
!147 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !144)
!148 = !DILocation(line: 115, column: 20, scope: !7)
!149 = !DILocation(line: 116, column: 40, scope: !7)
!150 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !151)
!151 = !DILocation(line: 117, column: 42, scope: !7)
!152 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !151)
!153 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !151)
!154 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !151)
!155 = !DILocation(line: 118, column: 20, scope: !7)
!156 = !DILocation(line: 119, column: 35, scope: !7)
!157 = !DILocation(line: 119, column: 31, scope: !7)
!158 = !DILocation(line: 119, column: 40, scope: !7)
!159 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !160)
!160 = !DILocation(line: 120, column: 42, scope: !7)
!161 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !160)
!162 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !160)
!163 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !160)
!164 = !DILocation(line: 121, column: 20, scope: !7)
!165 = !DILocation(line: 122, column: 35, scope: !7)
!166 = !DILocation(line: 122, column: 31, scope: !7)
!167 = !DILocation(line: 122, column: 40, scope: !7)
!168 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !169)
!169 = !DILocation(line: 123, column: 42, scope: !7)
!170 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !169)
!171 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !169)
!172 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !169)
!173 = !DILocation(line: 126, column: 20, scope: !7)
!174 = !DILocation(line: 129, column: 41, scope: !7)
!175 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !176)
!176 = !DILocation(line: 130, column: 44, scope: !7)
!177 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !176)
!178 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !176)
!179 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !176)
!180 = !DILocation(line: 131, column: 22, scope: !7)
!181 = !DILocation(line: 132, column: 41, scope: !7)
!182 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !183)
!183 = !DILocation(line: 133, column: 44, scope: !7)
!184 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !183)
!185 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !183)
!186 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !183)
!187 = !DILocation(line: 134, column: 22, scope: !7)
!188 = !DILocation(line: 135, column: 41, scope: !7)
!189 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !190)
!190 = !DILocation(line: 136, column: 44, scope: !7)
!191 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !190)
!192 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !190)
!193 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !190)
!194 = !DILocation(line: 137, column: 22, scope: !7)
!195 = !DILocation(line: 138, column: 36, scope: !7)
!196 = !DILocation(line: 138, column: 32, scope: !7)
!197 = !DILocation(line: 138, column: 41, scope: !7)
!198 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !199)
!199 = !DILocation(line: 139, column: 44, scope: !7)
!200 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !199)
!201 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !199)
!202 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !199)
!203 = !DILocation(line: 141, column: 36, scope: !7)
!204 = !DILocation(line: 141, column: 32, scope: !7)
!205 = !DILocation(line: 141, column: 41, scope: !7)
!206 = !DILocation(line: 118, column: 15, scope: !22, inlinedAt: !207)
!207 = !DILocation(line: 142, column: 44, scope: !7)
!208 = !DILocation(line: 120, column: 21, scope: !22, inlinedAt: !207)
!209 = !DILocation(line: 120, column: 16, scope: !22, inlinedAt: !207)
!210 = !DILocation(line: 146, column: 38, scope: !7)
!211 = !DILocation(line: 149, column: 38, scope: !7)
!212 = !DILocation(line: 152, column: 38, scope: !7)
!213 = !DILocation(line: 155, column: 38, scope: !7)
!214 = !DILocation(line: 158, column: 38, scope: !7)
!215 = !DILocation(line: 161, column: 38, scope: !7)
!216 = !DILocation(line: 164, column: 38, scope: !7)
!217 = !DILocation(line: 167, column: 38, scope: !7)
!218 = !DILocation(line: 170, column: 38, scope: !7)
!219 = !DILocation(line: 173, column: 38, scope: !7)
!220 = !DILocation(line: 176, column: 38, scope: !7)
!221 = !DILocation(line: 179, column: 38, scope: !7)
!222 = !DILocation(line: 182, column: 38, scope: !7)
!223 = !DILocation(line: 185, column: 38, scope: !7)
!224 = !DILocation(line: 188, column: 38, scope: !7)
!225 = !DILocation(line: 191, column: 38, scope: !7)
!226 = !DILocation(line: 194, column: 38, scope: !7)
!227 = !DILocation(line: 197, column: 38, scope: !7)
!228 = !DILocation(line: 200, column: 38, scope: !7)
!229 = !DILocation(line: 203, column: 38, scope: !7)
!230 = !DILocation(line: 206, column: 38, scope: !7)
!231 = !DILocation(line: 209, column: 38, scope: !7)
!232 = !DILocation(line: 212, column: 38, scope: !7)
!233 = !DILocation(line: 215, column: 38, scope: !7)
!234 = !DILocation(line: 216, column: 25, scope: !7)
!235 = !DILocation(line: 216, column: 38, scope: !7)
!236 = !DILocation(line: 121, column: 29, scope: !22, inlinedAt: !207)
!237 = !DILocation(line: 217, column: 25, scope: !7)
!238 = !DILocation(line: 217, column: 38, scope: !7)
!239 = !DILocation(line: 217, column: 4, scope: !7)
