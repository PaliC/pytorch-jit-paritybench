; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_convolution_tanh_8(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %5 = shl i32 %4, 9, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 2, !dbg !12
  %8 = and i32 %7, 508, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = sdiv i32 %9, 4096, !dbg !14
  %11 = srem i32 %10, 3, !dbg !15
  %12 = sext i32 %9 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %13, i1 true) #3, !dbg !17
  %15 = extractvalue { i32, i32, i32, i32 } %14, 0, !dbg !17
  %16 = extractvalue { i32, i32, i32, i32 } %14, 1, !dbg !17
  %17 = extractvalue { i32, i32, i32, i32 } %14, 2, !dbg !17
  %18 = extractvalue { i32, i32, i32, i32 } %14, 3, !dbg !17
  %19 = bitcast i32 %15 to float, !dbg !17
  %20 = bitcast i32 %16 to float, !dbg !17
  %21 = bitcast i32 %17 to float, !dbg !17
  %22 = bitcast i32 %18 to float, !dbg !17
  %23 = sext i32 %11 to i64, !dbg !18
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !18
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !19
  %26 = bitcast i32 %25 to float, !dbg !19
  %27 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !19
  %28 = bitcast i32 %27 to float, !dbg !19
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !19
  %30 = bitcast i32 %29 to float, !dbg !19
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #3, !dbg !19
  %32 = bitcast i32 %31 to float, !dbg !19
  %33 = fadd float %19, %26, !dbg !20
  %34 = fadd float %20, %28, !dbg !20
  %35 = fadd float %21, %30, !dbg !20
  %36 = fadd float %22, %32, !dbg !20
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i = icmp eq i32 %37, 0, !dbg !21
  %38 = tail call float @llvm.nvvm.fabs.ftz.f(float %33) #3, !dbg !21
  %39 = tail call float @llvm.nvvm.fabs.f(float %33) #3, !dbg !21
  %.01.i = select i1 %.not.i, float %39, float %38, !dbg !21
  %40 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !21
  br i1 %40, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !21

__internal_fmad.exit1.i:                          ; preds = %3
  %41 = fmul float %.01.i, 0x4007154760000000, !dbg !21
  %42 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %41) #3, !dbg !21
  %43 = fadd float %42, 1.000000e+00, !dbg !21
  %44 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %43) #4, !dbg !21, !srcloc !22
  %45 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i = icmp eq i32 %45, 0, !dbg !21
  %46 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %44, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %47 = tail call float @llvm.nvvm.fma.rn.f(float %44, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i = select i1 %.not6.i, float %47, float %46, !dbg !21
  %48 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !21
  %s.0.i = select i1 %48, float 1.000000e+00, float %.03.i, !dbg !21
  %49 = bitcast float %s.0.i to i32, !dbg !21
  %50 = bitcast float %33 to i32, !dbg !21
  %51 = and i32 %50, -2147483648, !dbg !21
  %52 = or i32 %51, %49, !dbg !21
  br label %__nv_tanhf.exit, !dbg !21

__internal_fmad.exit3.i:                          ; preds = %3
  %53 = fmul float %33, %33, !dbg !21
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i = icmp eq i32 %54, 0, !dbg !21
  %55 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %53, float 0xBFAAC795C0000000) #3, !dbg !21
  %56 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %53, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i = select i1 %.not1.i, float %56, float %55, !dbg !21
  %57 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i = icmp eq i32 %57, 0, !dbg !21
  %58 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %53, float 0x3FC10B2820000000) #3, !dbg !21
  %59 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %53, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i = select i1 %.not2.i, float %59, float %58, !dbg !21
  %60 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i = icmp eq i32 %60, 0, !dbg !21
  %61 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %53, float 0xBFD5553DA0000000) #3, !dbg !21
  %62 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %53, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i = select i1 %.not3.i, float %62, float %61, !dbg !21
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i = icmp eq i32 %63, 0, !dbg !21
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %53, float 0.000000e+00) #3, !dbg !21
  %65 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %53, float 0.000000e+00) #3, !dbg !21
  %.04.i = select i1 %.not4.i, float %65, float %64, !dbg !21
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i = icmp eq i32 %66, 0, !dbg !21
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %33, float %33) #3, !dbg !21
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %33, float %33) #3, !dbg !21
  %.02.i = select i1 %.not5.i, float %68, float %67, !dbg !21
  %69 = bitcast float %.02.i to i32, !dbg !23
  br label %__nv_tanhf.exit, !dbg !21

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi i32 [ %52, %__internal_fmad.exit1.i ], [ %69, %__internal_fmad.exit3.i ], !dbg !21
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i1 = icmp eq i32 %70, 0, !dbg !21
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %34) #3, !dbg !21
  %72 = tail call float @llvm.nvvm.fabs.f(float %34) #3, !dbg !21
  %.01.i2 = select i1 %.not.i1, float %72, float %71, !dbg !21
  %73 = fcmp ult float %.01.i2, 0x3FE3333340000000, !dbg !21
  br i1 %73, label %__internal_fmad.exit3.i8, label %__internal_fmad.exit1.i3, !dbg !21

__internal_fmad.exit1.i3:                         ; preds = %__nv_tanhf.exit
  %74 = fmul float %.01.i2, 0x4007154760000000, !dbg !21
  %75 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %74) #3, !dbg !21
  %76 = fadd float %75, 1.000000e+00, !dbg !21
  %77 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %76) #4, !dbg !21, !srcloc !22
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i4 = icmp eq i32 %78, 0, !dbg !21
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %77, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %77, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i5 = select i1 %.not6.i4, float %80, float %79, !dbg !21
  %81 = fcmp oge float %.01.i2, 0x4022059680000000, !dbg !21
  %s.0.i6 = select i1 %81, float 1.000000e+00, float %.03.i5, !dbg !21
  %82 = bitcast float %s.0.i6 to i32, !dbg !21
  %83 = bitcast float %34 to i32, !dbg !21
  %84 = and i32 %83, -2147483648, !dbg !21
  %85 = or i32 %84, %82, !dbg !21
  br label %__nv_tanhf.exit19, !dbg !21

__internal_fmad.exit3.i8:                         ; preds = %__nv_tanhf.exit
  %86 = fmul float %34, %34, !dbg !21
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i9 = icmp eq i32 %87, 0, !dbg !21
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %86, float 0xBFAAC795C0000000) #3, !dbg !21
  %89 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %86, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i10 = select i1 %.not1.i9, float %89, float %88, !dbg !21
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i11 = icmp eq i32 %90, 0, !dbg !21
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i10, float %86, float 0x3FC10B2820000000) #3, !dbg !21
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i10, float %86, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i12 = select i1 %.not2.i11, float %92, float %91, !dbg !21
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i13 = icmp eq i32 %93, 0, !dbg !21
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i12, float %86, float 0xBFD5553DA0000000) #3, !dbg !21
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i12, float %86, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i14 = select i1 %.not3.i13, float %95, float %94, !dbg !21
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i15 = icmp eq i32 %96, 0, !dbg !21
  %97 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i14, float %86, float 0.000000e+00) #3, !dbg !21
  %98 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i14, float %86, float 0.000000e+00) #3, !dbg !21
  %.04.i16 = select i1 %.not4.i15, float %98, float %97, !dbg !21
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i17 = icmp eq i32 %99, 0, !dbg !21
  %100 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i16, float %34, float %34) #3, !dbg !21
  %101 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i16, float %34, float %34) #3, !dbg !21
  %.02.i18 = select i1 %.not5.i17, float %101, float %100, !dbg !21
  %102 = bitcast float %.02.i18 to i32, !dbg !23
  br label %__nv_tanhf.exit19, !dbg !21

__nv_tanhf.exit19:                                ; preds = %__internal_fmad.exit1.i3, %__internal_fmad.exit3.i8
  %s.1.i7 = phi i32 [ %85, %__internal_fmad.exit1.i3 ], [ %102, %__internal_fmad.exit3.i8 ], !dbg !21
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i20 = icmp eq i32 %103, 0, !dbg !21
  %104 = tail call float @llvm.nvvm.fabs.ftz.f(float %35) #3, !dbg !21
  %105 = tail call float @llvm.nvvm.fabs.f(float %35) #3, !dbg !21
  %.01.i21 = select i1 %.not.i20, float %105, float %104, !dbg !21
  %106 = fcmp ult float %.01.i21, 0x3FE3333340000000, !dbg !21
  br i1 %106, label %__internal_fmad.exit3.i27, label %__internal_fmad.exit1.i22, !dbg !21

__internal_fmad.exit1.i22:                        ; preds = %__nv_tanhf.exit19
  %107 = fmul float %.01.i21, 0x4007154760000000, !dbg !21
  %108 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %107) #3, !dbg !21
  %109 = fadd float %108, 1.000000e+00, !dbg !21
  %110 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %109) #4, !dbg !21, !srcloc !22
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i23 = icmp eq i32 %111, 0, !dbg !21
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %110, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %113 = tail call float @llvm.nvvm.fma.rn.f(float %110, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i24 = select i1 %.not6.i23, float %113, float %112, !dbg !21
  %114 = fcmp oge float %.01.i21, 0x4022059680000000, !dbg !21
  %s.0.i25 = select i1 %114, float 1.000000e+00, float %.03.i24, !dbg !21
  %115 = bitcast float %s.0.i25 to i32, !dbg !21
  %116 = bitcast float %35 to i32, !dbg !21
  %117 = and i32 %116, -2147483648, !dbg !21
  %118 = or i32 %117, %115, !dbg !21
  br label %__nv_tanhf.exit38, !dbg !21

__internal_fmad.exit3.i27:                        ; preds = %__nv_tanhf.exit19
  %119 = fmul float %35, %35, !dbg !21
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i28 = icmp eq i32 %120, 0, !dbg !21
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %119, float 0xBFAAC795C0000000) #3, !dbg !21
  %122 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %119, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i29 = select i1 %.not1.i28, float %122, float %121, !dbg !21
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i30 = icmp eq i32 %123, 0, !dbg !21
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i29, float %119, float 0x3FC10B2820000000) #3, !dbg !21
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i29, float %119, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i31 = select i1 %.not2.i30, float %125, float %124, !dbg !21
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i32 = icmp eq i32 %126, 0, !dbg !21
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i31, float %119, float 0xBFD5553DA0000000) #3, !dbg !21
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i31, float %119, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i33 = select i1 %.not3.i32, float %128, float %127, !dbg !21
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i34 = icmp eq i32 %129, 0, !dbg !21
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %119, float 0.000000e+00) #3, !dbg !21
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %119, float 0.000000e+00) #3, !dbg !21
  %.04.i35 = select i1 %.not4.i34, float %131, float %130, !dbg !21
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i36 = icmp eq i32 %132, 0, !dbg !21
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i35, float %35, float %35) #3, !dbg !21
  %134 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i35, float %35, float %35) #3, !dbg !21
  %.02.i37 = select i1 %.not5.i36, float %134, float %133, !dbg !21
  %135 = bitcast float %.02.i37 to i32, !dbg !23
  br label %__nv_tanhf.exit38, !dbg !21

__nv_tanhf.exit38:                                ; preds = %__internal_fmad.exit1.i22, %__internal_fmad.exit3.i27
  %s.1.i26 = phi i32 [ %118, %__internal_fmad.exit1.i22 ], [ %135, %__internal_fmad.exit3.i27 ], !dbg !21
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not.i39 = icmp eq i32 %136, 0, !dbg !21
  %137 = tail call float @llvm.nvvm.fabs.ftz.f(float %36) #3, !dbg !21
  %138 = tail call float @llvm.nvvm.fabs.f(float %36) #3, !dbg !21
  %.01.i40 = select i1 %.not.i39, float %138, float %137, !dbg !21
  %139 = fcmp ult float %.01.i40, 0x3FE3333340000000, !dbg !21
  br i1 %139, label %__internal_fmad.exit3.i46, label %__internal_fmad.exit1.i41, !dbg !21

__internal_fmad.exit1.i41:                        ; preds = %__nv_tanhf.exit38
  %140 = fmul float %.01.i40, 0x4007154760000000, !dbg !21
  %141 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %140) #3, !dbg !21
  %142 = fadd float %141, 1.000000e+00, !dbg !21
  %143 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %142) #4, !dbg !21, !srcloc !22
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not6.i42 = icmp eq i32 %144, 0, !dbg !21
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %143, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %143, float -2.000000e+00, float 1.000000e+00) #3, !dbg !21
  %.03.i43 = select i1 %.not6.i42, float %146, float %145, !dbg !21
  %147 = fcmp oge float %.01.i40, 0x4022059680000000, !dbg !21
  %s.0.i44 = select i1 %147, float 1.000000e+00, float %.03.i43, !dbg !21
  %148 = bitcast float %s.0.i44 to i32, !dbg !21
  %149 = bitcast float %36 to i32, !dbg !21
  %150 = and i32 %149, -2147483648, !dbg !21
  %151 = or i32 %150, %148, !dbg !21
  br label %__nv_tanhf.exit57, !dbg !21

__internal_fmad.exit3.i46:                        ; preds = %__nv_tanhf.exit38
  %152 = fmul float %36, %36, !dbg !21
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not1.i47 = icmp eq i32 %153, 0, !dbg !21
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %152, float 0xBFAAC795C0000000) #3, !dbg !21
  %155 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %152, float 0xBFAAC795C0000000) #3, !dbg !21
  %.06.i48 = select i1 %.not1.i47, float %155, float %154, !dbg !21
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not2.i49 = icmp eq i32 %156, 0, !dbg !21
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i48, float %152, float 0x3FC10B2820000000) #3, !dbg !21
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i48, float %152, float 0x3FC10B2820000000) #3, !dbg !21
  %.05.i50 = select i1 %.not2.i49, float %158, float %157, !dbg !21
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not3.i51 = icmp eq i32 %159, 0, !dbg !21
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i50, float %152, float 0xBFD5553DA0000000) #3, !dbg !21
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i50, float %152, float 0xBFD5553DA0000000) #3, !dbg !21
  %.0.i52 = select i1 %.not3.i51, float %161, float %160, !dbg !21
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not4.i53 = icmp eq i32 %162, 0, !dbg !21
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i52, float %152, float 0.000000e+00) #3, !dbg !21
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i52, float %152, float 0.000000e+00) #3, !dbg !21
  %.04.i54 = select i1 %.not4.i53, float %164, float %163, !dbg !21
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !21
  %.not5.i55 = icmp eq i32 %165, 0, !dbg !21
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i54, float %36, float %36) #3, !dbg !21
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i54, float %36, float %36) #3, !dbg !21
  %.02.i56 = select i1 %.not5.i55, float %167, float %166, !dbg !21
  %168 = bitcast float %.02.i56 to i32, !dbg !23
  br label %__nv_tanhf.exit57, !dbg !21

__nv_tanhf.exit57:                                ; preds = %__internal_fmad.exit1.i41, %__internal_fmad.exit3.i46
  %s.1.i45 = phi i32 [ %151, %__internal_fmad.exit1.i41 ], [ %168, %__internal_fmad.exit3.i46 ], !dbg !21
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %s.1.i, i32 %s.1.i7, i32 %s.1.i26, i32 %s.1.i45, ptr addrspace(1) %13, i1 true) #3, !dbg !23
  ret void, !dbg !24
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cheonzwfft2dd3edoglf6onoayhqa3jkxgs4vyki4tuoh66dyijh.py", directory: "inductor_cache/he")
!4 = !{ptr @triton_poi_fused_convolution_tanh_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_tanh_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_tanh_8", linkageName: "triton_poi_fused_convolution_tanh_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 29, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 18, scope: !7)
!21 = !DILocation(line: 29, column: 26, scope: !7)
!22 = !{i32 21046}
!23 = !DILocation(line: 30, column: 39, scope: !7)
!24 = !DILocation(line: 30, column: 4, scope: !7)
