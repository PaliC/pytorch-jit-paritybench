; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_33(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 14336, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %15 = sdiv i32 %.frozen, 16, !dbg !15
  %16 = srem i32 %15, 224, !dbg !16
  %17 = mul i32 %15, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %17, !dbg !17
  %18 = srem i32 %13, 16, !dbg !17
  %.frozen15 = freeze i32 %12, !dbg !18
  %19 = sdiv i32 %.frozen15, 3584, !dbg !18
  %20 = icmp slt i32 %16, 128, !dbg !19
  %21 = shl nsw i32 %16, 4, !dbg !20
  %22 = mul i32 %19, 3584, !dbg !21
  %srem.decomposed = sub i32 %.frozen15, %22, !dbg !21
  %23 = add nsw i32 %21, %18, !dbg !21
  %24 = shl nsw i32 %19, 11, !dbg !22
  %25 = add nsw i32 %24, %srem.decomposed, !dbg !23
  %26 = add nsw i32 %23, %24, !dbg !23
  %27 = sdiv i32 %25, 2048, !dbg !24
  %28 = sdiv i32 %26, 2048, !dbg !24
  %29 = srem i32 %27, 4, !dbg !25
  %30 = srem i32 %28, 4, !dbg !25
  %31 = shl nsw i32 %29, 11, !dbg !26
  %32 = shl nsw i32 %30, 11, !dbg !26
  %.lhs.trunc = trunc nsw i32 %srem.decomposed to i16, !dbg !27
  %33 = srem i16 %.lhs.trunc, 2048, !dbg !27
  %.sext = sext i16 %33 to i32, !dbg !27
  %.lhs.trunc1 = trunc nsw i32 %23 to i16, !dbg !27
  %34 = srem i16 %.lhs.trunc1, 2048, !dbg !27
  %.sext2 = sext i16 %34 to i32, !dbg !27
  %35 = add nsw i32 %31, %.sext, !dbg !28
  %36 = add nsw i32 %32, %.sext2, !dbg !28
  %37 = sext i32 %35 to i64, !dbg !29
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !29
  %39 = sext i32 %36 to i64, !dbg !29
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !29
  %41 = and i1 %14, %20, !dbg !30
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %41, i32 0, i1 %41) #1, !dbg !31
  %43 = bitcast i32 %42 to float, !dbg !31
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 %41, i32 0, i1 %41) #1, !dbg !31
  %45 = bitcast i32 %44 to float, !dbg !31
  %46 = srem i16 %.lhs.trunc, 32, !dbg !32
  %47 = srem i16 %.lhs.trunc1, 32, !dbg !32
  %48 = sext i16 %46 to i64, !dbg !33
  %49 = getelementptr float, ptr addrspace(1) %1, i64 %48, !dbg !33
  %50 = sext i16 %47 to i64, !dbg !33
  %51 = getelementptr float, ptr addrspace(1) %1, i64 %50, !dbg !33
  %52 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %41, i32 0, i1 %41) #1, !dbg !34
  %53 = bitcast i32 %52 to float, !dbg !34
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %51, i1 %41, i32 0, i1 %41) #1, !dbg !34
  %55 = bitcast i32 %54 to float, !dbg !34
  %56 = fadd float %43, %53, !dbg !35
  %57 = fadd float %45, %55, !dbg !35
  %58 = icmp sgt i32 %16, 127, !dbg !36
  %59 = add nsw i32 %21, -2048, !dbg !37
  %60 = add nsw i32 %59, %.decomposed, !dbg !38
  %61 = add nsw i32 %59, %18, !dbg !38
  %62 = mul nsw i32 %19, 1536, !dbg !39
  %63 = add nsw i32 %60, %62, !dbg !40
  %64 = add nsw i32 %61, %62, !dbg !40
  %65 = sdiv i32 %63, 1536, !dbg !41
  %66 = sdiv i32 %64, 1536, !dbg !41
  %67 = srem i32 %65, 4, !dbg !42
  %68 = srem i32 %66, 4, !dbg !42
  %69 = mul nsw i32 %67, 1536, !dbg !43
  %70 = mul nsw i32 %68, 1536, !dbg !43
  %.lhs.trunc7 = trunc nsw i32 %60 to i16, !dbg !44
  %71 = srem i16 %.lhs.trunc7, 1536, !dbg !44
  %.sext8 = sext i16 %71 to i32, !dbg !44
  %.lhs.trunc9 = trunc nsw i32 %61 to i16, !dbg !44
  %72 = srem i16 %.lhs.trunc9, 1536, !dbg !44
  %.sext10 = sext i16 %72 to i32, !dbg !44
  %73 = add nsw i32 %69, %.sext8, !dbg !45
  %74 = add nsw i32 %70, %.sext10, !dbg !45
  %75 = sext i32 %73 to i64, !dbg !46
  %76 = getelementptr float, ptr addrspace(1) %2, i64 %75, !dbg !46
  %77 = sext i32 %74 to i64, !dbg !46
  %78 = getelementptr float, ptr addrspace(1) %2, i64 %77, !dbg !46
  %79 = and i1 %14, %58, !dbg !47
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %76, i1 %79, i32 0, i1 %79) #1, !dbg !48
  %81 = bitcast i32 %80 to float, !dbg !48
  %82 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %79, i32 0, i1 %79) #1, !dbg !48
  %83 = bitcast i32 %82 to float, !dbg !48
  %84 = srem i16 %.lhs.trunc7, 96, !dbg !49
  %85 = srem i16 %.lhs.trunc9, 96, !dbg !49
  %86 = sext i16 %84 to i64, !dbg !50
  %87 = getelementptr float, ptr addrspace(1) %3, i64 %86, !dbg !50
  %88 = sext i16 %85 to i64, !dbg !50
  %89 = getelementptr float, ptr addrspace(1) %3, i64 %88, !dbg !50
  %90 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %87, i1 %79, i32 0, i1 %79) #1, !dbg !51
  %91 = bitcast i32 %90 to float, !dbg !51
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %89, i1 %79, i32 0, i1 %79) #1, !dbg !51
  %93 = bitcast i32 %92 to float, !dbg !51
  %94 = fadd float %81, %91, !dbg !52
  %95 = fadd float %83, %93, !dbg !52
  %96 = select i1 %20, float %56, float %94, !dbg !53
  %97 = select i1 %20, float %57, float %95, !dbg !53
  %98 = sext i32 %12 to i64, !dbg !54
  %99 = getelementptr float, ptr addrspace(1) %4, i64 %98, !dbg !54
  %100 = bitcast float %96 to i32, !dbg !55
  %101 = bitcast float %97 to i32, !dbg !55
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %100, i32 %101, ptr addrspace(1) %99, i1 %14) #1, !dbg !55
  ret void, !dbg !56
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cquwzjux752ghr2uwny36kfyzzcksx5mwht4e5yf5nl3fvvglt53.py", directory: "inductor_cache/qu")
!4 = !{ptr @triton_poi_fused_cat_33, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_33, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_33", linkageName: "triton_poi_fused_cat_33", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 48, scope: !7)
!21 = !DILocation(line: 33, column: 44, scope: !7)
!22 = !DILocation(line: 33, column: 59, scope: !7)
!23 = !DILocation(line: 33, column: 54, scope: !7)
!24 = !DILocation(line: 33, column: 66, scope: !7)
!25 = !DILocation(line: 33, column: 74, scope: !7)
!26 = !DILocation(line: 33, column: 37, scope: !7)
!27 = !DILocation(line: 33, column: 99, scope: !7)
!28 = !DILocation(line: 33, column: 82, scope: !7)
!29 = !DILocation(line: 33, column: 30, scope: !7)
!30 = !DILocation(line: 33, column: 115, scope: !7)
!31 = !DILocation(line: 33, column: 108, scope: !7)
!32 = !DILocation(line: 34, column: 48, scope: !7)
!33 = !DILocation(line: 34, column: 31, scope: !7)
!34 = !DILocation(line: 34, column: 54, scope: !7)
!35 = !DILocation(line: 35, column: 18, scope: !7)
!36 = !DILocation(line: 38, column: 20, scope: !7)
!37 = !DILocation(line: 41, column: 49, scope: !7)
!38 = !DILocation(line: 41, column: 45, scope: !7)
!39 = !DILocation(line: 41, column: 69, scope: !7)
!40 = !DILocation(line: 41, column: 64, scope: !7)
!41 = !DILocation(line: 41, column: 76, scope: !7)
!42 = !DILocation(line: 41, column: 84, scope: !7)
!43 = !DILocation(line: 41, column: 38, scope: !7)
!44 = !DILocation(line: 41, column: 118, scope: !7)
!45 = !DILocation(line: 41, column: 92, scope: !7)
!46 = !DILocation(line: 41, column: 31, scope: !7)
!47 = !DILocation(line: 41, column: 135, scope: !7)
!48 = !DILocation(line: 41, column: 127, scope: !7)
!49 = !DILocation(line: 42, column: 58, scope: !7)
!50 = !DILocation(line: 42, column: 32, scope: !7)
!51 = !DILocation(line: 42, column: 64, scope: !7)
!52 = !DILocation(line: 43, column: 20, scope: !7)
!53 = !DILocation(line: 0, scope: !7)
!54 = !DILocation(line: 47, column: 25, scope: !7)
!55 = !DILocation(line: 47, column: 37, scope: !7)
!56 = !DILocation(line: 47, column: 4, scope: !7)
