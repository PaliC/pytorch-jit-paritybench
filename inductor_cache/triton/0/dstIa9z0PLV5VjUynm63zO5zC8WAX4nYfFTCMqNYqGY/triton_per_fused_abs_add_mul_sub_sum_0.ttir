#loc = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":19:0)
#loc1 = loc(unknown)
#loc29 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":42:24)
#loc35 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":47:26)
#loc48 = loc(callsite(#loc1 at #loc29))
#loc51 = loc(callsite(#loc1 at #loc35))
module {
  tt.func public @triton_per_fused_abs_add_mul_sub_sum_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<4.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<1x256xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<1x256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<4> : tensor<1x256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<3> : tensor<1x256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<12> : tensor<1x256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<192> : tensor<1x256xi32> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<256xi32> -> tensor<1x256xi32> loc(#loc3)
    %2 = arith.cmpi slt, %1, %cst_6 : tensor<1x256xi32> loc(#loc4)
    %3 = arith.remsi %1, %cst_5 : tensor<1x256xi32> loc(#loc5)
    %4 = arith.divsi %1, %cst_5 : tensor<1x256xi32> loc(#loc6)
    %5 = arith.remsi %1, %cst_4 : tensor<1x256xi32> loc(#loc7)
    %6 = arith.divsi %1, %cst_4 : tensor<1x256xi32> loc(#loc8)
    %7 = arith.addi %3, %cst_3 : tensor<1x256xi32> loc(#loc9)
    %8 = arith.muli %4, %cst_2 : tensor<1x256xi32> loc(#loc10)
    %9 = arith.addi %7, %8 : tensor<1x256xi32> loc(#loc11)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc12)
    %11 = tt.addptr %10, %9 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc12)
    %12 = tt.load %11, %2, %cst_1 : tensor<1x256x!tt.ptr<f32>> loc(#loc13)
    %13 = arith.addi %3, %8 : tensor<1x256xi32> loc(#loc14)
    %14 = tt.addptr %10, %13 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc15)
    %15 = tt.load %14, %2, %cst_1 : tensor<1x256x!tt.ptr<f32>> loc(#loc16)
    %16 = arith.addi %5, %cst_0 : tensor<1x256xi32> loc(#loc17)
    %17 = arith.muli %6, %cst_3 : tensor<1x256xi32> loc(#loc18)
    %18 = arith.addi %16, %17 : tensor<1x256xi32> loc(#loc19)
    %19 = tt.addptr %10, %18 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc20)
    %20 = tt.load %19, %2, %cst_1 : tensor<1x256x!tt.ptr<f32>> loc(#loc21)
    %21 = arith.addi %5, %17 : tensor<1x256xi32> loc(#loc22)
    %22 = tt.addptr %10, %21 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc23)
    %23 = tt.load %22, %2, %cst_1 : tensor<1x256x!tt.ptr<f32>> loc(#loc24)
    %24 = arith.subf %12, %15 : tensor<1x256xf32> loc(#loc25)
    %25 = math.absf %24 : tensor<1x256xf32> loc(#loc26)
    %26 = arith.select %2, %25, %cst_1 : tensor<1x256xi1>, tensor<1x256xf32> loc(#loc27)
    %27 = "tt.reduce"(%26) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc29)), %arg6: f32 loc(callsite(#loc1 at #loc29))):
      %42 = arith.addf %arg5, %arg6 : f32 loc(#loc52)
      tt.reduce.return %42 : f32 loc(#loc47)
    }) : (tensor<1x256xf32>) -> tensor<1xf32> loc(#loc47)
    %28 = tt.expand_dims %27 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc31)
    %29 = arith.subf %20, %23 : tensor<1x256xf32> loc(#loc32)
    %30 = math.absf %29 : tensor<1x256xf32> loc(#loc33)
    %31 = arith.select %2, %30, %cst_1 : tensor<1x256xi1>, tensor<1x256xf32> loc(#loc34)
    %32 = "tt.reduce"(%31) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc35)), %arg6: f32 loc(callsite(#loc1 at #loc35))):
      %42 = arith.addf %arg5, %arg6 : f32 loc(#loc53)
      tt.reduce.return %42 : f32 loc(#loc50)
    }) : (tensor<1x256xf32>) -> tensor<1xf32> loc(#loc50)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc36)
    %34 = arith.addf %28, %33 : tensor<1x1xf32> loc(#loc37)
    %35 = arith.mulf %34, %cst : tensor<1x1xf32> loc(#loc38)
    %36 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc39)
    %37 = tt.addptr %36, %1 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc39)
    tt.store %37, %24, %2 : tensor<1x256x!tt.ptr<f32>> loc(#loc40)
    %38 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x256x!tt.ptr<f32>> loc(#loc41)
    %39 = tt.addptr %38, %1 : tensor<1x256x!tt.ptr<f32>>, tensor<1x256xi32> loc(#loc41)
    tt.store %39, %29, %2 : tensor<1x256x!tt.ptr<f32>> loc(#loc42)
    gpu.barrier loc(#loc43)
    %40 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc44)
    %41 = tt.splat %40 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc44)
    tt.store %41, %35 : tensor<1x1x!tt.ptr<f32>> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":26:26)
#loc3 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":26:34)
#loc4 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":28:21)
#loc5 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":29:19)
#loc6 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":30:19)
#loc7 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":32:19)
#loc8 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":33:19)
#loc9 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":34:34)
#loc10 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":34:42)
#loc11 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":34:39)
#loc12 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":34:30)
#loc13 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":34:47)
#loc14 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":35:35)
#loc15 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":35:30)
#loc16 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":35:43)
#loc17 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":36:34)
#loc18 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":36:41)
#loc19 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":36:39)
#loc20 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":36:30)
#loc21 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":36:46)
#loc22 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":37:35)
#loc23 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":37:30)
#loc24 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":37:42)
#loc25 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":38:18)
#loc26 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":39:23)
#loc27 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":41:33)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc31 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":42:27)
#loc32 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":43:19)
#loc33 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":44:24)
#loc34 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":46:35)
#loc36 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":47:29)
#loc37 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":48:19)
#loc38 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":50:20)
#loc39 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":51:25)
#loc40 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":51:71)
#loc41 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":52:25)
#loc42 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":52:72)
#loc43 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":53:4)
#loc44 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":54:28)
#loc45 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":54:71)
#loc46 = loc("inductor_cache/3i/c3igja72rnmhryfsftiqx5b2w6qf5ucqfo32c42rm2f7gvacruey.py":54:4)
#loc47 = loc(callsite(#loc28 at #loc29))
#loc49 = loc(callsite(#loc30 at #loc28))
#loc50 = loc(callsite(#loc28 at #loc35))
#loc52 = loc(callsite(#loc49 at #loc29))
#loc53 = loc(callsite(#loc49 at #loc35))
