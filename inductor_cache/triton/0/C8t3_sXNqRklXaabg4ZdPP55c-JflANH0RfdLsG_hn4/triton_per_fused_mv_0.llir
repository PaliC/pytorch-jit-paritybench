; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_mv_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %7 = shl i32 %6, 7, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = lshr i32 %8, 4, !dbg !12
  %10 = and i32 %9, 15, !dbg !12
  %11 = or disjoint i32 %10, 16, !dbg !12
  %12 = or disjoint i32 %10, 32, !dbg !12
  %13 = or disjoint i32 %10, 48, !dbg !12
  %14 = or disjoint i32 %10, 64, !dbg !12
  %15 = or disjoint i32 %10, 80, !dbg !12
  %16 = or disjoint i32 %10, 96, !dbg !12
  %17 = or disjoint i32 %10, 112, !dbg !12
  %18 = and i32 %8, 15, !dbg !12
  %19 = and i32 %8, 127, !dbg !12
  %20 = or disjoint i32 %7, %10, !dbg !13
  %21 = or disjoint i32 %7, %11, !dbg !13
  %22 = or disjoint i32 %7, %12, !dbg !13
  %23 = or disjoint i32 %7, %13, !dbg !13
  %24 = or disjoint i32 %7, %14, !dbg !13
  %25 = or disjoint i32 %7, %15, !dbg !13
  %26 = or disjoint i32 %7, %16, !dbg !13
  %27 = or disjoint i32 %7, %17, !dbg !13
  %28 = or disjoint i32 %7, %19, !dbg !13
  %29 = icmp slt i32 %20, 128, !dbg !14
  %30 = icmp slt i32 %21, 128, !dbg !14
  %31 = icmp slt i32 %22, 128, !dbg !14
  %32 = icmp slt i32 %23, 128, !dbg !14
  %33 = icmp slt i32 %24, 128, !dbg !14
  %34 = icmp slt i32 %25, 128, !dbg !14
  %35 = icmp slt i32 %26, 128, !dbg !14
  %36 = icmp slt i32 %27, 128, !dbg !14
  %37 = icmp slt i32 %28, 128, !dbg !14
  %38 = icmp ne i32 %18, 15, !dbg !15
  %39 = mul i32 %20, 15, !dbg !16
  %40 = mul i32 %21, 15, !dbg !16
  %41 = mul i32 %22, 15, !dbg !16
  %42 = mul i32 %23, 15, !dbg !16
  %43 = mul i32 %24, 15, !dbg !16
  %44 = mul i32 %25, 15, !dbg !16
  %45 = mul i32 %26, 15, !dbg !16
  %46 = mul i32 %27, 15, !dbg !16
  %47 = add i32 %39, %18, !dbg !17
  %48 = add i32 %40, %18, !dbg !17
  %49 = add i32 %41, %18, !dbg !17
  %50 = add i32 %42, %18, !dbg !17
  %51 = add i32 %43, %18, !dbg !17
  %52 = add i32 %44, %18, !dbg !17
  %53 = add i32 %45, %18, !dbg !17
  %54 = add i32 %46, %18, !dbg !17
  %55 = sext i32 %47 to i64, !dbg !18
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !18
  %57 = sext i32 %48 to i64, !dbg !18
  %58 = getelementptr float, ptr addrspace(1) %0, i64 %57, !dbg !18
  %59 = sext i32 %49 to i64, !dbg !18
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !18
  %61 = sext i32 %50 to i64, !dbg !18
  %62 = getelementptr float, ptr addrspace(1) %0, i64 %61, !dbg !18
  %63 = sext i32 %51 to i64, !dbg !18
  %64 = getelementptr float, ptr addrspace(1) %0, i64 %63, !dbg !18
  %65 = sext i32 %52 to i64, !dbg !18
  %66 = getelementptr float, ptr addrspace(1) %0, i64 %65, !dbg !18
  %67 = sext i32 %53 to i64, !dbg !18
  %68 = getelementptr float, ptr addrspace(1) %0, i64 %67, !dbg !18
  %69 = sext i32 %54 to i64, !dbg !18
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !18
  %71 = and i1 %38, %29, !dbg !19
  %72 = and i1 %38, %30, !dbg !19
  %73 = and i1 %38, %31, !dbg !19
  %74 = and i1 %38, %32, !dbg !19
  %75 = and i1 %38, %33, !dbg !19
  %76 = and i1 %38, %34, !dbg !19
  %77 = and i1 %38, %35, !dbg !19
  %78 = and i1 %38, %36, !dbg !19
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %71, i32 0, i1 %71) #3, !dbg !20
  %80 = bitcast i32 %79 to float, !dbg !20
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %58, i1 %72, i32 0, i1 %72) #3, !dbg !20
  %82 = bitcast i32 %81 to float, !dbg !20
  %83 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %60, i1 %73, i32 0, i1 %73) #3, !dbg !20
  %84 = bitcast i32 %83 to float, !dbg !20
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %74, i32 0, i1 %74) #3, !dbg !20
  %86 = bitcast i32 %85 to float, !dbg !20
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %75, i32 0, i1 %75) #3, !dbg !20
  %88 = bitcast i32 %87 to float, !dbg !20
  %89 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %76, i32 0, i1 %76) #3, !dbg !20
  %90 = bitcast i32 %89 to float, !dbg !20
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %68, i1 %77, i32 0, i1 %77) #3, !dbg !20
  %92 = bitcast i32 %91 to float, !dbg !20
  %93 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %70, i1 %78, i32 0, i1 %78) #3, !dbg !20
  %94 = bitcast i32 %93 to float, !dbg !20
  %95 = zext nneg i32 %18 to i64, !dbg !21
  %96 = getelementptr float, ptr addrspace(1) %1, i64 %95, !dbg !21
  %97 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %96, i1 %38, i32 0, i1 %38) #3, !dbg !22
  %98 = bitcast i32 %97 to float, !dbg !22
  %99 = fmul float %80, %98, !dbg !23
  %100 = fmul float %82, %98, !dbg !23
  %101 = fmul float %84, %98, !dbg !23
  %102 = fmul float %86, %98, !dbg !23
  %103 = fmul float %88, %98, !dbg !23
  %104 = fmul float %90, %98, !dbg !23
  %105 = fmul float %92, %98, !dbg !23
  %106 = fmul float %94, %98, !dbg !23
  %107 = select i1 %71, float %99, float 0.000000e+00, !dbg !24
  %108 = select i1 %72, float %100, float 0.000000e+00, !dbg !24
  %109 = select i1 %73, float %101, float 0.000000e+00, !dbg !24
  %110 = select i1 %74, float %102, float 0.000000e+00, !dbg !24
  %111 = select i1 %75, float %103, float 0.000000e+00, !dbg !24
  %112 = select i1 %76, float %104, float 0.000000e+00, !dbg !24
  %113 = select i1 %77, float %105, float 0.000000e+00, !dbg !24
  %114 = select i1 %78, float %106, float 0.000000e+00, !dbg !24
  %115 = bitcast float %107 to i32, !dbg !25
  %116 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %115, i32 8, i32 31), !dbg !25
  %117 = bitcast i32 %116 to float, !dbg !25
  %118 = fadd float %107, %117, !dbg !29
  %119 = bitcast float %118 to i32, !dbg !25
  %120 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %119, i32 4, i32 31), !dbg !25
  %121 = bitcast i32 %120 to float, !dbg !25
  %122 = fadd float %118, %121, !dbg !29
  %123 = bitcast float %122 to i32, !dbg !25
  %124 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %123, i32 2, i32 31), !dbg !25
  %125 = bitcast i32 %124 to float, !dbg !25
  %126 = fadd float %122, %125, !dbg !29
  %127 = bitcast float %126 to i32, !dbg !25
  %128 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %127, i32 1, i32 31), !dbg !25
  %129 = bitcast i32 %128 to float, !dbg !25
  %130 = fadd float %126, %129, !dbg !29
  %131 = bitcast float %108 to i32, !dbg !25
  %132 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %131, i32 8, i32 31), !dbg !25
  %133 = bitcast i32 %132 to float, !dbg !25
  %134 = fadd float %108, %133, !dbg !29
  %135 = bitcast float %134 to i32, !dbg !25
  %136 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %135, i32 4, i32 31), !dbg !25
  %137 = bitcast i32 %136 to float, !dbg !25
  %138 = fadd float %134, %137, !dbg !29
  %139 = bitcast float %138 to i32, !dbg !25
  %140 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %139, i32 2, i32 31), !dbg !25
  %141 = bitcast i32 %140 to float, !dbg !25
  %142 = fadd float %138, %141, !dbg !29
  %143 = bitcast float %142 to i32, !dbg !25
  %144 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %143, i32 1, i32 31), !dbg !25
  %145 = bitcast i32 %144 to float, !dbg !25
  %146 = fadd float %142, %145, !dbg !29
  %147 = bitcast float %109 to i32, !dbg !25
  %148 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %147, i32 8, i32 31), !dbg !25
  %149 = bitcast i32 %148 to float, !dbg !25
  %150 = fadd float %109, %149, !dbg !29
  %151 = bitcast float %150 to i32, !dbg !25
  %152 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %151, i32 4, i32 31), !dbg !25
  %153 = bitcast i32 %152 to float, !dbg !25
  %154 = fadd float %150, %153, !dbg !29
  %155 = bitcast float %154 to i32, !dbg !25
  %156 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %155, i32 2, i32 31), !dbg !25
  %157 = bitcast i32 %156 to float, !dbg !25
  %158 = fadd float %154, %157, !dbg !29
  %159 = bitcast float %158 to i32, !dbg !25
  %160 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %159, i32 1, i32 31), !dbg !25
  %161 = bitcast i32 %160 to float, !dbg !25
  %162 = fadd float %158, %161, !dbg !29
  %163 = bitcast float %110 to i32, !dbg !25
  %164 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %163, i32 8, i32 31), !dbg !25
  %165 = bitcast i32 %164 to float, !dbg !25
  %166 = fadd float %110, %165, !dbg !29
  %167 = bitcast float %166 to i32, !dbg !25
  %168 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %167, i32 4, i32 31), !dbg !25
  %169 = bitcast i32 %168 to float, !dbg !25
  %170 = fadd float %166, %169, !dbg !29
  %171 = bitcast float %170 to i32, !dbg !25
  %172 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %171, i32 2, i32 31), !dbg !25
  %173 = bitcast i32 %172 to float, !dbg !25
  %174 = fadd float %170, %173, !dbg !29
  %175 = bitcast float %174 to i32, !dbg !25
  %176 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %175, i32 1, i32 31), !dbg !25
  %177 = bitcast i32 %176 to float, !dbg !25
  %178 = fadd float %174, %177, !dbg !29
  %179 = bitcast float %111 to i32, !dbg !25
  %180 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %179, i32 8, i32 31), !dbg !25
  %181 = bitcast i32 %180 to float, !dbg !25
  %182 = fadd float %111, %181, !dbg !29
  %183 = bitcast float %182 to i32, !dbg !25
  %184 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %183, i32 4, i32 31), !dbg !25
  %185 = bitcast i32 %184 to float, !dbg !25
  %186 = fadd float %182, %185, !dbg !29
  %187 = bitcast float %186 to i32, !dbg !25
  %188 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %187, i32 2, i32 31), !dbg !25
  %189 = bitcast i32 %188 to float, !dbg !25
  %190 = fadd float %186, %189, !dbg !29
  %191 = bitcast float %190 to i32, !dbg !25
  %192 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %191, i32 1, i32 31), !dbg !25
  %193 = bitcast i32 %192 to float, !dbg !25
  %194 = fadd float %190, %193, !dbg !29
  %195 = bitcast float %112 to i32, !dbg !25
  %196 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %195, i32 8, i32 31), !dbg !25
  %197 = bitcast i32 %196 to float, !dbg !25
  %198 = fadd float %112, %197, !dbg !29
  %199 = bitcast float %198 to i32, !dbg !25
  %200 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %199, i32 4, i32 31), !dbg !25
  %201 = bitcast i32 %200 to float, !dbg !25
  %202 = fadd float %198, %201, !dbg !29
  %203 = bitcast float %202 to i32, !dbg !25
  %204 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %203, i32 2, i32 31), !dbg !25
  %205 = bitcast i32 %204 to float, !dbg !25
  %206 = fadd float %202, %205, !dbg !29
  %207 = bitcast float %206 to i32, !dbg !25
  %208 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %207, i32 1, i32 31), !dbg !25
  %209 = bitcast i32 %208 to float, !dbg !25
  %210 = fadd float %206, %209, !dbg !29
  %211 = bitcast float %113 to i32, !dbg !25
  %212 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %211, i32 8, i32 31), !dbg !25
  %213 = bitcast i32 %212 to float, !dbg !25
  %214 = fadd float %113, %213, !dbg !29
  %215 = bitcast float %214 to i32, !dbg !25
  %216 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %215, i32 4, i32 31), !dbg !25
  %217 = bitcast i32 %216 to float, !dbg !25
  %218 = fadd float %214, %217, !dbg !29
  %219 = bitcast float %218 to i32, !dbg !25
  %220 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %219, i32 2, i32 31), !dbg !25
  %221 = bitcast i32 %220 to float, !dbg !25
  %222 = fadd float %218, %221, !dbg !29
  %223 = bitcast float %222 to i32, !dbg !25
  %224 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %223, i32 1, i32 31), !dbg !25
  %225 = bitcast i32 %224 to float, !dbg !25
  %226 = fadd float %222, %225, !dbg !29
  %227 = bitcast float %114 to i32, !dbg !25
  %228 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %227, i32 8, i32 31), !dbg !25
  %229 = bitcast i32 %228 to float, !dbg !25
  %230 = fadd float %114, %229, !dbg !29
  %231 = bitcast float %230 to i32, !dbg !25
  %232 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %231, i32 4, i32 31), !dbg !25
  %233 = bitcast i32 %232 to float, !dbg !25
  %234 = fadd float %230, %233, !dbg !29
  %235 = bitcast float %234 to i32, !dbg !25
  %236 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %235, i32 2, i32 31), !dbg !25
  %237 = bitcast i32 %236 to float, !dbg !25
  %238 = fadd float %234, %237, !dbg !29
  %239 = bitcast float %238 to i32, !dbg !25
  %240 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %239, i32 1, i32 31), !dbg !25
  %241 = bitcast i32 %240 to float, !dbg !25
  %242 = fadd float %238, %241, !dbg !29
  %243 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !31
  %244 = bitcast float %130 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %243, <1 x i32> %244, i1 true) #3, !dbg !31
  %245 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !31
  %246 = bitcast float %146 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %245, <1 x i32> %246, i1 true) #3, !dbg !31
  %247 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %12, !dbg !31
  %248 = bitcast float %162 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %247, <1 x i32> %248, i1 true) #3, !dbg !31
  %249 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %13, !dbg !31
  %250 = bitcast float %178 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %249, <1 x i32> %250, i1 true) #3, !dbg !31
  %251 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %14, !dbg !31
  %252 = bitcast float %194 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %251, <1 x i32> %252, i1 true) #3, !dbg !31
  %253 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %15, !dbg !31
  %254 = bitcast float %210 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %253, <1 x i32> %254, i1 true) #3, !dbg !31
  %255 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %16, !dbg !31
  %256 = bitcast float %226 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %255, <1 x i32> %256, i1 true) #3, !dbg !31
  %257 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %17, !dbg !31
  %258 = bitcast float %242 to <1 x i32>, !dbg !31
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %257, <1 x i32> %258, i1 true) #3, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %259 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %19, !dbg !31
  %260 = load i32, ptr addrspace(3) %259, align 4, !dbg !31
  %261 = sext i32 %28 to i64, !dbg !32
  %262 = getelementptr float, ptr addrspace(1) %2, i64 %261, !dbg !32
  %263 = and i32 %8, 128, !dbg !33
  %264 = icmp eq i32 %263, 0, !dbg !33
  %265 = and i1 %264, %37, !dbg !33
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %260, ptr addrspace(1) %262, i1 %265) #3, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cliqf6vwvkgqzazlb2utq2g46t7jhkkr2dedr6txkfoore2v5vmh.py", directory: "inductor_cache/li")
!4 = !{ptr @triton_per_fused_mv_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_mv_0, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_mv_0", linkageName: "triton_per_fused_mv_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 28, column: 21, scope: !7)
!16 = !DILocation(line: 31, column: 38, scope: !7)
!17 = !DILocation(line: 31, column: 35, scope: !7)
!18 = !DILocation(line: 31, column: 30, scope: !7)
!19 = !DILocation(line: 31, column: 51, scope: !7)
!20 = !DILocation(line: 31, column: 43, scope: !7)
!21 = !DILocation(line: 32, column: 30, scope: !7)
!22 = !DILocation(line: 32, column: 35, scope: !7)
!23 = !DILocation(line: 33, column: 18, scope: !7)
!24 = !DILocation(line: 35, column: 41, scope: !7)
!25 = !DILocation(line: 267, column: 36, scope: !26, inlinedAt: !28)
!26 = distinct !DILexicalBlockFile(scope: !7, file: !27, discriminator: 0)
!27 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!28 = !DILocation(line: 36, column: 24, scope: !7)
!29 = !DILocation(line: 256, column: 15, scope: !30, inlinedAt: !28)
!30 = distinct !DILexicalBlockFile(scope: !26, file: !27, discriminator: 0)
!31 = !DILocation(line: 36, column: 27, scope: !7)
!32 = !DILocation(line: 37, column: 25, scope: !7)
!33 = !DILocation(line: 37, column: 36, scope: !7)
!34 = !DILocation(line: 37, column: 4, scope: !7)
