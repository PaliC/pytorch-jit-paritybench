; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_cat_mean_relu_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 5, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 31, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 32, !dbg !14
  %.frozen = freeze i32 %8, !dbg !15
  %10 = sdiv i32 %.frozen, 8, !dbg !15
  %11 = mul i32 %10, 8, !dbg !16
  %.decomposed = sub i32 %.frozen, %11, !dbg !16
  %12 = shl nsw i32 %10, 2, !dbg !17
  %13 = sext i32 %12 to i64, !dbg !18
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !18
  %15 = getelementptr i8, ptr addrspace(1) %14, i64 128, !dbg !18
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %15, i1 %9) #1, !dbg !19
  %17 = bitcast i32 %16 to float, !dbg !19
  %18 = getelementptr i8, ptr addrspace(1) %14, i64 132, !dbg !20
  %19 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %18, i1 %9) #1, !dbg !21
  %20 = bitcast i32 %19 to float, !dbg !21
  %21 = getelementptr i8, ptr addrspace(1) %14, i64 136, !dbg !22
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %9) #1, !dbg !23
  %23 = bitcast i32 %22 to float, !dbg !23
  %24 = getelementptr i8, ptr addrspace(1) %14, i64 140, !dbg !24
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %9) #1, !dbg !25
  %26 = bitcast i32 %25 to float, !dbg !25
  %27 = fadd float %17, %20, !dbg !26
  %28 = fadd float %27, %23, !dbg !27
  %29 = fadd float %28, %26, !dbg !28
  %30 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %29, float 4.000000e+00) #1, !dbg !29
  %31 = fcmp olt float %30, 0.000000e+00, !dbg !30
  %32 = select i1 %31, float 0.000000e+00, float %30, !dbg !34
  %33 = icmp slt i32 %.decomposed, 4, !dbg !35
  %34 = add nsw i32 %12, %.decomposed, !dbg !36
  %35 = sext i32 %34 to i64, !dbg !37
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !37
  %37 = and i1 %9, %33, !dbg !38
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %36, i1 %37, i32 0, i1 %37) #1, !dbg !39
  %39 = bitcast i32 %38 to float, !dbg !39
  %40 = icmp sgt i32 %.decomposed, 3, !dbg !40
  %41 = getelementptr i8, ptr addrspace(1) %36, i64 48, !dbg !41
  %42 = and i1 %9, %40, !dbg !42
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %42, i32 0, i1 %42) #1, !dbg !43
  %44 = bitcast i32 %43 to float, !dbg !43
  %45 = fcmp olt float %44, 0.000000e+00, !dbg !44
  %46 = select i1 %45, float 0.000000e+00, float %44, !dbg !46
  %47 = select i1 %33, float %39, float %46, !dbg !47
  %48 = fadd float %32, %47, !dbg !48
  %49 = sext i32 %8 to i64, !dbg !49
  %50 = getelementptr float, ptr addrspace(1) %1, i64 %49, !dbg !49
  %51 = bitcast float %48 to i32, !dbg !50
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %51, ptr addrspace(1) %50, i1 %9) #1, !dbg !50
  ret void, !dbg !51
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7gmc3d5p4utjn63kuanvl4jz6tstgvuyzvoa4kv4ebt37fpliaj.py", directory: "inductor_cache/7g")
!4 = !{ptr @triton_poi_fused_add_cat_mean_relu_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_mean_relu_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_mean_relu_0", linkageName: "triton_poi_fused_add_cat_mean_relu_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 37, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 42, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 42, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 42, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 42, scope: !7)
!26 = !DILocation(line: 31, column: 18, scope: !7)
!27 = !DILocation(line: 32, column: 18, scope: !7)
!28 = !DILocation(line: 33, column: 18, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !33)
!31 = distinct !DILexicalBlockFile(scope: !7, file: !32, discriminator: 0)
!32 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!33 = !DILocation(line: 37, column: 41, scope: !7)
!34 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !33)
!35 = !DILocation(line: 42, column: 20, scope: !7)
!36 = !DILocation(line: 43, column: 39, scope: !7)
!37 = !DILocation(line: 43, column: 31, scope: !7)
!38 = !DILocation(line: 43, column: 53, scope: !7)
!39 = !DILocation(line: 43, column: 45, scope: !7)
!40 = !DILocation(line: 44, column: 21, scope: !7)
!41 = !DILocation(line: 47, column: 31, scope: !7)
!42 = !DILocation(line: 47, column: 65, scope: !7)
!43 = !DILocation(line: 47, column: 57, scope: !7)
!44 = !DILocation(line: 118, column: 15, scope: !31, inlinedAt: !45)
!45 = !DILocation(line: 49, column: 42, scope: !7)
!46 = !DILocation(line: 121, column: 29, scope: !31, inlinedAt: !45)
!47 = !DILocation(line: 52, column: 35, scope: !7)
!48 = !DILocation(line: 53, column: 20, scope: !7)
!49 = !DILocation(line: 54, column: 25, scope: !7)
!50 = !DILocation(line: 54, column: 37, scope: !7)
!51 = !DILocation(line: 54, column: 4, scope: !7)
