//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_7,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_8
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<53>;
	.reg .f32 	%f<18>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_0];
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 24 21                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:24:21
	setp.lt.s32 	%p3, %r1, 128;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_2];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_3];
	.loc	1 25 28                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:25:33
	shl.b32 	%r24, %r2, 8;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_4];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_5];
	.loc	1 26 44                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:26:44
	mov.u32 	%r25, %tid.x;
	shl.b32 	%r26, %r25, 1;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_convolution_relu_6_param_6];
	and.b32  	%r27, %r26, 254;
	.loc	1 26 23                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:26:23
	or.b32  	%r28, %r24, %r27;
	.loc	1 27 21                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:27:21
	setp.lt.s32 	%p16, %r28, 256;
	.loc	1 30 19                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:30:19
	shr.s32 	%r29, %r1, 31;
	shr.u32 	%r30, %r29, 27;
	add.s32 	%r31, %r1, %r30;
	.loc	1 29 19                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:29:19
	and.b32  	%r32, %r31, -32;
	sub.s32 	%r33, %r1, %r32;
	.loc	1 26 23                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:26:23
	shl.b32 	%r34, %r28, 5;
	.loc	1 32 48                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:48
	shl.b32 	%r35, %r31, 8;
	and.b32  	%r36, %r35, -8192;
	.loc	1 32 35                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:35
	add.s32 	%r37, %r36, %r33;
	.loc	1 32 43                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:43
	add.s32 	%r38, %r37, %r34;
	add.s32 	%r39, %r38, 32;
	.loc	1 32 30                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:30
	mul.wide.s32 	%rd21, %r38, 4;
	add.s64 	%rd1, %rd14, %rd21;
	mul.wide.s32 	%rd22, %r39, 4;
	add.s64 	%rd2, %rd14, %rd22;
	.loc	1 32 61                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:61
	and.pred  	%p1, %p3, %p16;
	.loc	1 32 53                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:53
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:33:30
	mul.wide.s32 	%rd23, %r33, 4;
	add.s64 	%rd3, %rd15, %rd23;
	.loc	1 33 35                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r6 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 34 30                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:34:30
	add.s64 	%rd5, %rd16, %rd23;
	.loc	1 34 35                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:34:35
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r8 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	.loc	1 35 31                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:35:31
	add.s64 	%rd7, %rd17, %rd23;
	.loc	1 35 36                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:35:36
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r10 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:36:31
	add.s64 	%rd9, %rd18, %rd23;
	.loc	1 36 36                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:36:36
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 39 18                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:39:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 40 26                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:40:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 32 53                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:53
	mov.b32 	%f4, %r4;
	.loc	1 33 35                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:33:35
	mov.b32 	%f5, %r6;
	.loc	1 37 18                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:37:18
	sub.f32 	%f6, %f4, %f5;
	.loc	1 32 53                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:53
	mov.b32 	%f7, %r3;
	.loc	1 37 18                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:37:18
	sub.f32 	%f8, %f7, %f5;
	.loc	1 36 36                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:36:36
	mov.b32 	%f9, %r12;
	.loc	1 35 36                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:35:36
	mov.b32 	%f10, %r10;
	.loc	1 26 44                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:26:44
	and.b32  	%r40, %r25, 127;
	.loc	1 26 23                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:26:23
	or.b32  	%r41, %r24, %r40;
	or.b32  	%r42, %r41, 128;
	.loc	1 27 21                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:27:21
	setp.lt.s32 	%p17, %r42, 256;
	.loc	1 32 61                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:61
	and.pred  	%p15, %p3, %p17;
	.loc	1 27 21                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:27:21
	setp.lt.s32 	%p18, %r41, 256;
	.loc	1 32 61                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:61
	and.pred  	%p14, %p3, %p18;
	.loc	1 32 38                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:38
	shl.b32 	%r43, %r42, 5;
	.loc	1 32 43                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:43
	add.s32 	%r44, %r37, %r43;
	.loc	1 32 38                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:38
	shl.b32 	%r45, %r41, 5;
	.loc	1 32 43                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:32:43
	add.s32 	%r46, %r37, %r45;
	.loc	1 42 18                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:42:18
	mov.b32 	%r15, %f3;
	mov.b32 	%r14, 1065353216;
	// begin inline asm
	div.full.f32 %r13, %r14, %r15;
	// end inline asm
	mov.b32 	%f11, %r13;
	.loc	1 45 19                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:45:19
	mul.f32 	%f12, %f8, %f11;
	mul.f32 	%f13, %f6, %f11;
	.loc	1 47 20                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:47:20
	fma.rn.f32 	%f14, %f12, %f10, %f9;
	fma.rn.f32 	%f15, %f13, %f10, %f9;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p19, %f14, 0f00000000;
	setp.lt.f32 	%p20, %f15, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f16, 0f00000000, %f14, %p19;
	selp.f32 	%f17, 0f00000000, %f15, %p20;
$L__tmp2:
	.loc	1 50 34                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:50:34
	shl.b32 	%r47, %r1, 8;
	.loc	1 50 30                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:50:30
	add.s32 	%r48, %r28, %r47;
	.loc	1 50 25                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:50:25
	mul.wide.s32 	%rd24, %r48, 4;
	add.s64 	%rd11, %rd19, %rd24;
	.loc	1 50 46                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:50:46
	mov.b32 	%r16, %f16;
	mov.b32 	%r17, %f17;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r16, %r17 };
	// end inline asm
	.loc	1 51 25                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:51:25
	mul.wide.s32 	%rd25, %r46, 4;
	add.s64 	%rd12, %rd20, %rd25;
	mul.wide.s32 	%rd26, %r44, 4;
	add.s64 	%rd13, %rd20, %rd26;
	.loc	1 51 55                         // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:51:55
	shl.b32 	%r49, %r27, 2;
	mov.u32 	%r50, global_smem;
	add.s32 	%r18, %r50, %r49;
	mov.pred 	%p12, -1;
	// begin inline asm
	@%p12 st.shared.b32 [ %r18 + 0 ], %r16;
	// end inline asm
	add.s32 	%r20, %r18, 4;
	// begin inline asm
	@%p12 st.shared.b32 [ %r20 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r51, %r40, 2;
	add.s32 	%r52, %r50, %r51;
	ld.shared.u32 	%r22, [%r52];
	ld.shared.u32 	%r23, [%r52+512];
	// begin inline asm
	@%p14 st.global.b32 [ %rd12 + 0 ], { %r22 };
	// end inline asm
	// begin inline asm
	@%p15 st.global.b32 [ %rd13 + 0 ], { %r23 };
	// end inline asm
	.loc	1 51 4                          // crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py:51:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rz/crz5iqcytsaetffnnuajrettrt3fm6jdvqeh6jotzdlttohjdpjg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 122
.b8 53
.b8 105
.b8 113
.b8 99
.b8 121
.b8 116
.b8 115
.b8 97
.b8 101
.b8 116
.b8 102
.b8 102
.b8 110
.b8 110
.b8 117
.b8 97
.b8 106
.b8 114
.b8 101
.b8 116
.b8 116
.b8 114
.b8 116
.b8 51
.b8 102
.b8 109
.b8 54
.b8 106
.b8 100
.b8 118
.b8 113
.b8 101
.b8 104
.b8 54
.b8 106
.b8 111
.b8 116
.b8 122
.b8 100
.b8 108
.b8 116
.b8 116
.b8 111
.b8 104
.b8 106
.b8 100
.b8 112
.b8 106
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 122
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x4b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xae:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
