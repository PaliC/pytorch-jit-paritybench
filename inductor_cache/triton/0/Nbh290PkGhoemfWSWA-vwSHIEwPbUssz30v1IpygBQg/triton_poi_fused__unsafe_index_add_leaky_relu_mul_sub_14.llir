; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_14(ptr addrspace(1) %0, ptr addrspace(1) nocapture readnone %1, ptr addrspace(1) nocapture readnone %2, ptr addrspace(1) %3, ptr addrspace(1) nocapture readnone %4, ptr addrspace(1) %5, ptr addrspace(1) nocapture readnone %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = icmp slt i32 %15, 1024, !dbg !14
  %17 = ashr exact i32 %15, 1, !dbg !15
  %18 = srem i32 %17, 2, !dbg !16
  %19 = sdiv i32 %15, 4, !dbg !17
  %20 = sext i32 %19 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %16) #1, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %16) #1, !dbg !19
  %25 = bitcast i32 %24 to float, !dbg !19
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %5, i1 %16) #1, !dbg !20
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !20
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !20
  %29 = bitcast i32 %27 to float, !dbg !20
  %30 = bitcast i32 %28 to float, !dbg !20
  %31 = sext i32 %18 to i64, !dbg !21
  %32 = getelementptr float, ptr addrspace(1) %7, i64 %31, !dbg !21
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %16) #1, !dbg !22
  %34 = bitcast i32 %33 to float, !dbg !22
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %32, i1 %16) #1, !dbg !22
  %36 = bitcast i32 %35 to float, !dbg !22
  %37 = fcmp ogt float %23, 0.000000e+00, !dbg !23
  %38 = fcmp ogt float %25, 0.000000e+00, !dbg !23
  %39 = fmul float %23, 0x3FC99999A0000000, !dbg !24
  %40 = fmul float %25, 0x3FC99999A0000000, !dbg !24
  %41 = select i1 %37, float %23, float %39, !dbg !25
  %42 = select i1 %38, float %25, float %40, !dbg !25
  %43 = fsub float %41, %41, !dbg !26
  %44 = fsub float %42, %42, !dbg !26
  %45 = fmul float %43, %29, !dbg !27
  %46 = fmul float %44, %30, !dbg !27
  %47 = fadd float %41, %45, !dbg !28
  %48 = fadd float %42, %46, !dbg !28
  %49 = fsub float %47, %47, !dbg !29
  %50 = fsub float %48, %48, !dbg !29
  %51 = fmul float %49, %34, !dbg !30
  %52 = fmul float %50, %36, !dbg !30
  %53 = fadd float %47, %51, !dbg !31
  %54 = fadd float %48, %52, !dbg !31
  %55 = sext i32 %15 to i64, !dbg !32
  %56 = getelementptr float, ptr addrspace(1) %0, i64 %55, !dbg !32
  %57 = bitcast float %53 to i32, !dbg !33
  %58 = bitcast float %54 to i32, !dbg !33
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %57, i32 %58, ptr addrspace(1) %56, i1 %16) #1, !dbg !33
  ret void, !dbg !34
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cihctnbhfizfhhdhi7qu4zghhh3koppzy2gthtlsgpapr2g2h4lx.py", directory: "inductor_cache/ih")
!4 = !{ptr @triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_14, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_14, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_14", linkageName: "triton_poi_fused__unsafe_index_add_leaky_relu_mul_sub_14", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 30, column: 30, scope: !7)
!19 = !DILocation(line: 30, column: 35, scope: !7)
!20 = !DILocation(line: 32, column: 36, scope: !7)
!21 = !DILocation(line: 34, column: 31, scope: !7)
!22 = !DILocation(line: 34, column: 36, scope: !7)
!23 = !DILocation(line: 43, column: 19, scope: !7)
!24 = !DILocation(line: 45, column: 19, scope: !7)
!25 = !DILocation(line: 46, column: 34, scope: !7)
!26 = !DILocation(line: 50, column: 20, scope: !7)
!27 = !DILocation(line: 51, column: 20, scope: !7)
!28 = !DILocation(line: 52, column: 20, scope: !7)
!29 = !DILocation(line: 56, column: 20, scope: !7)
!30 = !DILocation(line: 57, column: 20, scope: !7)
!31 = !DILocation(line: 58, column: 20, scope: !7)
!32 = !DILocation(line: 59, column: 28, scope: !7)
!33 = !DILocation(line: 59, column: 40, scope: !7)
!34 = !DILocation(line: 59, column: 4, scope: !7)
