; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = or disjoint i32 %10, 1, !dbg !13
  %12 = icmp slt i32 %10, 576, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %13 = sdiv i32 %.frozen, 144, !dbg !15
  %14 = mul i32 %13, 144, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = srem i32 %11, 144, !dbg !16
  %16 = icmp slt i32 %.decomposed, 16, !dbg !17
  %17 = shl nsw i32 %13, 4, !dbg !18
  %18 = add nsw i32 %17, %.decomposed, !dbg !19
  %19 = sext i32 %18 to i64, !dbg !20
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !20
  %21 = and i1 %12, %16, !dbg !21
  %22 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %20, i1 %21, i32 0, i1 %21, i32 0, i1 %21) #4, !dbg !22
  %23 = add nsw i32 %.decomposed, -16, !dbg !23
  %24 = icmp ult i32 %23, 64, !dbg !24
  %.lhs.trunc = trunc nsw i32 %23 to i16, !dbg !25
  %25 = sdiv i16 %.lhs.trunc, 16, !dbg !26
  %26 = mul i16 %25, 16, !dbg !25
  %.decomposed210 = sub i16 %.lhs.trunc, %26, !dbg !25
  %.sext = sext i16 %.decomposed210 to i32, !dbg !25
  %27 = trunc nsw i32 %15 to i16, !dbg !25
  %.lhs.trunc164 = add nsw i16 %27, -16, !dbg !25
  %.lhs.trunc164.frozen = freeze i16 %.lhs.trunc164, !dbg !26
  %28 = sdiv i16 %.lhs.trunc164.frozen, 16, !dbg !26
  %29 = mul i16 %28, 16, !dbg !25
  %.decomposed211 = sub i16 %.lhs.trunc164.frozen, %29, !dbg !25
  %.sext165 = sext i16 %.decomposed211 to i32, !dbg !25
  %30 = add nsw i32 %17, %.sext, !dbg !27
  %31 = add nsw i32 %17, %.sext165, !dbg !27
  %32 = sext i32 %30 to i64, !dbg !28
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !28
  %34 = sext i32 %31 to i64, !dbg !28
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !28
  %36 = and i1 %12, %24, !dbg !29
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %36, i32 0, i1 %36) #4, !dbg !30
  %38 = bitcast i32 %37 to float, !dbg !30
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %36, i32 0, i1 %36) #4, !dbg !30
  %40 = bitcast i32 %39 to float, !dbg !30
  %.lhs.trunc170 = trunc nsw i16 %25 to i8, !dbg !31
  %41 = srem i8 %.lhs.trunc170, 4, !dbg !31
  %.lhs.trunc172 = trunc nsw i16 %28 to i8, !dbg !31
  %42 = srem i8 %.lhs.trunc172, 4, !dbg !31
  %43 = sext i8 %41 to i64, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %43, !dbg !32
  %45 = sext i8 %42 to i64, !dbg !32
  %46 = getelementptr float, ptr addrspace(1) %1, i64 %45, !dbg !32
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %36, i32 0, i1 %36) #4, !dbg !33
  %48 = bitcast i32 %47 to float, !dbg !33
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %36, i32 0, i1 %36) #4, !dbg !33
  %50 = bitcast i32 %49 to float, !dbg !33
  %51 = fmul float %38, %48, !dbg !34
  %52 = fmul float %40, %50, !dbg !34
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !35
  %53 = fmul float %51, 0x3FE45F3060000000, !dbg !35
  %54 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i = icmp eq i32 %54, 0, !dbg !35
  %55 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %53) #4, !dbg !35
  %56 = tail call i32 @llvm.nvvm.f2i.rn(float %53) #4, !dbg !35
  %.01.i = select i1 %.not.i, i32 %56, i32 %55, !dbg !35
  %57 = sitofp i32 %.01.i to float, !dbg !35
  %58 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not15.i = icmp eq i32 %58, 0, !dbg !35
  %59 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %57, float 0xBFF921FB40000000, float %51) #4, !dbg !35
  %60 = tail call float @llvm.nvvm.fma.rn.f(float %57, float 0xBFF921FB40000000, float %51) #4, !dbg !35
  %.02.i = select i1 %.not15.i, float %60, float %59, !dbg !35
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not16.i = icmp eq i32 %61, 0, !dbg !35
  %62 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %57, float 0xBE74442D00000000, float %.02.i) #4, !dbg !35
  %63 = tail call float @llvm.nvvm.fma.rn.f(float %57, float 0xBE74442D00000000, float %.02.i) #4, !dbg !35
  %.03.i = select i1 %.not16.i, float %63, float %62, !dbg !35
  %64 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not17.i = icmp eq i32 %64, 0, !dbg !35
  %65 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %57, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !35
  %66 = tail call float @llvm.nvvm.fma.rn.f(float %57, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !35
  %.04.i = select i1 %.not17.i, float %66, float %65, !dbg !35
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not18.i = icmp eq i32 %67, 0, !dbg !35
  %68 = tail call float @llvm.nvvm.fabs.ftz.f(float %51) #4, !dbg !35
  %69 = tail call float @llvm.nvvm.fabs.f(float %51) #4, !dbg !35
  %.06.i = select i1 %.not18.i, float %69, float %68, !dbg !35
  %70 = fcmp ult float %.06.i, 1.056150e+05, !dbg !35
  br i1 %70, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !35

__nv_isinff.exit.i.i.i:                           ; preds = %4
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not19.i = icmp eq i32 %71, 0, !dbg !35
  %.07.i = select i1 %.not19.i, float %69, float %68, !dbg !35
  %72 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !35
  br i1 %72, label %__nv_fmul_rn.exit.i.i.i, label %76, !dbg !35

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not27.i = icmp eq i32 %73, 0, !dbg !35
  %74 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %51, float 0.000000e+00) #4, !dbg !35
  %75 = tail call float @llvm.nvvm.mul.rn.f(float %51, float 0.000000e+00) #4, !dbg !35
  %.08.i = select i1 %.not27.i, float %75, float %74, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !35

76:                                               ; preds = %__nv_isinff.exit.i.i.i
  %77 = bitcast float %51 to i32, !dbg !35
  %78 = lshr i32 %77, 23, !dbg !35
  %79 = and i32 %78, 224, !dbg !35
  %80 = add nsw i32 %79, -128, !dbg !35
  %81 = shl i32 %77, 8, !dbg !35
  %82 = or i32 %81, -2147483648, !dbg !35
  %83 = lshr exact i32 %80, 5, !dbg !35
  br label %84, !dbg !35

84:                                               ; preds = %76, %84
  %indvars.iv = phi i64 [ 0, %76 ], [ %indvars.iv.next, %84 ]
  %hi.i.i.i.0.i174 = phi i32 [ 0, %76 ], [ %89, %84 ]
  %85 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !35
  %86 = load i32, ptr addrspace(1) %85, align 4, !dbg !35
  %87 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %86, i32 %82, i32 %hi.i.i.i.0.i174) #5, !dbg !35, !srcloc !36
  %88 = extractvalue { i32, i32 } %87, 0, !dbg !35
  %89 = extractvalue { i32, i32 } %87, 1, !dbg !35
  %90 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !35
  store i32 %88, ptr %90, align 4, !dbg !35
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !35
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !35
  br i1 %exitcond.not, label %91, label %84, !dbg !35, !llvm.loop !37

91:                                               ; preds = %84
  %92 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !35
  store i32 %89, ptr %92, align 4, !dbg !35
  %93 = and i32 %78, 31, !dbg !35
  %94 = sub nsw i32 6, %83, !dbg !35
  %95 = sext i32 %94 to i64, !dbg !35
  %96 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %95, !dbg !35
  %97 = load i32, ptr %96, align 4, !dbg !35
  %98 = sub nsw i32 5, %83, !dbg !35
  %99 = sext i32 %98 to i64, !dbg !35
  %100 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %99, !dbg !35
  %101 = load i32, ptr %100, align 4, !dbg !35
  %.not20.i = icmp eq i32 %93, 0, !dbg !35
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %102, !dbg !35

102:                                              ; preds = %91
  %103 = sub nsw i32 4, %83, !dbg !35
  %104 = sub nuw nsw i32 32, %93, !dbg !35
  %105 = shl i32 %97, %93, !dbg !35
  %106 = lshr i32 %101, %104, !dbg !35
  %107 = add i32 %106, %105, !dbg !35
  %108 = shl i32 %101, %93, !dbg !35
  %109 = sext i32 %103 to i64, !dbg !35
  %110 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %109, !dbg !35
  %111 = load i32, ptr %110, align 4, !dbg !35
  %112 = lshr i32 %111, %104, !dbg !35
  %113 = add i32 %112, %108, !dbg !35
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !35

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %102, %91
  %hi.i.i.i.1.i = phi i32 [ %107, %102 ], [ %97, %91 ], !dbg !35
  %lo.i.i.i.0.i = phi i32 [ %113, %102 ], [ %101, %91 ], !dbg !35
  %114 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !35
  %115 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !35
  %116 = shl i32 %lo.i.i.i.0.i, 2, !dbg !35
  %117 = lshr i32 %115, 31, !dbg !35
  %118 = add nuw nsw i32 %117, %114, !dbg !35
  %119 = sub nsw i32 0, %118, !dbg !35
  %.not2123.i = icmp slt i32 %77, 0, !dbg !35
  %spec.select.i = select i1 %.not2123.i, i32 %119, i32 %118, !dbg !35
  %120 = xor i32 %115, %77, !dbg !35
  %.lobit.i = ashr i32 %115, 31, !dbg !35
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %115, !dbg !35
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %116, !dbg !35
  %121 = zext i32 %hi.i.i.i.2.i to i64, !dbg !35
  %122 = shl nuw i64 %121, 32, !dbg !35
  %123 = zext i32 %lo.i.i.i.1.i to i64, !dbg !35
  %124 = or disjoint i64 %122, %123, !dbg !35
  %125 = sitofp i64 %124 to double, !dbg !35
  %126 = fmul double %125, 0x3BF921FB54442D19, !dbg !35
  %127 = fptrunc double %126 to float, !dbg !35
  %128 = fneg float %127, !dbg !35
  %.not2526.i = icmp slt i32 %120, 0, !dbg !35
  %r.i.i.i.0.i = select i1 %.not2526.i, float %128, float %127, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !35

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %4
  %i.i.1.i = phi i32 [ %.01.i, %4 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !35
  %t.i.i.1.i = phi float [ %.04.i, %4 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !35
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not28.i = icmp eq i32 %129, 0, !dbg !35
  %130 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !35
  %131 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !35
  %.011.i = select i1 %.not28.i, float %131, float %130, !dbg !35
  %132 = and i32 %i.i.1.i, 1, !dbg !35
  %.not29.i = icmp eq i32 %132, 0, !dbg !35
  %133 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !35
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not30.i = icmp eq i32 %134, 0, !dbg !35
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %133, float 0.000000e+00) #4, !dbg !35
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %133, float 0.000000e+00) #4, !dbg !35
  %.012.i = select i1 %.not30.i, float %136, float %135, !dbg !35
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !35

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not31.i = icmp eq i32 %137, 0, !dbg !35
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !35
  %139 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !35
  %.013.i = select i1 %.not31.i, float %139, float %138, !dbg !35
  br label %__internal_fmad.exit2.i.i.i, !dbg !35

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %140 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %141 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %142 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !35
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not32.i = icmp eq i32 %143, 0, !dbg !35
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float %.011.i, float %141) #4, !dbg !35
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %142, float %.011.i, float %141) #4, !dbg !35
  %.010.i = select i1 %.not32.i, float %145, float %144, !dbg !35
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not33.i = icmp eq i32 %146, 0, !dbg !35
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %140) #4, !dbg !35
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %140) #4, !dbg !35
  %.09.i = select i1 %.not33.i, float %148, float %147, !dbg !35
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not34.i = icmp eq i32 %149, 0, !dbg !35
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %133) #4, !dbg !35
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %133) #4, !dbg !35
  %.05.i = select i1 %.not34.i, float %151, float %150, !dbg !35
  %152 = and i32 %i.i.1.i, 2, !dbg !35
  %.not35.i = icmp eq i32 %152, 0, !dbg !35
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !35

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not36.i = icmp eq i32 %153, 0, !dbg !35
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %155 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %.0.i = select i1 %.not36.i, float %155, float %154, !dbg !35
  br label %__nv_sinf.exit, !dbg !35

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !35
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !35
  %156 = fmul float %52, 0x3FE45F3060000000, !dbg !35
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not.i2 = icmp eq i32 %157, 0, !dbg !35
  %158 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %156) #4, !dbg !35
  %159 = tail call i32 @llvm.nvvm.f2i.rn(float %156) #4, !dbg !35
  %.01.i3 = select i1 %.not.i2, i32 %159, i32 %158, !dbg !35
  %160 = sitofp i32 %.01.i3 to float, !dbg !35
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not15.i4 = icmp eq i32 %161, 0, !dbg !35
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float 0xBFF921FB40000000, float %52) #4, !dbg !35
  %163 = tail call float @llvm.nvvm.fma.rn.f(float %160, float 0xBFF921FB40000000, float %52) #4, !dbg !35
  %.02.i5 = select i1 %.not15.i4, float %163, float %162, !dbg !35
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not16.i6 = icmp eq i32 %164, 0, !dbg !35
  %165 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !35
  %166 = tail call float @llvm.nvvm.fma.rn.f(float %160, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !35
  %.03.i7 = select i1 %.not16.i6, float %166, float %165, !dbg !35
  %167 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not17.i8 = icmp eq i32 %167, 0, !dbg !35
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %160, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !35
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %160, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !35
  %.04.i9 = select i1 %.not17.i8, float %169, float %168, !dbg !35
  %170 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not18.i10 = icmp eq i32 %170, 0, !dbg !35
  %171 = tail call float @llvm.nvvm.fabs.ftz.f(float %52) #4, !dbg !35
  %172 = tail call float @llvm.nvvm.fabs.f(float %52) #4, !dbg !35
  %.06.i11 = select i1 %.not18.i10, float %172, float %171, !dbg !35
  %173 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !35
  br i1 %173, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !35

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not19.i13 = icmp eq i32 %174, 0, !dbg !35
  %.07.i14 = select i1 %.not19.i13, float %172, float %171, !dbg !35
  %175 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !35
  br i1 %175, label %__nv_fmul_rn.exit.i.i.i52, label %179, !dbg !35

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not27.i53 = icmp eq i32 %176, 0, !dbg !35
  %177 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %52, float 0.000000e+00) #4, !dbg !35
  %178 = tail call float @llvm.nvvm.mul.rn.f(float %52, float 0.000000e+00) #4, !dbg !35
  %.08.i54 = select i1 %.not27.i53, float %178, float %177, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !35

179:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %180 = bitcast float %52 to i32, !dbg !35
  %181 = lshr i32 %180, 23, !dbg !35
  %182 = and i32 %181, 224, !dbg !35
  %183 = add nsw i32 %182, -128, !dbg !35
  %184 = shl i32 %180, 8, !dbg !35
  %185 = or i32 %184, -2147483648, !dbg !35
  %186 = lshr exact i32 %183, 5, !dbg !35
  br label %187, !dbg !35

187:                                              ; preds = %179, %187
  %indvars.iv189 = phi i64 [ 0, %179 ], [ %indvars.iv.next190, %187 ]
  %hi.i.i.i.0.i15176 = phi i32 [ 0, %179 ], [ %192, %187 ]
  %188 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv189, !dbg !35
  %189 = load i32, ptr addrspace(1) %188, align 4, !dbg !35
  %190 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %189, i32 %185, i32 %hi.i.i.i.0.i15176) #5, !dbg !35, !srcloc !36
  %191 = extractvalue { i32, i32 } %190, 0, !dbg !35
  %192 = extractvalue { i32, i32 } %190, 1, !dbg !35
  %193 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv189, !dbg !35
  store i32 %191, ptr %193, align 4, !dbg !35
  %indvars.iv.next190 = add nuw nsw i64 %indvars.iv189, 1, !dbg !35
  %exitcond191.not = icmp eq i64 %indvars.iv.next190, 6, !dbg !35
  br i1 %exitcond191.not, label %194, label %187, !dbg !35, !llvm.loop !39

194:                                              ; preds = %187
  %195 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !35
  store i32 %192, ptr %195, align 4, !dbg !35
  %196 = and i32 %181, 31, !dbg !35
  %197 = sub nsw i32 6, %186, !dbg !35
  %198 = sext i32 %197 to i64, !dbg !35
  %199 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %198, !dbg !35
  %200 = load i32, ptr %199, align 4, !dbg !35
  %201 = sub nsw i32 5, %186, !dbg !35
  %202 = sext i32 %201 to i64, !dbg !35
  %203 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %202, !dbg !35
  %204 = load i32, ptr %203, align 4, !dbg !35
  %.not20.i17 = icmp eq i32 %196, 0, !dbg !35
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %205, !dbg !35

205:                                              ; preds = %194
  %206 = sub nsw i32 4, %186, !dbg !35
  %207 = sub nuw nsw i32 32, %196, !dbg !35
  %208 = shl i32 %200, %196, !dbg !35
  %209 = lshr i32 %204, %207, !dbg !35
  %210 = add i32 %209, %208, !dbg !35
  %211 = shl i32 %204, %196, !dbg !35
  %212 = sext i32 %206 to i64, !dbg !35
  %213 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %212, !dbg !35
  %214 = load i32, ptr %213, align 4, !dbg !35
  %215 = lshr i32 %214, %207, !dbg !35
  %216 = add i32 %215, %211, !dbg !35
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !35

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %205, %194
  %hi.i.i.i.1.i19 = phi i32 [ %210, %205 ], [ %200, %194 ], !dbg !35
  %lo.i.i.i.0.i20 = phi i32 [ %216, %205 ], [ %204, %194 ], !dbg !35
  %217 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !35
  %218 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !35
  %219 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !35
  %220 = lshr i32 %218, 31, !dbg !35
  %221 = add nuw nsw i32 %220, %217, !dbg !35
  %222 = sub nsw i32 0, %221, !dbg !35
  %.not2123.i21 = icmp slt i32 %180, 0, !dbg !35
  %spec.select.i22 = select i1 %.not2123.i21, i32 %222, i32 %221, !dbg !35
  %223 = xor i32 %218, %180, !dbg !35
  %.lobit.i23 = ashr i32 %218, 31, !dbg !35
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %218, !dbg !35
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %219, !dbg !35
  %224 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !35
  %225 = shl nuw i64 %224, 32, !dbg !35
  %226 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !35
  %227 = or disjoint i64 %225, %226, !dbg !35
  %228 = sitofp i64 %227 to double, !dbg !35
  %229 = fmul double %228, 0x3BF921FB54442D19, !dbg !35
  %230 = fptrunc double %229 to float, !dbg !35
  %231 = fneg float %230, !dbg !35
  %.not2526.i27 = icmp slt i32 %223, 0, !dbg !35
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %231, float %230, !dbg !35
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !35

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !35
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !35
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not28.i32 = icmp eq i32 %232, 0, !dbg !35
  %233 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !35
  %234 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !35
  %.011.i33 = select i1 %.not28.i32, float %234, float %233, !dbg !35
  %235 = and i32 %i.i.1.i30, 1, !dbg !35
  %.not29.i34 = icmp eq i32 %235, 0, !dbg !35
  %236 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !35
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not30.i35 = icmp eq i32 %237, 0, !dbg !35
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %236, float 0.000000e+00) #4, !dbg !35
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %236, float 0.000000e+00) #4, !dbg !35
  %.012.i36 = select i1 %.not30.i35, float %239, float %238, !dbg !35
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !35

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not31.i38 = icmp eq i32 %240, 0, !dbg !35
  %241 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !35
  %242 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !35
  %.013.i39 = select i1 %.not31.i38, float %242, float %241, !dbg !35
  br label %__internal_fmad.exit2.i.i.i40, !dbg !35

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %243 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !35
  %244 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !35
  %245 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !35
  %246 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not32.i41 = icmp eq i32 %246, 0, !dbg !35
  %247 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %245, float %.011.i33, float %244) #4, !dbg !35
  %248 = tail call float @llvm.nvvm.fma.rn.f(float %245, float %.011.i33, float %244) #4, !dbg !35
  %.010.i42 = select i1 %.not32.i41, float %248, float %247, !dbg !35
  %249 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not33.i43 = icmp eq i32 %249, 0, !dbg !35
  %250 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %243) #4, !dbg !35
  %251 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %243) #4, !dbg !35
  %.09.i44 = select i1 %.not33.i43, float %251, float %250, !dbg !35
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not34.i45 = icmp eq i32 %252, 0, !dbg !35
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %236) #4, !dbg !35
  %254 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %236) #4, !dbg !35
  %.05.i46 = select i1 %.not34.i45, float %254, float %253, !dbg !35
  %255 = and i32 %i.i.1.i30, 2, !dbg !35
  %.not35.i47 = icmp eq i32 %255, 0, !dbg !35
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !35

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !35
  %.not36.i49 = icmp eq i32 %256, 0, !dbg !35
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !35
  %.0.i50 = select i1 %.not36.i49, float %258, float %257, !dbg !35
  br label %__nv_sinf.exit55, !dbg !35

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !35
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !35
  %259 = icmp sgt i32 %.decomposed, 79, !dbg !40
  %260 = add nsw i32 %.decomposed, -80, !dbg !41
  %261 = add nsw i32 %15, -80, !dbg !41
  %262 = sdiv i32 %260, 16, !dbg !42
  %263 = mul i32 %262, 16, !dbg !43
  %.decomposed212 = sub i32 %260, %263, !dbg !43
  %.frozen213 = freeze i32 %261, !dbg !42
  %264 = sdiv i32 %.frozen213, 16, !dbg !42
  %265 = mul i32 %264, 16, !dbg !43
  %.decomposed214 = sub i32 %.frozen213, %265, !dbg !43
  %266 = add nsw i32 %.decomposed212, %17, !dbg !44
  %267 = add nsw i32 %17, %.decomposed214, !dbg !44
  %268 = sext i32 %266 to i64, !dbg !45
  %269 = getelementptr float, ptr addrspace(1) %0, i64 %268, !dbg !45
  %270 = sext i32 %267 to i64, !dbg !45
  %271 = getelementptr float, ptr addrspace(1) %0, i64 %270, !dbg !45
  %272 = and i1 %12, %259, !dbg !46
  %273 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %269, i1 %272, i32 0, i1 %272) #4, !dbg !47
  %274 = bitcast i32 %273 to float, !dbg !47
  %275 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %271, i1 %272, i32 0, i1 %272) #4, !dbg !47
  %276 = bitcast i32 %275 to float, !dbg !47
  %277 = srem i32 %262, 4, !dbg !48
  %278 = srem i32 %264, 4, !dbg !48
  %279 = sext i32 %277 to i64, !dbg !49
  %280 = getelementptr float, ptr addrspace(1) %1, i64 %279, !dbg !49
  %281 = sext i32 %278 to i64, !dbg !49
  %282 = getelementptr float, ptr addrspace(1) %1, i64 %281, !dbg !49
  %283 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %280, i1 %272, i32 0, i1 %272) #4, !dbg !50
  %284 = bitcast i32 %283 to float, !dbg !50
  %285 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %282, i1 %272, i32 0, i1 %272) #4, !dbg !50
  %286 = bitcast i32 %285 to float, !dbg !50
  %287 = fmul float %274, %284, !dbg !51
  %288 = fmul float %276, %286, !dbg !51
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !52
  %289 = fmul float %287, 0x3FE45F3060000000, !dbg !52
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not.i57 = icmp eq i32 %290, 0, !dbg !52
  %291 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %289) #4, !dbg !52
  %292 = tail call i32 @llvm.nvvm.f2i.rn(float %289) #4, !dbg !52
  %.01.i58 = select i1 %.not.i57, i32 %292, i32 %291, !dbg !52
  %293 = sitofp i32 %.01.i58 to float, !dbg !52
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not15.i59 = icmp eq i32 %294, 0, !dbg !52
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %293, float 0xBFF921FB40000000, float %287) #4, !dbg !52
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %293, float 0xBFF921FB40000000, float %287) #4, !dbg !52
  %.02.i60 = select i1 %.not15.i59, float %296, float %295, !dbg !52
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not16.i61 = icmp eq i32 %297, 0, !dbg !52
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %293, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !52
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %293, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !52
  %.03.i62 = select i1 %.not16.i61, float %299, float %298, !dbg !52
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not17.i63 = icmp eq i32 %300, 0, !dbg !52
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %293, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !52
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %293, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !52
  %.04.i64 = select i1 %.not17.i63, float %302, float %301, !dbg !52
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not18.i65 = icmp eq i32 %303, 0, !dbg !52
  %304 = tail call float @llvm.nvvm.fabs.ftz.f(float %287) #4, !dbg !52
  %305 = tail call float @llvm.nvvm.fabs.f(float %287) #4, !dbg !52
  %.06.i66 = select i1 %.not18.i65, float %305, float %304, !dbg !52
  %306 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !52
  br i1 %306, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !52

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not19.i68 = icmp eq i32 %307, 0, !dbg !52
  %.07.i69 = select i1 %.not19.i68, float %305, float %304, !dbg !52
  %308 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !52
  br i1 %308, label %__nv_fmul_rn.exit.i.i.i106, label %312, !dbg !52

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not27.i107 = icmp eq i32 %309, 0, !dbg !52
  %310 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %287, float 0.000000e+00) #4, !dbg !52
  %311 = tail call float @llvm.nvvm.mul.rn.f(float %287, float 0.000000e+00) #4, !dbg !52
  %.08.i108 = select i1 %.not27.i107, float %311, float %310, !dbg !52
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !52

312:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %313 = bitcast float %287 to i32, !dbg !52
  %314 = lshr i32 %313, 23, !dbg !52
  %315 = and i32 %314, 224, !dbg !52
  %316 = add nsw i32 %315, -128, !dbg !52
  %317 = shl i32 %313, 8, !dbg !52
  %318 = or i32 %317, -2147483648, !dbg !52
  %319 = lshr exact i32 %316, 5, !dbg !52
  br label %320, !dbg !52

320:                                              ; preds = %312, %320
  %indvars.iv192 = phi i64 [ 0, %312 ], [ %indvars.iv.next193, %320 ]
  %hi.i.i.i.0.i70178 = phi i32 [ 0, %312 ], [ %325, %320 ]
  %321 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv192, !dbg !52
  %322 = load i32, ptr addrspace(1) %321, align 4, !dbg !52
  %323 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %322, i32 %318, i32 %hi.i.i.i.0.i70178) #5, !dbg !52, !srcloc !36
  %324 = extractvalue { i32, i32 } %323, 0, !dbg !52
  %325 = extractvalue { i32, i32 } %323, 1, !dbg !52
  %326 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv192, !dbg !52
  store i32 %324, ptr %326, align 4, !dbg !52
  %indvars.iv.next193 = add nuw nsw i64 %indvars.iv192, 1, !dbg !52
  %exitcond194.not = icmp eq i64 %indvars.iv.next193, 6, !dbg !52
  br i1 %exitcond194.not, label %327, label %320, !dbg !52, !llvm.loop !53

327:                                              ; preds = %320
  %328 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !52
  store i32 %325, ptr %328, align 4, !dbg !52
  %329 = and i32 %314, 31, !dbg !52
  %330 = sub nsw i32 6, %319, !dbg !52
  %331 = sext i32 %330 to i64, !dbg !52
  %332 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %331, !dbg !52
  %333 = load i32, ptr %332, align 4, !dbg !52
  %334 = sub nsw i32 5, %319, !dbg !52
  %335 = sext i32 %334 to i64, !dbg !52
  %336 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %335, !dbg !52
  %337 = load i32, ptr %336, align 4, !dbg !52
  %.not20.i72 = icmp eq i32 %329, 0, !dbg !52
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %338, !dbg !52

338:                                              ; preds = %327
  %339 = sub nsw i32 4, %319, !dbg !52
  %340 = sub nuw nsw i32 32, %329, !dbg !52
  %341 = shl i32 %333, %329, !dbg !52
  %342 = lshr i32 %337, %340, !dbg !52
  %343 = add i32 %342, %341, !dbg !52
  %344 = shl i32 %337, %329, !dbg !52
  %345 = sext i32 %339 to i64, !dbg !52
  %346 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %345, !dbg !52
  %347 = load i32, ptr %346, align 4, !dbg !52
  %348 = lshr i32 %347, %340, !dbg !52
  %349 = add i32 %348, %344, !dbg !52
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !52

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %338, %327
  %hi.i.i.i.1.i74 = phi i32 [ %343, %338 ], [ %333, %327 ], !dbg !52
  %lo.i.i.i.0.i75 = phi i32 [ %349, %338 ], [ %337, %327 ], !dbg !52
  %350 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !52
  %351 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !52
  %352 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !52
  %353 = lshr i32 %351, 31, !dbg !52
  %354 = add nuw nsw i32 %353, %350, !dbg !52
  %355 = sub nsw i32 0, %354, !dbg !52
  %.not2123.i76 = icmp slt i32 %313, 0, !dbg !52
  %spec.select.i77 = select i1 %.not2123.i76, i32 %355, i32 %354, !dbg !52
  %356 = xor i32 %351, %313, !dbg !52
  %.lobit.i78 = ashr i32 %351, 31, !dbg !52
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %351, !dbg !52
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %352, !dbg !52
  %357 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !52
  %358 = shl nuw i64 %357, 32, !dbg !52
  %359 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !52
  %360 = or disjoint i64 %358, %359, !dbg !52
  %361 = sitofp i64 %360 to double, !dbg !52
  %362 = fmul double %361, 0x3BF921FB54442D19, !dbg !52
  %363 = fptrunc double %362 to float, !dbg !52
  %364 = fneg float %363, !dbg !52
  %.not2526.i82 = icmp slt i32 %356, 0, !dbg !52
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %364, float %363, !dbg !52
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !52

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !52
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !52
  %365 = add i32 %i.i.1.i85, 1, !dbg !52
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not28.i87 = icmp eq i32 %366, 0, !dbg !52
  %367 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !52
  %368 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !52
  %.011.i88 = select i1 %.not28.i87, float %368, float %367, !dbg !52
  %369 = and i32 %i.i.1.i85, 1, !dbg !52
  %.not29.not.i = icmp eq i32 %369, 0, !dbg !52
  %370 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !52
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not30.i89 = icmp eq i32 %371, 0, !dbg !52
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %370, float 0.000000e+00) #4, !dbg !52
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %370, float 0.000000e+00) #4, !dbg !52
  %.012.i90 = select i1 %.not30.i89, float %373, float %372, !dbg !52
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !52

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not31.i104 = icmp eq i32 %374, 0, !dbg !52
  %375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !52
  %376 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !52
  %.013.i105 = select i1 %.not31.i104, float %376, float %375, !dbg !52
  br label %__internal_fmad.exit2.i.i.i91, !dbg !52

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %377 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !52
  %378 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !52
  %379 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !52
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not32.i92 = icmp eq i32 %380, 0, !dbg !52
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %379, float %.011.i88, float %378) #4, !dbg !52
  %382 = tail call float @llvm.nvvm.fma.rn.f(float %379, float %.011.i88, float %378) #4, !dbg !52
  %.010.i93 = select i1 %.not32.i92, float %382, float %381, !dbg !52
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not33.i94 = icmp eq i32 %383, 0, !dbg !52
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %377) #4, !dbg !52
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %377) #4, !dbg !52
  %.09.i95 = select i1 %.not33.i94, float %385, float %384, !dbg !52
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not34.i96 = icmp eq i32 %386, 0, !dbg !52
  %387 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %370) #4, !dbg !52
  %388 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %370) #4, !dbg !52
  %.05.i97 = select i1 %.not34.i96, float %388, float %387, !dbg !52
  %389 = and i32 %365, 2, !dbg !52
  %.not35.i98 = icmp eq i32 %389, 0, !dbg !52
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !52

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %390 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not36.i100 = icmp eq i32 %390, 0, !dbg !52
  %391 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !52
  %392 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !52
  %.0.i101 = select i1 %.not36.i100, float %392, float %391, !dbg !52
  br label %__nv_cosf.exit, !dbg !52

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !52
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !52
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !52
  %393 = fmul float %288, 0x3FE45F3060000000, !dbg !52
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not.i110 = icmp eq i32 %394, 0, !dbg !52
  %395 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %393) #4, !dbg !52
  %396 = tail call i32 @llvm.nvvm.f2i.rn(float %393) #4, !dbg !52
  %.01.i111 = select i1 %.not.i110, i32 %396, i32 %395, !dbg !52
  %397 = sitofp i32 %.01.i111 to float, !dbg !52
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not15.i112 = icmp eq i32 %398, 0, !dbg !52
  %399 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %397, float 0xBFF921FB40000000, float %288) #4, !dbg !52
  %400 = tail call float @llvm.nvvm.fma.rn.f(float %397, float 0xBFF921FB40000000, float %288) #4, !dbg !52
  %.02.i113 = select i1 %.not15.i112, float %400, float %399, !dbg !52
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not16.i114 = icmp eq i32 %401, 0, !dbg !52
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %397, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !52
  %403 = tail call float @llvm.nvvm.fma.rn.f(float %397, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !52
  %.03.i115 = select i1 %.not16.i114, float %403, float %402, !dbg !52
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not17.i116 = icmp eq i32 %404, 0, !dbg !52
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %397, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !52
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %397, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !52
  %.04.i117 = select i1 %.not17.i116, float %406, float %405, !dbg !52
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not18.i118 = icmp eq i32 %407, 0, !dbg !52
  %408 = tail call float @llvm.nvvm.fabs.ftz.f(float %288) #4, !dbg !52
  %409 = tail call float @llvm.nvvm.fabs.f(float %288) #4, !dbg !52
  %.06.i119 = select i1 %.not18.i118, float %409, float %408, !dbg !52
  %410 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !52
  br i1 %410, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !52

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not19.i121 = icmp eq i32 %411, 0, !dbg !52
  %.07.i122 = select i1 %.not19.i121, float %409, float %408, !dbg !52
  %412 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !52
  br i1 %412, label %__nv_fmul_rn.exit.i.i.i160, label %416, !dbg !52

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not27.i161 = icmp eq i32 %413, 0, !dbg !52
  %414 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %288, float 0.000000e+00) #4, !dbg !52
  %415 = tail call float @llvm.nvvm.mul.rn.f(float %288, float 0.000000e+00) #4, !dbg !52
  %.08.i162 = select i1 %.not27.i161, float %415, float %414, !dbg !52
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !52

416:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %417 = bitcast float %288 to i32, !dbg !52
  %418 = lshr i32 %417, 23, !dbg !52
  %419 = and i32 %418, 224, !dbg !52
  %420 = add nsw i32 %419, -128, !dbg !52
  %421 = shl i32 %417, 8, !dbg !52
  %422 = or i32 %421, -2147483648, !dbg !52
  %423 = lshr exact i32 %420, 5, !dbg !52
  br label %424, !dbg !52

424:                                              ; preds = %416, %424
  %indvars.iv195 = phi i64 [ 0, %416 ], [ %indvars.iv.next196, %424 ]
  %hi.i.i.i.0.i123180 = phi i32 [ 0, %416 ], [ %429, %424 ]
  %425 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv195, !dbg !52
  %426 = load i32, ptr addrspace(1) %425, align 4, !dbg !52
  %427 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %426, i32 %422, i32 %hi.i.i.i.0.i123180) #5, !dbg !52, !srcloc !36
  %428 = extractvalue { i32, i32 } %427, 0, !dbg !52
  %429 = extractvalue { i32, i32 } %427, 1, !dbg !52
  %430 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv195, !dbg !52
  store i32 %428, ptr %430, align 4, !dbg !52
  %indvars.iv.next196 = add nuw nsw i64 %indvars.iv195, 1, !dbg !52
  %exitcond197.not = icmp eq i64 %indvars.iv.next196, 6, !dbg !52
  br i1 %exitcond197.not, label %431, label %424, !dbg !52, !llvm.loop !54

431:                                              ; preds = %424
  %432 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !52
  store i32 %429, ptr %432, align 4, !dbg !52
  %433 = and i32 %418, 31, !dbg !52
  %434 = sub nsw i32 6, %423, !dbg !52
  %435 = sext i32 %434 to i64, !dbg !52
  %436 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %435, !dbg !52
  %437 = load i32, ptr %436, align 4, !dbg !52
  %438 = sub nsw i32 5, %423, !dbg !52
  %439 = sext i32 %438 to i64, !dbg !52
  %440 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %439, !dbg !52
  %441 = load i32, ptr %440, align 4, !dbg !52
  %.not20.i125 = icmp eq i32 %433, 0, !dbg !52
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %442, !dbg !52

442:                                              ; preds = %431
  %443 = sub nsw i32 4, %423, !dbg !52
  %444 = sub nuw nsw i32 32, %433, !dbg !52
  %445 = shl i32 %437, %433, !dbg !52
  %446 = lshr i32 %441, %444, !dbg !52
  %447 = add i32 %446, %445, !dbg !52
  %448 = shl i32 %441, %433, !dbg !52
  %449 = sext i32 %443 to i64, !dbg !52
  %450 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %449, !dbg !52
  %451 = load i32, ptr %450, align 4, !dbg !52
  %452 = lshr i32 %451, %444, !dbg !52
  %453 = add i32 %452, %448, !dbg !52
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !52

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %442, %431
  %hi.i.i.i.1.i127 = phi i32 [ %447, %442 ], [ %437, %431 ], !dbg !52
  %lo.i.i.i.0.i128 = phi i32 [ %453, %442 ], [ %441, %431 ], !dbg !52
  %454 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !52
  %455 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !52
  %456 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !52
  %457 = lshr i32 %455, 31, !dbg !52
  %458 = add nuw nsw i32 %457, %454, !dbg !52
  %459 = sub nsw i32 0, %458, !dbg !52
  %.not2123.i129 = icmp slt i32 %417, 0, !dbg !52
  %spec.select.i130 = select i1 %.not2123.i129, i32 %459, i32 %458, !dbg !52
  %460 = xor i32 %455, %417, !dbg !52
  %.lobit.i131 = ashr i32 %455, 31, !dbg !52
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %455, !dbg !52
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %456, !dbg !52
  %461 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !52
  %462 = shl nuw i64 %461, 32, !dbg !52
  %463 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !52
  %464 = or disjoint i64 %462, %463, !dbg !52
  %465 = sitofp i64 %464 to double, !dbg !52
  %466 = fmul double %465, 0x3BF921FB54442D19, !dbg !52
  %467 = fptrunc double %466 to float, !dbg !52
  %468 = fneg float %467, !dbg !52
  %.not2526.i135 = icmp slt i32 %460, 0, !dbg !52
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %468, float %467, !dbg !52
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !52

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !52
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !52
  %469 = add i32 %i.i.1.i138, 1, !dbg !52
  %470 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not28.i140 = icmp eq i32 %470, 0, !dbg !52
  %471 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !52
  %472 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !52
  %.011.i141 = select i1 %.not28.i140, float %472, float %471, !dbg !52
  %473 = and i32 %i.i.1.i138, 1, !dbg !52
  %.not29.not.i142 = icmp eq i32 %473, 0, !dbg !52
  %474 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !52
  %475 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not30.i143 = icmp eq i32 %475, 0, !dbg !52
  %476 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %474, float 0.000000e+00) #4, !dbg !52
  %477 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %474, float 0.000000e+00) #4, !dbg !52
  %.012.i144 = select i1 %.not30.i143, float %477, float %476, !dbg !52
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !52

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %478 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not31.i158 = icmp eq i32 %478, 0, !dbg !52
  %479 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !52
  %480 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !52
  %.013.i159 = select i1 %.not31.i158, float %480, float %479, !dbg !52
  br label %__internal_fmad.exit2.i.i.i145, !dbg !52

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %481 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !52
  %482 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !52
  %483 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !52
  %484 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not32.i146 = icmp eq i32 %484, 0, !dbg !52
  %485 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %483, float %.011.i141, float %482) #4, !dbg !52
  %486 = tail call float @llvm.nvvm.fma.rn.f(float %483, float %.011.i141, float %482) #4, !dbg !52
  %.010.i147 = select i1 %.not32.i146, float %486, float %485, !dbg !52
  %487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not33.i148 = icmp eq i32 %487, 0, !dbg !52
  %488 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %481) #4, !dbg !52
  %489 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %481) #4, !dbg !52
  %.09.i149 = select i1 %.not33.i148, float %489, float %488, !dbg !52
  %490 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not34.i150 = icmp eq i32 %490, 0, !dbg !52
  %491 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %474) #4, !dbg !52
  %492 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %474) #4, !dbg !52
  %.05.i151 = select i1 %.not34.i150, float %492, float %491, !dbg !52
  %493 = and i32 %469, 2, !dbg !52
  %.not35.i152 = icmp eq i32 %493, 0, !dbg !52
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !52

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %494 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !52
  %.not36.i154 = icmp eq i32 %494, 0, !dbg !52
  %495 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !52
  %496 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !52
  %.0.i155 = select i1 %.not36.i154, float %496, float %495, !dbg !52
  br label %__nv_cosf.exit163, !dbg !52

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !52
  %497 = select i1 %24, float %z.i.i.0.i51, float 0.000000e+00, !dbg !55
  %498 = select i1 %24, float %z.i.i.0.i, float 0.000000e+00, !dbg !55
  %499 = icmp slt i32 %.decomposed, 80, !dbg !56
  %500 = extractvalue { i32, i32 } %22, 1, !dbg !22
  %501 = extractvalue { i32, i32 } %22, 0, !dbg !22
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !52
  %502 = select i1 %499, float %498, float %z.i.i.0.i102, !dbg !57
  %503 = select i1 %499, float %497, float %z.i.i.0.i156, !dbg !57
  %504 = sext i32 %10 to i64, !dbg !58
  %505 = getelementptr float, ptr addrspace(1) %2, i64 %504, !dbg !58
  %506 = bitcast float %502 to i32, !dbg !59
  %507 = select i1 %16, i32 %501, i32 %506, !dbg !60
  %508 = bitcast float %503 to i32, !dbg !59
  %509 = select i1 %16, i32 %500, i32 %508, !dbg !60
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %507, i32 %509, ptr addrspace(1) %505, i1 %12) #4, !dbg !59
  ret void, !dbg !61
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chbzwvcnfcfwjzbwxzotlgqt2csdjgnzps7n4wwzzgtnwd7d344s.py", directory: "inductor_cache/hb")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 33, scope: !7)
!19 = !DILocation(line: 32, column: 39, scope: !7)
!20 = !DILocation(line: 32, column: 30, scope: !7)
!21 = !DILocation(line: 32, column: 52, scope: !7)
!22 = !DILocation(line: 32, column: 45, scope: !7)
!23 = !DILocation(line: 36, column: 19, scope: !7)
!24 = !DILocation(line: 41, column: 20, scope: !7)
!25 = !DILocation(line: 42, column: 56, scope: !7)
!26 = !DILocation(line: 43, column: 49, scope: !7)
!27 = !DILocation(line: 42, column: 41, scope: !7)
!28 = !DILocation(line: 42, column: 31, scope: !7)
!29 = !DILocation(line: 42, column: 71, scope: !7)
!30 = !DILocation(line: 42, column: 63, scope: !7)
!31 = !DILocation(line: 43, column: 55, scope: !7)
!32 = !DILocation(line: 43, column: 32, scope: !7)
!33 = !DILocation(line: 43, column: 60, scope: !7)
!34 = !DILocation(line: 44, column: 20, scope: !7)
!35 = !DILocation(line: 45, column: 24, scope: !7)
!36 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.unroll.count", i32 1}
!39 = distinct !{!39, !38}
!40 = !DILocation(line: 48, column: 20, scope: !7)
!41 = !DILocation(line: 52, column: 51, scope: !7)
!42 = !DILocation(line: 53, column: 59, scope: !7)
!43 = !DILocation(line: 52, column: 66, scope: !7)
!44 = !DILocation(line: 52, column: 41, scope: !7)
!45 = !DILocation(line: 52, column: 31, scope: !7)
!46 = !DILocation(line: 52, column: 81, scope: !7)
!47 = !DILocation(line: 52, column: 73, scope: !7)
!48 = !DILocation(line: 53, column: 65, scope: !7)
!49 = !DILocation(line: 53, column: 32, scope: !7)
!50 = !DILocation(line: 53, column: 70, scope: !7)
!51 = !DILocation(line: 54, column: 20, scope: !7)
!52 = !DILocation(line: 55, column: 24, scope: !7)
!53 = distinct !{!53, !38}
!54 = distinct !{!54, !38}
!55 = !DILocation(line: 47, column: 35, scope: !7)
!56 = !DILocation(line: 40, column: 19, scope: !7)
!57 = !DILocation(line: 58, column: 35, scope: !7)
!58 = !DILocation(line: 62, column: 25, scope: !7)
!59 = !DILocation(line: 62, column: 37, scope: !7)
!60 = !DILocation(line: 61, column: 33, scope: !7)
!61 = !DILocation(line: 62, column: 4, scope: !7)
