; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_add_convolution_26(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, i32 %8) local_unnamed_addr !dbg !7 {
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %11 = shl i32 %10, 8, !dbg !11
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %13 = shl i32 %12, 1, !dbg !12
  %14 = and i32 %13, 254, !dbg !12
  %15 = or disjoint i32 %11, %14, !dbg !13
  %16 = sdiv i32 %15, 4096, !dbg !14
  %17 = srem i32 %16, 4, !dbg !15
  %18 = sext i32 %15 to i64, !dbg !16
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !16
  %20 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !17
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !17
  %22 = extractvalue { i32, i32 } %20, 1, !dbg !17
  %23 = sext i32 %17 to i64, !dbg !18
  %24 = getelementptr float, ptr addrspace(1) %1, i64 %23, !dbg !18
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !19
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 true) #1, !dbg !19
  %27 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !20
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !21
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !21
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !21
  %31 = getelementptr float, ptr addrspace(1) %3, i64 %23, !dbg !22
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !23
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #1, !dbg !23
  %34 = getelementptr float, ptr addrspace(1) %4, i64 %18, !dbg !24
  %35 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %34, i1 true) #1, !dbg !25
  %36 = extractvalue { i32, i32 } %35, 0, !dbg !25
  %37 = extractvalue { i32, i32 } %35, 1, !dbg !25
  %38 = getelementptr float, ptr addrspace(1) %5, i64 %23, !dbg !26
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !27
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !27
  %41 = getelementptr float, ptr addrspace(1) %6, i64 %18, !dbg !28
  %42 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %41, i1 true) #1, !dbg !29
  %43 = extractvalue { i32, i32 } %42, 0, !dbg !29
  %44 = extractvalue { i32, i32 } %42, 1, !dbg !29
  %45 = getelementptr float, ptr addrspace(1) %7, i64 %23, !dbg !30
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !31
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 true) #1, !dbg !31
  %48 = insertelement <2 x i32> poison, i32 %21, i64 0, !dbg !17
  %49 = insertelement <2 x i32> %48, i32 %29, i64 1, !dbg !17
  %50 = bitcast <2 x i32> %49 to <2 x float>, !dbg !17
  %51 = insertelement <2 x i32> poison, i32 %25, i64 0, !dbg !19
  %52 = insertelement <2 x i32> %51, i32 %32, i64 1, !dbg !19
  %53 = bitcast <2 x i32> %52 to <2 x float>, !dbg !19
  %54 = fadd <2 x float> %50, %53, !dbg !32
  %55 = insertelement <2 x i32> poison, i32 %22, i64 0, !dbg !17
  %56 = insertelement <2 x i32> %55, i32 %30, i64 1, !dbg !17
  %57 = bitcast <2 x i32> %56 to <2 x float>, !dbg !17
  %58 = insertelement <2 x i32> poison, i32 %26, i64 0, !dbg !19
  %59 = insertelement <2 x i32> %58, i32 %33, i64 1, !dbg !19
  %60 = bitcast <2 x i32> %59 to <2 x float>, !dbg !19
  %61 = fadd <2 x float> %57, %60, !dbg !32
  %shift = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !33
  %62 = fadd <2 x float> %54, %shift, !dbg !33
  %shift1 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !33
  %63 = fadd <2 x float> %61, %shift1, !dbg !33
  %64 = insertelement <2 x i32> poison, i32 %36, i64 0, !dbg !25
  %65 = insertelement <2 x i32> %64, i32 %43, i64 1, !dbg !25
  %66 = bitcast <2 x i32> %65 to <2 x float>, !dbg !25
  %67 = insertelement <2 x i32> poison, i32 %39, i64 0, !dbg !27
  %68 = insertelement <2 x i32> %67, i32 %46, i64 1, !dbg !27
  %69 = bitcast <2 x i32> %68 to <2 x float>, !dbg !27
  %70 = fadd <2 x float> %66, %69, !dbg !34
  %71 = fadd <2 x float> %62, %70, !dbg !35
  %72 = insertelement <2 x i32> poison, i32 %37, i64 0, !dbg !25
  %73 = insertelement <2 x i32> %72, i32 %44, i64 1, !dbg !25
  %74 = bitcast <2 x i32> %73 to <2 x float>, !dbg !25
  %75 = insertelement <2 x i32> poison, i32 %40, i64 0, !dbg !27
  %76 = insertelement <2 x i32> %75, i32 %47, i64 1, !dbg !27
  %77 = bitcast <2 x i32> %76 to <2 x float>, !dbg !27
  %78 = fadd <2 x float> %74, %77, !dbg !34
  %79 = fadd <2 x float> %63, %78, !dbg !35
  %shift2 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %80 = fadd <2 x float> %71, %shift2, !dbg !36
  %shift3 = shufflevector <2 x float> %78, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !36
  %81 = fadd <2 x float> %79, %shift3, !dbg !36
  %bc = bitcast <2 x float> %80 to <2 x i32>, !dbg !37
  %82 = extractelement <2 x i32> %bc, i64 0, !dbg !37
  %bc4 = bitcast <2 x float> %81 to <2 x i32>, !dbg !37
  %83 = extractelement <2 x i32> %bc4, i64 0, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %82, i32 %83, ptr addrspace(1) %19, i1 true) #1, !dbg !37
  ret void, !dbg !38
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7y7dv5zxijajxgvdmesg3gtkneidldoyektfieoig7jajnexm46.py", directory: "inductor_cache/7y")
!4 = !{ptr @triton_poi_fused_add_convolution_26, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_convolution_26, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_convolution_26", linkageName: "triton_poi_fused_add_convolution_26", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 29, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 30, scope: !7)
!25 = !DILocation(line: 30, column: 35, scope: !7)
!26 = !DILocation(line: 31, column: 30, scope: !7)
!27 = !DILocation(line: 31, column: 35, scope: !7)
!28 = !DILocation(line: 32, column: 31, scope: !7)
!29 = !DILocation(line: 32, column: 36, scope: !7)
!30 = !DILocation(line: 33, column: 31, scope: !7)
!31 = !DILocation(line: 33, column: 36, scope: !7)
!32 = !DILocation(line: 34, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 18, scope: !7)
!34 = !DILocation(line: 37, column: 18, scope: !7)
!35 = !DILocation(line: 38, column: 19, scope: !7)
!36 = !DILocation(line: 40, column: 20, scope: !7)
!37 = !DILocation(line: 43, column: 40, scope: !7)
!38 = !DILocation(line: 43, column: 4, scope: !7)
