; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = and i32 %5, 63, !dbg !10
  %7 = zext nneg i32 %6 to i64, !dbg !11
  br label %8, !dbg !11

8:                                                ; preds = %4, %__nv_logf.exit30
  %indvars.iv = phi i64 [ 0, %4 ], [ %indvars.iv.next, %__nv_logf.exit30 ]
  %9 = phi float [ 0.000000e+00, %4 ], [ %161, %__nv_logf.exit30 ]
  %10 = or disjoint i64 %indvars.iv, %7, !dbg !12
  %11 = and i64 %10, 252, !dbg !13
  %12 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !14
  %13 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %12, i1 true, i32 0, i1 true) #4, !dbg !15
  %14 = bitcast i32 %13 to float, !dbg !15
  %15 = getelementptr float, ptr addrspace(1) %1, i64 %11, !dbg !16
  %16 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %15, i1 true, i32 0, i1 true) #4, !dbg !17
  %17 = bitcast i32 %16 to float, !dbg !17
  %18 = or disjoint i64 %11, 1, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %1, i64 %18, !dbg !19
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 true, i32 0, i1 true) #4, !dbg !20
  %21 = bitcast i32 %20 to float, !dbg !20
  %22 = or disjoint i64 %11, 2, !dbg !21
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !22
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 true, i32 0, i1 true) #4, !dbg !23
  %25 = bitcast i32 %24 to float, !dbg !23
  %26 = and i64 %10, 4294967292, !dbg !24
  %27 = or disjoint i64 %26, 3, !dbg !24
  %28 = getelementptr float, ptr addrspace(1) %1, i64 %27, !dbg !24
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 true, i32 0, i1 true) #4, !dbg !25
  %30 = bitcast i32 %29 to float, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %2, i64 %10, !dbg !26
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 true, i32 0, i1 true) #4, !dbg !27
  %33 = bitcast i32 %32 to float, !dbg !27
  %34 = getelementptr float, ptr addrspace(1) %2, i64 %11, !dbg !28
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 true, i32 0, i1 true) #4, !dbg !29
  %36 = bitcast i32 %35 to float, !dbg !29
  %37 = getelementptr float, ptr addrspace(1) %2, i64 %18, !dbg !30
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %37, i1 true, i32 0, i1 true) #4, !dbg !31
  %39 = bitcast i32 %38 to float, !dbg !31
  %40 = getelementptr float, ptr addrspace(1) %2, i64 %22, !dbg !32
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %40, i1 true, i32 0, i1 true) #4, !dbg !33
  %42 = bitcast i32 %41 to float, !dbg !33
  %43 = getelementptr float, ptr addrspace(1) %2, i64 %27, !dbg !34
  %44 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %43, i1 true, i32 0, i1 true) #4, !dbg !35
  %45 = bitcast i32 %44 to float, !dbg !35
  %46 = fadd float %17, %21, !dbg !36
  %47 = fadd float %46, %25, !dbg !37
  %48 = fadd float %47, %30, !dbg !38
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %14, float %48) #4, !dbg !39
  %50 = fadd float %49, 0x3DDB7CDFE0000000, !dbg !40
  %51 = fcmp olt float %50, 0x3810000000000000, !dbg !41
  %52 = fmul float %50, 0x4160000000000000, !dbg !41
  %.02.i = select i1 %51, float %52, float %50, !dbg !41
  %i.i.0.i = select i1 %51, float -2.300000e+01, float 0.000000e+00, !dbg !41
  %53 = bitcast float %.02.i to i32, !dbg !41
  %54 = add i32 %53, -1059760811, !dbg !41
  %55 = and i32 %54, -8388608, !dbg !41
  %56 = sub i32 %53, %55, !dbg !41
  %57 = bitcast i32 %56 to float, !dbg !41
  %58 = sitofp i32 %55 to float, !dbg !41
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not.i = icmp eq i32 %59, 0, !dbg !41
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %58, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !41
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %58, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !41
  %.08.i = select i1 %.not.i, float %61, float %60, !dbg !41
  %62 = fadd float %57, -1.000000e+00, !dbg !41
  %63 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not1.i = icmp eq i32 %63, 0, !dbg !41
  %64 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %62, float 0x3FC2073EC0000000) #4, !dbg !41
  %65 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %62, float 0x3FC2073EC0000000) #4, !dbg !41
  %.010.i = select i1 %.not1.i, float %65, float %64, !dbg !41
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not2.i = icmp eq i32 %66, 0, !dbg !41
  %67 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %62, float 0xBFBF19B980000000) #4, !dbg !41
  %68 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %62, float 0xBFBF19B980000000) #4, !dbg !41
  %.011.i = select i1 %.not2.i, float %68, float %67, !dbg !41
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not3.i = icmp eq i32 %69, 0, !dbg !41
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %62, float 0x3FC1E52AA0000000) #4, !dbg !41
  %71 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %62, float 0x3FC1E52AA0000000) #4, !dbg !41
  %.012.i = select i1 %.not3.i, float %71, float %70, !dbg !41
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not4.i = icmp eq i32 %72, 0, !dbg !41
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %62, float 0xBFC55B1720000000) #4, !dbg !41
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %62, float 0xBFC55B1720000000) #4, !dbg !41
  %.09.i = select i1 %.not4.i, float %74, float %73, !dbg !41
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not5.i = icmp eq i32 %75, 0, !dbg !41
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %62, float 0x3FC99DA160000000) #4, !dbg !41
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %62, float 0x3FC99DA160000000) #4, !dbg !41
  %.05.i = select i1 %.not5.i, float %77, float %76, !dbg !41
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not6.i = icmp eq i32 %78, 0, !dbg !41
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %62, float 0xBFCFFFE440000000) #4, !dbg !41
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %62, float 0xBFCFFFE440000000) #4, !dbg !41
  %.01.i = select i1 %.not6.i, float %80, float %79, !dbg !41
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not7.i = icmp eq i32 %81, 0, !dbg !41
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %62, float 0x3FD5554F00000000) #4, !dbg !41
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %62, float 0x3FD5554F00000000) #4, !dbg !41
  %.0.i = select i1 %.not7.i, float %83, float %82, !dbg !41
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not8.i = icmp eq i32 %84, 0, !dbg !41
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %62, float -5.000000e-01) #4, !dbg !41
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %62, float -5.000000e-01) #4, !dbg !41
  %.07.i = select i1 %.not8.i, float %86, float %85, !dbg !41
  %87 = fmul float %62, %.07.i, !dbg !41
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not9.i = icmp eq i32 %88, 0, !dbg !41
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %87, float %62, float %62) #4, !dbg !41
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %87, float %62, float %62) #4, !dbg !41
  %.06.i = select i1 %.not9.i, float %90, float %89, !dbg !41
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not10.i = icmp eq i32 %91, 0, !dbg !41
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !41
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !41
  %.04.i = select i1 %.not10.i, float %93, float %92, !dbg !41
  %94 = icmp ugt i32 %53, 2139095039, !dbg !41
  br i1 %94, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !41

__nv_fmaf_rn.exit.i.i:                            ; preds = %8
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !41
  %.not11.i = icmp eq i32 %95, 0, !dbg !41
  %96 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !41
  %97 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !41
  %.03.i = select i1 %.not11.i, float %97, float %96, !dbg !41
  br label %__nv_logf.exit, !dbg !41

__nv_logf.exit:                                   ; preds = %8, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %8 ], !dbg !41
  %98 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !41
  %r.i.1.i = select i1 %98, float 0xFFF0000000000000, float %r.i.0.i, !dbg !41
  %99 = fmul float %36, 0x3FF7154760000000, !dbg !42
  %100 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %99) #4, !dbg !42
  %101 = fmul float %39, 0x3FF7154760000000, !dbg !43
  %102 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %101) #4, !dbg !43
  %103 = fadd float %100, %102, !dbg !44
  %104 = fmul float %42, 0x3FF7154760000000, !dbg !45
  %105 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %104) #4, !dbg !45
  %106 = fadd float %103, %105, !dbg !46
  %107 = fmul float %45, 0x3FF7154760000000, !dbg !47
  %108 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %107) #4, !dbg !47
  %109 = fadd float %106, %108, !dbg !48
  %110 = fcmp olt float %109, 0x3810000000000000, !dbg !49
  %111 = fmul float %109, 0x4160000000000000, !dbg !49
  %.02.i1 = select i1 %110, float %111, float %109, !dbg !49
  %i.i.0.i2 = select i1 %110, float -2.300000e+01, float 0.000000e+00, !dbg !49
  %112 = bitcast float %.02.i1 to i32, !dbg !49
  %113 = add i32 %112, -1059760811, !dbg !49
  %114 = and i32 %113, -8388608, !dbg !49
  %115 = sub i32 %112, %114, !dbg !49
  %116 = bitcast i32 %115 to float, !dbg !49
  %117 = sitofp i32 %114 to float, !dbg !49
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not.i3 = icmp eq i32 %118, 0, !dbg !49
  %119 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %117, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !49
  %120 = tail call float @llvm.nvvm.fma.rn.f(float %117, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !49
  %.08.i4 = select i1 %.not.i3, float %120, float %119, !dbg !49
  %121 = fadd float %116, -1.000000e+00, !dbg !49
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not1.i5 = icmp eq i32 %122, 0, !dbg !49
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %121, float 0x3FC2073EC0000000) #4, !dbg !49
  %124 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %121, float 0x3FC2073EC0000000) #4, !dbg !49
  %.010.i6 = select i1 %.not1.i5, float %124, float %123, !dbg !49
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not2.i7 = icmp eq i32 %125, 0, !dbg !49
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %121, float 0xBFBF19B980000000) #4, !dbg !49
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %121, float 0xBFBF19B980000000) #4, !dbg !49
  %.011.i8 = select i1 %.not2.i7, float %127, float %126, !dbg !49
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not3.i9 = icmp eq i32 %128, 0, !dbg !49
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %121, float 0x3FC1E52AA0000000) #4, !dbg !49
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %121, float 0x3FC1E52AA0000000) #4, !dbg !49
  %.012.i10 = select i1 %.not3.i9, float %130, float %129, !dbg !49
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not4.i11 = icmp eq i32 %131, 0, !dbg !49
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %121, float 0xBFC55B1720000000) #4, !dbg !49
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %121, float 0xBFC55B1720000000) #4, !dbg !49
  %.09.i12 = select i1 %.not4.i11, float %133, float %132, !dbg !49
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not5.i13 = icmp eq i32 %134, 0, !dbg !49
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %121, float 0x3FC99DA160000000) #4, !dbg !49
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %121, float 0x3FC99DA160000000) #4, !dbg !49
  %.05.i14 = select i1 %.not5.i13, float %136, float %135, !dbg !49
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not6.i15 = icmp eq i32 %137, 0, !dbg !49
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %121, float 0xBFCFFFE440000000) #4, !dbg !49
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %121, float 0xBFCFFFE440000000) #4, !dbg !49
  %.01.i16 = select i1 %.not6.i15, float %139, float %138, !dbg !49
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not7.i17 = icmp eq i32 %140, 0, !dbg !49
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %121, float 0x3FD5554F00000000) #4, !dbg !49
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %121, float 0x3FD5554F00000000) #4, !dbg !49
  %.0.i18 = select i1 %.not7.i17, float %142, float %141, !dbg !49
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not8.i19 = icmp eq i32 %143, 0, !dbg !49
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %121, float -5.000000e-01) #4, !dbg !49
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %121, float -5.000000e-01) #4, !dbg !49
  %.07.i20 = select i1 %.not8.i19, float %145, float %144, !dbg !49
  %146 = fmul float %121, %.07.i20, !dbg !49
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not9.i21 = icmp eq i32 %147, 0, !dbg !49
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %146, float %121, float %121) #4, !dbg !49
  %149 = tail call float @llvm.nvvm.fma.rn.f(float %146, float %121, float %121) #4, !dbg !49
  %.06.i22 = select i1 %.not9.i21, float %149, float %148, !dbg !49
  %150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not10.i23 = icmp eq i32 %150, 0, !dbg !49
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !49
  %152 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !49
  %.04.i24 = select i1 %.not10.i23, float %152, float %151, !dbg !49
  %153 = icmp ugt i32 %112, 2139095039, !dbg !49
  br i1 %153, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !49

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !49
  %.not11.i28 = icmp eq i32 %154, 0, !dbg !49
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !49
  %156 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !49
  %.03.i29 = select i1 %.not11.i28, float %156, float %155, !dbg !49
  br label %__nv_logf.exit30, !dbg !49

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !49
  %157 = fcmp oeq float %.02.i1, 0.000000e+00, !dbg !49
  %r.i.1.i26 = select i1 %157, float 0xFFF0000000000000, float %r.i.0.i25, !dbg !49
  %158 = fsub float %33, %r.i.1.i26, !dbg !50
  %159 = fsub float %r.i.1.i, %158, !dbg !51
  %160 = fmul float %49, %159, !dbg !52
  %161 = fadd float %9, %160, !dbg !53
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 64, !dbg !11
  %162 = icmp samesign ult i64 %indvars.iv, 192, !dbg !11
  br i1 %162, label %8, label %163, !dbg !11

163:                                              ; preds = %__nv_logf.exit30
  %164 = lshr i32 %5, 5, !dbg !10
  %165 = and i32 %5, 31, !dbg !10
  %166 = bitcast float %161 to i32, !dbg !54
  %167 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %166, i32 16, i32 31), !dbg !54
  %168 = bitcast i32 %167 to float, !dbg !54
  %169 = fadd float %161, %168, !dbg !58
  %170 = bitcast float %169 to i32, !dbg !54
  %171 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %170, i32 8, i32 31), !dbg !54
  %172 = bitcast i32 %171 to float, !dbg !54
  %173 = fadd float %169, %172, !dbg !58
  %174 = bitcast float %173 to i32, !dbg !54
  %175 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %174, i32 4, i32 31), !dbg !54
  %176 = bitcast i32 %175 to float, !dbg !54
  %177 = fadd float %173, %176, !dbg !58
  %178 = bitcast float %177 to i32, !dbg !54
  %179 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %178, i32 2, i32 31), !dbg !54
  %180 = bitcast i32 %179 to float, !dbg !54
  %181 = fadd float %177, %180, !dbg !58
  %182 = bitcast float %181 to i32, !dbg !54
  %183 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %182, i32 1, i32 31), !dbg !54
  %184 = bitcast i32 %183 to float, !dbg !54
  %185 = fadd float %181, %184, !dbg !58
  %186 = icmp eq i32 %165, 0, !dbg !54
  %187 = and i32 %164, 1, !dbg !54
  %188 = getelementptr float, ptr addrspace(3) @global_smem, i32 %187, !dbg !54
  %189 = bitcast float %185 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %188, <1 x i32> %189, i1 %186) #4, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %190 = icmp slt i32 %5, 2, !dbg !54
  %191 = getelementptr float, ptr addrspace(3) @global_smem, i32 %5, !dbg !54
  %192 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %191, i1 %190) #4, !dbg !54
  %193 = bitcast i32 %192 to float, !dbg !54
  %194 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %192, i32 1, i32 31), !dbg !54
  %195 = bitcast i32 %194 to float, !dbg !54
  %196 = fadd float %193, %195, !dbg !58
  %197 = and i32 %5, 1, !dbg !54
  %198 = icmp eq i32 %197, 0, !dbg !54
  %199 = and i1 %190, %198, !dbg !54
  %200 = bitcast float %196 to <1 x i32>, !dbg !54
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %191, <1 x i32> %200, i1 %199) #4, !dbg !54
  tail call void @llvm.nvvm.barrier0(), !dbg !54
  %201 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !54
  %202 = fmul float %201, 2.500000e-01, !dbg !60
  tail call void @llvm.nvvm.barrier0(), !dbg !61
  %203 = icmp eq i32 %6, 0, !dbg !62
  %204 = bitcast float %202 to i32, !dbg !62
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %204, ptr addrspace(1) %0, i1 %203) #4, !dbg !62
  ret void, !dbg !63
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c6jtqwhgz4kvqdbhnao6evpkmjhpqrixp7qj4uf3yqcij4ujf7st.py", directory: "inductor_cache/6j")
!4 = !{ptr @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2, !"kernel", i32 1}
!5 = !{ptr @triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2", linkageName: "triton_red_fused__log_softmax__softmax_add_div_log_mul_sub_sum_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 25, column: 33, scope: !7)
!11 = !DILocation(line: 27, column: 36, scope: !7)
!12 = !DILocation(line: 28, column: 27, scope: !7)
!13 = !DILocation(line: 33, column: 36, scope: !7)
!14 = !DILocation(line: 32, column: 34, scope: !7)
!15 = !DILocation(line: 32, column: 39, scope: !7)
!16 = !DILocation(line: 33, column: 34, scope: !7)
!17 = !DILocation(line: 33, column: 41, scope: !7)
!18 = !DILocation(line: 34, column: 38, scope: !7)
!19 = !DILocation(line: 34, column: 34, scope: !7)
!20 = !DILocation(line: 34, column: 45, scope: !7)
!21 = !DILocation(line: 35, column: 38, scope: !7)
!22 = !DILocation(line: 35, column: 34, scope: !7)
!23 = !DILocation(line: 35, column: 45, scope: !7)
!24 = !DILocation(line: 36, column: 34, scope: !7)
!25 = !DILocation(line: 36, column: 45, scope: !7)
!26 = !DILocation(line: 37, column: 35, scope: !7)
!27 = !DILocation(line: 37, column: 40, scope: !7)
!28 = !DILocation(line: 38, column: 35, scope: !7)
!29 = !DILocation(line: 38, column: 42, scope: !7)
!30 = !DILocation(line: 39, column: 35, scope: !7)
!31 = !DILocation(line: 39, column: 46, scope: !7)
!32 = !DILocation(line: 40, column: 35, scope: !7)
!33 = !DILocation(line: 40, column: 46, scope: !7)
!34 = !DILocation(line: 41, column: 35, scope: !7)
!35 = !DILocation(line: 41, column: 46, scope: !7)
!36 = !DILocation(line: 42, column: 22, scope: !7)
!37 = !DILocation(line: 43, column: 22, scope: !7)
!38 = !DILocation(line: 44, column: 22, scope: !7)
!39 = !DILocation(line: 45, column: 22, scope: !7)
!40 = !DILocation(line: 47, column: 23, scope: !7)
!41 = !DILocation(line: 48, column: 28, scope: !7)
!42 = !DILocation(line: 49, column: 28, scope: !7)
!43 = !DILocation(line: 50, column: 28, scope: !7)
!44 = !DILocation(line: 51, column: 24, scope: !7)
!45 = !DILocation(line: 52, column: 28, scope: !7)
!46 = !DILocation(line: 53, column: 24, scope: !7)
!47 = !DILocation(line: 54, column: 28, scope: !7)
!48 = !DILocation(line: 55, column: 24, scope: !7)
!49 = !DILocation(line: 56, column: 28, scope: !7)
!50 = !DILocation(line: 57, column: 24, scope: !7)
!51 = !DILocation(line: 58, column: 24, scope: !7)
!52 = !DILocation(line: 59, column: 23, scope: !7)
!53 = !DILocation(line: 61, column: 25, scope: !7)
!54 = !DILocation(line: 267, column: 36, scope: !55, inlinedAt: !57)
!55 = distinct !DILexicalBlockFile(scope: !7, file: !56, discriminator: 0)
!56 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!57 = !DILocation(line: 63, column: 27, scope: !7)
!58 = !DILocation(line: 256, column: 15, scope: !59, inlinedAt: !57)
!59 = distinct !DILexicalBlockFile(scope: !55, file: !56, discriminator: 0)
!60 = !DILocation(line: 65, column: 20, scope: !7)
!61 = !DILocation(line: 66, column: 4, scope: !7)
!62 = !DILocation(line: 67, column: 71, scope: !7)
!63 = !DILocation(line: 67, column: 4, scope: !7)
