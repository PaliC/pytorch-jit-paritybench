#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":42:58)
#loc25 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":45:59)
#loc45 = loc(callsite(#loc1 at #loc20))
#loc49 = loc(callsite(#loc1 at #loc25))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_convolution_div_max_pool2d_with_indices_pow_relu_sqrt_sub_sum_19(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 1.000000e-10 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc3)
    %2 = arith.muli %0, %c512_i32 : i32 loc(#loc4)
    %3 = tt.splat %2 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %1, %3 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc6)
    %6 = tt.addptr %5, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc6)
    %7 = tt.load %6 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %8, %1 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc8)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc9)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc10)
    %12 = tt.addptr %11, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc10)
    %13 = tt.load %12 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = arith.addf %7, %10 : tensor<512xf32, #blocked> loc(#loc12)
    %15 = arith.cmpf ogt, %cst_1, %14 : tensor<512xf32, #blocked> loc(#loc40)
    %16 = arith.select %15, %cst_1, %14 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc41)
    %17 = arith.addf %13, %10 : tensor<512xf32, #blocked> loc(#loc16)
    %18 = arith.cmpf ogt, %cst_1, %17 : tensor<512xf32, #blocked> loc(#loc42)
    %19 = arith.select %18, %cst_1, %17 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc43)
    %20 = arith.mulf %16, %16 : tensor<512xf32, #blocked> loc(#loc18)
    %21 = "tt.reduce"(%20) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc20)), %arg7: f32 loc(callsite(#loc1 at #loc20))):
      %38 = arith.addf %arg6, %arg7 : f32 loc(#loc51)
      tt.reduce.return %38 : f32 loc(#loc44)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc44)
    %22 = arith.addf %21, %cst_0 : f32 loc(#loc47)
    %23 = arith.mulf %19, %19 : tensor<512xf32, #blocked> loc(#loc24)
    %24 = "tt.reduce"(%23) <{axis = 0 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc25)), %arg7: f32 loc(callsite(#loc1 at #loc25))):
      %38 = arith.addf %arg6, %arg7 : f32 loc(#loc52)
      tt.reduce.return %38 : f32 loc(#loc48)
    }) : (tensor<512xf32, #blocked>) -> f32 loc(#loc48)
    %25 = arith.addf %24, %cst_0 : f32 loc(#loc50)
    %26 = tt.extern_elementwise %22 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc27)
    %27 = arith.addf %26, %cst : f32 loc(#loc28)
    %28 = tt.splat %27 : f32 -> tensor<512xf32, #blocked> loc(#loc29)
    %29 = arith.divf %16, %28 : tensor<512xf32, #blocked> loc(#loc29)
    %30 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc30)
    %31 = arith.addf %30, %cst : f32 loc(#loc31)
    %32 = tt.splat %31 : f32 -> tensor<512xf32, #blocked> loc(#loc32)
    %33 = arith.divf %19, %32 : tensor<512xf32, #blocked> loc(#loc32)
    %34 = arith.subf %29, %33 : tensor<512xf32, #blocked> loc(#loc33)
    %35 = arith.mulf %34, %34 : tensor<512xf32, #blocked> loc(#loc34)
    tt.store %6, %16 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc35)
    tt.store %12, %19 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc36)
    %36 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc37)
    %37 = tt.addptr %36, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc37)
    tt.store %37, %35 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc38)
    tt.return loc(#loc39)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":24:28)
#loc3 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":27:26)
#loc4 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":32:43)
#loc5 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":32:39)
#loc6 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":32:34)
#loc7 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":32:48)
#loc8 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":33:30)
#loc9 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":33:35)
#loc10 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":34:34)
#loc11 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":34:48)
#loc12 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":35:18)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc14 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":37:40)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc16 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":38:18)
#loc17 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":39:40)
#loc18 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":40:18)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc23 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":42:45)
#loc24 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":43:19)
#loc26 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":45:45)
#loc27 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":46:27)
#loc28 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":48:20)
#loc29 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":49:19)
#loc30 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":50:27)
#loc31 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":51:20)
#loc32 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":52:19)
#loc33 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":53:20)
#loc34 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":54:20)
#loc35 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":55:48)
#loc36 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":56:48)
#loc37 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":57:25)
#loc38 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":57:46)
#loc39 = loc("inductor_cache/ix/cixfuffzp4msbatopv7nfzbo4vkomrwkhgl4coc3shliq5j2l56y.py":57:4)
#loc40 = loc(callsite(#loc13 at #loc14))
#loc41 = loc(callsite(#loc15 at #loc14))
#loc42 = loc(callsite(#loc13 at #loc17))
#loc43 = loc(callsite(#loc15 at #loc17))
#loc44 = loc(callsite(#loc19 at #loc20))
#loc46 = loc(callsite(#loc21 at #loc19))
#loc47 = loc(callsite(#loc22 at #loc23))
#loc48 = loc(callsite(#loc19 at #loc25))
#loc50 = loc(callsite(#loc22 at #loc26))
#loc51 = loc(callsite(#loc46 at #loc20))
#loc52 = loc(callsite(#loc46 at #loc25))
