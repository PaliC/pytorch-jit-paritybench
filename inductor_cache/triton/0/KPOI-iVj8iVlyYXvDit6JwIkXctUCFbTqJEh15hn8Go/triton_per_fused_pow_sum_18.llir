; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_per_fused_pow_sum_18(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %8, 128, !dbg !12
  %10 = shl i32 %7, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %6, %8, !dbg !13
  %13 = or disjoint i32 %6, %9, !dbg !13
  %14 = or disjoint i32 %6, %11, !dbg !13
  %15 = icmp slt i32 %12, 196, !dbg !14
  %16 = icmp slt i32 %13, 196, !dbg !14
  %17 = icmp slt i32 %14, 196, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %18 = sdiv i32 %.frozen, 49, !dbg !15
  %19 = mul i32 %18, 49, !dbg !16
  %.decomposed = sub i32 %.frozen, %19, !dbg !16
  %.frozen3 = freeze i32 %13, !dbg !15
  %20 = sdiv i32 %.frozen3, 49, !dbg !15
  %21 = mul i32 %20, 49, !dbg !16
  %.decomposed4 = sub i32 %.frozen3, %21, !dbg !16
  %22 = mul i32 %18, 98, !dbg !17
  %23 = mul i32 %20, 98, !dbg !17
  %24 = add i32 %22, %.decomposed, !dbg !18
  %25 = add i32 %23, %.decomposed4, !dbg !18
  %26 = add i32 %24, 49, !dbg !18
  %27 = add i32 %25, 49, !dbg !18
  %28 = sext i32 %24 to i64, !dbg !19
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !19
  %30 = sext i32 %25 to i64, !dbg !19
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !19
  %32 = sext i32 %26 to i64, !dbg !19
  %33 = getelementptr float, ptr addrspace(1) %0, i64 %32, !dbg !19
  %34 = sext i32 %27 to i64, !dbg !19
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !19
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %15, i32 0, i1 %15) #2, !dbg !20
  %37 = bitcast i32 %36 to float, !dbg !20
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %31, i1 %16, i32 0, i1 %16) #2, !dbg !20
  %39 = bitcast i32 %38 to float, !dbg !20
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %15, i32 0, i1 %15) #2, !dbg !20
  %41 = bitcast i32 %40 to float, !dbg !20
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %16, i32 0, i1 %16) #2, !dbg !20
  %43 = bitcast i32 %42 to float, !dbg !20
  %44 = fadd float %37, %41, !dbg !21
  %45 = fadd float %39, %43, !dbg !21
  %46 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %8, !dbg !26
  %47 = bitcast float %44 to i32, !dbg !26
  %48 = select i1 %15, i32 %47, i32 0, !dbg !21
  %49 = insertelement <1 x i32> poison, i32 %48, i64 0, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %46, <1 x i32> %49, i1 true) #2, !dbg !26
  %50 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %9, !dbg !26
  %51 = bitcast float %45 to i32, !dbg !26
  %52 = select i1 %16, i32 %51, i32 0, !dbg !21
  %53 = insertelement <1 x i32> poison, i32 %52, i64 0, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %50, <1 x i32> %53, i1 true) #2, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %54 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !26
  %55 = sext i32 %14 to i64, !dbg !27
  %56 = getelementptr float, ptr addrspace(1) %1, i64 %55, !dbg !27
  %.extract = load i32, ptr addrspace(3) %54, align 8, !dbg !28
  %57 = getelementptr inbounds i8, ptr addrspace(3) %54, i32 4, !dbg !28
  %.extract2 = load i32, ptr addrspace(3) %57, align 4, !dbg !28
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.extract, i32 %.extract2, ptr addrspace(1) %56, i1 %17) #2, !dbg !28
  ret void, !dbg !29
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "csu4vd5j7e4j3oeflncvryvp3k5wlgk55ytnujc5cietkupbbwvc.py", directory: "inductor_cache/su")
!4 = !{ptr @triton_per_fused_pow_sum_18, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_pow_sum_18, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_pow_sum_18", linkageName: "triton_per_fused_pow_sum_18", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 31, column: 19, scope: !7)
!16 = !DILocation(line: 30, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 46, scope: !7)
!18 = !DILocation(line: 33, column: 43, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 33, column: 51, scope: !7)
!21 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !25)
!22 = distinct !DILexicalBlockFile(scope: !24, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!25 = !DILocation(line: 36, column: 24, scope: !7)
!26 = !DILocation(line: 36, column: 27, scope: !7)
!27 = !DILocation(line: 37, column: 25, scope: !7)
!28 = !DILocation(line: 37, column: 36, scope: !7)
!29 = !DILocation(line: 37, column: 4, scope: !7)
