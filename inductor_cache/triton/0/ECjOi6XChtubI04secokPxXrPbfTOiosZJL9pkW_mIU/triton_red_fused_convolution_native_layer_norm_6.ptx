//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_convolution_native_layer_norm_6 // -- Begin function triton_red_fused_convolution_native_layer_norm_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_red_fused_convolution_native_layer_norm_6
.visible .entry triton_red_fused_convolution_native_layer_norm_6(
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_6_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_6_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_6_param_2,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_6_param_3,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_6_param_4,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_6_param_5,
	.param .u64 .ptr .global .align 1 triton_red_fused_convolution_native_layer_norm_6_param_6,
	.param .u32 triton_red_fused_convolution_native_layer_norm_6_param_7,
	.param .u32 triton_red_fused_convolution_native_layer_norm_6_param_8
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<92>;
	.reg .b32 	%r<274>;
	.reg .f32 	%f<431>;
	.reg .b64 	%rd<45>;
	.loc	1 19 0                          // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_red_fused_convolution_native_layer_norm_6_param_6];
	ld.param.u64 	%rd10, [triton_red_fused_convolution_native_layer_norm_6_param_5];
	ld.param.u64 	%rd9, [triton_red_fused_convolution_native_layer_norm_6_param_4];
	ld.param.u64 	%rd8, [triton_red_fused_convolution_native_layer_norm_6_param_3];
	ld.param.u64 	%rd7, [triton_red_fused_convolution_native_layer_norm_6_param_2];
	ld.param.u64 	%rd6, [triton_red_fused_convolution_native_layer_norm_6_param_1];
	ld.param.u64 	%rd5, [triton_red_fused_convolution_native_layer_norm_6_param_0];
$L__tmp0:
	.loc	1 22 28                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:22:28
	// begin inline asm
	mov.u32 %r12, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:22:33
	shl.b32 	%r13, %r12, 6;
	.loc	1 23 44                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:23:44
	mov.u32 	%r1, %tid.x;
	bfe.u32 	%r2, %r1, 4, 5;
	and.b32  	%r3, %r1, 63;
	.loc	1 23 23                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:23:23
	or.b32  	%r4, %r13, %r2;
	or.b32  	%r5, %r4, 32;
	or.b32  	%r6, %r13, %r3;
	.loc	1 25 33                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:25:33
	shl.b32 	%r14, %r1, 2;
	and.b32  	%r15, %r14, 60;
	.loc	1 31 21                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:31:21
	shr.s32 	%r16, %r6, 31;
	shr.u32 	%r17, %r16, 28;
	add.s32 	%r18, %r6, %r17;
	shr.s32 	%r8, %r18, 4;
	.loc	1 31 27                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:31:27
	shr.u32 	%r19, %r8, 28;
	add.s32 	%r20, %r8, %r19;
	and.b32  	%r21, %r20, -16;
	sub.s32 	%r9, %r8, %r21;
	.loc	1 37 46                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:37:46
	mul.lo.s32 	%r10, %r4, 96;
	mul.lo.s32 	%r11, %r5, 96;
	.loc	1 33 36                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:33:36
	cvt.u64.u32 	%rd1, %r15;
	mov.f32 	%f105, 0f00000000;
	mov.u64 	%rd44, 0;
	mov.pred 	%p91, -1;
	setp.lt.s32 	%p36, %r5, 1024;
	setp.lt.s32 	%p31, %r4, 1024;
	mov.f32 	%f107, 0f3F800000;
	mov.f32 	%f383, %f105;
	mov.f32 	%f384, %f105;
	mov.f32 	%f385, %f105;
	mov.f32 	%f386, %f105;
	mov.f32 	%f387, %f105;
	mov.f32 	%f388, %f105;
	mov.f32 	%f389, %f105;
	mov.f32 	%f390, %f105;
	mov.f32 	%f391, %f105;
	mov.f32 	%f392, %f105;
	mov.f32 	%f393, %f105;
	mov.f32 	%f394, %f105;
	mov.f32 	%f395, %f105;
	mov.f32 	%f396, %f105;
	mov.f32 	%f397, %f105;
	mov.f32 	%f398, %f105;
	mov.f32 	%f399, %f105;
	mov.f32 	%f400, %f105;
	mov.f32 	%f401, %f105;
	mov.f32 	%f402, %f105;
	mov.f32 	%f403, %f105;
	mov.f32 	%f404, %f105;
	mov.f32 	%f405, %f105;
	mov.f32 	%f406, %f105;
	bra.uni 	$L__BB0_1;
$L__BB0_3:                              // %._crit_edge
                                        //   in Loop: Header=BB0_1 Depth=1
	.loc	1 44 60                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:44:60
	selp.f32 	%f399, %f415, %f399, %p22;
	selp.f32 	%f400, %f416, %f400, %p22;
	selp.f32 	%f401, %f417, %f401, %p22;
	selp.f32 	%f402, %f418, %f402, %p22;
	selp.f32 	%f403, %f419, %f403, %p23;
	selp.f32 	%f404, %f420, %f404, %p23;
	selp.f32 	%f405, %f421, %f405, %p23;
	selp.f32 	%f406, %f422, %f406, %p23;
	.loc	1 45 56                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:45:56
	selp.f32 	%f391, %f407, %f391, %p22;
	selp.f32 	%f392, %f408, %f392, %p22;
	selp.f32 	%f393, %f409, %f393, %p22;
	selp.f32 	%f394, %f410, %f394, %p22;
	selp.f32 	%f395, %f411, %f395, %p23;
	selp.f32 	%f396, %f412, %f396, %p23;
	selp.f32 	%f397, %f413, %f397, %p23;
	selp.f32 	%f398, %f414, %f398, %p23;
	.loc	1 46 64                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:46:64
	selp.f32 	%f383, %f423, %f383, %p22;
	selp.f32 	%f384, %f424, %f384, %p22;
	selp.f32 	%f385, %f425, %f385, %p22;
	selp.f32 	%f386, %f426, %f386, %p22;
	selp.f32 	%f387, %f427, %f387, %p23;
	selp.f32 	%f388, %f428, %f388, %p23;
	selp.f32 	%f389, %f429, %f389, %p23;
	selp.f32 	%f390, %f430, %f390, %p23;
	.loc	1 47 51                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:47:51
	mov.b32 	%r73, %f25;
	mov.b32 	%r74, %f26;
	mov.b32 	%r75, %f27;
	mov.b32 	%r76, %f28;
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd20 + 0 ], { %r73, %r74, %r75, %r76 };
	// end inline asm
	mov.b32 	%r77, %f29;
	mov.b32 	%r78, %f30;
	mov.b32 	%r79, %f31;
	mov.b32 	%r80, %f32;
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd21 + 0 ], { %r77, %r78, %r79, %r80 };
	// end inline asm
	mov.u64 	%rd44, 64;
	mov.pred 	%p91, 0;
	.loc	1 33 36                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:33:36
	@%p1 bra 	$L__BB0_1;
	bra.uni 	$L__BB0_4;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:0:36
	mov.pred 	%p1, %p91;
	.loc	1 34 27                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:34:27
	or.b64  	%rd16, %rd44, %rd1;
	.loc	1 35 25                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:35:25
	setp.lt.u64 	%p15, %rd16, 96;
	.loc	1 37 43                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:37:43
	cvt.u32.u64 	%r46, %rd16;
	add.s32 	%r47, %r10, %r46;
	add.s32 	%r48, %r11, %r46;
	.loc	1 37 38                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:37:38
	mul.wide.s32 	%rd17, %r47, 4;
	add.s64 	%rd20, %rd5, %rd17;
	mul.wide.s32 	%rd18, %r48, 4;
	add.s64 	%rd21, %rd5, %rd18;
	.loc	1 37 59                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:37:59
	and.pred  	%p22, %p31, %p15;
	and.pred  	%p23, %p36, %p15;
	mov.b32 	%r146, 0;
	.loc	1 37 51                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:37:51
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r25, 0x0;
	@%p22 ld.global.L1::evict_first.v4.b32 { %r22, %r23, %r24, %r25 }, [ %rd20 + 0 ];
	@!%p22 mov.u32 %r22, %r146;
	@!%p22 mov.u32 %r23, %r146;
	@!%p22 mov.u32 %r24, %r146;
	@!%p22 mov.u32 %r25, %r146;
	// end inline asm
	mov.b32 	%f108, %r22;
	mov.b32 	%f109, %r23;
	mov.b32 	%f110, %r24;
	mov.b32 	%f111, %r25;
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p23 ld.global.L1::evict_first.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd21 + 0 ];
	@!%p23 mov.u32 %r30, %r146;
	@!%p23 mov.u32 %r31, %r146;
	@!%p23 mov.u32 %r32, %r146;
	@!%p23 mov.u32 %r33, %r146;
	// end inline asm
	mov.b32 	%f112, %r30;
	mov.b32 	%f113, %r31;
	mov.b32 	%f114, %r32;
	mov.b32 	%f115, %r33;
	.loc	1 38 34                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:38:34
	shl.b64 	%rd19, %rd16, 2;
	add.s64 	%rd15, %rd6, %rd19;
	.loc	1 38 39                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:38:39
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r40, 0x0;
	mov.u32 %r41, 0x0;
	@%p15 ld.global.L1::evict_last.v4.b32 { %r38, %r39, %r40, %r41 }, [ %rd15 + 0 ];
	@!%p15 mov.u32 %r38, %r146;
	@!%p15 mov.u32 %r39, %r146;
	@!%p15 mov.u32 %r40, %r146;
	@!%p15 mov.u32 %r41, %r146;
	// end inline asm
	mov.b32 	%f116, %r38;
	mov.b32 	%f117, %r39;
	mov.b32 	%f118, %r40;
	mov.b32 	%f119, %r41;
	.loc	1 39 22                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:39:22
	add.f32 	%f25, %f108, %f116;
	add.f32 	%f26, %f109, %f117;
	add.f32 	%f27, %f110, %f118;
	add.f32 	%f28, %f111, %f119;
	add.f32 	%f29, %f112, %f116;
	add.f32 	%f30, %f113, %f117;
	add.f32 	%f31, %f114, %f118;
	add.f32 	%f32, %f115, %f119;
	mov.f32 	%f407, %f105;
	mov.f32 	%f408, %f105;
	mov.f32 	%f409, %f105;
	mov.f32 	%f410, %f105;
	mov.f32 	%f411, %f105;
	mov.f32 	%f412, %f105;
	mov.f32 	%f413, %f105;
	mov.f32 	%f414, %f105;
	mov.f32 	%f415, %f25;
	mov.f32 	%f416, %f26;
	mov.f32 	%f417, %f27;
	mov.f32 	%f418, %f28;
	mov.f32 	%f419, %f29;
	mov.f32 	%f420, %f30;
	mov.f32 	%f421, %f31;
	mov.f32 	%f422, %f32;
	mov.f32 	%f423, %f107;
	mov.f32 	%f424, %f107;
	mov.f32 	%f425, %f107;
	mov.f32 	%f426, %f107;
	mov.f32 	%f427, %f107;
	mov.f32 	%f428, %f107;
	mov.f32 	%f429, %f107;
	mov.f32 	%f430, %f107;
$L__tmp1:
	.loc	2 178 7                         // triton_helpers.py:178:7
	@%p1 bra 	$L__BB0_3;
// %bb.2:                               //   in Loop: Header=BB0_1 Depth=1
	.loc	2 183 24                        // triton_helpers.py:183:24
	sub.f32 	%f120, %f25, %f399;
	sub.f32 	%f121, %f26, %f400;
	sub.f32 	%f122, %f27, %f401;
	sub.f32 	%f123, %f28, %f402;
	sub.f32 	%f124, %f29, %f403;
	sub.f32 	%f125, %f30, %f404;
	sub.f32 	%f126, %f31, %f405;
	sub.f32 	%f127, %f32, %f406;
	.loc	2 184 30                        // triton_helpers.py:184:30
	add.f32 	%f423, %f383, 0f3F800000;
	add.f32 	%f424, %f384, 0f3F800000;
	add.f32 	%f425, %f385, 0f3F800000;
	add.f32 	%f426, %f386, 0f3F800000;
	add.f32 	%f427, %f387, 0f3F800000;
	add.f32 	%f428, %f388, 0f3F800000;
	add.f32 	%f429, %f389, 0f3F800000;
	add.f32 	%f430, %f390, 0f3F800000;
	.loc	2 185 34                        // triton_helpers.py:185:34
	mov.b32 	%r50, %f120;
	mov.b32 	%r51, %f423;
	// begin inline asm
	div.full.f32 %r49, %r50, %r51;
	// end inline asm
	mov.b32 	%f128, %r49;
	mov.b32 	%r53, %f121;
	mov.b32 	%r54, %f424;
	// begin inline asm
	div.full.f32 %r52, %r53, %r54;
	// end inline asm
	mov.b32 	%f129, %r52;
	mov.b32 	%r56, %f122;
	mov.b32 	%r57, %f425;
	// begin inline asm
	div.full.f32 %r55, %r56, %r57;
	// end inline asm
	mov.b32 	%f130, %r55;
	mov.b32 	%r59, %f123;
	mov.b32 	%r60, %f426;
	// begin inline asm
	div.full.f32 %r58, %r59, %r60;
	// end inline asm
	mov.b32 	%f131, %r58;
	mov.b32 	%r62, %f124;
	mov.b32 	%r63, %f427;
	// begin inline asm
	div.full.f32 %r61, %r62, %r63;
	// end inline asm
	mov.b32 	%f132, %r61;
	mov.b32 	%r65, %f125;
	mov.b32 	%r66, %f428;
	// begin inline asm
	div.full.f32 %r64, %r65, %r66;
	// end inline asm
	mov.b32 	%f133, %r64;
	mov.b32 	%r68, %f126;
	mov.b32 	%r69, %f429;
	// begin inline asm
	div.full.f32 %r67, %r68, %r69;
	// end inline asm
	mov.b32 	%f134, %r67;
	mov.b32 	%r71, %f127;
	mov.b32 	%r72, %f430;
	// begin inline asm
	div.full.f32 %r70, %r71, %r72;
	// end inline asm
	mov.b32 	%f135, %r70;
	.loc	2 185 26                        // triton_helpers.py:185:26
	add.f32 	%f415, %f399, %f128;
	add.f32 	%f416, %f400, %f129;
	add.f32 	%f417, %f401, %f130;
	add.f32 	%f418, %f402, %f131;
	add.f32 	%f419, %f403, %f132;
	add.f32 	%f420, %f404, %f133;
	add.f32 	%f421, %f405, %f134;
	add.f32 	%f422, %f406, %f135;
	.loc	2 186 39                        // triton_helpers.py:186:39
	sub.f32 	%f136, %f25, %f415;
	sub.f32 	%f137, %f26, %f416;
	sub.f32 	%f138, %f27, %f417;
	sub.f32 	%f139, %f28, %f418;
	sub.f32 	%f140, %f29, %f419;
	sub.f32 	%f141, %f30, %f420;
	sub.f32 	%f142, %f31, %f421;
	sub.f32 	%f143, %f32, %f422;
	.loc	2 186 22                        // triton_helpers.py:186:22
	fma.rn.f32 	%f407, %f120, %f136, %f391;
	fma.rn.f32 	%f408, %f121, %f137, %f392;
	fma.rn.f32 	%f409, %f122, %f138, %f393;
	fma.rn.f32 	%f410, %f123, %f139, %f394;
	fma.rn.f32 	%f411, %f124, %f140, %f395;
	fma.rn.f32 	%f412, %f125, %f141, %f396;
	fma.rn.f32 	%f413, %f126, %f142, %f397;
	fma.rn.f32 	%f414, %f127, %f143, %f398;
	bra.uni 	$L__BB0_3;
$L__tmp2:
$L__BB0_4:                              // %__nv_rsqrtf.exit
	.loc	2 0 22                          // triton_helpers.py:0:22
	cvt.u32.u64 	%r222, %rd1;
	.loc	1 24 21                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:24:21
	setp.lt.s32 	%p75, %r6, 1024;
	.loc	1 30 19                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:30:19
	shl.b32 	%r223, %r8, 4;
	sub.s32 	%r224, %r6, %r223;
	.loc	1 32 19                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:32:19
	shr.u32 	%r226, %r16, 24;
	add.s32 	%r227, %r6, %r226;
$L__tmp3:
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f144, %f400, %f399;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f145, %f383, %f384;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p76, %f145, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r83, %f145;
	mov.b32 	%r82, %f384;
	// begin inline asm
	div.full.f32 %r81, %r82, %r83;
	// end inline asm
	mov.b32 	%f146, %r81;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f147, 0f00000000, %f146, %p76;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f148, %f144, %f147, %f399;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f149, %f391, %f392;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f150, %f144, %f144;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f151, %f150, %f383;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f152, %f151, %f147, %f149;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f153, %f401, %f148;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f154, %f385, %f145;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p77, %f154, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r86, %f154;
	mov.b32 	%r85, %f385;
	// begin inline asm
	div.full.f32 %r84, %r85, %r86;
	// end inline asm
	mov.b32 	%f155, %r84;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f156, 0f00000000, %f155, %p77;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f157, %f156, %f153, %f148;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f158, %f393, %f152;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f159, %f153, %f153;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f160, %f145, %f159;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f161, %f156, %f160, %f158;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f162, %f402, %f157;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f163, %f386, %f154;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p78, %f163, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r89, %f163;
	mov.b32 	%r88, %f386;
	// begin inline asm
	div.full.f32 %r87, %r88, %r89;
	// end inline asm
	mov.b32 	%f164, %r87;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f165, 0f00000000, %f164, %p78;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f166, %f165, %f162, %f157;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f167, %f394, %f161;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f168, %f162, %f162;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f169, %f154, %f168;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f170, %f165, %f169, %f167;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f171, %f404, %f403;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f172, %f387, %f388;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p79, %f172, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r92, %f172;
	mov.b32 	%r91, %f388;
	// begin inline asm
	div.full.f32 %r90, %r91, %r92;
	// end inline asm
	mov.b32 	%f173, %r90;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f174, 0f00000000, %f173, %p79;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f175, %f171, %f174, %f403;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f176, %f395, %f396;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f177, %f171, %f171;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f178, %f177, %f387;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f179, %f178, %f174, %f176;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f180, %f405, %f175;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f181, %f389, %f172;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p80, %f181, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r95, %f181;
	mov.b32 	%r94, %f389;
	// begin inline asm
	div.full.f32 %r93, %r94, %r95;
	// end inline asm
	mov.b32 	%f182, %r93;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f183, 0f00000000, %f182, %p80;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f184, %f183, %f180, %f175;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f185, %f397, %f179;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f186, %f180, %f180;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f187, %f172, %f186;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f188, %f183, %f187, %f185;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f189, %f406, %f184;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f190, %f390, %f181;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p81, %f190, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r98, %f190;
	mov.b32 	%r97, %f390;
	// begin inline asm
	div.full.f32 %r96, %r97, %r98;
	// end inline asm
	mov.b32 	%f191, %r96;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f192, 0f00000000, %f191, %p81;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f193, %f192, %f189, %f184;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f194, %f398, %f188;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f195, %f189, %f189;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f196, %f181, %f195;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f197, %f192, %f196, %f194;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r228, %f166;
	shfl.sync.bfly.b32	%r229, %r228, 8, 31, -1;
	mov.b32 	%f198, %r229;
	mov.b32 	%r230, %f170;
	shfl.sync.bfly.b32	%r231, %r230, 8, 31, -1;
	mov.b32 	%f199, %r231;
	shfl.sync.bfly.b32	%r100, %r89, 8, 31, -1;
	mov.b32 	%f200, %r100;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f201, %f198, %f166;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f202, %f163, %f200;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p82, %f202, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r101, %f202;
	// begin inline asm
	div.full.f32 %r99, %r100, %r101;
	// end inline asm
	mov.b32 	%f203, %r99;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f204, 0f00000000, %f203, %p82;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f205, %f201, %f204, %f166;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f206, %f170, %f199;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f207, %f201, %f201;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f208, %f163, %f207;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f209, %f208, %f204, %f206;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r232, %f205;
	shfl.sync.bfly.b32	%r233, %r232, 4, 31, -1;
	mov.b32 	%f210, %r233;
	mov.b32 	%r234, %f209;
	shfl.sync.bfly.b32	%r235, %r234, 4, 31, -1;
	mov.b32 	%f211, %r235;
	shfl.sync.bfly.b32	%r103, %r101, 4, 31, -1;
	mov.b32 	%f212, %r103;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f213, %f210, %f205;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f214, %f202, %f212;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p83, %f214, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r104, %f214;
	// begin inline asm
	div.full.f32 %r102, %r103, %r104;
	// end inline asm
	mov.b32 	%f215, %r102;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f216, 0f00000000, %f215, %p83;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f217, %f213, %f216, %f205;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f218, %f209, %f211;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f219, %f213, %f213;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f220, %f202, %f219;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f221, %f216, %f220, %f218;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r236, %f217;
	shfl.sync.bfly.b32	%r237, %r236, 2, 31, -1;
	mov.b32 	%f222, %r237;
	mov.b32 	%r238, %f221;
	shfl.sync.bfly.b32	%r239, %r238, 2, 31, -1;
	mov.b32 	%f223, %r239;
	shfl.sync.bfly.b32	%r106, %r104, 2, 31, -1;
	mov.b32 	%f224, %r106;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f225, %f222, %f217;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f226, %f214, %f224;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p84, %f226, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r107, %f226;
	// begin inline asm
	div.full.f32 %r105, %r106, %r107;
	// end inline asm
	mov.b32 	%f227, %r105;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f228, 0f00000000, %f227, %p84;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f229, %f225, %f228, %f217;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f230, %f221, %f223;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f231, %f225, %f225;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f232, %f214, %f231;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f233, %f228, %f232, %f230;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r240, %f229;
	shfl.sync.bfly.b32	%r241, %r240, 1, 31, -1;
	mov.b32 	%f234, %r241;
	mov.b32 	%r242, %f233;
	shfl.sync.bfly.b32	%r243, %r242, 1, 31, -1;
	mov.b32 	%f235, %r243;
	shfl.sync.bfly.b32	%r109, %r107, 1, 31, -1;
	mov.b32 	%f236, %r109;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f237, %f234, %f229;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f238, %f226, %f236;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p85, %f238, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r110, %f238;
	// begin inline asm
	div.full.f32 %r108, %r109, %r110;
	// end inline asm
	mov.b32 	%f239, %r108;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f240, 0f00000000, %f239, %p85;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f241, %f237, %f240, %f229;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f242, %f233, %f235;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f243, %f237, %f237;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f244, %f226, %f243;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f245, %f240, %f244, %f242;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r244, %f193;
	shfl.sync.bfly.b32	%r245, %r244, 8, 31, -1;
	mov.b32 	%f246, %r245;
	mov.b32 	%r246, %f197;
	shfl.sync.bfly.b32	%r247, %r246, 8, 31, -1;
	mov.b32 	%f247, %r247;
	shfl.sync.bfly.b32	%r112, %r98, 8, 31, -1;
	mov.b32 	%f248, %r112;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f249, %f246, %f193;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f250, %f190, %f248;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p86, %f250, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r113, %f250;
	// begin inline asm
	div.full.f32 %r111, %r112, %r113;
	// end inline asm
	mov.b32 	%f251, %r111;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f252, 0f00000000, %f251, %p86;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f253, %f249, %f252, %f193;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f254, %f197, %f247;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f255, %f249, %f249;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f256, %f190, %f255;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f257, %f256, %f252, %f254;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r248, %f253;
	shfl.sync.bfly.b32	%r249, %r248, 4, 31, -1;
	mov.b32 	%f258, %r249;
	mov.b32 	%r250, %f257;
	shfl.sync.bfly.b32	%r251, %r250, 4, 31, -1;
	mov.b32 	%f259, %r251;
	shfl.sync.bfly.b32	%r115, %r113, 4, 31, -1;
	mov.b32 	%f260, %r115;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f261, %f258, %f253;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f262, %f250, %f260;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p87, %f262, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r116, %f262;
	// begin inline asm
	div.full.f32 %r114, %r115, %r116;
	// end inline asm
	mov.b32 	%f263, %r114;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f264, 0f00000000, %f263, %p87;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f265, %f261, %f264, %f253;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f266, %f257, %f259;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f267, %f261, %f261;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f268, %f250, %f267;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f269, %f264, %f268, %f266;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r252, %f265;
	shfl.sync.bfly.b32	%r253, %r252, 2, 31, -1;
	mov.b32 	%f270, %r253;
	mov.b32 	%r254, %f269;
	shfl.sync.bfly.b32	%r255, %r254, 2, 31, -1;
	mov.b32 	%f271, %r255;
	shfl.sync.bfly.b32	%r118, %r116, 2, 31, -1;
	mov.b32 	%f272, %r118;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f273, %f270, %f265;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f274, %f262, %f272;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p88, %f274, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r119, %f274;
	// begin inline asm
	div.full.f32 %r117, %r118, %r119;
	// end inline asm
	mov.b32 	%f275, %r117;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f276, 0f00000000, %f275, %p88;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f277, %f273, %f276, %f265;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f278, %f269, %f271;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f279, %f273, %f273;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f280, %f262, %f279;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f281, %f276, %f280, %f278;
	.loc	2 204 46                        // triton_helpers.py:204:46
	mov.b32 	%r256, %f277;
	shfl.sync.bfly.b32	%r257, %r256, 1, 31, -1;
	mov.b32 	%f282, %r257;
	mov.b32 	%r258, %f281;
	shfl.sync.bfly.b32	%r259, %r258, 1, 31, -1;
	mov.b32 	%f283, %r259;
	shfl.sync.bfly.b32	%r121, %r119, 1, 31, -1;
	mov.b32 	%f284, %r121;
	.loc	2 192 21                        // triton_helpers.py:192:21
	sub.f32 	%f285, %f282, %f277;
	.loc	2 193 28                        // triton_helpers.py:193:28
	add.f32 	%f286, %f274, %f284;
	.loc	2 194 39                        // triton_helpers.py:194:39
	setp.eq.f32 	%p89, %f286, 0f00000000;
	.loc	2 194 60                        // triton_helpers.py:194:60
	mov.b32 	%r122, %f286;
	// begin inline asm
	div.full.f32 %r120, %r121, %r122;
	// end inline asm
	mov.b32 	%f287, %r120;
	.loc	2 194 49                        // triton_helpers.py:194:49
	selp.f32 	%f288, 0f00000000, %f287, %p89;
	.loc	2 196 17                        // triton_helpers.py:196:17
	fma.rn.f32 	%f289, %f285, %f288, %f277;
	.loc	2 197 15                        // triton_helpers.py:197:15
	add.f32 	%f290, %f281, %f283;
	.loc	2 197 30                        // triton_helpers.py:197:30
	mul.f32 	%f291, %f285, %f285;
	.loc	2 197 38                        // triton_helpers.py:197:38
	mul.f32 	%f292, %f274, %f291;
	.loc	2 197 22                        // triton_helpers.py:197:22
	fma.rn.f32 	%f293, %f288, %f292, %f290;
$L__tmp4:
	.loc	1 51 20                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:51:20
	shl.b32 	%r260, %r2, 2;
	mov.u32 	%r261, global_smem;
	add.s32 	%r123, %r261, %r260;
	mov.b32 	%r124, %f241;
	mov.pred 	%p25, -1;
	// begin inline asm
	@%p25 st.shared.b32 [ %r123 + 0 ], %r124;
	// end inline asm
	add.s32 	%r125, %r123, 128;
	mov.b32 	%r126, %f289;
	// begin inline asm
	@%p25 st.shared.b32 [ %r125 + 0 ], %r126;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r262, %r3, 2;
	add.s32 	%r263, %r261, %r262;
	ld.shared.u32 	%r131, [%r263];
	.loc	1 59 28                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:59:28
	bar.sync 	0;
	mov.b32 	%r128, %f245;
	// begin inline asm
	@%p25 st.shared.b32 [ %r123 + 0 ], %r128;
	// end inline asm
	mov.b32 	%r130, %f293;
	// begin inline asm
	@%p25 st.shared.b32 [ %r125 + 0 ], %r130;
	// end inline asm
	bar.sync 	0;
	.loc	1 54 33                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:54:33
	shl.b32 	%r264, %r224, 4;
	.loc	1 54 30                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:54:30
	add.s32 	%r265, %r9, %r264;
	.loc	1 54 42                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:54:42
	and.b32  	%r266, %r227, -256;
	.loc	1 54 38                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:54:38
	add.s32 	%r267, %r265, %r266;
	.loc	1 54 25                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:54:25
	mul.wide.s32 	%rd37, %r267, 4;
	add.s64 	%rd23, %rd9, %rd37;
	.loc	1 54 53                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:54:53
	and.b32  	%r268, %r1, 448;
	setp.eq.s32 	%p90, %r268, 0;
	and.pred  	%p29, %p90, %p75;
	.loc	1 56 18                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:56:18
	ld.shared.u32 	%r133, [%r263];
	.loc	1 54 53                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:54:53
	// begin inline asm
	@%p29 st.global.b32 [ %rd23 + 0 ], { %r131 };
	// end inline asm
	mov.b32 	%r134, 1119879168;
	.loc	1 56 18                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:56:18
	// begin inline asm
	div.full.f32 %r132, %r133, %r134;
	// end inline asm
	mov.b32 	%f294, %r132;
	// begin inline asm
	div.full.f32 %r135, %r128, %r134;
	// end inline asm
	mov.b32 	%f295, %r135;
	// begin inline asm
	div.full.f32 %r138, %r130, %r134;
	// end inline asm
	mov.b32 	%f296, %r138;
	.loc	1 58 19                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:58:19
	add.f32 	%f297, %f294, 0f358637BD;
	add.f32 	%f298, %f295, 0f358637BD;
	add.f32 	%f299, %f296, 0f358637BD;
	.loc	1 59 28                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:59:28
	rsqrt.approx.ftz.f32 	%f300, %f297;
	rsqrt.approx.ftz.f32 	%f301, %f298;
	rsqrt.approx.ftz.f32 	%f302, %f299;
	.loc	1 60 25                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:60:25
	add.s64 	%rd24, %rd10, %rd37;
	.loc	1 60 54                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:60:54
	mov.b32 	%r141, %f300;
	// begin inline asm
	@%p29 st.global.b32 [ %rd24 + 0 ], { %r141 };
	// end inline asm
	.loc	1 65 44                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:65:44
	add.s32 	%r269, %r222, %r10;
	add.s32 	%r270, %r222, %r11;
	.loc	1 65 39                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:65:39
	mul.wide.s32 	%rd38, %r269, 4;
	add.s64 	%rd25, %rd5, %rd38;
	mul.wide.s32 	%rd39, %r270, 4;
	add.s64 	%rd26, %rd5, %rd39;
	.loc	1 65 52                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:65:52
	// begin inline asm
	mov.u32 %r142, 0x0;
	mov.u32 %r143, 0x0;
	mov.u32 %r144, 0x0;
	mov.u32 %r145, 0x0;
	@%p31 ld.global.L1::evict_first.v4.b32 { %r142, %r143, %r144, %r145 }, [ %rd25 + 0 ];
	@!%p31 mov.u32 %r142, %r146;
	@!%p31 mov.u32 %r143, %r146;
	@!%p31 mov.u32 %r144, %r146;
	@!%p31 mov.u32 %r145, %r146;
	// end inline asm
	mov.b32 	%f303, %r142;
	mov.b32 	%f304, %r143;
	mov.b32 	%f305, %r144;
	mov.b32 	%f306, %r145;
	// begin inline asm
	mov.u32 %r150, 0x0;
	mov.u32 %r151, 0x0;
	mov.u32 %r152, 0x0;
	mov.u32 %r153, 0x0;
	@%p36 ld.global.L1::evict_first.v4.b32 { %r150, %r151, %r152, %r153 }, [ %rd26 + 0 ];
	@!%p36 mov.u32 %r150, %r146;
	@!%p36 mov.u32 %r151, %r146;
	@!%p36 mov.u32 %r152, %r146;
	@!%p36 mov.u32 %r153, %r146;
	// end inline asm
	mov.b32 	%f307, %r150;
	mov.b32 	%f308, %r151;
	mov.b32 	%f309, %r152;
	mov.b32 	%f310, %r153;
	.loc	1 66 35                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:66:35
	shl.b64 	%rd40, %rd1, 2;
	add.s64 	%rd27, %rd7, %rd40;
	.loc	1 66 40                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:66:40
	// begin inline asm
	mov.u32 %r158, 0x0;
	mov.u32 %r159, 0x0;
	mov.u32 %r160, 0x0;
	mov.u32 %r161, 0x0;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r158, %r159, %r160, %r161 }, [ %rd27 + 0 ];
	@!%p25 mov.u32 %r158, %r146;
	@!%p25 mov.u32 %r159, %r146;
	@!%p25 mov.u32 %r160, %r146;
	@!%p25 mov.u32 %r161, %r146;
	// end inline asm
	mov.b32 	%f311, %r158;
	mov.b32 	%f312, %r159;
	mov.b32 	%f313, %r160;
	mov.b32 	%f314, %r161;
	.loc	1 67 35                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:67:35
	add.s64 	%rd28, %rd8, %rd40;
	.loc	1 67 40                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:67:40
	// begin inline asm
	mov.u32 %r166, 0x0;
	mov.u32 %r167, 0x0;
	mov.u32 %r168, 0x0;
	mov.u32 %r169, 0x0;
	@%p25 ld.global.L1::evict_last.v4.b32 { %r166, %r167, %r168, %r169 }, [ %rd28 + 0 ];
	@!%p25 mov.u32 %r166, %r146;
	@!%p25 mov.u32 %r167, %r146;
	@!%p25 mov.u32 %r168, %r146;
	@!%p25 mov.u32 %r169, %r146;
	// end inline asm
	mov.b32 	%f315, %r166;
	mov.b32 	%f316, %r167;
	mov.b32 	%f317, %r168;
	mov.b32 	%f318, %r169;
	.loc	1 68 24                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:68:24
	sub.f32 	%f319, %f303, %f241;
	sub.f32 	%f320, %f304, %f241;
	sub.f32 	%f321, %f305, %f241;
	sub.f32 	%f322, %f306, %f241;
	sub.f32 	%f323, %f307, %f289;
	sub.f32 	%f324, %f308, %f289;
	sub.f32 	%f325, %f309, %f289;
	sub.f32 	%f326, %f310, %f289;
	.loc	1 69 24                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:69:24
	mul.f32 	%f327, %f301, %f319;
	mul.f32 	%f328, %f301, %f320;
	mul.f32 	%f329, %f301, %f321;
	mul.f32 	%f330, %f301, %f322;
	mul.f32 	%f331, %f302, %f323;
	mul.f32 	%f332, %f302, %f324;
	mul.f32 	%f333, %f302, %f325;
	mul.f32 	%f334, %f302, %f326;
	.loc	1 71 24                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:71:24
	fma.rn.f32 	%f335, %f327, %f311, %f315;
	fma.rn.f32 	%f336, %f328, %f312, %f316;
	fma.rn.f32 	%f337, %f329, %f313, %f317;
	fma.rn.f32 	%f338, %f330, %f314, %f318;
	fma.rn.f32 	%f339, %f331, %f311, %f315;
	fma.rn.f32 	%f340, %f332, %f312, %f316;
	fma.rn.f32 	%f341, %f333, %f313, %f317;
	fma.rn.f32 	%f342, %f334, %f314, %f318;
	.loc	1 72 29                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:72:29
	add.s64 	%rd29, %rd11, %rd38;
	add.s64 	%rd30, %rd11, %rd39;
	.loc	1 72 49                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:72:49
	mov.b32 	%r174, %f335;
	mov.b32 	%r175, %f336;
	mov.b32 	%r176, %f337;
	mov.b32 	%r177, %f338;
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd29 + 0 ], { %r174, %r175, %r176, %r177 };
	// end inline asm
	mov.b32 	%r178, %f339;
	mov.b32 	%r179, %f340;
	mov.b32 	%r180, %f341;
	mov.b32 	%r181, %f342;
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd30 + 0 ], { %r178, %r179, %r180, %r181 };
	// end inline asm
	.loc	1 62 27                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:62:27
	or.b64  	%rd41, %rd1, 64;
	.loc	1 63 25                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:63:25
	setp.lt.u64 	%p63, %rd41, 96;
	.loc	1 65 44                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:65:44
	cvt.u32.u64 	%r271, %rd41;
	add.s32 	%r272, %r10, %r271;
	add.s32 	%r273, %r11, %r271;
	.loc	1 65 39                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:65:39
	mul.wide.s32 	%rd42, %r272, 4;
	add.s64 	%rd31, %rd5, %rd42;
	mul.wide.s32 	%rd43, %r273, 4;
	add.s64 	%rd32, %rd5, %rd43;
	.loc	1 65 60                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:65:60
	and.pred  	%p53, %p31, %p63;
	and.pred  	%p58, %p36, %p63;
	.loc	1 65 52                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:65:52
	// begin inline asm
	mov.u32 %r182, 0x0;
	mov.u32 %r183, 0x0;
	mov.u32 %r184, 0x0;
	mov.u32 %r185, 0x0;
	@%p53 ld.global.L1::evict_first.v4.b32 { %r182, %r183, %r184, %r185 }, [ %rd31 + 0 ];
	@!%p53 mov.u32 %r182, %r146;
	@!%p53 mov.u32 %r183, %r146;
	@!%p53 mov.u32 %r184, %r146;
	@!%p53 mov.u32 %r185, %r146;
	// end inline asm
	mov.b32 	%f343, %r182;
	mov.b32 	%f344, %r183;
	mov.b32 	%f345, %r184;
	mov.b32 	%f346, %r185;
	// begin inline asm
	mov.u32 %r190, 0x0;
	mov.u32 %r191, 0x0;
	mov.u32 %r192, 0x0;
	mov.u32 %r193, 0x0;
	@%p58 ld.global.L1::evict_first.v4.b32 { %r190, %r191, %r192, %r193 }, [ %rd32 + 0 ];
	@!%p58 mov.u32 %r190, %r146;
	@!%p58 mov.u32 %r191, %r146;
	@!%p58 mov.u32 %r192, %r146;
	@!%p58 mov.u32 %r193, %r146;
	// end inline asm
	mov.b32 	%f347, %r190;
	mov.b32 	%f348, %r191;
	mov.b32 	%f349, %r192;
	mov.b32 	%f350, %r193;
	.loc	1 66 35                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:66:35
	add.s64 	%rd33, %rd27, 256;
	.loc	1 66 40                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:66:40
	// begin inline asm
	mov.u32 %r198, 0x0;
	mov.u32 %r199, 0x0;
	mov.u32 %r200, 0x0;
	mov.u32 %r201, 0x0;
	@%p63 ld.global.L1::evict_last.v4.b32 { %r198, %r199, %r200, %r201 }, [ %rd33 + 0 ];
	@!%p63 mov.u32 %r198, %r146;
	@!%p63 mov.u32 %r199, %r146;
	@!%p63 mov.u32 %r200, %r146;
	@!%p63 mov.u32 %r201, %r146;
	// end inline asm
	mov.b32 	%f351, %r198;
	mov.b32 	%f352, %r199;
	mov.b32 	%f353, %r200;
	mov.b32 	%f354, %r201;
	.loc	1 67 35                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:67:35
	add.s64 	%rd34, %rd28, 256;
	.loc	1 67 40                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:67:40
	// begin inline asm
	mov.u32 %r206, 0x0;
	mov.u32 %r207, 0x0;
	mov.u32 %r208, 0x0;
	mov.u32 %r209, 0x0;
	@%p63 ld.global.L1::evict_last.v4.b32 { %r206, %r207, %r208, %r209 }, [ %rd34 + 0 ];
	@!%p63 mov.u32 %r206, %r146;
	@!%p63 mov.u32 %r207, %r146;
	@!%p63 mov.u32 %r208, %r146;
	@!%p63 mov.u32 %r209, %r146;
	// end inline asm
	mov.b32 	%f355, %r206;
	mov.b32 	%f356, %r207;
	mov.b32 	%f357, %r208;
	mov.b32 	%f358, %r209;
	.loc	1 68 24                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:68:24
	sub.f32 	%f359, %f343, %f241;
	sub.f32 	%f360, %f344, %f241;
	sub.f32 	%f361, %f345, %f241;
	sub.f32 	%f362, %f346, %f241;
	sub.f32 	%f363, %f347, %f289;
	sub.f32 	%f364, %f348, %f289;
	sub.f32 	%f365, %f349, %f289;
	sub.f32 	%f366, %f350, %f289;
	.loc	1 69 24                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:69:24
	mul.f32 	%f367, %f301, %f359;
	mul.f32 	%f368, %f301, %f360;
	mul.f32 	%f369, %f301, %f361;
	mul.f32 	%f370, %f301, %f362;
	mul.f32 	%f371, %f302, %f363;
	mul.f32 	%f372, %f302, %f364;
	mul.f32 	%f373, %f302, %f365;
	mul.f32 	%f374, %f302, %f366;
	.loc	1 71 24                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:71:24
	fma.rn.f32 	%f375, %f367, %f351, %f355;
	fma.rn.f32 	%f376, %f368, %f352, %f356;
	fma.rn.f32 	%f377, %f369, %f353, %f357;
	fma.rn.f32 	%f378, %f370, %f354, %f358;
	fma.rn.f32 	%f379, %f371, %f351, %f355;
	fma.rn.f32 	%f380, %f372, %f352, %f356;
	fma.rn.f32 	%f381, %f373, %f353, %f357;
	fma.rn.f32 	%f382, %f374, %f354, %f358;
	.loc	1 72 29                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:72:29
	add.s64 	%rd35, %rd11, %rd42;
	add.s64 	%rd36, %rd11, %rd43;
	.loc	1 72 49                         // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:72:49
	mov.b32 	%r214, %f375;
	mov.b32 	%r215, %f376;
	mov.b32 	%r216, %f377;
	mov.b32 	%r217, %f378;
	// begin inline asm
	@%p53 st.global.v4.b32 [ %rd35 + 0 ], { %r214, %r215, %r216, %r217 };
	// end inline asm
	mov.b32 	%r218, %f379;
	mov.b32 	%r219, %f380;
	mov.b32 	%r220, %f381;
	mov.b32 	%r221, %f382;
	// begin inline asm
	@%p58 st.global.v4.b32 [ %rd36 + 0 ], { %r218, %r219, %r220, %r221 };
	// end inline asm
	.loc	1 61 4                          // crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py:61:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rr/crr3m2ltnnptooz6qtc355d6ttmyjpivruavreahqq3qgx3a73l3.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 217                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 114
.b8 51
.b8 109
.b8 50
.b8 108
.b8 116
.b8 110
.b8 110
.b8 112
.b8 116
.b8 111
.b8 111
.b8 122
.b8 54
.b8 113
.b8 116
.b8 99
.b8 51
.b8 53
.b8 53
.b8 100
.b8 54
.b8 116
.b8 116
.b8 109
.b8 121
.b8 106
.b8 112
.b8 105
.b8 118
.b8 114
.b8 117
.b8 97
.b8 118
.b8 114
.b8 101
.b8 97
.b8 104
.b8 113
.b8 113
.b8 51
.b8 113
.b8 103
.b8 120
.b8 51
.b8 97
.b8 55
.b8 51
.b8 108
.b8 51
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 114
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x33 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 108
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x96:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xab:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 51                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 49                                  // DW_AT_call_line
.b8 41                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
