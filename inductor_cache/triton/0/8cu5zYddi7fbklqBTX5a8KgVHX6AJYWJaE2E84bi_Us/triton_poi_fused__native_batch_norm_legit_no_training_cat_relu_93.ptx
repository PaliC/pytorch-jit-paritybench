//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_10,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_11
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<75>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<38>;
	.loc	1 19 0                          // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_0];
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_1];
$L__tmp0:
	.loc	1 21 28                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:21:33
	shl.b32 	%r40, %r1, 8;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_2];
	ld.param.u64 	%rd19, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_3];
	.loc	1 22 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:22:36
	mov.u32 	%r41, %tid.x;
	shl.b32 	%r42, %r41, 1;
	ld.param.u64 	%rd20, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_4];
	and.b32  	%r43, %r42, 254;
	ld.param.u64 	%rd21, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_5];
	.loc	1 22 23                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:22:23
	or.b32  	%r44, %r40, %r43;
	ld.param.u64 	%rd22, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_6];
	ld.param.u64 	%rd23, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_7];
	.loc	1 24 21                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:24:21
	shr.s32 	%r46, %r44, 31;
	shr.u32 	%r47, %r46, 30;
	add.s32 	%r48, %r44, %r47;
	shr.s32 	%r49, %r48, 2;
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_8];
	.loc	1 24 26                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:24:26
	mul.hi.s32 	%r50, %r49, 715827883;
	shr.u32 	%r51, %r50, 31;
	shr.u32 	%r52, %r50, 7;
	add.s32 	%r53, %r52, %r51;
	mul.lo.s32 	%r54, %r53, 768;
	sub.s32 	%r55, %r49, %r54;
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_9];
	.loc	1 25 19                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:25:19
	and.b32  	%r56, %r48, -4;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_cat_relu_93_param_10];
	sub.s32 	%r57, %r44, %r56;
	.loc	1 26 19                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:26:19
	mul.hi.s32 	%r58, %r44, 715827883;
	shr.u32 	%r59, %r58, 31;
	shr.s32 	%r60, %r58, 9;
	add.s32 	%r61, %r60, %r59;
	.loc	1 28 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:28:31
	mul.wide.s32 	%rd27, %r55, 4;
	add.s64 	%rd1, %rd21, %rd27;
	mov.pred 	%p1, -1;
	.loc	1 28 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:28:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 29 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:29:31
	add.s64 	%rd3, %rd22, %rd27;
	.loc	1 29 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:29:36
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r5;
	.loc	1 30 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:30:31
	add.s64 	%rd5, %rd23, %rd27;
	.loc	1 30 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:30:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 31 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:31:31
	add.s64 	%rd7, %rd24, %rd27;
	.loc	1 31 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:31:36
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 18                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:36:18
	setp.lt.s32 	%p9, %r55, 640;
	.loc	1 37 35                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:37:35
	mul.lo.s32 	%r62, %r61, 3072;
	sub.s32 	%r63, %r44, %r62;
	.loc	1 37 44                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:37:44
	mad.lo.s32 	%r64, %r61, 2560, %r63;
	.loc	1 37 30                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:37:30
	mul.wide.s32 	%rd28, %r64, 4;
	add.s64 	%rd9, %rd16, %rd28;
	mov.b32 	%r12, 0;
	.loc	1 37 54                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:37:54
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p9 ld.global.v2.b32 { %r10, %r11 }, [ %rd9 + 0 ];
	@!%p9 mov.u32 %r10, %r12;
	@!%p9 mov.u32 %r11, %r12;
	// end inline asm
	.loc	1 41 18                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:41:18
	and.b32  	%r65, %r55, -32;
	setp.eq.s32 	%p12, %r65, 640;
	.loc	1 42 39                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:42:39
	shl.b32 	%r66, %r55, 2;
	.loc	1 42 58                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:42:58
	shl.b32 	%r67, %r61, 7;
	.loc	1 42 39                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:42:39
	add.s32 	%r68, %r67, %r57;
	.loc	1 42 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:42:31
	cvt.s64.s32 	%rd29, %r66;
	cvt.s64.s32 	%rd30, %r68;
	add.s64 	%rd31, %rd30, %rd29;
	shl.b64 	%rd32, %rd31, 2;
	add.s64 	%rd33, %rd17, %rd32;
	add.s64 	%rd10, %rd33, -10240;
	.loc	1 42 63                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:42:63
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p12 ld.global.v2.b32 { %r14, %r15 }, [ %rd10 + 0 ];
	@!%p12 mov.u32 %r14, %r12;
	@!%p12 mov.u32 %r15, %r12;
	// end inline asm
	.loc	1 46 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:46:20
	setp.eq.s32 	%p15, %r65, 672;
	.loc	1 47 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:47:31
	add.s64 	%rd34, %rd18, %rd32;
	add.s64 	%rd11, %rd34, -10752;
	.loc	1 47 63                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:47:63
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p15 ld.global.v2.b32 { %r18, %r19 }, [ %rd11 + 0 ];
	@!%p15 mov.u32 %r18, %r12;
	@!%p15 mov.u32 %r19, %r12;
	// end inline asm
	.loc	1 51 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:51:20
	setp.eq.s32 	%p18, %r65, 704;
	.loc	1 52 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:52:31
	add.s64 	%rd35, %rd19, %rd32;
	add.s64 	%rd12, %rd35, -11264;
	.loc	1 52 63                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:52:63
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p18 ld.global.v2.b32 { %r22, %r23 }, [ %rd12 + 0 ];
	@!%p18 mov.u32 %r22, %r12;
	@!%p18 mov.u32 %r23, %r12;
	// end inline asm
	.loc	1 53 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:53:20
	setp.gt.s32 	%p21, %r55, 735;
	.loc	1 56 31                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:56:31
	add.s64 	%rd36, %rd20, %rd32;
	add.s64 	%rd13, %rd36, -11776;
	.loc	1 56 63                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:56:63
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p21 ld.global.v2.b32 { %r26, %r27 }, [ %rd13 + 0 ];
	@!%p21 mov.u32 %r26, %r12;
	@!%p21 mov.u32 %r27, %r12;
	// end inline asm
	.loc	1 63 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:63:20
	add.f32 	%f3, %f1, 0f3727C5AC;
	add.f32 	%f4, %f2, 0f3727C5AC;
	.loc	1 64 27                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:64:27
	sqrt.approx.ftz.f32 	%f5, %f3;
	sqrt.approx.ftz.f32 	%f6, %f4;
	.loc	1 57 35                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:57:35
	selp.b32 	%r69, %r23, %r27, %p18;
	.loc	1 58 35                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:58:35
	selp.b32 	%r70, %r19, %r69, %p15;
	.loc	1 59 34                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:59:34
	selp.b32 	%r71, %r15, %r70, %p12;
	.loc	1 60 33                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:60:33
	selp.b32 	%r37, %r11, %r71, %p9;
	mov.b32 	%f7, %r37;
	.loc	1 28 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:28:36
	mov.b32 	%f8, %r3;
	.loc	1 61 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:61:20
	sub.f32 	%f9, %f7, %f8;
	.loc	1 57 35                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:57:35
	selp.b32 	%r72, %r22, %r26, %p18;
	.loc	1 58 35                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:58:35
	selp.b32 	%r73, %r18, %r72, %p15;
	.loc	1 59 34                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:59:34
	selp.b32 	%r74, %r14, %r73, %p12;
	.loc	1 60 33                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:60:33
	selp.b32 	%r36, %r10, %r74, %p9;
	mov.b32 	%f10, %r36;
	.loc	1 28 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:28:36
	mov.b32 	%f11, %r2;
	.loc	1 61 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:61:20
	sub.f32 	%f12, %f10, %f11;
	.loc	1 31 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:31:36
	mov.b32 	%f13, %r9;
	mov.b32 	%f14, %r8;
	.loc	1 30 36                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:30:36
	mov.b32 	%f15, %r7;
	mov.b32 	%f16, %r6;
	.loc	1 66 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:66:20
	mov.b32 	%r32, %f5;
	mov.b32 	%r31, 1065353216;
	// begin inline asm
	div.full.f32 %r30, %r31, %r32;
	// end inline asm
	mov.b32 	%f17, %r30;
	mov.b32 	%r35, %f6;
	// begin inline asm
	div.full.f32 %r33, %r31, %r35;
	// end inline asm
	mov.b32 	%f18, %r33;
	.loc	1 69 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:69:20
	mul.f32 	%f19, %f12, %f17;
	mul.f32 	%f20, %f9, %f18;
	.loc	1 71 20                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:71:20
	fma.rn.f32 	%f21, %f19, %f16, %f14;
	fma.rn.f32 	%f22, %f20, %f15, %f13;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p26, %f21, 0f00000000;
	setp.lt.f32 	%p27, %f22, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f23, 0f00000000, %f21, %p26;
	selp.f32 	%f24, 0f00000000, %f22, %p27;
$L__tmp2:
	.loc	1 74 25                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:74:25
	mul.wide.s32 	%rd37, %r44, 4;
	add.s64 	%rd14, %rd25, %rd37;
	.loc	1 74 37                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:74:37
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd14 + 0 ], { %r36, %r37 };
	// end inline asm
	.loc	1 75 25                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:75:25
	add.s64 	%rd15, %rd26, %rd37;
	.loc	1 75 37                         // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:75:37
	mov.b32 	%r38, %f23;
	mov.b32 	%r39, %f24;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd15 + 0 ], { %r38, %r39 };
	// end inline asm
	.loc	1 75 4                          // ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py:75:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/kl/ckly5fu4t65fabxxqdzaitkyteet3l2xalqxryibmyrgpg46dpbq.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 210                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xcb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 108
.b8 121
.b8 53
.b8 102
.b8 117
.b8 52
.b8 116
.b8 54
.b8 53
.b8 102
.b8 97
.b8 98
.b8 120
.b8 120
.b8 113
.b8 100
.b8 122
.b8 97
.b8 105
.b8 116
.b8 107
.b8 121
.b8 116
.b8 101
.b8 101
.b8 116
.b8 51
.b8 108
.b8 50
.b8 120
.b8 97
.b8 108
.b8 113
.b8 120
.b8 114
.b8 121
.b8 105
.b8 98
.b8 109
.b8 121
.b8 114
.b8 103
.b8 112
.b8 103
.b8 52
.b8 54
.b8 100
.b8 112
.b8 98
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 108
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x44 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 57
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa7:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xbc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 73                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
