#loc = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":40:67)
#loc44 = loc(callsite(#loc1 at #loc18))
module {
  tt.func public @triton_per_fused_native_group_norm_8(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0), %arg6: i32 loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":19:0)) attributes {noinline = false} {
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c24_i32 = arith.constant 24 : i32 loc(#loc1)
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.310720e+05> : tensor<1x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c24_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.muli %0, %c16_i32 : i32 loc(#loc6)
    %6 = tt.splat %5 : i32 -> tensor<1x16xi32> loc(#loc7)
    %7 = arith.addi %4, %6 : tensor<1x16xi32> loc(#loc7)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc8)
    %9 = tt.addptr %8, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc8)
    %10 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc9)
    %11 = tt.load %9, %10, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %12 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %13 = tt.addptr %12, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc10)
    %14 = tt.load %13, %10, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc11)
    %15 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc12)
    %16 = tt.addptr %15, %7 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc12)
    %17 = tt.load %16, %10, %cst_2 : tensor<1x16x!tt.ptr<f32>> loc(#loc13)
    %18 = arith.select %10, %11, %cst_2 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc14)
    %19 = arith.select %10, %14, %cst_2 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc15)
    %20 = arith.select %10, %17, %cst_2 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc16)
    %21:3 = "tt.reduce"(%18, %19, %20) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc18)), %arg9: f32 loc(callsite(#loc1 at #loc18)), %arg10: f32 loc(callsite(#loc1 at #loc18)), %arg11: f32 loc(callsite(#loc1 at #loc18)), %arg12: f32 loc(callsite(#loc1 at #loc18)), %arg13: f32 loc(callsite(#loc1 at #loc18))):
      %33 = arith.subf %arg11, %arg8 : f32 loc(#loc57)
      %34 = arith.addf %arg10, %arg13 : f32 loc(#loc58)
      %35 = arith.cmpf oeq, %34, %cst : f32 loc(#loc59)
      %36 = arith.divf %arg13, %34 : f32 loc(#loc60)
      %37 = arith.select %35, %cst, %36 : f32 loc(#loc61)
      %38 = arith.mulf %33, %37 : f32 loc(#loc62)
      %39 = arith.addf %arg8, %38 : f32 loc(#loc63)
      %40 = arith.addf %arg9, %arg12 : f32 loc(#loc64)
      %41 = arith.mulf %33, %33 : f32 loc(#loc65)
      %42 = arith.mulf %41, %arg10 : f32 loc(#loc66)
      %43 = arith.mulf %42, %37 : f32 loc(#loc67)
      %44 = arith.addf %40, %43 : f32 loc(#loc68)
      tt.reduce.return %39, %44, %34 : f32, f32, f32 loc(#loc43)
    }) : (tensor<1x16xf32>, tensor<1x16xf32>, tensor<1x16xf32>) -> (tensor<1xf32>, tensor<1xf32>, tensor<1xf32>) loc(#loc43)
    %22 = tt.expand_dims %21#0 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc31)
    %23 = tt.expand_dims %21#1 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc32)
    %24 = arith.divf %23, %cst_1 : tensor<1x1xf32> loc(#loc33)
    %25 = arith.addf %24, %cst_0 : tensor<1x1xf32> loc(#loc34)
    %26 = tt.extern_elementwise %25 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc35)
    %27 = tt.addptr %arg5, %0 : !tt.ptr<f32>, i32 loc(#loc36)
    %28 = tt.splat %27 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc36)
    tt.store %28, %26, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc37)
    %29 = tt.addptr %arg3, %0 : !tt.ptr<f32>, i32 loc(#loc38)
    %30 = tt.splat %29 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc38)
    tt.store %30, %22, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc39)
    %31 = tt.addptr %arg4, %0 : !tt.ptr<f32>, i32 loc(#loc40)
    %32 = tt.splat %31 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc40)
    tt.store %32, %23, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":23:28)
#loc3 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":25:21)
#loc4 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":26:26)
#loc5 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":26:34)
#loc6 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":31:38)
#loc7 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":31:35)
#loc8 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":31:30)
#loc9 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":31:43)
#loc10 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":32:30)
#loc11 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":32:43)
#loc12 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":33:30)
#loc13 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":33:43)
#loc14 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":37:33)
#loc15 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":38:33)
#loc16 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":39:33)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc31 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":41:18)
#loc32 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":42:18)
#loc33 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":45:20)
#loc34 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":47:20)
#loc35 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":48:28)
#loc36 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":49:25)
#loc37 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":49:37)
#loc38 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":50:25)
#loc39 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":50:37)
#loc40 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":51:25)
#loc41 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":51:37)
#loc42 = loc("inductor_cache/pf/cpfjsrnuioze7l5frhtnwie7zo4tcaxrcuskacnnluhwwj2xoo2f.py":51:4)
#loc43 = loc(callsite(#loc17 at #loc18))
#loc45 = loc(callsite(#loc19 at #loc17))
#loc46 = loc(callsite(#loc20 at #loc17))
#loc47 = loc(callsite(#loc21 at #loc17))
#loc48 = loc(callsite(#loc22 at #loc17))
#loc49 = loc(callsite(#loc23 at #loc17))
#loc50 = loc(callsite(#loc24 at #loc17))
#loc51 = loc(callsite(#loc25 at #loc17))
#loc52 = loc(callsite(#loc26 at #loc17))
#loc53 = loc(callsite(#loc27 at #loc17))
#loc54 = loc(callsite(#loc28 at #loc17))
#loc55 = loc(callsite(#loc29 at #loc17))
#loc56 = loc(callsite(#loc30 at #loc17))
#loc57 = loc(callsite(#loc45 at #loc18))
#loc58 = loc(callsite(#loc46 at #loc18))
#loc59 = loc(callsite(#loc47 at #loc18))
#loc60 = loc(callsite(#loc48 at #loc18))
#loc61 = loc(callsite(#loc49 at #loc18))
#loc62 = loc(callsite(#loc50 at #loc18))
#loc63 = loc(callsite(#loc51 at #loc18))
#loc64 = loc(callsite(#loc52 at #loc18))
#loc65 = loc(callsite(#loc53 at #loc18))
#loc66 = loc(callsite(#loc54 at #loc18))
#loc67 = loc(callsite(#loc55 at #loc18))
#loc68 = loc(callsite(#loc56 at #loc18))
