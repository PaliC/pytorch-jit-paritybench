; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_avg_pool2d_cat_relu_10(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, ptr addrspace(1) %10, ptr addrspace(1) %11, i32 %12) local_unnamed_addr !dbg !7 {
  %14 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %15 = shl i32 %14, 7, !dbg !11
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %17 = and i32 %16, 127, !dbg !12
  %18 = or disjoint i32 %15, %17, !dbg !13
  %.frozen = freeze i32 %18, !dbg !14
  %19 = sdiv i32 %.frozen, 8, !dbg !14
  %20 = mul i32 %19, 8, !dbg !15
  %.decomposed = sub i32 %.frozen, %20, !dbg !15
  %21 = sdiv i32 %18, 64, !dbg !16
  %22 = srem i32 %21, 128, !dbg !17
  %23 = shl nsw i32 %.decomposed, 1, !dbg !18
  %24 = shl i32 %19, 5, !dbg !19
  %25 = add i32 %23, %24, !dbg !20
  %26 = sext i32 %25 to i64, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 true) #3, !dbg !22
  %29 = or disjoint i32 %25, 1, !dbg !23
  %30 = sext i32 %29 to i64, !dbg !24
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !24
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 true) #3, !dbg !25
  %33 = add i32 %25, 16, !dbg !26
  %34 = sext i32 %33 to i64, !dbg !27
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !27
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 true) #3, !dbg !28
  %37 = add i32 %25, 17, !dbg !29
  %38 = sext i32 %37 to i64, !dbg !30
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !30
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 true) #3, !dbg !31
  %41 = sext i32 %22 to i64, !dbg !32
  %42 = getelementptr float, ptr addrspace(1) %1, i64 %41, !dbg !32
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %42, i1 true) #3, !dbg !33
  %44 = getelementptr float, ptr addrspace(1) %2, i64 %41, !dbg !34
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #3, !dbg !35
  %46 = bitcast i32 %45 to float, !dbg !35
  %47 = getelementptr float, ptr addrspace(1) %3, i64 %41, !dbg !36
  %48 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %47, i1 true) #3, !dbg !37
  %49 = getelementptr float, ptr addrspace(1) %4, i64 %41, !dbg !38
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %49, i1 true) #3, !dbg !39
  %51 = fadd float %46, 0x3EE4F8B580000000, !dbg !40
  %52 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i = icmp eq i32 %52, 0, !dbg !41
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !41
  %.not1.i = icmp eq i32 %53, 0, !dbg !41
  br i1 %.not.i, label %59, label %54, !dbg !41

54:                                               ; preds = %13
  br i1 %.not1.i, label %57, label %55, !dbg !41

55:                                               ; preds = %54
  %56 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %51) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

57:                                               ; preds = %54
  %58 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %51) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

59:                                               ; preds = %13
  br i1 %.not1.i, label %62, label %60, !dbg !41

60:                                               ; preds = %59
  %61 = tail call float @llvm.nvvm.sqrt.rn.f(float %51) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

62:                                               ; preds = %59
  %63 = tail call float @llvm.nvvm.sqrt.approx.f(float %51) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

__nv_sqrtf.exit:                                  ; preds = %55, %57, %60, %62
  %.0.i = phi float [ %56, %55 ], [ %58, %57 ], [ %61, %60 ], [ %63, %62 ], !dbg !41
  %64 = bitcast i32 %32 to float, !dbg !25
  %65 = bitcast i32 %28 to float, !dbg !22
  %66 = fadd float %65, %64, !dbg !42
  %67 = bitcast i32 %36 to float, !dbg !28
  %68 = fadd float %66, %67, !dbg !43
  %69 = bitcast i32 %40 to float, !dbg !31
  %70 = fadd float %68, %69, !dbg !44
  %71 = fmul float %70, 2.500000e-01, !dbg !45
  %72 = bitcast i32 %43 to float, !dbg !33
  %73 = fsub float %71, %72, !dbg !46
  %74 = bitcast i32 %50 to float, !dbg !39
  %75 = bitcast i32 %48 to float, !dbg !37
  %.frozen1 = freeze i32 %18, !dbg !47
  %76 = sdiv i32 %.frozen1, 8192, !dbg !47
  %77 = mul i32 %76, 8192, !dbg !48
  %.decomposed2 = sub i32 %.frozen1, %77, !dbg !48
  %78 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !49
  %79 = fmul float %73, %78, !dbg !50
  %80 = fmul float %79, %75, !dbg !51
  %81 = fadd float %80, %74, !dbg !52
  %82 = fcmp olt float %81, 0.000000e+00, !dbg !53
  %83 = select i1 %82, float 0.000000e+00, float %81, !dbg !57
  %84 = sext i32 %18 to i64, !dbg !58
  %85 = getelementptr float, ptr addrspace(1) %5, i64 %84, !dbg !58
  %86 = bitcast float %71 to i32, !dbg !59
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %85, i1 true) #3, !dbg !59
  %87 = getelementptr float, ptr addrspace(1) %6, i64 %84, !dbg !60
  %88 = bitcast float %83 to i32, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %88, ptr addrspace(1) %87, i1 true) #3, !dbg !61
  %89 = mul i32 %76, 24576, !dbg !62
  %90 = add i32 %89, %.decomposed2, !dbg !63
  %91 = sext i32 %90 to i64, !dbg !64
  %92 = getelementptr float, ptr addrspace(1) %7, i64 %91, !dbg !64
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %92, i1 true) #3, !dbg !65
  %93 = mul i32 %76, 26624, !dbg !66
  %94 = add i32 %93, %.decomposed2, !dbg !67
  %95 = sext i32 %94 to i64, !dbg !68
  %96 = getelementptr float, ptr addrspace(1) %8, i64 %95, !dbg !68
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %96, i1 true) #3, !dbg !69
  %97 = mul i32 %76, 28672, !dbg !70
  %98 = add i32 %97, %.decomposed2, !dbg !71
  %99 = sext i32 %98 to i64, !dbg !72
  %100 = getelementptr float, ptr addrspace(1) %9, i64 %99, !dbg !72
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %100, i1 true) #3, !dbg !73
  %101 = mul i32 %76, 30720, !dbg !74
  %102 = add i32 %101, %.decomposed2, !dbg !75
  %103 = sext i32 %102 to i64, !dbg !76
  %104 = getelementptr float, ptr addrspace(1) %10, i64 %103, !dbg !76
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %104, i1 true) #3, !dbg !77
  %105 = shl i32 %76, 15, !dbg !78
  %106 = add i32 %105, %.decomposed2, !dbg !79
  %107 = sext i32 %106 to i64, !dbg !80
  %108 = getelementptr float, ptr addrspace(1) %11, i64 %107, !dbg !80
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %86, ptr addrspace(1) %108, i1 true) #3, !dbg !81
  ret void, !dbg !82
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c7uui7rtk6aw2a6jz6p2pqmqgtd5d2uxzfw3bca5hix677chewvf.py", directory: "inductor_cache/7u")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_avg_pool2d_cat_relu_10, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_avg_pool2d_cat_relu_10, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_avg_pool2d_cat_relu_10", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_avg_pool2d_cat_relu_10", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 21, scope: !7)
!17 = !DILocation(line: 27, column: 27, scope: !7)
!18 = !DILocation(line: 30, column: 32, scope: !7)
!19 = !DILocation(line: 30, column: 40, scope: !7)
!20 = !DILocation(line: 30, column: 37, scope: !7)
!21 = !DILocation(line: 30, column: 30, scope: !7)
!22 = !DILocation(line: 30, column: 45, scope: !7)
!23 = !DILocation(line: 31, column: 41, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 49, scope: !7)
!26 = !DILocation(line: 32, column: 42, scope: !7)
!27 = !DILocation(line: 32, column: 30, scope: !7)
!28 = !DILocation(line: 32, column: 50, scope: !7)
!29 = !DILocation(line: 33, column: 42, scope: !7)
!30 = !DILocation(line: 33, column: 30, scope: !7)
!31 = !DILocation(line: 33, column: 50, scope: !7)
!32 = !DILocation(line: 34, column: 30, scope: !7)
!33 = !DILocation(line: 34, column: 35, scope: !7)
!34 = !DILocation(line: 35, column: 31, scope: !7)
!35 = !DILocation(line: 35, column: 36, scope: !7)
!36 = !DILocation(line: 36, column: 31, scope: !7)
!37 = !DILocation(line: 36, column: 36, scope: !7)
!38 = !DILocation(line: 37, column: 31, scope: !7)
!39 = !DILocation(line: 37, column: 36, scope: !7)
!40 = !DILocation(line: 45, column: 20, scope: !7)
!41 = !DILocation(line: 46, column: 27, scope: !7)
!42 = !DILocation(line: 38, column: 18, scope: !7)
!43 = !DILocation(line: 39, column: 18, scope: !7)
!44 = !DILocation(line: 40, column: 18, scope: !7)
!45 = !DILocation(line: 42, column: 18, scope: !7)
!46 = !DILocation(line: 43, column: 19, scope: !7)
!47 = !DILocation(line: 28, column: 19, scope: !7)
!48 = !DILocation(line: 29, column: 19, scope: !7)
!49 = !DILocation(line: 48, column: 20, scope: !7)
!50 = !DILocation(line: 51, column: 20, scope: !7)
!51 = !DILocation(line: 52, column: 20, scope: !7)
!52 = !DILocation(line: 53, column: 20, scope: !7)
!53 = !DILocation(line: 118, column: 15, scope: !54, inlinedAt: !56)
!54 = distinct !DILexicalBlockFile(scope: !7, file: !55, discriminator: 0)
!55 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!56 = !DILocation(line: 55, column: 42, scope: !7)
!57 = !DILocation(line: 121, column: 29, scope: !54, inlinedAt: !56)
!58 = !DILocation(line: 56, column: 25, scope: !7)
!59 = !DILocation(line: 56, column: 36, scope: !7)
!60 = !DILocation(line: 57, column: 25, scope: !7)
!61 = !DILocation(line: 57, column: 37, scope: !7)
!62 = !DILocation(line: 58, column: 36, scope: !7)
!63 = !DILocation(line: 58, column: 30, scope: !7)
!64 = !DILocation(line: 58, column: 25, scope: !7)
!65 = !DILocation(line: 58, column: 47, scope: !7)
!66 = !DILocation(line: 59, column: 36, scope: !7)
!67 = !DILocation(line: 59, column: 30, scope: !7)
!68 = !DILocation(line: 59, column: 25, scope: !7)
!69 = !DILocation(line: 59, column: 47, scope: !7)
!70 = !DILocation(line: 60, column: 36, scope: !7)
!71 = !DILocation(line: 60, column: 30, scope: !7)
!72 = !DILocation(line: 60, column: 25, scope: !7)
!73 = !DILocation(line: 60, column: 47, scope: !7)
!74 = !DILocation(line: 61, column: 36, scope: !7)
!75 = !DILocation(line: 61, column: 30, scope: !7)
!76 = !DILocation(line: 61, column: 25, scope: !7)
!77 = !DILocation(line: 61, column: 47, scope: !7)
!78 = !DILocation(line: 62, column: 36, scope: !7)
!79 = !DILocation(line: 62, column: 30, scope: !7)
!80 = !DILocation(line: 62, column: 25, scope: !7)
!81 = !DILocation(line: 62, column: 47, scope: !7)
!82 = !DILocation(line: 62, column: 4, scope: !7)
