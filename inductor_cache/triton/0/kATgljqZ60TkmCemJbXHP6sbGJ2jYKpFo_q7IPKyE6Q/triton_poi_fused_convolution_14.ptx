//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_14 // -- Begin function triton_poi_fused_convolution_14
                                        // @triton_poi_fused_convolution_14
.visible .entry triton_poi_fused_convolution_14(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_14_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_14_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_14_param_2,
	.param .u32 triton_poi_fused_convolution_14_param_3,
	.param .u32 triton_poi_fused_convolution_14_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<68>;
	.reg .f32 	%f<19>;
	.reg .b64 	%rd<34>;
	.loc	1 19 0                          // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:19:0

// %bb.0:
	ld.param.u64 	%rd19, [triton_poi_fused_convolution_14_param_0];
	ld.param.u64 	%rd20, [triton_poi_fused_convolution_14_param_1];
$L__tmp0:
	.loc	1 22 28                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	ld.param.u64 	%rd21, [triton_poi_fused_convolution_14_param_2];
	.loc	1 23 44                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:23:44
	mov.u32 	%r27, %tid.x;
	.loc	1 25 28                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 26 44                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:26:44
	shl.b32 	%r28, %r27, 2;
	.loc	1 25 33                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:25:33
	shl.b32 	%r29, %r1, 5;
	shl.b32 	%r30, %r2, 5;
	.loc	1 26 44                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:26:44
	bfe.u32 	%r31, %r27, 3, 4;
	and.b32  	%r32, %r28, 28;
	.loc	1 26 23                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:26:23
	or.b32  	%r33, %r30, %r32;
	or.b32  	%r34, %r29, %r31;
	.loc	1 23 23                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:23:23
	or.b32  	%r35, %r34, 16;
	.loc	1 24 21                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:24:21
	setp.lt.s32 	%p9, %r34, 76;
	setp.lt.s32 	%p13, %r35, 76;
	.loc	1 27 21                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:27:21
	setp.lt.s32 	%p19, %r33, 64;
	.loc	1 30 19                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:30:19
	mul.hi.s32 	%r37, %r34, 1808407283;
	shr.u32 	%r38, %r37, 31;
	shr.s32 	%r39, %r37, 3;
	add.s32 	%r40, %r39, %r38;
	.loc	1 29 19                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:29:19
	mul.lo.s32 	%r41, %r40, 19;
	sub.s32 	%r42, %r34, %r41;
	.loc	1 30 19                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:30:19
	mul.hi.s32 	%r44, %r35, 1808407283;
	shr.u32 	%r45, %r44, 31;
	shr.s32 	%r46, %r44, 3;
	add.s32 	%r47, %r46, %r45;
	.loc	1 29 19                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:29:19
	mul.lo.s32 	%r48, %r47, 19;
	sub.s32 	%r49, %r35, %r48;
	.loc	1 32 38                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:38
	mul.lo.s32 	%r50, %r33, 19;
	add.s32 	%r51, %r50, 19;
	add.s32 	%r52, %r50, 38;
	add.s32 	%r53, %r50, 57;
	.loc	1 32 35                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:35
	mad.lo.s32 	%r54, %r40, 1216, %r42;
	.loc	1 32 43                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:43
	add.s32 	%r55, %r54, %r50;
	add.s32 	%r56, %r54, %r51;
	add.s32 	%r57, %r54, %r52;
	add.s32 	%r58, %r54, %r53;
	.loc	1 32 35                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:35
	mad.lo.s32 	%r59, %r47, 1216, %r49;
	.loc	1 32 43                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:43
	add.s32 	%r60, %r59, %r50;
	add.s32 	%r61, %r59, %r51;
	add.s32 	%r62, %r59, %r52;
	add.s32 	%r63, %r59, %r53;
	.loc	1 32 30                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:30
	mul.wide.s32 	%rd22, %r55, 4;
	add.s64 	%rd1, %rd19, %rd22;
	mul.wide.s32 	%rd23, %r56, 4;
	add.s64 	%rd2, %rd19, %rd23;
	mul.wide.s32 	%rd24, %r57, 4;
	add.s64 	%rd3, %rd19, %rd24;
	mul.wide.s32 	%rd25, %r58, 4;
	add.s64 	%rd4, %rd19, %rd25;
	mul.wide.s32 	%rd26, %r60, 4;
	add.s64 	%rd5, %rd19, %rd26;
	mul.wide.s32 	%rd27, %r61, 4;
	add.s64 	%rd6, %rd19, %rd27;
	mul.wide.s32 	%rd28, %r62, 4;
	add.s64 	%rd7, %rd19, %rd28;
	mul.wide.s32 	%rd29, %r63, 4;
	add.s64 	%rd8, %rd19, %rd29;
	.loc	1 32 61                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:61
	and.pred  	%p1, %p9, %p19;
	and.pred  	%p5, %p13, %p19;
	.loc	1 32 53                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:32:53
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r10;
	.loc	1 33 30                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:33:30
	mul.wide.s32 	%rd30, %r42, 4;
	add.s64 	%rd9, %rd20, %rd30;
	mul.wide.s32 	%rd31, %r49, 4;
	add.s64 	%rd13, %rd20, %rd31;
	.loc	1 33 35                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r11 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r13 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p9 ld.global.L1::evict_last.b32 { %r14 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f9, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r15 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r16 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p13 ld.global.L1::evict_last.b32 { %r18 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r18;
	.loc	1 34 18                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:34:18
	add.f32 	%f11, %f1, %f9;
	add.f32 	%f12, %f2, %f9;
	add.f32 	%f13, %f3, %f9;
	add.f32 	%f14, %f4, %f9;
	add.f32 	%f15, %f5, %f10;
	add.f32 	%f16, %f6, %f10;
	add.f32 	%f17, %f7, %f10;
	add.f32 	%f18, %f8, %f10;
	.loc	1 35 33                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:35:33
	shl.b32 	%r64, %r34, 6;
	shl.b32 	%r65, %r35, 6;
	.loc	1 35 30                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:35:30
	add.s32 	%r66, %r33, %r64;
	add.s32 	%r67, %r33, %r65;
	.loc	1 35 25                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:35:25
	mul.wide.s32 	%rd32, %r66, 4;
	add.s64 	%rd17, %rd21, %rd32;
	mul.wide.s32 	%rd33, %r67, 4;
	add.s64 	%rd18, %rd21, %rd33;
	.loc	1 35 44                         // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:35:44
	mov.b32 	%r19, %f11;
	mov.b32 	%r20, %f12;
	mov.b32 	%r21, %f13;
	mov.b32 	%r22, %f14;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd17 + 0 ], { %r19, %r20, %r21, %r22 };
	// end inline asm
	mov.b32 	%r23, %f15;
	mov.b32 	%r24, %f16;
	mov.b32 	%r25, %f17;
	mov.b32 	%r26, %f18;
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd18 + 0 ], { %r23, %r24, %r25, %r26 };
	// end inline asm
	.loc	1 35 4                          // chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py:35:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hq/chqmasgfrza4lxsxq5bdtnzfcfiqhlij4s36k4gsg56elh3k4tuj.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 113
.b8 109
.b8 97
.b8 115
.b8 103
.b8 102
.b8 114
.b8 122
.b8 97
.b8 52
.b8 108
.b8 120
.b8 115
.b8 120
.b8 113
.b8 53
.b8 98
.b8 100
.b8 116
.b8 110
.b8 122
.b8 102
.b8 99
.b8 102
.b8 105
.b8 113
.b8 104
.b8 108
.b8 105
.b8 106
.b8 52
.b8 115
.b8 51
.b8 54
.b8 107
.b8 52
.b8 103
.b8 115
.b8 103
.b8 53
.b8 54
.b8 101
.b8 108
.b8 104
.b8 51
.b8 107
.b8 52
.b8 116
.b8 117
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 113
.b8 0
	}
	.section	.debug_macinfo	{	}
