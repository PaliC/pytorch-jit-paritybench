//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_6,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_7,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_8,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_9,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_10,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_11,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_12,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_13
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<14>;
	.reg .b32 	%r<70>;
	.reg .f32 	%f<53>;
	.reg .b64 	%rd<41>;
	.loc	1 19 0                          // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd24, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_0];
	ld.param.u64 	%rd25, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_1];
$L__tmp0:
	.loc	1 21 28                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:21:33
	shl.b32 	%r40, %r1, 8;
	ld.param.u64 	%rd26, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_2];
	ld.param.u64 	%rd27, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_3];
	.loc	1 22 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:22:36
	mov.u32 	%r41, %tid.x;
	shl.b32 	%r42, %r41, 1;
	ld.param.u64 	%rd28, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_4];
	and.b32  	%r43, %r42, 254;
	ld.param.u64 	%rd29, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_5];
	.loc	1 22 23                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:22:23
	or.b32  	%r44, %r40, %r43;
	ld.param.u64 	%rd30, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_6];
	.loc	1 23 21                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:23:21
	setp.lt.s32 	%p1, %r44, 1024;
	ld.param.u64 	%rd31, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_7];
	.loc	1 25 21                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:25:21
	bfe.s32 	%r45, %r1, 23, 1;
	shr.u32 	%r46, %r45, 26;
	add.s32 	%r47, %r44, %r46;
	shr.s32 	%r48, %r47, 6;
	ld.param.u64 	%rd32, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_8];
	.loc	1 25 27                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:25:27
	shr.u32 	%r49, %r48, 30;
	add.s32 	%r50, %r48, %r49;
	and.b32  	%r51, %r50, -4;
	sub.s32 	%r52, %r48, %r51;
	ld.param.u64 	%rd33, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_9];
	ld.param.u64 	%rd34, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_10];
	.loc	1 27 21                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:27:21
	shr.s32 	%r54, %r44, 31;
	shr.u32 	%r55, %r54, 29;
	add.s32 	%r56, %r44, %r55;
	shr.s32 	%r57, %r56, 3;
	ld.param.u64 	%rd35, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_11];
	.loc	1 26 19                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:26:19
	and.b32  	%r58, %r56, -8;
	ld.param.u64 	%rd36, [triton_poi_fused__native_batch_norm_legit_no_training_add_convolution_relu_threshold_backward_6_param_12];
	sub.s32 	%r59, %r44, %r58;
	.loc	1 27 26                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:27:26
	shr.u32 	%r60, %r57, 29;
	add.s32 	%r61, %r57, %r60;
	and.b32  	%r62, %r61, 65528;
	sub.s32 	%r63, %r57, %r62;
	.loc	1 29 34                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:29:34
	cvt.s64.s32 	%rd37, %r44;
	mul.wide.s32 	%rd38, %r44, 4;
	add.s64 	%rd1, %rd24, %rd38;
	.loc	1 29 39                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:29:39
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 30 30                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:30:30
	mul.wide.s32 	%rd39, %r52, 4;
	add.s64 	%rd2, %rd26, %rd39;
	.loc	1 30 35                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:30:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 31 30                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:31:30
	add.s64 	%rd4, %rd27, %rd39;
	.loc	1 31 35                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:31:35
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 32 30                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:32:30
	add.s64 	%rd6, %rd28, %rd39;
	.loc	1 32 35                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:32:35
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r9;
	.loc	1 33 31                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:33:31
	add.s64 	%rd8, %rd29, %rd39;
	.loc	1 33 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:33:36
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 34 31                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:34:31
	add.s64 	%rd10, %rd30, %rd39;
	.loc	1 34 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:34:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 35 45                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:45
	cvt.u16.u32 	%rs2, %r63;
	and.b16  	%rs3, %rs2, 128;
	shr.u16 	%rs4, %rs3, 7;
	add.s16 	%rs5, %rs2, %rs4;
	cvt.s16.s8 	%rs6, %rs5;
	shr.s16 	%rs7, %rs6, 1;
	.loc	1 35 39                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:39
	mul.wide.s16 	%r64, %rs7, 8;
	.loc	1 35 60                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:60
	and.b16  	%rs8, %rs5, 254;
	sub.s16 	%rs9, %rs2, %rs8;
	.loc	1 35 55                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:55
	cvt.s16.s8 	%rs10, %rs9;
	mul.wide.s16 	%r65, %rs10, 32;
	.loc	1 35 69                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:69
	and.b32  	%r66, %r47, -64;
	.loc	1 35 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:36
	add.s32 	%r67, %r66, %r59;
	.loc	1 35 50                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:50
	add.s32 	%r68, %r67, %r64;
	.loc	1 35 66                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:66
	add.s32 	%r69, %r68, %r65;
	.loc	1 35 31                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:31
	mul.wide.s32 	%rd40, %r69, 4;
	add.s64 	%rd12, %rd31, %rd40;
	.loc	1 35 74                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:74
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p1 ld.global.v2.b32 { %r14, %r15 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 36 31                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:36:31
	add.s64 	%rd13, %rd32, %rd39;
	.loc	1 36 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:36:36
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 37 31                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:37:31
	add.s64 	%rd15, %rd33, %rd39;
	.loc	1 37 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:37:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r18;
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd15 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r19;
	.loc	1 38 31                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:38:31
	add.s64 	%rd17, %rd34, %rd39;
	.loc	1 38 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:38:36
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 39 31                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:39:31
	add.s64 	%rd19, %rd35, %rd39;
	.loc	1 39 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:39:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd19 + 0 ];
	// end inline asm
	.loc	1 43 18                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:43:18
	add.f32 	%f5, %f1, 0f3727C5AC;
	add.f32 	%f6, %f2, 0f3727C5AC;
	.loc	1 44 26                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:44:26
	sqrt.approx.ftz.f32 	%f7, %f5;
	sqrt.approx.ftz.f32 	%f8, %f6;
	.loc	1 46 19                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:46:19
	mov.b32 	%r26, %f7;
	mov.b32 	%r25, 1065353216;
	// begin inline asm
	div.full.f32 %r24, %r25, %r26;
	// end inline asm
	mov.b32 	%f9, %r24;
	mov.b32 	%r29, %f8;
	// begin inline asm
	div.full.f32 %r27, %r25, %r29;
	// end inline asm
	mov.b32 	%f10, %r27;
	.loc	1 53 20                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:53:20
	add.f32 	%f11, %f3, 0f3727C5AC;
	add.f32 	%f12, %f4, 0f3727C5AC;
	.loc	1 54 27                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:54:27
	sqrt.approx.ftz.f32 	%f13, %f11;
	sqrt.approx.ftz.f32 	%f14, %f12;
	.loc	1 35 74                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:74
	mov.b32 	%f15, %r15;
	.loc	1 31 35                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:31:35
	mov.b32 	%f16, %r7;
	mov.b32 	%f17, %r17;
	.loc	1 35 74                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:35:74
	mov.b32 	%f18, %r14;
	.loc	1 31 35                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:31:35
	mov.b32 	%f19, %r6;
	mov.b32 	%f20, %r16;
	.loc	1 29 39                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:29:39
	mov.b32 	%f21, %r3;
	.loc	1 30 35                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:30:35
	mov.b32 	%f22, %r5;
	.loc	1 40 18                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:40:18
	add.f32 	%f23, %f21, %f22;
	.loc	1 33 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:33:36
	mov.b32 	%f24, %r11;
	mov.b32 	%f25, %r21;
	.loc	1 34 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:34:36
	mov.b32 	%f26, %r13;
	mov.b32 	%f27, %r23;
	.loc	1 29 39                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:29:39
	mov.b32 	%f28, %r2;
	.loc	1 30 35                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:30:35
	mov.b32 	%f29, %r4;
	.loc	1 40 18                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:40:18
	add.f32 	%f30, %f28, %f29;
	.loc	1 33 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:33:36
	mov.b32 	%f31, %r10;
	mov.b32 	%f32, %r20;
	.loc	1 34 36                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:34:36
	mov.b32 	%f33, %r12;
	mov.b32 	%f34, %r22;
	.loc	1 55 19                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:55:19
	mov.b32 	%r32, %f13;
	// begin inline asm
	div.full.f32 %r30, %r25, %r32;
	// end inline asm
	mov.b32 	%f35, %r30;
	mov.b32 	%r35, %f14;
	// begin inline asm
	div.full.f32 %r33, %r25, %r35;
	// end inline asm
	mov.b32 	%f36, %r33;
	.loc	1 41 18                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:41:18
	sub.f32 	%f37, %f18, %f20;
	sub.f32 	%f38, %f30, %f19;
	.loc	1 49 19                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:49:19
	mul.f32 	%f39, %f37, %f35;
	mul.f32 	%f40, %f38, %f9;
	.loc	1 51 20                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:51:20
	fma.rn.f32 	%f41, %f39, %f32, %f34;
	fma.rn.f32 	%f42, %f40, %f31, %f33;
	.loc	1 41 18                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:41:18
	sub.f32 	%f43, %f15, %f17;
	sub.f32 	%f44, %f23, %f16;
	.loc	1 49 19                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:49:19
	mul.f32 	%f45, %f43, %f36;
	mul.f32 	%f46, %f44, %f10;
	.loc	1 51 20                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:51:20
	fma.rn.f32 	%f47, %f45, %f25, %f27;
	fma.rn.f32 	%f48, %f46, %f24, %f26;
	.loc	1 65 39                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:65:39
	mov.b32 	%r36, %f30;
	mov.b32 	%r37, %f23;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd1 + 0 ], { %r36, %r37 };
	// end inline asm
	.loc	1 66 28                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:66:28
	add.s64 	%rd22, %rd25, %rd38;
	.loc	1 67 25                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:67:25
	add.s64 	%rd23, %rd36, %rd37;
	.loc	1 60 20                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:60:20
	add.f32 	%f49, %f42, %f41;
	add.f32 	%f50, %f48, %f47;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p24, %f50, 0f00000000;
	setp.lt.f32 	%p25, %f49, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f51, 0f00000000, %f49, %p25;
	selp.f32 	%f52, 0f00000000, %f50, %p24;
$L__tmp2:
	.loc	1 64 21                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:64:21
	setp.le.f32 	%p26, %f52, 0f00000000;
	setp.le.f32 	%p27, %f51, 0f00000000;
$L__tmp3:
	.loc	2 121 29                        // triton_helpers.py:121:29
	mov.b32 	%r38, %f51;
	mov.b32 	%r39, %f52;
$L__tmp4:
	.loc	1 66 40                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:66:40
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd22 + 0 ], { %r38, %r39 };
	// end inline asm
	.loc	1 67 37                         // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:67:37
	selp.u16 	%rs11, 1, 0, %p27;
	selp.u16 	%rs12, 1, 0, %p26;
	shl.b16 	%rs13, %rs12, 8;
	or.b16  	%rs1, %rs11, %rs13;
	// begin inline asm
	@%p1 st.global.b16 [ %rd23 + 0 ], { %rs1 };
	// end inline asm
	.loc	1 67 4                          // crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py:67:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/rk/crk64xusrm3wzqp565fafpzvhy7qfuxt3sfpq5trqwv63gdbcez7.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 240                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 114
.b8 107
.b8 54
.b8 52
.b8 120
.b8 117
.b8 115
.b8 114
.b8 109
.b8 51
.b8 119
.b8 122
.b8 113
.b8 112
.b8 53
.b8 54
.b8 53
.b8 102
.b8 97
.b8 102
.b8 112
.b8 122
.b8 118
.b8 104
.b8 121
.b8 55
.b8 113
.b8 102
.b8 117
.b8 120
.b8 116
.b8 51
.b8 115
.b8 102
.b8 112
.b8 113
.b8 53
.b8 116
.b8 114
.b8 113
.b8 119
.b8 118
.b8 54
.b8 51
.b8 103
.b8 100
.b8 98
.b8 99
.b8 101
.b8 122
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 114
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x62 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 116
.b8 104
.b8 114
.b8 101
.b8 115
.b8 104
.b8 111
.b8 108
.b8 100
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xc5:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xda:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
