//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_div_mse_loss_mul_0 // -- Begin function triton_per_fused_add_div_mse_loss_mul_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_add_div_mse_loss_mul_0
.visible .entry triton_per_fused_add_div_mse_loss_mul_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mse_loss_mul_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mse_loss_mul_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_div_mse_loss_mul_0_param_2,
	.param .u32 triton_per_fused_add_div_mse_loss_mul_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<101>;
	.reg .f32 	%f<78>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:19:0

// %bb.0:
	ld.param.u64 	%rd9, [triton_per_fused_add_div_mse_loss_mul_0_param_0];
	ld.param.u64 	%rd10, [triton_per_fused_add_div_mse_loss_mul_0_param_1];
$L__tmp0:
	.loc	1 26 34                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:26:34
	mov.u32 	%r46, %tid.x;
	and.b32  	%r47, %r46, 31;
	ld.param.u64 	%rd11, [triton_per_fused_add_div_mse_loss_mul_0_param_2];
	.loc	1 29 19                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:29:19
	and.b32  	%r48, %r46, 15;
	.loc	1 31 38                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:31:38
	shl.b32 	%r49, %r46, 2;
	and.b32  	%r50, %r49, 192;
	.loc	1 31 35                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:31:35
	or.b32  	%r51, %r50, %r48;
	.loc	1 31 30                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:31:30
	mul.wide.u32 	%rd12, %r51, 4;
	add.s64 	%rd1, %rd10, %rd12;
	mov.pred 	%p1, -1;
	.loc	1 31 43                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:31:43
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	.loc	1 32 30                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:32:30
	add.s64 	%rd2, %rd11, %rd12;
	.loc	1 32 43                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 33 30                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:33:30
	add.s64 	%rd3, %rd1, 64;
	.loc	1 33 48                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:33:48
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	.loc	1 34 30                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:34:30
	add.s64 	%rd4, %rd2, 64;
	.loc	1 34 48                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:34:48
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 35 31                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:35:31
	add.s64 	%rd5, %rd1, 128;
	.loc	1 35 49                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:35:49
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r5;
	.loc	1 36 31                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:36:31
	add.s64 	%rd6, %rd2, 128;
	.loc	1 36 49                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:36:49
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r6;
	.loc	1 37 31                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:37:31
	add.s64 	%rd7, %rd1, 192;
	.loc	1 37 49                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:37:49
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r7;
	.loc	1 38 31                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:38:31
	add.s64 	%rd8, %rd2, 192;
	.loc	1 38 49                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:38:49
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r8;
	.loc	1 39 18                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:39:18
	sub.f32 	%f9, %f1, %f2;
	.loc	1 40 18                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:40:18
	mul.f32 	%f10, %f9, %f9;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r52, %f10;
	shfl.sync.bfly.b32	%r53, %r52, 16, 31, -1;
	mov.b32 	%f11, %r53;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f12, %f9, %f9, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r54, %f12;
	shfl.sync.bfly.b32	%r55, %r54, 8, 31, -1;
	mov.b32 	%f13, %r55;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r56, %f14;
	shfl.sync.bfly.b32	%r57, %r56, 4, 31, -1;
	mov.b32 	%f15, %r57;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r58, %f16;
	shfl.sync.bfly.b32	%r59, %r58, 2, 31, -1;
	mov.b32 	%f17, %r59;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f16, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r60, %f18;
	shfl.sync.bfly.b32	%r61, %r60, 1, 31, -1;
	mov.b32 	%f19, %r61;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p9, %r47, 0;
	shr.u32 	%r62, %r46, 3;
	and.b32  	%r63, %r62, 4;
	mov.u32 	%r64, global_smem;
	add.s32 	%r9, %r64, %r63;
	mov.b32 	%r10, %f20;
	// begin inline asm
	@%p9 st.shared.b32 [ %r9 + 0 ], %r10;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r46, 2;
	add.s32 	%r12, %r64, %r49;
	// begin inline asm
	@%p10 ld.shared.b32 %r11, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r11;
	shfl.sync.bfly.b32	%r65, %r11, 1, 31, -1;
	mov.b32 	%f22, %r65;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r66, %r46, 1;
	setp.eq.b32 	%p22, %r66, 1;
	not.pred 	%p23, %p22;
	and.pred  	%p11, %p10, %p23;
	mov.b32 	%r14, %f23;
	// begin inline asm
	@%p11 st.shared.b32 [ %r12 + 0 ], %r14;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 43 18                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:43:18
	sub.f32 	%f24, %f3, %f4;
	.loc	1 44 19                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:44:19
	mul.f32 	%f25, %f24, %f24;
	.loc	1 56 19                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:56:19
	ld.shared.u32 	%r34, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r67, %f25;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	mov.b32 	%f26, %r68;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f27, %f24, %f24, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r69, %f27;
	shfl.sync.bfly.b32	%r70, %r69, 8, 31, -1;
	mov.b32 	%f28, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f29;
	shfl.sync.bfly.b32	%r72, %r71, 4, 31, -1;
	mov.b32 	%f30, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f31;
	shfl.sync.bfly.b32	%r74, %r73, 2, 31, -1;
	mov.b32 	%f32, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f33;
	shfl.sync.bfly.b32	%r76, %r75, 1, 31, -1;
	mov.b32 	%f34, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r16, %f35;
	// begin inline asm
	@%p9 st.shared.b32 [ %r9 + 0 ], %r16;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 ld.shared.b32 %r17, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f36, %r17;
	shfl.sync.bfly.b32	%r77, %r17, 1, 31, -1;
	mov.b32 	%f37, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r20, %f38;
	// begin inline asm
	@%p11 st.shared.b32 [ %r12 + 0 ], %r20;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 47 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:47:20
	sub.f32 	%f39, %f5, %f6;
	.loc	1 48 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:48:20
	mul.f32 	%f40, %f39, %f39;
	.loc	1 59 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:59:20
	ld.shared.u32 	%r37, [global_smem];
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r78, %f40;
	shfl.sync.bfly.b32	%r79, %r78, 16, 31, -1;
	mov.b32 	%f41, %r79;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f42, %f39, %f39, %f41;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f42;
	shfl.sync.bfly.b32	%r81, %r80, 8, 31, -1;
	mov.b32 	%f43, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f44;
	shfl.sync.bfly.b32	%r83, %r82, 4, 31, -1;
	mov.b32 	%f45, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f46, %f44, %f45;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f46;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f47, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f48, %f46, %f47;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f48;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f49, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f50, %f48, %f49;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r22, %f50;
	// begin inline asm
	@%p9 st.shared.b32 [ %r9 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 ld.shared.b32 %r23, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f51, %r23;
	shfl.sync.bfly.b32	%r88, %r23, 1, 31, -1;
	mov.b32 	%f52, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r26, %f53;
	// begin inline asm
	@%p11 st.shared.b32 [ %r12 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
$L__tmp6:
	.loc	1 51 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:51:20
	sub.f32 	%f54, %f7, %f8;
	.loc	1 52 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:52:20
	mul.f32 	%f55, %f54, %f54;
	.loc	1 61 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:61:20
	ld.shared.u32 	%r40, [global_smem];
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r89, %f55;
	shfl.sync.bfly.b32	%r90, %r89, 16, 31, -1;
	mov.b32 	%f56, %r90;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f57, %f54, %f54, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f57;
	shfl.sync.bfly.b32	%r92, %r91, 8, 31, -1;
	mov.b32 	%f58, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f59;
	shfl.sync.bfly.b32	%r94, %r93, 4, 31, -1;
	mov.b32 	%f60, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f61;
	shfl.sync.bfly.b32	%r96, %r95, 2, 31, -1;
	mov.b32 	%f62, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f63;
	shfl.sync.bfly.b32	%r98, %r97, 1, 31, -1;
	mov.b32 	%f64, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f65;
	// begin inline asm
	@%p9 st.shared.b32 [ %r9 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p10 ld.shared.b32 %r29, [ %r12 + 0 ];
	// end inline asm
	mov.b32 	%f66, %r29;
	shfl.sync.bfly.b32	%r99, %r29, 1, 31, -1;
	mov.b32 	%f67, %r99;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f68;
	// begin inline asm
	@%p11 st.shared.b32 [ %r12 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r35, 1115684864;
$L__tmp8:
	.loc	1 56 19                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:56:19
	// begin inline asm
	div.full.f32 %r33, %r34, %r35;
	// end inline asm
	mov.b32 	%f69, %r33;
	.loc	1 58 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:58:20
	add.f32 	%f70, %f69, 0f00000000;
	.loc	1 59 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:59:20
	// begin inline asm
	div.full.f32 %r36, %r37, %r35;
	// end inline asm
	mov.b32 	%f71, %r36;
	.loc	1 60 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:60:20
	add.f32 	%f72, %f70, %f71;
	.loc	1 61 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:61:20
	// begin inline asm
	div.full.f32 %r39, %r40, %r35;
	// end inline asm
	mov.b32 	%f73, %r39;
	.loc	1 62 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:62:20
	add.f32 	%f74, %f72, %f73;
	.loc	1 63 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:63:20
	ld.shared.u32 	%r43, [global_smem];
	// begin inline asm
	div.full.f32 %r42, %r43, %r35;
	// end inline asm
	mov.b32 	%f75, %r42;
	.loc	1 64 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:64:20
	add.f32 	%f76, %f74, %f75;
	.loc	1 66 20                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:66:20
	mul.f32 	%f77, %f76, 0f3E800000;
	.loc	1 69 4                          // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:69:4
	bar.sync 	0;
	.loc	1 70 71                         // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:70:71
	and.b32  	%r100, %r46, 63;
	setp.eq.s32 	%p21, %r100, 0;
	mov.b32 	%r45, %f77;
	// begin inline asm
	@%p21 st.global.b32 [ %rd9 + 0 ], { %r45 };
	// end inline asm
	.loc	1 70 4                          // c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py:70:4
	ret;
$L__tmp9:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3o/c3olifbs3pttbczkbuer4o4lx5q2ts26zw66eqk24wivsyuj5ofv.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 256                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 111
.b8 108
.b8 105
.b8 102
.b8 98
.b8 115
.b8 51
.b8 112
.b8 116
.b8 116
.b8 98
.b8 99
.b8 122
.b8 107
.b8 98
.b8 117
.b8 101
.b8 114
.b8 52
.b8 111
.b8 52
.b8 108
.b8 120
.b8 53
.b8 113
.b8 50
.b8 116
.b8 115
.b8 50
.b8 54
.b8 122
.b8 119
.b8 54
.b8 54
.b8 101
.b8 113
.b8 107
.b8 50
.b8 52
.b8 119
.b8 105
.b8 118
.b8 115
.b8 121
.b8 117
.b8 106
.b8 53
.b8 111
.b8 102
.b8 118
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 111
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xea:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
