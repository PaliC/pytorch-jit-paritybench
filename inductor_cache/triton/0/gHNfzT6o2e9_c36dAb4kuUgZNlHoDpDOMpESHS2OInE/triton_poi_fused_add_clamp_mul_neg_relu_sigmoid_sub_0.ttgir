#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_clamp_mul_neg_relu_sigmoid_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant 0.00999999977 : f32 loc(#loc1)
    %cst_3 = arith.constant 9.900000e-01 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<256> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_4 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc9)
    %10 = tt.load %9 : !tt.ptr<f32> loc(#loc10)
    %11 = tt.addptr %arg2, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc11)
    %12 = tt.load %11 : !tt.ptr<f32> loc(#loc12)
    %13 = arith.cmpf ogt, %cst, %8 : tensor<256xf32, #blocked> loc(#loc38)
    %14 = arith.select %13, %cst, %8 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc39)
    %15 = arith.subf %cst_0, %10 : f32 loc(#loc40)
    %16 = math.exp %15 : f32 loc(#loc41)
    %17 = arith.addf %16, %cst_1 : f32 loc(#loc42)
    %18 = arith.divf %cst_1, %17 : f32 loc(#loc43)
    %19 = arith.addf %18, %cst_1 : f32 loc(#loc21)
    %20 = tt.splat %19 : f32 -> tensor<256xf32, #blocked> loc(#loc21)
    %21 = arith.mulf %14, %20 : tensor<256xf32, #blocked> loc(#loc22)
    %22 = arith.subf %cst, %8 : tensor<256xf32, #blocked> loc(#loc23)
    %23 = arith.cmpf ogt, %cst, %22 : tensor<256xf32, #blocked> loc(#loc44)
    %24 = arith.select %23, %cst, %22 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc45)
    %25 = arith.cmpf ogt, %12, %cst_2 : f32 loc(#loc46)
    %26 = arith.cmpf une, %12, %12 : f32 loc(#loc47)
    %27 = arith.ori %25, %26 : i1 loc(#loc48)
    %28 = arith.select %27, %12, %cst_2 : f32 loc(#loc49)
    %29 = arith.cmpf olt, %28, %cst_3 : f32 loc(#loc50)
    %30 = arith.cmpf une, %28, %28 : f32 loc(#loc51)
    %31 = arith.ori %29, %30 : i1 loc(#loc52)
    %32 = arith.select %31, %28, %cst_3 : f32 loc(#loc53)
    %33 = tt.splat %32 : f32 -> tensor<256xf32, #blocked> loc(#loc53)
    %34 = arith.mulf %24, %33 : tensor<256xf32, #blocked> loc(#loc33)
    %35 = arith.subf %21, %34 : tensor<256xf32, #blocked> loc(#loc34)
    %36 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %37 = tt.addptr %36, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc35)
    tt.store %37, %35, %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc36)
    tt.return loc(#loc37)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":21:28)
#loc3 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":21:33)
#loc4 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":22:36)
#loc5 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":22:23)
#loc6 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":23:21)
#loc7 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":25:30)
#loc8 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":25:35)
#loc9 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":26:30)
#loc10 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":26:19)
#loc11 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":28:31)
#loc12 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":28:20)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc14 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":31:40)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc17 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":32:22)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc21 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":34:18)
#loc22 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":35:18)
#loc23 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":36:12)
#loc24 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":37:41)
#loc25 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":39:42)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc29 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":41:42)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc33 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":42:20)
#loc34 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":43:19)
#loc35 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":44:25)
#loc36 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":44:37)
#loc37 = loc("inductor_cache/fs/cfsbx3sh2idjxjofp2r2smk3yqi67nz6vx5swc2sn6p3iqhgzzbj.py":44:4)
#loc38 = loc(callsite(#loc13 at #loc14))
#loc39 = loc(callsite(#loc15 at #loc14))
#loc40 = loc(callsite(#loc16 at #loc17))
#loc41 = loc(callsite(#loc18 at #loc17))
#loc42 = loc(callsite(#loc19 at #loc17))
#loc43 = loc(callsite(#loc20 at #loc17))
#loc44 = loc(callsite(#loc13 at #loc24))
#loc45 = loc(callsite(#loc15 at #loc24))
#loc46 = loc(callsite(#loc13 at #loc25))
#loc47 = loc(callsite(#loc26 at #loc25))
#loc48 = loc(callsite(#loc27 at #loc25))
#loc49 = loc(callsite(#loc15 at #loc25))
#loc50 = loc(callsite(#loc28 at #loc29))
#loc51 = loc(callsite(#loc30 at #loc29))
#loc52 = loc(callsite(#loc31 at #loc29))
#loc53 = loc(callsite(#loc32 at #loc29))
