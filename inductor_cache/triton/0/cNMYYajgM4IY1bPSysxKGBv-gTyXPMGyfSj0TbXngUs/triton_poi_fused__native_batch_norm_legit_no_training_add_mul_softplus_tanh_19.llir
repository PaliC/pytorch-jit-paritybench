; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %15 = srem i32 %13, 64, !dbg !15
  %16 = sext i32 %13 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %14) #3, !dbg !17
  %19 = bitcast i32 %18 to float, !dbg !17
  %20 = sext i32 %15 to i64, !dbg !18
  %21 = getelementptr float, ptr addrspace(1) %2, i64 %20, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %21, i1 %14) #3, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = getelementptr float, ptr addrspace(1) %3, i64 %20, !dbg !20
  %25 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %24, i1 %14) #3, !dbg !21
  %26 = bitcast i32 %25 to float, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %4, i64 %20, !dbg !22
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %14) #3, !dbg !23
  %29 = bitcast i32 %28 to float, !dbg !23
  %30 = getelementptr float, ptr addrspace(1) %5, i64 %20, !dbg !24
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %14) #3, !dbg !25
  %32 = bitcast i32 %31 to float, !dbg !25
  %33 = getelementptr float, ptr addrspace(1) %6, i64 %16, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 %14) #3, !dbg !27
  %35 = fsub float %19, %23, !dbg !28
  %36 = fadd float %26, 0x3EE4F8B580000000, !dbg !29
  %37 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %37, 0, !dbg !30
  %38 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i = icmp eq i32 %38, 0, !dbg !30
  br i1 %.not.i, label %44, label %39, !dbg !30

39:                                               ; preds = %8
  br i1 %.not1.i, label %42, label %40, !dbg !30

40:                                               ; preds = %39
  %41 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %36) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

42:                                               ; preds = %39
  %43 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %36) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

44:                                               ; preds = %8
  br i1 %.not1.i, label %47, label %45, !dbg !30

45:                                               ; preds = %44
  %46 = tail call float @llvm.nvvm.sqrt.rn.f(float %36) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

47:                                               ; preds = %44
  %48 = tail call float @llvm.nvvm.sqrt.approx.f(float %36) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

__nv_sqrtf.exit:                                  ; preds = %40, %42, %45, %47
  %.0.i = phi float [ %41, %40 ], [ %43, %42 ], [ %46, %45 ], [ %48, %47 ], !dbg !30
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !31
  %50 = fmul float %35, %49, !dbg !32
  %51 = fmul float %50, %29, !dbg !33
  %52 = fadd float %51, %32, !dbg !34
  %53 = fcmp ogt float %52, 2.000000e+01, !dbg !35
  %54 = fmul float %52, 0x3FF7154760000000, !dbg !36
  %55 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %54) #3, !dbg !36
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i5 = icmp eq i32 %56, 0, !dbg !37
  %57 = tail call float @llvm.nvvm.add.rz.ftz.f(float %55, float 1.000000e+00) #3, !dbg !37
  %58 = tail call float @llvm.nvvm.add.rz.f(float %55, float 1.000000e+00) #3, !dbg !37
  %.01.i6 = select i1 %.not.i5, float %58, float %57, !dbg !37
  %59 = bitcast float %.01.i6 to i32, !dbg !37
  %60 = add i32 %59, -1061158912, !dbg !37
  %61 = and i32 %60, -8388608, !dbg !37
  %62 = bitcast float %55 to i32, !dbg !37
  %63 = sub i32 %62, %61, !dbg !37
  %64 = bitcast i32 %63 to float, !dbg !37
  %65 = sub i32 1082130432, %61, !dbg !37
  %66 = bitcast i32 %65 to float, !dbg !37
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not14.i = icmp eq i32 %67, 0, !dbg !37
  %68 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %66, float -1.000000e+00) #3, !dbg !37
  %69 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %66, float -1.000000e+00) #3, !dbg !37
  %.09.i = select i1 %.not14.i, float %69, float %68, !dbg !37
  %70 = fadd float %.09.i, %64, !dbg !37
  %71 = sitofp i32 %61 to float, !dbg !37
  %72 = fmul float %71, 0x3E80000000000000, !dbg !37
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not15.i = icmp eq i32 %73, 0, !dbg !37
  %74 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %70, float 0x3FBB000240000000) #3, !dbg !37
  %75 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %70, float 0x3FBB000240000000) #3, !dbg !37
  %.012.i = select i1 %.not15.i, float %75, float %74, !dbg !37
  %76 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not16.i = icmp eq i32 %76, 0, !dbg !37
  %77 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %70, float 0xBFC0EF1C00000000) #3, !dbg !37
  %78 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %70, float 0xBFC0EF1C00000000) #3, !dbg !37
  %.010.i = select i1 %.not16.i, float %78, float %77, !dbg !37
  %79 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not17.i = icmp eq i32 %79, 0, !dbg !37
  %80 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %70, float 0x3FC28C8EA0000000) #3, !dbg !37
  %81 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %70, float 0x3FC28C8EA0000000) #3, !dbg !37
  %.06.i7 = select i1 %.not17.i, float %81, float %80, !dbg !37
  %82 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not18.i = icmp eq i32 %82, 0, !dbg !37
  %83 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i7, float %70, float 0xBFC54D1BA0000000) #3, !dbg !37
  %84 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i7, float %70, float 0xBFC54D1BA0000000) #3, !dbg !37
  %.02.i8 = select i1 %.not18.i, float %84, float %83, !dbg !37
  %85 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not19.i = icmp eq i32 %85, 0, !dbg !37
  %86 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i8, float %70, float 0x3FC995F3C0000000) #3, !dbg !37
  %87 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i8, float %70, float 0x3FC995F3C0000000) #3, !dbg !37
  %.0.i9 = select i1 %.not19.i, float %87, float %86, !dbg !37
  %88 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not20.i = icmp eq i32 %88, 0, !dbg !37
  %89 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i9, float %70, float 0xBFD0000840000000) #3, !dbg !37
  %90 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i9, float %70, float 0xBFD0000840000000) #3, !dbg !37
  %.011.i = select i1 %.not20.i, float %90, float %89, !dbg !37
  %91 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not21.i = icmp eq i32 %91, 0, !dbg !37
  %92 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %70, float 0x3FD5555CC0000000) #3, !dbg !37
  %93 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %70, float 0x3FD5555CC0000000) #3, !dbg !37
  %.08.i = select i1 %.not21.i, float %93, float %92, !dbg !37
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not22.i = icmp eq i32 %94, 0, !dbg !37
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %70, float -5.000000e-01) #3, !dbg !37
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %70, float -5.000000e-01) #3, !dbg !37
  %.07.i = select i1 %.not22.i, float %96, float %95, !dbg !37
  %97 = fmul float %70, %.07.i, !dbg !37
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not23.i = icmp eq i32 %98, 0, !dbg !37
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %97, float %70, float %70) #3, !dbg !37
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %97, float %70, float %70) #3, !dbg !37
  %.05.i10 = select i1 %.not23.i, float %100, float %99, !dbg !37
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not24.i = icmp eq i32 %101, 0, !dbg !37
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %72, float 0x3FE62E4300000000, float %.05.i10) #3, !dbg !37
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %72, float 0x3FE62E4300000000, float %.05.i10) #3, !dbg !37
  %.04.i11 = select i1 %.not24.i, float %103, float %102, !dbg !37
  %104 = icmp ugt i32 %62, 2139095039, !dbg !37
  br i1 %104, label %105, label %__nv_log1pf.exit, !dbg !37

105:                                              ; preds = %__nv_sqrtf.exit
  %106 = icmp sgt i32 %62, -1082130432, !dbg !37
  br i1 %106, label %__nv_fmaf_rn.exit.i, label %110, !dbg !37

__nv_fmaf_rn.exit.i:                              ; preds = %105
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not25.i = icmp eq i32 %107, 0, !dbg !37
  %108 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %55, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !37
  %109 = tail call float @llvm.nvvm.fma.rn.f(float %55, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !37
  %.03.i12 = select i1 %.not25.i, float %109, float %108, !dbg !37
  br label %110, !dbg !37

110:                                              ; preds = %__nv_fmaf_rn.exit.i, %105
  %r.0.i = phi float [ %.03.i12, %__nv_fmaf_rn.exit.i ], [ %.04.i11, %105 ], !dbg !37
  %111 = fcmp oeq float %55, 0.000000e+00, !dbg !37
  %r.1.i = select i1 %111, float -0.000000e+00, float %r.0.i, !dbg !37
  br label %__nv_log1pf.exit, !dbg !37

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit, %110
  %r.2.i = phi float [ %r.1.i, %110 ], [ %.04.i11, %__nv_sqrtf.exit ], !dbg !37
  %112 = select i1 %53, float %52, float %r.2.i, !dbg !38
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not.i1 = icmp eq i32 %113, 0, !dbg !39
  %114 = tail call float @llvm.nvvm.fabs.ftz.f(float %112) #3, !dbg !39
  %115 = tail call float @llvm.nvvm.fabs.f(float %112) #3, !dbg !39
  %.01.i = select i1 %.not.i1, float %115, float %114, !dbg !39
  %116 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !39
  br i1 %116, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !39

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit
  %117 = fmul float %.01.i, 0x4007154760000000, !dbg !39
  %118 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %117) #3, !dbg !39
  %119 = fadd float %118, 1.000000e+00, !dbg !39
  %120 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %119) #4, !dbg !39, !srcloc !40
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not6.i = icmp eq i32 %121, 0, !dbg !39
  %122 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %120, float -2.000000e+00, float 1.000000e+00) #3, !dbg !39
  %123 = tail call float @llvm.nvvm.fma.rn.f(float %120, float -2.000000e+00, float 1.000000e+00) #3, !dbg !39
  %.03.i = select i1 %.not6.i, float %123, float %122, !dbg !39
  %124 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !39
  %s.0.i = select i1 %124, float 1.000000e+00, float %.03.i, !dbg !39
  %125 = bitcast float %s.0.i to i32, !dbg !39
  %126 = bitcast float %112 to i32, !dbg !39
  %127 = and i32 %126, -2147483648, !dbg !39
  %128 = or i32 %127, %125, !dbg !39
  %129 = bitcast i32 %128 to float, !dbg !39
  br label %__nv_tanhf.exit, !dbg !39

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit
  %130 = fmul float %112, %112, !dbg !39
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not1.i2 = icmp eq i32 %131, 0, !dbg !39
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %130, float 0xBFAAC795C0000000) #3, !dbg !39
  %133 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %130, float 0xBFAAC795C0000000) #3, !dbg !39
  %.06.i = select i1 %.not1.i2, float %133, float %132, !dbg !39
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not2.i3 = icmp eq i32 %134, 0, !dbg !39
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %130, float 0x3FC10B2820000000) #3, !dbg !39
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %130, float 0x3FC10B2820000000) #3, !dbg !39
  %.05.i = select i1 %.not2.i3, float %136, float %135, !dbg !39
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not3.i = icmp eq i32 %137, 0, !dbg !39
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %130, float 0xBFD5553DA0000000) #3, !dbg !39
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %130, float 0xBFD5553DA0000000) #3, !dbg !39
  %.0.i4 = select i1 %.not3.i, float %139, float %138, !dbg !39
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not4.i = icmp eq i32 %140, 0, !dbg !39
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i4, float %130, float 0.000000e+00) #3, !dbg !39
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i4, float %130, float 0.000000e+00) #3, !dbg !39
  %.04.i = select i1 %.not4.i, float %142, float %141, !dbg !39
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not5.i = icmp eq i32 %143, 0, !dbg !39
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %112, float %112) #3, !dbg !39
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %112, float %112) #3, !dbg !39
  %.02.i = select i1 %.not5.i, float %145, float %144, !dbg !39
  br label %__nv_tanhf.exit, !dbg !39

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %129, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !39
  %146 = bitcast i32 %34 to float, !dbg !27
  %147 = fmul float %52, %s.1.i, !dbg !41
  %148 = fadd float %147, %146, !dbg !42
  %149 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !43
  %150 = bitcast float %148 to i32, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %150, ptr addrspace(1) %149, i1 %14) #3, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctogwifzv4cfkhojma27sqrlbt2zn5ivq5xhx6kh7nglumgqdhea.py", directory: "inductor_cache/to")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 31, scope: !7)
!23 = !DILocation(line: 29, column: 36, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 36, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 26, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 40, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 20, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 44, column: 20, scope: !7)
!36 = !DILocation(line: 45, column: 24, scope: !7)
!37 = !DILocation(line: 46, column: 28, scope: !7)
!38 = !DILocation(line: 47, column: 35, scope: !7)
!39 = !DILocation(line: 48, column: 27, scope: !7)
!40 = !{i32 21046}
!41 = !DILocation(line: 49, column: 20, scope: !7)
!42 = !DILocation(line: 50, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 28, scope: !7)
!44 = !DILocation(line: 51, column: 40, scope: !7)
!45 = !DILocation(line: 51, column: 4, scope: !7)
