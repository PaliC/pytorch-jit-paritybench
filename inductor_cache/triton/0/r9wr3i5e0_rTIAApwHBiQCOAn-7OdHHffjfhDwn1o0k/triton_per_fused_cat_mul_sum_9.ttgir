#blocked = #triton_gpu.blocked<{sizePerThread = [4, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 8], order = [0, 1]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [1, 8], order = [0, 1]}>
#loc = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0)
#loc1 = loc(unknown)
#loc43 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":42:24)
#loc48 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":46:26)
#loc52 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":50:26)
#loc56 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":54:26)
#loc60 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":58:26)
#loc76 = loc(callsite(#loc1 at #loc43))
#loc79 = loc(callsite(#loc1 at #loc48))
#loc81 = loc(callsite(#loc1 at #loc52))
#loc83 = loc(callsite(#loc1 at #loc56))
#loc85 = loc(callsite(#loc1 at #loc60))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 8 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_cat_mul_sum_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<32x64xf32, #blocked> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<64> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<64> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<16> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<1x64xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<5120> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<80> : tensor<32x1xi32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<4096> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<3072> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<2048> : tensor<32x1xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<1024> : tensor<32x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c32_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc4)
    %4 = tt.expand_dims %2 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32x1xi32, #blocked> loc(#loc4)
    %5 = tt.expand_dims %3 {axis = 1 : i32} : tensor<32xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xi32, #blocked1> loc(#loc4)
    %6 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked> loc(#loc5)
    %7 = tt.splat %1 : i32 -> tensor<32x1xi32, #blocked1> loc(#loc5)
    %8 = arith.addi %6, %4 : tensor<32x1xi32, #blocked> loc(#loc5)
    %9 = arith.addi %7, %5 : tensor<32x1xi32, #blocked1> loc(#loc5)
    %10 = arith.cmpi slt, %8, %cst_0 : tensor<32x1xi32, #blocked> loc(#loc6)
    %11 = arith.cmpi slt, %9, %cst_1 : tensor<32x1xi32, #blocked1> loc(#loc6)
    %12 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %13 = tt.expand_dims %12 {axis = 0 : i32} : tensor<64xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x64xi32, #blocked> loc(#loc7)
    %14 = arith.remsi %8, %cst_2 : tensor<32x1xi32, #blocked> loc(#loc8)
    %15 = arith.remsi %9, %cst_3 : tensor<32x1xi32, #blocked1> loc(#loc8)
    %16 = arith.divsi %8, %cst_2 : tensor<32x1xi32, #blocked> loc(#loc9)
    %17 = arith.divsi %9, %cst_3 : tensor<32x1xi32, #blocked1> loc(#loc9)
    %18 = arith.muli %13, %cst_4 : tensor<1x64xi32, #blocked> loc(#loc10)
    %19 = tt.broadcast %14 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc11)
    %20 = tt.broadcast %18 : tensor<1x64xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc11)
    %21 = arith.addi %19, %20 : tensor<32x64xi32, #blocked> loc(#loc11)
    %22 = arith.muli %16, %cst_5 : tensor<32x1xi32, #blocked> loc(#loc12)
    %23 = tt.broadcast %22 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc13)
    %24 = arith.addi %21, %23 : tensor<32x64xi32, #blocked> loc(#loc13)
    %25 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc14)
    %26 = tt.addptr %25, %24 : tensor<32x64x!tt.ptr<f32>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc14)
    %27 = tt.broadcast %10 : tensor<32x1xi1, #blocked> -> tensor<32x64xi1, #blocked> loc(#loc15)
    %28 = tt.load %26, %27, %cst : tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc15)
    %29 = arith.muli %16, %cst_10 : tensor<32x1xi32, #blocked> loc(#loc16)
    %30 = tt.broadcast %29 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc17)
    %31 = arith.addi %21, %30 : tensor<32x64xi32, #blocked> loc(#loc17)
    %32 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc18)
    %33 = tt.addptr %32, %31 : tensor<32x64x!tt.ptr<f32>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc18)
    %34 = tt.load %33, %27, %cst : tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc19)
    %35 = arith.addi %14, %cst_10 : tensor<32x1xi32, #blocked> loc(#loc20)
    %36 = tt.broadcast %35 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc21)
    %37 = arith.addi %36, %20 : tensor<32x64xi32, #blocked> loc(#loc21)
    %38 = arith.addi %37, %23 : tensor<32x64xi32, #blocked> loc(#loc22)
    %39 = tt.addptr %25, %38 : tensor<32x64x!tt.ptr<f32>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc23)
    %40 = tt.load %39, %27, %cst : tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc24)
    %41 = arith.addi %14, %cst_9 : tensor<32x1xi32, #blocked> loc(#loc25)
    %42 = tt.broadcast %41 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc26)
    %43 = arith.addi %42, %20 : tensor<32x64xi32, #blocked> loc(#loc26)
    %44 = arith.addi %43, %23 : tensor<32x64xi32, #blocked> loc(#loc27)
    %45 = tt.addptr %25, %44 : tensor<32x64x!tt.ptr<f32>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc28)
    %46 = tt.load %45, %27, %cst : tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc29)
    %47 = arith.addi %14, %cst_8 : tensor<32x1xi32, #blocked> loc(#loc30)
    %48 = tt.broadcast %47 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc31)
    %49 = arith.addi %48, %20 : tensor<32x64xi32, #blocked> loc(#loc31)
    %50 = arith.addi %49, %23 : tensor<32x64xi32, #blocked> loc(#loc32)
    %51 = tt.addptr %25, %50 : tensor<32x64x!tt.ptr<f32>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc33)
    %52 = tt.load %51, %27, %cst : tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc34)
    %53 = arith.addi %14, %cst_7 : tensor<32x1xi32, #blocked> loc(#loc35)
    %54 = tt.broadcast %53 : tensor<32x1xi32, #blocked> -> tensor<32x64xi32, #blocked> loc(#loc36)
    %55 = arith.addi %54, %20 : tensor<32x64xi32, #blocked> loc(#loc36)
    %56 = arith.addi %55, %23 : tensor<32x64xi32, #blocked> loc(#loc37)
    %57 = tt.addptr %25, %56 : tensor<32x64x!tt.ptr<f32>, #blocked>, tensor<32x64xi32, #blocked> loc(#loc38)
    %58 = tt.load %57, %27, %cst : tensor<32x64x!tt.ptr<f32>, #blocked> loc(#loc39)
    %59 = arith.mulf %28, %34 : tensor<32x64xf32, #blocked> loc(#loc40)
    %60 = arith.select %27, %59, %cst : tensor<32x64xi1, #blocked>, tensor<32x64xf32, #blocked> loc(#loc41)
    %61 = "tt.reduce"(%60) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc43)), %arg10: f32 loc(callsite(#loc1 at #loc43))):
      %96 = arith.addf %arg9, %arg10 : f32 loc(#loc86)
      tt.reduce.return %96 : f32 loc(#loc75)
    }) : (tensor<32x64xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc75)
    %62 = triton_gpu.convert_layout %61 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc45)
    %63 = tt.expand_dims %62 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc45)
    %64 = arith.mulf %40, %34 : tensor<32x64xf32, #blocked> loc(#loc46)
    %65 = arith.select %27, %64, %cst : tensor<32x64xi1, #blocked>, tensor<32x64xf32, #blocked> loc(#loc47)
    %66 = "tt.reduce"(%65) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc48)), %arg10: f32 loc(callsite(#loc1 at #loc48))):
      %96 = arith.addf %arg9, %arg10 : f32 loc(#loc87)
      tt.reduce.return %96 : f32 loc(#loc78)
    }) : (tensor<32x64xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc78)
    %67 = triton_gpu.convert_layout %66 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc49)
    %68 = tt.expand_dims %67 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc49)
    %69 = arith.mulf %46, %34 : tensor<32x64xf32, #blocked> loc(#loc50)
    %70 = arith.select %27, %69, %cst : tensor<32x64xi1, #blocked>, tensor<32x64xf32, #blocked> loc(#loc51)
    %71 = "tt.reduce"(%70) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc52)), %arg10: f32 loc(callsite(#loc1 at #loc52))):
      %96 = arith.addf %arg9, %arg10 : f32 loc(#loc88)
      tt.reduce.return %96 : f32 loc(#loc80)
    }) : (tensor<32x64xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc80)
    %72 = triton_gpu.convert_layout %71 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc53)
    %73 = tt.expand_dims %72 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc53)
    %74 = arith.mulf %52, %34 : tensor<32x64xf32, #blocked> loc(#loc54)
    %75 = arith.select %27, %74, %cst : tensor<32x64xi1, #blocked>, tensor<32x64xf32, #blocked> loc(#loc55)
    %76 = "tt.reduce"(%75) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc56)), %arg10: f32 loc(callsite(#loc1 at #loc56))):
      %96 = arith.addf %arg9, %arg10 : f32 loc(#loc89)
      tt.reduce.return %96 : f32 loc(#loc82)
    }) : (tensor<32x64xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc82)
    %77 = triton_gpu.convert_layout %76 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc57)
    %78 = tt.expand_dims %77 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc57)
    %79 = arith.mulf %58, %34 : tensor<32x64xf32, #blocked> loc(#loc58)
    %80 = arith.select %27, %79, %cst : tensor<32x64xi1, #blocked>, tensor<32x64xf32, #blocked> loc(#loc59)
    %81 = "tt.reduce"(%80) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc60)), %arg10: f32 loc(callsite(#loc1 at #loc60))):
      %96 = arith.addf %arg9, %arg10 : f32 loc(#loc90)
      tt.reduce.return %96 : f32 loc(#loc84)
    }) : (tensor<32x64xf32, #blocked>) -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc84)
    %82 = triton_gpu.convert_layout %81 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc61)
    %83 = tt.expand_dims %82 {axis = 1 : i32} : tensor<32xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<32x1xf32, #blocked1> loc(#loc61)
    %84 = arith.muli %17, %cst_6 : tensor<32x1xi32, #blocked1> loc(#loc62)
    %85 = arith.addi %15, %84 : tensor<32x1xi32, #blocked1> loc(#loc63)
    %86 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc64)
    %87 = tt.addptr %86, %85 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc64)
    tt.store %87, %63, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc65)
    %88 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc66)
    %89 = tt.addptr %88, %85 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc66)
    tt.store %89, %68, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc67)
    %90 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc68)
    %91 = tt.addptr %90, %85 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc68)
    tt.store %91, %73, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc69)
    %92 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc70)
    %93 = tt.addptr %92, %85 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc70)
    tt.store %93, %78, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc71)
    %94 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc72)
    %95 = tt.addptr %94, %85 : tensor<32x1x!tt.ptr<f32>, #blocked1>, tensor<32x1xi32, #blocked1> loc(#loc72)
    tt.store %95, %83, %11 : tensor<32x1x!tt.ptr<f32>, #blocked1> loc(#loc73)
    tt.return loc(#loc74)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":23:28)
#loc3 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":23:33)
#loc4 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":24:44)
#loc5 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":24:23)
#loc6 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":25:21)
#loc7 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":26:34)
#loc8 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":30:19)
#loc9 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":31:19)
#loc10 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":33:38)
#loc11 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":33:35)
#loc12 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":33:48)
#loc13 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":33:43)
#loc14 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":33:30)
#loc15 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":33:53)
#loc16 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":34:48)
#loc17 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":34:43)
#loc18 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":34:30)
#loc19 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":34:53)
#loc20 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":35:37)
#loc21 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":35:42)
#loc22 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":35:50)
#loc23 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":35:30)
#loc24 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":35:60)
#loc25 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":36:38)
#loc26 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":36:43)
#loc27 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":36:51)
#loc28 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":36:31)
#loc29 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":36:61)
#loc30 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":37:38)
#loc31 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":37:43)
#loc32 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":37:51)
#loc33 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":37:31)
#loc34 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":37:61)
#loc35 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":38:38)
#loc36 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":38:43)
#loc37 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":38:51)
#loc38 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":38:31)
#loc39 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":38:61)
#loc40 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":39:18)
#loc41 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":41:33)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc45 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":42:27)
#loc46 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":43:18)
#loc47 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":45:34)
#loc49 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":46:29)
#loc50 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":47:20)
#loc51 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":49:35)
#loc53 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":50:29)
#loc54 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":51:20)
#loc55 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":53:35)
#loc57 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":54:29)
#loc58 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":55:20)
#loc59 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":57:35)
#loc61 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":58:29)
#loc62 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":59:33)
#loc63 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":59:30)
#loc64 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":59:25)
#loc65 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":59:44)
#loc66 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":60:25)
#loc67 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":60:45)
#loc68 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":61:25)
#loc69 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":61:45)
#loc70 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":62:25)
#loc71 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":62:45)
#loc72 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":63:25)
#loc73 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":63:45)
#loc74 = loc("inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py":63:4)
#loc75 = loc(callsite(#loc42 at #loc43))
#loc77 = loc(callsite(#loc44 at #loc42))
#loc78 = loc(callsite(#loc42 at #loc48))
#loc80 = loc(callsite(#loc42 at #loc52))
#loc82 = loc(callsite(#loc42 at #loc56))
#loc84 = loc(callsite(#loc42 at #loc60))
#loc86 = loc(callsite(#loc77 at #loc43))
#loc87 = loc(callsite(#loc77 at #loc48))
#loc88 = loc(callsite(#loc77 at #loc52))
#loc89 = loc(callsite(#loc77 at #loc56))
#loc90 = loc(callsite(#loc77 at #loc60))
