//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_cat_mul_sum_9 // -- Begin function triton_per_fused_cat_mul_sum_9
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_cat_mul_sum_9
.visible .entry triton_per_fused_cat_mul_sum_9(
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_mul_sum_9_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_mul_sum_9_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_mul_sum_9_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_mul_sum_9_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_mul_sum_9_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_mul_sum_9_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_cat_mul_sum_9_param_6,
	.param .u32 triton_per_fused_cat_mul_sum_9_param_7,
	.param .u32 triton_per_fused_cat_mul_sum_9_param_8
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<104>;
	.reg .b32 	%r<350>;
	.reg .f32 	%f<224>;
	.reg .b64 	%rd<38>;
	.loc	1 19 0                          // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:19:0

// %bb.0:
	ld.param.u64 	%rd18, [triton_per_fused_cat_mul_sum_9_param_0];
	ld.param.u64 	%rd19, [triton_per_fused_cat_mul_sum_9_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:23:33
	shl.b32 	%r188, %r1, 5;
	ld.param.u64 	%rd20, [triton_per_fused_cat_mul_sum_9_param_2];
	ld.param.u64 	%rd21, [triton_per_fused_cat_mul_sum_9_param_3];
	.loc	1 24 44                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:24:44
	mov.u32 	%r189, %tid.x;
	and.b32  	%r190, %r189, 24;
	ld.param.u64 	%rd22, [triton_per_fused_cat_mul_sum_9_param_4];
	shl.b32 	%r191, %r189, 2;
	ld.param.u64 	%rd23, [triton_per_fused_cat_mul_sum_9_param_5];
	and.b32  	%r192, %r191, 28;
	ld.param.u64 	%rd24, [triton_per_fused_cat_mul_sum_9_param_6];
	and.b32  	%r193, %r189, 31;
	.loc	1 24 23                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:24:23
	or.b32  	%r194, %r188, %r192;
	or.b32  	%r195, %r188, %r193;
	.loc	1 25 21                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:25:21
	setp.lt.s32 	%p1, %r194, 64;
	setp.lt.s32 	%p101, %r195, 64;
	.loc	1 31 19                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:31:19
	shr.s32 	%r197, %r194, 31;
	shr.u32 	%r198, %r197, 28;
	add.s32 	%r199, %r194, %r198;
	shr.s32 	%r200, %r199, 4;
	.loc	1 30 19                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:30:19
	and.b32  	%r201, %r199, -16;
	sub.s32 	%r202, %r194, %r201;
	.loc	1 31 19                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:31:19
	shr.s32 	%r204, %r195, 31;
	shr.u32 	%r205, %r204, 28;
	add.s32 	%r206, %r195, %r205;
	shr.s32 	%r207, %r206, 4;
	.loc	1 30 19                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:30:19
	and.b32  	%r208, %r206, -16;
	sub.s32 	%r209, %r195, %r208;
	.loc	1 33 38                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:33:38
	shl.b32 	%r210, %r189, 1;
	and.b32  	%r211, %r210, 496;
	or.b32  	%r212, %r211, 512;
	.loc	1 33 35                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:33:35
	add.s32 	%r213, %r202, %r211;
	add.s32 	%r214, %r202, %r212;
	.loc	1 33 48                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:33:48
	mul.lo.s32 	%r215, %r200, 5120;
	.loc	1 33 43                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:33:43
	add.s32 	%r216, %r213, %r215;
	add.s32 	%r217, %r214, %r215;
	.loc	1 33 30                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:33:30
	mul.wide.s32 	%rd25, %r216, 4;
	add.s64 	%rd1, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r217, 4;
	add.s64 	%rd2, %rd18, %rd26;
	mov.b32 	%r6, 0;
	.loc	1 33 53                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:33:53
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r10, %r6;
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r12, %r6;
	@!%p1 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f5, %r10;
	mov.b32 	%f6, %r11;
	mov.b32 	%f7, %r12;
	mov.b32 	%f8, %r13;
	.loc	1 34 43                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:34:43
	shl.b32 	%r218, %r200, 12;
	sub.s32 	%r219, %r216, %r218;
	sub.s32 	%r220, %r217, %r218;
	.loc	1 34 30                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:34:30
	mul.wide.s32 	%rd27, %r219, 4;
	add.s64 	%rd3, %rd19, %rd27;
	mul.wide.s32 	%rd28, %r220, 4;
	add.s64 	%rd4, %rd19, %rd28;
	.loc	1 34 53                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:34:53
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	mov.b32 	%f11, %r20;
	mov.b32 	%f12, %r21;
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	mov.b32 	%f13, %r26;
	mov.b32 	%f14, %r27;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r29;
	.loc	1 35 37                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:35:37
	add.s32 	%r221, %r202, 1024;
	.loc	1 35 42                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:35:42
	or.b32  	%r222, %r215, %r211;
	.loc	1 35 50                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:35:50
	add.s32 	%r223, %r222, %r221;
	.loc	1 35 42                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:35:42
	or.b32  	%r224, %r215, %r212;
	.loc	1 35 50                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:35:50
	add.s32 	%r225, %r224, %r221;
	.loc	1 35 30                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:35:30
	mul.wide.s32 	%rd29, %r223, 4;
	add.s64 	%rd5, %rd18, %rd29;
	mul.wide.s32 	%rd30, %r225, 4;
	add.s64 	%rd6, %rd18, %rd30;
	.loc	1 35 60                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:35:60
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	mov.b32 	%f17, %r34;
	mov.b32 	%f18, %r35;
	mov.b32 	%f19, %r36;
	mov.b32 	%f20, %r37;
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p1 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r42, %r6;
	@!%p1 mov.u32 %r43, %r6;
	@!%p1 mov.u32 %r44, %r6;
	@!%p1 mov.u32 %r45, %r6;
	// end inline asm
	mov.b32 	%f21, %r42;
	mov.b32 	%f22, %r43;
	mov.b32 	%f23, %r44;
	mov.b32 	%f24, %r45;
	.loc	1 36 38                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:36:38
	add.s32 	%r226, %r202, 2048;
	.loc	1 36 51                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:36:51
	add.s32 	%r227, %r222, %r226;
	add.s32 	%r228, %r224, %r226;
	.loc	1 36 31                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:36:31
	mul.wide.s32 	%rd31, %r227, 4;
	add.s64 	%rd7, %rd18, %rd31;
	mul.wide.s32 	%rd32, %r228, 4;
	add.s64 	%rd8, %rd18, %rd32;
	.loc	1 36 61                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:36:61
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p1 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r50, %r6;
	@!%p1 mov.u32 %r51, %r6;
	@!%p1 mov.u32 %r52, %r6;
	@!%p1 mov.u32 %r53, %r6;
	// end inline asm
	mov.b32 	%f25, %r50;
	mov.b32 	%f26, %r51;
	mov.b32 	%f27, %r52;
	mov.b32 	%f28, %r53;
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p1 ld.global.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd8 + 0 ];
	@!%p1 mov.u32 %r58, %r6;
	@!%p1 mov.u32 %r59, %r6;
	@!%p1 mov.u32 %r60, %r6;
	@!%p1 mov.u32 %r61, %r6;
	// end inline asm
	mov.b32 	%f29, %r58;
	mov.b32 	%f30, %r59;
	mov.b32 	%f31, %r60;
	mov.b32 	%f32, %r61;
	.loc	1 37 38                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:37:38
	add.s32 	%r229, %r202, 3072;
	.loc	1 37 51                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:37:51
	add.s32 	%r230, %r222, %r229;
	add.s32 	%r231, %r224, %r229;
	.loc	1 37 31                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:37:31
	mul.wide.s32 	%rd33, %r230, 4;
	add.s64 	%rd9, %rd18, %rd33;
	mul.wide.s32 	%rd34, %r231, 4;
	add.s64 	%rd10, %rd18, %rd34;
	.loc	1 37 61                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:37:61
	// begin inline asm
	mov.u32 %r66, 0x0;
	mov.u32 %r67, 0x0;
	mov.u32 %r68, 0x0;
	mov.u32 %r69, 0x0;
	@%p1 ld.global.v4.b32 { %r66, %r67, %r68, %r69 }, [ %rd9 + 0 ];
	@!%p1 mov.u32 %r66, %r6;
	@!%p1 mov.u32 %r67, %r6;
	@!%p1 mov.u32 %r68, %r6;
	@!%p1 mov.u32 %r69, %r6;
	// end inline asm
	mov.b32 	%f33, %r66;
	mov.b32 	%f34, %r67;
	mov.b32 	%f35, %r68;
	mov.b32 	%f36, %r69;
	// begin inline asm
	mov.u32 %r74, 0x0;
	mov.u32 %r75, 0x0;
	mov.u32 %r76, 0x0;
	mov.u32 %r77, 0x0;
	@%p1 ld.global.v4.b32 { %r74, %r75, %r76, %r77 }, [ %rd10 + 0 ];
	@!%p1 mov.u32 %r74, %r6;
	@!%p1 mov.u32 %r75, %r6;
	@!%p1 mov.u32 %r76, %r6;
	@!%p1 mov.u32 %r77, %r6;
	// end inline asm
	mov.b32 	%f37, %r74;
	mov.b32 	%f38, %r75;
	mov.b32 	%f39, %r76;
	mov.b32 	%f40, %r77;
	.loc	1 38 38                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:38:38
	add.s32 	%r232, %r202, 4096;
	.loc	1 38 51                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:38:51
	add.s32 	%r233, %r222, %r232;
	add.s32 	%r234, %r224, %r232;
	.loc	1 38 31                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:38:31
	mul.wide.s32 	%rd35, %r233, 4;
	add.s64 	%rd11, %rd18, %rd35;
	mul.wide.s32 	%rd36, %r234, 4;
	add.s64 	%rd12, %rd18, %rd36;
	.loc	1 38 61                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:38:61
	// begin inline asm
	mov.u32 %r82, 0x0;
	mov.u32 %r83, 0x0;
	mov.u32 %r84, 0x0;
	mov.u32 %r85, 0x0;
	@%p1 ld.global.v4.b32 { %r82, %r83, %r84, %r85 }, [ %rd11 + 0 ];
	@!%p1 mov.u32 %r82, %r6;
	@!%p1 mov.u32 %r83, %r6;
	@!%p1 mov.u32 %r84, %r6;
	@!%p1 mov.u32 %r85, %r6;
	// end inline asm
	mov.b32 	%f41, %r82;
	mov.b32 	%f42, %r83;
	mov.b32 	%f43, %r84;
	mov.b32 	%f44, %r85;
	// begin inline asm
	mov.u32 %r90, 0x0;
	mov.u32 %r91, 0x0;
	mov.u32 %r92, 0x0;
	mov.u32 %r93, 0x0;
	@%p1 ld.global.v4.b32 { %r90, %r91, %r92, %r93 }, [ %rd12 + 0 ];
	@!%p1 mov.u32 %r90, %r6;
	@!%p1 mov.u32 %r91, %r6;
	@!%p1 mov.u32 %r92, %r6;
	@!%p1 mov.u32 %r93, %r6;
	// end inline asm
	mov.b32 	%f45, %r90;
	mov.b32 	%f46, %r91;
	mov.b32 	%f47, %r92;
	mov.b32 	%f48, %r93;
	.loc	1 39 18                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:39:18
	mul.f32 	%f49, %f5, %f13;
	mul.f32 	%f50, %f6, %f14;
	mul.f32 	%f51, %f7, %f15;
	mul.f32 	%f52, %f8, %f16;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f53, %f1, %f9, %f49;
	selp.f32 	%f54, %f53, 0f00000000, %p1;
	fma.rn.f32 	%f55, %f2, %f10, %f50;
	selp.f32 	%f56, %f55, 0f00000000, %p1;
	fma.rn.f32 	%f57, %f3, %f11, %f51;
	selp.f32 	%f58, %f57, 0f00000000, %p1;
	fma.rn.f32 	%f59, %f4, %f12, %f52;
	selp.f32 	%f60, %f59, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r235, %f54;
	shfl.sync.bfly.b32	%r236, %r235, 16, 31, -1;
	mov.b32 	%f61, %r236;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f54, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r237, %f62;
	shfl.sync.bfly.b32	%r238, %r237, 8, 31, -1;
	mov.b32 	%f63, %r238;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f62, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r239, %f56;
	shfl.sync.bfly.b32	%r240, %r239, 16, 31, -1;
	mov.b32 	%f65, %r240;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f56, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r241, %f66;
	shfl.sync.bfly.b32	%r242, %r241, 8, 31, -1;
	mov.b32 	%f67, %r242;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r243, %f58;
	shfl.sync.bfly.b32	%r244, %r243, 16, 31, -1;
	mov.b32 	%f69, %r244;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f58, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r245, %f70;
	shfl.sync.bfly.b32	%r246, %r245, 8, 31, -1;
	mov.b32 	%f71, %r246;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r247, %f60;
	shfl.sync.bfly.b32	%r248, %r247, 16, 31, -1;
	mov.b32 	%f73, %r248;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f60, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r249, %f74;
	shfl.sync.bfly.b32	%r250, %r249, 8, 31, -1;
	mov.b32 	%f75, %r250;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p61, %r190, 0;
	bfe.u32 	%r251, %r189, 5, 3;
	shl.b32 	%r252, %r251, 2;
	shl.b32 	%r253, %r192, 5;
	or.b32  	%r254, %r253, %r252;
	mov.u32 	%r255, global_smem;
	add.s32 	%r98, %r255, %r254;
	mov.b32 	%r99, %f64;
	// begin inline asm
	@%p61 st.shared.b32 [ %r98 + 0 ], %r99;
	// end inline asm
	add.s32 	%r100, %r98, 32;
	mov.b32 	%r101, %f68;
	// begin inline asm
	@%p61 st.shared.b32 [ %r100 + 0 ], %r101;
	// end inline asm
	add.s32 	%r102, %r98, 64;
	mov.b32 	%r103, %f72;
	// begin inline asm
	@%p61 st.shared.b32 [ %r102 + 0 ], %r103;
	// end inline asm
	add.s32 	%r104, %r98, 96;
	mov.b32 	%r105, %f76;
	// begin inline asm
	@%p61 st.shared.b32 [ %r104 + 0 ], %r105;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p65, %r189, 256;
	add.s32 	%r107, %r255, %r191;
	// begin inline asm
	@%p65 ld.shared.b32 %r106, [ %r107 + 0 ];
	// end inline asm
	mov.b32 	%f77, %r106;
	shfl.sync.bfly.b32	%r256, %r106, 4, 31, -1;
	mov.b32 	%f78, %r256;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f79, %f77, %f78;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r257, %f79;
	shfl.sync.bfly.b32	%r258, %r257, 2, 31, -1;
	mov.b32 	%f80, %r258;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f81, %f79, %f80;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r259, %f81;
	shfl.sync.bfly.b32	%r260, %r259, 1, 31, -1;
	mov.b32 	%f82, %r260;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f83, %f81, %f82;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r261, %r189, 7;
	setp.eq.s32 	%p102, %r261, 0;
	and.pred  	%p66, %p65, %p102;
	mov.b32 	%r109, %f83;
	// begin inline asm
	@%p66 st.shared.b32 [ %r107 + 0 ], %r109;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r262, %r255, %r253;
	ld.shared.u32 	%r111, [%r262];
	ld.shared.u32 	%r112, [%r262+32];
	ld.shared.u32 	%r113, [%r262+64];
	ld.shared.u32 	%r114, [%r262+96];
$L__tmp2:
	.loc	1 42 27                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:42:27
	bar.sync 	0;
	mad.lo.s32 	%r127, %r192, -28, %r262;
	mov.pred 	%p67, -1;
	// begin inline asm
	@%p67 st.shared.v4.b32 [ %r127 + 0 ], { %r111, %r112, %r113, %r114 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r263, %r193, 2;
	add.s32 	%r264, %r255, %r263;
	ld.shared.u32 	%r183, [%r264];
	.loc	1 43 18                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:43:18
	mul.f32 	%f84, %f13, %f21;
	mul.f32 	%f85, %f14, %f22;
	mul.f32 	%f86, %f15, %f23;
	mul.f32 	%f87, %f16, %f24;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f88, %f9, %f17, %f84;
	selp.f32 	%f89, %f88, 0f00000000, %p1;
	fma.rn.f32 	%f90, %f10, %f18, %f85;
	selp.f32 	%f91, %f90, 0f00000000, %p1;
	fma.rn.f32 	%f92, %f11, %f19, %f86;
	selp.f32 	%f93, %f92, 0f00000000, %p1;
	fma.rn.f32 	%f94, %f12, %f20, %f87;
	selp.f32 	%f95, %f94, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r265, %f89;
	shfl.sync.bfly.b32	%r266, %r265, 16, 31, -1;
	mov.b32 	%f96, %r266;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f97, %f89, %f96;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r267, %f97;
	shfl.sync.bfly.b32	%r268, %r267, 8, 31, -1;
	mov.b32 	%f98, %r268;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f99, %f97, %f98;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r269, %f91;
	shfl.sync.bfly.b32	%r270, %r269, 16, 31, -1;
	mov.b32 	%f100, %r270;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f101, %f91, %f100;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r271, %f101;
	shfl.sync.bfly.b32	%r272, %r271, 8, 31, -1;
	mov.b32 	%f102, %r272;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f103, %f101, %f102;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r273, %f93;
	shfl.sync.bfly.b32	%r274, %r273, 16, 31, -1;
	mov.b32 	%f104, %r274;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f105, %f93, %f104;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r275, %f105;
	shfl.sync.bfly.b32	%r276, %r275, 8, 31, -1;
	mov.b32 	%f106, %r276;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f107, %f105, %f106;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r277, %f95;
	shfl.sync.bfly.b32	%r278, %r277, 16, 31, -1;
	mov.b32 	%f108, %r278;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f109, %f95, %f108;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r279, %f109;
	shfl.sync.bfly.b32	%r280, %r279, 8, 31, -1;
	mov.b32 	%f110, %r280;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f111, %f109, %f110;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r116, %f99;
	// begin inline asm
	@%p61 st.shared.b32 [ %r98 + 0 ], %r116;
	// end inline asm
	mov.b32 	%r118, %f103;
	// begin inline asm
	@%p61 st.shared.b32 [ %r100 + 0 ], %r118;
	// end inline asm
	mov.b32 	%r120, %f107;
	// begin inline asm
	@%p61 st.shared.b32 [ %r102 + 0 ], %r120;
	// end inline asm
	mov.b32 	%r122, %f111;
	// begin inline asm
	@%p61 st.shared.b32 [ %r104 + 0 ], %r122;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p65 ld.shared.b32 %r123, [ %r107 + 0 ];
	// end inline asm
	mov.b32 	%f112, %r123;
	shfl.sync.bfly.b32	%r281, %r123, 4, 31, -1;
	mov.b32 	%f113, %r281;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f114, %f112, %f113;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r282, %f114;
	shfl.sync.bfly.b32	%r283, %r282, 2, 31, -1;
	mov.b32 	%f115, %r283;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f116, %f114, %f115;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r284, %f116;
	shfl.sync.bfly.b32	%r285, %r284, 1, 31, -1;
	mov.b32 	%f117, %r285;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f118, %f116, %f117;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f118;
	// begin inline asm
	@%p66 st.shared.b32 [ %r107 + 0 ], %r126;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r128, [%r262];
	ld.shared.u32 	%r129, [%r262+32];
	ld.shared.u32 	%r130, [%r262+64];
	ld.shared.u32 	%r131, [%r262+96];
$L__tmp4:
	.loc	1 46 29                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:46:29
	bar.sync 	0;
	// begin inline asm
	@%p67 st.shared.v4.b32 [ %r127 + 0 ], { %r128, %r129, %r130, %r131 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r184, [%r264];
	.loc	1 47 20                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:47:20
	mul.f32 	%f119, %f13, %f29;
	mul.f32 	%f120, %f14, %f30;
	mul.f32 	%f121, %f15, %f31;
	mul.f32 	%f122, %f16, %f32;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f123, %f9, %f25, %f119;
	selp.f32 	%f124, %f123, 0f00000000, %p1;
	fma.rn.f32 	%f125, %f10, %f26, %f120;
	selp.f32 	%f126, %f125, 0f00000000, %p1;
	fma.rn.f32 	%f127, %f11, %f27, %f121;
	selp.f32 	%f128, %f127, 0f00000000, %p1;
	fma.rn.f32 	%f129, %f12, %f28, %f122;
	selp.f32 	%f130, %f129, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r286, %f124;
	shfl.sync.bfly.b32	%r287, %r286, 16, 31, -1;
	mov.b32 	%f131, %r287;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f132, %f124, %f131;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r288, %f132;
	shfl.sync.bfly.b32	%r289, %r288, 8, 31, -1;
	mov.b32 	%f133, %r289;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r290, %f126;
	shfl.sync.bfly.b32	%r291, %r290, 16, 31, -1;
	mov.b32 	%f135, %r291;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f136, %f126, %f135;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r292, %f136;
	shfl.sync.bfly.b32	%r293, %r292, 8, 31, -1;
	mov.b32 	%f137, %r293;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f138, %f136, %f137;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r294, %f128;
	shfl.sync.bfly.b32	%r295, %r294, 16, 31, -1;
	mov.b32 	%f139, %r295;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f140, %f128, %f139;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r296, %f140;
	shfl.sync.bfly.b32	%r297, %r296, 8, 31, -1;
	mov.b32 	%f141, %r297;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f142, %f140, %f141;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r298, %f130;
	shfl.sync.bfly.b32	%r299, %r298, 16, 31, -1;
	mov.b32 	%f143, %r299;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f144, %f130, %f143;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r300, %f144;
	shfl.sync.bfly.b32	%r301, %r300, 8, 31, -1;
	mov.b32 	%f145, %r301;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f146, %f144, %f145;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r133, %f134;
	// begin inline asm
	@%p61 st.shared.b32 [ %r98 + 0 ], %r133;
	// end inline asm
	mov.b32 	%r135, %f138;
	// begin inline asm
	@%p61 st.shared.b32 [ %r100 + 0 ], %r135;
	// end inline asm
	mov.b32 	%r137, %f142;
	// begin inline asm
	@%p61 st.shared.b32 [ %r102 + 0 ], %r137;
	// end inline asm
	mov.b32 	%r139, %f146;
	// begin inline asm
	@%p61 st.shared.b32 [ %r104 + 0 ], %r139;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p65 ld.shared.b32 %r140, [ %r107 + 0 ];
	// end inline asm
	mov.b32 	%f147, %r140;
	shfl.sync.bfly.b32	%r302, %r140, 4, 31, -1;
	mov.b32 	%f148, %r302;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f149, %f147, %f148;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r303, %f149;
	shfl.sync.bfly.b32	%r304, %r303, 2, 31, -1;
	mov.b32 	%f150, %r304;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f151, %f149, %f150;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r305, %f151;
	shfl.sync.bfly.b32	%r306, %r305, 1, 31, -1;
	mov.b32 	%f152, %r306;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f153, %f151, %f152;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r143, %f153;
	// begin inline asm
	@%p66 st.shared.b32 [ %r107 + 0 ], %r143;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r145, [%r262];
	ld.shared.u32 	%r146, [%r262+32];
	ld.shared.u32 	%r147, [%r262+64];
	ld.shared.u32 	%r148, [%r262+96];
$L__tmp6:
	.loc	1 50 29                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:50:29
	bar.sync 	0;
	// begin inline asm
	@%p67 st.shared.v4.b32 [ %r127 + 0 ], { %r145, %r146, %r147, %r148 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r185, [%r264];
	.loc	1 51 20                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:51:20
	mul.f32 	%f154, %f13, %f37;
	mul.f32 	%f155, %f14, %f38;
	mul.f32 	%f156, %f15, %f39;
	mul.f32 	%f157, %f16, %f40;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f158, %f9, %f33, %f154;
	selp.f32 	%f159, %f158, 0f00000000, %p1;
	fma.rn.f32 	%f160, %f10, %f34, %f155;
	selp.f32 	%f161, %f160, 0f00000000, %p1;
	fma.rn.f32 	%f162, %f11, %f35, %f156;
	selp.f32 	%f163, %f162, 0f00000000, %p1;
	fma.rn.f32 	%f164, %f12, %f36, %f157;
	selp.f32 	%f165, %f164, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r307, %f159;
	shfl.sync.bfly.b32	%r308, %r307, 16, 31, -1;
	mov.b32 	%f166, %r308;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f167, %f159, %f166;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r309, %f167;
	shfl.sync.bfly.b32	%r310, %r309, 8, 31, -1;
	mov.b32 	%f168, %r310;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f169, %f167, %f168;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r311, %f161;
	shfl.sync.bfly.b32	%r312, %r311, 16, 31, -1;
	mov.b32 	%f170, %r312;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f171, %f161, %f170;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r313, %f171;
	shfl.sync.bfly.b32	%r314, %r313, 8, 31, -1;
	mov.b32 	%f172, %r314;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f173, %f171, %f172;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r315, %f163;
	shfl.sync.bfly.b32	%r316, %r315, 16, 31, -1;
	mov.b32 	%f174, %r316;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f175, %f163, %f174;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r317, %f175;
	shfl.sync.bfly.b32	%r318, %r317, 8, 31, -1;
	mov.b32 	%f176, %r318;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f177, %f175, %f176;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r319, %f165;
	shfl.sync.bfly.b32	%r320, %r319, 16, 31, -1;
	mov.b32 	%f178, %r320;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f179, %f165, %f178;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r321, %f179;
	shfl.sync.bfly.b32	%r322, %r321, 8, 31, -1;
	mov.b32 	%f180, %r322;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f181, %f179, %f180;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r150, %f169;
	// begin inline asm
	@%p61 st.shared.b32 [ %r98 + 0 ], %r150;
	// end inline asm
	mov.b32 	%r152, %f173;
	// begin inline asm
	@%p61 st.shared.b32 [ %r100 + 0 ], %r152;
	// end inline asm
	mov.b32 	%r154, %f177;
	// begin inline asm
	@%p61 st.shared.b32 [ %r102 + 0 ], %r154;
	// end inline asm
	mov.b32 	%r156, %f181;
	// begin inline asm
	@%p61 st.shared.b32 [ %r104 + 0 ], %r156;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p65 ld.shared.b32 %r157, [ %r107 + 0 ];
	// end inline asm
	mov.b32 	%f182, %r157;
	shfl.sync.bfly.b32	%r323, %r157, 4, 31, -1;
	mov.b32 	%f183, %r323;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f184, %f182, %f183;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r324, %f184;
	shfl.sync.bfly.b32	%r325, %r324, 2, 31, -1;
	mov.b32 	%f185, %r325;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f186, %f184, %f185;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r326, %f186;
	shfl.sync.bfly.b32	%r327, %r326, 1, 31, -1;
	mov.b32 	%f187, %r327;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f188, %f186, %f187;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r160, %f188;
	// begin inline asm
	@%p66 st.shared.b32 [ %r107 + 0 ], %r160;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r162, [%r262];
	ld.shared.u32 	%r163, [%r262+32];
	ld.shared.u32 	%r164, [%r262+64];
	ld.shared.u32 	%r165, [%r262+96];
$L__tmp8:
	.loc	1 54 29                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:54:29
	bar.sync 	0;
	// begin inline asm
	@%p67 st.shared.v4.b32 [ %r127 + 0 ], { %r162, %r163, %r164, %r165 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r186, [%r264];
	.loc	1 55 20                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:55:20
	mul.f32 	%f189, %f13, %f45;
	mul.f32 	%f190, %f14, %f46;
	mul.f32 	%f191, %f15, %f47;
	mul.f32 	%f192, %f16, %f48;
$L__tmp9:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f193, %f9, %f41, %f189;
	selp.f32 	%f194, %f193, 0f00000000, %p1;
	fma.rn.f32 	%f195, %f10, %f42, %f190;
	selp.f32 	%f196, %f195, 0f00000000, %p1;
	fma.rn.f32 	%f197, %f11, %f43, %f191;
	selp.f32 	%f198, %f197, 0f00000000, %p1;
	fma.rn.f32 	%f199, %f12, %f44, %f192;
	selp.f32 	%f200, %f199, 0f00000000, %p1;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r328, %f194;
	shfl.sync.bfly.b32	%r329, %r328, 16, 31, -1;
	mov.b32 	%f201, %r329;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f202, %f194, %f201;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r330, %f202;
	shfl.sync.bfly.b32	%r331, %r330, 8, 31, -1;
	mov.b32 	%f203, %r331;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f204, %f202, %f203;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r332, %f196;
	shfl.sync.bfly.b32	%r333, %r332, 16, 31, -1;
	mov.b32 	%f205, %r333;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f206, %f196, %f205;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r334, %f206;
	shfl.sync.bfly.b32	%r335, %r334, 8, 31, -1;
	mov.b32 	%f207, %r335;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f208, %f206, %f207;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r336, %f198;
	shfl.sync.bfly.b32	%r337, %r336, 16, 31, -1;
	mov.b32 	%f209, %r337;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f210, %f198, %f209;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r338, %f210;
	shfl.sync.bfly.b32	%r339, %r338, 8, 31, -1;
	mov.b32 	%f211, %r339;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f212, %f210, %f211;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r340, %f200;
	shfl.sync.bfly.b32	%r341, %r340, 16, 31, -1;
	mov.b32 	%f213, %r341;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f214, %f200, %f213;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r342, %f214;
	shfl.sync.bfly.b32	%r343, %r342, 8, 31, -1;
	mov.b32 	%f215, %r343;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f216, %f214, %f215;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r167, %f204;
	// begin inline asm
	@%p61 st.shared.b32 [ %r98 + 0 ], %r167;
	// end inline asm
	mov.b32 	%r169, %f208;
	// begin inline asm
	@%p61 st.shared.b32 [ %r100 + 0 ], %r169;
	// end inline asm
	mov.b32 	%r171, %f212;
	// begin inline asm
	@%p61 st.shared.b32 [ %r102 + 0 ], %r171;
	// end inline asm
	mov.b32 	%r173, %f216;
	// begin inline asm
	@%p61 st.shared.b32 [ %r104 + 0 ], %r173;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p65 ld.shared.b32 %r174, [ %r107 + 0 ];
	// end inline asm
	mov.b32 	%f217, %r174;
	shfl.sync.bfly.b32	%r344, %r174, 4, 31, -1;
	mov.b32 	%f218, %r344;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f219, %f217, %f218;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r345, %f219;
	shfl.sync.bfly.b32	%r346, %r345, 2, 31, -1;
	mov.b32 	%f220, %r346;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f221, %f219, %f220;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r347, %f221;
	shfl.sync.bfly.b32	%r348, %r347, 1, 31, -1;
	mov.b32 	%f222, %r348;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f223, %f221, %f222;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r177, %f223;
	// begin inline asm
	@%p66 st.shared.b32 [ %r107 + 0 ], %r177;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r179, [%r262];
	ld.shared.u32 	%r180, [%r262+32];
	ld.shared.u32 	%r181, [%r262+64];
	ld.shared.u32 	%r182, [%r262+96];
$L__tmp10:
	.loc	1 58 29                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:58:29
	bar.sync 	0;
	// begin inline asm
	@%p67 st.shared.v4.b32 [ %r127 + 0 ], { %r179, %r180, %r181, %r182 };
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r187, [%r264];
	.loc	1 59 30                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:59:30
	mad.lo.s32 	%r349, %r207, 80, %r209;
	.loc	1 59 25                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:59:25
	mul.wide.s32 	%rd37, %r349, 4;
	add.s64 	%rd13, %rd20, %rd37;
	.loc	1 59 44                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:59:44
	setp.eq.s32 	%p103, %r251, 0;
	and.pred  	%p96, %p103, %p101;
	// begin inline asm
	@%p96 st.global.b32 [ %rd13 + 0 ], { %r183 };
	// end inline asm
	.loc	1 60 25                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:60:25
	add.s64 	%rd14, %rd21, %rd37;
	.loc	1 60 45                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:60:45
	// begin inline asm
	@%p96 st.global.b32 [ %rd14 + 0 ], { %r184 };
	// end inline asm
	.loc	1 61 25                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:61:25
	add.s64 	%rd15, %rd22, %rd37;
	.loc	1 61 45                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:61:45
	// begin inline asm
	@%p96 st.global.b32 [ %rd15 + 0 ], { %r185 };
	// end inline asm
	.loc	1 62 25                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:62:25
	add.s64 	%rd16, %rd23, %rd37;
	.loc	1 62 45                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:62:45
	// begin inline asm
	@%p96 st.global.b32 [ %rd16 + 0 ], { %r186 };
	// end inline asm
	.loc	1 63 25                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:63:25
	add.s64 	%rd17, %rd24, %rd37;
	.loc	1 63 45                         // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:63:45
	// begin inline asm
	@%p96 st.global.b32 [ %rd17 + 0 ], { %r187 };
	// end inline asm
	.loc	1 63 4                          // cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py:63:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ba/cbayb3surdfdkob3gyq2thbb5blc24goorugo4cvrtl6ozru6rfz.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 271                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x108 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 97
.b8 121
.b8 98
.b8 51
.b8 115
.b8 117
.b8 114
.b8 100
.b8 102
.b8 100
.b8 107
.b8 111
.b8 98
.b8 51
.b8 103
.b8 121
.b8 113
.b8 50
.b8 116
.b8 104
.b8 98
.b8 98
.b8 53
.b8 98
.b8 108
.b8 99
.b8 50
.b8 52
.b8 103
.b8 111
.b8 111
.b8 114
.b8 117
.b8 103
.b8 111
.b8 52
.b8 99
.b8 118
.b8 114
.b8 116
.b8 108
.b8 54
.b8 111
.b8 122
.b8 114
.b8 117
.b8 54
.b8 114
.b8 102
.b8 122
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x21 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 97
.b8 116
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x84:0x8e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x99:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 58                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
