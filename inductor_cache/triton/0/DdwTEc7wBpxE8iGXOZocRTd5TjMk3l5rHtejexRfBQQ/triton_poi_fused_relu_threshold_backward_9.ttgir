#blocked = #triton_gpu.blocked<{sizePerThread = [8], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_relu_threshold_backward_9(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":19:0), %arg2: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1024xf32, #blocked> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<2048> : tensor<1024xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c1024_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked> loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32, #blocked1> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked> loc(#loc5)
    %5 = tt.splat %1 : i32 -> tensor<1024xi32, #blocked1> loc(#loc5)
    %6 = arith.addi %4, %2 : tensor<1024xi32, #blocked> loc(#loc5)
    %7 = arith.addi %5, %3 : tensor<1024xi32, #blocked1> loc(#loc5)
    %8 = arith.remsi %6, %cst_0 : tensor<1024xi32, #blocked> loc(#loc6)
    %9 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc7)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc7)
    %11 = tt.addptr %9, %6 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc7)
    %12 = tt.addptr %10, %7 : tensor<1024x!tt.ptr<f32>, #blocked1>, tensor<1024xi32, #blocked1> loc(#loc7)
    %13 = tt.load %11 : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc8)
    %14 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc9)
    %15 = tt.addptr %14, %8 : tensor<1024x!tt.ptr<f32>, #blocked>, tensor<1024xi32, #blocked> loc(#loc9)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<1024x!tt.ptr<f32>, #blocked> loc(#loc10)
    %17 = arith.addf %13, %16 : tensor<1024xf32, #blocked> loc(#loc11)
    %18 = arith.cmpf ogt, %cst, %17 : tensor<1024xf32, #blocked> loc(#loc20)
    %19 = arith.select %18, %cst, %17 : tensor<1024xi1, #blocked>, tensor<1024xf32, #blocked> loc(#loc21)
    %20 = arith.cmpf ole, %19, %cst : tensor<1024xf32, #blocked> loc(#loc15)
    %21 = triton_gpu.convert_layout %19 : tensor<1024xf32, #blocked> -> tensor<1024xf32, #blocked1> loc(#loc16)
    tt.store %12, %21 : tensor<1024x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %22 = tt.splat %arg2 : !tt.ptr<i1> -> tensor<1024x!tt.ptr<i1>, #blocked> loc(#loc17)
    %23 = tt.addptr %22, %6 : tensor<1024x!tt.ptr<i1>, #blocked>, tensor<1024xi32, #blocked> loc(#loc17)
    %24 = tt.bitcast %23 : tensor<1024x!tt.ptr<i1>, #blocked> -> tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc18)
    %25 = arith.extui %20 : tensor<1024xi1, #blocked> to tensor<1024xi8, #blocked> loc(#loc18)
    tt.store %24, %25 : tensor<1024x!tt.ptr<i8>, #blocked> loc(#loc18)
    tt.return loc(#loc19)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":21:28)
#loc3 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":21:33)
#loc4 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":22:36)
#loc5 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":22:23)
#loc6 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":25:19)
#loc7 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":26:34)
#loc8 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":26:39)
#loc9 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":27:30)
#loc10 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":27:35)
#loc11 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":28:18)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc13 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":30:40)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc15 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":32:19)
#loc16 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":33:39)
#loc17 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":34:25)
#loc18 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":34:36)
#loc19 = loc("inductor_cache/vm/cvmw6p3geg2oxjsau7wwgz57yofzm6coaxlpptczspsipoca3iit.py":34:4)
#loc20 = loc(callsite(#loc12 at #loc13))
#loc21 = loc(callsite(#loc14 at #loc13))
