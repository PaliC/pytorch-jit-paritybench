//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_repeat_6 // -- Begin function triton_poi_fused_repeat_6
                                        // @triton_poi_fused_repeat_6
.visible .entry triton_poi_fused_repeat_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_repeat_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_repeat_6_param_1,
	.param .u32 triton_poi_fused_repeat_6_param_2
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<15>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<9>;
	.loc	1 19 0                          // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_poi_fused_repeat_6_param_0];
	ld.param.u64 	%rd5, [triton_poi_fused_repeat_6_param_1];
$L__tmp0:
	.loc	1 21 28                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:21:33
	shl.b32 	%r6, %r1, 8;
	.loc	1 22 36                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:22:36
	mov.u32 	%r7, %tid.x;
	shl.b32 	%r8, %r7, 1;
	and.b32  	%r9, %r8, 254;
	.loc	1 22 23                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:22:23
	or.b32  	%r10, %r6, %r9;
	or.b32  	%r11, %r10, 1;
	.loc	1 23 21                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:23:21
	setp.lt.s32 	%p1, %r10, 512;
	.loc	1 25 19                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:25:19
	shr.s32 	%r13, %r10, 31;
	shr.u32 	%r14, %r13, 25;
	add.s32 	%r15, %r10, %r14;
	.loc	1 24 19                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:24:19
	and.b32  	%r16, %r15, 128;
	sub.s32 	%r17, %r10, %r16;
	bfe.s32 	%r18, %r1, 23, 1;
	shr.u32 	%r19, %r18, 25;
	add.s32 	%r20, %r11, %r19;
	and.b32  	%r21, %r20, 128;
	sub.s32 	%r22, %r11, %r21;
	.loc	1 27 34                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:27:34
	shl.b32 	%r23, %r15, 2;
	and.b32  	%r24, %r23, -512;
	.loc	1 27 46                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:27:46
	cvt.u16.u32 	%rs1, %r17;
	cvt.s8.s32 	%rs2, %r17;
	shr.u16 	%rs3, %rs2, 10;
	and.b16  	%rs4, %rs3, 31;
	add.s16 	%rs5, %rs1, %rs4;
	and.b16  	%rs6, %rs5, 224;
	sub.s16 	%rs7, %rs1, %rs6;
	cvt.u32.u16 	%r25, %rs7;
	cvt.s32.s8 	%r26, %r25;
	cvt.u16.u32 	%rs8, %r22;
	cvt.s8.s32 	%rs9, %r22;
	shr.u16 	%rs10, %rs9, 10;
	and.b16  	%rs11, %rs10, 31;
	add.s16 	%rs12, %rs8, %rs11;
	and.b16  	%rs13, %rs12, 224;
	sub.s16 	%rs14, %rs8, %rs13;
	cvt.u32.u16 	%r27, %rs14;
	cvt.s32.s8 	%r28, %r27;
	.loc	1 27 41                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:27:41
	add.s32 	%r29, %r24, %r26;
	add.s32 	%r30, %r24, %r28;
	.loc	1 27 30                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:27:30
	mul.wide.s32 	%rd6, %r29, 4;
	add.s64 	%rd1, %rd4, %rd6;
	mul.wide.s32 	%rd7, %r30, 4;
	add.s64 	%rd2, %rd4, %rd7;
	.loc	1 27 53                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:27:53
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 28 25                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:28:25
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd3, %rd5, %rd8;
	.loc	1 28 36                         // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:28:36
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd3 + 0 ], { %r4, %r5 };
	// end inline asm
	.loc	1 28 4                          // cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py:28:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/vi/cvinlu2vg23rtf5apuuf34b4kstkaukqhoktdsusk6njjykl3z6p.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 118
.b8 105
.b8 110
.b8 108
.b8 117
.b8 50
.b8 118
.b8 103
.b8 50
.b8 51
.b8 114
.b8 116
.b8 102
.b8 53
.b8 97
.b8 112
.b8 117
.b8 117
.b8 102
.b8 51
.b8 52
.b8 98
.b8 52
.b8 107
.b8 115
.b8 116
.b8 107
.b8 97
.b8 117
.b8 107
.b8 113
.b8 104
.b8 111
.b8 107
.b8 116
.b8 100
.b8 115
.b8 117
.b8 115
.b8 107
.b8 54
.b8 110
.b8 106
.b8 106
.b8 121
.b8 107
.b8 108
.b8 51
.b8 122
.b8 54
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 118
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
