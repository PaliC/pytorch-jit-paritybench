//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__to_copy_nll_loss2d_forward_1 // -- Begin function triton_per_fused__to_copy_nll_loss2d_forward_1
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 113, 102, 47, 99, 113, 102, 113, 109, 110, 103, 110, 101, 116, 119, 52, 50, 112, 53, 115, 106, 52, 111, 121, 117, 100, 102, 102, 120, 50, 98, 116, 106, 99, 118, 119, 105, 112, 106, 105, 114, 109, 98, 114, 54, 102, 121, 118, 109, 101, 105, 107, 111, 117, 109, 113, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 57, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__to_copy_nll_loss2d_forward_1
.visible .entry triton_per_fused__to_copy_nll_loss2d_forward_1(
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_nll_loss2d_forward_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_nll_loss2d_forward_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__to_copy_nll_loss2d_forward_1_param_2,
	.param .u32 triton_per_fused__to_copy_nll_loss2d_forward_1_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<78>;
	.reg .f32 	%f<69>;
	.reg .b64 	%rd<62>;
	.loc	1 19 0                          // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_per_fused__to_copy_nll_loss2d_forward_1_param_2];
$L__tmp0:
	.loc	1 26 34                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd10, [triton_per_fused__to_copy_nll_loss2d_forward_1_param_1];
	.loc	1 29 19                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:29:19
	and.b32  	%r2, %r1, 15;
	.loc	1 31 38                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:31:38
	shl.b32 	%r14, %r1, 2;
	and.b32  	%r3, %r14, 192;
	.loc	1 31 35                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:31:35
	or.b32  	%r15, %r3, %r2;
	.loc	1 31 30                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:31:30
	mul.wide.u32 	%rd11, %r15, 4;
	add.s64 	%rd5, %rd10, %rd11;
	mov.pred 	%p5, -1;
	.loc	1 31 43                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:31:43
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p5 ld.global.b32 { %r9 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r9;
	.loc	1 32 31                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:32:31
	add.s64 	%rd6, %rd4, %rd11;
	.loc	1 32 44                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:32:44
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p5 ld.global.b32 { %r10 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 33 31                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:33:31
	add.s64 	%rd7, %rd6, 64;
	.loc	1 33 49                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:33:49
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p5 ld.global.b32 { %r11 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:34:31
	add.s64 	%rd8, %rd6, 128;
	.loc	1 34 49                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:34:49
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p5 ld.global.b32 { %r12 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 35 31                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:35:31
	add.s64 	%rd9, %rd6, 192;
	.loc	1 35 49                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:35:49
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p5 ld.global.b32 { %r13 }, [ %rd9 + 0 ];
	// end inline asm
	.loc	1 36 19                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:36:19
	cvt.rzi.s64.f32 	%rd1, %f5;
	.loc	1 38 19                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:38:19
	setp.ne.s64 	%p6, %rd1, 255;
	.loc	1 40 32                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:40:32
	selp.b64 	%rd12, %rd1, 0, %p6;
	.loc	1 44 32                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:44:32
	shr.u64 	%rd13, %rd12, 61;
	and.b64  	%rd14, %rd13, 4;
	add.s64 	%rd2, %rd14, %rd12;
	.loc	1 45 36                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:45:36
	setp.lt.u64 	%p7, %rd2, 4;
	.loc	1 45 47                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:45:47
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 47                          // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:0:47
	ld.param.u64 	%rd25, [triton_per_fused__to_copy_nll_loss2d_forward_1_param_0];
	.loc	1 35 49                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:35:49
	mov.b32 	%f14, %r13;
	.loc	1 34 49                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:34:49
	mov.b32 	%f15, %r12;
	.loc	1 33 49                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:33:49
	mov.b32 	%f16, %r11;
	.loc	1 32 44                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:32:44
	mov.b32 	%f17, %r10;
	.loc	1 45 47                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:45:47
	bar.sync 	0;
	.loc	1 46 39                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:46:39
	shl.b64 	%rd16, %rd2, 4;
	.loc	1 46 36                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:46:36
	cvt.u64.u32 	%rd17, %r2;
	or.b64  	%rd18, %rd16, %rd17;
	.loc	1 46 46                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:46:46
	cvt.u64.u32 	%rd19, %r3;
	or.b64  	%rd20, %rd18, %rd19;
	.loc	1 46 31                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:46:31
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd15, %rd4, %rd21;
	.loc	1 46 54                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:46:54
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p5 ld.global.b32 { %r16 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 47 24                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:47:24
	mul.f32 	%f7, %f17, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f6, %f7;
	// end inline asm
	.loc	1 48 24                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:48:24
	mul.f32 	%f9, %f16, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f8, %f9;
	// end inline asm
	.loc	1 49 20                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:49:20
	add.f32 	%f18, %f6, %f8;
	.loc	1 50 24                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:50:24
	mul.f32 	%f11, %f15, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f10, %f11;
	// end inline asm
	.loc	1 51 20                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:51:20
	add.f32 	%f19, %f18, %f10;
	.loc	1 52 24                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:52:24
	mul.f32 	%f13, %f14, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f12, %f13;
	// end inline asm
	.loc	1 53 20                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:53:20
	add.f32 	%f20, %f19, %f12;
	.loc	1 54 24                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:54:24
	setp.lt.f32 	%p9, %f20, 0f00800000;
	mul.f32 	%f21, %f20, 0f4B000000;
	selp.f32 	%f1, %f21, %f20, %p9;
	selp.f32 	%f22, 0fC1B80000, 0f00000000, %p9;
	mov.b32 	%r17, %f1;
	add.s32 	%r18, %r17, -1059760811;
	and.b32  	%r19, %r18, -8388608;
	sub.s32 	%r20, %r17, %r19;
	mov.b32 	%f23, %r20;
	cvt.rn.f32.s32 	%f24, %r19;
	mov.f32 	%f25, 0f34000000;
	fma.rn.ftz.f32 	%f26, %f24, %f25, %f22;
	add.f32 	%f27, %f23, 0fBF800000;
	mov.f32 	%f28, 0f3E1039F6;
	mov.f32 	%f29, 0fBE055027;
	fma.rn.ftz.f32 	%f30, %f29, %f27, %f28;
	mov.f32 	%f31, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f32, %f30, %f27, %f31;
	mov.f32 	%f33, 0f3E0F2955;
	fma.rn.ftz.f32 	%f34, %f32, %f27, %f33;
	mov.f32 	%f35, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f36, %f34, %f27, %f35;
	mov.f32 	%f37, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f38, %f36, %f27, %f37;
	mov.f32 	%f39, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f40, %f38, %f27, %f39;
	mov.f32 	%f41, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f42, %f40, %f27, %f41;
	mov.f32 	%f43, 0fBF000000;
	fma.rn.ftz.f32 	%f44, %f42, %f27, %f43;
	mul.f32 	%f45, %f27, %f44;
	fma.rn.ftz.f32 	%f46, %f45, %f27, %f27;
	mov.f32 	%f47, 0f3F317218;
	fma.rn.ftz.f32 	%f68, %f26, %f47, %f46;
	setp.lt.u32 	%p10, %r17, 2139095040;
	@%p10 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:0:24
	mov.f32 	%f48, 0f7F800000;
	fma.rn.ftz.f32 	%f68, %f1, %f48, %f48;
$L__BB0_4:                              // %__nv_logf.exit
	.loc	1 46 54                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:46:54
	mov.b32 	%f49, %r16;
	.loc	1 26 34                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:26:34
	and.b32  	%r34, %r1, 31;
	.loc	1 54 24                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:54:24
	setp.eq.f32 	%p19, %f1, 0f00000000;
	selp.f32 	%f50, 0fFF800000, %f68, %p19;
	.loc	1 56 13                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:56:13
	sub.f32 	%f51, %f50, %f49;
	add.f32 	%f52, %f51, 0f00000000;
	.loc	1 58 34                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:58:34
	selp.f32 	%f53, %f52, 0f00000000, %p6;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r35, %f53;
	shfl.sync.bfly.b32	%r36, %r35, 16, 31, -1;
	mov.b32 	%f54, %r36;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r37, %f55;
	shfl.sync.bfly.b32	%r38, %r37, 8, 31, -1;
	mov.b32 	%f56, %r38;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r39, %f57;
	shfl.sync.bfly.b32	%r40, %r39, 4, 31, -1;
	mov.b32 	%f58, %r40;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r41, %f59;
	shfl.sync.bfly.b32	%r42, %r41, 2, 31, -1;
	mov.b32 	%f60, %r42;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r43, %f61;
	shfl.sync.bfly.b32	%r44, %r43, 1, 31, -1;
	mov.b32 	%f62, %r44;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p11, %r34, 0;
	bfe.u32 	%r45, %r1, 5, 1;
	shl.b32 	%r46, %r45, 2;
	mov.u32 	%r47, global_smem;
	add.s32 	%r21, %r47, %r46;
	mov.b32 	%r22, %f63;
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p12, %r1, 2;
	add.s32 	%r24, %r47, %r14;
	// begin inline asm
	@%p12 ld.shared.b32 %r23, [ %r24 + 0 ];
	// end inline asm
	mov.b32 	%f64, %r23;
	shfl.sync.bfly.b32	%r49, %r23, 1, 31, -1;
	mov.b32 	%f65, %r49;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r50, %r1, 1;
	setp.eq.b32 	%p20, %r50, 1;
	not.pred 	%p21, %p20;
	and.pred  	%p13, %p12, %p21;
	mov.b32 	%r26, %f66;
	// begin inline asm
	@%p13 st.shared.b32 [ %r24 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 61 20                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:61:20
	selp.u64 	%rd26, 1, 0, %p6;
	.loc	1 65 20                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:65:20
	ld.shared.u32 	%r31, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	selp.u32 	%r51, 1, 0, %p6;
	shfl.sync.bfly.b32	%r52, %r51, 16, 31, -1;
	mov.b32 	%r53, 0;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	cvt.u64.u32 	%rd27, %r52;
	cvt.u64.u32 	%rd28, %r54;
	shl.b64 	%rd29, %rd28, 32;
	or.b64  	%rd30, %rd27, %rd29;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd31, %rd30, %rd26;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r55}, %rd31; }
	cvt.u32.u64 	%r56, %rd31;
	shfl.sync.bfly.b32	%r57, %r56, 8, 31, -1;
	shfl.sync.bfly.b32	%r58, %r55, 8, 31, -1;
	cvt.u64.u32 	%rd32, %r57;
	cvt.u64.u32 	%rd33, %r58;
	shl.b64 	%rd34, %rd33, 32;
	or.b64  	%rd35, %rd32, %rd34;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd36, %rd31, %rd35;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r59}, %rd36; }
	cvt.u32.u64 	%r60, %rd36;
	shfl.sync.bfly.b32	%r61, %r60, 4, 31, -1;
	shfl.sync.bfly.b32	%r62, %r59, 4, 31, -1;
	cvt.u64.u32 	%rd37, %r61;
	cvt.u64.u32 	%rd38, %r62;
	shl.b64 	%rd39, %rd38, 32;
	or.b64  	%rd40, %rd37, %rd39;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd41, %rd36, %rd40;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r63}, %rd41; }
	cvt.u32.u64 	%r64, %rd41;
	shfl.sync.bfly.b32	%r65, %r64, 2, 31, -1;
	shfl.sync.bfly.b32	%r66, %r63, 2, 31, -1;
	cvt.u64.u32 	%rd42, %r65;
	cvt.u64.u32 	%rd43, %r66;
	shl.b64 	%rd44, %rd43, 32;
	or.b64  	%rd45, %rd42, %rd44;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd46, %rd41, %rd45;
	.loc	2 267 36                        // standard.py:267:36
	{ .reg .b32 tmp; mov.b64 {tmp, %r67}, %rd46; }
	cvt.u32.u64 	%r68, %rd46;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	shfl.sync.bfly.b32	%r70, %r67, 1, 31, -1;
	cvt.u64.u32 	%rd47, %r69;
	cvt.u64.u32 	%rd48, %r70;
	shl.b64 	%rd49, %rd48, 32;
	or.b64  	%rd50, %rd47, %rd49;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd22, %rd46, %rd50;
	.loc	2 267 36                        // standard.py:267:36
	shl.b32 	%r71, %r45, 3;
	add.s32 	%r27, %r47, %r71;
	// begin inline asm
	@%p11 st.shared.b64 [ %r27 + 0 ], %rd22;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r72, %r1, 3;
	add.s32 	%r28, %r47, %r72;
	// begin inline asm
	@%p12 ld.shared.b64 %rd23, [ %r28 + 0 ];
	// end inline asm
	{ .reg .b32 tmp; mov.b64 {tmp, %r73}, %rd23; }
	cvt.u32.u64 	%r74, %rd23;
	shfl.sync.bfly.b32	%r75, %r74, 1, 31, -1;
	shfl.sync.bfly.b32	%r76, %r73, 1, 31, -1;
	cvt.u64.u32 	%rd51, %r75;
	cvt.u64.u32 	%rd52, %r76;
	shl.b64 	%rd53, %rd52, 32;
	or.b64  	%rd54, %rd51, %rd53;
	.loc	2 256 15                        // standard.py:256:15
	add.s64 	%rd24, %rd23, %rd54;
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p13 st.shared.b64 [ %r28 + 0 ], %rd24;
	// end inline asm
	bar.sync 	0;
	ld.shared.u64 	%rd55, [global_smem];
$L__tmp4:
	.loc	1 64 21                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:64:21
	cvt.rn.f32.s64 	%f67, %rd55;
	.loc	1 65 20                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:65:20
	mov.b32 	%r32, %f67;
	// begin inline asm
	div.full.f32 %r33, %r31, %r32;
	// end inline asm
	.loc	1 66 4                          // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:66:4
	bar.sync 	0;
	.loc	1 67 71                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:67:71
	and.b32  	%r77, %r1, 63;
	setp.eq.s32 	%p17, %r77, 0;
	// begin inline asm
	@%p17 st.global.b32 [ %rd25 + 0 ], { %r33 };
	// end inline asm
	.loc	1 67 4                          // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:67:4
	ret;
$L__BB0_1:
	.loc	1 45 47                         // cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py:45:47
	mov.u64 	%rd56, assertMessage_0;
	cvta.global.u64 	%rd57, %rd56;
	mov.u64 	%rd58, assertFile_0;
	cvta.global.u64 	%rd59, %rd58;
	mov.u64 	%rd60, assertFunc_0;
	cvta.global.u64 	%rd61, %rd60;
	{ // callseq 0, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd57;
	.param .b64 param1;
	st.param.b64 	[param1], %rd59;
	.param .b32 param2;
	st.param.b32 	[param2], 45;
	.param .b64 param3;
	st.param.b64 	[param3], %rd61;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 0
	trap;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/qf/cqfqmngnetw42p5sj4oyudffx2btjcvwipjirmbr6fyvmeikoumq.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 215                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 113
.b8 102
.b8 113
.b8 109
.b8 110
.b8 103
.b8 110
.b8 101
.b8 116
.b8 119
.b8 52
.b8 50
.b8 112
.b8 53
.b8 115
.b8 106
.b8 52
.b8 111
.b8 121
.b8 117
.b8 100
.b8 102
.b8 102
.b8 120
.b8 50
.b8 98
.b8 116
.b8 106
.b8 99
.b8 118
.b8 119
.b8 105
.b8 112
.b8 106
.b8 105
.b8 114
.b8 109
.b8 98
.b8 114
.b8 54
.b8 102
.b8 121
.b8 118
.b8 109
.b8 101
.b8 105
.b8 107
.b8 111
.b8 117
.b8 109
.b8 113
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 113
.b8 102
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x31 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 116
.b8 111
.b8 95
.b8 99
.b8 111
.b8 112
.b8 121
.b8 95
.b8 110
.b8 108
.b8 108
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 50
.b8 100
.b8 95
.b8 102
.b8 111
.b8 114
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x94:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 63                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
