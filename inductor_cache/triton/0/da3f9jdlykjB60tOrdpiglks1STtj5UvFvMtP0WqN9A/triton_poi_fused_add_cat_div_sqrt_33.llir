; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused_add_cat_div_sqrt_33(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %9 = shl i32 %8, 8, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 254, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = or disjoint i32 %13, 1, !dbg !13
  %15 = icmp slt i32 %13, 18432, !dbg !14
  %.frozen = freeze i32 %13, !dbg !15
  %16 = sdiv i32 %.frozen, 9, !dbg !15
  %.frozen6 = freeze i32 %14, !dbg !15
  %17 = sdiv i32 %.frozen6, 9, !dbg !15
  %18 = srem i32 %16, 512, !dbg !16
  %19 = srem i32 %17, 512, !dbg !16
  %20 = mul i32 %16, 9, !dbg !17
  %.decomposed = sub i32 %.frozen, %20, !dbg !17
  %21 = mul i32 %17, 9, !dbg !17
  %.decomposed7 = sub i32 %.frozen6, %21, !dbg !17
  %22 = sdiv i32 %13, 4608, !dbg !18
  %23 = mul nsw i32 %22, 9, !dbg !19
  %24 = add nsw i32 %23, %.decomposed, !dbg !20
  %25 = add nsw i32 %23, %.decomposed7, !dbg !20
  %26 = sext i32 %24 to i64, !dbg !21
  %27 = getelementptr float, ptr addrspace(1) %4, i64 %26, !dbg !21
  %28 = sext i32 %25 to i64, !dbg !21
  %29 = getelementptr float, ptr addrspace(1) %4, i64 %28, !dbg !21
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %27, i1 %15) #3, !dbg !22
  %31 = bitcast i32 %30 to float, !dbg !22
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %15) #3, !dbg !22
  %33 = bitcast i32 %32 to float, !dbg !22
  %34 = icmp slt i32 %18, 256, !dbg !23
  %35 = icmp slt i32 %19, 256, !dbg !23
  %36 = shl nsw i32 %.decomposed, 8, !dbg !24
  %37 = shl nsw i32 %.decomposed7, 8, !dbg !24
  %38 = mul nsw i32 %22, 2304, !dbg !25
  %39 = add nsw i32 %36, %38, !dbg !26
  %40 = add nsw i32 %38, %37, !dbg !26
  %41 = add nsw i32 %39, %18, !dbg !27
  %42 = add nsw i32 %40, %19, !dbg !27
  %43 = sext i32 %41 to i64, !dbg !28
  %44 = getelementptr float, ptr addrspace(1) %0, i64 %43, !dbg !28
  %45 = sext i32 %42 to i64, !dbg !28
  %46 = getelementptr float, ptr addrspace(1) %0, i64 %45, !dbg !28
  %47 = and i1 %15, %34, !dbg !29
  %48 = and i1 %35, %15, !dbg !29
  %49 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %44, i1 %47, i32 0, i1 %47) #3, !dbg !30
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %48, i32 0, i1 %48) #3, !dbg !30
  %51 = sext i32 %18 to i64, !dbg !31
  %52 = getelementptr float, ptr addrspace(1) %1, i64 %51, !dbg !31
  %53 = sext i32 %19 to i64, !dbg !31
  %54 = getelementptr float, ptr addrspace(1) %1, i64 %53, !dbg !31
  %55 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %47, i32 0, i1 %47) #3, !dbg !32
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %54, i1 %48, i32 0, i1 %48) #3, !dbg !32
  %57 = icmp sgt i32 %18, 255, !dbg !33
  %58 = icmp sgt i32 %19, 255, !dbg !33
  %59 = add nsw i32 %18, -256, !dbg !34
  %60 = add nsw i32 %19, -256, !dbg !34
  %61 = add nsw i32 %39, %59, !dbg !35
  %62 = add nsw i32 %40, %60, !dbg !35
  %63 = sext i32 %61 to i64, !dbg !36
  %64 = getelementptr float, ptr addrspace(1) %2, i64 %63, !dbg !36
  %65 = sext i32 %62 to i64, !dbg !36
  %66 = getelementptr float, ptr addrspace(1) %2, i64 %65, !dbg !36
  %67 = and i1 %15, %57, !dbg !37
  %68 = and i1 %58, %15, !dbg !37
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %64, i1 %67, i32 0, i1 %67) #3, !dbg !38
  %70 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %68, i32 0, i1 %68) #3, !dbg !38
  %71 = sext i32 %59 to i64, !dbg !39
  %72 = getelementptr float, ptr addrspace(1) %3, i64 %71, !dbg !39
  %73 = sext i32 %60 to i64, !dbg !39
  %74 = getelementptr float, ptr addrspace(1) %3, i64 %73, !dbg !39
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %72, i1 %67, i32 0, i1 %67) #3, !dbg !40
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %68, i32 0, i1 %68) #3, !dbg !40
  %77 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i = icmp eq i32 %77, 0, !dbg !41
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !41
  %.not1.i = icmp eq i32 %78, 0, !dbg !41
  br i1 %.not.i, label %84, label %79, !dbg !41

79:                                               ; preds = %7
  br i1 %.not1.i, label %82, label %80, !dbg !41

80:                                               ; preds = %79
  %81 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %31) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

82:                                               ; preds = %79
  %83 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %31) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

84:                                               ; preds = %7
  br i1 %.not1.i, label %87, label %85, !dbg !41

85:                                               ; preds = %84
  %86 = tail call float @llvm.nvvm.sqrt.rn.f(float %31) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

87:                                               ; preds = %84
  %88 = tail call float @llvm.nvvm.sqrt.approx.f(float %31) #3, !dbg !41
  br label %__nv_sqrtf.exit, !dbg !41

__nv_sqrtf.exit:                                  ; preds = %80, %82, %85, %87
  %.0.i = phi float [ %81, %80 ], [ %83, %82 ], [ %86, %85 ], [ %88, %87 ], !dbg !41
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !41
  %.not.i1 = icmp eq i32 %89, 0, !dbg !41
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !41
  %.not1.i4 = icmp eq i32 %90, 0, !dbg !41
  br i1 %.not.i1, label %96, label %91, !dbg !41

91:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %94, label %92, !dbg !41

92:                                               ; preds = %91
  %93 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %33) #3, !dbg !41
  br label %__nv_sqrtf.exit5, !dbg !41

94:                                               ; preds = %91
  %95 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %33) #3, !dbg !41
  br label %__nv_sqrtf.exit5, !dbg !41

96:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %99, label %97, !dbg !41

97:                                               ; preds = %96
  %98 = tail call float @llvm.nvvm.sqrt.rn.f(float %33) #3, !dbg !41
  br label %__nv_sqrtf.exit5, !dbg !41

99:                                               ; preds = %96
  %100 = tail call float @llvm.nvvm.sqrt.approx.f(float %33) #3, !dbg !41
  br label %__nv_sqrtf.exit5, !dbg !41

__nv_sqrtf.exit5:                                 ; preds = %92, %94, %97, %99
  %.0.i3 = phi float [ %93, %92 ], [ %95, %94 ], [ %98, %97 ], [ %100, %99 ], !dbg !41
  %101 = insertelement <4 x i32> poison, i32 %69, i64 0, !dbg !38
  %102 = insertelement <4 x i32> %101, i32 %49, i64 1, !dbg !38
  %103 = insertelement <4 x i32> %102, i32 %70, i64 2, !dbg !38
  %104 = insertelement <4 x i32> %103, i32 %50, i64 3, !dbg !38
  %105 = bitcast <4 x i32> %104 to <4 x float>, !dbg !38
  %106 = insertelement <4 x i32> poison, i32 %75, i64 0, !dbg !40
  %107 = insertelement <4 x i32> %106, i32 %55, i64 1, !dbg !40
  %108 = insertelement <4 x i32> %107, i32 %76, i64 2, !dbg !40
  %109 = insertelement <4 x i32> %108, i32 %56, i64 3, !dbg !40
  %110 = bitcast <4 x i32> %109 to <4 x float>, !dbg !40
  %111 = fadd <4 x float> %105, %110, !dbg !42
  %112 = fcmp olt <4 x float> %111, zeroinitializer, !dbg !43
  %113 = extractelement <4 x i1> %112, i64 3, !dbg !47
  %114 = extractelement <4 x float> %111, i64 3, !dbg !47
  %115 = select i1 %113, float 0.000000e+00, float %114, !dbg !47
  %116 = extractelement <4 x i1> %112, i64 2, !dbg !49
  %117 = extractelement <4 x float> %111, i64 2, !dbg !49
  %118 = select i1 %116, float 0.000000e+00, float %117, !dbg !49
  %119 = select i1 %35, float %115, float %118, !dbg !50
  %120 = extractelement <4 x i1> %112, i64 1, !dbg !47
  %121 = extractelement <4 x float> %111, i64 1, !dbg !47
  %122 = select i1 %120, float 0.000000e+00, float %121, !dbg !47
  %123 = extractelement <4 x i1> %112, i64 0, !dbg !49
  %124 = extractelement <4 x float> %111, i64 0, !dbg !49
  %125 = select i1 %123, float 0.000000e+00, float %124, !dbg !49
  %126 = select i1 %34, float %122, float %125, !dbg !50
  %127 = fadd float %.0.i, 0x3DDB7CDFE0000000, !dbg !51
  %128 = fadd float %.0.i3, 0x3DDB7CDFE0000000, !dbg !51
  %129 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %126, float %127) #3, !dbg !52
  %130 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %119, float %128) #3, !dbg !52
  %131 = sext i32 %13 to i64, !dbg !53
  %132 = getelementptr float, ptr addrspace(1) %5, i64 %131, !dbg !53
  %133 = bitcast float %129 to i32, !dbg !54
  %134 = bitcast float %130 to i32, !dbg !54
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %133, i32 %134, ptr addrspace(1) %132, i1 %15) #3, !dbg !54
  ret void, !dbg !55
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgrh3vptqqmmqyt7eltolkonbjv3sbqiwzxshrkssbnxss6jcjke.py", directory: "inductor_cache/gr")
!4 = !{ptr @triton_poi_fused_add_cat_div_sqrt_33, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cat_div_sqrt_33, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cat_div_sqrt_33", linkageName: "triton_poi_fused_add_cat_div_sqrt_33", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 26, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 38, scope: !7)
!20 = !DILocation(line: 28, column: 36, scope: !7)
!21 = !DILocation(line: 28, column: 31, scope: !7)
!22 = !DILocation(line: 28, column: 43, scope: !7)
!23 = !DILocation(line: 33, column: 18, scope: !7)
!24 = !DILocation(line: 34, column: 34, scope: !7)
!25 = !DILocation(line: 34, column: 44, scope: !7)
!26 = !DILocation(line: 34, column: 39, scope: !7)
!27 = !DILocation(line: 34, column: 50, scope: !7)
!28 = !DILocation(line: 34, column: 30, scope: !7)
!29 = !DILocation(line: 34, column: 63, scope: !7)
!30 = !DILocation(line: 34, column: 56, scope: !7)
!31 = !DILocation(line: 35, column: 30, scope: !7)
!32 = !DILocation(line: 35, column: 35, scope: !7)
!33 = !DILocation(line: 41, column: 20, scope: !7)
!34 = !DILocation(line: 44, column: 60, scope: !7)
!35 = !DILocation(line: 44, column: 51, scope: !7)
!36 = !DILocation(line: 44, column: 31, scope: !7)
!37 = !DILocation(line: 44, column: 74, scope: !7)
!38 = !DILocation(line: 44, column: 66, scope: !7)
!39 = !DILocation(line: 45, column: 31, scope: !7)
!40 = !DILocation(line: 45, column: 45, scope: !7)
!41 = !DILocation(line: 52, column: 27, scope: !7)
!42 = !DILocation(line: 46, column: 20, scope: !7)
!43 = !DILocation(line: 118, column: 15, scope: !44, inlinedAt: !46)
!44 = distinct !DILexicalBlockFile(scope: !7, file: !45, discriminator: 0)
!45 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!46 = !DILocation(line: 48, column: 42, scope: !7)
!47 = !DILocation(line: 121, column: 29, scope: !44, inlinedAt: !48)
!48 = !DILocation(line: 38, column: 40, scope: !7)
!49 = !DILocation(line: 121, column: 29, scope: !44, inlinedAt: !46)
!50 = !DILocation(line: 0, scope: !7)
!51 = !DILocation(line: 54, column: 20, scope: !7)
!52 = !DILocation(line: 55, column: 20, scope: !7)
!53 = !DILocation(line: 56, column: 25, scope: !7)
!54 = !DILocation(line: 56, column: 37, scope: !7)
!55 = !DILocation(line: 56, column: 4, scope: !7)
