#loc = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":19:0)
module {
  tt.func public @triton_poi_fused_avg_pool2d_max_pool2d_with_indices_41(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":19:0), %arg2: !tt.ptr<i8> {tt.divisibility = 16 : i32} loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<9> : tensor<128xi32> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<128xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_2 = arith.constant dense<8> : tensor<128xi8> loc(#loc1)
    %cst_3 = arith.constant dense<7> : tensor<128xi8> loc(#loc1)
    %cst_4 = arith.constant dense<6> : tensor<128xi8> loc(#loc1)
    %cst_5 = arith.constant dense<5> : tensor<128xi8> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<128xi8> loc(#loc1)
    %cst_7 = arith.constant dense<3> : tensor<128xi8> loc(#loc1)
    %cst_8 = arith.constant dense<2> : tensor<128xi8> loc(#loc1)
    %cst_9 = arith.constant dense<0> : tensor<128xi8> loc(#loc1)
    %cst_10 = arith.constant dense<1> : tensor<128xi8> loc(#loc1)
    %cst_11 = arith.constant dense<880> : tensor<128xi32> loc(#loc1)
    %cst_12 = arith.constant dense<792> : tensor<128xi32> loc(#loc1)
    %cst_13 = arith.constant dense<704> : tensor<128xi32> loc(#loc1)
    %cst_14 = arith.constant dense<-88> : tensor<128xi32> loc(#loc1)
    %cst_15 = arith.constant dense<-704> : tensor<128xi32> loc(#loc1)
    %cst_16 = arith.constant dense<1> : tensor<128xi32> loc(#loc1)
    %cst_17 = arith.constant dense<-792> : tensor<128xi32> loc(#loc1)
    %cst_18 = arith.constant dense<0xFF800000> : tensor<128xf32> loc(#loc1)
    %cst_19 = arith.constant dense<7128> : tensor<128xi32> loc(#loc1)
    %cst_20 = arith.constant dense<1584> : tensor<128xi32> loc(#loc1)
    %cst_21 = arith.constant dense<176> : tensor<128xi32> loc(#loc1)
    %cst_22 = arith.constant dense<-880> : tensor<128xi32> loc(#loc1)
    %cst_23 = arith.constant dense<9> : tensor<128xi64> loc(#loc1)
    %cst_24 = arith.constant dense<0> : tensor<128xi64> loc(#loc1)
    %cst_25 = arith.constant dense<-1> : tensor<128xi32> loc(#loc1)
    %cst_26 = arith.constant dense<2> : tensor<128xi32> loc(#loc1)
    %cst_27 = arith.constant dense<2200> : tensor<128xi32> loc(#loc1)
    %cst_28 = arith.constant dense<88> : tensor<128xi32> loc(#loc1)
    %cst_29 = arith.constant dense<5> : tensor<128xi32> loc(#loc1)
    %cst_30 = arith.constant dense<440> : tensor<128xi32> loc(#loc1)
    %cst_31 = arith.constant dense<8800> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_31 : tensor<128xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_30 : tensor<128xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_29 : tensor<128xi32> loc(#loc8)
    %8 = arith.divsi %4, %cst_28 : tensor<128xi32> loc(#loc9)
    %9 = arith.remsi %8, %cst_29 : tensor<128xi32> loc(#loc10)
    %10 = arith.remsi %4, %cst_28 : tensor<128xi32> loc(#loc11)
    %11 = arith.divsi %4, %cst_27 : tensor<128xi32> loc(#loc12)
    %12 = arith.muli %7, %cst_26 : tensor<128xi32> loc(#loc13)
    %13 = arith.addi %12, %cst_25 : tensor<128xi32> loc(#loc14)
    %14 = arith.extsi %13 : tensor<128xi32> to tensor<128xi64> loc(#loc15)
    %15 = arith.cmpi sge, %14, %cst_24 : tensor<128xi64> loc(#loc15)
    %16 = arith.cmpi slt, %14, %cst_23 : tensor<128xi64> loc(#loc16)
    %17 = arith.andi %15, %16 : tensor<128xi1> loc(#loc17)
    %18 = arith.muli %9, %cst_26 : tensor<128xi32> loc(#loc18)
    %19 = arith.addi %18, %cst_25 : tensor<128xi32> loc(#loc19)
    %20 = arith.extsi %19 : tensor<128xi32> to tensor<128xi64> loc(#loc20)
    %21 = arith.cmpi sge, %20, %cst_24 : tensor<128xi64> loc(#loc20)
    %22 = arith.cmpi slt, %20, %cst_23 : tensor<128xi64> loc(#loc21)
    %23 = arith.andi %21, %22 : tensor<128xi1> loc(#loc22)
    %24 = arith.andi %17, %23 : tensor<128xi1> loc(#loc23)
    %25 = arith.addi %10, %cst_22 : tensor<128xi32> loc(#loc24)
    %26 = arith.muli %9, %cst_21 : tensor<128xi32> loc(#loc25)
    %27 = arith.addi %25, %26 : tensor<128xi32> loc(#loc26)
    %28 = arith.muli %7, %cst_20 : tensor<128xi32> loc(#loc27)
    %29 = arith.addi %27, %28 : tensor<128xi32> loc(#loc28)
    %30 = arith.muli %11, %cst_19 : tensor<128xi32> loc(#loc29)
    %31 = arith.addi %29, %30 : tensor<128xi32> loc(#loc30)
    %32 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc31)
    %33 = tt.addptr %32, %31 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc31)
    %34 = arith.andi %24, %5 : tensor<128xi1> loc(#loc32)
    %35 = tt.load %33, %34, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc33)
    %36 = arith.extsi %18 : tensor<128xi32> to tensor<128xi64> loc(#loc34)
    %37 = arith.cmpi sge, %36, %cst_24 : tensor<128xi64> loc(#loc34)
    %38 = arith.cmpi slt, %36, %cst_23 : tensor<128xi64> loc(#loc35)
    %39 = arith.andi %37, %38 : tensor<128xi1> loc(#loc36)
    %40 = arith.andi %17, %39 : tensor<128xi1> loc(#loc37)
    %41 = arith.addi %10, %cst_17 : tensor<128xi32> loc(#loc38)
    %42 = arith.addi %41, %26 : tensor<128xi32> loc(#loc39)
    %43 = arith.addi %42, %28 : tensor<128xi32> loc(#loc40)
    %44 = arith.addi %43, %30 : tensor<128xi32> loc(#loc41)
    %45 = tt.addptr %32, %44 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc42)
    %46 = arith.andi %40, %5 : tensor<128xi1> loc(#loc43)
    %47 = tt.load %45, %46, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc44)
    %48 = arith.cmpf ogt, %47, %35 : tensor<128xf32> loc(#loc181)
    %49 = arith.cmpf une, %47, %47 : tensor<128xf32> loc(#loc182)
    %50 = arith.ori %48, %49 : tensor<128xi1> loc(#loc183)
    %51 = arith.select %50, %47, %35 : tensor<128xi1>, tensor<128xf32> loc(#loc184)
    %52 = arith.addi %18, %cst_16 : tensor<128xi32> loc(#loc50)
    %53 = arith.extsi %52 : tensor<128xi32> to tensor<128xi64> loc(#loc51)
    %54 = arith.cmpi sge, %53, %cst_24 : tensor<128xi64> loc(#loc51)
    %55 = arith.cmpi slt, %53, %cst_23 : tensor<128xi64> loc(#loc52)
    %56 = arith.andi %54, %55 : tensor<128xi1> loc(#loc53)
    %57 = arith.andi %17, %56 : tensor<128xi1> loc(#loc54)
    %58 = arith.addi %10, %cst_15 : tensor<128xi32> loc(#loc55)
    %59 = arith.addi %58, %26 : tensor<128xi32> loc(#loc56)
    %60 = arith.addi %59, %28 : tensor<128xi32> loc(#loc57)
    %61 = arith.addi %60, %30 : tensor<128xi32> loc(#loc58)
    %62 = tt.addptr %32, %61 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc59)
    %63 = arith.andi %57, %5 : tensor<128xi1> loc(#loc60)
    %64 = tt.load %62, %63, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc61)
    %65 = arith.cmpf ogt, %64, %51 : tensor<128xf32> loc(#loc185)
    %66 = arith.cmpf une, %64, %64 : tensor<128xf32> loc(#loc186)
    %67 = arith.ori %65, %66 : tensor<128xi1> loc(#loc187)
    %68 = arith.select %67, %64, %51 : tensor<128xi1>, tensor<128xf32> loc(#loc188)
    %69 = arith.extsi %12 : tensor<128xi32> to tensor<128xi64> loc(#loc63)
    %70 = arith.cmpi sge, %69, %cst_24 : tensor<128xi64> loc(#loc63)
    %71 = arith.cmpi slt, %69, %cst_23 : tensor<128xi64> loc(#loc64)
    %72 = arith.andi %70, %71 : tensor<128xi1> loc(#loc65)
    %73 = arith.andi %72, %23 : tensor<128xi1> loc(#loc66)
    %74 = arith.addi %10, %cst_14 : tensor<128xi32> loc(#loc67)
    %75 = arith.addi %74, %26 : tensor<128xi32> loc(#loc68)
    %76 = arith.addi %75, %28 : tensor<128xi32> loc(#loc69)
    %77 = arith.addi %76, %30 : tensor<128xi32> loc(#loc70)
    %78 = tt.addptr %32, %77 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc71)
    %79 = arith.andi %73, %5 : tensor<128xi1> loc(#loc72)
    %80 = tt.load %78, %79, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc73)
    %81 = arith.cmpf ogt, %80, %68 : tensor<128xf32> loc(#loc189)
    %82 = arith.cmpf une, %80, %80 : tensor<128xf32> loc(#loc190)
    %83 = arith.ori %81, %82 : tensor<128xi1> loc(#loc191)
    %84 = arith.select %83, %80, %68 : tensor<128xi1>, tensor<128xf32> loc(#loc192)
    %85 = arith.andi %72, %39 : tensor<128xi1> loc(#loc75)
    %86 = arith.addi %10, %26 : tensor<128xi32> loc(#loc76)
    %87 = arith.addi %86, %28 : tensor<128xi32> loc(#loc77)
    %88 = arith.addi %87, %30 : tensor<128xi32> loc(#loc78)
    %89 = tt.addptr %32, %88 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc79)
    %90 = arith.andi %85, %5 : tensor<128xi1> loc(#loc80)
    %91 = tt.load %89, %90, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc81)
    %92 = arith.cmpf ogt, %91, %84 : tensor<128xf32> loc(#loc193)
    %93 = arith.cmpf une, %91, %91 : tensor<128xf32> loc(#loc194)
    %94 = arith.ori %92, %93 : tensor<128xi1> loc(#loc195)
    %95 = arith.select %94, %91, %84 : tensor<128xi1>, tensor<128xf32> loc(#loc196)
    %96 = arith.andi %72, %56 : tensor<128xi1> loc(#loc83)
    %97 = arith.addi %10, %cst_28 : tensor<128xi32> loc(#loc84)
    %98 = arith.addi %97, %26 : tensor<128xi32> loc(#loc85)
    %99 = arith.addi %98, %28 : tensor<128xi32> loc(#loc86)
    %100 = arith.addi %99, %30 : tensor<128xi32> loc(#loc87)
    %101 = tt.addptr %32, %100 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc88)
    %102 = arith.andi %96, %5 : tensor<128xi1> loc(#loc89)
    %103 = tt.load %101, %102, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc90)
    %104 = arith.cmpf ogt, %103, %95 : tensor<128xf32> loc(#loc197)
    %105 = arith.cmpf une, %103, %103 : tensor<128xf32> loc(#loc198)
    %106 = arith.ori %104, %105 : tensor<128xi1> loc(#loc199)
    %107 = arith.select %106, %103, %95 : tensor<128xi1>, tensor<128xf32> loc(#loc200)
    %108 = arith.addi %12, %cst_16 : tensor<128xi32> loc(#loc92)
    %109 = arith.extsi %108 : tensor<128xi32> to tensor<128xi64> loc(#loc93)
    %110 = arith.cmpi sge, %109, %cst_24 : tensor<128xi64> loc(#loc93)
    %111 = arith.cmpi slt, %109, %cst_23 : tensor<128xi64> loc(#loc94)
    %112 = arith.andi %110, %111 : tensor<128xi1> loc(#loc95)
    %113 = arith.andi %112, %23 : tensor<128xi1> loc(#loc96)
    %114 = arith.addi %10, %cst_13 : tensor<128xi32> loc(#loc97)
    %115 = arith.addi %114, %26 : tensor<128xi32> loc(#loc98)
    %116 = arith.addi %115, %28 : tensor<128xi32> loc(#loc99)
    %117 = arith.addi %116, %30 : tensor<128xi32> loc(#loc100)
    %118 = tt.addptr %32, %117 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc101)
    %119 = arith.andi %113, %5 : tensor<128xi1> loc(#loc102)
    %120 = tt.load %118, %119, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc103)
    %121 = arith.cmpf ogt, %120, %107 : tensor<128xf32> loc(#loc201)
    %122 = arith.cmpf une, %120, %120 : tensor<128xf32> loc(#loc202)
    %123 = arith.ori %121, %122 : tensor<128xi1> loc(#loc203)
    %124 = arith.select %123, %120, %107 : tensor<128xi1>, tensor<128xf32> loc(#loc204)
    %125 = arith.andi %112, %39 : tensor<128xi1> loc(#loc105)
    %126 = arith.addi %10, %cst_12 : tensor<128xi32> loc(#loc106)
    %127 = arith.addi %126, %26 : tensor<128xi32> loc(#loc107)
    %128 = arith.addi %127, %28 : tensor<128xi32> loc(#loc108)
    %129 = arith.addi %128, %30 : tensor<128xi32> loc(#loc109)
    %130 = tt.addptr %32, %129 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc110)
    %131 = arith.andi %125, %5 : tensor<128xi1> loc(#loc111)
    %132 = tt.load %130, %131, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc112)
    %133 = arith.cmpf ogt, %132, %124 : tensor<128xf32> loc(#loc205)
    %134 = arith.cmpf une, %132, %132 : tensor<128xf32> loc(#loc206)
    %135 = arith.ori %133, %134 : tensor<128xi1> loc(#loc207)
    %136 = arith.select %135, %132, %124 : tensor<128xi1>, tensor<128xf32> loc(#loc208)
    %137 = arith.andi %112, %56 : tensor<128xi1> loc(#loc114)
    %138 = arith.addi %10, %cst_11 : tensor<128xi32> loc(#loc115)
    %139 = arith.addi %138, %26 : tensor<128xi32> loc(#loc116)
    %140 = arith.addi %139, %28 : tensor<128xi32> loc(#loc117)
    %141 = arith.addi %140, %30 : tensor<128xi32> loc(#loc118)
    %142 = tt.addptr %32, %141 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc119)
    %143 = arith.andi %137, %5 : tensor<128xi1> loc(#loc120)
    %144 = tt.load %142, %143, %cst_18 : tensor<128x!tt.ptr<f32>> loc(#loc121)
    %145 = arith.cmpf ogt, %144, %136 : tensor<128xf32> loc(#loc209)
    %146 = arith.cmpf une, %144, %144 : tensor<128xf32> loc(#loc210)
    %147 = arith.ori %145, %146 : tensor<128xi1> loc(#loc211)
    %148 = arith.select %147, %144, %136 : tensor<128xi1>, tensor<128xf32> loc(#loc212)
    %149 = arith.select %48, %cst_10, %cst_9 : tensor<128xi1>, tensor<128xi8> loc(#loc123)
    %150 = arith.select %65, %cst_8, %149 : tensor<128xi1>, tensor<128xi8> loc(#loc124)
    %151 = arith.select %81, %cst_7, %150 : tensor<128xi1>, tensor<128xi8> loc(#loc125)
    %152 = arith.select %92, %cst_6, %151 : tensor<128xi1>, tensor<128xi8> loc(#loc126)
    %153 = arith.select %104, %cst_5, %152 : tensor<128xi1>, tensor<128xi8> loc(#loc127)
    %154 = arith.select %121, %cst_4, %153 : tensor<128xi1>, tensor<128xi8> loc(#loc128)
    %155 = arith.select %133, %cst_3, %154 : tensor<128xi1>, tensor<128xi8> loc(#loc129)
    %156 = arith.select %145, %cst_2, %155 : tensor<128xi1>, tensor<128xi8> loc(#loc130)
    %157 = tt.load %33, %34, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc131)
    %158 = tt.load %45, %46, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc132)
    %159 = arith.addf %158, %157 : tensor<128xf32> loc(#loc133)
    %160 = tt.load %62, %63, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc134)
    %161 = arith.addf %160, %159 : tensor<128xf32> loc(#loc135)
    %162 = tt.load %78, %79, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc136)
    %163 = arith.addf %162, %161 : tensor<128xf32> loc(#loc137)
    %164 = tt.load %89, %90, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc138)
    %165 = arith.addf %164, %163 : tensor<128xf32> loc(#loc139)
    %166 = tt.load %101, %102, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc140)
    %167 = arith.addf %166, %165 : tensor<128xf32> loc(#loc141)
    %168 = tt.load %118, %119, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc142)
    %169 = arith.addf %168, %167 : tensor<128xf32> loc(#loc143)
    %170 = tt.load %130, %131, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc144)
    %171 = arith.addf %170, %169 : tensor<128xf32> loc(#loc145)
    %172 = tt.load %142, %143, %cst_1 : tensor<128x!tt.ptr<f32>> loc(#loc146)
    %173 = arith.addf %172, %171 : tensor<128xf32> loc(#loc147)
    %174 = arith.cmpi sgt, %19, %cst_0 : tensor<128xi32> loc(#loc148)
    %175 = arith.extui %174 : tensor<128xi1> to tensor<128xi32> loc(#loc149)
    %176 = arith.muli %19, %175 : tensor<128xi32> loc(#loc149)
    %177 = arith.cmpi sgt, %13, %cst_0 : tensor<128xi32> loc(#loc150)
    %178 = arith.extui %177 : tensor<128xi1> to tensor<128xi32> loc(#loc151)
    %179 = arith.muli %13, %178 : tensor<128xi32> loc(#loc151)
    %180 = arith.muli %176, %179 : tensor<128xi32> loc(#loc152)
    %181 = arith.addi %18, %cst_26 : tensor<128xi32> loc(#loc153)
    %182 = arith.cmpi sge, %181, %cst : tensor<128xi32> loc(#loc154)
    %183 = arith.extui %182 : tensor<128xi1> to tensor<128xi32> loc(#loc155)
    %184 = arith.muli %183, %cst : tensor<128xi32> loc(#loc155)
    %185 = arith.cmpi slt, %181, %cst : tensor<128xi32> loc(#loc156)
    %186 = arith.extui %185 : tensor<128xi1> to tensor<128xi32> loc(#loc157)
    %187 = arith.muli %181, %186 : tensor<128xi32> loc(#loc157)
    %188 = arith.addi %184, %187 : tensor<128xi32> loc(#loc158)
    %189 = arith.addi %12, %cst_26 : tensor<128xi32> loc(#loc159)
    %190 = arith.cmpi sge, %189, %cst : tensor<128xi32> loc(#loc160)
    %191 = arith.extui %190 : tensor<128xi1> to tensor<128xi32> loc(#loc161)
    %192 = arith.muli %191, %cst : tensor<128xi32> loc(#loc161)
    %193 = arith.cmpi slt, %189, %cst : tensor<128xi32> loc(#loc162)
    %194 = arith.extui %193 : tensor<128xi1> to tensor<128xi32> loc(#loc163)
    %195 = arith.muli %189, %194 : tensor<128xi32> loc(#loc163)
    %196 = arith.addi %192, %195 : tensor<128xi32> loc(#loc164)
    %197 = arith.muli %188, %196 : tensor<128xi32> loc(#loc165)
    %198 = arith.addi %180, %197 : tensor<128xi32> loc(#loc166)
    %199 = arith.muli %176, %cst_25 : tensor<128xi32> loc(#loc167)
    %200 = arith.muli %199, %196 : tensor<128xi32> loc(#loc168)
    %201 = arith.addi %198, %200 : tensor<128xi32> loc(#loc169)
    %202 = arith.muli %179, %cst_25 : tensor<128xi32> loc(#loc170)
    %203 = arith.muli %202, %188 : tensor<128xi32> loc(#loc171)
    %204 = arith.addi %201, %203 : tensor<128xi32> loc(#loc172)
    %205 = arith.sitofp %204 : tensor<128xi32> to tensor<128xf32> loc(#loc173)
    %206 = arith.divf %173, %205 : tensor<128xf32> loc(#loc173)
    %207 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc174)
    %208 = tt.addptr %207, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc174)
    tt.store %208, %148, %5 : tensor<128x!tt.ptr<f32>> loc(#loc175)
    %209 = tt.splat %arg2 : !tt.ptr<i8> -> tensor<128x!tt.ptr<i8>> loc(#loc176)
    %210 = tt.addptr %209, %4 : tensor<128x!tt.ptr<i8>>, tensor<128xi32> loc(#loc176)
    tt.store %210, %156, %5 : tensor<128x!tt.ptr<i8>> loc(#loc177)
    %211 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc178)
    %212 = tt.addptr %211, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc178)
    tt.store %212, %206, %5 : tensor<128x!tt.ptr<f32>> loc(#loc179)
    tt.return loc(#loc180)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":21:28)
#loc3 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":21:33)
#loc4 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":22:36)
#loc5 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":22:23)
#loc6 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":23:21)
#loc7 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":24:21)
#loc8 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":24:28)
#loc9 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":25:21)
#loc10 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":25:27)
#loc11 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":26:19)
#loc12 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":27:19)
#loc13 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":29:20)
#loc14 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":29:18)
#loc15 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":31:19)
#loc16 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":33:18)
#loc17 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":34:18)
#loc18 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":35:20)
#loc19 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":35:18)
#loc20 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":36:19)
#loc21 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":37:18)
#loc22 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":38:18)
#loc23 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":39:19)
#loc24 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:40)
#loc25 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:49)
#loc26 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:45)
#loc27 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:59)
#loc28 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:54)
#loc29 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:69)
#loc30 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:64)
#loc31 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:31)
#loc32 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:82)
#loc33 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":40:74)
#loc34 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":42:21)
#loc35 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":43:20)
#loc36 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":44:20)
#loc37 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":45:19)
#loc38 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":46:40)
#loc39 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":46:45)
#loc40 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":46:54)
#loc41 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":46:64)
#loc42 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":46:31)
#loc43 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":46:82)
#loc44 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":46:74)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc46 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":47:42)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc50 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":48:16)
#loc51 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":49:21)
#loc52 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":50:20)
#loc53 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":51:20)
#loc54 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":52:19)
#loc55 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":53:40)
#loc56 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":53:45)
#loc57 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":53:54)
#loc58 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":53:64)
#loc59 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":53:31)
#loc60 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":53:82)
#loc61 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":53:74)
#loc62 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":54:42)
#loc63 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":56:21)
#loc64 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":57:20)
#loc65 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":58:20)
#loc66 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":59:20)
#loc67 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":60:39)
#loc68 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":60:44)
#loc69 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":60:53)
#loc70 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":60:63)
#loc71 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":60:31)
#loc72 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":60:81)
#loc73 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":60:73)
#loc74 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":61:42)
#loc75 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":62:20)
#loc76 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":63:36)
#loc77 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":63:45)
#loc78 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":63:55)
#loc79 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":63:31)
#loc80 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":63:73)
#loc81 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":63:65)
#loc82 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":64:42)
#loc83 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":65:20)
#loc84 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":66:36)
#loc85 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":66:41)
#loc86 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":66:50)
#loc87 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":66:60)
#loc88 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":66:31)
#loc89 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":66:78)
#loc90 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":66:70)
#loc91 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":67:42)
#loc92 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":68:16)
#loc93 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":69:21)
#loc94 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":70:20)
#loc95 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":71:20)
#loc96 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":72:20)
#loc97 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":73:37)
#loc98 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":73:42)
#loc99 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":73:51)
#loc100 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":73:61)
#loc101 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":73:31)
#loc102 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":73:79)
#loc103 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":73:71)
#loc104 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":74:42)
#loc105 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":75:20)
#loc106 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":76:37)
#loc107 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":76:42)
#loc108 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":76:51)
#loc109 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":76:61)
#loc110 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":76:31)
#loc111 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":76:79)
#loc112 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":76:71)
#loc113 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":77:42)
#loc114 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":78:20)
#loc115 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":79:37)
#loc116 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":79:42)
#loc117 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":79:51)
#loc118 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":79:61)
#loc119 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":79:31)
#loc120 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":79:79)
#loc121 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":79:71)
#loc122 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":80:42)
#loc123 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":84:35)
#loc124 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":87:35)
#loc125 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":90:35)
#loc126 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":93:35)
#loc127 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":96:35)
#loc128 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":99:35)
#loc129 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":102:35)
#loc130 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":105:35)
#loc131 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":106:74)
#loc132 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":107:74)
#loc133 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":108:20)
#loc134 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":109:74)
#loc135 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":110:20)
#loc136 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":111:73)
#loc137 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":112:20)
#loc138 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":113:65)
#loc139 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":114:20)
#loc140 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":115:70)
#loc141 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":116:20)
#loc142 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":117:71)
#loc143 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":118:20)
#loc144 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":119:71)
#loc145 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":120:20)
#loc146 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":121:71)
#loc147 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":122:20)
#loc148 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:78)
#loc149 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:61)
#loc150 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:149)
#loc151 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:132)
#loc152 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:84)
#loc153 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:176)
#loc154 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:172)
#loc155 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:164)
#loc156 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:213)
#loc157 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:199)
#loc158 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:185)
#loc159 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:238)
#loc160 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:234)
#loc161 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:226)
#loc162 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:275)
#loc163 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:261)
#loc164 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:247)
#loc165 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:219)
#loc166 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:156)
#loc167 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:289)
#loc168 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:360)
#loc169 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:283)
#loc170 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:431)
#loc171 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:502)
#loc172 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":123:425)
#loc173 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":124:20)
#loc174 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":125:25)
#loc175 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":125:37)
#loc176 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":126:25)
#loc177 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":126:37)
#loc178 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":127:25)
#loc179 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":127:37)
#loc180 = loc("inductor_cache/us/cus323fweqcn6otwa7ilgkcafjkg4o6ty7g7ptjjm6qrqh562dyq.py":127:4)
#loc181 = loc(callsite(#loc45 at #loc46))
#loc182 = loc(callsite(#loc47 at #loc46))
#loc183 = loc(callsite(#loc48 at #loc46))
#loc184 = loc(callsite(#loc49 at #loc46))
#loc185 = loc(callsite(#loc45 at #loc62))
#loc186 = loc(callsite(#loc47 at #loc62))
#loc187 = loc(callsite(#loc48 at #loc62))
#loc188 = loc(callsite(#loc49 at #loc62))
#loc189 = loc(callsite(#loc45 at #loc74))
#loc190 = loc(callsite(#loc47 at #loc74))
#loc191 = loc(callsite(#loc48 at #loc74))
#loc192 = loc(callsite(#loc49 at #loc74))
#loc193 = loc(callsite(#loc45 at #loc82))
#loc194 = loc(callsite(#loc47 at #loc82))
#loc195 = loc(callsite(#loc48 at #loc82))
#loc196 = loc(callsite(#loc49 at #loc82))
#loc197 = loc(callsite(#loc45 at #loc91))
#loc198 = loc(callsite(#loc47 at #loc91))
#loc199 = loc(callsite(#loc48 at #loc91))
#loc200 = loc(callsite(#loc49 at #loc91))
#loc201 = loc(callsite(#loc45 at #loc104))
#loc202 = loc(callsite(#loc47 at #loc104))
#loc203 = loc(callsite(#loc48 at #loc104))
#loc204 = loc(callsite(#loc49 at #loc104))
#loc205 = loc(callsite(#loc45 at #loc113))
#loc206 = loc(callsite(#loc47 at #loc113))
#loc207 = loc(callsite(#loc48 at #loc113))
#loc208 = loc(callsite(#loc49 at #loc113))
#loc209 = loc(callsite(#loc45 at #loc122))
#loc210 = loc(callsite(#loc47 at #loc122))
#loc211 = loc(callsite(#loc48 at #loc122))
#loc212 = loc(callsite(#loc49 at #loc122))
