; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %10 = shl i32 %9, 7, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = and i32 %11, 127, !dbg !12
  %13 = or disjoint i32 %10, %12, !dbg !13
  %14 = icmp slt i32 %13, 2304, !dbg !14
  %15 = sdiv i32 %13, 16, !dbg !15
  %.frozen = freeze i32 %13, !dbg !16
  %16 = sdiv i32 %.frozen, 576, !dbg !16
  %17 = mul i32 %16, 576, !dbg !17
  %srem.decomposed = sub i32 %.frozen, %17, !dbg !17
  %18 = shl nsw i32 %16, 8, !dbg !18
  %19 = add nsw i32 %18, %srem.decomposed, !dbg !19
  %20 = sext i32 %19 to i64, !dbg !20
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !20
  %22 = shl nsw i32 %16, 6, !dbg !21
  %23 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !22
  %24 = insertelement <2 x i32> %23, i32 %15, i64 1, !dbg !22
  %25 = srem <2 x i32> %24, <i32 16, i32 36>, !dbg !22
  %26 = extractelement <2 x i32> %25, i64 1, !dbg !23
  %27 = icmp slt i32 %26, 16, !dbg !24
  %28 = and i1 %14, %27, !dbg !25
  %29 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %28, i32 0, i1 %28) #1, !dbg !26
  %30 = bitcast i32 %29 to float, !dbg !26
  %31 = sext i32 %26 to i64, !dbg !27
  %32 = getelementptr float, ptr addrspace(1) %1, i64 %31, !dbg !27
  %33 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %28, i32 0, i1 %28) #1, !dbg !28
  %34 = bitcast i32 %33 to float, !dbg !28
  %35 = fadd float %30, %34, !dbg !29
  %36 = and i32 %26, -4, !dbg !30
  %37 = icmp eq i32 %36, 16, !dbg !30
  %38 = insertelement <2 x i32> <i32 poison, i32 -16>, i32 %22, i64 0, !dbg !31
  %39 = add nsw <2 x i32> %38, %25, !dbg !31
  %40 = extractelement <2 x i32> %39, i64 1, !dbg !32
  %41 = shl nsw i32 %40, 4, !dbg !32
  %42 = extractelement <2 x i32> %39, i64 0, !dbg !33
  %43 = add nsw i32 %42, %41, !dbg !33
  %44 = sext i32 %43 to i64, !dbg !34
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !34
  %46 = and i1 %14, %37, !dbg !35
  %47 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %46, i32 0, i1 %46) #1, !dbg !36
  %48 = bitcast i32 %47 to float, !dbg !36
  %49 = sext i32 %40 to i64, !dbg !37
  %50 = getelementptr float, ptr addrspace(1) %3, i64 %49, !dbg !37
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %46, i32 0, i1 %46) #1, !dbg !38
  %52 = bitcast i32 %51 to float, !dbg !38
  %53 = fadd float %48, %52, !dbg !39
  %54 = icmp sgt i32 %26, 19, !dbg !23
  %55 = add nsw i32 %26, -20, !dbg !40
  %56 = shl nsw i32 %55, 4, !dbg !41
  %57 = extractelement <2 x i32> %25, i64 0, !dbg !42
  %58 = add nsw i32 %18, %57, !dbg !42
  %59 = add nsw i32 %58, %56, !dbg !43
  %60 = sext i32 %59 to i64, !dbg !44
  %61 = getelementptr float, ptr addrspace(1) %4, i64 %60, !dbg !44
  %62 = and i1 %14, %54, !dbg !45
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %61, i1 %62, i32 0, i1 %62) #1, !dbg !46
  %64 = bitcast i32 %63 to float, !dbg !46
  %65 = sext i32 %55 to i64, !dbg !47
  %66 = getelementptr float, ptr addrspace(1) %5, i64 %65, !dbg !47
  %67 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %66, i1 %62, i32 0, i1 %62) #1, !dbg !48
  %68 = bitcast i32 %67 to float, !dbg !48
  %69 = fadd float %64, %68, !dbg !49
  %70 = select i1 %54, float %69, float 0.000000e+00, !dbg !50
  %71 = select i1 %37, float %53, float %70, !dbg !51
  %72 = select i1 %27, float %35, float %71, !dbg !51
  %73 = sext i32 %13 to i64, !dbg !52
  %74 = getelementptr float, ptr addrspace(1) %6, i64 %73, !dbg !52
  %75 = bitcast float %72 to i32, !dbg !53
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %75, ptr addrspace(1) %74, i1 %14) #1, !dbg !53
  ret void, !dbg !54
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cg6f2wywa2at73nk3iqeu2eblndkf32tfj6xjurslx6vzgwhb22w.py", directory: "inductor_cache/g6")
!4 = !{ptr @triton_poi_fused_cat_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_1", linkageName: "triton_poi_fused_cat_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 35, scope: !7)
!18 = !DILocation(line: 33, column: 49, scope: !7)
!19 = !DILocation(line: 33, column: 45, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 42, column: 57, scope: !7)
!22 = !DILocation(line: 25, column: 19, scope: !7)
!23 = !DILocation(line: 47, column: 20, scope: !7)
!24 = !DILocation(line: 32, column: 18, scope: !7)
!25 = !DILocation(line: 33, column: 61, scope: !7)
!26 = !DILocation(line: 33, column: 54, scope: !7)
!27 = !DILocation(line: 34, column: 30, scope: !7)
!28 = !DILocation(line: 34, column: 35, scope: !7)
!29 = !DILocation(line: 35, column: 18, scope: !7)
!30 = !DILocation(line: 41, column: 20, scope: !7)
!31 = !DILocation(line: 42, column: 36, scope: !7)
!32 = !DILocation(line: 42, column: 40, scope: !7)
!33 = !DILocation(line: 42, column: 54, scope: !7)
!34 = !DILocation(line: 42, column: 31, scope: !7)
!35 = !DILocation(line: 42, column: 70, scope: !7)
!36 = !DILocation(line: 42, column: 62, scope: !7)
!37 = !DILocation(line: 43, column: 31, scope: !7)
!38 = !DILocation(line: 43, column: 44, scope: !7)
!39 = !DILocation(line: 44, column: 20, scope: !7)
!40 = !DILocation(line: 50, column: 48, scope: !7)
!41 = !DILocation(line: 50, column: 40, scope: !7)
!42 = !DILocation(line: 50, column: 36, scope: !7)
!43 = !DILocation(line: 50, column: 54, scope: !7)
!44 = !DILocation(line: 50, column: 31, scope: !7)
!45 = !DILocation(line: 50, column: 71, scope: !7)
!46 = !DILocation(line: 50, column: 63, scope: !7)
!47 = !DILocation(line: 51, column: 31, scope: !7)
!48 = !DILocation(line: 51, column: 44, scope: !7)
!49 = !DILocation(line: 52, column: 20, scope: !7)
!50 = !DILocation(line: 54, column: 35, scope: !7)
!51 = !DILocation(line: 0, scope: !7)
!52 = !DILocation(line: 57, column: 25, scope: !7)
!53 = !DILocation(line: 57, column: 37, scope: !7)
!54 = !DILocation(line: 57, column: 4, scope: !7)
