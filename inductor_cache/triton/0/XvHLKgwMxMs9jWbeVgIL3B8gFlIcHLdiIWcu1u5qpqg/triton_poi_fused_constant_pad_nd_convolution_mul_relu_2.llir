; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_constant_pad_nd_convolution_mul_relu_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 2, !dbg !12
  %11 = and i32 %9, 62, !dbg !12
  %12 = or disjoint i32 %7, %11, !dbg !13
  %13 = or disjoint i32 %10, %7, !dbg !13
  %14 = or disjoint i32 %13, 1, !dbg !13
  %15 = icmp slt i32 %12, 64, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %16 = sdiv i32 %.frozen, 4, !dbg !15
  %17 = mul i32 %16, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %17, !dbg !16
  %18 = srem i32 %14, 4, !dbg !16
  %19 = srem i32 %16, 4, !dbg !17
  %20 = add nsw i32 %.decomposed, -1, !dbg !18
  %21 = add nsw i32 %18, -1, !dbg !18
  %22 = icmp eq i32 %20, 1, !dbg !19
  %23 = icmp eq i32 %18, 1, !dbg !19
  %24 = sext i32 %16 to i64, !dbg !20
  %25 = getelementptr float, ptr addrspace(1) %0, i64 %24, !dbg !20
  %26 = and i1 %15, %22, !dbg !21
  %27 = and i1 %15, %23, !dbg !21
  %28 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %26, i32 0, i1 %26) #1, !dbg !22
  %29 = bitcast i32 %28 to float, !dbg !22
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 %27, i32 0, i1 %27) #1, !dbg !22
  %31 = bitcast i32 %30 to float, !dbg !22
  %32 = sext i32 %19 to i64, !dbg !23
  %33 = getelementptr float, ptr addrspace(1) %1, i64 %32, !dbg !23
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %26, i32 0, i1 %26) #1, !dbg !24
  %35 = bitcast i32 %34 to float, !dbg !24
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %33, i1 %27, i32 0, i1 %27) #1, !dbg !24
  %37 = bitcast i32 %36 to float, !dbg !24
  %38 = fadd float %29, %35, !dbg !25
  %39 = fadd float %31, %37, !dbg !25
  %40 = fcmp olt float %38, 0.000000e+00, !dbg !26
  %41 = fcmp olt float %39, 0.000000e+00, !dbg !26
  %42 = select i1 %40, float 0.000000e+00, float %38, !dbg !30
  %43 = select i1 %41, float 0.000000e+00, float %39, !dbg !30
  %44 = shl nsw i32 %16, 1, !dbg !31
  %45 = add nsw i32 %20, %44, !dbg !32
  %46 = add nsw i32 %21, %44, !dbg !32
  %47 = sext i32 %45 to i64, !dbg !33
  %48 = getelementptr float, ptr addrspace(1) %2, i64 %47, !dbg !33
  %49 = sext i32 %46 to i64, !dbg !33
  %50 = getelementptr float, ptr addrspace(1) %2, i64 %49, !dbg !33
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %48, i1 %26, i32 0, i1 %26) #1, !dbg !34
  %52 = bitcast i32 %51 to float, !dbg !34
  %53 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %50, i1 %27, i32 0, i1 %27) #1, !dbg !34
  %54 = bitcast i32 %53 to float, !dbg !34
  %55 = fmul float %42, %52, !dbg !35
  %56 = fmul float %43, %54, !dbg !35
  %57 = sext i32 %12 to i64, !dbg !36
  %58 = getelementptr float, ptr addrspace(1) %3, i64 %57, !dbg !36
  %59 = bitcast float %55 to i32, !dbg !37
  %60 = select i1 %22, i32 %59, i32 0, !dbg !38
  %61 = bitcast float %56 to i32, !dbg !37
  %62 = select i1 %23, i32 %61, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %60, i32 %62, ptr addrspace(1) %58, i1 %15) #1, !dbg !37
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cdxu2f6yedh2j6trbgdfzoeq6vfbpco2vtbppwfsldbd3cdknkr3.py", directory: "inductor_cache/dx")
!4 = !{ptr @triton_poi_fused_constant_pad_nd_convolution_mul_relu_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_constant_pad_nd_convolution_mul_relu_2, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_constant_pad_nd_convolution_mul_relu_2", linkageName: "triton_poi_fused_constant_pad_nd_convolution_mul_relu_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 26, scope: !7)
!18 = !DILocation(line: 28, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 18, scope: !7)
!20 = !DILocation(line: 34, column: 30, scope: !7)
!21 = !DILocation(line: 34, column: 42, scope: !7)
!22 = !DILocation(line: 34, column: 35, scope: !7)
!23 = !DILocation(line: 35, column: 30, scope: !7)
!24 = !DILocation(line: 35, column: 35, scope: !7)
!25 = !DILocation(line: 36, column: 18, scope: !7)
!26 = !DILocation(line: 118, column: 15, scope: !27, inlinedAt: !29)
!27 = distinct !DILexicalBlockFile(scope: !7, file: !28, discriminator: 0)
!28 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!29 = !DILocation(line: 38, column: 41, scope: !7)
!30 = !DILocation(line: 121, column: 29, scope: !27, inlinedAt: !29)
!31 = !DILocation(line: 39, column: 45, scope: !7)
!32 = !DILocation(line: 39, column: 43, scope: !7)
!33 = !DILocation(line: 39, column: 31, scope: !7)
!34 = !DILocation(line: 39, column: 50, scope: !7)
!35 = !DILocation(line: 40, column: 20, scope: !7)
!36 = !DILocation(line: 43, column: 25, scope: !7)
!37 = !DILocation(line: 43, column: 37, scope: !7)
!38 = !DILocation(line: 42, column: 34, scope: !7)
!39 = !DILocation(line: 43, column: 4, scope: !7)
