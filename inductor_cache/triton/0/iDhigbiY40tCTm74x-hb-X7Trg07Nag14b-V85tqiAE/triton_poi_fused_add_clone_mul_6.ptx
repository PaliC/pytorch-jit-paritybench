//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_clone_mul_6 // -- Begin function triton_poi_fused_add_clone_mul_6
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_clone_mul_6
.visible .entry triton_poi_fused_add_clone_mul_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clone_mul_6_param_4,
	.param .u32 triton_poi_fused_add_clone_mul_6_param_5,
	.param .u32 triton_poi_fused_add_clone_mul_6_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<128>;
	.reg .f32 	%f<59>;
	.reg .b64 	%rd<26>;
	.loc	1 19 0                          // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_add_clone_mul_6_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_add_clone_mul_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:22:33
	shl.b32 	%r47, %r1, 6;
	ld.param.u64 	%rd14, [triton_poi_fused_add_clone_mul_6_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused_add_clone_mul_6_param_3];
	.loc	1 23 44                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:23:44
	mov.u32 	%r48, %tid.x;
	shr.u32 	%r49, %r48, 1;
	ld.param.u64 	%rd16, [triton_poi_fused_add_clone_mul_6_param_4];
	bfe.u32 	%r50, %r48, 1, 4;
	and.b32  	%r51, %r49, 16;
	and.b32  	%r52, %r49, 32;
	and.b32  	%r53, %r48, 1;
	shl.b32 	%r54, %r53, 1;
	shl.b32 	%r55, %r48, 1;
	and.b32  	%r56, %r55, 62;
	or.b32  	%r57, %r51, %r50;
	or.b32  	%r58, %r57, %r52;
	.loc	1 23 23                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:23:23
	or.b32  	%r59, %r58, %r47;
	or.b32  	%r60, %r47, %r56;
	.loc	1 24 21                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:24:21
	setp.lt.s32 	%p18, %r59, 64;
	setp.lt.s32 	%p19, %r60, 64;
	.loc	1 25 28                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:25:33
	shl.b32 	%r61, %r2, 2;
	.loc	1 26 44                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:26:44
	bfe.u32 	%r62, %r48, 5, 2;
	.loc	1 26 23                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:26:23
	or.b32  	%r63, %r61, %r54;
	or.b32  	%r64, %r62, %r61;
	.loc	1 27 21                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:27:21
	setp.lt.s32 	%p20, %r63, 4;
	setp.lt.s32 	%p21, %r64, 4;
	.loc	1 30 21                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:30:21
	shr.s32 	%r66, %r60, 31;
	shr.u32 	%r67, %r66, 30;
	add.s32 	%r68, %r60, %r67;
	.loc	1 29 19                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:29:19
	and.b32  	%r69, %r68, -4;
	sub.s32 	%r70, %r60, %r69;
	.loc	1 30 26                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:30:26
	bfe.s32 	%r71, %r1, 25, 1;
	.loc	1 30 21                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:30:21
	shr.u32 	%r72, %r71, 30;
	add.s32 	%r73, %r59, %r72;
	shr.s32 	%r74, %r73, 2;
	.loc	1 30 26                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:30:26
	shr.u32 	%r75, %r74, 30;
	add.s32 	%r76, %r74, %r75;
	and.b32  	%r77, %r76, -4;
	sub.s32 	%r78, %r74, %r77;
	and.b32  	%r79, %r73, 1073741820;
	sub.s32 	%r80, %r59, %r79;
	.loc	1 31 19                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:31:19
	shr.u32 	%r81, %r71, 28;
	add.s32 	%r82, %r59, %r81;
	shr.s32 	%r83, %r82, 4;
	.loc	1 34 37                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:37
	shl.b32 	%r84, %r80, 2;
	.loc	1 34 35                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:35
	add.s32 	%r85, %r78, %r84;
	.loc	1 26 23                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:26:23
	shl.b32 	%r86, %r63, 4;
	.loc	1 34 53                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:53
	shl.b32 	%r87, %r83, 6;
	.loc	1 34 42                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:42
	add.s32 	%r88, %r85, %r87;
	.loc	1 34 50                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:50
	add.s32 	%r89, %r88, %r86;
	add.s32 	%r90, %r89, 16;
	.loc	1 34 30                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:30
	mul.wide.s32 	%rd17, %r89, 4;
	add.s64 	%rd1, %rd12, %rd17;
	mul.wide.s32 	%rd18, %r90, 4;
	add.s64 	%rd2, %rd12, %rd18;
	.loc	1 34 66                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:66
	and.pred  	%p1, %p18, %p20;
	and.pred  	%p9, %p19, %p21;
	.loc	1 34 58                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:34:58
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f13, %r3;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f14, %r4;
	.loc	1 35 40                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:35:40
	mul.lo.s32 	%r91, %r83, 12;
	.loc	1 35 32                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:35:32
	mad.lo.s32 	%r92, %r63, 3, %r91;
	.loc	1 35 37                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:35:37
	add.s32 	%r93, %r92, 3;
	.loc	1 35 30                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:35:30
	mul.wide.s32 	%rd19, %r92, 4;
	add.s64 	%rd3, %rd13, %rd19;
	mul.wide.s32 	%rd20, %r93, 4;
	add.s64 	%rd4, %rd13, %rd20;
	.loc	1 35 45                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:35:45
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f15, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f16, %r6;
	.loc	1 36 41                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:36:41
	add.s32 	%r94, %r92, 4;
	.loc	1 36 30                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:36:30
	add.s64 	%rd5, %rd3, 4;
	mul.wide.s32 	%rd21, %r94, 4;
	add.s64 	%rd6, %rd13, %rd21;
	.loc	1 36 49                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:36:49
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd5 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r7;
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f18, %r8;
	.loc	1 37 41                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:37:41
	add.s32 	%r95, %r92, 2;
	add.s32 	%r96, %r92, 5;
	.loc	1 37 30                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:37:30
	mul.wide.s32 	%rd22, %r95, 4;
	add.s64 	%rd7, %rd13, %rd22;
	mul.wide.s32 	%rd23, %r96, 4;
	add.s64 	%rd8, %rd13, %rd23;
	.loc	1 37 49                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:37:49
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f19, %r9;
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f20, %r10;
	.loc	1 38 38                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:38:38
	shl.b32 	%r97, %r64, 2;
	.loc	1 38 36                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:38:36
	add.s32 	%r98, %r97, %r70;
	.loc	1 38 46                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:38:46
	shl.b32 	%r99, %r68, 2;
	and.b32  	%r100, %r99, -16;
	.loc	1 38 43                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:38:43
	add.s32 	%r101, %r98, %r100;
	.loc	1 38 31                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:38:31
	mul.wide.s32 	%rd24, %r101, 4;
	add.s64 	%rd9, %rd14, %rd24;
	.loc	1 38 51                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:38:51
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p9 ld.global.L1::evict_last.v2.b32 { %r11, %r12 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r11;
	mov.b32 	%f22, %r12;
	.loc	1 39 38                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:39:38
	shl.b32 	%r102, %r59, 2;
	.loc	1 39 36                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:39:36
	add.s32 	%r103, %r63, %r102;
	.loc	1 39 31                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:39:31
	mul.wide.s32 	%rd25, %r103, 4;
	add.s64 	%rd10, %rd15, %rd25;
	.loc	1 39 43                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:39:43
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r13, %r14 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f23, %r13;
	mov.b32 	%f24, %r14;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p22, %f15, %f17;
	setp.gt.f32 	%p23, %f16, %f18;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p24, %f15, %f15;
	setp.nan.f32 	%p25, %f16, %f16;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f25, %f15, %f17, %p22;
	selp.f32 	%f26, %f15, %f25, %p24;
	selp.f32 	%f27, %f16, %f18, %p23;
	selp.f32 	%f28, %f16, %f27, %p25;
$L__tmp2:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p26, %f26, %f19;
	setp.gt.f32 	%p27, %f28, %f20;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p28, %f26, %f26;
	setp.nan.f32 	%p29, %f28, %f28;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f29, %f26, %f19, %p28;
	selp.f32 	%f30, %f26, %f29, %p26;
	selp.f32 	%f31, %f28, %f20, %p29;
	selp.f32 	%f32, %f28, %f31, %p27;
$L__tmp3:
	.loc	1 42 18                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:42:18
	sub.f32 	%f33, %f15, %f30;
	sub.f32 	%f34, %f16, %f32;
	.loc	1 43 23                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:43:23
	mul.f32 	%f2, %f33, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f1, %f2;
	// end inline asm
	mul.f32 	%f4, %f34, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f3, %f4;
	// end inline asm
	.loc	1 44 18                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:44:18
	sub.f32 	%f35, %f17, %f30;
	sub.f32 	%f36, %f18, %f32;
	.loc	1 45 23                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:45:23
	mul.f32 	%f6, %f35, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f5, %f6;
	// end inline asm
	mul.f32 	%f8, %f36, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f7, %f8;
	// end inline asm
	.loc	1 46 19                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:46:19
	add.f32 	%f37, %f1, %f5;
	add.f32 	%f38, %f3, %f7;
	.loc	1 47 19                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:47:19
	sub.f32 	%f39, %f19, %f30;
	sub.f32 	%f40, %f20, %f32;
	.loc	1 48 24                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:48:24
	mul.f32 	%f10, %f39, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f9, %f10;
	// end inline asm
	mul.f32 	%f12, %f40, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f11, %f12;
	// end inline asm
	.loc	1 49 20                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:49:20
	add.f32 	%f41, %f37, %f9;
	add.f32 	%f42, %f38, %f11;
	.loc	1 50 19                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:50:19
	mov.b32 	%r17, %f41;
	mov.b32 	%r16, %f1;
	// begin inline asm
	div.full.f32 %r15, %r16, %r17;
	// end inline asm
	mov.b32 	%f43, %r15;
	mov.b32 	%r20, %f42;
	mov.b32 	%r19, %f3;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f44, %r18;
	.loc	1 51 19                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:51:19
	mul.f32 	%f45, %f43, %f13;
	mul.f32 	%f46, %f44, %f14;
	shl.b32 	%r104, %r53, 7;
	or.b32  	%r105, %r104, %r50;
	or.b32  	%r106, %r105, %r51;
	or.b32  	%r107, %r106, %r52;
	shl.b32 	%r108, %r53, 4;
	mov.u32 	%r109, global_smem;
	add.s32 	%r110, %r109, %r108;
	shl.b32 	%r111, %r107, 2;
	add.s32 	%r21, %r110, %r111;
	mov.b32 	%r22, %f45;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	shr.u32 	%r112, %r104, 3;
	add.s32 	%r113, %r109, %r112;
	add.s32 	%r114, %r113, %r111;
	add.s32 	%r33, %r114, 264;
	mov.b32 	%r24, %f46;
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r24;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r115, %r48, 2;
	and.b32  	%r116, %r115, 24;
	add.s32 	%r117, %r109, %r116;
	shl.b32 	%r118, %r48, 3;
	and.b32  	%r119, %r118, 1016;
	add.s32 	%r120, %r117, %r119;
	ld.shared.v2.f32 	{%f47, %f48}, [%r120];
	.loc	1 52 19                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:52:19
	mov.b32 	%r26, %f5;
	// begin inline asm
	div.full.f32 %r32, %r26, %r17;
	// end inline asm
	mov.b32 	%r29, %f7;
	// begin inline asm
	div.full.f32 %r34, %r29, %r20;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p11 st.shared.b32 [ %r21 + 0 ], %r32;
	// end inline asm
	// begin inline asm
	@%p11 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	ld.shared.v2.f32 	{%f49, %f50}, [%r120];
	.loc	1 54 20                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:54:20
	fma.rn.f32 	%f51, %f49, %f21, %f47;
	fma.rn.f32 	%f52, %f50, %f22, %f48;
	bar.sync 	0;
	and.b32  	%r121, %r118, 248;
	or.b32  	%r122, %r62, %r121;
	add.s32 	%r123, %r109, %r121;
	shl.b32 	%r124, %r122, 2;
	add.s32 	%r35, %r123, %r124;
	mov.b32 	%r36, %f51;
	// begin inline asm
	@%p11 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r35, 20;
	mov.b32 	%r38, %f52;
	// begin inline asm
	@%p11 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r125, %r55, 252;
	add.s32 	%r126, %r109, %r125;
	add.s32 	%r127, %r126, %r119;
	ld.shared.f32 	%f53, [%r127];
	ld.shared.f32 	%f54, [%r127+4];
	.loc	1 55 20                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:55:20
	mov.b32 	%r40, %f9;
	// begin inline asm
	div.full.f32 %r39, %r40, %r17;
	// end inline asm
	mov.b32 	%f55, %r39;
	mov.b32 	%r43, %f11;
	// begin inline asm
	div.full.f32 %r42, %r43, %r20;
	// end inline asm
	mov.b32 	%f56, %r42;
	.loc	1 57 20                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:57:20
	fma.rn.f32 	%f57, %f55, %f23, %f53;
	fma.rn.f32 	%f58, %f56, %f24, %f54;
	.loc	1 58 25                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:58:25
	add.s64 	%rd11, %rd16, %rd25;
	.loc	1 58 44                         // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:58:44
	mov.b32 	%r45, %f57;
	mov.b32 	%r46, %f58;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r45, %r46 };
	// end inline asm
	.loc	1 58 4                          // cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py:58:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/im/cimsskpuxbdtiwdu77oq4nftdxynx3hhigz4mldvj7fuobxpb3os.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 201                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 109
.b8 115
.b8 115
.b8 107
.b8 112
.b8 117
.b8 120
.b8 98
.b8 100
.b8 116
.b8 105
.b8 119
.b8 100
.b8 117
.b8 55
.b8 55
.b8 111
.b8 113
.b8 52
.b8 110
.b8 102
.b8 116
.b8 100
.b8 120
.b8 121
.b8 110
.b8 120
.b8 51
.b8 104
.b8 104
.b8 105
.b8 103
.b8 122
.b8 52
.b8 109
.b8 108
.b8 100
.b8 118
.b8 106
.b8 55
.b8 102
.b8 117
.b8 111
.b8 98
.b8 120
.b8 112
.b8 98
.b8 51
.b8 111
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x23 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 108
.b8 111
.b8 110
.b8 101
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x86:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xb3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
