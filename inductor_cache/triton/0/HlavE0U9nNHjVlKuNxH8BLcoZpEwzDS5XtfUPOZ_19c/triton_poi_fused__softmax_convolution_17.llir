; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax_convolution_17(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 8, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 254, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 4096, !dbg !14
  %13 = mul i32 %12, 4096, !dbg !15
  %.decomposed = sub i32 %.frozen, %13, !dbg !15
  %14 = shl i32 %12, 14, !dbg !16
  %15 = add i32 %14, %.decomposed, !dbg !17
  %16 = sext i32 %15 to i64, !dbg !18
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !18
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 true) #1, !dbg !19
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !19
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !19
  %21 = bitcast i32 %19 to float, !dbg !19
  %22 = bitcast i32 %20 to float, !dbg !19
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #1, !dbg !20
  %24 = bitcast i32 %23 to float, !dbg !20
  %25 = add i32 %15, 4096, !dbg !21
  %26 = sext i32 %25 to i64, !dbg !22
  %27 = getelementptr float, ptr addrspace(1) %0, i64 %26, !dbg !22
  %28 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %27, i1 true) #1, !dbg !23
  %29 = extractvalue { i32, i32 } %28, 0, !dbg !23
  %30 = extractvalue { i32, i32 } %28, 1, !dbg !23
  %31 = bitcast i32 %29 to float, !dbg !23
  %32 = bitcast i32 %30 to float, !dbg !23
  %33 = getelementptr i8, ptr addrspace(1) %1, i64 4, !dbg !24
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %33, i1 true) #1, !dbg !25
  %35 = bitcast i32 %34 to float, !dbg !25
  %36 = add i32 %15, 8192, !dbg !26
  %37 = sext i32 %36 to i64, !dbg !27
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !27
  %39 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %38, i1 true) #1, !dbg !28
  %40 = extractvalue { i32, i32 } %39, 0, !dbg !28
  %41 = extractvalue { i32, i32 } %39, 1, !dbg !28
  %42 = bitcast i32 %40 to float, !dbg !28
  %43 = bitcast i32 %41 to float, !dbg !28
  %44 = getelementptr i8, ptr addrspace(1) %1, i64 8, !dbg !29
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %44, i1 true) #1, !dbg !30
  %46 = bitcast i32 %45 to float, !dbg !30
  %47 = add i32 %15, 12288, !dbg !31
  %48 = sext i32 %47 to i64, !dbg !32
  %49 = getelementptr float, ptr addrspace(1) %0, i64 %48, !dbg !32
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %49, i1 true) #1, !dbg !33
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !33
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !33
  %53 = bitcast i32 %51 to float, !dbg !33
  %54 = bitcast i32 %52 to float, !dbg !33
  %55 = getelementptr i8, ptr addrspace(1) %1, i64 12, !dbg !34
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 true) #1, !dbg !35
  %57 = bitcast i32 %56 to float, !dbg !35
  %58 = fadd float %21, %24, !dbg !36
  %59 = fadd float %22, %24, !dbg !36
  %60 = fadd float %31, %35, !dbg !37
  %61 = fadd float %32, %35, !dbg !37
  %62 = fcmp ogt float %58, %60, !dbg !38
  %63 = fcmp ogt float %59, %61, !dbg !38
  %64 = fcmp uno float %58, 0.000000e+00, !dbg !42
  %65 = fcmp uno float %59, 0.000000e+00, !dbg !42
  %66 = or i1 %64, %62, !dbg !43
  %67 = or i1 %65, %63, !dbg !43
  %68 = select i1 %66, float %58, float %60, !dbg !44
  %69 = select i1 %67, float %59, float %61, !dbg !44
  %70 = fadd float %42, %46, !dbg !45
  %71 = fadd float %43, %46, !dbg !45
  %72 = fcmp ogt float %68, %70, !dbg !46
  %73 = fcmp ogt float %69, %71, !dbg !46
  %74 = fcmp uno float %68, 0.000000e+00, !dbg !48
  %75 = fcmp uno float %69, 0.000000e+00, !dbg !48
  %76 = or i1 %72, %74, !dbg !49
  %77 = or i1 %73, %75, !dbg !49
  %78 = select i1 %76, float %68, float %70, !dbg !50
  %79 = select i1 %77, float %69, float %71, !dbg !50
  %80 = fadd float %53, %57, !dbg !51
  %81 = fadd float %54, %57, !dbg !51
  %82 = fcmp ogt float %78, %80, !dbg !52
  %83 = fcmp ogt float %79, %81, !dbg !52
  %84 = fcmp uno float %78, 0.000000e+00, !dbg !54
  %85 = fcmp uno float %79, 0.000000e+00, !dbg !54
  %86 = or i1 %82, %84, !dbg !55
  %87 = or i1 %83, %85, !dbg !55
  %88 = select i1 %86, float %78, float %80, !dbg !56
  %89 = select i1 %87, float %79, float %81, !dbg !56
  %90 = fsub float %58, %88, !dbg !57
  %91 = fsub float %59, %89, !dbg !57
  %92 = fmul float %90, 0x3FF7154760000000, !dbg !58
  %93 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %92) #1, !dbg !58
  %94 = fmul float %91, 0x3FF7154760000000, !dbg !58
  %95 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %94) #1, !dbg !58
  %96 = fsub float %60, %88, !dbg !59
  %97 = fsub float %61, %89, !dbg !59
  %98 = fmul float %96, 0x3FF7154760000000, !dbg !60
  %99 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %98) #1, !dbg !60
  %100 = fmul float %97, 0x3FF7154760000000, !dbg !60
  %101 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %100) #1, !dbg !60
  %102 = fadd float %93, %99, !dbg !61
  %103 = fadd float %95, %101, !dbg !61
  %104 = fsub float %70, %88, !dbg !62
  %105 = fsub float %71, %89, !dbg !62
  %106 = fmul float %104, 0x3FF7154760000000, !dbg !63
  %107 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %106) #1, !dbg !63
  %108 = fmul float %105, 0x3FF7154760000000, !dbg !63
  %109 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %108) #1, !dbg !63
  %110 = fadd float %102, %107, !dbg !64
  %111 = fadd float %103, %109, !dbg !64
  %112 = fsub float %80, %88, !dbg !65
  %113 = fsub float %81, %89, !dbg !65
  %114 = fmul float %112, 0x3FF7154760000000, !dbg !66
  %115 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %114) #1, !dbg !66
  %116 = fmul float %113, 0x3FF7154760000000, !dbg !66
  %117 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %116) #1, !dbg !66
  %118 = fadd float %110, %115, !dbg !67
  %119 = fadd float %111, %117, !dbg !67
  %120 = sext i32 %11 to i64, !dbg !68
  %121 = getelementptr float, ptr addrspace(1) %2, i64 %120, !dbg !68
  %122 = bitcast float %88 to i32, !dbg !69
  %123 = bitcast float %89 to i32, !dbg !69
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %122, i32 %123, ptr addrspace(1) %121, i1 true) #1, !dbg !69
  %124 = getelementptr float, ptr addrspace(1) %3, i64 %120, !dbg !70
  %125 = bitcast float %118 to i32, !dbg !71
  %126 = bitcast float %119 to i32, !dbg !71
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %125, i32 %126, ptr addrspace(1) %124, i1 true) #1, !dbg !71
  ret void, !dbg !72
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cr6muoj52srq3wobmy5udk5wub3vwax5227i6hjutjafha6hnjec.py", directory: "inductor_cache/r6")
!4 = !{ptr @triton_poi_fused__softmax_convolution_17, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax_convolution_17, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax_convolution_17", linkageName: "triton_poi_fused__softmax_convolution_17", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 19, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 27, column: 41, scope: !7)
!17 = !DILocation(line: 27, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 46, scope: !7)
!20 = !DILocation(line: 28, column: 19, scope: !7)
!21 = !DILocation(line: 30, column: 42, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 53, scope: !7)
!24 = !DILocation(line: 31, column: 30, scope: !7)
!25 = !DILocation(line: 31, column: 19, scope: !7)
!26 = !DILocation(line: 33, column: 42, scope: !7)
!27 = !DILocation(line: 33, column: 30, scope: !7)
!28 = !DILocation(line: 33, column: 53, scope: !7)
!29 = !DILocation(line: 34, column: 31, scope: !7)
!30 = !DILocation(line: 34, column: 20, scope: !7)
!31 = !DILocation(line: 36, column: 44, scope: !7)
!32 = !DILocation(line: 36, column: 31, scope: !7)
!33 = !DILocation(line: 36, column: 55, scope: !7)
!34 = !DILocation(line: 37, column: 31, scope: !7)
!35 = !DILocation(line: 37, column: 20, scope: !7)
!36 = !DILocation(line: 39, column: 18, scope: !7)
!37 = !DILocation(line: 40, column: 18, scope: !7)
!38 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!41 = !DILocation(line: 41, column: 40, scope: !7)
!42 = !DILocation(line: 120, column: 21, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 120, column: 16, scope: !39, inlinedAt: !41)
!44 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !41)
!45 = !DILocation(line: 42, column: 19, scope: !7)
!46 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !47)
!47 = !DILocation(line: 43, column: 41, scope: !7)
!48 = !DILocation(line: 120, column: 21, scope: !39, inlinedAt: !47)
!49 = !DILocation(line: 120, column: 16, scope: !39, inlinedAt: !47)
!50 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !47)
!51 = !DILocation(line: 44, column: 20, scope: !7)
!52 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !53)
!53 = !DILocation(line: 45, column: 42, scope: !7)
!54 = !DILocation(line: 120, column: 21, scope: !39, inlinedAt: !53)
!55 = !DILocation(line: 120, column: 16, scope: !39, inlinedAt: !53)
!56 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !53)
!57 = !DILocation(line: 46, column: 19, scope: !7)
!58 = !DILocation(line: 47, column: 24, scope: !7)
!59 = !DILocation(line: 48, column: 19, scope: !7)
!60 = !DILocation(line: 49, column: 24, scope: !7)
!61 = !DILocation(line: 50, column: 20, scope: !7)
!62 = !DILocation(line: 51, column: 20, scope: !7)
!63 = !DILocation(line: 52, column: 24, scope: !7)
!64 = !DILocation(line: 53, column: 20, scope: !7)
!65 = !DILocation(line: 54, column: 20, scope: !7)
!66 = !DILocation(line: 55, column: 24, scope: !7)
!67 = !DILocation(line: 56, column: 20, scope: !7)
!68 = !DILocation(line: 57, column: 25, scope: !7)
!69 = !DILocation(line: 57, column: 37, scope: !7)
!70 = !DILocation(line: 58, column: 25, scope: !7)
!71 = !DILocation(line: 58, column: 37, scope: !7)
!72 = !DILocation(line: 58, column: 4, scope: !7)
