; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__softmax__to_copy_4(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 6, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 62, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 64, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %13 = sdiv i32 %.frozen, 16, !dbg !15
  %14 = mul i32 %13, 16, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = shl i32 %13, 6, !dbg !17
  %16 = add i32 %15, %.decomposed, !dbg !18
  %17 = sext i32 %16 to i64, !dbg !19
  %18 = getelementptr i1, ptr addrspace(1) %0, i64 %17, !dbg !19
  %19 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %18, i1 %12) #1, !dbg !20
  %20 = bitcast i16 %19 to <2 x i8>, !dbg !20
  %21 = extractelement <2 x i8> %20, i64 0, !dbg !20
  %22 = extractelement <2 x i8> %20, i64 1, !dbg !20
  %23 = icmp ne i8 %21, 0, !dbg !20
  %24 = icmp ne i8 %22, 0, !dbg !20
  %25 = sext i32 %11 to i64, !dbg !21
  %26 = getelementptr float, ptr addrspace(1) %1, i64 %25, !dbg !21
  %27 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %26, i1 %12) #1, !dbg !22
  %28 = extractvalue { i32, i32 } %27, 0, !dbg !22
  %29 = extractvalue { i32, i32 } %27, 1, !dbg !22
  %30 = bitcast i32 %28 to float, !dbg !22
  %31 = bitcast i32 %29 to float, !dbg !22
  %32 = add i32 %16, 16, !dbg !23
  %33 = sext i32 %32 to i64, !dbg !24
  %34 = getelementptr i1, ptr addrspace(1) %0, i64 %33, !dbg !24
  %35 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %34, i1 %12) #1, !dbg !25
  %36 = bitcast i16 %35 to <2 x i8>, !dbg !25
  %37 = extractelement <2 x i8> %36, i64 0, !dbg !25
  %38 = extractelement <2 x i8> %36, i64 1, !dbg !25
  %39 = icmp ne i8 %37, 0, !dbg !25
  %40 = icmp ne i8 %38, 0, !dbg !25
  %41 = add i32 %16, 32, !dbg !26
  %42 = sext i32 %41 to i64, !dbg !27
  %43 = getelementptr i1, ptr addrspace(1) %0, i64 %42, !dbg !27
  %44 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %43, i1 %12) #1, !dbg !28
  %45 = bitcast i16 %44 to <2 x i8>, !dbg !28
  %46 = extractelement <2 x i8> %45, i64 0, !dbg !28
  %47 = extractelement <2 x i8> %45, i64 1, !dbg !28
  %48 = icmp ne i8 %46, 0, !dbg !28
  %49 = icmp ne i8 %47, 0, !dbg !28
  %50 = add i32 %16, 48, !dbg !29
  %51 = sext i32 %50 to i64, !dbg !30
  %52 = getelementptr i1, ptr addrspace(1) %0, i64 %51, !dbg !30
  %53 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %52, i1 %12) #1, !dbg !31
  %54 = bitcast i16 %53 to <2 x i8>, !dbg !31
  %55 = extractelement <2 x i8> %54, i64 0, !dbg !31
  %56 = extractelement <2 x i8> %54, i64 1, !dbg !31
  %57 = icmp ne i8 %55, 0, !dbg !31
  %58 = icmp ne i8 %56, 0, !dbg !31
  %59 = uitofp i1 %23 to float, !dbg !32
  %60 = uitofp i1 %24 to float, !dbg !32
  %61 = fcmp oge float %30, 0.000000e+00, !dbg !33
  %62 = fcmp oge float %31, 0.000000e+00, !dbg !33
  %63 = select i1 %61, float 1.000000e+00, float -1.000000e+00, !dbg !34
  %64 = select i1 %62, float 1.000000e+00, float -1.000000e+00, !dbg !34
  %65 = fmul float %63, %59, !dbg !35
  %66 = fmul float %64, %60, !dbg !35
  %67 = uitofp i1 %39 to float, !dbg !36
  %68 = uitofp i1 %40 to float, !dbg !36
  %69 = fmul float %63, %67, !dbg !37
  %70 = fmul float %64, %68, !dbg !37
  %71 = fcmp ogt float %65, %69, !dbg !38
  %72 = fcmp ogt float %66, %70, !dbg !38
  %73 = select i1 %71, float %65, float %69, !dbg !42
  %74 = select i1 %72, float %66, float %70, !dbg !42
  %75 = uitofp i1 %48 to float, !dbg !43
  %76 = uitofp i1 %49 to float, !dbg !43
  %77 = fmul float %63, %75, !dbg !44
  %78 = fmul float %64, %76, !dbg !44
  %79 = fcmp ogt float %73, %77, !dbg !45
  %80 = fcmp ogt float %74, %78, !dbg !45
  %81 = select i1 %79, float %73, float %77, !dbg !47
  %82 = select i1 %80, float %74, float %78, !dbg !47
  %83 = uitofp i1 %57 to float, !dbg !48
  %84 = uitofp i1 %58 to float, !dbg !48
  %85 = fmul float %63, %83, !dbg !49
  %86 = fmul float %64, %84, !dbg !49
  %87 = fcmp ogt float %81, %85, !dbg !50
  %88 = fcmp ogt float %82, %86, !dbg !50
  %89 = select i1 %87, float %81, float %85, !dbg !52
  %90 = select i1 %88, float %82, float %86, !dbg !52
  %91 = fsub float %65, %89, !dbg !53
  %92 = fsub float %66, %90, !dbg !53
  %93 = fmul float %63, %30, !dbg !54
  %94 = fmul float %64, %31, !dbg !54
  %95 = fmul float %93, %91, !dbg !55
  %96 = fmul float %94, %92, !dbg !55
  %97 = fmul float %95, 0x3FF7154760000000, !dbg !56
  %98 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %97) #1, !dbg !56
  %99 = fmul float %96, 0x3FF7154760000000, !dbg !56
  %100 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %99) #1, !dbg !56
  %101 = fsub float %69, %89, !dbg !57
  %102 = fsub float %70, %90, !dbg !57
  %103 = fmul float %93, %101, !dbg !58
  %104 = fmul float %94, %102, !dbg !58
  %105 = fmul float %103, 0x3FF7154760000000, !dbg !59
  %106 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %105) #1, !dbg !59
  %107 = fmul float %104, 0x3FF7154760000000, !dbg !59
  %108 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %107) #1, !dbg !59
  %109 = fadd float %98, %106, !dbg !60
  %110 = fadd float %100, %108, !dbg !60
  %111 = fsub float %77, %89, !dbg !61
  %112 = fsub float %78, %90, !dbg !61
  %113 = fmul float %93, %111, !dbg !62
  %114 = fmul float %94, %112, !dbg !62
  %115 = fmul float %113, 0x3FF7154760000000, !dbg !63
  %116 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %115) #1, !dbg !63
  %117 = fmul float %114, 0x3FF7154760000000, !dbg !63
  %118 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %117) #1, !dbg !63
  %119 = fadd float %109, %116, !dbg !64
  %120 = fadd float %110, %118, !dbg !64
  %121 = fsub float %85, %89, !dbg !65
  %122 = fsub float %86, %90, !dbg !65
  %123 = fmul float %93, %121, !dbg !66
  %124 = fmul float %94, %122, !dbg !66
  %125 = fmul float %123, 0x3FF7154760000000, !dbg !67
  %126 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %125) #1, !dbg !67
  %127 = fmul float %124, 0x3FF7154760000000, !dbg !67
  %128 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %127) #1, !dbg !67
  %129 = fadd float %119, %126, !dbg !68
  %130 = fadd float %120, %128, !dbg !68
  %131 = getelementptr float, ptr addrspace(1) %2, i64 %25, !dbg !69
  %132 = bitcast float %89 to i32, !dbg !70
  %133 = bitcast float %90 to i32, !dbg !70
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %132, i32 %133, ptr addrspace(1) %131, i1 %12) #1, !dbg !70
  %134 = getelementptr float, ptr addrspace(1) %3, i64 %25, !dbg !71
  %135 = bitcast float %129 to i32, !dbg !72
  %136 = bitcast float %130 to i32, !dbg !72
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %135, i32 %136, ptr addrspace(1) %134, i1 %12) #1, !dbg !72
  ret void, !dbg !73
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py", directory: "inductor_cache/km")
!4 = !{ptr @triton_poi_fused__softmax__to_copy_4, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__softmax__to_copy_4, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__softmax__to_copy_4", linkageName: "triton_poi_fused__softmax__to_copy_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 38, scope: !7)
!18 = !DILocation(line: 27, column: 35, scope: !7)
!19 = !DILocation(line: 27, column: 30, scope: !7)
!20 = !DILocation(line: 27, column: 43, scope: !7)
!21 = !DILocation(line: 28, column: 30, scope: !7)
!22 = !DILocation(line: 28, column: 35, scope: !7)
!23 = !DILocation(line: 29, column: 40, scope: !7)
!24 = !DILocation(line: 29, column: 30, scope: !7)
!25 = !DILocation(line: 29, column: 48, scope: !7)
!26 = !DILocation(line: 30, column: 41, scope: !7)
!27 = !DILocation(line: 30, column: 31, scope: !7)
!28 = !DILocation(line: 30, column: 49, scope: !7)
!29 = !DILocation(line: 31, column: 41, scope: !7)
!30 = !DILocation(line: 31, column: 31, scope: !7)
!31 = !DILocation(line: 31, column: 49, scope: !7)
!32 = !DILocation(line: 32, column: 19, scope: !7)
!33 = !DILocation(line: 34, column: 19, scope: !7)
!34 = !DILocation(line: 37, column: 32, scope: !7)
!35 = !DILocation(line: 38, column: 18, scope: !7)
!36 = !DILocation(line: 39, column: 20, scope: !7)
!37 = !DILocation(line: 40, column: 20, scope: !7)
!38 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!41 = !DILocation(line: 41, column: 41, scope: !7)
!42 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !41)
!43 = !DILocation(line: 42, column: 21, scope: !7)
!44 = !DILocation(line: 43, column: 20, scope: !7)
!45 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !46)
!46 = !DILocation(line: 44, column: 42, scope: !7)
!47 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !46)
!48 = !DILocation(line: 45, column: 21, scope: !7)
!49 = !DILocation(line: 46, column: 20, scope: !7)
!50 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !51)
!51 = !DILocation(line: 47, column: 42, scope: !7)
!52 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !51)
!53 = !DILocation(line: 48, column: 19, scope: !7)
!54 = !DILocation(line: 49, column: 19, scope: !7)
!55 = !DILocation(line: 50, column: 20, scope: !7)
!56 = !DILocation(line: 51, column: 24, scope: !7)
!57 = !DILocation(line: 52, column: 20, scope: !7)
!58 = !DILocation(line: 53, column: 20, scope: !7)
!59 = !DILocation(line: 54, column: 24, scope: !7)
!60 = !DILocation(line: 55, column: 20, scope: !7)
!61 = !DILocation(line: 56, column: 20, scope: !7)
!62 = !DILocation(line: 57, column: 20, scope: !7)
!63 = !DILocation(line: 58, column: 24, scope: !7)
!64 = !DILocation(line: 59, column: 20, scope: !7)
!65 = !DILocation(line: 60, column: 20, scope: !7)
!66 = !DILocation(line: 61, column: 20, scope: !7)
!67 = !DILocation(line: 62, column: 24, scope: !7)
!68 = !DILocation(line: 63, column: 20, scope: !7)
!69 = !DILocation(line: 64, column: 25, scope: !7)
!70 = !DILocation(line: 64, column: 37, scope: !7)
!71 = !DILocation(line: 65, column: 25, scope: !7)
!72 = !DILocation(line: 65, column: 37, scope: !7)
!73 = !DILocation(line: 65, column: 4, scope: !7)
