#loc = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":19:0)
module {
  tt.func public @triton_poi_fused__softmax__to_copy_4(%arg0: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-1.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<48> : tensor<64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<64xi32> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<64xi8> loc(#loc1)
    %cst_5 = arith.constant dense<16> : tensor<64xi32> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_6 : tensor<64xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_5 : tensor<64xi32> loc(#loc7)
    %7 = arith.divsi %4, %cst_5 : tensor<64xi32> loc(#loc8)
    %8 = arith.muli %7, %cst_6 : tensor<64xi32> loc(#loc9)
    %9 = arith.addi %6, %8 : tensor<64xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<i1> -> tensor<64x!tt.ptr<i1>> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<64x!tt.ptr<i1>>, tensor<64xi32> loc(#loc11)
    %12 = tt.bitcast %11 : tensor<64x!tt.ptr<i1>> -> tensor<64x!tt.ptr<i8>> loc(#loc12)
    %13 = tt.load %12, %5 : tensor<64x!tt.ptr<i8>> loc(#loc12)
    %14 = arith.cmpi ne, %13, %cst_4 : tensor<64xi8> loc(#loc12)
    %15 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %15, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc13)
    %17 = tt.load %16, %5 : tensor<64x!tt.ptr<f32>> loc(#loc14)
    %18 = arith.addi %6, %cst_5 : tensor<64xi32> loc(#loc15)
    %19 = arith.addi %18, %8 : tensor<64xi32> loc(#loc16)
    %20 = tt.addptr %10, %19 : tensor<64x!tt.ptr<i1>>, tensor<64xi32> loc(#loc17)
    %21 = tt.bitcast %20 : tensor<64x!tt.ptr<i1>> -> tensor<64x!tt.ptr<i8>> loc(#loc18)
    %22 = tt.load %21, %5 : tensor<64x!tt.ptr<i8>> loc(#loc18)
    %23 = arith.cmpi ne, %22, %cst_4 : tensor<64xi8> loc(#loc18)
    %24 = arith.addi %6, %cst_3 : tensor<64xi32> loc(#loc19)
    %25 = arith.addi %24, %8 : tensor<64xi32> loc(#loc20)
    %26 = tt.addptr %10, %25 : tensor<64x!tt.ptr<i1>>, tensor<64xi32> loc(#loc21)
    %27 = tt.bitcast %26 : tensor<64x!tt.ptr<i1>> -> tensor<64x!tt.ptr<i8>> loc(#loc22)
    %28 = tt.load %27, %5 : tensor<64x!tt.ptr<i8>> loc(#loc22)
    %29 = arith.cmpi ne, %28, %cst_4 : tensor<64xi8> loc(#loc22)
    %30 = arith.addi %6, %cst_2 : tensor<64xi32> loc(#loc23)
    %31 = arith.addi %30, %8 : tensor<64xi32> loc(#loc24)
    %32 = tt.addptr %10, %31 : tensor<64x!tt.ptr<i1>>, tensor<64xi32> loc(#loc25)
    %33 = tt.bitcast %32 : tensor<64x!tt.ptr<i1>> -> tensor<64x!tt.ptr<i8>> loc(#loc26)
    %34 = tt.load %33, %5 : tensor<64x!tt.ptr<i8>> loc(#loc26)
    %35 = arith.cmpi ne, %34, %cst_4 : tensor<64xi8> loc(#loc26)
    %36 = arith.uitofp %14 : tensor<64xi1> to tensor<64xf32> loc(#loc27)
    %37 = arith.cmpf oge, %17, %cst_1 : tensor<64xf32> loc(#loc28)
    %38 = arith.select %37, %cst_0, %cst : tensor<64xi1>, tensor<64xf32> loc(#loc29)
    %39 = arith.mulf %36, %38 : tensor<64xf32> loc(#loc30)
    %40 = arith.uitofp %23 : tensor<64xi1> to tensor<64xf32> loc(#loc31)
    %41 = arith.mulf %40, %38 : tensor<64xf32> loc(#loc32)
    %42 = arith.cmpf ogt, %39, %41 : tensor<64xf32> loc(#loc65)
    %43 = arith.cmpf une, %39, %39 : tensor<64xf32> loc(#loc66)
    %44 = arith.ori %42, %43 : tensor<64xi1> loc(#loc67)
    %45 = arith.select %44, %39, %41 : tensor<64xi1>, tensor<64xf32> loc(#loc68)
    %46 = arith.uitofp %29 : tensor<64xi1> to tensor<64xf32> loc(#loc38)
    %47 = arith.mulf %46, %38 : tensor<64xf32> loc(#loc39)
    %48 = arith.cmpf ogt, %45, %47 : tensor<64xf32> loc(#loc69)
    %49 = arith.cmpf une, %45, %45 : tensor<64xf32> loc(#loc70)
    %50 = arith.ori %48, %49 : tensor<64xi1> loc(#loc71)
    %51 = arith.select %50, %45, %47 : tensor<64xi1>, tensor<64xf32> loc(#loc72)
    %52 = arith.uitofp %35 : tensor<64xi1> to tensor<64xf32> loc(#loc41)
    %53 = arith.mulf %52, %38 : tensor<64xf32> loc(#loc42)
    %54 = arith.cmpf ogt, %51, %53 : tensor<64xf32> loc(#loc73)
    %55 = arith.cmpf une, %51, %51 : tensor<64xf32> loc(#loc74)
    %56 = arith.ori %54, %55 : tensor<64xi1> loc(#loc75)
    %57 = arith.select %56, %51, %53 : tensor<64xi1>, tensor<64xf32> loc(#loc76)
    %58 = arith.subf %39, %57 : tensor<64xf32> loc(#loc44)
    %59 = arith.mulf %38, %17 : tensor<64xf32> loc(#loc45)
    %60 = arith.mulf %58, %59 : tensor<64xf32> loc(#loc46)
    %61 = math.exp %60 : tensor<64xf32> loc(#loc47)
    %62 = arith.subf %41, %57 : tensor<64xf32> loc(#loc48)
    %63 = arith.mulf %62, %59 : tensor<64xf32> loc(#loc49)
    %64 = math.exp %63 : tensor<64xf32> loc(#loc50)
    %65 = arith.addf %61, %64 : tensor<64xf32> loc(#loc51)
    %66 = arith.subf %47, %57 : tensor<64xf32> loc(#loc52)
    %67 = arith.mulf %66, %59 : tensor<64xf32> loc(#loc53)
    %68 = math.exp %67 : tensor<64xf32> loc(#loc54)
    %69 = arith.addf %65, %68 : tensor<64xf32> loc(#loc55)
    %70 = arith.subf %53, %57 : tensor<64xf32> loc(#loc56)
    %71 = arith.mulf %70, %59 : tensor<64xf32> loc(#loc57)
    %72 = math.exp %71 : tensor<64xf32> loc(#loc58)
    %73 = arith.addf %69, %72 : tensor<64xf32> loc(#loc59)
    %74 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc60)
    %75 = tt.addptr %74, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc60)
    tt.store %75, %57, %5 : tensor<64x!tt.ptr<f32>> loc(#loc61)
    %76 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc62)
    %77 = tt.addptr %76, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc62)
    tt.store %77, %73, %5 : tensor<64x!tt.ptr<f32>> loc(#loc63)
    tt.return loc(#loc64)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":21:28)
#loc3 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":21:33)
#loc4 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":22:36)
#loc5 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":22:23)
#loc6 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":23:21)
#loc7 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":24:19)
#loc8 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":25:19)
#loc9 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":27:38)
#loc10 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":27:35)
#loc11 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":27:30)
#loc12 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":27:43)
#loc13 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":28:30)
#loc14 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":28:35)
#loc15 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":29:35)
#loc16 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":29:40)
#loc17 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":29:30)
#loc18 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":29:48)
#loc19 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":30:36)
#loc20 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":30:41)
#loc21 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":30:31)
#loc22 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":30:49)
#loc23 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":31:36)
#loc24 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":31:41)
#loc25 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":31:31)
#loc26 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":31:49)
#loc27 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":32:19)
#loc28 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":34:19)
#loc29 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":37:32)
#loc30 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":38:18)
#loc31 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":39:20)
#loc32 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":40:20)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc34 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":41:41)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc38 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":42:21)
#loc39 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":43:20)
#loc40 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":44:42)
#loc41 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":45:21)
#loc42 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":46:20)
#loc43 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":47:42)
#loc44 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":48:19)
#loc45 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":49:19)
#loc46 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":50:20)
#loc47 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":51:24)
#loc48 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":52:20)
#loc49 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":53:20)
#loc50 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":54:24)
#loc51 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":55:20)
#loc52 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":56:20)
#loc53 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":57:20)
#loc54 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":58:24)
#loc55 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":59:20)
#loc56 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":60:20)
#loc57 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":61:20)
#loc58 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":62:24)
#loc59 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":63:20)
#loc60 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":64:25)
#loc61 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":64:37)
#loc62 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":65:25)
#loc63 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":65:37)
#loc64 = loc("inductor_cache/km/ckmxqxteqd63qx4uwlfx4wtgy67fzk6ambzojn2vxbhqqfdnng4a.py":65:4)
#loc65 = loc(callsite(#loc33 at #loc34))
#loc66 = loc(callsite(#loc35 at #loc34))
#loc67 = loc(callsite(#loc36 at #loc34))
#loc68 = loc(callsite(#loc37 at #loc34))
#loc69 = loc(callsite(#loc33 at #loc40))
#loc70 = loc(callsite(#loc35 at #loc40))
#loc71 = loc(callsite(#loc36 at #loc40))
#loc72 = loc(callsite(#loc37 at #loc40))
#loc73 = loc(callsite(#loc33 at #loc43))
#loc74 = loc(callsite(#loc35 at #loc43))
#loc75 = loc(callsite(#loc36 at #loc43))
#loc76 = loc(callsite(#loc37 at #loc43))
