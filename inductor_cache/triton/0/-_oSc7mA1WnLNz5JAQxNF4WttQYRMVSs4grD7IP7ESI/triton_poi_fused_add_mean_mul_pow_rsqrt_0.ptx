//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mean_mul_pow_rsqrt_0 // -- Begin function triton_poi_fused_add_mean_mul_pow_rsqrt_0
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_mean_mul_pow_rsqrt_0
.visible .entry triton_poi_fused_add_mean_mul_pow_rsqrt_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_0_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mean_mul_pow_rsqrt_0_param_2,
	.param .u32 triton_poi_fused_add_mean_mul_pow_rsqrt_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<33>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd12, [triton_poi_fused_add_mean_mul_pow_rsqrt_0_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_add_mean_mul_pow_rsqrt_0_param_1];
$L__tmp0:
	.loc	1 21 28                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:21:33
	shl.b32 	%r22, %r1, 8;
	ld.param.u64 	%rd14, [triton_poi_fused_add_mean_mul_pow_rsqrt_0_param_2];
	.loc	1 22 36                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:22:36
	mov.u32 	%r23, %tid.x;
	shl.b32 	%r24, %r23, 1;
	and.b32  	%r25, %r24, 254;
	.loc	1 22 23                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:22:23
	or.b32  	%r26, %r22, %r25;
	.loc	1 23 21                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:23:21
	setp.lt.s32 	%p1, %r26, 256;
	.loc	1 25 19                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:25:19
	shr.s32 	%r28, %r26, 31;
	shr.u32 	%r29, %r28, 30;
	add.s32 	%r30, %r26, %r29;
	.loc	1 26 19                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:26:19
	and.b32  	%r31, %r30, -4;
	sub.s32 	%r32, %r26, %r31;
	.loc	1 27 30                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:27:30
	mul.wide.s32 	%rd15, %r26, 4;
	add.s64 	%rd1, %rd12, %rd15;
	.loc	1 27 35                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:27:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 30                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:28:30
	mul.wide.s32 	%rd16, %r31, 4;
	add.s64 	%rd2, %rd12, %rd16;
	.loc	1 28 37                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:28:37
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r4;
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r5;
	.loc	1 29 30                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:29:30
	add.s64 	%rd4, %rd2, 4;
	.loc	1 29 41                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:29:41
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r6;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r7;
	.loc	1 30 30                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:30:30
	add.s64 	%rd6, %rd2, 8;
	.loc	1 30 41                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:30:41
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r8;
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f6, %r9;
	.loc	1 31 30                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:31:30
	add.s64 	%rd8, %rd2, 12;
	.loc	1 31 41                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:31:41
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r10;
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd8 + 0 ];
	// end inline asm
	mov.b32 	%f8, %r11;
	.loc	1 32 31                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:32:31
	mul.wide.s32 	%rd17, %r32, 4;
	add.s64 	%rd10, %rd13, %rd17;
	.loc	1 32 36                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:32:36
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.v2.b32 { %r12, %r13 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 34 18                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:34:18
	mul.f32 	%f9, %f3, %f3;
	mul.f32 	%f10, %f4, %f4;
	.loc	1 35 18                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:35:18
	fma.rn.f32 	%f11, %f1, %f1, %f9;
	fma.rn.f32 	%f12, %f2, %f2, %f10;
	.loc	1 37 18                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:37:18
	fma.rn.f32 	%f13, %f5, %f5, %f11;
	fma.rn.f32 	%f14, %f6, %f6, %f12;
	.loc	1 39 19                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:39:19
	fma.rn.f32 	%f15, %f7, %f7, %f13;
	fma.rn.f32 	%f16, %f8, %f8, %f14;
	.loc	1 41 20                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:41:20
	mov.b32 	%r15, %f15;
	mov.b32 	%r16, 1082130432;
	// begin inline asm
	div.full.f32 %r14, %r15, %r16;
	// end inline asm
	mov.b32 	%f17, %r14;
	mov.b32 	%r18, %f16;
	// begin inline asm
	div.full.f32 %r17, %r18, %r16;
	// end inline asm
	mov.b32 	%f18, %r17;
	.loc	1 43 20                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:43:20
	add.f32 	%f19, %f17, 0f3727C5AC;
	add.f32 	%f20, %f18, 0f3727C5AC;
	.loc	1 44 28                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:44:28
	rsqrt.approx.ftz.f32 	%f21, %f19;
	rsqrt.approx.ftz.f32 	%f22, %f20;
	.loc	1 32 36                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:32:36
	mov.b32 	%f23, %r13;
	mov.b32 	%f24, %r12;
	.loc	1 27 35                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:27:35
	mov.b32 	%f25, %r3;
	mov.b32 	%f26, %r2;
	.loc	1 45 19                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:45:19
	mul.f32 	%f27, %f21, %f26;
	mul.f32 	%f28, %f22, %f25;
	.loc	1 46 20                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:46:20
	mul.f32 	%f29, %f27, %f24;
	mul.f32 	%f30, %f28, %f23;
	.loc	1 47 25                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:47:25
	add.s64 	%rd11, %rd14, %rd15;
	.loc	1 47 37                         // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:47:37
	mov.b32 	%r20, %f29;
	mov.b32 	%r21, %f30;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd11 + 0 ], { %r20, %r21 };
	// end inline asm
	.loc	1 47 4                          // c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/4w/c4wizb7h3d2dzmtj4p6n7ivl4pgbnpk3ozwccbtbc6egkjmvdfdx.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 52
.b8 119
.b8 105
.b8 122
.b8 98
.b8 55
.b8 104
.b8 51
.b8 100
.b8 50
.b8 100
.b8 122
.b8 109
.b8 116
.b8 106
.b8 52
.b8 112
.b8 54
.b8 110
.b8 55
.b8 105
.b8 118
.b8 108
.b8 52
.b8 112
.b8 103
.b8 98
.b8 110
.b8 112
.b8 107
.b8 51
.b8 111
.b8 122
.b8 119
.b8 99
.b8 99
.b8 98
.b8 116
.b8 98
.b8 99
.b8 54
.b8 101
.b8 103
.b8 107
.b8 106
.b8 109
.b8 118
.b8 100
.b8 102
.b8 100
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 52
.b8 119
.b8 0
	}
	.section	.debug_macinfo	{	}
