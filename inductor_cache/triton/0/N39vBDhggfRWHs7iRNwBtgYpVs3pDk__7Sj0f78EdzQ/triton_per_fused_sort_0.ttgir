#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [16, 2, 1], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#blocked2 = #triton_gpu.blocked<{sizePerThread = [1, 1, 1], threadsPerWarp = [8, 2, 2], warpsPerCTA = [2, 1, 1], order = [2, 1, 0]}>
#loc = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":19:0)
#loc1 = loc(unknown)
#loc10 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":610:12)
#loc11 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":36:67)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":582:73)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:51)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:53)
#loc51 = loc(callsite(#loc1 at #loc20))
#loc57 = loc(callsite(#loc1 at #loc25))
#loc80 = loc(callsite(#loc51 at #loc15))
#loc86 = loc(callsite(#loc57 at #loc15))
#loc107 = loc(callsite(#loc80 at #loc10))
#loc113 = loc(callsite(#loc86 at #loc10))
#loc130 = loc(callsite(#loc107 at #loc11))
#loc133 = loc(callsite(#loc113 at #loc11))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_sort_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":19:0), %arg3: i32 loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<1x4xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked1> loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<1x4xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<1> : tensor<1x2x1xi32, #blocked2> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 4 : i32, start = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<4xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x4xi32, #blocked> loc(#loc4)
    %4 = arith.muli %0, %c4_i32 : i32 loc(#loc5)
    %5 = tt.splat %4 : i32 -> tensor<1x4xi32, #blocked> loc(#loc6)
    %6 = arith.addi %3, %5 : tensor<1x4xi32, #blocked> loc(#loc6)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.addptr %7, %6 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc7)
    %9 = tt.splat %1 : i1 -> tensor<1x4xi1, #blocked> loc(#loc8)
    %10 = tt.load %8, %9, %cst : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc8)
    %11 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> loc(#loc72)
    %12 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> loc(#loc72)
    %13 = tt.expand_dims %11 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked2}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> loc(#loc72)
    %14 = tt.expand_dims %12 {axis = 0 : i32} : tensor<2xi32, #triton_gpu.slice<{dim = 0, parent = #triton_gpu.slice<{dim = 2, parent = #blocked1}>}>> -> tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> loc(#loc72)
    %15 = tt.expand_dims %13 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked2}>> -> tensor<1x2x1xi32, #blocked2> loc(#loc72)
    %16 = tt.expand_dims %14 {axis = 2 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 2, parent = #blocked1}>> -> tensor<1x2x1xi32, #blocked1> loc(#loc72)
    %17 = tt.broadcast %15 : tensor<1x2x1xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc73)
    %18 = tt.reshape %17 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc74)
    %19 = tt.reshape %10 : tensor<1x4xf32, #blocked> -> tensor<2x2x1xf32, #blocked1> loc(#loc102)
    %20 = tt.bitcast %19 : tensor<2x2x1xf32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc103)
    %21 = arith.subi %cst_2, %15 : tensor<1x2x1xi32, #blocked2> loc(#loc104)
    %22 = arith.subi %cst_0, %16 : tensor<1x2x1xi32, #blocked1> loc(#loc104)
    %23 = tt.broadcast %22 : tensor<1x2x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc105)
    %24 = arith.muli %20, %23 : tensor<2x2x1xi32, #blocked1> loc(#loc105)
    %25 = "tt.reduce"(%24) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc107 at #loc11)), %arg5: i32 loc(callsite(#loc107 at #loc11))):
      %89 = arith.addi %arg4, %arg5 : i32 loc(#loc135)
      tt.reduce.return %89 : i32 loc(#loc129)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc129)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc109)
    %27 = tt.broadcast %26 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc110)
    %28 = tt.broadcast %16 : tensor<1x2x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc111)
    %29 = arith.muli %20, %28 : tensor<2x2x1xi32, #blocked1> loc(#loc111)
    %30 = "tt.reduce"(%29) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc113 at #loc11)), %arg5: i32 loc(callsite(#loc113 at #loc11))):
      %89 = arith.addi %arg4, %arg5 : i32 loc(#loc136)
      tt.reduce.return %89 : i32 loc(#loc132)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc132)
    %31 = tt.expand_dims %30 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc115)
    %32 = tt.broadcast %31 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc116)
    %33 = tt.reshape %27 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc117)
    %34 = tt.reshape %32 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc118)
    %35 = tt.bitcast %33 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc119)
    %36 = tt.bitcast %34 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc120)
    %37 = tt.bitcast %10 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc121)
    %38 = arith.cmpf ogt, %35, %36 : tensor<1x4xf32, #blocked> loc(#loc122)
    %39 = arith.extui %38 : tensor<1x4xi1, #blocked> to tensor<1x4xi32, #blocked> loc(#loc123)
    %40 = arith.xori %39, %18 : tensor<1x4xi32, #blocked> loc(#loc123)
    %41 = arith.cmpi ne, %40, %cst_1 : tensor<1x4xi32, #blocked> loc(#loc124)
    %42 = arith.xori %33, %34 : tensor<1x4xi32, #blocked> loc(#loc125)
    %43 = arith.select %41, %42, %cst_1 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc126)
    %44 = arith.xori %37, %43 : tensor<1x4xi32, #blocked> loc(#loc127)
    %45 = tt.bitcast %44 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc128)
    %46 = tt.reshape %45 : tensor<1x4xf32, #blocked> -> tensor<1x2x2xf32, #blocked2> loc(#loc102)
    %47 = tt.bitcast %46 : tensor<1x2x2xf32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc103)
    %48 = tt.broadcast %21 : tensor<1x2x1xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc105)
    %49 = arith.muli %47, %48 : tensor<1x2x2xi32, #blocked2> loc(#loc105)
    %50 = "tt.reduce"(%49) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc107 at #loc11)), %arg5: i32 loc(callsite(#loc107 at #loc11))):
      %89 = arith.addi %arg4, %arg5 : i32 loc(#loc135)
      tt.reduce.return %89 : i32 loc(#loc129)
    }) : (tensor<1x2x2xi32, #blocked2>) -> tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc129)
    %51 = tt.expand_dims %50 {axis = 1 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi32, #blocked2> loc(#loc109)
    %52 = tt.broadcast %51 : tensor<1x1x2xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc110)
    %53 = arith.muli %47, %17 : tensor<1x2x2xi32, #blocked2> loc(#loc111)
    %54 = "tt.reduce"(%53) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc113 at #loc11)), %arg5: i32 loc(callsite(#loc113 at #loc11))):
      %89 = arith.addi %arg4, %arg5 : i32 loc(#loc136)
      tt.reduce.return %89 : i32 loc(#loc132)
    }) : (tensor<1x2x2xi32, #blocked2>) -> tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> loc(#loc132)
    %55 = tt.expand_dims %54 {axis = 1 : i32} : tensor<1x2xi32, #triton_gpu.slice<{dim = 1, parent = #blocked2}>> -> tensor<1x1x2xi32, #blocked2> loc(#loc115)
    %56 = tt.broadcast %55 : tensor<1x1x2xi32, #blocked2> -> tensor<1x2x2xi32, #blocked2> loc(#loc116)
    %57 = tt.reshape %52 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc117)
    %58 = tt.reshape %56 : tensor<1x2x2xi32, #blocked2> -> tensor<1x4xi32, #blocked> loc(#loc118)
    %59 = tt.bitcast %57 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc119)
    %60 = tt.bitcast %58 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc120)
    %61 = tt.bitcast %45 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc121)
    %62 = arith.cmpf ogt, %59, %60 : tensor<1x4xf32, #blocked> loc(#loc122)
    %63 = arith.xori %57, %58 : tensor<1x4xi32, #blocked> loc(#loc125)
    %64 = arith.select %62, %63, %cst_1 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc126)
    %65 = arith.xori %61, %64 : tensor<1x4xi32, #blocked> loc(#loc127)
    %66 = tt.bitcast %65 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc128)
    %67 = tt.reshape %66 : tensor<1x4xf32, #blocked> -> tensor<2x2x1xf32, #blocked1> loc(#loc102)
    %68 = tt.bitcast %67 : tensor<2x2x1xf32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc103)
    %69 = arith.muli %68, %23 : tensor<2x2x1xi32, #blocked1> loc(#loc105)
    %70 = "tt.reduce"(%69) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc107 at #loc11)), %arg5: i32 loc(callsite(#loc107 at #loc11))):
      %89 = arith.addi %arg4, %arg5 : i32 loc(#loc135)
      tt.reduce.return %89 : i32 loc(#loc129)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc129)
    %71 = tt.expand_dims %70 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc109)
    %72 = tt.broadcast %71 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc110)
    %73 = arith.muli %68, %28 : tensor<2x2x1xi32, #blocked1> loc(#loc111)
    %74 = "tt.reduce"(%73) <{axis = 1 : i32}> ({
    ^bb0(%arg4: i32 loc(callsite(#loc113 at #loc11)), %arg5: i32 loc(callsite(#loc113 at #loc11))):
      %89 = arith.addi %arg4, %arg5 : i32 loc(#loc136)
      tt.reduce.return %89 : i32 loc(#loc132)
    }) : (tensor<2x2x1xi32, #blocked1>) -> tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc132)
    %75 = tt.expand_dims %74 {axis = 1 : i32} : tensor<2x1xi32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc115)
    %76 = tt.broadcast %75 : tensor<2x1x1xi32, #blocked1> -> tensor<2x2x1xi32, #blocked1> loc(#loc116)
    %77 = tt.reshape %72 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc117)
    %78 = tt.reshape %76 : tensor<2x2x1xi32, #blocked1> -> tensor<1x4xi32, #blocked> loc(#loc118)
    %79 = tt.bitcast %77 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc119)
    %80 = tt.bitcast %78 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc120)
    %81 = tt.bitcast %66 : tensor<1x4xf32, #blocked> -> tensor<1x4xi32, #blocked> loc(#loc121)
    %82 = arith.cmpf ogt, %79, %80 : tensor<1x4xf32, #blocked> loc(#loc122)
    %83 = arith.xori %77, %78 : tensor<1x4xi32, #blocked> loc(#loc125)
    %84 = arith.select %82, %83, %cst_1 : tensor<1x4xi1, #blocked>, tensor<1x4xi32, #blocked> loc(#loc126)
    %85 = arith.xori %81, %84 : tensor<1x4xi32, #blocked> loc(#loc127)
    %86 = tt.bitcast %85 : tensor<1x4xi32, #blocked> -> tensor<1x4xf32, #blocked> loc(#loc128)
    %87 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc40)
    %88 = tt.addptr %87, %6 : tensor<1x4x!tt.ptr<f32>, #blocked>, tensor<1x4xi32, #blocked> loc(#loc40)
    tt.store %88, %86, %9 : tensor<1x4x!tt.ptr<f32>, #blocked> loc(#loc41)
    tt.return loc(#loc42)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":23:28)
#loc3 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":25:21)
#loc4 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":26:34)
#loc5 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":31:37)
#loc6 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":31:35)
#loc7 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":31:30)
#loc8 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":31:42)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:44)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:60)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":575:68)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":501:22)
#loc16 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":502:14)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":505:21)
#loc18 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:40)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:54)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":506:67)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:41)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:56)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":507:69)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":508:30)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":509:32)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":510:20)
#loc31 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":511:22)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":533:14)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":538:22)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:19)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":547:28)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:38)
#loc37 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:46)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":548:15)
#loc39 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":551:18)
#loc40 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":37:25)
#loc41 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":37:43)
#loc42 = loc("inductor_cache/ww/cwwwef7o3l5axh575l3rykxbh7pxehnk3d4227ogpvx5uwwjrppm.py":37:4)
#loc43 = loc(callsite(#loc9 at #loc10))
#loc44 = loc(callsite(#loc12 at #loc10))
#loc45 = loc(callsite(#loc13 at #loc10))
#loc46 = loc(callsite(#loc14 at #loc15))
#loc47 = loc(callsite(#loc16 at #loc15))
#loc48 = loc(callsite(#loc17 at #loc15))
#loc49 = loc(callsite(#loc18 at #loc15))
#loc50 = loc(callsite(#loc19 at #loc20))
#loc52 = loc(callsite(#loc21 at #loc19))
#loc53 = loc(callsite(#loc22 at #loc15))
#loc54 = loc(callsite(#loc23 at #loc15))
#loc55 = loc(callsite(#loc24 at #loc15))
#loc56 = loc(callsite(#loc19 at #loc25))
#loc58 = loc(callsite(#loc26 at #loc15))
#loc59 = loc(callsite(#loc27 at #loc15))
#loc60 = loc(callsite(#loc28 at #loc15))
#loc61 = loc(callsite(#loc29 at #loc15))
#loc62 = loc(callsite(#loc30 at #loc15))
#loc63 = loc(callsite(#loc31 at #loc15))
#loc64 = loc(callsite(#loc32 at #loc15))
#loc65 = loc(callsite(#loc33 at #loc15))
#loc66 = loc(callsite(#loc34 at #loc15))
#loc67 = loc(callsite(#loc35 at #loc15))
#loc68 = loc(callsite(#loc36 at #loc15))
#loc69 = loc(callsite(#loc37 at #loc15))
#loc70 = loc(callsite(#loc38 at #loc15))
#loc71 = loc(callsite(#loc39 at #loc15))
#loc72 = loc(callsite(#loc43 at #loc11))
#loc73 = loc(callsite(#loc44 at #loc11))
#loc74 = loc(callsite(#loc45 at #loc11))
#loc75 = loc(callsite(#loc46 at #loc10))
#loc76 = loc(callsite(#loc47 at #loc10))
#loc77 = loc(callsite(#loc48 at #loc10))
#loc78 = loc(callsite(#loc49 at #loc10))
#loc79 = loc(callsite(#loc50 at #loc15))
#loc81 = loc(callsite(#loc52 at #loc20))
#loc82 = loc(callsite(#loc53 at #loc10))
#loc83 = loc(callsite(#loc54 at #loc10))
#loc84 = loc(callsite(#loc55 at #loc10))
#loc85 = loc(callsite(#loc56 at #loc15))
#loc87 = loc(callsite(#loc52 at #loc25))
#loc88 = loc(callsite(#loc58 at #loc10))
#loc89 = loc(callsite(#loc59 at #loc10))
#loc90 = loc(callsite(#loc60 at #loc10))
#loc91 = loc(callsite(#loc61 at #loc10))
#loc92 = loc(callsite(#loc62 at #loc10))
#loc93 = loc(callsite(#loc63 at #loc10))
#loc94 = loc(callsite(#loc64 at #loc10))
#loc95 = loc(callsite(#loc65 at #loc10))
#loc96 = loc(callsite(#loc66 at #loc10))
#loc97 = loc(callsite(#loc67 at #loc10))
#loc98 = loc(callsite(#loc68 at #loc10))
#loc99 = loc(callsite(#loc69 at #loc10))
#loc100 = loc(callsite(#loc70 at #loc10))
#loc101 = loc(callsite(#loc71 at #loc10))
#loc102 = loc(callsite(#loc75 at #loc11))
#loc103 = loc(callsite(#loc76 at #loc11))
#loc104 = loc(callsite(#loc77 at #loc11))
#loc105 = loc(callsite(#loc78 at #loc11))
#loc106 = loc(callsite(#loc79 at #loc10))
#loc108 = loc(callsite(#loc81 at #loc15))
#loc109 = loc(callsite(#loc82 at #loc11))
#loc110 = loc(callsite(#loc83 at #loc11))
#loc111 = loc(callsite(#loc84 at #loc11))
#loc112 = loc(callsite(#loc85 at #loc10))
#loc114 = loc(callsite(#loc87 at #loc15))
#loc115 = loc(callsite(#loc88 at #loc11))
#loc116 = loc(callsite(#loc89 at #loc11))
#loc117 = loc(callsite(#loc90 at #loc11))
#loc118 = loc(callsite(#loc91 at #loc11))
#loc119 = loc(callsite(#loc92 at #loc11))
#loc120 = loc(callsite(#loc93 at #loc11))
#loc121 = loc(callsite(#loc94 at #loc11))
#loc122 = loc(callsite(#loc95 at #loc11))
#loc123 = loc(callsite(#loc96 at #loc11))
#loc124 = loc(callsite(#loc97 at #loc11))
#loc125 = loc(callsite(#loc98 at #loc11))
#loc126 = loc(callsite(#loc99 at #loc11))
#loc127 = loc(callsite(#loc100 at #loc11))
#loc128 = loc(callsite(#loc101 at #loc11))
#loc129 = loc(callsite(#loc106 at #loc11))
#loc131 = loc(callsite(#loc108 at #loc10))
#loc132 = loc(callsite(#loc112 at #loc11))
#loc134 = loc(callsite(#loc114 at #loc10))
#loc135 = loc(callsite(#loc131 at #loc11))
#loc136 = loc(callsite(#loc134 at #loc11))
