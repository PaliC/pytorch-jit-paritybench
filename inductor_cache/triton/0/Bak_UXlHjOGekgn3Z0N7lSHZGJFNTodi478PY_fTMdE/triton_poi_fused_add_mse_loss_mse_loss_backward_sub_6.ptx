//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6 // -- Begin function triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
.noreturn;
.global .align 1 .b8 assertFunc_0[8] = {117, 110, 107, 110, 111, 119, 110};
.global .align 1 .b8 assertFile_0[74] = {105, 110, 100, 117, 99, 116, 111, 114, 95, 99, 97, 99, 104, 101, 47, 101, 105, 47, 99, 101, 105, 118, 121, 107, 113, 104, 112, 50, 54, 118, 55, 54, 54, 98, 100, 113, 101, 121, 100, 113, 112, 97, 115, 101, 53, 108, 118, 120, 104, 106, 114, 117, 108, 115, 119, 102, 118, 55, 102, 109, 109, 115, 100, 113, 52, 121, 54, 115, 101, 120, 46, 112, 121};
.global .align 1 .b8 assertMessage_0[35] = {105, 110, 100, 101, 120, 32, 111, 117, 116, 32, 111, 102, 32, 98, 111, 117, 110, 100, 115, 58, 32, 48, 32, 60, 61, 32, 116, 109, 112, 52, 32, 60, 32, 52};
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6
.visible .entry triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_5,
	.param .u32 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_6,
	.param .u32 triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_7
)
.reqntid 32, 1, 1
{
	.reg .pred 	%p<20>;
	.reg .b32 	%r<79>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_0];
$L__tmp0:
	.loc	1 22 28                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:22:28
	// begin inline asm
	mov.u32 %r10, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:22:33
	shl.b32 	%r1, %r10, 4;
	ld.param.u64 	%rd11, [triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_2];
	.loc	1 23 44                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:23:44
	mov.u32 	%r2, %tid.x;
	bfe.u32 	%r15, %r2, 1, 3;
	and.b32  	%r3, %r2, 16;
	shr.u32 	%r16, %r3, 1;
	or.b32  	%r17, %r15, %r16;
	and.b32  	%r18, %r2, 1;
	.loc	1 23 23                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:23:23
	or.b32  	%r19, %r17, %r1;
	.loc	1 24 21                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:24:21
	setp.lt.s32 	%p5, %r19, 16;
	.loc	1 25 28                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:25:28
	// begin inline asm
	mov.u32 %r11, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:25:33
	shl.b32 	%r4, %r11, 1;
	.loc	1 26 23                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:26:23
	or.b32  	%r20, %r4, %r18;
	.loc	1 27 21                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:27:21
	setp.lt.s32 	%p6, %r20, 4;
	.loc	1 29 19                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:29:19
	shr.s32 	%r21, %r19, 31;
	shr.u32 	%r22, %r21, 30;
	add.s32 	%r23, %r19, %r22;
	.loc	1 32 37                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:32:37
	and.b32  	%r24, %r23, -4;
	.loc	1 32 35                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:32:35
	add.s32 	%r25, %r24, %r20;
	.loc	1 32 30                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:32:30
	mul.wide.s32 	%rd12, %r25, 8;
	add.s64 	%rd8, %rd10, %rd12;
	.loc	1 32 50                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:32:50
	and.pred  	%p3, %p5, %p6;
	not.pred 	%p7, %p3;
	.loc	1 32 42                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:32:42
	// begin inline asm
	mov.u64 %rd7, 0x0;
	@%p3 ld.global.L1::evict_last.b64 { %rd7 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 33 37                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:33:37
	shl.b32 	%r26, %r19, 2;
	.loc	1 33 35                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:33:35
	add.s32 	%r27, %r20, %r26;
	.loc	1 33 30                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:33:30
	mul.wide.s32 	%rd13, %r27, 4;
	add.s64 	%rd9, %rd11, %rd13;
	.loc	1 33 42                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:33:42
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r12 }, [ %rd9 + 0 ];
	// end inline asm
	shl.b32 	%r28, %r18, 4;
	add.s32 	%r29, %r15, %r18;
	or.b32  	%r30, %r29, %r28;
	add.s32 	%r8, %r30, %r16;
	shl.b32 	%r31, %r8, 2;
	mov.u32 	%r32, global_smem;
	add.s32 	%r13, %r32, %r31;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r12;
	// end inline asm
	bar.sync 	0;
	.loc	1 37 32                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:37:32
	shr.u64 	%rd14, %rd7, 61;
	and.b64  	%rd15, %rd14, 4;
	add.s64 	%rd2, %rd15, %rd7;
	.loc	1 38 37                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:38:37
	setp.lt.u64 	%p8, %rd2, 4;
	.loc	1 38 68                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:38:68
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:
	.loc	1 0 68                          // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:0:68
	ld.param.u64 	%rd6, [triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_5];
	ld.param.u64 	%rd5, [triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_4];
	ld.param.u64 	%rd4, [triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_3];
	ld.param.u64 	%rd3, [triton_poi_fused_add_mse_loss_mse_loss_backward_sub_6_param_1];
	shr.s32 	%r6, %r23, 2;
	.loc	1 33 0                          // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:33:0
	cvt.s64.s32 	%rd1, %r27;
	.loc	1 33 42                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:33:42
	and.b32  	%r44, %r2, 31;
	bfe.u32 	%r45, %r2, 4, 1;
	add.s32 	%r46, %r45, %r44;
	shl.b32 	%r47, %r46, 2;
	add.s32 	%r49, %r32, %r47;
	ld.shared.f32 	%f1, [%r49];
	mov.b32 	%f2, %r12;
	.loc	1 23 44                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:23:44
	and.b32  	%r50, %r2, 15;
	.loc	1 26 44                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:26:44
	shr.u32 	%r51, %r3, 4;
	.loc	1 26 23                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:26:23
	or.b32  	%r52, %r4, %r51;
	.loc	1 27 21                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:27:21
	setp.lt.s32 	%p18, %r52, 4;
	.loc	1 23 23                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:23:23
	or.b32  	%r53, %r1, %r50;
	.loc	1 24 21                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:24:21
	setp.lt.s32 	%p19, %r53, 16;
	.loc	1 32 50                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:32:50
	and.pred  	%p11, %p19, %p18;
	.loc	1 29 19                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:29:19
	shr.s32 	%r55, %r53, 31;
	shr.u32 	%r56, %r55, 30;
	add.s32 	%r57, %r53, %r56;
	.loc	1 30 19                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:30:19
	and.b32  	%r58, %r57, -4;
	sub.s32 	%r59, %r53, %r58;
	shl.b32 	%r60, %r6, 2;
	sub.s32 	%r61, %r19, %r60;
	.loc	1 38 68                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:38:68
	bar.sync 	0;
	.loc	1 39 30                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:39:30
	shl.b64 	%rd21, %rd2, 4;
	add.s64 	%rd22, %rd3, %rd21;
	mul.wide.s32 	%rd23, %r61, 4;
	add.s64 	%rd16, %rd22, %rd23;
	.loc	1 39 44                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:39:44
	bar.sync 	0;
	add.s32 	%r33, %r13, %r31;
	// begin inline asm
	@%p4 st.shared.b64 [ %r33 + 0 ], %rd16;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r63, %r49, %r47;
	ld.shared.u64 	%rd17, [%r63];
	// begin inline asm
	mov.u32 %r34, 0x0;
	@%p11 ld.global.b32 { %r34 }, [ %rd17 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r34;
	.loc	1 40 18                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:40:18
	sub.f32 	%f4, %f2, %f2;
	bar.sync 	0;
	mov.b32 	%r36, %f4;
	// begin inline asm
	@%p4 st.shared.b32 [ %r13 + 0 ], %r36;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r49];
	.loc	1 41 18                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:41:18
	add.f32 	%f6, %f5, %f3;
	.loc	1 42 19                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:42:19
	sub.f32 	%f7, %f1, %f3;
	.loc	1 44 20                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:44:20
	mul.f32 	%f8, %f7, 0f3D000000;
	.loc	1 45 19                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:45:19
	sub.f32 	%f9, %f3, %f1;
	.loc	1 46 20                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:46:20
	mul.f32 	%f10, %f9, 0f3D000000;
	.loc	1 47 25                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:47:25
	shl.b64 	%rd24, %rd1, 2;
	add.s64 	%rd18, %rd4, %rd24;
	.loc	1 47 43                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:47:43
	bar.sync 	0;
	shl.b32 	%r64, %r2, 1;
	and.b32  	%r65, %r64, 30;
	or.b32  	%r66, %r65, %r51;
	shl.b32 	%r67, %r65, 1;
	add.s32 	%r68, %r32, %r67;
	shl.b32 	%r69, %r66, 2;
	add.s32 	%r37, %r68, %r69;
	mov.b32 	%r38, %f6;
	// begin inline asm
	@%p4 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r70, %r64, 60;
	add.s32 	%r71, %r32, %r70;
	shl.b32 	%r72, %r44, 2;
	add.s32 	%r73, %r71, %r72;
	ld.shared.u32 	%r39, [%r73];
	// begin inline asm
	@%p3 st.global.b32 [ %rd18 + 0 ], { %r39 };
	// end inline asm
	.loc	1 48 25                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:48:25
	add.s64 	%rd19, %rd5, %rd24;
	.loc	1 48 44                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:48:44
	bar.sync 	0;
	mov.b32 	%r41, %f8;
	// begin inline asm
	@%p4 st.shared.b32 [ %r37 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r42, [%r73];
	// begin inline asm
	@%p3 st.global.b32 [ %rd19 + 0 ], { %r42 };
	// end inline asm
	.loc	1 49 32                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:49:32
	shl.b32 	%r74, %r52, 2;
	.loc	1 49 30                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:49:30
	add.s32 	%r75, %r74, %r59;
	.loc	1 49 40                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:49:40
	shl.b32 	%r76, %r57, 2;
	and.b32  	%r77, %r76, -16;
	.loc	1 49 37                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:49:37
	add.s32 	%r78, %r75, %r77;
	.loc	1 49 25                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:49:25
	mul.wide.s32 	%rd25, %r78, 4;
	add.s64 	%rd20, %rd6, %rd25;
	.loc	1 49 52                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:49:52
	mov.b32 	%r43, %f10;
	// begin inline asm
	@%p11 st.global.b32 [ %rd20 + 0 ], { %r43 };
	// end inline asm
	.loc	1 49 4                          // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:49:4
	ret;
$L__BB0_1:
	.loc	1 38 68                         // ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py:38:68
	mov.u64 	%rd26, assertMessage_0;
	cvta.global.u64 	%rd27, %rd26;
	mov.u64 	%rd28, assertFile_0;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, assertFunc_0;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 2, 0
	.param .b64 param0;
	st.param.b64 	[param0], %rd27;
	.param .b64 param1;
	st.param.b64 	[param1], %rd29;
	.param .b32 param2;
	st.param.b32 	[param2], 38;
	.param .b64 param3;
	st.param.b64 	[param3], %rd31;
	.param .b64 param4;
	st.param.b64 	[param4], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2
	trap;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ei/ceivykqhp26v766bdqeydqpase5lvxhjrulswfv7fmmsdq4y6sex.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 105
.b8 118
.b8 121
.b8 107
.b8 113
.b8 104
.b8 112
.b8 50
.b8 54
.b8 118
.b8 55
.b8 54
.b8 54
.b8 98
.b8 100
.b8 113
.b8 101
.b8 121
.b8 100
.b8 113
.b8 112
.b8 97
.b8 115
.b8 101
.b8 53
.b8 108
.b8 118
.b8 120
.b8 104
.b8 106
.b8 114
.b8 117
.b8 108
.b8 115
.b8 119
.b8 102
.b8 118
.b8 55
.b8 102
.b8 109
.b8 109
.b8 115
.b8 100
.b8 113
.b8 52
.b8 121
.b8 54
.b8 115
.b8 101
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 105
.b8 0
	}
	.section	.debug_macinfo	{	}
