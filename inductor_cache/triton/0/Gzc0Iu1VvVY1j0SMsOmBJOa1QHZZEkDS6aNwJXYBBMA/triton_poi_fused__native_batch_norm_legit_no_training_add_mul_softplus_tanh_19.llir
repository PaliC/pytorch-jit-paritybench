; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 256, !dbg !14
  %16 = srem i32 %14, 64, !dbg !15
  %17 = sext i32 %14 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !16
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %15) #3, !dbg !17
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !17
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !17
  %22 = bitcast i32 %20 to float, !dbg !17
  %23 = bitcast i32 %21 to float, !dbg !17
  %24 = sext i32 %16 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !18
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 %15) #3, !dbg !19
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !19
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !19
  %29 = bitcast i32 %27 to float, !dbg !19
  %30 = bitcast i32 %28 to float, !dbg !19
  %31 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !20
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %15) #3, !dbg !21
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !21
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = bitcast i32 %34 to float, !dbg !21
  %37 = getelementptr float, ptr addrspace(1) %4, i64 %24, !dbg !22
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 %15) #3, !dbg !23
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !23
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !23
  %41 = bitcast i32 %39 to float, !dbg !23
  %42 = bitcast i32 %40 to float, !dbg !23
  %43 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !24
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %43, i1 %15) #3, !dbg !25
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !25
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !25
  %47 = bitcast i32 %45 to float, !dbg !25
  %48 = bitcast i32 %46 to float, !dbg !25
  %49 = getelementptr float, ptr addrspace(1) %6, i64 %17, !dbg !26
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %49, i1 %15) #3, !dbg !27
  %51 = fsub float %22, %29, !dbg !28
  %52 = fsub float %23, %30, !dbg !28
  %53 = fadd float %35, 0x3EE4F8B580000000, !dbg !29
  %54 = fadd float %36, 0x3EE4F8B580000000, !dbg !29
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i = icmp eq i32 %55, 0, !dbg !30
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i = icmp eq i32 %56, 0, !dbg !30
  br i1 %.not.i, label %62, label %57, !dbg !30

57:                                               ; preds = %8
  br i1 %.not1.i, label %60, label %58, !dbg !30

58:                                               ; preds = %57
  %59 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %53) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

60:                                               ; preds = %57
  %61 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %53) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

62:                                               ; preds = %8
  br i1 %.not1.i, label %65, label %63, !dbg !30

63:                                               ; preds = %62
  %64 = tail call float @llvm.nvvm.sqrt.rn.f(float %53) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

65:                                               ; preds = %62
  %66 = tail call float @llvm.nvvm.sqrt.approx.f(float %53) #3, !dbg !30
  br label %__nv_sqrtf.exit, !dbg !30

__nv_sqrtf.exit:                                  ; preds = %58, %60, %63, %65
  %.0.i = phi float [ %59, %58 ], [ %61, %60 ], [ %64, %63 ], [ %66, %65 ], !dbg !30
  %67 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !30
  %.not.i1 = icmp eq i32 %67, 0, !dbg !30
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !30
  %.not1.i4 = icmp eq i32 %68, 0, !dbg !30
  br i1 %.not.i1, label %74, label %69, !dbg !30

69:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %72, label %70, !dbg !30

70:                                               ; preds = %69
  %71 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %54) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

72:                                               ; preds = %69
  %73 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %54) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

74:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %77, label %75, !dbg !30

75:                                               ; preds = %74
  %76 = tail call float @llvm.nvvm.sqrt.rn.f(float %54) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

77:                                               ; preds = %74
  %78 = tail call float @llvm.nvvm.sqrt.approx.f(float %54) #3, !dbg !30
  br label %__nv_sqrtf.exit5, !dbg !30

__nv_sqrtf.exit5:                                 ; preds = %70, %72, %75, %77
  %.0.i3 = phi float [ %71, %70 ], [ %73, %72 ], [ %76, %75 ], [ %78, %77 ], !dbg !30
  %79 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !31
  %80 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !31
  %81 = fmul float %51, %79, !dbg !32
  %82 = fmul float %52, %80, !dbg !32
  %83 = fmul float %81, %41, !dbg !33
  %84 = fmul float %82, %42, !dbg !33
  %85 = fadd float %83, %47, !dbg !34
  %86 = fadd float %84, %48, !dbg !34
  %87 = fcmp ogt float %85, 2.000000e+01, !dbg !35
  %88 = fcmp ogt float %86, 2.000000e+01, !dbg !35
  %89 = fmul float %85, 0x3FF7154760000000, !dbg !36
  %90 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %89) #3, !dbg !36
  %91 = fmul float %86, 0x3FF7154760000000, !dbg !36
  %92 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %91) #3, !dbg !36
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i29 = icmp eq i32 %93, 0, !dbg !37
  %94 = tail call float @llvm.nvvm.add.rz.ftz.f(float %90, float 1.000000e+00) #3, !dbg !37
  %95 = tail call float @llvm.nvvm.add.rz.f(float %90, float 1.000000e+00) #3, !dbg !37
  %.01.i30 = select i1 %.not.i29, float %95, float %94, !dbg !37
  %96 = bitcast float %.01.i30 to i32, !dbg !37
  %97 = add i32 %96, -1061158912, !dbg !37
  %98 = and i32 %97, -8388608, !dbg !37
  %99 = bitcast float %90 to i32, !dbg !37
  %100 = sub i32 %99, %98, !dbg !37
  %101 = bitcast i32 %100 to float, !dbg !37
  %102 = sub i32 1082130432, %98, !dbg !37
  %103 = bitcast i32 %102 to float, !dbg !37
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not14.i = icmp eq i32 %104, 0, !dbg !37
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %103, float -1.000000e+00) #3, !dbg !37
  %106 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %103, float -1.000000e+00) #3, !dbg !37
  %.09.i = select i1 %.not14.i, float %106, float %105, !dbg !37
  %107 = fadd float %.09.i, %101, !dbg !37
  %108 = sitofp i32 %98 to float, !dbg !37
  %109 = fmul float %108, 0x3E80000000000000, !dbg !37
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not15.i = icmp eq i32 %110, 0, !dbg !37
  %111 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %107, float 0x3FBB000240000000) #3, !dbg !37
  %112 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %107, float 0x3FBB000240000000) #3, !dbg !37
  %.012.i = select i1 %.not15.i, float %112, float %111, !dbg !37
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not16.i = icmp eq i32 %113, 0, !dbg !37
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %107, float 0xBFC0EF1C00000000) #3, !dbg !37
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %107, float 0xBFC0EF1C00000000) #3, !dbg !37
  %.010.i = select i1 %.not16.i, float %115, float %114, !dbg !37
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not17.i = icmp eq i32 %116, 0, !dbg !37
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %107, float 0x3FC28C8EA0000000) #3, !dbg !37
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %107, float 0x3FC28C8EA0000000) #3, !dbg !37
  %.06.i31 = select i1 %.not17.i, float %118, float %117, !dbg !37
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not18.i = icmp eq i32 %119, 0, !dbg !37
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i31, float %107, float 0xBFC54D1BA0000000) #3, !dbg !37
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i31, float %107, float 0xBFC54D1BA0000000) #3, !dbg !37
  %.02.i32 = select i1 %.not18.i, float %121, float %120, !dbg !37
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not19.i = icmp eq i32 %122, 0, !dbg !37
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i32, float %107, float 0x3FC995F3C0000000) #3, !dbg !37
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i32, float %107, float 0x3FC995F3C0000000) #3, !dbg !37
  %.0.i33 = select i1 %.not19.i, float %124, float %123, !dbg !37
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not20.i = icmp eq i32 %125, 0, !dbg !37
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i33, float %107, float 0xBFD0000840000000) #3, !dbg !37
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i33, float %107, float 0xBFD0000840000000) #3, !dbg !37
  %.011.i = select i1 %.not20.i, float %127, float %126, !dbg !37
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not21.i = icmp eq i32 %128, 0, !dbg !37
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %107, float 0x3FD5555CC0000000) #3, !dbg !37
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %107, float 0x3FD5555CC0000000) #3, !dbg !37
  %.08.i = select i1 %.not21.i, float %130, float %129, !dbg !37
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not22.i = icmp eq i32 %131, 0, !dbg !37
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %107, float -5.000000e-01) #3, !dbg !37
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %107, float -5.000000e-01) #3, !dbg !37
  %.07.i = select i1 %.not22.i, float %133, float %132, !dbg !37
  %134 = fmul float %107, %.07.i, !dbg !37
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not23.i = icmp eq i32 %135, 0, !dbg !37
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %134, float %107, float %107) #3, !dbg !37
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %134, float %107, float %107) #3, !dbg !37
  %.05.i34 = select i1 %.not23.i, float %137, float %136, !dbg !37
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not24.i = icmp eq i32 %138, 0, !dbg !37
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %109, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !37
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %109, float 0x3FE62E4300000000, float %.05.i34) #3, !dbg !37
  %.04.i35 = select i1 %.not24.i, float %140, float %139, !dbg !37
  %141 = icmp ugt i32 %99, 2139095039, !dbg !37
  br i1 %141, label %142, label %__nv_log1pf.exit, !dbg !37

142:                                              ; preds = %__nv_sqrtf.exit5
  %143 = icmp sgt i32 %99, -1082130432, !dbg !37
  br i1 %143, label %__nv_fmaf_rn.exit.i, label %147, !dbg !37

__nv_fmaf_rn.exit.i:                              ; preds = %142
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not25.i = icmp eq i32 %144, 0, !dbg !37
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %90, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !37
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %90, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !37
  %.03.i36 = select i1 %.not25.i, float %146, float %145, !dbg !37
  br label %147, !dbg !37

147:                                              ; preds = %__nv_fmaf_rn.exit.i, %142
  %r.0.i = phi float [ %.03.i36, %__nv_fmaf_rn.exit.i ], [ %.04.i35, %142 ], !dbg !37
  %148 = fcmp oeq float %90, 0.000000e+00, !dbg !37
  %r.1.i = select i1 %148, float -0.000000e+00, float %r.0.i, !dbg !37
  br label %__nv_log1pf.exit, !dbg !37

__nv_log1pf.exit:                                 ; preds = %__nv_sqrtf.exit5, %147
  %r.2.i = phi float [ %r.1.i, %147 ], [ %.04.i35, %__nv_sqrtf.exit5 ], !dbg !37
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i37 = icmp eq i32 %149, 0, !dbg !37
  %150 = tail call float @llvm.nvvm.add.rz.ftz.f(float %92, float 1.000000e+00) #3, !dbg !37
  %151 = tail call float @llvm.nvvm.add.rz.f(float %92, float 1.000000e+00) #3, !dbg !37
  %.01.i38 = select i1 %.not.i37, float %151, float %150, !dbg !37
  %152 = bitcast float %.01.i38 to i32, !dbg !37
  %153 = add i32 %152, -1061158912, !dbg !37
  %154 = and i32 %153, -8388608, !dbg !37
  %155 = bitcast float %92 to i32, !dbg !37
  %156 = sub i32 %155, %154, !dbg !37
  %157 = bitcast i32 %156 to float, !dbg !37
  %158 = sub i32 1082130432, %154, !dbg !37
  %159 = bitcast i32 %158 to float, !dbg !37
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not14.i39 = icmp eq i32 %160, 0, !dbg !37
  %161 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %159, float -1.000000e+00) #3, !dbg !37
  %162 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %159, float -1.000000e+00) #3, !dbg !37
  %.09.i40 = select i1 %.not14.i39, float %162, float %161, !dbg !37
  %163 = fadd float %.09.i40, %157, !dbg !37
  %164 = sitofp i32 %154 to float, !dbg !37
  %165 = fmul float %164, 0x3E80000000000000, !dbg !37
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not15.i41 = icmp eq i32 %166, 0, !dbg !37
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %163, float 0x3FBB000240000000) #3, !dbg !37
  %168 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %163, float 0x3FBB000240000000) #3, !dbg !37
  %.012.i42 = select i1 %.not15.i41, float %168, float %167, !dbg !37
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not16.i43 = icmp eq i32 %169, 0, !dbg !37
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i42, float %163, float 0xBFC0EF1C00000000) #3, !dbg !37
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i42, float %163, float 0xBFC0EF1C00000000) #3, !dbg !37
  %.010.i44 = select i1 %.not16.i43, float %171, float %170, !dbg !37
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not17.i45 = icmp eq i32 %172, 0, !dbg !37
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i44, float %163, float 0x3FC28C8EA0000000) #3, !dbg !37
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i44, float %163, float 0x3FC28C8EA0000000) #3, !dbg !37
  %.06.i46 = select i1 %.not17.i45, float %174, float %173, !dbg !37
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not18.i47 = icmp eq i32 %175, 0, !dbg !37
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i46, float %163, float 0xBFC54D1BA0000000) #3, !dbg !37
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i46, float %163, float 0xBFC54D1BA0000000) #3, !dbg !37
  %.02.i48 = select i1 %.not18.i47, float %177, float %176, !dbg !37
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not19.i49 = icmp eq i32 %178, 0, !dbg !37
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i48, float %163, float 0x3FC995F3C0000000) #3, !dbg !37
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i48, float %163, float 0x3FC995F3C0000000) #3, !dbg !37
  %.0.i50 = select i1 %.not19.i49, float %180, float %179, !dbg !37
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not20.i51 = icmp eq i32 %181, 0, !dbg !37
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i50, float %163, float 0xBFD0000840000000) #3, !dbg !37
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i50, float %163, float 0xBFD0000840000000) #3, !dbg !37
  %.011.i52 = select i1 %.not20.i51, float %183, float %182, !dbg !37
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not21.i53 = icmp eq i32 %184, 0, !dbg !37
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i52, float %163, float 0x3FD5555CC0000000) #3, !dbg !37
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i52, float %163, float 0x3FD5555CC0000000) #3, !dbg !37
  %.08.i54 = select i1 %.not21.i53, float %186, float %185, !dbg !37
  %187 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not22.i55 = icmp eq i32 %187, 0, !dbg !37
  %188 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i54, float %163, float -5.000000e-01) #3, !dbg !37
  %189 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i54, float %163, float -5.000000e-01) #3, !dbg !37
  %.07.i56 = select i1 %.not22.i55, float %189, float %188, !dbg !37
  %190 = fmul float %163, %.07.i56, !dbg !37
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not23.i57 = icmp eq i32 %191, 0, !dbg !37
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %190, float %163, float %163) #3, !dbg !37
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %190, float %163, float %163) #3, !dbg !37
  %.05.i58 = select i1 %.not23.i57, float %193, float %192, !dbg !37
  %194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not24.i59 = icmp eq i32 %194, 0, !dbg !37
  %195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %165, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !37
  %196 = tail call float @llvm.nvvm.fma.rn.f(float %165, float 0x3FE62E4300000000, float %.05.i58) #3, !dbg !37
  %.04.i60 = select i1 %.not24.i59, float %196, float %195, !dbg !37
  %197 = icmp ugt i32 %155, 2139095039, !dbg !37
  br i1 %197, label %198, label %__nv_log1pf.exit67, !dbg !37

198:                                              ; preds = %__nv_log1pf.exit
  %199 = icmp sgt i32 %155, -1082130432, !dbg !37
  br i1 %199, label %__nv_fmaf_rn.exit.i64, label %203, !dbg !37

__nv_fmaf_rn.exit.i64:                            ; preds = %198
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not25.i65 = icmp eq i32 %200, 0, !dbg !37
  %201 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %92, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !37
  %202 = tail call float @llvm.nvvm.fma.rn.f(float %92, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !37
  %.03.i66 = select i1 %.not25.i65, float %202, float %201, !dbg !37
  br label %203, !dbg !37

203:                                              ; preds = %__nv_fmaf_rn.exit.i64, %198
  %r.0.i62 = phi float [ %.03.i66, %__nv_fmaf_rn.exit.i64 ], [ %.04.i60, %198 ], !dbg !37
  %204 = fcmp oeq float %92, 0.000000e+00, !dbg !37
  %r.1.i63 = select i1 %204, float -0.000000e+00, float %r.0.i62, !dbg !37
  br label %__nv_log1pf.exit67, !dbg !37

__nv_log1pf.exit67:                               ; preds = %__nv_log1pf.exit, %203
  %r.2.i61 = phi float [ %r.1.i63, %203 ], [ %.04.i60, %__nv_log1pf.exit ], !dbg !37
  %205 = select i1 %87, float %85, float %r.2.i, !dbg !38
  %206 = select i1 %88, float %86, float %r.2.i61, !dbg !38
  %207 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not.i6 = icmp eq i32 %207, 0, !dbg !39
  %208 = tail call float @llvm.nvvm.fabs.ftz.f(float %205) #3, !dbg !39
  %209 = tail call float @llvm.nvvm.fabs.f(float %205) #3, !dbg !39
  %.01.i = select i1 %.not.i6, float %209, float %208, !dbg !39
  %210 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !39
  br i1 %210, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !39

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit67
  %211 = fmul float %.01.i, 0x4007154760000000, !dbg !39
  %212 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %211) #3, !dbg !39
  %213 = fadd float %212, 1.000000e+00, !dbg !39
  %214 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %213) #4, !dbg !39, !srcloc !40
  %215 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not6.i = icmp eq i32 %215, 0, !dbg !39
  %216 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %214, float -2.000000e+00, float 1.000000e+00) #3, !dbg !39
  %217 = tail call float @llvm.nvvm.fma.rn.f(float %214, float -2.000000e+00, float 1.000000e+00) #3, !dbg !39
  %.03.i = select i1 %.not6.i, float %217, float %216, !dbg !39
  %218 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !39
  %s.0.i = select i1 %218, float 1.000000e+00, float %.03.i, !dbg !39
  %219 = bitcast float %s.0.i to i32, !dbg !39
  %220 = bitcast float %205 to i32, !dbg !39
  %221 = and i32 %220, -2147483648, !dbg !39
  %222 = or i32 %221, %219, !dbg !39
  %223 = bitcast i32 %222 to float, !dbg !39
  br label %__nv_tanhf.exit, !dbg !39

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit67
  %224 = fmul float %205, %205, !dbg !39
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not1.i7 = icmp eq i32 %225, 0, !dbg !39
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %224, float 0xBFAAC795C0000000) #3, !dbg !39
  %227 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %224, float 0xBFAAC795C0000000) #3, !dbg !39
  %.06.i = select i1 %.not1.i7, float %227, float %226, !dbg !39
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not2.i8 = icmp eq i32 %228, 0, !dbg !39
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %224, float 0x3FC10B2820000000) #3, !dbg !39
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %224, float 0x3FC10B2820000000) #3, !dbg !39
  %.05.i = select i1 %.not2.i8, float %230, float %229, !dbg !39
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not3.i = icmp eq i32 %231, 0, !dbg !39
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %224, float 0xBFD5553DA0000000) #3, !dbg !39
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %224, float 0xBFD5553DA0000000) #3, !dbg !39
  %.0.i9 = select i1 %.not3.i, float %233, float %232, !dbg !39
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not4.i = icmp eq i32 %234, 0, !dbg !39
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i9, float %224, float 0.000000e+00) #3, !dbg !39
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i9, float %224, float 0.000000e+00) #3, !dbg !39
  %.04.i = select i1 %.not4.i, float %236, float %235, !dbg !39
  %237 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not5.i = icmp eq i32 %237, 0, !dbg !39
  %238 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %205, float %205) #3, !dbg !39
  %239 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %205, float %205) #3, !dbg !39
  %.02.i = select i1 %.not5.i, float %239, float %238, !dbg !39
  br label %__nv_tanhf.exit, !dbg !39

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %223, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !39
  %240 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not.i10 = icmp eq i32 %240, 0, !dbg !39
  %241 = tail call float @llvm.nvvm.fabs.ftz.f(float %206) #3, !dbg !39
  %242 = tail call float @llvm.nvvm.fabs.f(float %206) #3, !dbg !39
  %.01.i11 = select i1 %.not.i10, float %242, float %241, !dbg !39
  %243 = fcmp ult float %.01.i11, 0x3FE3333340000000, !dbg !39
  br i1 %243, label %__internal_fmad.exit3.i17, label %__internal_fmad.exit1.i12, !dbg !39

__internal_fmad.exit1.i12:                        ; preds = %__nv_tanhf.exit
  %244 = fmul float %.01.i11, 0x4007154760000000, !dbg !39
  %245 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %244) #3, !dbg !39
  %246 = fadd float %245, 1.000000e+00, !dbg !39
  %247 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %246) #4, !dbg !39, !srcloc !40
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not6.i13 = icmp eq i32 %248, 0, !dbg !39
  %249 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %247, float -2.000000e+00, float 1.000000e+00) #3, !dbg !39
  %250 = tail call float @llvm.nvvm.fma.rn.f(float %247, float -2.000000e+00, float 1.000000e+00) #3, !dbg !39
  %.03.i14 = select i1 %.not6.i13, float %250, float %249, !dbg !39
  %251 = fcmp oge float %.01.i11, 0x4022059680000000, !dbg !39
  %s.0.i15 = select i1 %251, float 1.000000e+00, float %.03.i14, !dbg !39
  %252 = bitcast float %s.0.i15 to i32, !dbg !39
  %253 = bitcast float %206 to i32, !dbg !39
  %254 = and i32 %253, -2147483648, !dbg !39
  %255 = or i32 %254, %252, !dbg !39
  %256 = bitcast i32 %255 to float, !dbg !39
  br label %__nv_tanhf.exit28, !dbg !39

__internal_fmad.exit3.i17:                        ; preds = %__nv_tanhf.exit
  %257 = fmul float %206, %206, !dbg !39
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not1.i18 = icmp eq i32 %258, 0, !dbg !39
  %259 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %257, float 0xBFAAC795C0000000) #3, !dbg !39
  %260 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %257, float 0xBFAAC795C0000000) #3, !dbg !39
  %.06.i19 = select i1 %.not1.i18, float %260, float %259, !dbg !39
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not2.i20 = icmp eq i32 %261, 0, !dbg !39
  %262 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i19, float %257, float 0x3FC10B2820000000) #3, !dbg !39
  %263 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i19, float %257, float 0x3FC10B2820000000) #3, !dbg !39
  %.05.i21 = select i1 %.not2.i20, float %263, float %262, !dbg !39
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not3.i22 = icmp eq i32 %264, 0, !dbg !39
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i21, float %257, float 0xBFD5553DA0000000) #3, !dbg !39
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i21, float %257, float 0xBFD5553DA0000000) #3, !dbg !39
  %.0.i23 = select i1 %.not3.i22, float %266, float %265, !dbg !39
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not4.i24 = icmp eq i32 %267, 0, !dbg !39
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i23, float %257, float 0.000000e+00) #3, !dbg !39
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i23, float %257, float 0.000000e+00) #3, !dbg !39
  %.04.i25 = select i1 %.not4.i24, float %269, float %268, !dbg !39
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !39
  %.not5.i26 = icmp eq i32 %270, 0, !dbg !39
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i25, float %206, float %206) #3, !dbg !39
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i25, float %206, float %206) #3, !dbg !39
  %.02.i27 = select i1 %.not5.i26, float %272, float %271, !dbg !39
  br label %__nv_tanhf.exit28, !dbg !39

__nv_tanhf.exit28:                                ; preds = %__internal_fmad.exit1.i12, %__internal_fmad.exit3.i17
  %s.1.i16 = phi float [ %256, %__internal_fmad.exit1.i12 ], [ %.02.i27, %__internal_fmad.exit3.i17 ], !dbg !39
  %273 = extractvalue { i32, i32 } %50, 1, !dbg !27
  %274 = bitcast i32 %273 to float, !dbg !27
  %275 = extractvalue { i32, i32 } %50, 0, !dbg !27
  %276 = bitcast i32 %275 to float, !dbg !27
  %277 = fmul float %85, %s.1.i, !dbg !41
  %278 = fmul float %86, %s.1.i16, !dbg !41
  %279 = fadd float %277, %276, !dbg !42
  %280 = fadd float %278, %274, !dbg !42
  %281 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !43
  %282 = bitcast float %279 to i32, !dbg !44
  %283 = bitcast float %280 to i32, !dbg !44
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %282, i32 %283, ptr addrspace(1) %281, i1 %15) #3, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctogwifzv4cfkhojma27sqrlbt2zn5ivq5xhx6kh7nglumgqdhea.py", directory: "inductor_cache/to")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_add_mul_softplus_tanh_19", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 31, scope: !7)
!23 = !DILocation(line: 29, column: 36, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 36, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 34, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 26, scope: !7)
!31 = !DILocation(line: 37, column: 18, scope: !7)
!32 = !DILocation(line: 40, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 20, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 44, column: 20, scope: !7)
!36 = !DILocation(line: 45, column: 24, scope: !7)
!37 = !DILocation(line: 46, column: 28, scope: !7)
!38 = !DILocation(line: 47, column: 35, scope: !7)
!39 = !DILocation(line: 48, column: 27, scope: !7)
!40 = !{i32 21046}
!41 = !DILocation(line: 49, column: 20, scope: !7)
!42 = !DILocation(line: 50, column: 20, scope: !7)
!43 = !DILocation(line: 51, column: 28, scope: !7)
!44 = !DILocation(line: 51, column: 40, scope: !7)
!45 = !DILocation(line: 51, column: 4, scope: !7)
