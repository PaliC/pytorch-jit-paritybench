//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused__native_batch_norm_legit_no_training_6 // -- Begin function triton_poi_fused__native_batch_norm_legit_no_training_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_poi_fused__native_batch_norm_legit_no_training_6
.visible .entry triton_poi_fused__native_batch_norm_legit_no_training_6(
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_6_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_6_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_6_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_6_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_6_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused__native_batch_norm_legit_no_training_6_param_5,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_6_param_6,
	.param .u32 triton_poi_fused__native_batch_norm_legit_no_training_6_param_7
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b32 	%r<161>;
	.reg .f32 	%f<72>;
	.reg .b64 	%rd<28>;
	.loc	1 19 0                          // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd13, [triton_poi_fused__native_batch_norm_legit_no_training_6_param_0];
	ld.param.u64 	%rd14, [triton_poi_fused__native_batch_norm_legit_no_training_6_param_1];
$L__tmp0:
	.loc	1 22 28                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:22:33
	shl.b32 	%r94, %r1, 8;
	ld.param.u64 	%rd15, [triton_poi_fused__native_batch_norm_legit_no_training_6_param_2];
	.loc	1 23 44                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:23:44
	mov.u32 	%r95, %tid.x;
	ld.param.u64 	%rd16, [triton_poi_fused__native_batch_norm_legit_no_training_6_param_3];
	shl.b32 	%r97, %r95, 2;
	ld.param.u64 	%rd17, [triton_poi_fused__native_batch_norm_legit_no_training_6_param_4];
	and.b32  	%r98, %r97, 252;
	ld.param.u64 	%rd18, [triton_poi_fused__native_batch_norm_legit_no_training_6_param_5];
	and.b32  	%r99, %r95, 255;
	.loc	1 23 23                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:23:23
	or.b32  	%r100, %r94, %r98;
	or.b32  	%r101, %r94, %r99;
	.loc	1 25 28                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:25:33
	shl.b32 	%r102, %r2, 4;
	.loc	1 26 44                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:26:44
	bfe.u32 	%r103, %r95, 6, 2;
	.loc	1 26 23                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:26:23
	or.b32  	%r104, %r102, %r103;
	.loc	1 30 19                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:30:19
	bfe.s32 	%r105, %r1, 23, 1;
	.loc	1 29 19                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:29:19
	shr.u32 	%r106, %r105, 21;
	.loc	1 30 19                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:30:19
	add.s32 	%r107, %r100, %r106;
	.loc	1 29 19                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:29:19
	and.b32  	%r108, %r107, -2048;
	sub.s32 	%r109, %r100, %r108;
	add.s32 	%r110, %r101, %r106;
	and.b32  	%r111, %r110, -2048;
	sub.s32 	%r112, %r101, %r111;
	.loc	1 26 23                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:26:23
	shl.b32 	%r113, %r104, 11;
	.loc	1 32 53                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:32:53
	shl.b32 	%r114, %r107, 12;
	and.b32  	%r115, %r114, -8388608;
	.loc	1 32 35                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:32:35
	add.s32 	%r116, %r115, %r109;
	.loc	1 32 45                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:32:45
	add.s32 	%r117, %r116, %r113;
	add.s32 	%r118, %r117, 8192;
	add.s32 	%r119, %r117, 16384;
	add.s32 	%r120, %r117, 24576;
	.loc	1 32 30                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:32:30
	mul.wide.s32 	%rd19, %r117, 4;
	add.s64 	%rd1, %rd13, %rd19;
	mul.wide.s32 	%rd20, %r118, 4;
	add.s64 	%rd2, %rd13, %rd20;
	mul.wide.s32 	%rd21, %r119, 4;
	add.s64 	%rd3, %rd13, %rd21;
	mul.wide.s32 	%rd22, %r120, 4;
	add.s64 	%rd4, %rd13, %rd22;
	mov.pred 	%p1, -1;
	.loc	1 32 58                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:32:58
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r20, %r21, %r22, %r23 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	mov.u32 %r33, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r30, %r31, %r32, %r33 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	mov.u32 %r38, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r35, %r36, %r37, %r38 }, [ %rd4 + 0 ];
	// end inline asm
	and.b32  	%r121, %r97, 1020;
	shr.u32 	%r122, %r95, 2;
	and.b32  	%r123, %r122, 48;
	mov.u32 	%r124, global_smem;
	add.s32 	%r125, %r124, %r123;
	shl.b32 	%r126, %r121, 2;
	add.s32 	%r19, %r125, %r126;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r19 + 0 ], { %r20, %r21, %r22, %r23 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r127, %r99, 2;
	add.s32 	%r128, %r124, %r127;
	ld.shared.f32 	%f1, [%r128];
	ld.shared.f32 	%f2, [%r128+1040];
	ld.shared.f32 	%f3, [%r128+2080];
	ld.shared.f32 	%f4, [%r128+3120];
	bar.sync 	0;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r19 + 0 ], { %r25, %r26, %r27, %r28 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f5, [%r128];
	ld.shared.f32 	%f6, [%r128+1040];
	ld.shared.f32 	%f7, [%r128+2080];
	ld.shared.f32 	%f8, [%r128+3120];
	bar.sync 	0;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r19 + 0 ], { %r30, %r31, %r32, %r33 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f9, [%r128];
	ld.shared.f32 	%f10, [%r128+1040];
	ld.shared.f32 	%f11, [%r128+2080];
	ld.shared.f32 	%f12, [%r128+3120];
	bar.sync 	0;
	// begin inline asm
	@%p1 st.shared.v4.b32 [ %r19 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f13, [%r128];
	ld.shared.f32 	%f14, [%r128+1040];
	ld.shared.f32 	%f15, [%r128+2080];
	ld.shared.f32 	%f16, [%r128+3120];
	.loc	1 33 30                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:33:30
	mul.wide.s32 	%rd23, %r112, 4;
	add.s64 	%rd5, %rd14, %rd23;
	.loc	1 33 35                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:33:35
	// begin inline asm
	mov.u32 %r39, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r39 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 30                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:34:30
	add.s64 	%rd6, %rd15, %rd23;
	.loc	1 34 35                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:34:35
	// begin inline asm
	mov.u32 %r40, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r40 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f17, %r40;
	.loc	1 35 31                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:35:31
	add.s64 	%rd7, %rd16, %rd23;
	.loc	1 35 36                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:35:36
	// begin inline asm
	mov.u32 %r41, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r41 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 36 31                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:36:31
	add.s64 	%rd8, %rd17, %rd23;
	.loc	1 36 36                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:36:36
	// begin inline asm
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r42 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 39 18                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:39:18
	add.f32 	%f18, %f17, 0f3727C5AC;
	.loc	1 40 26                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:40:26
	sqrt.approx.ftz.f32 	%f19, %f18;
	.loc	1 33 35                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:33:35
	mov.b32 	%f20, %r39;
	.loc	1 37 18                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:37:18
	sub.f32 	%f21, %f16, %f20;
	sub.f32 	%f22, %f15, %f20;
	sub.f32 	%f23, %f14, %f20;
	sub.f32 	%f24, %f13, %f20;
	sub.f32 	%f25, %f12, %f20;
	sub.f32 	%f26, %f11, %f20;
	sub.f32 	%f27, %f10, %f20;
	sub.f32 	%f28, %f9, %f20;
	sub.f32 	%f29, %f8, %f20;
	sub.f32 	%f30, %f7, %f20;
	sub.f32 	%f31, %f6, %f20;
	sub.f32 	%f32, %f5, %f20;
	sub.f32 	%f33, %f4, %f20;
	sub.f32 	%f34, %f3, %f20;
	sub.f32 	%f35, %f2, %f20;
	sub.f32 	%f36, %f1, %f20;
	.loc	1 36 36                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:36:36
	mov.b32 	%f37, %r42;
	.loc	1 35 36                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:35:36
	mov.b32 	%f38, %r41;
	.loc	1 23 44                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:23:44
	and.b32  	%r129, %r97, 12;
	.loc	1 26 23                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:26:23
	or.b32  	%r130, %r102, %r129;
	.loc	1 23 44                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:23:44
	bfe.u32 	%r131, %r95, 2, 6;
	.loc	1 23 23                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:23:23
	or.b32  	%r132, %r94, %r131;
	.loc	1 42 18                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:42:18
	mov.b32 	%r45, %f19;
	mov.b32 	%r44, 1065353216;
	// begin inline asm
	div.full.f32 %r43, %r44, %r45;
	// end inline asm
	mov.b32 	%f39, %r43;
	.loc	1 45 19                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:45:19
	mul.f32 	%f40, %f36, %f39;
	mul.f32 	%f41, %f35, %f39;
	mul.f32 	%f42, %f34, %f39;
	mul.f32 	%f43, %f33, %f39;
	mul.f32 	%f44, %f32, %f39;
	mul.f32 	%f45, %f31, %f39;
	mul.f32 	%f46, %f30, %f39;
	mul.f32 	%f47, %f29, %f39;
	mul.f32 	%f48, %f28, %f39;
	mul.f32 	%f49, %f27, %f39;
	mul.f32 	%f50, %f26, %f39;
	mul.f32 	%f51, %f25, %f39;
	mul.f32 	%f52, %f24, %f39;
	mul.f32 	%f53, %f23, %f39;
	mul.f32 	%f54, %f22, %f39;
	mul.f32 	%f55, %f21, %f39;
	.loc	1 47 20                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:47:20
	fma.rn.f32 	%f56, %f40, %f38, %f37;
	fma.rn.f32 	%f57, %f41, %f38, %f37;
	fma.rn.f32 	%f58, %f42, %f38, %f37;
	fma.rn.f32 	%f59, %f43, %f38, %f37;
	fma.rn.f32 	%f60, %f44, %f38, %f37;
	fma.rn.f32 	%f61, %f45, %f38, %f37;
	fma.rn.f32 	%f62, %f46, %f38, %f37;
	fma.rn.f32 	%f63, %f47, %f38, %f37;
	fma.rn.f32 	%f64, %f48, %f38, %f37;
	fma.rn.f32 	%f65, %f49, %f38, %f37;
	fma.rn.f32 	%f66, %f50, %f38, %f37;
	fma.rn.f32 	%f67, %f51, %f38, %f37;
	fma.rn.f32 	%f68, %f52, %f38, %f37;
	fma.rn.f32 	%f69, %f53, %f38, %f37;
	fma.rn.f32 	%f70, %f54, %f38, %f37;
	fma.rn.f32 	%f71, %f55, %f38, %f37;
	.loc	1 23 23                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:23:23
	shl.b32 	%r133, %r132, 12;
	.loc	1 48 30                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:48:30
	add.s32 	%r134, %r130, %r133;
	add.s32 	%r135, %r134, 262144;
	add.s32 	%r136, %r134, 524288;
	add.s32 	%r137, %r134, 786432;
	.loc	1 48 25                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:48:25
	mul.wide.s32 	%rd24, %r134, 4;
	add.s64 	%rd9, %rd18, %rd24;
	mul.wide.s32 	%rd25, %r135, 4;
	add.s64 	%rd10, %rd18, %rd25;
	mul.wide.s32 	%rd26, %r136, 4;
	add.s64 	%rd11, %rd18, %rd26;
	mul.wide.s32 	%rd27, %r137, 4;
	add.s64 	%rd12, %rd18, %rd27;
	.loc	1 48 47                         // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:48:47
	bar.sync 	0;
	shl.b32 	%r138, %r95, 4;
	and.b32  	%r139, %r138, 4080;
	shr.u32 	%r140, %r139, 2;
	add.s32 	%r141, %r124, %r140;
	shl.b32 	%r142, %r139, 2;
	add.s32 	%r46, %r141, %r142;
	mov.b32 	%r47, %f56;
	// begin inline asm
	@%p1 st.shared.b32 [ %r46 + 0 ], %r47;
	// end inline asm
	add.s32 	%r48, %r46, 4;
	mov.b32 	%r49, %f57;
	// begin inline asm
	@%p1 st.shared.b32 [ %r48 + 0 ], %r49;
	// end inline asm
	add.s32 	%r50, %r46, 8;
	mov.b32 	%r51, %f58;
	// begin inline asm
	@%p1 st.shared.b32 [ %r50 + 0 ], %r51;
	// end inline asm
	add.s32 	%r52, %r46, 12;
	mov.b32 	%r53, %f59;
	// begin inline asm
	@%p1 st.shared.b32 [ %r52 + 0 ], %r53;
	// end inline asm
	add.s32 	%r54, %r46, 16;
	mov.b32 	%r55, %f60;
	// begin inline asm
	@%p1 st.shared.b32 [ %r54 + 0 ], %r55;
	// end inline asm
	add.s32 	%r56, %r46, 20;
	mov.b32 	%r57, %f61;
	// begin inline asm
	@%p1 st.shared.b32 [ %r56 + 0 ], %r57;
	// end inline asm
	add.s32 	%r58, %r46, 24;
	mov.b32 	%r59, %f62;
	// begin inline asm
	@%p1 st.shared.b32 [ %r58 + 0 ], %r59;
	// end inline asm
	add.s32 	%r60, %r46, 28;
	mov.b32 	%r61, %f63;
	// begin inline asm
	@%p1 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	add.s32 	%r62, %r46, 32;
	mov.b32 	%r63, %f64;
	// begin inline asm
	@%p1 st.shared.b32 [ %r62 + 0 ], %r63;
	// end inline asm
	add.s32 	%r64, %r46, 36;
	mov.b32 	%r65, %f65;
	// begin inline asm
	@%p1 st.shared.b32 [ %r64 + 0 ], %r65;
	// end inline asm
	add.s32 	%r66, %r46, 40;
	mov.b32 	%r67, %f66;
	// begin inline asm
	@%p1 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	add.s32 	%r68, %r46, 44;
	mov.b32 	%r69, %f67;
	// begin inline asm
	@%p1 st.shared.b32 [ %r68 + 0 ], %r69;
	// end inline asm
	add.s32 	%r70, %r46, 48;
	mov.b32 	%r71, %f68;
	// begin inline asm
	@%p1 st.shared.b32 [ %r70 + 0 ], %r71;
	// end inline asm
	add.s32 	%r72, %r46, 52;
	mov.b32 	%r73, %f69;
	// begin inline asm
	@%p1 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	add.s32 	%r74, %r46, 56;
	mov.b32 	%r75, %f70;
	// begin inline asm
	@%p1 st.shared.b32 [ %r74 + 0 ], %r75;
	// end inline asm
	add.s32 	%r76, %r46, 60;
	mov.b32 	%r77, %f71;
	// begin inline asm
	@%p1 st.shared.b32 [ %r76 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r143, %r95, 252;
	add.s32 	%r144, %r124, %r143;
	add.s32 	%r145, %r144, %r126;
	ld.shared.u32 	%r78, [%r145];
	ld.shared.u32 	%r79, [%r145+4];
	ld.shared.u32 	%r80, [%r145+8];
	ld.shared.u32 	%r81, [%r145+12];
	or.b32  	%r146, %r121, 1024;
	shr.u32 	%r147, %r146, 2;
	and.b32  	%r148, %r147, 508;
	add.s32 	%r149, %r124, %r148;
	add.s32 	%r150, %r149, %r126;
	ld.shared.u32 	%r82, [%r150+4096];
	ld.shared.u32 	%r83, [%r150+4100];
	ld.shared.u32 	%r84, [%r150+4104];
	ld.shared.u32 	%r85, [%r150+4108];
	or.b32  	%r151, %r121, 2048;
	shr.u32 	%r152, %r151, 2;
	and.b32  	%r153, %r152, 764;
	add.s32 	%r154, %r124, %r153;
	add.s32 	%r155, %r154, %r126;
	ld.shared.u32 	%r86, [%r155+8192];
	ld.shared.u32 	%r87, [%r155+8196];
	ld.shared.u32 	%r88, [%r155+8200];
	ld.shared.u32 	%r89, [%r155+8204];
	or.b32  	%r156, %r121, 3072;
	shr.u32 	%r157, %r156, 2;
	and.b32  	%r158, %r157, 1020;
	add.s32 	%r159, %r124, %r158;
	add.s32 	%r160, %r159, %r126;
	ld.shared.u32 	%r90, [%r160+12288];
	ld.shared.u32 	%r91, [%r160+12292];
	ld.shared.u32 	%r92, [%r160+12296];
	ld.shared.u32 	%r93, [%r160+12300];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r78, %r79, %r80, %r81 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r82, %r83, %r84, %r85 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd11 + 0 ], { %r86, %r87, %r88, %r89 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd12 + 0 ], { %r90, %r91, %r92, %r93 };
	// end inline asm
	.loc	1 48 4                          // cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py:48:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/el/cel75zlhimsif776biquuf3vyj4cb6tbzv372mew66xel7upupkh.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 101
.b8 108
.b8 55
.b8 53
.b8 122
.b8 108
.b8 104
.b8 105
.b8 109
.b8 115
.b8 105
.b8 102
.b8 55
.b8 55
.b8 54
.b8 98
.b8 105
.b8 113
.b8 117
.b8 117
.b8 102
.b8 51
.b8 118
.b8 121
.b8 106
.b8 52
.b8 99
.b8 98
.b8 54
.b8 116
.b8 98
.b8 122
.b8 118
.b8 51
.b8 55
.b8 50
.b8 109
.b8 101
.b8 119
.b8 54
.b8 54
.b8 120
.b8 101
.b8 108
.b8 55
.b8 117
.b8 112
.b8 117
.b8 112
.b8 107
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 101
.b8 108
.b8 0
	}
	.section	.debug_macinfo	{	}
