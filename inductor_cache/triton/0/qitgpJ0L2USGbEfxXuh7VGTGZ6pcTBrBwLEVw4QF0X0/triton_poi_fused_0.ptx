//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_0      // -- Begin function triton_poi_fused_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_0
.visible .entry triton_poi_fused_0(
	.param .u64 .ptr .global .align 1 triton_poi_fused_0_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_0_param_1,
	.param .u32 triton_poi_fused_0_param_2,
	.param .u32 triton_poi_fused_0_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<19>;
	.reg .b32 	%r<95>;
	.reg .b64 	%rd<11>;
	.loc	1 19 0                          // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_poi_fused_0_param_0];
	ld.param.u64 	%rd6, [triton_poi_fused_0_param_1];
$L__tmp0:
	.loc	1 22 29                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:22:29
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 48                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:22:48
	// begin inline asm
	mov.u32 %r2, %ctaid.z;
	// end inline asm
	.loc	1 22 69                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:22:69
	// begin inline asm
	mov.u32 %r3, %nctaid.y;
	// end inline asm
	.loc	1 22 34                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:22:34
	mad.lo.s32 	%r37, %r3, %r2, %r1;
	.loc	1 22 75                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:22:75
	shl.b32 	%r38, %r37, 5;
	.loc	1 23 44                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:23:44
	mov.u32 	%r39, %tid.x;
	bfe.u32 	%r40, %r39, 3, 4;
	or.b32  	%r41, %r40, 16;
	shl.b32 	%r42, %r39, 2;
	and.b32  	%r43, %r42, 28;
	.loc	1 23 23                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:23:23
	or.b32  	%r44, %r38, %r40;
	or.b32  	%r45, %r38, %r41;
	or.b32  	%r46, %r38, %r43;
	.loc	1 24 21                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:24:21
	setp.lt.s32 	%p13, %r44, 65536;
	setp.lt.s32 	%p14, %r45, 65536;
	setp.lt.s32 	%p15, %r46, 65536;
	.loc	1 25 28                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:25:28
	// begin inline asm
	mov.u32 %r4, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:25:33
	shl.b32 	%r47, %r4, 5;
	.loc	1 26 23                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:26:23
	or.b32  	%r48, %r47, %r43;
	or.b32  	%r49, %r47, %r40;
	or.b32  	%r50, %r47, %r41;
	.loc	1 27 21                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:27:21
	setp.lt.s32 	%p16, %r48, 100;
	setp.lt.s32 	%p17, %r49, 100;
	setp.lt.s32 	%p18, %r50, 100;
	.loc	1 31 19                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:31:19
	shr.s32 	%r52, %r46, 31;
	shr.u32 	%r53, %r52, 24;
	add.s32 	%r54, %r46, %r53;
	shr.s32 	%r55, %r54, 8;
	.loc	1 30 19                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:30:19
	and.b32  	%r56, %r54, -256;
	sub.s32 	%r57, %r46, %r56;
	.loc	1 32 35                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:32:35
	mad.lo.s32 	%r58, %r44, 100, %r48;
	mad.lo.s32 	%r59, %r45, 100, %r48;
	.loc	1 32 30                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:32:30
	mul.wide.s32 	%rd7, %r58, 4;
	add.s64 	%rd1, %rd5, %rd7;
	mul.wide.s32 	%rd8, %r59, 4;
	add.s64 	%rd2, %rd5, %rd8;
	.loc	1 32 52                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:32:52
	and.pred  	%p1, %p16, %p13;
	and.pred  	%p2, %p16, %p14;
	and.pred  	%p11, %p17, %p15;
	and.pred  	%p12, %p18, %p15;
	.loc	1 32 44                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:32:44
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r14, %r16, %r18, %r20 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r28, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r22, %r24, %r26, %r28 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 34                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:33:34
	shl.b32 	%r60, %r49, 8;
	shl.b32 	%r61, %r50, 8;
	.loc	1 33 30                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:33:30
	mad.lo.s32 	%r62, %r55, 25600, %r57;
	.loc	1 33 39                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:33:39
	add.s32 	%r63, %r62, %r60;
	add.s32 	%r64, %r62, %r61;
	.loc	1 33 25                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:33:25
	mul.wide.s32 	%rd9, %r63, 4;
	add.s64 	%rd3, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r64, 4;
	add.s64 	%rd4, %rd6, %rd10;
	.loc	1 33 56                         // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:33:56
	shl.b32 	%r65, %r39, 7;
	and.b32  	%r66, %r65, 896;
	or.b32  	%r67, %r66, %r40;
	and.b32  	%r68, %r42, 508;
	shr.u32 	%r69, %r66, 1;
	mov.u32 	%r70, global_smem;
	add.s32 	%r71, %r70, %r69;
	shl.b32 	%r72, %r67, 2;
	add.s32 	%r13, %r71, %r72;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r73, %r66, 32;
	shr.u32 	%r74, %r73, 1;
	add.s32 	%r75, %r70, %r74;
	add.s32 	%r76, %r75, %r72;
	add.s32 	%r15, %r76, 128;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r77, %r66, 64;
	shr.u32 	%r78, %r77, 1;
	add.s32 	%r79, %r70, %r78;
	add.s32 	%r80, %r79, %r72;
	add.s32 	%r17, %r80, 256;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	or.b32  	%r81, %r66, 96;
	shr.u32 	%r82, %r81, 1;
	add.s32 	%r83, %r70, %r82;
	add.s32 	%r84, %r83, %r72;
	add.s32 	%r19, %r84, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r13, 64;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r76, 192;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r80, 320;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r84, 448;
	// begin inline asm
	@%p3 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r85, %r39, 1;
	and.b32  	%r86, %r85, 240;
	add.s32 	%r87, %r70, %r86;
	shl.b32 	%r88, %r68, 2;
	add.s32 	%r89, %r87, %r88;
	or.b32  	%r90, %r68, 512;
	shr.u32 	%r91, %r90, 1;
	and.b32  	%r92, %r91, 496;
	add.s32 	%r93, %r70, %r92;
	add.s32 	%r94, %r93, %r88;
	ld.shared.v4.u32 	{%r33, %r34, %r35, %r36}, [%r94+2048];
	ld.shared.v4.u32 	{%r29, %r30, %r31, %r32}, [%r89];
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r29, %r30, %r31, %r32 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r33, %r34, %r35, %r36 };
	// end inline asm
	.loc	1 33 4                          // ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/tx/ctx32lpf4fltu22h4ben4mxqa3hb236o4oz5klrzlbyuzruoydx4.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 116
.b8 120
.b8 51
.b8 50
.b8 108
.b8 112
.b8 102
.b8 52
.b8 102
.b8 108
.b8 116
.b8 117
.b8 50
.b8 50
.b8 104
.b8 52
.b8 98
.b8 101
.b8 110
.b8 52
.b8 109
.b8 120
.b8 113
.b8 97
.b8 51
.b8 104
.b8 98
.b8 50
.b8 51
.b8 54
.b8 111
.b8 52
.b8 111
.b8 122
.b8 53
.b8 107
.b8 108
.b8 114
.b8 122
.b8 108
.b8 98
.b8 121
.b8 117
.b8 122
.b8 114
.b8 117
.b8 111
.b8 121
.b8 100
.b8 120
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 116
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
