//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_clamp_min_div_linalg_vector_norm_0 // -- Begin function triton_red_fused_clamp_min_div_linalg_vector_norm_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_red_fused_clamp_min_div_linalg_vector_norm_0
.visible .entry triton_red_fused_clamp_min_div_linalg_vector_norm_0(
	.param .u64 .ptr .global .align 1 triton_red_fused_clamp_min_div_linalg_vector_norm_0_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_clamp_min_div_linalg_vector_norm_0_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_clamp_min_div_linalg_vector_norm_0_param_2,
	.param .u32 triton_red_fused_clamp_min_div_linalg_vector_norm_0_param_3
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<30>;
	.reg .b32 	%r<98>;
	.reg .f32 	%f<47>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd3, [triton_red_fused_clamp_min_div_linalg_vector_norm_0_param_0];
	ld.param.u64 	%rd8, [triton_red_fused_clamp_min_div_linalg_vector_norm_0_param_1];
$L__tmp0:
	.loc	1 25 33                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:25:33
	mov.u32 	%r72, %tid.x;
	and.b32  	%r73, %r72, 31;
	ld.param.u64 	%rd9, [triton_red_fused_clamp_min_div_linalg_vector_norm_0_param_2];
	shl.b32 	%r74, %r72, 2;
	and.b32  	%r75, %r74, 2044;
	.loc	1 27 36                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:27:36
	cvt.u64.u32 	%rd10, %r75;
	.loc	1 31 34                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:31:34
	mul.wide.u32 	%rd11, %r75, 4;
	add.s64 	%rd1, %rd8, %rd11;
	mov.b32 	%r5, 0;
	mov.pred 	%p1, -1;
	.loc	1 31 39                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:31:39
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r1, %r5;
	@!%p1 mov.u32 %r2, %r5;
	@!%p1 mov.u32 %r3, %r5;
	@!%p1 mov.u32 %r4, %r5;
	// end inline asm
	mov.b32 	%f1, %r3;
	mov.b32 	%f2, %r4;
	.loc	1 32 22                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:32:22
	mul.f32 	%f3, %f1, %f1;
	mul.f32 	%f4, %f2, %f2;
	.loc	1 28 27                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:28:27
	or.b64  	%rd12, %rd10, 2048;
	.loc	1 29 25                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:29:25
	setp.lt.u64 	%p6, %rd12, 3072;
	.loc	1 31 34                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:31:34
	add.s64 	%rd2, %rd1, 8192;
	.loc	1 31 39                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:31:39
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r9, %r5;
	@!%p6 mov.u32 %r10, %r5;
	@!%p6 mov.u32 %r11, %r5;
	@!%p6 mov.u32 %r12, %r5;
	// end inline asm
	mov.b32 	%f5, %r11;
	mov.b32 	%f6, %r12;
	.loc	1 34 23                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:34:23
	fma.rn.f32 	%f7, %f5, %f5, %f3;
	fma.rn.f32 	%f8, %f6, %f6, %f4;
	.loc	1 31 39                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:31:39
	mov.b32 	%f9, %r1;
	mov.b32 	%f10, %r2;
	.loc	1 32 22                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:32:22
	mul.f32 	%f11, %f10, %f10;
	mul.f32 	%f12, %f9, %f9;
	.loc	1 31 39                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:31:39
	mov.b32 	%f13, %r10;
	mov.b32 	%f14, %r9;
	.loc	1 34 23                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:34:23
	fma.rn.f32 	%f15, %f14, %f14, %f12;
	fma.rn.f32 	%f16, %f13, %f13, %f11;
	.loc	1 35 38                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:35:38
	selp.f32 	%f17, %f16, %f11, %p6;
	selp.f32 	%f18, %f15, %f12, %p6;
	selp.f32 	%f19, %f7, %f3, %p6;
	selp.f32 	%f20, %f8, %f4, %p6;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f18, %f17;
	add.f32 	%f22, %f19, %f21;
	add.f32 	%f23, %f20, %f22;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f23;
	shfl.sync.bfly.b32	%r77, %r76, 16, 31, -1;
	mov.b32 	%f24, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f25, %f23, %f24;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f25;
	shfl.sync.bfly.b32	%r79, %r78, 8, 31, -1;
	mov.b32 	%f26, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f27, %f25, %f26;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f27;
	shfl.sync.bfly.b32	%r81, %r80, 4, 31, -1;
	mov.b32 	%f28, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f27, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f29;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	mov.b32 	%f30, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f31;
	shfl.sync.bfly.b32	%r85, %r84, 1, 31, -1;
	mov.b32 	%f32, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p11, %r73, 0;
	shr.u32 	%r86, %r72, 3;
	and.b32  	%r87, %r86, 60;
	mov.u32 	%r88, global_smem;
	add.s32 	%r17, %r88, %r87;
	mov.b32 	%r18, %f33;
	// begin inline asm
	@%p11 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p12, %r72, 16;
	add.s32 	%r20, %r88, %r74;
	// begin inline asm
	@%p12 ld.shared.b32 %r19, [ %r20 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r19;
	shfl.sync.bfly.b32	%r89, %r19, 8, 31, -1;
	mov.b32 	%f35, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f36, %f34, %f35;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f36;
	shfl.sync.bfly.b32	%r91, %r90, 4, 31, -1;
	mov.b32 	%f37, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f38, %f36, %f37;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r92, %f38;
	shfl.sync.bfly.b32	%r93, %r92, 2, 31, -1;
	mov.b32 	%f39, %r93;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f40, %f38, %f39;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r94, %f40;
	shfl.sync.bfly.b32	%r95, %r94, 1, 31, -1;
	mov.b32 	%f41, %r95;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f42, %f40, %f41;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r96, %r72, 15;
	setp.eq.s32 	%p27, %r96, 0;
	and.pred  	%p13, %p12, %p27;
	mov.b32 	%r22, %f42;
	// begin inline asm
	@%p13 st.shared.b32 [ %r20 + 0 ], %r22;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f43, [global_smem];
$L__tmp2:
	.loc	1 37 26                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:37:26
	sqrt.approx.ftz.f32 	%f44, %f43;
	.loc	1 38 4                          // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:38:4
	bar.sync 	0;
	.loc	1 39 70                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:39:70
	and.b32  	%r97, %r72, 511;
	setp.eq.s32 	%p14, %r97, 0;
	mov.b32 	%r23, %f44;
	// begin inline asm
	@%p14 st.global.b32 [ %rd3 + 0 ], { %r23 };
	// end inline asm
$L__tmp3:
	.loc	3 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p28, %f44, 0f2B8CBCCC;
	.loc	3 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p29, %f44, %f44;
	.loc	3 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f45, %f44, 0f2B8CBCCC, %p29;
	selp.f32 	%f46, %f44, %f45, %p28;
$L__tmp4:
	.loc	1 44 39                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:44:39
	// begin inline asm
	mov.u32 %r33, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r39, 0x0;
	mov.u32 %r42, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r33, %r36, %r39, %r42 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r33, %r5;
	@!%p1 mov.u32 %r36, %r5;
	@!%p1 mov.u32 %r39, %r5;
	@!%p1 mov.u32 %r42, %r5;
	// end inline asm
	.loc	1 47 22                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:47:22
	mov.b32 	%r34, %f46;
	// begin inline asm
	div.full.f32 %r44, %r33, %r34;
	// end inline asm
	// begin inline asm
	div.full.f32 %r45, %r36, %r34;
	// end inline asm
	// begin inline asm
	div.full.f32 %r46, %r39, %r34;
	// end inline asm
	// begin inline asm
	div.full.f32 %r47, %r42, %r34;
	// end inline asm
	.loc	1 48 29                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:48:29
	add.s64 	%rd5, %rd9, %rd11;
	.loc	1 48 75                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:48:75
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd5 + 0 ], { %r44, %r45, %r46, %r47 };
	// end inline asm
	.loc	1 44 39                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:44:39
	// begin inline asm
	mov.u32 %r57, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r63, 0x0;
	mov.u32 %r66, 0x0;
	@%p6 ld.global.L1::evict_first.v4.b32 { %r57, %r60, %r63, %r66 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r57, %r5;
	@!%p6 mov.u32 %r60, %r5;
	@!%p6 mov.u32 %r63, %r5;
	@!%p6 mov.u32 %r66, %r5;
	// end inline asm
	.loc	1 47 22                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:47:22
	// begin inline asm
	div.full.f32 %r68, %r57, %r34;
	// end inline asm
	// begin inline asm
	div.full.f32 %r69, %r60, %r34;
	// end inline asm
	// begin inline asm
	div.full.f32 %r70, %r63, %r34;
	// end inline asm
	// begin inline asm
	div.full.f32 %r71, %r66, %r34;
	// end inline asm
	.loc	1 48 29                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:48:29
	add.s64 	%rd7, %rd5, 8192;
	.loc	1 48 75                         // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:48:75
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd7 + 0 ], { %r68, %r69, %r70, %r71 };
	// end inline asm
	.loc	1 40 4                          // c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py:40:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/52/c52m3ltwitjosbbgjues3qvbdnms5qk36qvawn62xdyyo3vy3pv2.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 220                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 53
.b8 50
.b8 109
.b8 51
.b8 108
.b8 116
.b8 119
.b8 105
.b8 116
.b8 106
.b8 111
.b8 115
.b8 98
.b8 98
.b8 103
.b8 106
.b8 117
.b8 101
.b8 115
.b8 51
.b8 113
.b8 118
.b8 98
.b8 100
.b8 110
.b8 109
.b8 115
.b8 53
.b8 113
.b8 107
.b8 51
.b8 54
.b8 113
.b8 118
.b8 97
.b8 119
.b8 110
.b8 54
.b8 50
.b8 120
.b8 100
.b8 121
.b8 121
.b8 111
.b8 51
.b8 118
.b8 121
.b8 51
.b8 112
.b8 118
.b8 50
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 53
.b8 50
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x36 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 109
.b8 105
.b8 110
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x99:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xae:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc6:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 44                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
