#loc = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0)
#loc1 = loc(unknown)
#loc22 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":42:24)
#loc29 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":50:26)
#loc48 = loc(callsite(#loc1 at #loc22))
#loc51 = loc(callsite(#loc1 at #loc29))
module {
  tt.func public @triton_per_fused_add_convolution_gelu_native_group_norm_4(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0), %arg6: i32 loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0), %arg7: i32 loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":19:0)) attributes {noinline = false} {
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %cst = arith.constant dense<1.000000e+00> : tensor<1x8xf32> loc(#loc1)
    %cst_0 = arith.constant dense<0.707106769> : tensor<1x8xf32> loc(#loc1)
    %cst_1 = arith.constant dense<5.000000e-01> : tensor<1x8xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<1x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<8.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<0.000000e+00> : tensor<1x8xf32> loc(#loc1)
    %cst_5 = arith.constant dense<2> : tensor<1x8xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c4_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc5)
    %4 = arith.divsi %3, %cst_5 : tensor<1x8xi32> loc(#loc6)
    %5 = arith.muli %0, %c8_i32 : i32 loc(#loc7)
    %6 = tt.splat %5 : i32 -> tensor<1x8xi32> loc(#loc8)
    %7 = arith.addi %3, %6 : tensor<1x8xi32> loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %7 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc9)
    %10 = tt.splat %1 : i1 -> tensor<1x8xi1> loc(#loc10)
    %11 = tt.load %9, %10, %cst_4 : tensor<1x8x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.addptr %12, %4 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc11)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.addptr %15, %4 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc13)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc14)
    %18 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.addptr %18, %4 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc15)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc16)
    %21 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.addptr %21, %7 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc17)
    %23 = tt.load %22, %10, %cst_4 : tensor<1x8x!tt.ptr<f32>> loc(#loc18)
    %24 = arith.addf %11, %14 : tensor<1x8xf32> loc(#loc19)
    %25 = arith.select %10, %24, %cst_4 : tensor<1x8xi1>, tensor<1x8xf32> loc(#loc20)
    %26 = "tt.reduce"(%25) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc22)), %arg9: f32 loc(callsite(#loc1 at #loc22))):
      %50 = arith.addf %arg8, %arg9 : f32 loc(#loc52)
      tt.reduce.return %50 : f32 loc(#loc47)
    }) : (tensor<1x8xf32>) -> tensor<1xf32> loc(#loc47)
    %27 = tt.expand_dims %26 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %28 = arith.divf %27, %cst_3 : tensor<1x1xf32> loc(#loc25)
    %29 = tt.broadcast %28 : tensor<1x1xf32> -> tensor<1x8xf32> loc(#loc26)
    %30 = arith.subf %24, %29 : tensor<1x8xf32> loc(#loc26)
    %31 = arith.mulf %30, %30 : tensor<1x8xf32> loc(#loc27)
    %32 = arith.select %10, %31, %cst_4 : tensor<1x8xi1>, tensor<1x8xf32> loc(#loc28)
    %33 = "tt.reduce"(%32) <{axis = 1 : i32}> ({
    ^bb0(%arg8: f32 loc(callsite(#loc1 at #loc29)), %arg9: f32 loc(callsite(#loc1 at #loc29))):
      %50 = arith.addf %arg8, %arg9 : f32 loc(#loc53)
      tt.reduce.return %50 : f32 loc(#loc50)
    }) : (tensor<1x8xf32>) -> tensor<1xf32> loc(#loc50)
    %34 = tt.expand_dims %33 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc30)
    %35 = arith.divf %34, %cst_3 : tensor<1x1xf32> loc(#loc31)
    %36 = arith.addf %35, %cst_2 : tensor<1x1xf32> loc(#loc32)
    %37 = tt.extern_elementwise %36 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc33)
    %38 = tt.broadcast %37 : tensor<1x1xf32> -> tensor<1x8xf32> loc(#loc34)
    %39 = arith.mulf %30, %38 : tensor<1x8xf32> loc(#loc34)
    %40 = arith.mulf %39, %17 : tensor<1x8xf32> loc(#loc35)
    %41 = arith.addf %40, %20 : tensor<1x8xf32> loc(#loc36)
    %42 = arith.mulf %41, %cst_1 : tensor<1x8xf32> loc(#loc37)
    %43 = arith.mulf %41, %cst_0 : tensor<1x8xf32> loc(#loc38)
    %44 = tt.extern_elementwise %43 {libname = "", libpath = "", pure = true, symbol = "__nv_erff"} : (tensor<1x8xf32>) -> tensor<1x8xf32> loc(#loc39)
    %45 = arith.addf %44, %cst : tensor<1x8xf32> loc(#loc40)
    %46 = arith.mulf %42, %45 : tensor<1x8xf32> loc(#loc41)
    %47 = arith.addf %46, %23 : tensor<1x8xf32> loc(#loc42)
    tt.store %9, %24, %10 : tensor<1x8x!tt.ptr<f32>> loc(#loc43)
    %48 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc44)
    %49 = tt.addptr %48, %7 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc44)
    tt.store %49, %47, %10 : tensor<1x8x!tt.ptr<f32>> loc(#loc45)
    tt.return loc(#loc46)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":23:28)
#loc3 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":25:21)
#loc4 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":26:26)
#loc5 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":26:34)
#loc6 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":31:19)
#loc7 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":32:41)
#loc8 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":32:39)
#loc9 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":32:34)
#loc10 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":32:46)
#loc11 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":33:30)
#loc12 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":33:35)
#loc13 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":34:31)
#loc14 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":34:36)
#loc15 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":35:31)
#loc16 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":35:36)
#loc17 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":36:31)
#loc18 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":36:43)
#loc19 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":37:18)
#loc20 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":41:33)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc24 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":42:27)
#loc25 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":45:19)
#loc26 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":46:19)
#loc27 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":47:20)
#loc28 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":49:35)
#loc30 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":50:29)
#loc31 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":53:20)
#loc32 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":55:20)
#loc33 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":56:28)
#loc34 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":57:20)
#loc35 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":58:20)
#loc36 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":59:20)
#loc37 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":61:20)
#loc38 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":63:20)
#loc39 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":64:26)
#loc40 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":66:20)
#loc41 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":67:20)
#loc42 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":68:20)
#loc43 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":69:46)
#loc44 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":70:28)
#loc45 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":70:47)
#loc46 = loc("inductor_cache/zp/czpdod2q2osthcfnmzo6aynstp6k52qfefkbmogggi2au2acmt6t.py":70:4)
#loc47 = loc(callsite(#loc21 at #loc22))
#loc49 = loc(callsite(#loc23 at #loc21))
#loc50 = loc(callsite(#loc21 at #loc29))
#loc52 = loc(callsite(#loc49 at #loc22))
#loc53 = loc(callsite(#loc49 at #loc29))
