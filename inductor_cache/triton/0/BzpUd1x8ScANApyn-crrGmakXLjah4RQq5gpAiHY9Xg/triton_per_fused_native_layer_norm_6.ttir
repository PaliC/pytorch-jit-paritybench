#loc = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":19:0)
#loc1 = loc(unknown)
#loc16 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":38:24)
#loc23 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":46:26)
#loc35 = loc(callsite(#loc1 at #loc16))
#loc38 = loc(callsite(#loc1 at #loc23))
module {
  tt.func public @triton_per_fused_native_layer_norm_6(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":19:0), %arg5: i32 loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":19:0)) attributes {noinline = false} {
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<9.99999997E-7> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<8.000000e+00> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<1x8xf32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc5)
    %4 = arith.muli %0, %c8_i32 : i32 loc(#loc6)
    %5 = tt.splat %4 : i32 -> tensor<1x8xi32> loc(#loc7)
    %6 = arith.addi %3, %5 : tensor<1x8xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %6 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc8)
    %9 = tt.splat %1 : i1 -> tensor<1x8xi1> loc(#loc9)
    %10 = tt.load %8, %9, %cst_1 : tensor<1x8x!tt.ptr<f32>> loc(#loc9)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc10)
    %12 = tt.addptr %11, %3 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc10)
    %13 = tt.load %12 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc11)
    %14 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc12)
    %15 = tt.addptr %14, %3 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc12)
    %16 = tt.load %15 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc13)
    %17 = arith.select %9, %10, %cst_1 : tensor<1x8xi1>, tensor<1x8xf32> loc(#loc14)
    %18 = "tt.reduce"(%17) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc16)), %arg7: f32 loc(callsite(#loc1 at #loc16))):
      %36 = arith.addf %arg6, %arg7 : f32 loc(#loc39)
      tt.reduce.return %36 : f32 loc(#loc34)
    }) : (tensor<1x8xf32>) -> tensor<1xf32> loc(#loc34)
    %19 = tt.expand_dims %18 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc18)
    %20 = arith.divf %19, %cst_0 : tensor<1x1xf32> loc(#loc19)
    %21 = tt.broadcast %20 : tensor<1x1xf32> -> tensor<1x8xf32> loc(#loc20)
    %22 = arith.subf %10, %21 : tensor<1x8xf32> loc(#loc20)
    %23 = arith.mulf %22, %22 : tensor<1x8xf32> loc(#loc21)
    %24 = arith.select %9, %23, %cst_1 : tensor<1x8xi1>, tensor<1x8xf32> loc(#loc22)
    %25 = "tt.reduce"(%24) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc23)), %arg7: f32 loc(callsite(#loc1 at #loc23))):
      %36 = arith.addf %arg6, %arg7 : f32 loc(#loc40)
      tt.reduce.return %36 : f32 loc(#loc37)
    }) : (tensor<1x8xf32>) -> tensor<1xf32> loc(#loc37)
    %26 = tt.expand_dims %25 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc24)
    %27 = arith.divf %26, %cst_0 : tensor<1x1xf32> loc(#loc25)
    %28 = arith.addf %27, %cst : tensor<1x1xf32> loc(#loc26)
    %29 = tt.extern_elementwise %28 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<1x1xf32>) -> tensor<1x1xf32> loc(#loc27)
    %30 = tt.broadcast %29 : tensor<1x1xf32> -> tensor<1x8xf32> loc(#loc28)
    %31 = arith.mulf %22, %30 : tensor<1x8xf32> loc(#loc28)
    %32 = arith.mulf %31, %13 : tensor<1x8xf32> loc(#loc29)
    %33 = arith.addf %32, %16 : tensor<1x8xf32> loc(#loc30)
    %34 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc31)
    %35 = tt.addptr %34, %6 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc31)
    tt.store %35, %33, %9 : tensor<1x8x!tt.ptr<f32>> loc(#loc32)
    tt.return loc(#loc33)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":23:28)
#loc3 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":25:21)
#loc4 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":26:26)
#loc5 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":26:34)
#loc6 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":31:37)
#loc7 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":31:35)
#loc8 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":31:30)
#loc9 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":31:42)
#loc10 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":32:31)
#loc11 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":32:36)
#loc12 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":33:31)
#loc13 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":33:36)
#loc14 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":37:33)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc18 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":38:27)
#loc19 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":41:19)
#loc20 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":42:19)
#loc21 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":43:20)
#loc22 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":45:35)
#loc24 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":46:29)
#loc25 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":49:20)
#loc26 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":51:20)
#loc27 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":52:28)
#loc28 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":53:20)
#loc29 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":54:20)
#loc30 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":55:20)
#loc31 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":56:25)
#loc32 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":56:44)
#loc33 = loc("inductor_cache/xo/cxox7xszd3v4ybsxzmcnjsuhazc7hqjbv6wvo5xy72yr6mjmzbuc.py":56:4)
#loc34 = loc(callsite(#loc15 at #loc16))
#loc36 = loc(callsite(#loc17 at #loc15))
#loc37 = loc(callsite(#loc15 at #loc23))
#loc39 = loc(callsite(#loc36 at #loc16))
#loc40 = loc(callsite(#loc36 at #loc23))
