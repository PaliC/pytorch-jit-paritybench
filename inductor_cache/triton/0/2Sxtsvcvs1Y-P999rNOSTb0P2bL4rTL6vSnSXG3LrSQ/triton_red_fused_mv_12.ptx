//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_mv_12  // -- Begin function triton_red_fused_mv_12
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_mv_12
.visible .entry triton_red_fused_mv_12(
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_12_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_12_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused_mv_12_param_2,
	.param .u32 triton_red_fused_mv_12_param_3,
	.param .u32 triton_red_fused_mv_12_param_4
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<47>;
	.reg .b32 	%r<105>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<21>;
	.loc	1 19 0                          // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_red_fused_mv_12_param_0];
	ld.param.u64 	%rd11, [triton_red_fused_mv_12_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 24 21                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:24:21
	setp.lt.s32 	%p1, %r1, 512;
	ld.param.u64 	%rd12, [triton_red_fused_mv_12_param_2];
	.loc	1 25 33                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:25:33
	mov.u32 	%r73, %tid.x;
	shl.b32 	%r74, %r73, 2;
	and.b32  	%r75, %r74, 2044;
	.loc	1 32 44                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:44
	mul.lo.s32 	%r76, %r1, 6912;
	.loc	1 28 36                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:28:36
	cvt.u64.u32 	%rd13, %r75;
	.loc	1 32 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:39
	add.s32 	%r77, %r75, %r76;
	.loc	1 32 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:34
	mul.wide.s32 	%rd14, %r77, 4;
	add.s64 	%rd1, %rd10, %rd14;
	mov.b32 	%r6, 0;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r4;
	mov.b32 	%f2, %r5;
	.loc	1 33 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:34
	mul.wide.u32 	%rd15, %r75, 4;
	add.s64 	%rd2, %rd11, %rd15;
	mov.pred 	%p6, -1;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r6;
	@!%p6 mov.u32 %r11, %r6;
	@!%p6 mov.u32 %r12, %r6;
	@!%p6 mov.u32 %r13, %r6;
	// end inline asm
	mov.b32 	%f3, %r12;
	mov.b32 	%f4, %r13;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f5, %f1, %f3, 0f00000000;
	fma.rn.f32 	%f6, %f2, %f4, 0f00000000;
	.loc	1 32 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:39
	add.s32 	%r78, %r77, 2048;
	.loc	1 32 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:34
	mul.wide.s32 	%rd16, %r78, 4;
	add.s64 	%rd3, %rd10, %rd16;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r18, %r6;
	@!%p1 mov.u32 %r19, %r6;
	@!%p1 mov.u32 %r20, %r6;
	@!%p1 mov.u32 %r21, %r6;
	// end inline asm
	.loc	1 33 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:34
	add.s64 	%rd4, %rd2, 8192;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd4 + 0 ];
	@!%p6 mov.u32 %r26, %r6;
	@!%p6 mov.u32 %r27, %r6;
	@!%p6 mov.u32 %r28, %r6;
	@!%p6 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 32 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:39
	add.s32 	%r79, %r77, 4096;
	.loc	1 32 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:34
	mul.wide.s32 	%rd17, %r79, 4;
	add.s64 	%rd5, %rd10, %rd17;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p1 ld.global.L1::evict_first.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r34, %r6;
	@!%p1 mov.u32 %r35, %r6;
	@!%p1 mov.u32 %r36, %r6;
	@!%p1 mov.u32 %r37, %r6;
	// end inline asm
	.loc	1 33 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:34
	add.s64 	%rd6, %rd2, 16384;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p6 ld.global.L1::evict_last.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd6 + 0 ];
	@!%p6 mov.u32 %r42, %r6;
	@!%p6 mov.u32 %r43, %r6;
	@!%p6 mov.u32 %r44, %r6;
	@!%p6 mov.u32 %r45, %r6;
	// end inline asm
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	mov.b32 	%f7, %r36;
	mov.b32 	%f8, %r20;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	mov.b32 	%f9, %r44;
	mov.b32 	%f10, %r28;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f11, %f8, %f10, %f5;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	mov.b32 	%f12, %r37;
	mov.b32 	%f13, %r21;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	mov.b32 	%f14, %r45;
	mov.b32 	%f15, %r29;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f16, %f13, %f15, %f6;
	fma.rn.f32 	%f17, %f7, %f9, %f11;
	fma.rn.f32 	%f18, %f12, %f14, %f16;
	.loc	1 37 46                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:37:46
	selp.f32 	%f19, %f17, 0f00000000, %p1;
	selp.f32 	%f20, %f18, 0f00000000, %p1;
	.loc	1 29 27                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:29:27
	or.b64  	%rd18, %rd13, 6144;
	.loc	1 30 25                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:30:25
	setp.lt.u64 	%p36, %rd18, 6912;
	.loc	1 32 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:39
	cvt.u32.u64 	%r80, %rd18;
	add.s32 	%r81, %r76, %r80;
	.loc	1 32 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:34
	mul.wide.s32 	%rd19, %r81, 4;
	add.s64 	%rd7, %rd10, %rd19;
	.loc	1 32 57                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:57
	and.pred  	%p31, %p1, %p36;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p31 ld.global.L1::evict_first.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd7 + 0 ];
	@!%p31 mov.u32 %r50, %r6;
	@!%p31 mov.u32 %r51, %r6;
	@!%p31 mov.u32 %r52, %r6;
	@!%p31 mov.u32 %r53, %r6;
	// end inline asm
	mov.b32 	%f21, %r52;
	mov.b32 	%f22, %r53;
	.loc	1 33 34                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:34
	add.s64 	%rd8, %rd2, 24576;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	// begin inline asm
	mov.u32 %r58, 0x0;
	mov.u32 %r59, 0x0;
	mov.u32 %r60, 0x0;
	mov.u32 %r61, 0x0;
	@%p36 ld.global.L1::evict_last.v4.b32 { %r58, %r59, %r60, %r61 }, [ %rd8 + 0 ];
	@!%p36 mov.u32 %r58, %r6;
	@!%p36 mov.u32 %r59, %r6;
	@!%p36 mov.u32 %r60, %r6;
	@!%p36 mov.u32 %r61, %r6;
	// end inline asm
	mov.b32 	%f23, %r60;
	mov.b32 	%f24, %r61;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f25, %f21, %f23, %f19;
	fma.rn.f32 	%f26, %f22, %f24, %f20;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	mov.b32 	%f27, %r3;
	mov.b32 	%f28, %r2;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	mov.b32 	%f29, %r11;
	mov.b32 	%f30, %r10;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f31, %f28, %f30, 0f00000000;
	fma.rn.f32 	%f32, %f27, %f29, 0f00000000;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	mov.b32 	%f33, %r18;
	mov.b32 	%f34, %r19;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	mov.b32 	%f35, %r26;
	mov.b32 	%f36, %r27;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f37, %f34, %f36, %f32;
	fma.rn.f32 	%f38, %f33, %f35, %f31;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	mov.b32 	%f39, %r35;
	mov.b32 	%f40, %r34;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	mov.b32 	%f41, %r43;
	mov.b32 	%f42, %r42;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f43, %f40, %f42, %f38;
	fma.rn.f32 	%f44, %f39, %f41, %f37;
	.loc	1 37 46                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:37:46
	selp.f32 	%f45, %f44, 0f00000000, %p1;
	selp.f32 	%f46, %f43, 0f00000000, %p1;
	.loc	1 32 49                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:32:49
	mov.b32 	%f47, %r51;
	mov.b32 	%f48, %r50;
	.loc	1 33 39                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:33:39
	mov.b32 	%f49, %r59;
	mov.b32 	%f50, %r58;
	.loc	1 36 23                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:36:23
	fma.rn.f32 	%f51, %f48, %f50, %f46;
	fma.rn.f32 	%f52, %f47, %f49, %f45;
	.loc	1 37 46                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:37:46
	selp.f32 	%f53, %f52, %f45, %p31;
	selp.f32 	%f54, %f51, %f46, %p31;
	selp.f32 	%f55, %f25, %f19, %p31;
	selp.f32 	%f56, %f26, %f20, %p31;
	.loc	1 25 33                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:25:33
	and.b32  	%r82, %r73, 31;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f54, %f53;
	add.f32 	%f58, %f55, %f57;
	add.f32 	%f59, %f56, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f59;
	shfl.sync.bfly.b32	%r84, %r83, 16, 31, -1;
	mov.b32 	%f60, %r84;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f61;
	shfl.sync.bfly.b32	%r86, %r85, 8, 31, -1;
	mov.b32 	%f62, %r86;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f63;
	shfl.sync.bfly.b32	%r88, %r87, 4, 31, -1;
	mov.b32 	%f64, %r88;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f65;
	shfl.sync.bfly.b32	%r90, %r89, 2, 31, -1;
	mov.b32 	%f66, %r90;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f67, %f65, %f66;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f67;
	shfl.sync.bfly.b32	%r92, %r91, 1, 31, -1;
	mov.b32 	%f68, %r92;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f69, %f67, %f68;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p41, %r82, 0;
	shr.u32 	%r93, %r73, 3;
	and.b32  	%r94, %r93, 60;
	mov.u32 	%r95, global_smem;
	add.s32 	%r66, %r95, %r94;
	mov.b32 	%r67, %f69;
	// begin inline asm
	@%p41 st.shared.b32 [ %r66 + 0 ], %r67;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p42, %r73, 16;
	add.s32 	%r69, %r95, %r74;
	// begin inline asm
	@%p42 ld.shared.b32 %r68, [ %r69 + 0 ];
	// end inline asm
	mov.b32 	%f70, %r68;
	shfl.sync.bfly.b32	%r96, %r68, 8, 31, -1;
	mov.b32 	%f71, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f72, %f70, %f71;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f72;
	shfl.sync.bfly.b32	%r98, %r97, 4, 31, -1;
	mov.b32 	%f73, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f74, %f72, %f73;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f74;
	shfl.sync.bfly.b32	%r100, %r99, 2, 31, -1;
	mov.b32 	%f75, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f76, %f74, %f75;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f76;
	shfl.sync.bfly.b32	%r102, %r101, 1, 31, -1;
	mov.b32 	%f77, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f78, %f76, %f77;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r103, %r73, 15;
	setp.eq.s32 	%p45, %r103, 0;
	and.pred  	%p43, %p42, %p45;
	mov.b32 	%r71, %f78;
	// begin inline asm
	@%p43 st.shared.b32 [ %r69 + 0 ], %r71;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r72, [global_smem];
$L__tmp2:
	.loc	1 39 25                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:39:25
	mul.wide.s32 	%rd20, %r1, 4;
	add.s64 	%rd9, %rd12, %rd20;
	.loc	1 39 36                         // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:39:36
	and.b32  	%r104, %r73, 511;
	setp.eq.s32 	%p46, %r104, 0;
	and.pred  	%p44, %p46, %p1;
	// begin inline asm
	@%p44 st.global.b32 [ %rd9 + 0 ], { %r72 };
	// end inline asm
	.loc	1 39 4                          // cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py:39:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fa/cfaq36ip2pganabvnlool2qrjqa4pbafgmsk5nsvkk7lfzjdtupg.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 167                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 97
.b8 113
.b8 51
.b8 54
.b8 105
.b8 112
.b8 50
.b8 112
.b8 103
.b8 97
.b8 110
.b8 97
.b8 98
.b8 118
.b8 110
.b8 108
.b8 111
.b8 111
.b8 108
.b8 50
.b8 113
.b8 114
.b8 106
.b8 113
.b8 97
.b8 52
.b8 112
.b8 98
.b8 97
.b8 102
.b8 103
.b8 109
.b8 115
.b8 107
.b8 53
.b8 110
.b8 115
.b8 118
.b8 107
.b8 107
.b8 55
.b8 108
.b8 102
.b8 122
.b8 106
.b8 100
.b8 116
.b8 117
.b8 112
.b8 103
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 97
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x19 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 118
.b8 95
.b8 49
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x91:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 38                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
