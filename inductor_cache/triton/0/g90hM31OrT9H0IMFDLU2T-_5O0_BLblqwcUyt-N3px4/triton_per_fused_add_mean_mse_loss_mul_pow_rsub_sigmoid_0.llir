; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #6, !dbg !12
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %15 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %16 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %15, i1 true) #6, !dbg !14
  %17 = extractvalue { i32, i32, i32, i32 } %16, 0, !dbg !14
  %18 = extractvalue { i32, i32, i32, i32 } %16, 1, !dbg !14
  %19 = extractvalue { i32, i32, i32, i32 } %16, 2, !dbg !14
  %20 = extractvalue { i32, i32, i32, i32 } %16, 3, !dbg !14
  %21 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !14
  %22 = insertelement <2 x i32> %21, i32 %20, i64 1, !dbg !14
  %23 = bitcast <2 x i32> %22 to <2 x float>, !dbg !14
  %24 = fsub <2 x float> splat (float 1.000000e+00), %23, !dbg !15
  %25 = bitcast i32 %13 to float, !dbg !16
  %26 = fsub float 0.000000e+00, %25, !dbg !16
  %27 = bitcast i32 %14 to float, !dbg !16
  %28 = fsub float 0.000000e+00, %27, !dbg !16
  %29 = fmul float %26, 0x3FF7154760000000, !dbg !20
  %30 = fmul float %28, 0x3FF7154760000000, !dbg !20
  %31 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !14
  %32 = insertelement <2 x i32> %31, i32 %18, i64 1, !dbg !14
  %33 = bitcast <2 x i32> %32 to <2 x float>, !dbg !14
  %34 = fsub <2 x float> splat (float 1.000000e+00), %33, !dbg !15
  %35 = bitcast i32 %11 to float, !dbg !16
  %36 = fsub float 0.000000e+00, %35, !dbg !16
  %37 = bitcast i32 %12 to float, !dbg !16
  %38 = fsub float 0.000000e+00, %37, !dbg !16
  %39 = fmul float %36, 0x3FF7154760000000, !dbg !20
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #6, !dbg !20
  %41 = fmul float %38, 0x3FF7154760000000, !dbg !20
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #6, !dbg !20
  %43 = fadd float %40, 1.000000e+00, !dbg !21
  %44 = fadd float %42, 1.000000e+00, !dbg !21
  %45 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %29) #6, !dbg !20
  %46 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %30) #6, !dbg !20
  %47 = fadd float %45, 1.000000e+00, !dbg !21
  %48 = fadd float %46, 1.000000e+00, !dbg !21
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %43) #6, !dbg !22
  %50 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %44) #6, !dbg !22
  %51 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %47) #6, !dbg !22
  %52 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %48) #6, !dbg !22
  %53 = insertelement <2 x float> poison, float %49, i64 0, !dbg !23
  %54 = insertelement <2 x float> %53, float %50, i64 1, !dbg !23
  %55 = fmul <2 x float> %54, %33, !dbg !23
  %56 = insertelement <2 x float> poison, float %51, i64 0, !dbg !23
  %57 = insertelement <2 x float> %56, float %52, i64 1, !dbg !23
  %58 = fmul <2 x float> %57, %23, !dbg !23
  %59 = fsub <2 x float> splat (float 1.000000e+00), %54, !dbg !24
  %60 = fsub <2 x float> splat (float 1.000000e+00), %57, !dbg !24
  %61 = fmul <2 x float> %34, %59, !dbg !25
  %62 = fmul <2 x float> %24, %60, !dbg !25
  %63 = fadd <2 x float> %55, %61, !dbg !26
  %64 = fadd <2 x float> %58, %62, !dbg !26
  %65 = fsub <2 x float> splat (float 1.000000e+00), %63, !dbg !27
  %66 = fsub <2 x float> splat (float 1.000000e+00), %64, !dbg !27
  %67 = tail call float @llvm.nvvm.trunc.f(float 7.500000e-01) #6, !dbg !28
  %68 = fmul float %67, 2.000000e+00, !dbg !28
  %69 = fsub float 1.500000e+00, %68, !dbg !28
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not.i = icmp eq i32 %70, 0, !dbg !28
  %71 = tail call float @llvm.nvvm.fabs.ftz.f(float %69) #6, !dbg !28
  %72 = tail call float @llvm.nvvm.fabs.f(float %69) #6, !dbg !28
  %.08.i = select i1 %.not.i, float %72, float %71, !dbg !28
  %73 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !28
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not12.i = icmp eq i32 %74, 0, !dbg !28
  %75 = extractelement <2 x float> %65, i64 0, !dbg !28
  %76 = tail call float @llvm.nvvm.fabs.ftz.f(float %75) #6, !dbg !28
  %77 = tail call float @llvm.nvvm.fabs.f(float %75) #6, !dbg !28
  %.09.i = select i1 %.not12.i, float %77, float %76, !dbg !28
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not13.i = icmp eq i32 %78, 0, !dbg !28
  %79 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !28
  %80 = fmul float %.09.i, 0x4170000000000000, !dbg !28
  %81 = select i1 %.not13.i, i1 %79, i1 false, !dbg !28
  %.116.i = select i1 %81, float %80, float %.09.i, !dbg !28
  %expo.i.i.1.i = select i1 %81, float -1.510000e+02, float -1.270000e+02, !dbg !28
  %82 = bitcast float %.116.i to i32, !dbg !28
  %83 = and i32 %82, 8388607, !dbg !28
  %84 = or disjoint i32 %83, 1065353216, !dbg !28
  %85 = bitcast i32 %84 to float, !dbg !28
  %86 = lshr i32 %82, 23, !dbg !28
  %87 = uitofp nneg i32 %86 to float, !dbg !28
  %88 = fadd float %expo.i.i.1.i, %87, !dbg !28
  %89 = fcmp ogt float %85, 0x3FF6A09E60000000, !dbg !28
  %90 = fmul float %85, 5.000000e-01, !dbg !28
  %91 = fadd float %88, 1.000000e+00, !dbg !28
  %expo.i.i.2.i = select i1 %89, float %91, float %88, !dbg !28
  %m.i.i.0.i = select i1 %89, float %90, float %85, !dbg !28
  %92 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !28
  %93 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !28
  %94 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %93) #7, !dbg !28, !srcloc !29
  %95 = fmul float %92, 2.000000e+00, !dbg !28
  %96 = fmul float %94, %95, !dbg !28
  %97 = fmul float %96, %96, !dbg !28
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not14.i = icmp eq i32 %98, 0, !dbg !28
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %97, float 0x3F8995EC60000000) #6, !dbg !28
  %100 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %97, float 0x3F8995EC60000000) #6, !dbg !28
  %.020.i = select i1 %.not14.i, float %100, float %99, !dbg !28
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not15.i = icmp eq i32 %101, 0, !dbg !28
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %97, float 0x3FB55557A0000000) #6, !dbg !28
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %97, float 0x3FB55557A0000000) #6, !dbg !28
  %.021.i = select i1 %.not15.i, float %103, float %102, !dbg !28
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not16.i = icmp eq i32 %104, 0, !dbg !28
  %105 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %97) #6, !dbg !28
  %106 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %97) #6, !dbg !28
  %.022.i = select i1 %.not16.i, float %106, float %105, !dbg !28
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not17.i = icmp eq i32 %107, 0, !dbg !28
  %108 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %96) #6, !dbg !28
  %109 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %96) #6, !dbg !28
  %.024.i = select i1 %.not17.i, float %109, float %108, !dbg !28
  %110 = fsub float %92, %96, !dbg !28
  %111 = fmul float %110, 2.000000e+00, !dbg !28
  %112 = fneg float %96, !dbg !28
  %113 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not18.i = icmp eq i32 %113, 0, !dbg !28
  %114 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %112, float %92, float %111) #6, !dbg !28
  %115 = tail call float @llvm.nvvm.fma.rn.f(float %112, float %92, float %111) #6, !dbg !28
  %.025.i = select i1 %.not18.i, float %115, float %114, !dbg !28
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not19.i = icmp eq i32 %116, 0, !dbg !28
  %117 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %94, float %.025.i) #6, !dbg !28
  %118 = tail call float @llvm.nvvm.mul.rn.f(float %94, float %.025.i) #6, !dbg !28
  %.026.i = select i1 %.not19.i, float %118, float %117, !dbg !28
  %119 = fadd float %96, %.024.i, !dbg !28
  %120 = fsub float %96, %119, !dbg !28
  %121 = fadd float %.024.i, %120, !dbg !28
  %122 = fadd float %.026.i, %121, !dbg !28
  %123 = fadd float %119, %122, !dbg !28
  %124 = fsub float %119, %123, !dbg !28
  %125 = fadd float %122, %124, !dbg !28
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not20.i = icmp eq i32 %126, 0, !dbg !28
  %127 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !28
  %128 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !28
  %.019.i = select i1 %.not20.i, float %128, float %127, !dbg !28
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not21.i = icmp eq i32 %129, 0, !dbg !28
  %130 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %131 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %.018.i = select i1 %.not21.i, float %131, float %130, !dbg !28
  %132 = fadd float %.019.i, %123, !dbg !28
  %133 = fsub float %.019.i, %132, !dbg !28
  %134 = fadd float %123, %133, !dbg !28
  %135 = fadd float %125, %134, !dbg !28
  %136 = fadd float %.018.i, %135, !dbg !28
  %137 = fadd float %132, %136, !dbg !28
  %138 = fsub float %132, %137, !dbg !28
  %139 = fadd float %136, %138, !dbg !28
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not22.i = icmp eq i32 %140, 0, !dbg !28
  %141 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.500000e+00) #6, !dbg !28
  %142 = tail call float @llvm.nvvm.fabs.f(float 1.500000e+00) #6, !dbg !28
  %.027.i = select i1 %.not22.i, float %142, float %141, !dbg !28
  %143 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !28
  %.013.i = select i1 %143, float 0x3F28000000000000, float 1.500000e+00, !dbg !28
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not23.i = icmp eq i32 %144, 0, !dbg !28
  %145 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %137) #6, !dbg !28
  %146 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %137) #6, !dbg !28
  %.028.i = select i1 %.not23.i, float %146, float %145, !dbg !28
  %147 = fneg float %.028.i, !dbg !28
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not24.i = icmp eq i32 %148, 0, !dbg !28
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %137, float %147) #6, !dbg !28
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %137, float %147) #6, !dbg !28
  %.029.i = select i1 %.not24.i, float %150, float %149, !dbg !28
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not25.i = icmp eq i32 %151, 0, !dbg !28
  %152 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %139, float %.029.i) #6, !dbg !28
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %139, float %.029.i) #6, !dbg !28
  %.030.i = select i1 %.not25.i, float %153, float %152, !dbg !28
  %154 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not26.i = icmp eq i32 %154, 0, !dbg !28
  %155 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %137, float %.030.i) #6, !dbg !28
  %156 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %137, float %.030.i) #6, !dbg !28
  %.031.i = select i1 %.not26.i, float %156, float %155, !dbg !28
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not27.i = icmp eq i32 %157, 0, !dbg !28
  %158 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #6, !dbg !28
  %159 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #6, !dbg !28
  %.032.i = select i1 %.not27.i, float %159, float %158, !dbg !28
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %162 = bitcast float %.032.i to i32, !dbg !28
  %163 = icmp eq i32 %162, 1118925336, !dbg !28
  %prod.i.145.0.i = select i1 %163, float 0x40562E42E0000000, float %.032.i, !dbg !28
  %164 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not30.i = icmp eq i32 %164, 0, !dbg !28
  %165 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !28
  %166 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !28
  %.017.i = select i1 %.not30.i, float %166, float %165, !dbg !28
  %167 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #6, !dbg !28
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not31.i = icmp eq i32 %168, 0, !dbg !28
  %169 = tail call float @llvm.nvvm.fabs.ftz.f(float %167) #6, !dbg !28
  %170 = tail call float @llvm.nvvm.fabs.f(float %167) #6, !dbg !28
  %.023.i = select i1 %.not31.i, float %170, float %169, !dbg !28
  %171 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !28
  %172 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %167), !dbg !28
  %j.i.i.0.i = select i1 %171, float %172, float %167, !dbg !28
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not32.i = icmp eq i32 %173, 0, !dbg !28
  %174 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !28
  %175 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !28
  %.035.i = select i1 %.not32.i, float %175, float %174, !dbg !28
  %176 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not33.i = icmp eq i32 %176, 0, !dbg !28
  %177 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !28
  %178 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !28
  %.036.i = select i1 %.not33.i, float %178, float %177, !dbg !28
  %179 = fmul float %.036.i, 0x3FF7154760000000, !dbg !28
  %180 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !28
  %181 = bitcast float %180 to i32, !dbg !28
  %182 = shl i32 %181, 23, !dbg !28
  %183 = bitcast i32 %182 to float, !dbg !28
  %184 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %179) #6, !dbg !28
  %185 = fmul float %184, %183, !dbg !28
  %186 = fcmp une float %185, 0x7FF0000000000000, !dbg !28
  br i1 %186, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !28

__internal_fmad.exit.i.i:                         ; preds = %4
  %.not29.i = icmp eq i32 %161, 0, !dbg !28
  %.not28.i = icmp eq i32 %160, 0, !dbg !28
  %187 = fneg float %.032.i, !dbg !28
  %188 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %187) #6, !dbg !28
  %189 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %187) #6, !dbg !28
  %.033.i = select i1 %.not28.i, float %188, float %189, !dbg !28
  %190 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #6, !dbg !28
  %191 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #6, !dbg !28
  %.034.i = select i1 %.not29.i, float %190, float %191, !dbg !28
  %192 = fadd float %.034.i, 0x3EE0000000000000, !dbg !28
  %prod.i.044.0.i = select i1 %163, float %192, float %.034.i, !dbg !28
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not34.i = icmp eq i32 %193, 0, !dbg !28
  %194 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %185, float %prod.i.044.0.i, float %185) #6, !dbg !28
  %195 = tail call float @llvm.nvvm.fma.rn.f(float %185, float %prod.i.044.0.i, float %185) #6, !dbg !28
  %.014.i = select i1 %.not34.i, float %195, float %194, !dbg !28
  br label %__internal_accurate_powf.exit.i, !dbg !28

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %4
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %4 ], !dbg !28
  %196 = fcmp olt float %75, 0.000000e+00, !dbg !28
  %or.cond.i = select i1 %196, i1 %73, i1 false, !dbg !28
  %197 = fcmp oeq float %75, 0.000000e+00, !dbg !28
  br i1 %197, label %198, label %201, !dbg !28

198:                                              ; preds = %__internal_accurate_powf.exit.i
  %199 = fadd float %75, %75, !dbg !28
  %200 = select i1 %73, float %199, float 0.000000e+00, !dbg !28
  br label %__internal_powf_corner_cases.exit.i, !dbg !28

201:                                              ; preds = %__internal_accurate_powf.exit.i
  %202 = fneg float %t.i.0.i, !dbg !28
  %.010.i = select i1 %or.cond.i, float %202, float %t.i.0.i, !dbg !28
  %203 = tail call float @llvm.nvvm.trunc.f(float 1.500000e+00) #6, !dbg !28
  %204 = fcmp une float %203, 1.500000e+00, !dbg !28
  %or.cond2.i = select i1 %196, i1 %204, i1 false, !dbg !28
  %.111.i = select i1 %or.cond2.i, float 0x7FFFFFFFE0000000, float %.010.i, !dbg !28
  br label %__internal_powf_corner_cases.exit.i, !dbg !28

__internal_powf_corner_cases.exit.i:              ; preds = %201, %198
  %.212.i = phi float [ %200, %198 ], [ %.111.i, %201 ], !dbg !28
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not35.i = icmp eq i32 %205, 0, !dbg !28
  %.01.i = select i1 %.not35.i, float %77, float %76, !dbg !28
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not36.i = icmp eq i32 %206, 0, !dbg !28
  %.02.i = select i1 %.not36.i, float %142, float %141, !dbg !28
  %207 = fadd float %.01.i, %.02.i, !dbg !28
  %208 = bitcast float %207 to i32, !dbg !28
  %209 = icmp sgt i32 %208, 2139095039, !dbg !28
  br i1 %209, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !28

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not37.i = icmp eq i32 %210, 0, !dbg !28
  %.06.i = select i1 %.not37.i, float %77, float %76, !dbg !28
  %211 = fcmp uno float %.06.i, 0.000000e+00, !dbg !28
  br i1 %211, label %214, label %__nv_isnanf.exit11.i.i, !dbg !28

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not38.i = icmp eq i32 %212, 0, !dbg !28
  %.07.i = select i1 %.not38.i, float %142, float %141, !dbg !28
  %213 = fcmp uno float %.07.i, 0.000000e+00, !dbg !28
  br i1 %213, label %214, label %__nv_isinff.exit8.i.i, !dbg !28

214:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %215 = fadd float %75, 1.500000e+00, !dbg !28
  br label %__nv_powf.exit, !dbg !28

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not39.i = icmp eq i32 %216, 0, !dbg !28
  %.05.i = select i1 %.not39.i, float %142, float %141, !dbg !28
  %217 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !28
  %218 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not41.i = icmp eq i32 %218, 0, !dbg !28
  %.04.i = select i1 %.not41.i, float %77, float %76, !dbg !28
  br i1 %217, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !28

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %219 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !28
  %220 = fcmp oeq float %75, -1.000000e+00, !dbg !28
  %221 = select i1 %219, float 0x7FF0000000000000, float 0.000000e+00, !dbg !28
  %222 = select i1 %220, float 1.000000e+00, float %221, !dbg !28
  br label %__nv_powf.exit, !dbg !28

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %223 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !28
  br i1 %223, label %224, label %__nv_powf.exit, !dbg !28

224:                                              ; preds = %__nv_isinff.exit.i.i
  %225 = select i1 %or.cond.i, float 0xFFF0000000000000, float 0x7FF0000000000000, !dbg !28
  br label %__nv_powf.exit, !dbg !28

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %214, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %224
  %.3.i = phi float [ %.212.i, %__internal_powf_corner_cases.exit.i ], [ %215, %214 ], [ %222, %__nv_fabsf.exit5.i.i ], [ %225, %224 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !28
  %226 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not.i1 = icmp eq i32 %226, 0, !dbg !28
  %.08.i2 = select i1 %.not.i1, float %72, float %71, !dbg !28
  %227 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !28
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not12.i3 = icmp eq i32 %228, 0, !dbg !28
  %229 = extractelement <2 x float> %65, i64 1, !dbg !28
  %230 = tail call float @llvm.nvvm.fabs.ftz.f(float %229) #6, !dbg !28
  %231 = tail call float @llvm.nvvm.fabs.f(float %229) #6, !dbg !28
  %.09.i4 = select i1 %.not12.i3, float %231, float %230, !dbg !28
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not13.i5 = icmp eq i32 %232, 0, !dbg !28
  %233 = fcmp olt float %.09.i4, 0x3810000000000000, !dbg !28
  %234 = fmul float %.09.i4, 0x4170000000000000, !dbg !28
  %235 = select i1 %.not13.i5, i1 %233, i1 false, !dbg !28
  %.116.i8 = select i1 %235, float %234, float %.09.i4, !dbg !28
  %expo.i.i.1.i9 = select i1 %235, float -1.510000e+02, float -1.270000e+02, !dbg !28
  %236 = bitcast float %.116.i8 to i32, !dbg !28
  %237 = and i32 %236, 8388607, !dbg !28
  %238 = or disjoint i32 %237, 1065353216, !dbg !28
  %239 = bitcast i32 %238 to float, !dbg !28
  %240 = lshr i32 %236, 23, !dbg !28
  %241 = uitofp nneg i32 %240 to float, !dbg !28
  %242 = fadd float %expo.i.i.1.i9, %241, !dbg !28
  %243 = fcmp ogt float %239, 0x3FF6A09E60000000, !dbg !28
  %244 = fmul float %239, 5.000000e-01, !dbg !28
  %245 = fadd float %242, 1.000000e+00, !dbg !28
  %expo.i.i.2.i10 = select i1 %243, float %245, float %242, !dbg !28
  %m.i.i.0.i11 = select i1 %243, float %244, float %239, !dbg !28
  %246 = fadd float %m.i.i.0.i11, -1.000000e+00, !dbg !28
  %247 = fadd float %m.i.i.0.i11, 1.000000e+00, !dbg !28
  %248 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %247) #7, !dbg !28, !srcloc !29
  %249 = fmul float %246, 2.000000e+00, !dbg !28
  %250 = fmul float %248, %249, !dbg !28
  %251 = fmul float %250, %250, !dbg !28
  %252 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not14.i12 = icmp eq i32 %252, 0, !dbg !28
  %253 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %251, float 0x3F8995EC60000000) #6, !dbg !28
  %254 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %251, float 0x3F8995EC60000000) #6, !dbg !28
  %.020.i13 = select i1 %.not14.i12, float %254, float %253, !dbg !28
  %255 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not15.i14 = icmp eq i32 %255, 0, !dbg !28
  %256 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i13, float %251, float 0x3FB55557A0000000) #6, !dbg !28
  %257 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i13, float %251, float 0x3FB55557A0000000) #6, !dbg !28
  %.021.i15 = select i1 %.not15.i14, float %257, float %256, !dbg !28
  %258 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not16.i16 = icmp eq i32 %258, 0, !dbg !28
  %259 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i15, float %251) #6, !dbg !28
  %260 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i15, float %251) #6, !dbg !28
  %.022.i17 = select i1 %.not16.i16, float %260, float %259, !dbg !28
  %261 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not17.i18 = icmp eq i32 %261, 0, !dbg !28
  %262 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i17, float %250) #6, !dbg !28
  %263 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i17, float %250) #6, !dbg !28
  %.024.i19 = select i1 %.not17.i18, float %263, float %262, !dbg !28
  %264 = fsub float %246, %250, !dbg !28
  %265 = fmul float %264, 2.000000e+00, !dbg !28
  %266 = fneg float %250, !dbg !28
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not18.i20 = icmp eq i32 %267, 0, !dbg !28
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %266, float %246, float %265) #6, !dbg !28
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %266, float %246, float %265) #6, !dbg !28
  %.025.i21 = select i1 %.not18.i20, float %269, float %268, !dbg !28
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not19.i22 = icmp eq i32 %270, 0, !dbg !28
  %271 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %248, float %.025.i21) #6, !dbg !28
  %272 = tail call float @llvm.nvvm.mul.rn.f(float %248, float %.025.i21) #6, !dbg !28
  %.026.i23 = select i1 %.not19.i22, float %272, float %271, !dbg !28
  %273 = fadd float %250, %.024.i19, !dbg !28
  %274 = fsub float %250, %273, !dbg !28
  %275 = fadd float %.024.i19, %274, !dbg !28
  %276 = fadd float %.026.i23, %275, !dbg !28
  %277 = fadd float %273, %276, !dbg !28
  %278 = fsub float %273, %277, !dbg !28
  %279 = fadd float %276, %278, !dbg !28
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not20.i24 = icmp eq i32 %280, 0, !dbg !28
  %281 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #6, !dbg !28
  %282 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #6, !dbg !28
  %.019.i25 = select i1 %.not20.i24, float %282, float %281, !dbg !28
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not21.i26 = icmp eq i32 %283, 0, !dbg !28
  %284 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %285 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %.018.i27 = select i1 %.not21.i26, float %285, float %284, !dbg !28
  %286 = fadd float %.019.i25, %277, !dbg !28
  %287 = fsub float %.019.i25, %286, !dbg !28
  %288 = fadd float %277, %287, !dbg !28
  %289 = fadd float %279, %288, !dbg !28
  %290 = fadd float %.018.i27, %289, !dbg !28
  %291 = fadd float %286, %290, !dbg !28
  %292 = fsub float %286, %291, !dbg !28
  %293 = fadd float %290, %292, !dbg !28
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not22.i28 = icmp eq i32 %294, 0, !dbg !28
  %.027.i29 = select i1 %.not22.i28, float %142, float %141, !dbg !28
  %295 = fcmp ogt float %.027.i29, 0x46FED09BE0000000, !dbg !28
  %.013.i30 = select i1 %295, float 0x3F28000000000000, float 1.500000e+00, !dbg !28
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not23.i31 = icmp eq i32 %296, 0, !dbg !28
  %297 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i30, float %291) #6, !dbg !28
  %298 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i30, float %291) #6, !dbg !28
  %.028.i32 = select i1 %.not23.i31, float %298, float %297, !dbg !28
  %299 = fneg float %.028.i32, !dbg !28
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not24.i33 = icmp eq i32 %300, 0, !dbg !28
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %291, float %299) #6, !dbg !28
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %291, float %299) #6, !dbg !28
  %.029.i34 = select i1 %.not24.i33, float %302, float %301, !dbg !28
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not25.i35 = icmp eq i32 %303, 0, !dbg !28
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %293, float %.029.i34) #6, !dbg !28
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %293, float %.029.i34) #6, !dbg !28
  %.030.i36 = select i1 %.not25.i35, float %305, float %304, !dbg !28
  %306 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not26.i37 = icmp eq i32 %306, 0, !dbg !28
  %307 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %291, float %.030.i36) #6, !dbg !28
  %308 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %291, float %.030.i36) #6, !dbg !28
  %.031.i38 = select i1 %.not26.i37, float %308, float %307, !dbg !28
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not27.i39 = icmp eq i32 %309, 0, !dbg !28
  %310 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %.031.i38) #6, !dbg !28
  %311 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %.031.i38) #6, !dbg !28
  %.032.i40 = select i1 %.not27.i39, float %311, float %310, !dbg !28
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %313 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %314 = bitcast float %.032.i40 to i32, !dbg !28
  %315 = icmp eq i32 %314, 1118925336, !dbg !28
  %prod.i.145.0.i46 = select i1 %315, float 0x40562E42E0000000, float %.032.i40, !dbg !28
  %316 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not30.i47 = icmp eq i32 %316, 0, !dbg !28
  %317 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #6, !dbg !28
  %318 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #6, !dbg !28
  %.017.i48 = select i1 %.not30.i47, float %318, float %317, !dbg !28
  %319 = tail call float @llvm.nvvm.trunc.f(float %.017.i48) #6, !dbg !28
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not31.i49 = icmp eq i32 %320, 0, !dbg !28
  %321 = tail call float @llvm.nvvm.fabs.ftz.f(float %319) #6, !dbg !28
  %322 = tail call float @llvm.nvvm.fabs.f(float %319) #6, !dbg !28
  %.023.i50 = select i1 %.not31.i49, float %322, float %321, !dbg !28
  %323 = fcmp ogt float %.023.i50, 1.260000e+02, !dbg !28
  %324 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %319), !dbg !28
  %j.i.i.0.i51 = select i1 %323, float %324, float %319, !dbg !28
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not32.i52 = icmp eq i32 %325, 0, !dbg !28
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #6, !dbg !28
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #6, !dbg !28
  %.035.i53 = select i1 %.not32.i52, float %327, float %326, !dbg !28
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not33.i54 = icmp eq i32 %328, 0, !dbg !28
  %329 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #6, !dbg !28
  %330 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #6, !dbg !28
  %.036.i55 = select i1 %.not33.i54, float %330, float %329, !dbg !28
  %331 = fmul float %.036.i55, 0x3FF7154760000000, !dbg !28
  %332 = fadd float %j.i.i.0.i51, 0x4168000FE0000000, !dbg !28
  %333 = bitcast float %332 to i32, !dbg !28
  %334 = shl i32 %333, 23, !dbg !28
  %335 = bitcast i32 %334 to float, !dbg !28
  %336 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %331) #6, !dbg !28
  %337 = fmul float %336, %335, !dbg !28
  %338 = fcmp une float %337, 0x7FF0000000000000, !dbg !28
  br i1 %338, label %__internal_fmad.exit.i.i85, label %__internal_accurate_powf.exit.i56, !dbg !28

__internal_fmad.exit.i.i85:                       ; preds = %__nv_powf.exit
  %.not29.i43 = icmp eq i32 %313, 0, !dbg !28
  %.not28.i41 = icmp eq i32 %312, 0, !dbg !28
  %339 = fneg float %.032.i40, !dbg !28
  %340 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %339) #6, !dbg !28
  %341 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %339) #6, !dbg !28
  %.033.i42 = select i1 %.not28.i41, float %340, float %341, !dbg !28
  %342 = tail call float @llvm.nvvm.add.rn.f(float %.033.i42, float %.031.i38) #6, !dbg !28
  %343 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i42, float %.031.i38) #6, !dbg !28
  %.034.i44 = select i1 %.not29.i43, float %342, float %343, !dbg !28
  %344 = fadd float %.034.i44, 0x3EE0000000000000, !dbg !28
  %prod.i.044.0.i45 = select i1 %315, float %344, float %.034.i44, !dbg !28
  %345 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not34.i86 = icmp eq i32 %345, 0, !dbg !28
  %346 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %337, float %prod.i.044.0.i45, float %337) #6, !dbg !28
  %347 = tail call float @llvm.nvvm.fma.rn.f(float %337, float %prod.i.044.0.i45, float %337) #6, !dbg !28
  %.014.i87 = select i1 %.not34.i86, float %347, float %346, !dbg !28
  br label %__internal_accurate_powf.exit.i56, !dbg !28

__internal_accurate_powf.exit.i56:                ; preds = %__internal_fmad.exit.i.i85, %__nv_powf.exit
  %t.i.0.i57 = phi float [ %.014.i87, %__internal_fmad.exit.i.i85 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !28
  %348 = fcmp olt float %229, 0.000000e+00, !dbg !28
  %or.cond.i58 = select i1 %348, i1 %227, i1 false, !dbg !28
  %349 = fcmp oeq float %229, 0.000000e+00, !dbg !28
  br i1 %349, label %350, label %353, !dbg !28

350:                                              ; preds = %__internal_accurate_powf.exit.i56
  %351 = fadd float %229, %229, !dbg !28
  %352 = select i1 %227, float %351, float 0.000000e+00, !dbg !28
  br label %__internal_powf_corner_cases.exit.i62, !dbg !28

353:                                              ; preds = %__internal_accurate_powf.exit.i56
  %354 = fneg float %t.i.0.i57, !dbg !28
  %.010.i59 = select i1 %or.cond.i58, float %354, float %t.i.0.i57, !dbg !28
  %355 = tail call float @llvm.nvvm.trunc.f(float 1.500000e+00) #6, !dbg !28
  %356 = fcmp une float %355, 1.500000e+00, !dbg !28
  %or.cond2.i60 = select i1 %348, i1 %356, i1 false, !dbg !28
  %.111.i61 = select i1 %or.cond2.i60, float 0x7FFFFFFFE0000000, float %.010.i59, !dbg !28
  br label %__internal_powf_corner_cases.exit.i62, !dbg !28

__internal_powf_corner_cases.exit.i62:            ; preds = %353, %350
  %.212.i63 = phi float [ %352, %350 ], [ %.111.i61, %353 ], !dbg !28
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not35.i64 = icmp eq i32 %357, 0, !dbg !28
  %.01.i65 = select i1 %.not35.i64, float %231, float %230, !dbg !28
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not36.i66 = icmp eq i32 %358, 0, !dbg !28
  %.02.i67 = select i1 %.not36.i66, float %142, float %141, !dbg !28
  %359 = fadd float %.01.i65, %.02.i67, !dbg !28
  %360 = bitcast float %359 to i32, !dbg !28
  %361 = icmp sgt i32 %360, 2139095039, !dbg !28
  br i1 %361, label %__nv_isnanf.exit.i.i70, label %__nv_powf.exit88, !dbg !28

__nv_isnanf.exit.i.i70:                           ; preds = %__internal_powf_corner_cases.exit.i62
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not37.i71 = icmp eq i32 %362, 0, !dbg !28
  %.06.i72 = select i1 %.not37.i71, float %231, float %230, !dbg !28
  %363 = fcmp uno float %.06.i72, 0.000000e+00, !dbg !28
  br i1 %363, label %366, label %__nv_isnanf.exit11.i.i73, !dbg !28

__nv_isnanf.exit11.i.i73:                         ; preds = %__nv_isnanf.exit.i.i70
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not38.i74 = icmp eq i32 %364, 0, !dbg !28
  %.07.i75 = select i1 %.not38.i74, float %142, float %141, !dbg !28
  %365 = fcmp uno float %.07.i75, 0.000000e+00, !dbg !28
  br i1 %365, label %366, label %__nv_isinff.exit8.i.i76, !dbg !28

366:                                              ; preds = %__nv_isnanf.exit11.i.i73, %__nv_isnanf.exit.i.i70
  %367 = fadd float %229, 1.500000e+00, !dbg !28
  br label %__nv_powf.exit88, !dbg !28

__nv_isinff.exit8.i.i76:                          ; preds = %__nv_isnanf.exit11.i.i73
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not39.i77 = icmp eq i32 %368, 0, !dbg !28
  %.05.i78 = select i1 %.not39.i77, float %142, float %141, !dbg !28
  %369 = fcmp oeq float %.05.i78, 0x7FF0000000000000, !dbg !28
  %370 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not41.i83 = icmp eq i32 %370, 0, !dbg !28
  %.04.i84 = select i1 %.not41.i83, float %231, float %230, !dbg !28
  br i1 %369, label %__nv_fabsf.exit5.i.i82, label %__nv_isinff.exit.i.i79, !dbg !28

__nv_fabsf.exit5.i.i82:                           ; preds = %__nv_isinff.exit8.i.i76
  %371 = fcmp ogt float %.04.i84, 1.000000e+00, !dbg !28
  %372 = fcmp oeq float %229, -1.000000e+00, !dbg !28
  %373 = select i1 %371, float 0x7FF0000000000000, float 0.000000e+00, !dbg !28
  %374 = select i1 %372, float 1.000000e+00, float %373, !dbg !28
  br label %__nv_powf.exit88, !dbg !28

__nv_isinff.exit.i.i79:                           ; preds = %__nv_isinff.exit8.i.i76
  %375 = fcmp oeq float %.04.i84, 0x7FF0000000000000, !dbg !28
  br i1 %375, label %376, label %__nv_powf.exit88, !dbg !28

376:                                              ; preds = %__nv_isinff.exit.i.i79
  %377 = select i1 %or.cond.i58, float 0xFFF0000000000000, float 0x7FF0000000000000, !dbg !28
  br label %__nv_powf.exit88, !dbg !28

__nv_powf.exit88:                                 ; preds = %__internal_powf_corner_cases.exit.i62, %366, %__nv_fabsf.exit5.i.i82, %__nv_isinff.exit.i.i79, %376
  %.3.i68 = phi float [ %.212.i63, %__internal_powf_corner_cases.exit.i62 ], [ %367, %366 ], [ %374, %__nv_fabsf.exit5.i.i82 ], [ %377, %376 ], [ %.212.i63, %__nv_isinff.exit.i.i79 ], !dbg !28
  %378 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not.i89 = icmp eq i32 %378, 0, !dbg !28
  %.08.i90 = select i1 %.not.i89, float %72, float %71, !dbg !28
  %379 = fcmp oeq float %.08.i90, 1.000000e+00, !dbg !28
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not12.i91 = icmp eq i32 %380, 0, !dbg !28
  %381 = extractelement <2 x float> %66, i64 0, !dbg !28
  %382 = tail call float @llvm.nvvm.fabs.ftz.f(float %381) #6, !dbg !28
  %383 = tail call float @llvm.nvvm.fabs.f(float %381) #6, !dbg !28
  %.09.i92 = select i1 %.not12.i91, float %383, float %382, !dbg !28
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not13.i93 = icmp eq i32 %384, 0, !dbg !28
  %385 = fcmp olt float %.09.i92, 0x3810000000000000, !dbg !28
  %386 = fmul float %.09.i92, 0x4170000000000000, !dbg !28
  %387 = select i1 %.not13.i93, i1 %385, i1 false, !dbg !28
  %.116.i96 = select i1 %387, float %386, float %.09.i92, !dbg !28
  %expo.i.i.1.i97 = select i1 %387, float -1.510000e+02, float -1.270000e+02, !dbg !28
  %388 = bitcast float %.116.i96 to i32, !dbg !28
  %389 = and i32 %388, 8388607, !dbg !28
  %390 = or disjoint i32 %389, 1065353216, !dbg !28
  %391 = bitcast i32 %390 to float, !dbg !28
  %392 = lshr i32 %388, 23, !dbg !28
  %393 = uitofp nneg i32 %392 to float, !dbg !28
  %394 = fadd float %expo.i.i.1.i97, %393, !dbg !28
  %395 = fcmp ogt float %391, 0x3FF6A09E60000000, !dbg !28
  %396 = fmul float %391, 5.000000e-01, !dbg !28
  %397 = fadd float %394, 1.000000e+00, !dbg !28
  %expo.i.i.2.i98 = select i1 %395, float %397, float %394, !dbg !28
  %m.i.i.0.i99 = select i1 %395, float %396, float %391, !dbg !28
  %398 = fadd float %m.i.i.0.i99, -1.000000e+00, !dbg !28
  %399 = fadd float %m.i.i.0.i99, 1.000000e+00, !dbg !28
  %400 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %399) #7, !dbg !28, !srcloc !29
  %401 = fmul float %398, 2.000000e+00, !dbg !28
  %402 = fmul float %400, %401, !dbg !28
  %403 = fmul float %402, %402, !dbg !28
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not14.i100 = icmp eq i32 %404, 0, !dbg !28
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %403, float 0x3F8995EC60000000) #6, !dbg !28
  %406 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %403, float 0x3F8995EC60000000) #6, !dbg !28
  %.020.i101 = select i1 %.not14.i100, float %406, float %405, !dbg !28
  %407 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not15.i102 = icmp eq i32 %407, 0, !dbg !28
  %408 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i101, float %403, float 0x3FB55557A0000000) #6, !dbg !28
  %409 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i101, float %403, float 0x3FB55557A0000000) #6, !dbg !28
  %.021.i103 = select i1 %.not15.i102, float %409, float %408, !dbg !28
  %410 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not16.i104 = icmp eq i32 %410, 0, !dbg !28
  %411 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i103, float %403) #6, !dbg !28
  %412 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i103, float %403) #6, !dbg !28
  %.022.i105 = select i1 %.not16.i104, float %412, float %411, !dbg !28
  %413 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not17.i106 = icmp eq i32 %413, 0, !dbg !28
  %414 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i105, float %402) #6, !dbg !28
  %415 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i105, float %402) #6, !dbg !28
  %.024.i107 = select i1 %.not17.i106, float %415, float %414, !dbg !28
  %416 = fsub float %398, %402, !dbg !28
  %417 = fmul float %416, 2.000000e+00, !dbg !28
  %418 = fneg float %402, !dbg !28
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not18.i108 = icmp eq i32 %419, 0, !dbg !28
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %418, float %398, float %417) #6, !dbg !28
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %418, float %398, float %417) #6, !dbg !28
  %.025.i109 = select i1 %.not18.i108, float %421, float %420, !dbg !28
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not19.i110 = icmp eq i32 %422, 0, !dbg !28
  %423 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %400, float %.025.i109) #6, !dbg !28
  %424 = tail call float @llvm.nvvm.mul.rn.f(float %400, float %.025.i109) #6, !dbg !28
  %.026.i111 = select i1 %.not19.i110, float %424, float %423, !dbg !28
  %425 = fadd float %402, %.024.i107, !dbg !28
  %426 = fsub float %402, %425, !dbg !28
  %427 = fadd float %.024.i107, %426, !dbg !28
  %428 = fadd float %.026.i111, %427, !dbg !28
  %429 = fadd float %425, %428, !dbg !28
  %430 = fsub float %425, %429, !dbg !28
  %431 = fadd float %428, %430, !dbg !28
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not20.i112 = icmp eq i32 %432, 0, !dbg !28
  %433 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i98, float 0x3FE62E4000000000) #6, !dbg !28
  %434 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i98, float 0x3FE62E4000000000) #6, !dbg !28
  %.019.i113 = select i1 %.not20.i112, float %434, float %433, !dbg !28
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not21.i114 = icmp eq i32 %435, 0, !dbg !28
  %436 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i98, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %437 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i98, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %.018.i115 = select i1 %.not21.i114, float %437, float %436, !dbg !28
  %438 = fadd float %.019.i113, %429, !dbg !28
  %439 = fsub float %.019.i113, %438, !dbg !28
  %440 = fadd float %429, %439, !dbg !28
  %441 = fadd float %431, %440, !dbg !28
  %442 = fadd float %.018.i115, %441, !dbg !28
  %443 = fadd float %438, %442, !dbg !28
  %444 = fsub float %438, %443, !dbg !28
  %445 = fadd float %442, %444, !dbg !28
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not22.i116 = icmp eq i32 %446, 0, !dbg !28
  %.027.i117 = select i1 %.not22.i116, float %142, float %141, !dbg !28
  %447 = fcmp ogt float %.027.i117, 0x46FED09BE0000000, !dbg !28
  %.013.i118 = select i1 %447, float 0x3F28000000000000, float 1.500000e+00, !dbg !28
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not23.i119 = icmp eq i32 %448, 0, !dbg !28
  %449 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i118, float %443) #6, !dbg !28
  %450 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i118, float %443) #6, !dbg !28
  %.028.i120 = select i1 %.not23.i119, float %450, float %449, !dbg !28
  %451 = fneg float %.028.i120, !dbg !28
  %452 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not24.i121 = icmp eq i32 %452, 0, !dbg !28
  %453 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i118, float %443, float %451) #6, !dbg !28
  %454 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i118, float %443, float %451) #6, !dbg !28
  %.029.i122 = select i1 %.not24.i121, float %454, float %453, !dbg !28
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not25.i123 = icmp eq i32 %455, 0, !dbg !28
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i118, float %445, float %.029.i122) #6, !dbg !28
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i118, float %445, float %.029.i122) #6, !dbg !28
  %.030.i124 = select i1 %.not25.i123, float %457, float %456, !dbg !28
  %458 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not26.i125 = icmp eq i32 %458, 0, !dbg !28
  %459 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %443, float %.030.i124) #6, !dbg !28
  %460 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %443, float %.030.i124) #6, !dbg !28
  %.031.i126 = select i1 %.not26.i125, float %460, float %459, !dbg !28
  %461 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not27.i127 = icmp eq i32 %461, 0, !dbg !28
  %462 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i120, float %.031.i126) #6, !dbg !28
  %463 = tail call float @llvm.nvvm.add.rn.f(float %.028.i120, float %.031.i126) #6, !dbg !28
  %.032.i128 = select i1 %.not27.i127, float %463, float %462, !dbg !28
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %465 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %466 = bitcast float %.032.i128 to i32, !dbg !28
  %467 = icmp eq i32 %466, 1118925336, !dbg !28
  %prod.i.145.0.i134 = select i1 %467, float 0x40562E42E0000000, float %.032.i128, !dbg !28
  %468 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not30.i135 = icmp eq i32 %468, 0, !dbg !28
  %469 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i134, float 0x3FF7154760000000) #6, !dbg !28
  %470 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i134, float 0x3FF7154760000000) #6, !dbg !28
  %.017.i136 = select i1 %.not30.i135, float %470, float %469, !dbg !28
  %471 = tail call float @llvm.nvvm.trunc.f(float %.017.i136) #6, !dbg !28
  %472 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not31.i137 = icmp eq i32 %472, 0, !dbg !28
  %473 = tail call float @llvm.nvvm.fabs.ftz.f(float %471) #6, !dbg !28
  %474 = tail call float @llvm.nvvm.fabs.f(float %471) #6, !dbg !28
  %.023.i138 = select i1 %.not31.i137, float %474, float %473, !dbg !28
  %475 = fcmp ogt float %.023.i138, 1.260000e+02, !dbg !28
  %476 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %471), !dbg !28
  %j.i.i.0.i139 = select i1 %475, float %476, float %471, !dbg !28
  %477 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not32.i140 = icmp eq i32 %477, 0, !dbg !28
  %478 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i139, float 0xBFE62E4300000000, float %prod.i.145.0.i134) #6, !dbg !28
  %479 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i139, float 0xBFE62E4300000000, float %prod.i.145.0.i134) #6, !dbg !28
  %.035.i141 = select i1 %.not32.i140, float %479, float %478, !dbg !28
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not33.i142 = icmp eq i32 %480, 0, !dbg !28
  %481 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i139, float 0x3E205C6100000000, float %.035.i141) #6, !dbg !28
  %482 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i139, float 0x3E205C6100000000, float %.035.i141) #6, !dbg !28
  %.036.i143 = select i1 %.not33.i142, float %482, float %481, !dbg !28
  %483 = fmul float %.036.i143, 0x3FF7154760000000, !dbg !28
  %484 = fadd float %j.i.i.0.i139, 0x4168000FE0000000, !dbg !28
  %485 = bitcast float %484 to i32, !dbg !28
  %486 = shl i32 %485, 23, !dbg !28
  %487 = bitcast i32 %486 to float, !dbg !28
  %488 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %483) #6, !dbg !28
  %489 = fmul float %488, %487, !dbg !28
  %490 = fcmp une float %489, 0x7FF0000000000000, !dbg !28
  br i1 %490, label %__internal_fmad.exit.i.i173, label %__internal_accurate_powf.exit.i144, !dbg !28

__internal_fmad.exit.i.i173:                      ; preds = %__nv_powf.exit88
  %.not29.i131 = icmp eq i32 %465, 0, !dbg !28
  %.not28.i129 = icmp eq i32 %464, 0, !dbg !28
  %491 = fneg float %.032.i128, !dbg !28
  %492 = tail call float @llvm.nvvm.add.rn.f(float %.028.i120, float %491) #6, !dbg !28
  %493 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i120, float %491) #6, !dbg !28
  %.033.i130 = select i1 %.not28.i129, float %492, float %493, !dbg !28
  %494 = tail call float @llvm.nvvm.add.rn.f(float %.033.i130, float %.031.i126) #6, !dbg !28
  %495 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i130, float %.031.i126) #6, !dbg !28
  %.034.i132 = select i1 %.not29.i131, float %494, float %495, !dbg !28
  %496 = fadd float %.034.i132, 0x3EE0000000000000, !dbg !28
  %prod.i.044.0.i133 = select i1 %467, float %496, float %.034.i132, !dbg !28
  %497 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not34.i174 = icmp eq i32 %497, 0, !dbg !28
  %498 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %489, float %prod.i.044.0.i133, float %489) #6, !dbg !28
  %499 = tail call float @llvm.nvvm.fma.rn.f(float %489, float %prod.i.044.0.i133, float %489) #6, !dbg !28
  %.014.i175 = select i1 %.not34.i174, float %499, float %498, !dbg !28
  br label %__internal_accurate_powf.exit.i144, !dbg !28

__internal_accurate_powf.exit.i144:               ; preds = %__internal_fmad.exit.i.i173, %__nv_powf.exit88
  %t.i.0.i145 = phi float [ %.014.i175, %__internal_fmad.exit.i.i173 ], [ 0x7FF0000000000000, %__nv_powf.exit88 ], !dbg !28
  %500 = fcmp olt float %381, 0.000000e+00, !dbg !28
  %or.cond.i146 = select i1 %500, i1 %379, i1 false, !dbg !28
  %501 = fcmp oeq float %381, 0.000000e+00, !dbg !28
  br i1 %501, label %502, label %505, !dbg !28

502:                                              ; preds = %__internal_accurate_powf.exit.i144
  %503 = fadd float %381, %381, !dbg !28
  %504 = select i1 %379, float %503, float 0.000000e+00, !dbg !28
  br label %__internal_powf_corner_cases.exit.i150, !dbg !28

505:                                              ; preds = %__internal_accurate_powf.exit.i144
  %506 = fneg float %t.i.0.i145, !dbg !28
  %.010.i147 = select i1 %or.cond.i146, float %506, float %t.i.0.i145, !dbg !28
  %507 = tail call float @llvm.nvvm.trunc.f(float 1.500000e+00) #6, !dbg !28
  %508 = fcmp une float %507, 1.500000e+00, !dbg !28
  %or.cond2.i148 = select i1 %500, i1 %508, i1 false, !dbg !28
  %.111.i149 = select i1 %or.cond2.i148, float 0x7FFFFFFFE0000000, float %.010.i147, !dbg !28
  br label %__internal_powf_corner_cases.exit.i150, !dbg !28

__internal_powf_corner_cases.exit.i150:           ; preds = %505, %502
  %.212.i151 = phi float [ %504, %502 ], [ %.111.i149, %505 ], !dbg !28
  %509 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not35.i152 = icmp eq i32 %509, 0, !dbg !28
  %.01.i153 = select i1 %.not35.i152, float %383, float %382, !dbg !28
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not36.i154 = icmp eq i32 %510, 0, !dbg !28
  %.02.i155 = select i1 %.not36.i154, float %142, float %141, !dbg !28
  %511 = fadd float %.01.i153, %.02.i155, !dbg !28
  %512 = bitcast float %511 to i32, !dbg !28
  %513 = icmp sgt i32 %512, 2139095039, !dbg !28
  br i1 %513, label %__nv_isnanf.exit.i.i158, label %__nv_powf.exit176, !dbg !28

__nv_isnanf.exit.i.i158:                          ; preds = %__internal_powf_corner_cases.exit.i150
  %514 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not37.i159 = icmp eq i32 %514, 0, !dbg !28
  %.06.i160 = select i1 %.not37.i159, float %383, float %382, !dbg !28
  %515 = fcmp uno float %.06.i160, 0.000000e+00, !dbg !28
  br i1 %515, label %518, label %__nv_isnanf.exit11.i.i161, !dbg !28

__nv_isnanf.exit11.i.i161:                        ; preds = %__nv_isnanf.exit.i.i158
  %516 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not38.i162 = icmp eq i32 %516, 0, !dbg !28
  %.07.i163 = select i1 %.not38.i162, float %142, float %141, !dbg !28
  %517 = fcmp uno float %.07.i163, 0.000000e+00, !dbg !28
  br i1 %517, label %518, label %__nv_isinff.exit8.i.i164, !dbg !28

518:                                              ; preds = %__nv_isnanf.exit11.i.i161, %__nv_isnanf.exit.i.i158
  %519 = fadd float %381, 1.500000e+00, !dbg !28
  br label %__nv_powf.exit176, !dbg !28

__nv_isinff.exit8.i.i164:                         ; preds = %__nv_isnanf.exit11.i.i161
  %520 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not39.i165 = icmp eq i32 %520, 0, !dbg !28
  %.05.i166 = select i1 %.not39.i165, float %142, float %141, !dbg !28
  %521 = fcmp oeq float %.05.i166, 0x7FF0000000000000, !dbg !28
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not41.i171 = icmp eq i32 %522, 0, !dbg !28
  %.04.i172 = select i1 %.not41.i171, float %383, float %382, !dbg !28
  br i1 %521, label %__nv_fabsf.exit5.i.i170, label %__nv_isinff.exit.i.i167, !dbg !28

__nv_fabsf.exit5.i.i170:                          ; preds = %__nv_isinff.exit8.i.i164
  %523 = fcmp ogt float %.04.i172, 1.000000e+00, !dbg !28
  %524 = fcmp oeq float %381, -1.000000e+00, !dbg !28
  %525 = select i1 %523, float 0x7FF0000000000000, float 0.000000e+00, !dbg !28
  %526 = select i1 %524, float 1.000000e+00, float %525, !dbg !28
  br label %__nv_powf.exit176, !dbg !28

__nv_isinff.exit.i.i167:                          ; preds = %__nv_isinff.exit8.i.i164
  %527 = fcmp oeq float %.04.i172, 0x7FF0000000000000, !dbg !28
  br i1 %527, label %528, label %__nv_powf.exit176, !dbg !28

528:                                              ; preds = %__nv_isinff.exit.i.i167
  %529 = select i1 %or.cond.i146, float 0xFFF0000000000000, float 0x7FF0000000000000, !dbg !28
  br label %__nv_powf.exit176, !dbg !28

__nv_powf.exit176:                                ; preds = %__internal_powf_corner_cases.exit.i150, %518, %__nv_fabsf.exit5.i.i170, %__nv_isinff.exit.i.i167, %528
  %.3.i156 = phi float [ %.212.i151, %__internal_powf_corner_cases.exit.i150 ], [ %519, %518 ], [ %526, %__nv_fabsf.exit5.i.i170 ], [ %529, %528 ], [ %.212.i151, %__nv_isinff.exit.i.i167 ], !dbg !28
  %530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not.i177 = icmp eq i32 %530, 0, !dbg !28
  %.08.i178 = select i1 %.not.i177, float %72, float %71, !dbg !28
  %531 = fcmp oeq float %.08.i178, 1.000000e+00, !dbg !28
  %532 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not12.i179 = icmp eq i32 %532, 0, !dbg !28
  %533 = extractelement <2 x float> %66, i64 1, !dbg !28
  %534 = tail call float @llvm.nvvm.fabs.ftz.f(float %533) #6, !dbg !28
  %535 = tail call float @llvm.nvvm.fabs.f(float %533) #6, !dbg !28
  %.09.i180 = select i1 %.not12.i179, float %535, float %534, !dbg !28
  %536 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not13.i181 = icmp eq i32 %536, 0, !dbg !28
  %537 = fcmp olt float %.09.i180, 0x3810000000000000, !dbg !28
  %538 = fmul float %.09.i180, 0x4170000000000000, !dbg !28
  %539 = select i1 %.not13.i181, i1 %537, i1 false, !dbg !28
  %.116.i184 = select i1 %539, float %538, float %.09.i180, !dbg !28
  %expo.i.i.1.i185 = select i1 %539, float -1.510000e+02, float -1.270000e+02, !dbg !28
  %540 = bitcast float %.116.i184 to i32, !dbg !28
  %541 = and i32 %540, 8388607, !dbg !28
  %542 = or disjoint i32 %541, 1065353216, !dbg !28
  %543 = bitcast i32 %542 to float, !dbg !28
  %544 = lshr i32 %540, 23, !dbg !28
  %545 = uitofp nneg i32 %544 to float, !dbg !28
  %546 = fadd float %expo.i.i.1.i185, %545, !dbg !28
  %547 = fcmp ogt float %543, 0x3FF6A09E60000000, !dbg !28
  %548 = fmul float %543, 5.000000e-01, !dbg !28
  %549 = fadd float %546, 1.000000e+00, !dbg !28
  %expo.i.i.2.i186 = select i1 %547, float %549, float %546, !dbg !28
  %m.i.i.0.i187 = select i1 %547, float %548, float %543, !dbg !28
  %550 = fadd float %m.i.i.0.i187, -1.000000e+00, !dbg !28
  %551 = fadd float %m.i.i.0.i187, 1.000000e+00, !dbg !28
  %552 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %551) #7, !dbg !28, !srcloc !29
  %553 = fmul float %550, 2.000000e+00, !dbg !28
  %554 = fmul float %552, %553, !dbg !28
  %555 = fmul float %554, %554, !dbg !28
  %556 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not14.i188 = icmp eq i32 %556, 0, !dbg !28
  %557 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %555, float 0x3F8995EC60000000) #6, !dbg !28
  %558 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %555, float 0x3F8995EC60000000) #6, !dbg !28
  %.020.i189 = select i1 %.not14.i188, float %558, float %557, !dbg !28
  %559 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not15.i190 = icmp eq i32 %559, 0, !dbg !28
  %560 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i189, float %555, float 0x3FB55557A0000000) #6, !dbg !28
  %561 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i189, float %555, float 0x3FB55557A0000000) #6, !dbg !28
  %.021.i191 = select i1 %.not15.i190, float %561, float %560, !dbg !28
  %562 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not16.i192 = icmp eq i32 %562, 0, !dbg !28
  %563 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i191, float %555) #6, !dbg !28
  %564 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i191, float %555) #6, !dbg !28
  %.022.i193 = select i1 %.not16.i192, float %564, float %563, !dbg !28
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not17.i194 = icmp eq i32 %565, 0, !dbg !28
  %566 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i193, float %554) #6, !dbg !28
  %567 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i193, float %554) #6, !dbg !28
  %.024.i195 = select i1 %.not17.i194, float %567, float %566, !dbg !28
  %568 = fsub float %550, %554, !dbg !28
  %569 = fmul float %568, 2.000000e+00, !dbg !28
  %570 = fneg float %554, !dbg !28
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not18.i196 = icmp eq i32 %571, 0, !dbg !28
  %572 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %570, float %550, float %569) #6, !dbg !28
  %573 = tail call float @llvm.nvvm.fma.rn.f(float %570, float %550, float %569) #6, !dbg !28
  %.025.i197 = select i1 %.not18.i196, float %573, float %572, !dbg !28
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not19.i198 = icmp eq i32 %574, 0, !dbg !28
  %575 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %552, float %.025.i197) #6, !dbg !28
  %576 = tail call float @llvm.nvvm.mul.rn.f(float %552, float %.025.i197) #6, !dbg !28
  %.026.i199 = select i1 %.not19.i198, float %576, float %575, !dbg !28
  %577 = fadd float %554, %.024.i195, !dbg !28
  %578 = fsub float %554, %577, !dbg !28
  %579 = fadd float %.024.i195, %578, !dbg !28
  %580 = fadd float %.026.i199, %579, !dbg !28
  %581 = fadd float %577, %580, !dbg !28
  %582 = fsub float %577, %581, !dbg !28
  %583 = fadd float %580, %582, !dbg !28
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not20.i200 = icmp eq i32 %584, 0, !dbg !28
  %585 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i186, float 0x3FE62E4000000000) #6, !dbg !28
  %586 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i186, float 0x3FE62E4000000000) #6, !dbg !28
  %.019.i201 = select i1 %.not20.i200, float %586, float %585, !dbg !28
  %587 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not21.i202 = icmp eq i32 %587, 0, !dbg !28
  %588 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i186, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %589 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i186, float 0x3EB7F7D1C0000000) #6, !dbg !28
  %.018.i203 = select i1 %.not21.i202, float %589, float %588, !dbg !28
  %590 = fadd float %.019.i201, %581, !dbg !28
  %591 = fsub float %.019.i201, %590, !dbg !28
  %592 = fadd float %581, %591, !dbg !28
  %593 = fadd float %583, %592, !dbg !28
  %594 = fadd float %.018.i203, %593, !dbg !28
  %595 = fadd float %590, %594, !dbg !28
  %596 = fsub float %590, %595, !dbg !28
  %597 = fadd float %594, %596, !dbg !28
  %598 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not22.i204 = icmp eq i32 %598, 0, !dbg !28
  %.027.i205 = select i1 %.not22.i204, float %142, float %141, !dbg !28
  %599 = fcmp ogt float %.027.i205, 0x46FED09BE0000000, !dbg !28
  %.013.i206 = select i1 %599, float 0x3F28000000000000, float 1.500000e+00, !dbg !28
  %600 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not23.i207 = icmp eq i32 %600, 0, !dbg !28
  %601 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i206, float %595) #6, !dbg !28
  %602 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i206, float %595) #6, !dbg !28
  %.028.i208 = select i1 %.not23.i207, float %602, float %601, !dbg !28
  %603 = fneg float %.028.i208, !dbg !28
  %604 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not24.i209 = icmp eq i32 %604, 0, !dbg !28
  %605 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i206, float %595, float %603) #6, !dbg !28
  %606 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i206, float %595, float %603) #6, !dbg !28
  %.029.i210 = select i1 %.not24.i209, float %606, float %605, !dbg !28
  %607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not25.i211 = icmp eq i32 %607, 0, !dbg !28
  %608 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i206, float %597, float %.029.i210) #6, !dbg !28
  %609 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i206, float %597, float %.029.i210) #6, !dbg !28
  %.030.i212 = select i1 %.not25.i211, float %609, float %608, !dbg !28
  %610 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not26.i213 = icmp eq i32 %610, 0, !dbg !28
  %611 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %595, float %.030.i212) #6, !dbg !28
  %612 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %595, float %.030.i212) #6, !dbg !28
  %.031.i214 = select i1 %.not26.i213, float %612, float %611, !dbg !28
  %613 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not27.i215 = icmp eq i32 %613, 0, !dbg !28
  %614 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i208, float %.031.i214) #6, !dbg !28
  %615 = tail call float @llvm.nvvm.add.rn.f(float %.028.i208, float %.031.i214) #6, !dbg !28
  %.032.i216 = select i1 %.not27.i215, float %615, float %614, !dbg !28
  %616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %618 = bitcast float %.032.i216 to i32, !dbg !28
  %619 = icmp eq i32 %618, 1118925336, !dbg !28
  %prod.i.145.0.i222 = select i1 %619, float 0x40562E42E0000000, float %.032.i216, !dbg !28
  %620 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not30.i223 = icmp eq i32 %620, 0, !dbg !28
  %621 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i222, float 0x3FF7154760000000) #6, !dbg !28
  %622 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i222, float 0x3FF7154760000000) #6, !dbg !28
  %.017.i224 = select i1 %.not30.i223, float %622, float %621, !dbg !28
  %623 = tail call float @llvm.nvvm.trunc.f(float %.017.i224) #6, !dbg !28
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not31.i225 = icmp eq i32 %624, 0, !dbg !28
  %625 = tail call float @llvm.nvvm.fabs.ftz.f(float %623) #6, !dbg !28
  %626 = tail call float @llvm.nvvm.fabs.f(float %623) #6, !dbg !28
  %.023.i226 = select i1 %.not31.i225, float %626, float %625, !dbg !28
  %627 = fcmp ogt float %.023.i226, 1.260000e+02, !dbg !28
  %628 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %623), !dbg !28
  %j.i.i.0.i227 = select i1 %627, float %628, float %623, !dbg !28
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not32.i228 = icmp eq i32 %629, 0, !dbg !28
  %630 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i227, float 0xBFE62E4300000000, float %prod.i.145.0.i222) #6, !dbg !28
  %631 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i227, float 0xBFE62E4300000000, float %prod.i.145.0.i222) #6, !dbg !28
  %.035.i229 = select i1 %.not32.i228, float %631, float %630, !dbg !28
  %632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not33.i230 = icmp eq i32 %632, 0, !dbg !28
  %633 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i227, float 0x3E205C6100000000, float %.035.i229) #6, !dbg !28
  %634 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i227, float 0x3E205C6100000000, float %.035.i229) #6, !dbg !28
  %.036.i231 = select i1 %.not33.i230, float %634, float %633, !dbg !28
  %635 = fmul float %.036.i231, 0x3FF7154760000000, !dbg !28
  %636 = fadd float %j.i.i.0.i227, 0x4168000FE0000000, !dbg !28
  %637 = bitcast float %636 to i32, !dbg !28
  %638 = shl i32 %637, 23, !dbg !28
  %639 = bitcast i32 %638 to float, !dbg !28
  %640 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %635) #6, !dbg !28
  %641 = fmul float %640, %639, !dbg !28
  %642 = fcmp une float %641, 0x7FF0000000000000, !dbg !28
  br i1 %642, label %__internal_fmad.exit.i.i261, label %__internal_accurate_powf.exit.i232, !dbg !28

__internal_fmad.exit.i.i261:                      ; preds = %__nv_powf.exit176
  %.not29.i219 = icmp eq i32 %617, 0, !dbg !28
  %.not28.i217 = icmp eq i32 %616, 0, !dbg !28
  %643 = fneg float %.032.i216, !dbg !28
  %644 = tail call float @llvm.nvvm.add.rn.f(float %.028.i208, float %643) #6, !dbg !28
  %645 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i208, float %643) #6, !dbg !28
  %.033.i218 = select i1 %.not28.i217, float %644, float %645, !dbg !28
  %646 = tail call float @llvm.nvvm.add.rn.f(float %.033.i218, float %.031.i214) #6, !dbg !28
  %647 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i218, float %.031.i214) #6, !dbg !28
  %.034.i220 = select i1 %.not29.i219, float %646, float %647, !dbg !28
  %648 = fadd float %.034.i220, 0x3EE0000000000000, !dbg !28
  %prod.i.044.0.i221 = select i1 %619, float %648, float %.034.i220, !dbg !28
  %649 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not34.i262 = icmp eq i32 %649, 0, !dbg !28
  %650 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %641, float %prod.i.044.0.i221, float %641) #6, !dbg !28
  %651 = tail call float @llvm.nvvm.fma.rn.f(float %641, float %prod.i.044.0.i221, float %641) #6, !dbg !28
  %.014.i263 = select i1 %.not34.i262, float %651, float %650, !dbg !28
  br label %__internal_accurate_powf.exit.i232, !dbg !28

__internal_accurate_powf.exit.i232:               ; preds = %__internal_fmad.exit.i.i261, %__nv_powf.exit176
  %t.i.0.i233 = phi float [ %.014.i263, %__internal_fmad.exit.i.i261 ], [ 0x7FF0000000000000, %__nv_powf.exit176 ], !dbg !28
  %652 = fcmp olt float %533, 0.000000e+00, !dbg !28
  %or.cond.i234 = select i1 %652, i1 %531, i1 false, !dbg !28
  %653 = fcmp oeq float %533, 0.000000e+00, !dbg !28
  br i1 %653, label %654, label %657, !dbg !28

654:                                              ; preds = %__internal_accurate_powf.exit.i232
  %655 = fadd float %533, %533, !dbg !28
  %656 = select i1 %531, float %655, float 0.000000e+00, !dbg !28
  br label %__internal_powf_corner_cases.exit.i238, !dbg !28

657:                                              ; preds = %__internal_accurate_powf.exit.i232
  %658 = fneg float %t.i.0.i233, !dbg !28
  %.010.i235 = select i1 %or.cond.i234, float %658, float %t.i.0.i233, !dbg !28
  %659 = tail call float @llvm.nvvm.trunc.f(float 1.500000e+00) #6, !dbg !28
  %660 = fcmp une float %659, 1.500000e+00, !dbg !28
  %or.cond2.i236 = select i1 %652, i1 %660, i1 false, !dbg !28
  %.111.i237 = select i1 %or.cond2.i236, float 0x7FFFFFFFE0000000, float %.010.i235, !dbg !28
  br label %__internal_powf_corner_cases.exit.i238, !dbg !28

__internal_powf_corner_cases.exit.i238:           ; preds = %657, %654
  %.212.i239 = phi float [ %656, %654 ], [ %.111.i237, %657 ], !dbg !28
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not35.i240 = icmp eq i32 %661, 0, !dbg !28
  %.01.i241 = select i1 %.not35.i240, float %535, float %534, !dbg !28
  %662 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not36.i242 = icmp eq i32 %662, 0, !dbg !28
  %.02.i243 = select i1 %.not36.i242, float %142, float %141, !dbg !28
  %663 = fadd float %.01.i241, %.02.i243, !dbg !28
  %664 = bitcast float %663 to i32, !dbg !28
  %665 = icmp sgt i32 %664, 2139095039, !dbg !28
  br i1 %665, label %__nv_isnanf.exit.i.i246, label %__nv_powf.exit264, !dbg !28

__nv_isnanf.exit.i.i246:                          ; preds = %__internal_powf_corner_cases.exit.i238
  %666 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not37.i247 = icmp eq i32 %666, 0, !dbg !28
  %.06.i248 = select i1 %.not37.i247, float %535, float %534, !dbg !28
  %667 = fcmp uno float %.06.i248, 0.000000e+00, !dbg !28
  br i1 %667, label %670, label %__nv_isnanf.exit11.i.i249, !dbg !28

__nv_isnanf.exit11.i.i249:                        ; preds = %__nv_isnanf.exit.i.i246
  %668 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not38.i250 = icmp eq i32 %668, 0, !dbg !28
  %.07.i251 = select i1 %.not38.i250, float %142, float %141, !dbg !28
  %669 = fcmp uno float %.07.i251, 0.000000e+00, !dbg !28
  br i1 %669, label %670, label %__nv_isinff.exit8.i.i252, !dbg !28

670:                                              ; preds = %__nv_isnanf.exit11.i.i249, %__nv_isnanf.exit.i.i246
  %671 = fadd float %533, 1.500000e+00, !dbg !28
  br label %__nv_powf.exit264, !dbg !28

__nv_isinff.exit8.i.i252:                         ; preds = %__nv_isnanf.exit11.i.i249
  %672 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not39.i253 = icmp eq i32 %672, 0, !dbg !28
  %.05.i254 = select i1 %.not39.i253, float %142, float %141, !dbg !28
  %673 = fcmp oeq float %.05.i254, 0x7FF0000000000000, !dbg !28
  %674 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !28
  %.not41.i259 = icmp eq i32 %674, 0, !dbg !28
  %.04.i260 = select i1 %.not41.i259, float %535, float %534, !dbg !28
  br i1 %673, label %__nv_fabsf.exit5.i.i258, label %__nv_isinff.exit.i.i255, !dbg !28

__nv_fabsf.exit5.i.i258:                          ; preds = %__nv_isinff.exit8.i.i252
  %675 = fcmp ogt float %.04.i260, 1.000000e+00, !dbg !28
  %676 = fcmp oeq float %533, -1.000000e+00, !dbg !28
  %677 = select i1 %675, float 0x7FF0000000000000, float 0.000000e+00, !dbg !28
  %678 = select i1 %676, float 1.000000e+00, float %677, !dbg !28
  br label %__nv_powf.exit264, !dbg !28

__nv_isinff.exit.i.i255:                          ; preds = %__nv_isinff.exit8.i.i252
  %679 = fcmp oeq float %.04.i260, 0x7FF0000000000000, !dbg !28
  br i1 %679, label %680, label %__nv_powf.exit264, !dbg !28

680:                                              ; preds = %__nv_isinff.exit.i.i255
  %681 = select i1 %or.cond.i234, float 0xFFF0000000000000, float 0x7FF0000000000000, !dbg !28
  br label %__nv_powf.exit264, !dbg !28

__nv_powf.exit264:                                ; preds = %__internal_powf_corner_cases.exit.i238, %670, %__nv_fabsf.exit5.i.i258, %__nv_isinff.exit.i.i255, %680
  %.3.i244 = phi float [ %.212.i239, %__internal_powf_corner_cases.exit.i238 ], [ %671, %670 ], [ %678, %__nv_fabsf.exit5.i.i258 ], [ %681, %680 ], [ %.212.i239, %__nv_isinff.exit.i.i255 ], !dbg !28
  %682 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !12
  %683 = insertelement <2 x i32> %682, i32 %12, i64 1, !dbg !12
  %684 = bitcast <2 x i32> %683 to <2 x float>, !dbg !12
  %685 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !12
  %686 = insertelement <2 x i32> %685, i32 %14, i64 1, !dbg !12
  %687 = bitcast <2 x i32> %686 to <2 x float>, !dbg !12
  %688 = fcmp oeq <2 x float> %66, splat (float 1.000000e+00), !dbg !28
  %689 = fcmp oeq <2 x float> %65, splat (float 1.000000e+00), !dbg !28
  %690 = fmul <2 x float> %23, splat (float 2.500000e-01), !dbg !30
  %691 = fmul <2 x float> %24, splat (float 7.500000e-01), !dbg !31
  %692 = fmul <2 x float> %33, splat (float 2.500000e-01), !dbg !30
  %693 = fmul <2 x float> %34, splat (float 7.500000e-01), !dbg !31
  %694 = fsub <2 x float> %687, %23, !dbg !32
  %695 = fsub <2 x float> %684, %33, !dbg !32
  %696 = lshr i32 %5, 5, !dbg !10
  %697 = and i32 %5, 31, !dbg !10
  %698 = insertelement <2 x float> poison, float %.3.i, i64 0, !dbg !28
  %699 = insertelement <2 x float> %698, float %.3.i68, i64 1, !dbg !28
  %700 = select <2 x i1> %689, <2 x float> splat (float 1.000000e+00), <2 x float> %699, !dbg !28
  %701 = fadd <2 x float> %692, %693, !dbg !33
  %702 = fmul <2 x float> %695, %695, !dbg !34
  %703 = fmul <2 x float> %701, %700, !dbg !35
  %704 = fmul <2 x float> %702, %703, !dbg !36
  %705 = fadd <2 x float> %690, %691, !dbg !33
  %706 = fmul <2 x float> %694, %694, !dbg !34
  %707 = insertelement <2 x float> poison, float %.3.i156, i64 0, !dbg !28
  %708 = insertelement <2 x float> %707, float %.3.i244, i64 1, !dbg !28
  %709 = select <2 x i1> %688, <2 x float> splat (float 1.000000e+00), <2 x float> %708, !dbg !28
  %710 = fmul <2 x float> %705, %709, !dbg !35
  %711 = fmul <2 x float> %706, %710, !dbg !36
  %shift = shufflevector <2 x float> %704, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !37
  %712 = fadd <2 x float> %704, %shift, !dbg !37
  %713 = fadd <2 x float> %712, %711, !dbg !37
  %shift265 = shufflevector <2 x float> %711, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !37
  %714 = fadd <2 x float> %713, %shift265, !dbg !37
  %715 = extractelement <2 x float> %714, i64 0, !dbg !37
  %716 = bitcast float %715 to i32, !dbg !40
  %717 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %716, i32 16, i32 31), !dbg !40
  %718 = bitcast i32 %717 to float, !dbg !40
  %719 = fadd float %715, %718, !dbg !37
  %720 = bitcast float %719 to i32, !dbg !40
  %721 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %720, i32 8, i32 31), !dbg !40
  %722 = bitcast i32 %721 to float, !dbg !40
  %723 = fadd float %719, %722, !dbg !37
  %724 = bitcast float %723 to i32, !dbg !40
  %725 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %724, i32 4, i32 31), !dbg !40
  %726 = bitcast i32 %725 to float, !dbg !40
  %727 = fadd float %723, %726, !dbg !37
  %728 = bitcast float %727 to i32, !dbg !40
  %729 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %728, i32 2, i32 31), !dbg !40
  %730 = bitcast i32 %729 to float, !dbg !40
  %731 = fadd float %727, %730, !dbg !37
  %732 = bitcast float %731 to i32, !dbg !40
  %733 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %732, i32 1, i32 31), !dbg !40
  %734 = bitcast i32 %733 to float, !dbg !40
  %735 = fadd float %731, %734, !dbg !37
  %736 = icmp eq i32 %697, 0, !dbg !40
  %737 = and i32 %696, 1, !dbg !40
  %738 = zext nneg i32 %737 to i64, !dbg !40
  %739 = getelementptr float, ptr addrspace(3) @global_smem, i64 %738, !dbg !40
  %740 = bitcast float %735 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %739, <1 x i32> %740, i1 %736) #6, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %741 = icmp slt i32 %5, 2, !dbg !40
  %742 = sext i32 %5 to i64, !dbg !40
  %743 = getelementptr float, ptr addrspace(3) @global_smem, i64 %742, !dbg !40
  %744 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %743, i1 %741) #6, !dbg !40
  %745 = bitcast i32 %744 to float, !dbg !40
  %746 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %744, i32 1, i32 31), !dbg !40
  %747 = bitcast i32 %746 to float, !dbg !40
  %748 = fadd float %745, %747, !dbg !37
  %749 = and i32 %5, 1, !dbg !40
  %750 = icmp eq i32 %749, 0, !dbg !40
  %751 = and i1 %741, %750, !dbg !40
  %752 = bitcast float %748 to <1 x i32>, !dbg !40
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %743, <1 x i32> %752, i1 %751) #6, !dbg !40
  tail call void @llvm.nvvm.barrier0(), !dbg !40
  %753 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !40
  %754 = fadd float %753, 0.000000e+00, !dbg !41
  %755 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %754, float 2.560000e+02) #6, !dbg !45
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %urem = and i32 %5, 63, !dbg !47
  %756 = icmp eq i32 %urem, 0, !dbg !47
  %757 = bitcast float %755 to i32, !dbg !47
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %757, ptr addrspace(1) %0, i1 %756) #6, !dbg !47
  ret void, !dbg !48
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #5

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py", directory: "inductor_cache/ib")
!4 = !{ptr @triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0", linkageName: "triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 38, column: 18, scope: !7)
!16 = !DILocation(line: 47, column: 30, scope: !17, inlinedAt: !19)
!17 = distinct !DILexicalBlockFile(scope: !7, file: !18, discriminator: 0)
!18 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!19 = !DILocation(line: 42, column: 23, scope: !7)
!20 = !DILocation(line: 47, column: 29, scope: !17, inlinedAt: !19)
!21 = !DILocation(line: 47, column: 20, scope: !17, inlinedAt: !19)
!22 = !DILocation(line: 47, column: 16, scope: !17, inlinedAt: !19)
!23 = !DILocation(line: 43, column: 19, scope: !7)
!24 = !DILocation(line: 44, column: 19, scope: !7)
!25 = !DILocation(line: 45, column: 19, scope: !7)
!26 = !DILocation(line: 46, column: 20, scope: !7)
!27 = !DILocation(line: 47, column: 19, scope: !7)
!28 = !DILocation(line: 49, column: 33, scope: !7)
!29 = !{i32 21046}
!30 = !DILocation(line: 36, column: 18, scope: !7)
!31 = !DILocation(line: 40, column: 18, scope: !7)
!32 = !DILocation(line: 33, column: 18, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 34, column: 18, scope: !7)
!35 = !DILocation(line: 50, column: 20, scope: !7)
!36 = !DILocation(line: 51, column: 19, scope: !7)
!37 = !DILocation(line: 256, column: 15, scope: !38, inlinedAt: !39)
!38 = distinct !DILexicalBlockFile(scope: !17, file: !18, discriminator: 0)
!39 = !DILocation(line: 53, column: 59, scope: !7)
!40 = !DILocation(line: 267, column: 36, scope: !17, inlinedAt: !39)
!41 = !DILocation(line: 73, column: 15, scope: !42, inlinedAt: !44)
!42 = distinct !DILexicalBlockFile(scope: !7, file: !43, discriminator: 0)
!43 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!44 = !DILocation(line: 53, column: 45, scope: !7)
!45 = !DILocation(line: 55, column: 20, scope: !7)
!46 = !DILocation(line: 56, column: 4, scope: !7)
!47 = !DILocation(line: 57, column: 63, scope: !7)
!48 = !DILocation(line: 57, column: 4, scope: !7)
