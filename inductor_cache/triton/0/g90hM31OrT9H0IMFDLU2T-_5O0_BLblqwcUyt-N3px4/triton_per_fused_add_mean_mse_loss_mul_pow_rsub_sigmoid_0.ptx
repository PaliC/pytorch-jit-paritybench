//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0 // -- Begin function triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0
.visible .entry triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0_param_2,
	.param .u32 triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0_param_3
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<90>;
	.reg .b32 	%r<88>;
	.reg .f32 	%f<500>;
	.reg .b64 	%rd<8>;
$L__func_begin0:

// %bb.0:
	.loc	1 27 26                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:27:26
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd4, [triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0_param_1];
	shl.b32 	%r30, %r1, 2;
	ld.param.u64 	%rd5, [triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0_param_2];
	and.b32  	%r31, %r30, 252;
	.loc	1 31 30                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:31:30
	mul.wide.u32 	%rd6, %r31, 4;
	add.s64 	%rd2, %rd4, %rd6;
	mov.pred 	%p5, -1;
	.loc	1 31 35                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:31:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p5 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 30                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:32:30
	add.s64 	%rd3, %rd5, %rd6;
	.loc	1 32 35                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:32:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r17, 0x0;
	@%p5 ld.global.v4.b32 { %r14, %r15, %r16, %r17 }, [ %rd3 + 0 ];
	// end inline asm
	mov.f32 	%f87, 0f3F800000;
$L__tmp0:
	.loc	2 47 30                         // standard.py:47:30
	mov.b32 	%f88, %r12;
	mov.f32 	%f89, 0f00000000;
	sub.f32 	%f90, %f89, %f88;
	mov.b32 	%f91, %r13;
	sub.f32 	%f92, %f89, %f91;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f81, %f90, 0f3FB8AA3B;
	mul.f32 	%f83, %f92, 0f3FB8AA3B;
$L__tmp1:
	.loc	1 32 35                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:32:35
	mov.b32 	%f6, %r15;
	mov.b32 	%f5, %r14;
	.loc	1 38 18                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:38:18
	sub.f32 	%f7, %f87, %f5;
	sub.f32 	%f8, %f87, %f6;
$L__tmp2:
	.loc	2 47 30                         // standard.py:47:30
	mov.b32 	%f93, %r10;
	sub.f32 	%f94, %f89, %f93;
	mov.b32 	%f95, %r11;
	sub.f32 	%f96, %f89, %f95;
	.loc	2 47 29                         // standard.py:47:29
	mul.f32 	%f77, %f94, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f76, %f77;
	// end inline asm
	mul.f32 	%f79, %f96, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f78, %f79;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f97, %f76, 0f3F800000;
	add.f32 	%f98, %f78, 0f3F800000;
	.loc	2 47 29                         // standard.py:47:29
	// begin inline asm
	ex2.approx.f32 %f80, %f81;
	// end inline asm
	// begin inline asm
	ex2.approx.f32 %f82, %f83;
	// end inline asm
	.loc	2 47 20                         // standard.py:47:20
	add.f32 	%f99, %f80, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16
	mov.b32 	%r20, %f97;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f101, %r18;
	mov.b32 	%r23, %f98;
	// begin inline asm
	div.full.f32 %r21, %r19, %r23;
	// end inline asm
	mov.b32 	%f102, %r21;
	mov.b32 	%r26, %f99;
	// begin inline asm
	div.full.f32 %r24, %r19, %r26;
	// end inline asm
$L__tmp3:
	.loc	1 44 19                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:44:19
	sub.f32 	%f105, %f87, %f101;
	sub.f32 	%f106, %f87, %f102;
	.loc	1 45 19                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:45:19
	mul.f32 	%f109, %f8, %f106;
	mul.f32 	%f110, %f7, %f105;
	.loc	1 46 20                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:46:20
	fma.rn.f32 	%f113, %f101, %f5, %f110;
	.loc	1 47 19                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:47:19
	sub.f32 	%f9, %f87, %f113;
	mov.f32 	%f117, 0f3F400000;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	cvt.rzi.f32.f32 	%f118, %f117;
	fma.rn.f32 	%f119, %f118, 0fC0000000, 0f3FC00000;
	abs.ftz.f32 	%f13, %f119;
	abs.ftz.f32 	%f15, %f9;
	mov.b32 	%r32, %f15;
	and.b32  	%r33, %r32, 8388607;
	or.b32  	%r34, %r33, 1065353216;
	mov.b32 	%f120, %r34;
	shr.u32 	%r35, %r32, 23;
	cvt.rn.f32.u32 	%f121, %r35;
	add.f32 	%f122, %f121, 0fC2FE0000;
	setp.gt.f32 	%p7, %f120, 0f3FB504F3;
	mul.f32 	%f123, %f120, 0f3F000000;
	add.f32 	%f124, %f122, 0f3F800000;
	selp.f32 	%f125, %f124, %f122, %p7;
	selp.f32 	%f126, %f123, %f120, %p7;
	add.f32 	%f127, %f126, 0fBF800000;
	add.f32 	%f85, %f126, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f84,%f85;
	// end inline asm
	add.f32 	%f128, %f127, %f127;
	mul.f32 	%f129, %f84, %f128;
	mul.f32 	%f130, %f129, %f129;
	mov.f32 	%f131, 0f3C4CAF63;
	mov.f32 	%f132, 0f3B18F0FE;
	fma.rn.ftz.f32 	%f133, %f132, %f130, %f131;
	mov.f32 	%f134, 0f3DAAAABD;
	fma.rn.ftz.f32 	%f135, %f133, %f130, %f134;
	mul.rn.ftz.f32 	%f136, %f135, %f130;
	mul.rn.ftz.f32 	%f137, %f136, %f129;
	neg.f32 	%f138, %f84;
	fma.rn.f32 	%f139, %f138, %f128, %f127;
	add.f32 	%f140, %f139, %f139;
	neg.f32 	%f141, %f129;
	fma.rn.ftz.f32 	%f142, %f141, %f127, %f140;
	mul.rn.ftz.f32 	%f143, %f84, %f142;
	fma.rn.f32 	%f144, %f84, %f128, %f137;
	neg.f32 	%f145, %f144;
	fma.rn.f32 	%f146, %f84, %f128, %f145;
	add.f32 	%f147, %f137, %f146;
	add.f32 	%f148, %f143, %f147;
	add.f32 	%f149, %f144, %f148;
	sub.f32 	%f150, %f144, %f149;
	add.f32 	%f151, %f148, %f150;
	mov.f32 	%f152, 0f3F317200;
	mul.rn.ftz.f32 	%f153, %f125, %f152;
	mov.f32 	%f154, 0f35BFBE8E;
	mul.rn.ftz.f32 	%f155, %f125, %f154;
	add.f32 	%f156, %f153, %f149;
	sub.f32 	%f157, %f153, %f156;
	add.f32 	%f158, %f149, %f157;
	add.f32 	%f159, %f151, %f158;
	add.f32 	%f160, %f155, %f159;
	add.f32 	%f161, %f156, %f160;
	sub.f32 	%f162, %f156, %f161;
	add.f32 	%f163, %f160, %f162;
	mov.f32 	%f164, 0f3FC00000;
	abs.ftz.f32 	%f16, %f164;
	setp.gt.f32 	%p8, %f16, 0f77F684DF;
	selp.f32 	%f17, 0f39400000, 0f3FC00000, %p8;
	mul.rn.ftz.f32 	%f18, %f17, %f161;
	neg.f32 	%f165, %f18;
	fma.rn.ftz.f32 	%f166, %f17, %f161, %f165;
	fma.rn.ftz.f32 	%f167, %f17, %f163, %f166;
	fma.rn.ftz.f32 	%f19, %f89, %f161, %f167;
	add.rn.ftz.f32 	%f20, %f18, %f19;
	mov.b32 	%r6, %f20;
	setp.eq.s32 	%p9, %r6, 1118925336;
	selp.f32 	%f168, 0f42B17217, %f20, %p9;
	mov.f32 	%f169, 0f3FB8AA3B;
	mul.rn.ftz.f32 	%f170, %f168, %f169;
	cvt.rzi.f32.f32 	%f171, %f170;
	abs.ftz.f32 	%f172, %f171;
	setp.gt.f32 	%p10, %f172, 0f42FC0000;
	mov.f32 	%f173, 0f42FC0000;
	copysign.f32 	%f174, %f171, %f173;
	selp.f32 	%f175, %f174, %f171, %p10;
	mov.f32 	%f176, 0fBF317218;
	fma.rn.ftz.f32 	%f177, %f175, %f176, %f168;
	mov.f32 	%f178, 0f3102E308;
	fma.rn.ftz.f32 	%f179, %f175, %f178, %f177;
	mul.f32 	%f180, %f179, 0f3FB8AA3B;
	add.f32 	%f181, %f175, 0f4B40007F;
	mov.b32 	%r36, %f181;
	shl.b32 	%r37, %r36, 23;
	mov.b32 	%f182, %r37;
	ex2.approx.ftz.f32 	%f183, %f180;
	mul.f32 	%f21, %f183, %f182;
	setp.eq.f32 	%p11, %f21, 0f7F800000;
	mov.f32 	%f488, 0f7F800000;
	@%p11 bra 	$L__BB0_2;
// %bb.1:                               // %__internal_fmad.exit.i.i
	neg.f32 	%f184, %f20;
	add.rn.ftz.f32 	%f185, %f18, %f184;
	add.rn.ftz.f32 	%f186, %f185, %f19;
	add.f32 	%f187, %f186, 0f37000000;
	selp.f32 	%f188, %f187, %f186, %p9;
	fma.rn.ftz.f32 	%f488, %f21, %f188, %f21;
$L__BB0_2:                              // %__internal_accurate_powf.exit.i
	.loc	1 0 0                           // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:0
	add.f32 	%f100, %f82, 0f3F800000;
	mov.b32 	%f1, %r16;
	mov.b32 	%f103, %r24;
	fma.rn.f32 	%f114, %f102, %f6, %f109;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	setp.eq.f32 	%p13, %f13, 0f3F800000;
	setp.lt.f32 	%p14, %f9, 0f00000000;
	and.pred  	%p1, %p14, %p13;
	setp.neu.f32 	%p15, %f9, 0f00000000;
	@%p15 bra 	$L__BB0_4;
// %bb.3:
	add.f32 	%f195, %f9, %f9;
	selp.f32 	%f490, %f195, 0f00000000, %p13;
	bra.uni 	$L__BB0_5;
$L__BB0_4:
	neg.f32 	%f189, %f488;
	selp.f32 	%f190, %f189, %f488, %p1;
	cvt.rzi.f32.f32 	%f192, %f164;
	setp.neu.f32 	%p17, %f192, 0f3FC00000;
	selp.f32 	%f194, 0f7FFFFFFF, %f190, %p17;
	selp.f32 	%f490, %f194, %f190, %p14;
$L__BB0_5:                              // %__internal_powf_corner_cases.exit.i
	.loc	1 0 0                           // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:0
	mov.b32 	%r29, %f100;
	sub.f32 	%f3, %f87, %f1;
	sub.f32 	%f107, %f87, %f103;
	sub.f32 	%f10, %f87, %f114;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	add.f32 	%f196, %f15, %f16;
	mov.b32 	%r38, %f196;
	setp.lt.s32 	%p19, %r38, 2139095040;
	@%p19 bra 	$L__BB0_13;
// %bb.6:                               // %__nv_isnanf.exit.i.i
	setp.nan.f32 	%p20, %f15, %f15;
	@%p20 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_isnanf.exit11.i.i
	setp.num.f32 	%p21, %f16, %f16;
	@%p21 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_8;
$L__BB0_9:                              // %__nv_isinff.exit8.i.i
	setp.neu.f32 	%p22, %f16, 0f7F800000;
	@%p22 bra 	$L__BB0_11;
// %bb.10:                              // %__nv_fabsf.exit5.i.i
	setp.gt.f32 	%p24, %f15, 0f3F800000;
	setp.eq.f32 	%p25, %f9, 0fBF800000;
	selp.f32 	%f197, 0f7F800000, 0f00000000, %p24;
	selp.f32 	%f490, 0f3F800000, %f197, %p25;
	bra.uni 	$L__BB0_13;
$L__BB0_11:                             // %__nv_isinff.exit.i.i
	setp.neu.f32 	%p23, %f15, 0f7F800000;
	@%p23 bra 	$L__BB0_13;
// %bb.12:
	.loc	1 0 33                          // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:33
	selp.f32 	%f490, 0fFF800000, 0f7F800000, %p1;
$L__BB0_13:                             // %__nv_powf.exit
	// begin inline asm
	div.full.f32 %r27, %r19, %r29;
	// end inline asm
	mul.f32 	%f112, %f3, %f107;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	abs.ftz.f32 	%f32, %f10;
	mov.b32 	%r39, %f32;
	and.b32  	%r40, %r39, 8388607;
	or.b32  	%r41, %r40, 1065353216;
	mov.b32 	%f201, %r41;
	shr.u32 	%r42, %r39, 23;
	cvt.rn.f32.u32 	%f202, %r42;
	add.f32 	%f203, %f202, 0fC2FE0000;
	setp.gt.f32 	%p26, %f201, 0f3FB504F3;
	mul.f32 	%f204, %f201, 0f3F000000;
	add.f32 	%f205, %f203, 0f3F800000;
	selp.f32 	%f206, %f205, %f203, %p26;
	selp.f32 	%f207, %f204, %f201, %p26;
	add.f32 	%f208, %f207, 0fBF800000;
	add.f32 	%f199, %f207, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f198,%f199;
	// end inline asm
	add.f32 	%f209, %f208, %f208;
	mul.f32 	%f210, %f198, %f209;
	mul.f32 	%f211, %f210, %f210;
	fma.rn.ftz.f32 	%f214, %f132, %f211, %f131;
	fma.rn.ftz.f32 	%f216, %f214, %f211, %f134;
	mul.rn.ftz.f32 	%f217, %f216, %f211;
	mul.rn.ftz.f32 	%f218, %f217, %f210;
	neg.f32 	%f219, %f198;
	fma.rn.f32 	%f220, %f219, %f209, %f208;
	add.f32 	%f221, %f220, %f220;
	neg.f32 	%f222, %f210;
	fma.rn.ftz.f32 	%f223, %f222, %f208, %f221;
	mul.rn.ftz.f32 	%f224, %f198, %f223;
	fma.rn.f32 	%f225, %f198, %f209, %f218;
	neg.f32 	%f226, %f225;
	fma.rn.f32 	%f227, %f198, %f209, %f226;
	add.f32 	%f228, %f218, %f227;
	add.f32 	%f229, %f224, %f228;
	add.f32 	%f230, %f225, %f229;
	sub.f32 	%f231, %f225, %f230;
	add.f32 	%f232, %f229, %f231;
	mul.rn.ftz.f32 	%f234, %f206, %f152;
	mul.rn.ftz.f32 	%f236, %f206, %f154;
	add.f32 	%f237, %f234, %f230;
	sub.f32 	%f238, %f234, %f237;
	add.f32 	%f239, %f230, %f238;
	add.f32 	%f240, %f232, %f239;
	add.f32 	%f241, %f236, %f240;
	add.f32 	%f242, %f237, %f241;
	sub.f32 	%f243, %f237, %f242;
	add.f32 	%f244, %f241, %f243;
	mul.rn.ftz.f32 	%f33, %f17, %f242;
	neg.f32 	%f245, %f33;
	fma.rn.ftz.f32 	%f246, %f17, %f242, %f245;
	fma.rn.ftz.f32 	%f247, %f17, %f244, %f246;
	fma.rn.ftz.f32 	%f34, %f89, %f242, %f247;
	add.rn.ftz.f32 	%f35, %f33, %f34;
	mov.b32 	%r7, %f35;
	setp.eq.s32 	%p27, %r7, 1118925336;
	selp.f32 	%f249, 0f42B17217, %f35, %p27;
	mul.rn.ftz.f32 	%f251, %f249, %f169;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.ftz.f32 	%f253, %f252;
	setp.gt.f32 	%p28, %f253, 0f42FC0000;
	copysign.f32 	%f255, %f252, %f173;
	selp.f32 	%f256, %f255, %f252, %p28;
	fma.rn.ftz.f32 	%f258, %f256, %f176, %f249;
	fma.rn.ftz.f32 	%f260, %f256, %f178, %f258;
	mul.f32 	%f261, %f260, 0f3FB8AA3B;
	add.f32 	%f262, %f256, 0f4B40007F;
	mov.b32 	%r43, %f262;
	shl.b32 	%r44, %r43, 23;
	mov.b32 	%f263, %r44;
	ex2.approx.ftz.f32 	%f264, %f261;
	mul.f32 	%f36, %f264, %f263;
	setp.eq.f32 	%p29, %f36, 0f7F800000;
	mov.f32 	%f491, 0f7F800000;
	@%p29 bra 	$L__BB0_15;
// %bb.14:                              // %__internal_fmad.exit.i.i85
	neg.f32 	%f265, %f35;
	add.rn.ftz.f32 	%f266, %f33, %f265;
	add.rn.ftz.f32 	%f267, %f266, %f34;
	add.f32 	%f268, %f267, 0f37000000;
	selp.f32 	%f269, %f268, %f267, %p27;
	fma.rn.ftz.f32 	%f491, %f36, %f269, %f36;
$L__BB0_15:                             // %__internal_accurate_powf.exit.i56
	.loc	1 0 0                           // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:0
	mov.b32 	%f2, %r17;
	mov.b32 	%f104, %r27;
	fma.rn.f32 	%f115, %f103, %f1, %f112;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	setp.lt.f32 	%p32, %f10, 0f00000000;
	and.pred  	%p2, %p32, %p13;
	setp.neu.f32 	%p33, %f10, 0f00000000;
	@%p33 bra 	$L__BB0_17;
// %bb.16:
	add.f32 	%f276, %f10, %f10;
	selp.f32 	%f493, %f276, 0f00000000, %p13;
	bra.uni 	$L__BB0_18;
$L__BB0_17:
	neg.f32 	%f270, %f491;
	selp.f32 	%f271, %f270, %f491, %p2;
	cvt.rzi.f32.f32 	%f273, %f164;
	setp.neu.f32 	%p35, %f273, 0f3FC00000;
	selp.f32 	%f275, 0f7FFFFFFF, %f271, %p35;
	selp.f32 	%f493, %f275, %f271, %p32;
$L__BB0_18:                             // %__internal_powf_corner_cases.exit.i62
	.loc	1 0 0                           // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:0
	sub.f32 	%f4, %f87, %f2;
	sub.f32 	%f108, %f87, %f104;
	sub.f32 	%f11, %f87, %f115;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	add.f32 	%f277, %f32, %f16;
	mov.b32 	%r45, %f277;
	setp.lt.s32 	%p37, %r45, 2139095040;
	@%p37 bra 	$L__BB0_26;
// %bb.19:                              // %__nv_isnanf.exit.i.i70
	setp.nan.f32 	%p38, %f32, %f32;
	@%p38 bra 	$L__BB0_21;
// %bb.20:                              // %__nv_isnanf.exit11.i.i73
	setp.num.f32 	%p39, %f16, %f16;
	@%p39 bra 	$L__BB0_22;
	bra.uni 	$L__BB0_21;
$L__BB0_22:                             // %__nv_isinff.exit8.i.i76
	setp.neu.f32 	%p40, %f16, 0f7F800000;
	@%p40 bra 	$L__BB0_24;
// %bb.23:                              // %__nv_fabsf.exit5.i.i82
	setp.gt.f32 	%p42, %f32, 0f3F800000;
	setp.eq.f32 	%p43, %f10, 0fBF800000;
	selp.f32 	%f278, 0f7F800000, 0f00000000, %p42;
	selp.f32 	%f493, 0f3F800000, %f278, %p43;
	bra.uni 	$L__BB0_26;
$L__BB0_24:                             // %__nv_isinff.exit.i.i79
	setp.neu.f32 	%p41, %f32, 0f7F800000;
	@%p41 bra 	$L__BB0_26;
// %bb.25:
	.loc	1 0 33                          // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:33
	selp.f32 	%f493, 0fFF800000, 0f7F800000, %p2;
$L__BB0_26:                             // %__nv_powf.exit88
	mul.f32 	%f111, %f4, %f108;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	abs.ftz.f32 	%f47, %f11;
	mov.b32 	%r46, %f47;
	and.b32  	%r47, %r46, 8388607;
	or.b32  	%r48, %r47, 1065353216;
	mov.b32 	%f282, %r48;
	shr.u32 	%r49, %r46, 23;
	cvt.rn.f32.u32 	%f283, %r49;
	add.f32 	%f284, %f283, 0fC2FE0000;
	setp.gt.f32 	%p44, %f282, 0f3FB504F3;
	mul.f32 	%f285, %f282, 0f3F000000;
	add.f32 	%f286, %f284, 0f3F800000;
	selp.f32 	%f287, %f286, %f284, %p44;
	selp.f32 	%f288, %f285, %f282, %p44;
	add.f32 	%f289, %f288, 0fBF800000;
	add.f32 	%f280, %f288, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f279,%f280;
	// end inline asm
	add.f32 	%f290, %f289, %f289;
	mul.f32 	%f291, %f279, %f290;
	mul.f32 	%f292, %f291, %f291;
	fma.rn.ftz.f32 	%f295, %f132, %f292, %f131;
	fma.rn.ftz.f32 	%f297, %f295, %f292, %f134;
	mul.rn.ftz.f32 	%f298, %f297, %f292;
	mul.rn.ftz.f32 	%f299, %f298, %f291;
	neg.f32 	%f300, %f279;
	fma.rn.f32 	%f301, %f300, %f290, %f289;
	add.f32 	%f302, %f301, %f301;
	neg.f32 	%f303, %f291;
	fma.rn.ftz.f32 	%f304, %f303, %f289, %f302;
	mul.rn.ftz.f32 	%f305, %f279, %f304;
	fma.rn.f32 	%f306, %f279, %f290, %f299;
	neg.f32 	%f307, %f306;
	fma.rn.f32 	%f308, %f279, %f290, %f307;
	add.f32 	%f309, %f299, %f308;
	add.f32 	%f310, %f305, %f309;
	add.f32 	%f311, %f306, %f310;
	sub.f32 	%f312, %f306, %f311;
	add.f32 	%f313, %f310, %f312;
	mul.rn.ftz.f32 	%f315, %f287, %f152;
	mul.rn.ftz.f32 	%f317, %f287, %f154;
	add.f32 	%f318, %f315, %f311;
	sub.f32 	%f319, %f315, %f318;
	add.f32 	%f320, %f311, %f319;
	add.f32 	%f321, %f313, %f320;
	add.f32 	%f322, %f317, %f321;
	add.f32 	%f323, %f318, %f322;
	sub.f32 	%f324, %f318, %f323;
	add.f32 	%f325, %f322, %f324;
	mul.rn.ftz.f32 	%f48, %f17, %f323;
	neg.f32 	%f326, %f48;
	fma.rn.ftz.f32 	%f327, %f17, %f323, %f326;
	fma.rn.ftz.f32 	%f328, %f17, %f325, %f327;
	fma.rn.ftz.f32 	%f49, %f89, %f323, %f328;
	add.rn.ftz.f32 	%f50, %f48, %f49;
	mov.b32 	%r8, %f50;
	setp.eq.s32 	%p45, %r8, 1118925336;
	selp.f32 	%f330, 0f42B17217, %f50, %p45;
	mul.rn.ftz.f32 	%f332, %f330, %f169;
	cvt.rzi.f32.f32 	%f333, %f332;
	abs.ftz.f32 	%f334, %f333;
	setp.gt.f32 	%p46, %f334, 0f42FC0000;
	copysign.f32 	%f336, %f333, %f173;
	selp.f32 	%f337, %f336, %f333, %p46;
	fma.rn.ftz.f32 	%f339, %f337, %f176, %f330;
	fma.rn.ftz.f32 	%f341, %f337, %f178, %f339;
	mul.f32 	%f342, %f341, 0f3FB8AA3B;
	add.f32 	%f343, %f337, 0f4B40007F;
	mov.b32 	%r50, %f343;
	shl.b32 	%r51, %r50, 23;
	mov.b32 	%f344, %r51;
	ex2.approx.ftz.f32 	%f345, %f342;
	mul.f32 	%f51, %f345, %f344;
	setp.eq.f32 	%p47, %f51, 0f7F800000;
	mov.f32 	%f494, 0f7F800000;
	@%p47 bra 	$L__BB0_28;
// %bb.27:                              // %__internal_fmad.exit.i.i173
	neg.f32 	%f346, %f50;
	add.rn.ftz.f32 	%f347, %f48, %f346;
	add.rn.ftz.f32 	%f348, %f347, %f49;
	add.f32 	%f349, %f348, 0f37000000;
	selp.f32 	%f350, %f349, %f348, %p45;
	fma.rn.ftz.f32 	%f494, %f51, %f350, %f51;
$L__BB0_28:                             // %__internal_accurate_powf.exit.i144
	.loc	1 0 0                           // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:0
	fma.rn.f32 	%f116, %f104, %f2, %f111;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	setp.lt.f32 	%p50, %f11, 0f00000000;
	and.pred  	%p3, %p50, %p13;
	setp.neu.f32 	%p51, %f11, 0f00000000;
	@%p51 bra 	$L__BB0_30;
// %bb.29:
	add.f32 	%f357, %f11, %f11;
	selp.f32 	%f496, %f357, 0f00000000, %p13;
	bra.uni 	$L__BB0_31;
$L__BB0_30:
	neg.f32 	%f351, %f494;
	selp.f32 	%f352, %f351, %f494, %p3;
	cvt.rzi.f32.f32 	%f354, %f164;
	setp.neu.f32 	%p53, %f354, 0f3FC00000;
	selp.f32 	%f356, 0f7FFFFFFF, %f352, %p53;
	selp.f32 	%f496, %f356, %f352, %p50;
$L__BB0_31:                             // %__internal_powf_corner_cases.exit.i150
	.loc	1 0 0                           // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:0
	sub.f32 	%f12, %f87, %f116;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	add.f32 	%f358, %f47, %f16;
	mov.b32 	%r52, %f358;
	setp.lt.s32 	%p55, %r52, 2139095040;
	@%p55 bra 	$L__BB0_39;
// %bb.32:                              // %__nv_isnanf.exit.i.i158
	setp.nan.f32 	%p56, %f47, %f47;
	@%p56 bra 	$L__BB0_34;
// %bb.33:                              // %__nv_isnanf.exit11.i.i161
	setp.num.f32 	%p57, %f16, %f16;
	@%p57 bra 	$L__BB0_35;
	bra.uni 	$L__BB0_34;
$L__BB0_35:                             // %__nv_isinff.exit8.i.i164
	setp.neu.f32 	%p58, %f16, 0f7F800000;
	@%p58 bra 	$L__BB0_37;
// %bb.36:                              // %__nv_fabsf.exit5.i.i170
	setp.gt.f32 	%p60, %f47, 0f3F800000;
	setp.eq.f32 	%p61, %f11, 0fBF800000;
	selp.f32 	%f359, 0f7F800000, 0f00000000, %p60;
	selp.f32 	%f496, 0f3F800000, %f359, %p61;
	bra.uni 	$L__BB0_39;
$L__BB0_37:                             // %__nv_isinff.exit.i.i167
	setp.neu.f32 	%p59, %f47, 0f7F800000;
	@%p59 bra 	$L__BB0_39;
// %bb.38:
	.loc	1 0 33                          // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:33
	selp.f32 	%f496, 0fFF800000, 0f7F800000, %p3;
$L__BB0_39:                             // %__nv_powf.exit176
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	abs.ftz.f32 	%f62, %f12;
	mov.b32 	%r53, %f62;
	and.b32  	%r54, %r53, 8388607;
	or.b32  	%r55, %r54, 1065353216;
	mov.b32 	%f363, %r55;
	shr.u32 	%r56, %r53, 23;
	cvt.rn.f32.u32 	%f364, %r56;
	add.f32 	%f365, %f364, 0fC2FE0000;
	setp.gt.f32 	%p62, %f363, 0f3FB504F3;
	mul.f32 	%f366, %f363, 0f3F000000;
	add.f32 	%f367, %f365, 0f3F800000;
	selp.f32 	%f368, %f367, %f365, %p62;
	selp.f32 	%f369, %f366, %f363, %p62;
	add.f32 	%f370, %f369, 0fBF800000;
	add.f32 	%f361, %f369, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f360,%f361;
	// end inline asm
	add.f32 	%f371, %f370, %f370;
	mul.f32 	%f372, %f360, %f371;
	mul.f32 	%f373, %f372, %f372;
	fma.rn.ftz.f32 	%f376, %f132, %f373, %f131;
	fma.rn.ftz.f32 	%f378, %f376, %f373, %f134;
	mul.rn.ftz.f32 	%f379, %f378, %f373;
	mul.rn.ftz.f32 	%f380, %f379, %f372;
	neg.f32 	%f381, %f360;
	fma.rn.f32 	%f382, %f381, %f371, %f370;
	add.f32 	%f383, %f382, %f382;
	neg.f32 	%f384, %f372;
	fma.rn.ftz.f32 	%f385, %f384, %f370, %f383;
	mul.rn.ftz.f32 	%f386, %f360, %f385;
	fma.rn.f32 	%f387, %f360, %f371, %f380;
	neg.f32 	%f388, %f387;
	fma.rn.f32 	%f389, %f360, %f371, %f388;
	add.f32 	%f390, %f380, %f389;
	add.f32 	%f391, %f386, %f390;
	add.f32 	%f392, %f387, %f391;
	sub.f32 	%f393, %f387, %f392;
	add.f32 	%f394, %f391, %f393;
	mul.rn.ftz.f32 	%f396, %f368, %f152;
	mul.rn.ftz.f32 	%f398, %f368, %f154;
	add.f32 	%f399, %f396, %f392;
	sub.f32 	%f400, %f396, %f399;
	add.f32 	%f401, %f392, %f400;
	add.f32 	%f402, %f394, %f401;
	add.f32 	%f403, %f398, %f402;
	add.f32 	%f404, %f399, %f403;
	sub.f32 	%f405, %f399, %f404;
	add.f32 	%f406, %f403, %f405;
	mul.rn.ftz.f32 	%f63, %f17, %f404;
	neg.f32 	%f407, %f63;
	fma.rn.ftz.f32 	%f408, %f17, %f404, %f407;
	fma.rn.ftz.f32 	%f409, %f17, %f406, %f408;
	fma.rn.ftz.f32 	%f64, %f89, %f404, %f409;
	add.rn.ftz.f32 	%f65, %f63, %f64;
	mov.b32 	%r9, %f65;
	setp.eq.s32 	%p63, %r9, 1118925336;
	selp.f32 	%f411, 0f42B17217, %f65, %p63;
	mul.rn.ftz.f32 	%f413, %f411, %f169;
	cvt.rzi.f32.f32 	%f414, %f413;
	abs.ftz.f32 	%f415, %f414;
	setp.gt.f32 	%p64, %f415, 0f42FC0000;
	copysign.f32 	%f417, %f414, %f173;
	selp.f32 	%f418, %f417, %f414, %p64;
	fma.rn.ftz.f32 	%f420, %f418, %f176, %f411;
	fma.rn.ftz.f32 	%f422, %f418, %f178, %f420;
	mul.f32 	%f423, %f422, 0f3FB8AA3B;
	add.f32 	%f424, %f418, 0f4B40007F;
	mov.b32 	%r57, %f424;
	shl.b32 	%r58, %r57, 23;
	mov.b32 	%f425, %r58;
	ex2.approx.ftz.f32 	%f426, %f423;
	mul.f32 	%f66, %f426, %f425;
	setp.eq.f32 	%p65, %f66, 0f7F800000;
	mov.f32 	%f497, 0f7F800000;
	@%p65 bra 	$L__BB0_41;
// %bb.40:                              // %__internal_fmad.exit.i.i261
	neg.f32 	%f427, %f65;
	add.rn.ftz.f32 	%f428, %f63, %f427;
	add.rn.ftz.f32 	%f429, %f428, %f64;
	add.f32 	%f430, %f429, 0f37000000;
	selp.f32 	%f431, %f430, %f429, %p63;
	fma.rn.ftz.f32 	%f497, %f66, %f431, %f66;
$L__BB0_41:                             // %__internal_accurate_powf.exit.i232
	setp.lt.f32 	%p68, %f12, 0f00000000;
	and.pred  	%p4, %p68, %p13;
	setp.neu.f32 	%p69, %f12, 0f00000000;
	@%p69 bra 	$L__BB0_43;
// %bb.42:
	add.f32 	%f438, %f12, %f12;
	selp.f32 	%f499, %f438, 0f00000000, %p13;
	bra.uni 	$L__BB0_44;
$L__BB0_43:
	neg.f32 	%f432, %f497;
	selp.f32 	%f433, %f432, %f497, %p4;
	cvt.rzi.f32.f32 	%f435, %f164;
	setp.neu.f32 	%p71, %f435, 0f3FC00000;
	selp.f32 	%f437, 0f7FFFFFFF, %f433, %p71;
	selp.f32 	%f499, %f437, %f433, %p68;
$L__BB0_44:                             // %__internal_powf_corner_cases.exit.i238
	.loc	1 0 33                          // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:33
	ld.param.u64 	%rd7, [triton_per_fused_add_mean_mse_loss_mul_pow_rsub_sigmoid_0_param_0];
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	add.f32 	%f439, %f62, %f16;
	mov.b32 	%r59, %f439;
	setp.lt.s32 	%p73, %r59, 2139095040;
	@%p73 bra 	$L__BB0_52;
// %bb.45:                              // %__nv_isnanf.exit.i.i246
	setp.nan.f32 	%p74, %f62, %f62;
	@%p74 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_isnanf.exit11.i.i249
	setp.num.f32 	%p75, %f16, %f16;
	@%p75 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_47;
$L__BB0_48:                             // %__nv_isinff.exit8.i.i252
	setp.neu.f32 	%p76, %f16, 0f7F800000;
	@%p76 bra 	$L__BB0_50;
// %bb.49:                              // %__nv_fabsf.exit5.i.i258
	setp.gt.f32 	%p78, %f62, 0f3F800000;
	setp.eq.f32 	%p79, %f12, 0fBF800000;
	selp.f32 	%f440, 0f7F800000, 0f00000000, %p78;
	selp.f32 	%f499, 0f3F800000, %f440, %p79;
	bra.uni 	$L__BB0_52;
$L__BB0_50:                             // %__nv_isinff.exit.i.i255
	setp.neu.f32 	%p77, %f62, 0f7F800000;
	@%p77 bra 	$L__BB0_52;
// %bb.51:
	.loc	1 0 33                          // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:0:33
	selp.f32 	%f499, 0fFF800000, 0f7F800000, %p4;
$L__BB0_52:                             // %__nv_powf.exit264
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	setp.eq.f32 	%p84, %f12, 0f3F800000;
	setp.eq.f32 	%p85, %f11, 0f3F800000;
	setp.eq.f32 	%p86, %f9, 0f3F800000;
	setp.eq.f32 	%p87, %f10, 0f3F800000;
	.loc	1 40 18                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:40:18
	mul.f32 	%f445, %f4, 0f3F400000;
	mul.f32 	%f446, %f3, 0f3F400000;
	mul.f32 	%f447, %f7, 0f3F400000;
	mul.f32 	%f448, %f8, 0f3F400000;
	.loc	1 33 18                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:33:18
	sub.f32 	%f449, %f88, %f1;
	sub.f32 	%f450, %f91, %f2;
	sub.f32 	%f451, %f95, %f6;
	sub.f32 	%f452, %f93, %f5;
	.loc	1 27 26                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:27:26
	and.b32  	%r70, %r1, 31;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	selp.f32 	%f453, 0f3F800000, %f493, %p87;
	selp.f32 	%f454, 0f3F800000, %f490, %p86;
	.loc	1 41 19                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:41:19
	fma.rn.f32 	%f455, %f6, 0f3E800000, %f448;
	fma.rn.f32 	%f456, %f5, 0f3E800000, %f447;
	.loc	1 34 18                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:34:18
	mul.f32 	%f457, %f452, %f452;
	mul.f32 	%f458, %f451, %f451;
	.loc	1 50 20                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:50:20
	mul.f32 	%f459, %f456, %f454;
	mul.f32 	%f460, %f455, %f453;
	.loc	1 51 19                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:51:19
	mul.f32 	%f461, %f458, %f460;
	.loc	1 41 19                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:41:19
	fma.rn.f32 	%f462, %f1, 0f3E800000, %f446;
	fma.rn.f32 	%f463, %f2, 0f3E800000, %f445;
	.loc	1 34 18                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:34:18
	mul.f32 	%f464, %f450, %f450;
	mul.f32 	%f465, %f449, %f449;
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	selp.f32 	%f466, 0f3F800000, %f496, %p85;
	selp.f32 	%f467, 0f3F800000, %f499, %p84;
	.loc	1 50 20                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:50:20
	mul.f32 	%f468, %f463, %f467;
	mul.f32 	%f469, %f462, %f466;
$L__tmp4:
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f470, %f457, %f459, %f461;
	fma.rn.f32 	%f471, %f465, %f469, %f470;
	fma.rn.f32 	%f472, %f464, %f468, %f471;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r71, %f472;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	mov.b32 	%f473, %r72;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f474, %f472, %f473;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r73, %f474;
	shfl.sync.bfly.b32	%r74, %r73, 8, 31, -1;
	mov.b32 	%f475, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f476, %f474, %f475;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r75, %f476;
	shfl.sync.bfly.b32	%r76, %r75, 4, 31, -1;
	mov.b32 	%f477, %r76;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f478, %f476, %f477;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f478;
	shfl.sync.bfly.b32	%r78, %r77, 2, 31, -1;
	mov.b32 	%f479, %r78;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f480, %f478, %f479;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r79, %f480;
	shfl.sync.bfly.b32	%r80, %r79, 1, 31, -1;
	mov.b32 	%f481, %r80;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f482, %f480, %f481;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p80, %r70, 0;
	shr.u32 	%r81, %r1, 3;
	and.b32  	%r82, %r81, 4;
	mov.u32 	%r83, global_smem;
	add.s32 	%r60, %r83, %r82;
	mov.b32 	%r61, %f482;
	// begin inline asm
	@%p80 st.shared.b32 [ %r60 + 0 ], %r61;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p81, %r1, 2;
	add.s32 	%r63, %r83, %r30;
	// begin inline asm
	@%p81 ld.shared.b32 %r62, [ %r63 + 0 ];
	// end inline asm
	mov.b32 	%f483, %r62;
	shfl.sync.bfly.b32	%r85, %r62, 1, 31, -1;
	mov.b32 	%f484, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f485, %f483, %f484;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r86, %r1, 1;
	setp.eq.b32 	%p88, %r86, 1;
	not.pred 	%p89, %p88;
	and.pred  	%p82, %p81, %p89;
	mov.b32 	%r65, %f485;
	// begin inline asm
	@%p82 st.shared.b32 [ %r63 + 0 ], %r65;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f486, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f487, %f486, 0f00000000;
$L__tmp6:
	.loc	1 55 20                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:55:20
	mov.b32 	%r67, %f487;
	mov.b32 	%r68, 1132462080;
	// begin inline asm
	div.full.f32 %r69, %r67, %r68;
	// end inline asm
	.loc	1 56 4                          // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:56:4
	bar.sync 	0;
	.loc	1 57 63                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:57:63
	and.b32  	%r87, %r1, 63;
	setp.eq.s32 	%p83, %r87, 0;
	// begin inline asm
	@%p83 st.global.b32 [ %rd7 + 0 ], { %r69 };
	// end inline asm
	.loc	1 57 4                          // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:57:4
	ret;
$L__BB0_8:
	.loc	1 49 33                         // cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py:49:33
	add.f32 	%f490, %f9, 0f3FC00000;
	bra.uni 	$L__BB0_13;
$L__BB0_21:
	add.f32 	%f493, %f10, 0f3FC00000;
	bra.uni 	$L__BB0_26;
$L__BB0_34:
	add.f32 	%f496, %f11, 0f3FC00000;
	bra.uni 	$L__BB0_39;
$L__BB0_47:
	add.f32 	%f499, %f12, 0f3FC00000;
	bra.uni 	$L__BB0_52;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/ib/cibmu264xeslcyxr27anlok2j6zfvfov44anxjc5jkhz2phjun6d.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 250                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xf3 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 98
.b8 109
.b8 117
.b8 50
.b8 54
.b8 52
.b8 120
.b8 101
.b8 115
.b8 108
.b8 99
.b8 121
.b8 120
.b8 114
.b8 50
.b8 55
.b8 97
.b8 110
.b8 108
.b8 111
.b8 107
.b8 50
.b8 106
.b8 54
.b8 122
.b8 102
.b8 118
.b8 102
.b8 111
.b8 118
.b8 52
.b8 52
.b8 97
.b8 110
.b8 120
.b8 106
.b8 99
.b8 53
.b8 106
.b8 107
.b8 104
.b8 122
.b8 50
.b8 112
.b8 104
.b8 106
.b8 117
.b8 110
.b8 54
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x3c DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 105
.b8 103
.b8 109
.b8 111
.b8 105
.b8 100
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9f:0x5e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp0                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xcc:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe4:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 53                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
