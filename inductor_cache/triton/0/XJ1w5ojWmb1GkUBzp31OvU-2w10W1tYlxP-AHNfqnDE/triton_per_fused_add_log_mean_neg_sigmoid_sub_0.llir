; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_log_mean_neg_sigmoid_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #4, !dbg !12
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %15 = bitcast i32 %11 to float, !dbg !12
  %16 = bitcast i32 %12 to float, !dbg !12
  %17 = bitcast i32 %13 to float, !dbg !12
  %18 = bitcast i32 %14 to float, !dbg !12
  %19 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %19, i1 true) #4, !dbg !14
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0, !dbg !14
  %22 = extractvalue { i32, i32, i32, i32 } %20, 1, !dbg !14
  %23 = extractvalue { i32, i32, i32, i32 } %20, 2, !dbg !14
  %24 = extractvalue { i32, i32, i32, i32 } %20, 3, !dbg !14
  %25 = bitcast i32 %21 to float, !dbg !14
  %26 = bitcast i32 %22 to float, !dbg !14
  %27 = bitcast i32 %23 to float, !dbg !14
  %28 = bitcast i32 %24 to float, !dbg !14
  %29 = fsub float %25, %15, !dbg !15
  %30 = fadd float %29, 0.000000e+00, !dbg !15
  %31 = fsub float %26, %16, !dbg !15
  %32 = fadd float %31, 0.000000e+00, !dbg !15
  %33 = fsub float %27, %17, !dbg !15
  %34 = fadd float %33, 0.000000e+00, !dbg !15
  %35 = fsub float %28, %18, !dbg !15
  %36 = fadd float %35, 0.000000e+00, !dbg !15
  %37 = fmul float %30, 0x3FF7154760000000, !dbg !19
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #4, !dbg !19
  %39 = fmul float %32, 0x3FF7154760000000, !dbg !19
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #4, !dbg !19
  %41 = fmul float %34, 0x3FF7154760000000, !dbg !19
  %42 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %41) #4, !dbg !19
  %43 = fmul float %36, 0x3FF7154760000000, !dbg !19
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %43) #4, !dbg !19
  %45 = fadd float %38, 1.000000e+00, !dbg !20
  %46 = fadd float %40, 1.000000e+00, !dbg !20
  %47 = fadd float %42, 1.000000e+00, !dbg !20
  %48 = fadd float %44, 1.000000e+00, !dbg !20
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %45) #4, !dbg !21
  %50 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %46) #4, !dbg !21
  %51 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %47) #4, !dbg !21
  %52 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %48) #4, !dbg !21
  %53 = fadd float %49, 0x3DDB7CDFE0000000, !dbg !22
  %54 = fadd float %50, 0x3DDB7CDFE0000000, !dbg !22
  %55 = fadd float %51, 0x3DDB7CDFE0000000, !dbg !22
  %56 = fadd float %52, 0x3DDB7CDFE0000000, !dbg !22
  %57 = fcmp olt float %53, 0x3810000000000000, !dbg !23
  %58 = fmul float %53, 0x4160000000000000, !dbg !23
  %.02.i = select i1 %57, float %58, float %53, !dbg !23
  %i.i.0.i = select i1 %57, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %59 = bitcast float %.02.i to i32, !dbg !23
  %60 = add i32 %59, -1059760811, !dbg !23
  %61 = and i32 %60, -8388608, !dbg !23
  %62 = sub i32 %59, %61, !dbg !23
  %63 = bitcast i32 %62 to float, !dbg !23
  %64 = sitofp i32 %61 to float, !dbg !23
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i = icmp eq i32 %65, 0, !dbg !23
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %64, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !23
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %64, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !23
  %.08.i = select i1 %.not.i, float %67, float %66, !dbg !23
  %68 = fadd float %63, -1.000000e+00, !dbg !23
  %69 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i = icmp eq i32 %69, 0, !dbg !23
  %70 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %68, float 0x3FC2073EC0000000) #4, !dbg !23
  %71 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %68, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i = select i1 %.not1.i, float %71, float %70, !dbg !23
  %72 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i = icmp eq i32 %72, 0, !dbg !23
  %73 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %68, float 0xBFBF19B980000000) #4, !dbg !23
  %74 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %68, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i = select i1 %.not2.i, float %74, float %73, !dbg !23
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i = icmp eq i32 %75, 0, !dbg !23
  %76 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %68, float 0x3FC1E52AA0000000) #4, !dbg !23
  %77 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %68, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i = select i1 %.not3.i, float %77, float %76, !dbg !23
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i = icmp eq i32 %78, 0, !dbg !23
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %68, float 0xBFC55B1720000000) #4, !dbg !23
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %68, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i = select i1 %.not4.i, float %80, float %79, !dbg !23
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i = icmp eq i32 %81, 0, !dbg !23
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %68, float 0x3FC99DA160000000) #4, !dbg !23
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %68, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i = select i1 %.not5.i, float %83, float %82, !dbg !23
  %84 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i = icmp eq i32 %84, 0, !dbg !23
  %85 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %68, float 0xBFCFFFE440000000) #4, !dbg !23
  %86 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %68, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i = select i1 %.not6.i, float %86, float %85, !dbg !23
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i = icmp eq i32 %87, 0, !dbg !23
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %68, float 0x3FD5554F00000000) #4, !dbg !23
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %68, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i = select i1 %.not7.i, float %89, float %88, !dbg !23
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i = icmp eq i32 %90, 0, !dbg !23
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %68, float -5.000000e-01) #4, !dbg !23
  %92 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %68, float -5.000000e-01) #4, !dbg !23
  %.07.i = select i1 %.not8.i, float %92, float %91, !dbg !23
  %93 = fmul float %68, %.07.i, !dbg !23
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i = icmp eq i32 %94, 0, !dbg !23
  %95 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %93, float %68, float %68) #4, !dbg !23
  %96 = tail call float @llvm.nvvm.fma.rn.f(float %93, float %68, float %68) #4, !dbg !23
  %.06.i = select i1 %.not9.i, float %96, float %95, !dbg !23
  %97 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i = icmp eq i32 %97, 0, !dbg !23
  %98 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !23
  %99 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !23
  %.04.i = select i1 %.not10.i, float %99, float %98, !dbg !23
  %100 = icmp ugt i32 %59, 2139095039, !dbg !23
  br i1 %100, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !23

__nv_fmaf_rn.exit.i.i:                            ; preds = %4
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i = icmp eq i32 %101, 0, !dbg !23
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i = select i1 %.not11.i, float %103, float %102, !dbg !23
  br label %__nv_logf.exit, !dbg !23

__nv_logf.exit:                                   ; preds = %4, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %4 ], !dbg !23
  %104 = fcmp olt float %54, 0x3810000000000000, !dbg !23
  %105 = fmul float %54, 0x4160000000000000, !dbg !23
  %.02.i1 = select i1 %104, float %105, float %54, !dbg !23
  %i.i.0.i2 = select i1 %104, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %106 = bitcast float %.02.i1 to i32, !dbg !23
  %107 = add i32 %106, -1059760811, !dbg !23
  %108 = and i32 %107, -8388608, !dbg !23
  %109 = sub i32 %106, %108, !dbg !23
  %110 = bitcast i32 %109 to float, !dbg !23
  %111 = sitofp i32 %108 to float, !dbg !23
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i3 = icmp eq i32 %112, 0, !dbg !23
  %113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %111, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !23
  %114 = tail call float @llvm.nvvm.fma.rn.f(float %111, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !23
  %.08.i4 = select i1 %.not.i3, float %114, float %113, !dbg !23
  %115 = fadd float %110, -1.000000e+00, !dbg !23
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i5 = icmp eq i32 %116, 0, !dbg !23
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %115, float 0x3FC2073EC0000000) #4, !dbg !23
  %118 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %115, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i6 = select i1 %.not1.i5, float %118, float %117, !dbg !23
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i7 = icmp eq i32 %119, 0, !dbg !23
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %115, float 0xBFBF19B980000000) #4, !dbg !23
  %121 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %115, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i8 = select i1 %.not2.i7, float %121, float %120, !dbg !23
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i9 = icmp eq i32 %122, 0, !dbg !23
  %123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %115, float 0x3FC1E52AA0000000) #4, !dbg !23
  %124 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %115, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i10 = select i1 %.not3.i9, float %124, float %123, !dbg !23
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i11 = icmp eq i32 %125, 0, !dbg !23
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %115, float 0xBFC55B1720000000) #4, !dbg !23
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %115, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i12 = select i1 %.not4.i11, float %127, float %126, !dbg !23
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i13 = icmp eq i32 %128, 0, !dbg !23
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %115, float 0x3FC99DA160000000) #4, !dbg !23
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %115, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i14 = select i1 %.not5.i13, float %130, float %129, !dbg !23
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i15 = icmp eq i32 %131, 0, !dbg !23
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %115, float 0xBFCFFFE440000000) #4, !dbg !23
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %115, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i16 = select i1 %.not6.i15, float %133, float %132, !dbg !23
  %134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i17 = icmp eq i32 %134, 0, !dbg !23
  %135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %115, float 0x3FD5554F00000000) #4, !dbg !23
  %136 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %115, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i18 = select i1 %.not7.i17, float %136, float %135, !dbg !23
  %137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i19 = icmp eq i32 %137, 0, !dbg !23
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %115, float -5.000000e-01) #4, !dbg !23
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %115, float -5.000000e-01) #4, !dbg !23
  %.07.i20 = select i1 %.not8.i19, float %139, float %138, !dbg !23
  %140 = fmul float %115, %.07.i20, !dbg !23
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i21 = icmp eq i32 %141, 0, !dbg !23
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %140, float %115, float %115) #4, !dbg !23
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %140, float %115, float %115) #4, !dbg !23
  %.06.i22 = select i1 %.not9.i21, float %143, float %142, !dbg !23
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i23 = icmp eq i32 %144, 0, !dbg !23
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !23
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !23
  %.04.i24 = select i1 %.not10.i23, float %146, float %145, !dbg !23
  %147 = icmp ugt i32 %106, 2139095039, !dbg !23
  br i1 %147, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !23

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i28 = icmp eq i32 %148, 0, !dbg !23
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i29 = select i1 %.not11.i28, float %150, float %149, !dbg !23
  br label %__nv_logf.exit30, !dbg !23

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !23
  %151 = fcmp olt float %55, 0x3810000000000000, !dbg !23
  %152 = fmul float %55, 0x4160000000000000, !dbg !23
  %.02.i31 = select i1 %151, float %152, float %55, !dbg !23
  %i.i.0.i32 = select i1 %151, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %153 = bitcast float %.02.i31 to i32, !dbg !23
  %154 = add i32 %153, -1059760811, !dbg !23
  %155 = and i32 %154, -8388608, !dbg !23
  %156 = sub i32 %153, %155, !dbg !23
  %157 = bitcast i32 %156 to float, !dbg !23
  %158 = sitofp i32 %155 to float, !dbg !23
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i33 = icmp eq i32 %159, 0, !dbg !23
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %158, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !23
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %158, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !23
  %.08.i34 = select i1 %.not.i33, float %161, float %160, !dbg !23
  %162 = fadd float %157, -1.000000e+00, !dbg !23
  %163 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i35 = icmp eq i32 %163, 0, !dbg !23
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %162, float 0x3FC2073EC0000000) #4, !dbg !23
  %165 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %162, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i36 = select i1 %.not1.i35, float %165, float %164, !dbg !23
  %166 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i37 = icmp eq i32 %166, 0, !dbg !23
  %167 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %162, float 0xBFBF19B980000000) #4, !dbg !23
  %168 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %162, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i38 = select i1 %.not2.i37, float %168, float %167, !dbg !23
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i39 = icmp eq i32 %169, 0, !dbg !23
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %162, float 0x3FC1E52AA0000000) #4, !dbg !23
  %171 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %162, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i40 = select i1 %.not3.i39, float %171, float %170, !dbg !23
  %172 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i41 = icmp eq i32 %172, 0, !dbg !23
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %162, float 0xBFC55B1720000000) #4, !dbg !23
  %174 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %162, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i42 = select i1 %.not4.i41, float %174, float %173, !dbg !23
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i43 = icmp eq i32 %175, 0, !dbg !23
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %162, float 0x3FC99DA160000000) #4, !dbg !23
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %162, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i44 = select i1 %.not5.i43, float %177, float %176, !dbg !23
  %178 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i45 = icmp eq i32 %178, 0, !dbg !23
  %179 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %162, float 0xBFCFFFE440000000) #4, !dbg !23
  %180 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %162, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i46 = select i1 %.not6.i45, float %180, float %179, !dbg !23
  %181 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i47 = icmp eq i32 %181, 0, !dbg !23
  %182 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %162, float 0x3FD5554F00000000) #4, !dbg !23
  %183 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %162, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i48 = select i1 %.not7.i47, float %183, float %182, !dbg !23
  %184 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i49 = icmp eq i32 %184, 0, !dbg !23
  %185 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %162, float -5.000000e-01) #4, !dbg !23
  %186 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %162, float -5.000000e-01) #4, !dbg !23
  %.07.i50 = select i1 %.not8.i49, float %186, float %185, !dbg !23
  %187 = fmul float %162, %.07.i50, !dbg !23
  %188 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i51 = icmp eq i32 %188, 0, !dbg !23
  %189 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %187, float %162, float %162) #4, !dbg !23
  %190 = tail call float @llvm.nvvm.fma.rn.f(float %187, float %162, float %162) #4, !dbg !23
  %.06.i52 = select i1 %.not9.i51, float %190, float %189, !dbg !23
  %191 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i53 = icmp eq i32 %191, 0, !dbg !23
  %192 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !23
  %193 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !23
  %.04.i54 = select i1 %.not10.i53, float %193, float %192, !dbg !23
  %194 = icmp ugt i32 %153, 2139095039, !dbg !23
  br i1 %194, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !23

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %195 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i58 = icmp eq i32 %195, 0, !dbg !23
  %196 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %197 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i59 = select i1 %.not11.i58, float %197, float %196, !dbg !23
  br label %__nv_logf.exit60, !dbg !23

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !23
  %198 = fcmp olt float %56, 0x3810000000000000, !dbg !23
  %199 = fmul float %56, 0x4160000000000000, !dbg !23
  %.02.i61 = select i1 %198, float %199, float %56, !dbg !23
  %i.i.0.i62 = select i1 %198, float -2.300000e+01, float 0.000000e+00, !dbg !23
  %200 = bitcast float %.02.i61 to i32, !dbg !23
  %201 = add i32 %200, -1059760811, !dbg !23
  %202 = and i32 %201, -8388608, !dbg !23
  %203 = sub i32 %200, %202, !dbg !23
  %204 = bitcast i32 %203 to float, !dbg !23
  %205 = sitofp i32 %202 to float, !dbg !23
  %206 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not.i63 = icmp eq i32 %206, 0, !dbg !23
  %207 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %205, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !23
  %208 = tail call float @llvm.nvvm.fma.rn.f(float %205, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !23
  %.08.i64 = select i1 %.not.i63, float %208, float %207, !dbg !23
  %209 = fadd float %204, -1.000000e+00, !dbg !23
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not1.i65 = icmp eq i32 %210, 0, !dbg !23
  %211 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %209, float 0x3FC2073EC0000000) #4, !dbg !23
  %212 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %209, float 0x3FC2073EC0000000) #4, !dbg !23
  %.010.i66 = select i1 %.not1.i65, float %212, float %211, !dbg !23
  %213 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not2.i67 = icmp eq i32 %213, 0, !dbg !23
  %214 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %209, float 0xBFBF19B980000000) #4, !dbg !23
  %215 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %209, float 0xBFBF19B980000000) #4, !dbg !23
  %.011.i68 = select i1 %.not2.i67, float %215, float %214, !dbg !23
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not3.i69 = icmp eq i32 %216, 0, !dbg !23
  %217 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %209, float 0x3FC1E52AA0000000) #4, !dbg !23
  %218 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %209, float 0x3FC1E52AA0000000) #4, !dbg !23
  %.012.i70 = select i1 %.not3.i69, float %218, float %217, !dbg !23
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not4.i71 = icmp eq i32 %219, 0, !dbg !23
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %209, float 0xBFC55B1720000000) #4, !dbg !23
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %209, float 0xBFC55B1720000000) #4, !dbg !23
  %.09.i72 = select i1 %.not4.i71, float %221, float %220, !dbg !23
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not5.i73 = icmp eq i32 %222, 0, !dbg !23
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %209, float 0x3FC99DA160000000) #4, !dbg !23
  %224 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %209, float 0x3FC99DA160000000) #4, !dbg !23
  %.05.i74 = select i1 %.not5.i73, float %224, float %223, !dbg !23
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not6.i75 = icmp eq i32 %225, 0, !dbg !23
  %226 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %209, float 0xBFCFFFE440000000) #4, !dbg !23
  %227 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %209, float 0xBFCFFFE440000000) #4, !dbg !23
  %.01.i76 = select i1 %.not6.i75, float %227, float %226, !dbg !23
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not7.i77 = icmp eq i32 %228, 0, !dbg !23
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %209, float 0x3FD5554F00000000) #4, !dbg !23
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %209, float 0x3FD5554F00000000) #4, !dbg !23
  %.0.i78 = select i1 %.not7.i77, float %230, float %229, !dbg !23
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not8.i79 = icmp eq i32 %231, 0, !dbg !23
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %209, float -5.000000e-01) #4, !dbg !23
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %209, float -5.000000e-01) #4, !dbg !23
  %.07.i80 = select i1 %.not8.i79, float %233, float %232, !dbg !23
  %234 = fmul float %209, %.07.i80, !dbg !23
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not9.i81 = icmp eq i32 %235, 0, !dbg !23
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %234, float %209, float %209) #4, !dbg !23
  %237 = tail call float @llvm.nvvm.fma.rn.f(float %234, float %209, float %209) #4, !dbg !23
  %.06.i82 = select i1 %.not9.i81, float %237, float %236, !dbg !23
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not10.i83 = icmp eq i32 %238, 0, !dbg !23
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !23
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !23
  %.04.i84 = select i1 %.not10.i83, float %240, float %239, !dbg !23
  %241 = icmp ugt i32 %200, 2139095039, !dbg !23
  br i1 %241, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !23

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !23
  %.not11.i88 = icmp eq i32 %242, 0, !dbg !23
  %243 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %244 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !23
  %.03.i89 = select i1 %.not11.i88, float %244, float %243, !dbg !23
  br label %__nv_logf.exit90, !dbg !23

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !23
  %245 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !23
  %246 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !23
  %247 = insertelement <2 x float> %246, float %.02.i1, i64 1, !dbg !23
  %248 = fcmp oeq <2 x float> %247, zeroinitializer, !dbg !23
  %249 = lshr i32 %5, 5, !dbg !10
  %250 = and i32 %5, 31, !dbg !10
  %251 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !23
  %252 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !24
  %253 = insertelement <2 x float> %252, float %r.i.0.i25, i64 1, !dbg !24
  %254 = fsub <2 x float> zeroinitializer, %253, !dbg !24
  %255 = select <2 x i1> %248, <2 x float> splat (float 0x7FF0000000000000), <2 x float> %254, !dbg !23
  %256 = fsub float 0.000000e+00, %r.i.0.i55, !dbg !24
  %257 = select i1 %245, float 0x7FF0000000000000, float %256, !dbg !23
  %258 = fsub float 0.000000e+00, %r.i.0.i85, !dbg !24
  %259 = select i1 %251, float 0x7FF0000000000000, float %258, !dbg !23
  %shift = shufflevector <2 x float> %255, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !25
  %260 = fadd <2 x float> %255, %shift, !dbg !25
  %261 = extractelement <2 x float> %260, i64 0, !dbg !25
  %262 = fadd float %261, %257, !dbg !25
  %263 = fadd float %262, %259, !dbg !25
  %264 = bitcast float %263 to i32, !dbg !28
  %265 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %264, i32 16, i32 31), !dbg !28
  %266 = bitcast i32 %265 to float, !dbg !28
  %267 = fadd float %263, %266, !dbg !25
  %268 = bitcast float %267 to i32, !dbg !28
  %269 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %268, i32 8, i32 31), !dbg !28
  %270 = bitcast i32 %269 to float, !dbg !28
  %271 = fadd float %267, %270, !dbg !25
  %272 = bitcast float %271 to i32, !dbg !28
  %273 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %272, i32 4, i32 31), !dbg !28
  %274 = bitcast i32 %273 to float, !dbg !28
  %275 = fadd float %271, %274, !dbg !25
  %276 = bitcast float %275 to i32, !dbg !28
  %277 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %276, i32 2, i32 31), !dbg !28
  %278 = bitcast i32 %277 to float, !dbg !28
  %279 = fadd float %275, %278, !dbg !25
  %280 = bitcast float %279 to i32, !dbg !28
  %281 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %280, i32 1, i32 31), !dbg !28
  %282 = bitcast i32 %281 to float, !dbg !28
  %283 = fadd float %279, %282, !dbg !25
  %284 = icmp eq i32 %250, 0, !dbg !28
  %285 = and i32 %249, 1, !dbg !28
  %286 = zext nneg i32 %285 to i64, !dbg !28
  %287 = getelementptr float, ptr addrspace(3) @global_smem, i64 %286, !dbg !28
  %288 = bitcast float %283 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %287, <1 x i32> %288, i1 %284) #4, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %289 = icmp slt i32 %5, 2, !dbg !28
  %290 = sext i32 %5 to i64, !dbg !28
  %291 = getelementptr float, ptr addrspace(3) @global_smem, i64 %290, !dbg !28
  %292 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %291, i1 %289) #4, !dbg !28
  %293 = bitcast i32 %292 to float, !dbg !28
  %294 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %292, i32 1, i32 31), !dbg !28
  %295 = bitcast i32 %294 to float, !dbg !28
  %296 = fadd float %293, %295, !dbg !25
  %297 = and i32 %5, 1, !dbg !28
  %298 = icmp eq i32 %297, 0, !dbg !28
  %299 = and i1 %289, %298, !dbg !28
  %300 = bitcast float %296 to <1 x i32>, !dbg !28
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %291, <1 x i32> %300, i1 %299) #4, !dbg !28
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %301 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !28
  %302 = fadd float %301, 0.000000e+00, !dbg !29
  %303 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %302, float 2.560000e+02) #4, !dbg !33
  tail call void @llvm.nvvm.barrier0(), !dbg !34
  %urem = and i32 %5, 63, !dbg !35
  %304 = icmp eq i32 %urem, 0, !dbg !35
  %305 = bitcast float %303 to i32, !dbg !35
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %305, ptr addrspace(1) %0, i1 %304) #4, !dbg !35
  ret void, !dbg !36
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cbjkodwoqkhke4ujqsxglfhws2ez552f7nhsn57ayheobznnbeoq.py", directory: "inductor_cache/bj")
!4 = !{ptr @triton_per_fused_add_log_mean_neg_sigmoid_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_log_mean_neg_sigmoid_sub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_log_mean_neg_sigmoid_sub_0", linkageName: "triton_per_fused_add_log_mean_neg_sigmoid_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 47, column: 30, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!18 = !DILocation(line: 34, column: 22, scope: !7)
!19 = !DILocation(line: 47, column: 29, scope: !16, inlinedAt: !18)
!20 = !DILocation(line: 47, column: 20, scope: !16, inlinedAt: !18)
!21 = !DILocation(line: 47, column: 16, scope: !16, inlinedAt: !18)
!22 = !DILocation(line: 36, column: 18, scope: !7)
!23 = !DILocation(line: 37, column: 23, scope: !7)
!24 = !DILocation(line: 38, column: 12, scope: !7)
!25 = !DILocation(line: 256, column: 15, scope: !26, inlinedAt: !27)
!26 = distinct !DILexicalBlockFile(scope: !16, file: !17, discriminator: 0)
!27 = !DILocation(line: 40, column: 58, scope: !7)
!28 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !27)
!29 = !DILocation(line: 73, column: 15, scope: !30, inlinedAt: !32)
!30 = distinct !DILexicalBlockFile(scope: !7, file: !31, discriminator: 0)
!31 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!32 = !DILocation(line: 40, column: 45, scope: !7)
!33 = !DILocation(line: 42, column: 20, scope: !7)
!34 = !DILocation(line: 43, column: 4, scope: !7)
!35 = !DILocation(line: 44, column: 63, scope: !7)
!36 = !DILocation(line: 44, column: 4, scope: !7)
