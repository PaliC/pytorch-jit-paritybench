#loc = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":19:0)
#loc1 = loc(unknown)
#loc10 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":36:70)
#loc20 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":40:58)
#loc29 = loc(callsite(#loc1 at #loc10))
#loc36 = loc(callsite(#loc1 at #loc20))
module {
  tt.func public @triton_per_fused_abs_div_max_mean_mul_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc2)
    %1 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>> loc(#loc6)
    %7 = arith.subf %3, %6 : tensor<256xf32> loc(#loc7)
    %8 = math.absf %7 : tensor<256xf32> loc(#loc8)
    %9 = "tt.reduce"(%8) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc10)), %arg5: f32 loc(callsite(#loc1 at #loc10))):
      %20 = arith.cmpf ogt, %arg4, %arg5 : f32 loc(#loc39)
      %21 = arith.cmpf une, %arg4, %arg4 : f32 loc(#loc40)
      %22 = arith.ori %20, %21 : i1 loc(#loc41)
      %23 = arith.select %22, %arg4, %arg5 : f32 loc(#loc42)
      tt.reduce.return %23 : f32 loc(#loc28)
    }) : (tensor<256xf32>) -> f32 loc(#loc28)
    %10 = arith.addf %9, %cst_0 : f32 loc(#loc34)
    %11 = tt.splat %10 : f32 -> tensor<256xf32> loc(#loc17)
    %12 = arith.divf %8, %11 : tensor<256xf32> loc(#loc17)
    %13 = arith.mulf %12, %8 : tensor<256xf32> loc(#loc18)
    %14 = "tt.reduce"(%13) <{axis = 0 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc20)), %arg5: f32 loc(callsite(#loc1 at #loc20))):
      %20 = arith.addf %arg4, %arg5 : f32 loc(#loc43)
      tt.reduce.return %20 : f32 loc(#loc35)
    }) : (tensor<256xf32>) -> f32 loc(#loc35)
    %15 = arith.addf %14, %cst_0 : f32 loc(#loc38)
    %16 = arith.divf %15, %cst : f32 loc(#loc23)
    %17 = tt.splat %16 : f32 -> tensor<1xf32> loc(#loc23)
    gpu.barrier loc(#loc24)
    %18 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc25)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>> loc(#loc25)
    tt.store %19, %17 : tensor<1x!tt.ptr<f32>> loc(#loc26)
    tt.return loc(#loc27)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":27:26)
#loc3 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":31:30)
#loc4 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":31:35)
#loc5 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":32:30)
#loc6 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":32:35)
#loc7 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":33:18)
#loc8 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":34:23)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc12 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc14 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc16 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":36:44)
#loc17 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":37:18)
#loc18 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":38:18)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":40:45)
#loc23 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":42:20)
#loc24 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":43:4)
#loc25 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":44:28)
#loc26 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":44:63)
#loc27 = loc("inductor_cache/lq/clquzivkphskqc2irwgg7vpnjonljf2l6sq247nevvj74cqsc5zl.py":44:4)
#loc28 = loc(callsite(#loc9 at #loc10))
#loc30 = loc(callsite(#loc11 at #loc9))
#loc31 = loc(callsite(#loc12 at #loc9))
#loc32 = loc(callsite(#loc13 at #loc9))
#loc33 = loc(callsite(#loc14 at #loc9))
#loc34 = loc(callsite(#loc15 at #loc16))
#loc35 = loc(callsite(#loc19 at #loc20))
#loc37 = loc(callsite(#loc21 at #loc19))
#loc38 = loc(callsite(#loc15 at #loc22))
#loc39 = loc(callsite(#loc30 at #loc10))
#loc40 = loc(callsite(#loc31 at #loc10))
#loc41 = loc(callsite(#loc32 at #loc10))
#loc42 = loc(callsite(#loc33 at #loc10))
#loc43 = loc(callsite(#loc37 at #loc20))
