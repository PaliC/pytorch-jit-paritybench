; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_8(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 2, !dbg !12
  %10 = and i32 %9, 508, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %12 = icmp slt i32 %11, 49280, !dbg !14
  %13 = sdiv i32 %11, 16, !dbg !15
  %14 = srem i32 %13, 770, !dbg !16
  %.frozen = freeze i32 %11, !dbg !17
  %15 = sdiv i32 %.frozen, 12320, !dbg !17
  %16 = icmp slt i32 %14, 512, !dbg !18
  %17 = mul i32 %15, 12320, !dbg !19
  %srem.decomposed = sub i32 %.frozen, %17, !dbg !19
  %18 = shl nsw i32 %15, 13, !dbg !20
  %19 = add nsw i32 %18, %srem.decomposed, !dbg !21
  %20 = sext i32 %19 to i64, !dbg !22
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !22
  %22 = and i1 %12, %16, !dbg !23
  %23 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %21, i1 %22, i32 0, i1 %22, i32 0, i1 %22, i32 0, i1 %22, i32 0, i1 %22) #1, !dbg !24
  %24 = extractvalue { i32, i32, i32, i32 } %23, 0, !dbg !24
  %25 = extractvalue { i32, i32, i32, i32 } %23, 1, !dbg !24
  %26 = extractvalue { i32, i32, i32, i32 } %23, 2, !dbg !24
  %27 = extractvalue { i32, i32, i32, i32 } %23, 3, !dbg !24
  %28 = and i32 %14, -256, !dbg !25
  %29 = icmp eq i32 %28, 512, !dbg !25
  %30 = shl nsw i32 %15, 12, !dbg !26
  %31 = add nsw i32 %srem.decomposed, -8192, !dbg !27
  %32 = add nsw i32 %31, %30, !dbg !28
  %33 = sext i32 %32 to i64, !dbg !29
  %34 = getelementptr float, ptr addrspace(1) %1, i64 %33, !dbg !29
  %35 = and i1 %12, %29, !dbg !30
  %36 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %34, i1 %35, i32 0, i1 %35, i32 0, i1 %35, i32 0, i1 %35, i32 0, i1 %35) #1, !dbg !31
  %37 = extractvalue { i32, i32, i32, i32 } %36, 0, !dbg !31
  %38 = extractvalue { i32, i32, i32, i32 } %36, 1, !dbg !31
  %39 = extractvalue { i32, i32, i32, i32 } %36, 2, !dbg !31
  %40 = extractvalue { i32, i32, i32, i32 } %36, 3, !dbg !31
  %41 = bitcast i32 %37 to float, !dbg !31
  %42 = bitcast i32 %38 to float, !dbg !31
  %43 = bitcast i32 %39 to float, !dbg !31
  %44 = bitcast i32 %40 to float, !dbg !31
  %45 = fcmp ogt float %41, 0.000000e+00, !dbg !32
  %46 = fcmp ogt float %42, 0.000000e+00, !dbg !32
  %47 = fcmp ogt float %43, 0.000000e+00, !dbg !32
  %48 = fcmp ogt float %44, 0.000000e+00, !dbg !32
  %49 = fmul float %41, 0x3FB99999A0000000, !dbg !33
  %50 = fmul float %42, 0x3FB99999A0000000, !dbg !33
  %51 = fmul float %43, 0x3FB99999A0000000, !dbg !33
  %52 = fmul float %44, 0x3FB99999A0000000, !dbg !33
  %53 = select i1 %45, float %41, float %49, !dbg !34
  %54 = select i1 %46, float %42, float %50, !dbg !34
  %55 = select i1 %47, float %43, float %51, !dbg !34
  %56 = select i1 %48, float %44, float %52, !dbg !34
  %57 = icmp sgt i32 %14, 767, !dbg !35
  %58 = shl nsw i32 %15, 5, !dbg !36
  %59 = add nsw i32 %srem.decomposed, -12288, !dbg !37
  %60 = add nsw i32 %59, %58, !dbg !38
  %61 = sext i32 %60 to i64, !dbg !39
  %62 = getelementptr float, ptr addrspace(1) %2, i64 %61, !dbg !39
  %63 = and i1 %12, %57, !dbg !40
  %64 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];\0A\09@!$7 mov.u32 $0, $6;\0A\09@!$9 mov.u32 $1, $8;\0A\09@!$11 mov.u32 $2, $10;\0A\09@!$13 mov.u32 $3, $12;", "=r,=r,=r,=r,l,b,r,b,r,b,r,b,r,b"(ptr addrspace(1) %62, i1 %63, i32 0, i1 %63, i32 0, i1 %63, i32 0, i1 %63, i32 0, i1 %63) #1, !dbg !41
  %65 = extractvalue { i32, i32, i32, i32 } %64, 0, !dbg !41
  %66 = extractvalue { i32, i32, i32, i32 } %64, 1, !dbg !41
  %67 = extractvalue { i32, i32, i32, i32 } %64, 2, !dbg !41
  %68 = extractvalue { i32, i32, i32, i32 } %64, 3, !dbg !41
  %69 = sext i32 %11 to i64, !dbg !42
  %70 = getelementptr float, ptr addrspace(1) %3, i64 %69, !dbg !42
  %71 = bitcast float %53 to i32, !dbg !43
  %72 = select i1 %29, i32 %71, i32 %65, !dbg !44
  %73 = select i1 %16, i32 %24, i32 %72, !dbg !45
  %74 = bitcast float %54 to i32, !dbg !43
  %75 = select i1 %29, i32 %74, i32 %66, !dbg !44
  %76 = select i1 %16, i32 %25, i32 %75, !dbg !45
  %77 = bitcast float %55 to i32, !dbg !43
  %78 = select i1 %29, i32 %77, i32 %67, !dbg !44
  %79 = select i1 %16, i32 %26, i32 %78, !dbg !45
  %80 = bitcast float %56 to i32, !dbg !43
  %81 = select i1 %29, i32 %80, i32 %68, !dbg !44
  %82 = select i1 %16, i32 %27, i32 %81, !dbg !45
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %73, i32 %76, i32 %79, i32 %82, ptr addrspace(1) %70, i1 %12) #1, !dbg !43
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccksl5jkm6qcy2oxuwdypmcm72evzvhtn47w7et6vkgvbav6llrk.py", directory: "inductor_cache/ck")
!4 = !{ptr @triton_poi_fused_cat_8, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_8, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_8", linkageName: "triton_poi_fused_cat_8", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 32, column: 18, scope: !7)
!19 = !DILocation(line: 33, column: 35, scope: !7)
!20 = !DILocation(line: 33, column: 50, scope: !7)
!21 = !DILocation(line: 33, column: 45, scope: !7)
!22 = !DILocation(line: 33, column: 30, scope: !7)
!23 = !DILocation(line: 33, column: 62, scope: !7)
!24 = !DILocation(line: 33, column: 55, scope: !7)
!25 = !DILocation(line: 37, column: 18, scope: !7)
!26 = !DILocation(line: 38, column: 60, scope: !7)
!27 = !DILocation(line: 38, column: 36, scope: !7)
!28 = !DILocation(line: 38, column: 55, scope: !7)
!29 = !DILocation(line: 38, column: 31, scope: !7)
!30 = !DILocation(line: 38, column: 72, scope: !7)
!31 = !DILocation(line: 38, column: 65, scope: !7)
!32 = !DILocation(line: 40, column: 20, scope: !7)
!33 = !DILocation(line: 42, column: 20, scope: !7)
!34 = !DILocation(line: 43, column: 35, scope: !7)
!35 = !DILocation(line: 46, column: 20, scope: !7)
!36 = !DILocation(line: 49, column: 58, scope: !7)
!37 = !DILocation(line: 49, column: 36, scope: !7)
!38 = !DILocation(line: 49, column: 55, scope: !7)
!39 = !DILocation(line: 49, column: 31, scope: !7)
!40 = !DILocation(line: 49, column: 71, scope: !7)
!41 = !DILocation(line: 49, column: 63, scope: !7)
!42 = !DILocation(line: 52, column: 25, scope: !7)
!43 = !DILocation(line: 52, column: 37, scope: !7)
!44 = !DILocation(line: 0, scope: !7)
!45 = !DILocation(line: 51, column: 33, scope: !7)
!46 = !DILocation(line: 52, column: 4, scope: !7)
