; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_max_pool2d_with_indices_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 2048, !dbg !14
  %11 = add i32 %9, -384, !dbg !15
  %12 = sext i32 %11 to i64, !dbg !16
  %13 = getelementptr float, ptr addrspace(1) %0, i64 %12, !dbg !16
  %14 = add i32 %9, -256, !dbg !17
  %15 = sext i32 %14 to i64, !dbg !18
  %16 = getelementptr float, ptr addrspace(1) %0, i64 %15, !dbg !18
  %17 = add i32 %9, -128, !dbg !19
  %18 = sext i32 %17 to i64, !dbg !20
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !20
  %20 = sext i32 %9 to i64, !dbg !21
  %21 = getelementptr float, ptr addrspace(1) %0, i64 %20, !dbg !21
  %22 = add i32 %9, 128, !dbg !22
  %23 = sext i32 %22 to i64, !dbg !23
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !23
  %25 = insertelement <2 x i32> poison, i32 %9, i64 0, !dbg !24
  %26 = shufflevector <2 x i32> %25, <2 x i32> poison, <2 x i32> zeroinitializer, !dbg !24
  %27 = sdiv <2 x i32> %26, <i32 256, i32 128>, !dbg !24
  %28 = srem <2 x i32> %27, splat (i32 2), !dbg !25
  %29 = extractelement <2 x i32> %28, i64 0, !dbg !26
  %30 = icmp sgt i32 %29, 0, !dbg !27
  %31 = extractelement <2 x i32> %28, i64 1, !dbg !26
  %32 = icmp sgt i32 %31, 0, !dbg !28
  %33 = and i1 %30, %32, !dbg !29
  %34 = and i1 %10, %33, !dbg !30
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %13, i1 %34, i32 -8388608, i1 %34) #1, !dbg !31
  %36 = bitcast i32 %35 to float, !dbg !31
  %37 = icmp sgt i32 %31, -1, !dbg !32
  %38 = and i1 %30, %37, !dbg !33
  %39 = and i1 %10, %38, !dbg !34
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %16, i1 %39, i32 -8388608, i1 %39) #1, !dbg !35
  %41 = bitcast i32 %40 to float, !dbg !35
  %42 = fcmp ogt float %41, %36, !dbg !36
  %43 = fcmp uno float %41, 0.000000e+00, !dbg !40
  %44 = or i1 %42, %43, !dbg !41
  %45 = select i1 %44, float %41, float %36, !dbg !42
  %46 = icmp slt <2 x i32> %28, splat (i32 1), !dbg !43
  %47 = extractelement <2 x i1> %46, i64 1, !dbg !44
  %48 = and i1 %30, %47, !dbg !44
  %49 = and i1 %10, %48, !dbg !45
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %49, i32 -8388608, i1 %49) #1, !dbg !46
  %51 = bitcast i32 %50 to float, !dbg !46
  %52 = fcmp olt float %45, %51, !dbg !47
  %53 = fcmp uno float %51, 0.000000e+00, !dbg !49
  %54 = or i1 %53, %52, !dbg !50
  %55 = select i1 %54, float %51, float %45, !dbg !51
  %56 = icmp sgt i32 %29, -1, !dbg !52
  %57 = and i1 %56, %32, !dbg !53
  %58 = and i1 %10, %57, !dbg !54
  %59 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %58, i32 -8388608, i1 %58) #1, !dbg !55
  %60 = bitcast i32 %59 to float, !dbg !55
  %61 = fcmp olt float %55, %60, !dbg !56
  %62 = fcmp uno float %60, 0.000000e+00, !dbg !58
  %63 = or i1 %62, %61, !dbg !59
  %64 = select i1 %63, float %60, float %55, !dbg !60
  %65 = or i32 %29, %31, !dbg !26
  %66 = icmp sgt i32 %65, -1, !dbg !26
  %67 = and i1 %10, %66, !dbg !61
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %21, i1 %67, i32 -8388608, i1 %67) #1, !dbg !62
  %69 = bitcast i32 %68 to float, !dbg !62
  %70 = fcmp olt float %64, %69, !dbg !63
  %71 = fcmp uno float %69, 0.000000e+00, !dbg !65
  %72 = or i1 %71, %70, !dbg !66
  %73 = select i1 %72, float %69, float %64, !dbg !67
  %74 = and i1 %56, %47, !dbg !68
  %75 = and i1 %10, %74, !dbg !69
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %75, i32 -8388608, i1 %75) #1, !dbg !70
  %77 = bitcast i32 %76 to float, !dbg !70
  %78 = fcmp olt float %73, %77, !dbg !71
  %79 = fcmp uno float %77, 0.000000e+00, !dbg !73
  %80 = or i1 %79, %78, !dbg !74
  %81 = select i1 %80, float %77, float %73, !dbg !75
  %82 = extractelement <2 x i1> %46, i64 0, !dbg !76
  %83 = and i1 %82, %32, !dbg !76
  %84 = and i1 %10, %83, !dbg !77
  %85 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %84, i32 -8388608, i1 %84) #1, !dbg !78
  %86 = bitcast i32 %85 to float, !dbg !78
  %87 = fcmp olt float %81, %86, !dbg !79
  %88 = fcmp uno float %86, 0.000000e+00, !dbg !81
  %89 = or i1 %88, %87, !dbg !82
  %90 = select i1 %89, float %86, float %81, !dbg !83
  %91 = and i1 %82, %37, !dbg !84
  %92 = add i32 %9, 256, !dbg !85
  %93 = sext i32 %92 to i64, !dbg !86
  %94 = getelementptr float, ptr addrspace(1) %0, i64 %93, !dbg !86
  %95 = and i1 %10, %91, !dbg !87
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %94, i1 %95, i32 -8388608, i1 %95) #1, !dbg !88
  %97 = bitcast i32 %96 to float, !dbg !88
  %98 = fcmp olt float %90, %97, !dbg !89
  %99 = fcmp uno float %97, 0.000000e+00, !dbg !91
  %100 = or i1 %99, %98, !dbg !92
  %101 = select i1 %100, float %97, float %90, !dbg !93
  %102 = and i1 %82, %47, !dbg !94
  %103 = add i32 %9, 384, !dbg !95
  %104 = sext i32 %103 to i64, !dbg !96
  %105 = getelementptr float, ptr addrspace(1) %0, i64 %104, !dbg !96
  %106 = and i1 %10, %102, !dbg !97
  %107 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %105, i1 %106, i32 -8388608, i1 %106) #1, !dbg !98
  %108 = bitcast i32 %107 to float, !dbg !98
  %109 = fcmp olt float %101, %108, !dbg !99
  %110 = fcmp uno float %108, 0.000000e+00, !dbg !101
  %111 = or i1 %110, %109, !dbg !102
  %112 = zext i1 %42 to i8, !dbg !103
  %113 = select i1 %52, i8 2, i8 %112, !dbg !104
  %114 = select i1 %61, i8 3, i8 %113, !dbg !105
  %115 = select i1 %70, i8 4, i8 %114, !dbg !106
  %116 = select i1 %78, i8 5, i8 %115, !dbg !107
  %117 = select i1 %87, i8 6, i8 %116, !dbg !108
  %118 = select i1 %98, i8 7, i8 %117, !dbg !109
  %119 = select i1 %109, i8 8, i8 %118, !dbg !110
  %120 = getelementptr float, ptr addrspace(1) %1, i64 %20, !dbg !111
  %121 = bitcast float %101 to i32, !dbg !112
  %122 = select i1 %111, i32 %107, i32 %121, !dbg !113
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %122, ptr addrspace(1) %120, i1 %10) #1, !dbg !112
  %123 = getelementptr i8, ptr addrspace(1) %2, i64 %20, !dbg !114
  tail call void asm sideeffect "@$2 st.global.b8 [ $1 + 0 ], { $0 };", "c,l,b"(i8 %119, ptr addrspace(1) %123, i1 %10) #1, !dbg !115
  ret void, !dbg !116
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfllrhq2ljdapmhqrrt7lpk6opauitlbm7slrmlmhqne3apbpumx.py", directory: "inductor_cache/fl")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_13, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_13", linkageName: "triton_poi_fused_max_pool2d_with_indices_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 38, column: 40, scope: !7)
!16 = !DILocation(line: 38, column: 31, scope: !7)
!17 = !DILocation(line: 44, column: 40, scope: !7)
!18 = !DILocation(line: 44, column: 31, scope: !7)
!19 = !DILocation(line: 51, column: 40, scope: !7)
!20 = !DILocation(line: 51, column: 31, scope: !7)
!21 = !DILocation(line: 61, column: 31, scope: !7)
!22 = !DILocation(line: 64, column: 37, scope: !7)
!23 = !DILocation(line: 64, column: 31, scope: !7)
!24 = !DILocation(line: 24, column: 21, scope: !7)
!25 = !DILocation(line: 24, column: 28, scope: !7)
!26 = !DILocation(line: 60, column: 20, scope: !7)
!27 = !DILocation(line: 29, column: 19, scope: !7)
!28 = !DILocation(line: 34, column: 19, scope: !7)
!29 = !DILocation(line: 37, column: 19, scope: !7)
!30 = !DILocation(line: 38, column: 53, scope: !7)
!31 = !DILocation(line: 38, column: 45, scope: !7)
!32 = !DILocation(line: 40, column: 21, scope: !7)
!33 = !DILocation(line: 43, column: 19, scope: !7)
!34 = !DILocation(line: 44, column: 53, scope: !7)
!35 = !DILocation(line: 44, column: 45, scope: !7)
!36 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !39)
!37 = distinct !DILexicalBlockFile(scope: !7, file: !38, discriminator: 0)
!38 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!39 = !DILocation(line: 45, column: 42, scope: !7)
!40 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !39)
!41 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !39)
!42 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !39)
!43 = !DILocation(line: 68, column: 20, scope: !7)
!44 = !DILocation(line: 50, column: 19, scope: !7)
!45 = !DILocation(line: 51, column: 53, scope: !7)
!46 = !DILocation(line: 51, column: 45, scope: !7)
!47 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !48)
!48 = !DILocation(line: 52, column: 42, scope: !7)
!49 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !48)
!50 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !48)
!51 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !48)
!52 = !DILocation(line: 54, column: 21, scope: !7)
!53 = !DILocation(line: 57, column: 20, scope: !7)
!54 = !DILocation(line: 58, column: 53, scope: !7)
!55 = !DILocation(line: 58, column: 45, scope: !7)
!56 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !57)
!57 = !DILocation(line: 59, column: 42, scope: !7)
!58 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !57)
!59 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !57)
!60 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !57)
!61 = !DILocation(line: 61, column: 44, scope: !7)
!62 = !DILocation(line: 61, column: 36, scope: !7)
!63 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !64)
!64 = !DILocation(line: 62, column: 42, scope: !7)
!65 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !64)
!66 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !64)
!67 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !64)
!68 = !DILocation(line: 63, column: 20, scope: !7)
!69 = !DILocation(line: 64, column: 50, scope: !7)
!70 = !DILocation(line: 64, column: 42, scope: !7)
!71 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !72)
!72 = !DILocation(line: 65, column: 42, scope: !7)
!73 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !72)
!74 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !72)
!75 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !72)
!76 = !DILocation(line: 70, column: 20, scope: !7)
!77 = !DILocation(line: 71, column: 50, scope: !7)
!78 = !DILocation(line: 71, column: 42, scope: !7)
!79 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !80)
!80 = !DILocation(line: 72, column: 42, scope: !7)
!81 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !80)
!82 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !80)
!83 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !80)
!84 = !DILocation(line: 73, column: 20, scope: !7)
!85 = !DILocation(line: 74, column: 37, scope: !7)
!86 = !DILocation(line: 74, column: 31, scope: !7)
!87 = !DILocation(line: 74, column: 50, scope: !7)
!88 = !DILocation(line: 74, column: 42, scope: !7)
!89 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !90)
!90 = !DILocation(line: 75, column: 42, scope: !7)
!91 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !90)
!92 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !90)
!93 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !90)
!94 = !DILocation(line: 76, column: 20, scope: !7)
!95 = !DILocation(line: 77, column: 37, scope: !7)
!96 = !DILocation(line: 77, column: 31, scope: !7)
!97 = !DILocation(line: 77, column: 50, scope: !7)
!98 = !DILocation(line: 77, column: 42, scope: !7)
!99 = !DILocation(line: 118, column: 15, scope: !37, inlinedAt: !100)
!100 = !DILocation(line: 78, column: 42, scope: !7)
!101 = !DILocation(line: 120, column: 21, scope: !37, inlinedAt: !100)
!102 = !DILocation(line: 120, column: 16, scope: !37, inlinedAt: !100)
!103 = !DILocation(line: 82, column: 35, scope: !7)
!104 = !DILocation(line: 85, column: 35, scope: !7)
!105 = !DILocation(line: 88, column: 35, scope: !7)
!106 = !DILocation(line: 91, column: 35, scope: !7)
!107 = !DILocation(line: 94, column: 35, scope: !7)
!108 = !DILocation(line: 97, column: 35, scope: !7)
!109 = !DILocation(line: 100, column: 35, scope: !7)
!110 = !DILocation(line: 103, column: 35, scope: !7)
!111 = !DILocation(line: 104, column: 25, scope: !7)
!112 = !DILocation(line: 104, column: 37, scope: !7)
!113 = !DILocation(line: 121, column: 29, scope: !37, inlinedAt: !100)
!114 = !DILocation(line: 105, column: 25, scope: !7)
!115 = !DILocation(line: 105, column: 37, scope: !7)
!116 = !DILocation(line: 105, column: 4, scope: !7)
