#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":19:0), %arg4: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<-1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<512xf32, #blocked> loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<512xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<512xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c512_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 512 : i32, start = 0 : i32} : tensor<512xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<512xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<512xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_1 : tensor<512xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_2 : tensor<512xi32, #blocked> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc8)
    %9 = tt.load %8 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc9)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc10)
    %11 = tt.addptr %10, %6 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc10)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc11)
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc12)
    %14 = tt.addptr %13, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc12)
    %15 = tt.load %14 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc13)
    %16 = arith.addf %9, %12 : tensor<512xf32, #blocked> loc(#loc14)
    %17 = tt.extern_elementwise %16 {libname = "", libpath = "", pure = true, symbol = "__nv_tanhf"} : (tensor<512xf32, #blocked>) -> tensor<512xf32, #blocked> loc(#loc15)
    %18 = arith.addf %15, %17 : tensor<512xf32, #blocked> loc(#loc16)
    %19 = arith.cmpf ogt, %18, %cst : tensor<512xf32, #blocked> loc(#loc36)
    %20 = arith.cmpf une, %18, %18 : tensor<512xf32, #blocked> loc(#loc37)
    %21 = arith.ori %19, %20 : tensor<512xi1, #blocked> loc(#loc38)
    %22 = arith.select %21, %18, %cst : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc39)
    %23 = arith.cmpf olt, %22, %cst_0 : tensor<512xf32, #blocked> loc(#loc40)
    %24 = arith.cmpf une, %22, %22 : tensor<512xf32, #blocked> loc(#loc41)
    %25 = arith.ori %23, %24 : tensor<512xi1, #blocked> loc(#loc42)
    %26 = arith.select %25, %22, %cst_0 : tensor<512xi1, #blocked>, tensor<512xf32, #blocked> loc(#loc43)
    %27 = arith.cmpf oge, %18, %cst : tensor<512xf32, #blocked> loc(#loc27)
    %28 = arith.cmpf ole, %18, %cst_0 : tensor<512xf32, #blocked> loc(#loc28)
    %29 = arith.andi %27, %28 : tensor<512xi1, #blocked> loc(#loc29)
    tt.store %8, %16 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc30)
    %30 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<512x!tt.ptr<f32>, #blocked> loc(#loc31)
    %31 = tt.addptr %30, %4 : tensor<512x!tt.ptr<f32>, #blocked>, tensor<512xi32, #blocked> loc(#loc31)
    tt.store %31, %26 : tensor<512x!tt.ptr<f32>, #blocked> loc(#loc32)
    %32 = tt.splat %arg4 : !tt.ptr<i1> -> tensor<512x!tt.ptr<i1>, #blocked> loc(#loc33)
    %33 = tt.addptr %32, %4 : tensor<512x!tt.ptr<i1>, #blocked>, tensor<512xi32, #blocked> loc(#loc33)
    %34 = tt.bitcast %33 : tensor<512x!tt.ptr<i1>, #blocked> -> tensor<512x!tt.ptr<i8>, #blocked> loc(#loc34)
    %35 = arith.extui %29 : tensor<512xi1, #blocked> to tensor<512xi8, #blocked> loc(#loc34)
    tt.store %34, %35 : tensor<512x!tt.ptr<i8>, #blocked> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":21:28)
#loc3 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":21:33)
#loc4 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":22:36)
#loc5 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":22:23)
#loc6 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":25:21)
#loc7 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":25:29)
#loc8 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":26:34)
#loc9 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":26:39)
#loc10 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":27:30)
#loc11 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":27:35)
#loc12 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":28:30)
#loc13 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":28:35)
#loc14 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":29:18)
#loc15 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":30:26)
#loc16 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":31:18)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc18 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":33:40)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc23 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":35:40)
#loc24 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc27 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":36:20)
#loc28 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":37:20)
#loc29 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":38:20)
#loc30 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":39:39)
#loc31 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":40:25)
#loc32 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":40:36)
#loc33 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":41:25)
#loc34 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":41:37)
#loc35 = loc("inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py":41:4)
#loc36 = loc(callsite(#loc17 at #loc18))
#loc37 = loc(callsite(#loc19 at #loc18))
#loc38 = loc(callsite(#loc20 at #loc18))
#loc39 = loc(callsite(#loc21 at #loc18))
#loc40 = loc(callsite(#loc22 at #loc23))
#loc41 = loc(callsite(#loc24 at #loc23))
#loc42 = loc(callsite(#loc25 at #loc23))
#loc43 = loc(callsite(#loc26 at #loc23))
