//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8 // -- Begin function triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8
.visible .entry triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_4,
	.param .u32 triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<78>;
	.reg .f32 	%f<142>;
	.reg .b64 	%rd<20>;
	.loc	1 19 0                          // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_1];
$L__tmp0:
	.loc	1 21 28                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:21:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:21:33
	shl.b32 	%r21, %r8, 9;
	ld.param.u64 	%rd13, [triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_2];
	.loc	1 22 36                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:22:36
	mov.u32 	%r22, %tid.x;
	shl.b32 	%r23, %r22, 2;
	and.b32  	%r24, %r23, 508;
	.loc	1 22 23                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:22:23
	or.b32  	%r25, %r21, %r24;
	.loc	1 25 21                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:25:21
	bfe.s32 	%r26, %r8, 22, 1;
	shr.u32 	%r27, %r26, 20;
	add.s32 	%r28, %r25, %r27;
	shr.s32 	%r29, %r28, 12;
	.loc	1 25 29                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:25:29
	mul.hi.s32 	%r30, %r29, 1431655766;
	shr.u32 	%r31, %r30, 31;
	add.s32 	%r32, %r30, %r31;
	mul.lo.s32 	%r33, %r32, 3;
	sub.s32 	%r34, %r29, %r33;
	.loc	1 26 34                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:26:34
	mul.wide.s32 	%rd14, %r25, 4;
	add.s64 	%rd16, %rd11, %rd14;
	mov.pred 	%p15, -1;
	.loc	1 26 39                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:26:39
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p15 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd16 + 0 ];
	// end inline asm
	mov.b32 	%f21, %r9;
	mov.b32 	%f22, %r10;
	mov.b32 	%f23, %r11;
	.loc	1 27 30                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:27:30
	mul.wide.s32 	%rd15, %r34, 4;
	add.s64 	%rd6, %rd12, %rd15;
	.loc	1 27 35                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:27:35
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r13 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f25, %r13;
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f26, %r14;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r15 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f27, %r15;
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p15 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 28 30                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:28:30
	add.s64 	%rd10, %rd13, %rd14;
	.loc	1 28 35                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:28:35
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p15 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 29 18                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:29:18
	add.f32 	%f1, %f21, %f25;
	add.f32 	%f2, %f22, %f26;
	.loc	1 30 26                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:30:26
	abs.ftz.f32 	%f5, %f1;
	setp.ltu.f32 	%p7, %f5, 0f3F19999A;
	mov.f32 	%f121, 0f3F800000;
	mov.f32 	%f122, 0fC0000000;
	mov.b32 	%r74, %f1;
	mov.f32 	%f133, 0fBD563CAE;
	mov.f32 	%f134, 0f3C80F082;
	mov.f32 	%f135, 0f3E085941;
	mov.f32 	%f136, 0fBEAAA9ED;
	mov.f32 	%f137, 0f00000000;
	@%p7 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %__internal_fmad.exit3.i
	mul.f32 	%f37, %f1, %f1;
	fma.rn.ftz.f32 	%f40, %f134, %f37, %f133;
	fma.rn.ftz.f32 	%f42, %f40, %f37, %f135;
	fma.rn.ftz.f32 	%f44, %f42, %f37, %f136;
	fma.rn.ftz.f32 	%f46, %f44, %f37, %f137;
	fma.rn.ftz.f32 	%f138, %f46, %f1, %f1;
	bra.uni 	$L__BB0_3;
$L__BB0_1:                              // %__internal_fmad.exit1.i
	mul.f32 	%f31, %f5, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f32, %f31;
	add.f32 	%f30, %f32, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f29,%f30;
	// end inline asm
	fma.rn.ftz.f32 	%f35, %f29, %f122, %f121;
	setp.ge.f32 	%p8, %f5, 0f41102CB4;
	selp.f32 	%f36, 0f3F800000, %f35, %p8;
	mov.b32 	%r35, %f36;
	and.b32  	%r37, %r74, -2147483648;
	or.b32  	%r38, %r37, %r35;
	mov.b32 	%f138, %r38;
$L__BB0_3:                              // %__nv_tanhf.exit
	.loc	1 0 0                           // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:0:0
	mov.b32 	%f24, %r12;
	mov.b32 	%f28, %r16;
	add.f32 	%f3, %f23, %f27;
	.loc	1 30 26                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:30:26
	abs.ftz.f32 	%f9, %f2;
	setp.ltu.f32 	%p9, %f9, 0f3F19999A;
	mov.b32 	%r75, %f2;
	@%p9 bra 	$L__BB0_5;
	bra.uni 	$L__BB0_4;
$L__BB0_5:                              // %__internal_fmad.exit3.i8
	mul.f32 	%f55, %f2, %f2;
	fma.rn.ftz.f32 	%f58, %f134, %f55, %f133;
	fma.rn.ftz.f32 	%f60, %f58, %f55, %f135;
	fma.rn.ftz.f32 	%f62, %f60, %f55, %f136;
	fma.rn.ftz.f32 	%f64, %f62, %f55, %f137;
	fma.rn.ftz.f32 	%f139, %f64, %f2, %f2;
	bra.uni 	$L__BB0_6;
$L__BB0_4:                              // %__internal_fmad.exit1.i3
	mul.f32 	%f49, %f9, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f50, %f49;
	add.f32 	%f48, %f50, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f47,%f48;
	// end inline asm
	fma.rn.ftz.f32 	%f53, %f47, %f122, %f121;
	setp.ge.f32 	%p10, %f9, 0f41102CB4;
	selp.f32 	%f54, 0f3F800000, %f53, %p10;
	mov.b32 	%r39, %f54;
	and.b32  	%r41, %r75, -2147483648;
	or.b32  	%r42, %r41, %r39;
	mov.b32 	%f139, %r42;
$L__BB0_6:                              // %__nv_tanhf.exit19
	.loc	1 0 0                           // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:0:0
	add.f32 	%f4, %f24, %f28;
	.loc	1 30 26                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:30:26
	abs.ftz.f32 	%f13, %f3;
	setp.ltu.f32 	%p11, %f13, 0f3F19999A;
	mov.b32 	%r76, %f3;
	@%p11 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %__internal_fmad.exit3.i27
	mul.f32 	%f73, %f3, %f3;
	fma.rn.ftz.f32 	%f76, %f134, %f73, %f133;
	fma.rn.ftz.f32 	%f78, %f76, %f73, %f135;
	fma.rn.ftz.f32 	%f80, %f78, %f73, %f136;
	fma.rn.ftz.f32 	%f82, %f80, %f73, %f137;
	fma.rn.ftz.f32 	%f140, %f82, %f3, %f3;
	bra.uni 	$L__BB0_9;
$L__BB0_7:                              // %__internal_fmad.exit1.i22
	mul.f32 	%f67, %f13, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f68, %f67;
	add.f32 	%f66, %f68, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f65,%f66;
	// end inline asm
	fma.rn.ftz.f32 	%f71, %f65, %f122, %f121;
	setp.ge.f32 	%p12, %f13, 0f41102CB4;
	selp.f32 	%f72, 0f3F800000, %f71, %p12;
	mov.b32 	%r43, %f72;
	and.b32  	%r45, %r76, -2147483648;
	or.b32  	%r46, %r45, %r43;
	mov.b32 	%f140, %r46;
$L__BB0_9:                              // %__nv_tanhf.exit38
	.loc	1 0 26                          // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:0:26
	ld.param.u64 	%rd4, [triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_4];
	ld.param.u64 	%rd3, [triton_poi_fused_add_clamp_convolution_ge_le_logical_and_tanh_8_param_3];
	cvt.s64.s32 	%rd1, %r25;
	.loc	1 30 26                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:30:26
	abs.ftz.f32 	%f17, %f4;
	setp.ltu.f32 	%p13, %f17, 0f3F19999A;
	@%p13 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %__internal_fmad.exit3.i46
	mul.f32 	%f91, %f4, %f4;
	fma.rn.ftz.f32 	%f94, %f134, %f91, %f133;
	fma.rn.ftz.f32 	%f96, %f94, %f91, %f135;
	fma.rn.ftz.f32 	%f98, %f96, %f91, %f136;
	fma.rn.ftz.f32 	%f100, %f98, %f91, %f137;
	fma.rn.ftz.f32 	%f141, %f100, %f4, %f4;
	.loc	1 39 39                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:39:39
	mov.b32 	%r77, %f4;
	bra.uni 	$L__BB0_12;
$L__BB0_10:                             // %__internal_fmad.exit1.i41
	.loc	1 30 26                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:30:26
	mul.f32 	%f85, %f17, 0f4038AA3B;
	ex2.approx.ftz.f32 	%f86, %f85;
	add.f32 	%f84, %f86, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f83,%f84;
	// end inline asm
	fma.rn.ftz.f32 	%f89, %f83, %f122, %f121;
	setp.ge.f32 	%p14, %f17, 0f41102CB4;
	selp.f32 	%f90, 0f3F800000, %f89, %p14;
	mov.b32 	%r47, %f90;
	mov.b32 	%r77, %f4;
	and.b32  	%r48, %r77, -2147483648;
	or.b32  	%r49, %r48, %r47;
	mov.b32 	%f141, %r49;
$L__BB0_12:                             // %__nv_tanhf.exit57
	.loc	1 39 39                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:39:39
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd16 + 0 ], { %r74, %r75, %r76, %r77 };
	// end inline asm
	.loc	1 40 25                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:40:25
	shl.b64 	%rd19, %rd1, 2;
	add.s64 	%rd17, %rd3, %rd19;
	.loc	1 41 25                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:41:25
	add.s64 	%rd18, %rd4, %rd1;
	.loc	1 28 35                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:28:35
	mov.b32 	%f101, %r20;
	mov.b32 	%f102, %r19;
	mov.b32 	%f103, %r18;
	mov.b32 	%f104, %r17;
	.loc	1 31 18                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:31:18
	add.f32 	%f105, %f138, %f104;
	add.f32 	%f106, %f139, %f103;
	add.f32 	%f107, %f140, %f102;
	add.f32 	%f108, %f141, %f101;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p18, %f108, 0fBF800000;
	setp.gt.f32 	%p19, %f107, 0fBF800000;
	setp.gt.f32 	%p20, %f106, 0fBF800000;
	setp.gt.f32 	%p21, %f105, 0fBF800000;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p22, %f108, %f108;
	setp.nan.f32 	%p23, %f107, %f107;
	setp.nan.f32 	%p24, %f106, %f106;
	setp.nan.f32 	%p25, %f105, %f105;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f109, %f105, 0fBF800000, %p25;
	selp.f32 	%f110, %f105, %f109, %p21;
	selp.f32 	%f111, %f106, 0fBF800000, %p24;
	selp.f32 	%f112, %f106, %f111, %p20;
	selp.f32 	%f113, %f107, 0fBF800000, %p23;
	selp.f32 	%f114, %f107, %f113, %p19;
	selp.f32 	%f115, %f108, 0fBF800000, %p22;
	selp.f32 	%f116, %f108, %f115, %p18;
$L__tmp2:
	.loc	2 110 15                        // triton_helpers.py:110:15
	setp.lt.f32 	%p26, %f116, 0f3F800000;
	setp.lt.f32 	%p27, %f114, 0f3F800000;
	setp.lt.f32 	%p28, %f112, 0f3F800000;
	setp.lt.f32 	%p29, %f110, 0f3F800000;
	.loc	2 112 21                        // triton_helpers.py:112:21
	setp.nan.f32 	%p30, %f110, %f110;
	setp.nan.f32 	%p31, %f112, %f112;
	setp.nan.f32 	%p32, %f114, %f114;
	setp.nan.f32 	%p33, %f116, %f116;
$L__tmp3:
	.loc	1 38 20                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:38:20
	abs.f32 	%f117, %f105;
	abs.f32 	%f118, %f106;
	abs.f32 	%f119, %f107;
	abs.f32 	%f120, %f108;
	setp.le.f32 	%p34, %f120, 0f3F800000;
	setp.le.f32 	%p35, %f119, 0f3F800000;
	setp.le.f32 	%p36, %f118, 0f3F800000;
	setp.le.f32 	%p37, %f117, 0f3F800000;
	.loc	1 40 36                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:40:36
	mov.b32 	%r59, %f110;
$L__tmp4:
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.b32 	%r60, %r59, 1065353216, %p30;
	selp.b32 	%r54, %r59, %r60, %p29;
$L__tmp5:
	.loc	1 40 36                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:40:36
	mov.b32 	%r61, %f112;
$L__tmp6:
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.b32 	%r62, %r61, 1065353216, %p31;
	selp.b32 	%r55, %r61, %r62, %p28;
$L__tmp7:
	.loc	1 40 36                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:40:36
	mov.b32 	%r63, %f114;
$L__tmp8:
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.b32 	%r64, %r63, 1065353216, %p32;
	selp.b32 	%r56, %r63, %r64, %p27;
$L__tmp9:
	.loc	1 40 36                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:40:36
	mov.b32 	%r65, %f116;
$L__tmp10:
	.loc	2 113 29                        // triton_helpers.py:113:29
	selp.b32 	%r66, %r65, 1065353216, %p33;
	selp.b32 	%r57, %r65, %r66, %p26;
$L__tmp11:
	.loc	1 40 36                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:40:36
	// begin inline asm
	@%p15 st.global.v4.b32 [ %rd17 + 0 ], { %r54, %r55, %r56, %r57 };
	// end inline asm
	.loc	1 41 37                         // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:41:37
	selp.u32 	%r67, 1, 0, %p37;
	selp.u32 	%r68, 1, 0, %p36;
	prmt.b32 	%r69, %r67, %r68, 0x3340U;
	selp.u32 	%r70, 1, 0, %p35;
	selp.u32 	%r71, 1, 0, %p34;
	prmt.b32 	%r72, %r70, %r71, 0x3340U;
	prmt.b32 	%r73, %r69, %r72, 0x5410U;
	// begin inline asm
	@%p15 st.global.b32 [ %rd18 + 0 ], { %r73 };
	// end inline asm
	.loc	1 41 4                          // cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py:41:4
	ret;
$L__tmp12:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/xm/cxmi2ibvgitkhypvp2i7gposuyj6r53r6f5erprqhcuqytgjk3uu.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 232                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 120
.b8 109
.b8 105
.b8 50
.b8 105
.b8 98
.b8 118
.b8 103
.b8 105
.b8 116
.b8 107
.b8 104
.b8 121
.b8 112
.b8 118
.b8 112
.b8 50
.b8 105
.b8 55
.b8 103
.b8 112
.b8 111
.b8 115
.b8 117
.b8 121
.b8 106
.b8 54
.b8 114
.b8 53
.b8 51
.b8 114
.b8 54
.b8 102
.b8 53
.b8 101
.b8 114
.b8 112
.b8 114
.b8 113
.b8 104
.b8 99
.b8 117
.b8 113
.b8 121
.b8 116
.b8 103
.b8 106
.b8 107
.b8 51
.b8 117
.b8 117
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 120
.b8 109
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x42 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 108
.b8 97
.b8 109
.b8 112
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 103
.b8 101
.b8 95
.b8 108
.b8 101
.b8 95
.b8 108
.b8 111
.b8 103
.b8 105
.b8 99
.b8 97
.b8 108
.b8 95
.b8 97
.b8 110
.b8 100
.b8 95
.b8 116
.b8 97
.b8 110
.b8 104
.b8 95
.b8 56
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xa5:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 33                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp11                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 35                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
