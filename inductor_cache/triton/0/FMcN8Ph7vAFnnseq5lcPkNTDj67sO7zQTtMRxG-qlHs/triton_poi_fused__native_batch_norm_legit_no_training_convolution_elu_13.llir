; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"__CUDA_PREC_SQRT\00", align 1

define void @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_13(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7) local_unnamed_addr !dbg !7 {
  %9 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %10 = shl i32 %9, 8, !dbg !11
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %12 = shl i32 %11, 1, !dbg !12
  %13 = and i32 %12, 254, !dbg !12
  %14 = or disjoint i32 %10, %13, !dbg !13
  %15 = icmp slt i32 %14, 2048, !dbg !14
  %16 = srem i32 %14, 512, !dbg !15
  %17 = sext i32 %14 to i64, !dbg !16
  %18 = getelementptr float, ptr addrspace(1) %0, i64 %17, !dbg !16
  %19 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %18, i1 %15) #3, !dbg !17
  %20 = extractvalue { i32, i32 } %19, 0, !dbg !17
  %21 = extractvalue { i32, i32 } %19, 1, !dbg !17
  %22 = bitcast i32 %20 to float, !dbg !17
  %23 = bitcast i32 %21 to float, !dbg !17
  %24 = sext i32 %16 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %2, i64 %24, !dbg !18
  %26 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %25, i1 %15) #3, !dbg !19
  %27 = extractvalue { i32, i32 } %26, 0, !dbg !19
  %28 = extractvalue { i32, i32 } %26, 1, !dbg !19
  %29 = bitcast i32 %27 to float, !dbg !19
  %30 = bitcast i32 %28 to float, !dbg !19
  %31 = getelementptr float, ptr addrspace(1) %3, i64 %24, !dbg !20
  %32 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %31, i1 %15) #3, !dbg !21
  %33 = extractvalue { i32, i32 } %32, 0, !dbg !21
  %34 = extractvalue { i32, i32 } %32, 1, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = bitcast i32 %34 to float, !dbg !21
  %37 = getelementptr float, ptr addrspace(1) %4, i64 %24, !dbg !22
  %38 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %37, i1 %15) #3, !dbg !23
  %39 = extractvalue { i32, i32 } %38, 0, !dbg !23
  %40 = extractvalue { i32, i32 } %38, 1, !dbg !23
  %41 = bitcast i32 %39 to float, !dbg !23
  %42 = bitcast i32 %40 to float, !dbg !23
  %43 = getelementptr float, ptr addrspace(1) %5, i64 %24, !dbg !24
  %44 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %43, i1 %15) #3, !dbg !25
  %45 = extractvalue { i32, i32 } %44, 0, !dbg !25
  %46 = extractvalue { i32, i32 } %44, 1, !dbg !25
  %47 = bitcast i32 %45 to float, !dbg !25
  %48 = bitcast i32 %46 to float, !dbg !25
  %49 = getelementptr float, ptr addrspace(1) %6, i64 %24, !dbg !26
  %50 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %49, i1 %15) #3, !dbg !27
  %51 = extractvalue { i32, i32 } %50, 0, !dbg !27
  %52 = extractvalue { i32, i32 } %50, 1, !dbg !27
  %53 = bitcast i32 %51 to float, !dbg !27
  %54 = bitcast i32 %52 to float, !dbg !27
  %55 = fadd float %22, %29, !dbg !28
  %56 = fadd float %23, %30, !dbg !28
  %57 = fsub float %55, %35, !dbg !29
  %58 = fsub float %56, %36, !dbg !29
  %59 = fadd float %41, 0x3F1A36E2E0000000, !dbg !30
  %60 = fadd float %42, 0x3F1A36E2E0000000, !dbg !30
  %61 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i = icmp eq i32 %61, 0, !dbg !31
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i = icmp eq i32 %62, 0, !dbg !31
  br i1 %.not.i, label %68, label %63, !dbg !31

63:                                               ; preds = %8
  br i1 %.not1.i, label %66, label %64, !dbg !31

64:                                               ; preds = %63
  %65 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

66:                                               ; preds = %63
  %67 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

68:                                               ; preds = %8
  br i1 %.not1.i, label %71, label %69, !dbg !31

69:                                               ; preds = %68
  %70 = tail call float @llvm.nvvm.sqrt.rn.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

71:                                               ; preds = %68
  %72 = tail call float @llvm.nvvm.sqrt.approx.f(float %59) #3, !dbg !31
  br label %__nv_sqrtf.exit, !dbg !31

__nv_sqrtf.exit:                                  ; preds = %64, %66, %69, %71
  %.0.i = phi float [ %65, %64 ], [ %67, %66 ], [ %70, %69 ], [ %72, %71 ], !dbg !31
  %73 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !31
  %.not.i1 = icmp eq i32 %73, 0, !dbg !31
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str.2) #3, !dbg !31
  %.not1.i4 = icmp eq i32 %74, 0, !dbg !31
  br i1 %.not.i1, label %80, label %75, !dbg !31

75:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %78, label %76, !dbg !31

76:                                               ; preds = %75
  %77 = tail call float @llvm.nvvm.sqrt.rn.ftz.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

78:                                               ; preds = %75
  %79 = tail call float @llvm.nvvm.sqrt.approx.ftz.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

80:                                               ; preds = %__nv_sqrtf.exit
  br i1 %.not1.i4, label %83, label %81, !dbg !31

81:                                               ; preds = %80
  %82 = tail call float @llvm.nvvm.sqrt.rn.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

83:                                               ; preds = %80
  %84 = tail call float @llvm.nvvm.sqrt.approx.f(float %60) #3, !dbg !31
  br label %__nv_sqrtf.exit5, !dbg !31

__nv_sqrtf.exit5:                                 ; preds = %76, %78, %81, %83
  %.0.i3 = phi float [ %77, %76 ], [ %79, %78 ], [ %82, %81 ], [ %84, %83 ], !dbg !31
  %85 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i) #3, !dbg !32
  %86 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %.0.i3) #3, !dbg !32
  %87 = fmul float %57, %85, !dbg !33
  %88 = fmul float %58, %86, !dbg !33
  %89 = fmul float %87, %47, !dbg !34
  %90 = fmul float %88, %48, !dbg !34
  %91 = fadd float %89, %53, !dbg !35
  %92 = fadd float %90, %54, !dbg !35
  %93 = fmul float %91, 0x3FF7154760000000, !dbg !36
  %94 = tail call float @llvm.nvvm.round.f(float %93) #3, !dbg !36
  %95 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i6 = icmp eq i32 %95, 0, !dbg !36
  %96 = tail call float @llvm.nvvm.fabs.ftz.f(float %91) #3, !dbg !36
  %97 = tail call float @llvm.nvvm.fabs.f(float %91) #3, !dbg !36
  %.03.i = select i1 %.not.i6, float %97, float %96, !dbg !36
  %98 = fcmp olt float %.03.i, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i = select i1 %98, float 0.000000e+00, float %94, !dbg !36
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %100 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %101 = fcmp oeq float %t.0.i, 1.280000e+02, !dbg !36
  %j.0.i = select i1 %101, float 1.270000e+02, float %t.0.i, !dbg !36
  %102 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %103 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %106 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i = icmp eq i32 %107, 0, !dbg !36
  br i1 %.not8.i, label %110, label %108, !dbg !36

108:                                              ; preds = %__nv_sqrtf.exit5
  %109 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i) #3, !dbg !36
  br label %__nv_expm1f.exit, !dbg !36

110:                                              ; preds = %__nv_sqrtf.exit5
  %111 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i) #3, !dbg !36
  br label %__nv_expm1f.exit, !dbg !36

__nv_expm1f.exit:                                 ; preds = %108, %110
  %.0.i7 = phi float [ %109, %108 ], [ %111, %110 ], !dbg !36
  %112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %113 = fmul float %92, 0x3FF7154760000000, !dbg !36
  %114 = tail call float @llvm.nvvm.round.f(float %113) #3, !dbg !36
  %115 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not.i10 = icmp eq i32 %115, 0, !dbg !36
  %116 = tail call float @llvm.nvvm.fabs.ftz.f(float %92) #3, !dbg !36
  %117 = tail call float @llvm.nvvm.fabs.f(float %92) #3, !dbg !36
  %.03.i11 = select i1 %.not.i10, float %117, float %116, !dbg !36
  %118 = fcmp olt float %.03.i11, 0x3FDA3D70A0000000, !dbg !36
  %t.0.i12 = select i1 %118, float 0.000000e+00, float %114, !dbg !36
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %121 = fcmp oeq float %t.0.i12, 1.280000e+02, !dbg !36
  %j.0.i13 = select i1 %121, float 1.270000e+02, float %t.0.i12, !dbg !36
  %122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %127 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not8.i14 = icmp eq i32 %127, 0, !dbg !36
  br i1 %.not8.i14, label %130, label %128, !dbg !36

128:                                              ; preds = %__nv_expm1f.exit
  %129 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %j.0.i13) #3, !dbg !36
  br label %__nv_expm1f.exit36, !dbg !36

130:                                              ; preds = %__nv_expm1f.exit
  %131 = tail call float @llvm.nvvm.ex2.approx.f(float %j.0.i13) #3, !dbg !36
  br label %__nv_expm1f.exit36, !dbg !36

__nv_expm1f.exit36:                               ; preds = %128, %130
  %.0.i15 = phi float [ %129, %128 ], [ %131, %130 ], !dbg !36
  %132 = fcmp oeq float %91, 0.000000e+00, !dbg !36
  %133 = fadd float %91, %91, !dbg !36
  %134 = fcmp olt float %j.0.i, -2.500000e+01, !dbg !36
  %135 = fcmp ogt float %j.0.i, 1.280000e+02, !dbg !36
  %.not9.i = icmp eq i32 %112, 0, !dbg !36
  %.not7.i = icmp eq i32 %106, 0, !dbg !36
  %.not6.i = icmp eq i32 %105, 0, !dbg !36
  %.not5.i = icmp eq i32 %104, 0, !dbg !36
  %.not4.i = icmp eq i32 %103, 0, !dbg !36
  %.not3.i = icmp eq i32 %102, 0, !dbg !36
  %.not2.i8 = icmp eq i32 %100, 0, !dbg !36
  %136 = fneg float %t.0.i, !dbg !36
  %.not1.i9 = icmp eq i32 %99, 0, !dbg !36
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %136, float 0x3FE62E4000000000, float %91) #3, !dbg !36
  %138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %136, float 0x3FE62E4000000000, float %91) #3, !dbg !36
  %.04.i = select i1 %.not1.i9, float %137, float %138, !dbg !36
  %139 = tail call float @llvm.nvvm.fma.rn.f(float %136, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !36
  %140 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %136, float 0x3EB7F7D1C0000000, float %.04.i) #3, !dbg !36
  %.05.i = select i1 %.not2.i8, float %139, float %140, !dbg !36
  %141 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !36
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i = select i1 %.not3.i, float %141, float %142, !dbg !36
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !36
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %.05.i, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i = select i1 %.not4.i, float %143, float %144, !dbg !36
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !36
  %146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %.05.i, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i = select i1 %.not5.i, float %145, float %146, !dbg !36
  %147 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %148 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.05.i, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i = select i1 %.not6.i, float %147, float %148, !dbg !36
  %149 = fmul float %.05.i, %.06.i, !dbg !36
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %149, float %.05.i, float %.05.i) #3, !dbg !36
  %151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %149, float %.05.i, float %.05.i) #3, !dbg !36
  %.01.i = select i1 %.not7.i, float %150, float %151, !dbg !36
  %152 = fadd float %.0.i7, -1.000000e+00, !dbg !36
  %153 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %.0.i7, float %152) #3, !dbg !36
  %154 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %.0.i7, float %152) #3, !dbg !36
  %.02.i = select i1 %.not9.i, float %153, float %154, !dbg !36
  %155 = fadd float %.02.i, %.02.i, !dbg !36
  %u.0.i = select i1 %101, float %155, float %.02.i, !dbg !36
  %u.1.i = select i1 %135, float 0x7FF0000000000000, float %u.0.i, !dbg !36
  %u.2.i = select i1 %134, float -1.000000e+00, float %u.1.i, !dbg !36
  %u.3.i = select i1 %132, float %133, float %u.2.i, !dbg !36
  %156 = fcmp ogt float %92, 0.000000e+00, !dbg !37
  %157 = fcmp ogt float %91, 0.000000e+00, !dbg !37
  %.not7.i16 = icmp eq i32 %126, 0, !dbg !36
  %.not6.i17 = icmp eq i32 %125, 0, !dbg !36
  %.not5.i18 = icmp eq i32 %124, 0, !dbg !36
  %.not4.i19 = icmp eq i32 %123, 0, !dbg !36
  %.not3.i20 = icmp eq i32 %122, 0, !dbg !36
  %.not2.i21 = icmp eq i32 %120, 0, !dbg !36
  %158 = fneg float %t.0.i12, !dbg !36
  %.not1.i22 = icmp eq i32 %119, 0, !dbg !36
  %159 = tail call float @llvm.nvvm.fma.rn.f(float %158, float 0x3FE62E4000000000, float %92) #3, !dbg !36
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %158, float 0x3FE62E4000000000, float %92) #3, !dbg !36
  %.04.i23 = select i1 %.not1.i22, float %159, float %160, !dbg !36
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %158, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !36
  %162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %158, float 0x3EB7F7D1C0000000, float %.04.i23) #3, !dbg !36
  %.05.i24 = select i1 %.not2.i21, float %161, float %162, !dbg !36
  %163 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !36
  %164 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F56BD7CC0000000, float %.05.i24, float 0x3F812ACC60000000) #3, !dbg !36
  %.07.i25 = select i1 %.not3.i20, float %163, float %164, !dbg !36
  %165 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !36
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i25, float %.05.i24, float 0x3FA5557C60000000) #3, !dbg !36
  %.08.i26 = select i1 %.not4.i19, float %165, float %166, !dbg !36
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !36
  %168 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i26, float %.05.i24, float 0x3FC5553EC0000000) #3, !dbg !36
  %.09.i27 = select i1 %.not5.i18, float %167, float %168, !dbg !36
  %169 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %170 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i27, float %.05.i24, float 0x3FDFFFFFC0000000) #3, !dbg !36
  %.06.i28 = select i1 %.not6.i17, float %169, float %170, !dbg !36
  %171 = fmul float %.05.i24, %.06.i28, !dbg !36
  %172 = tail call float @llvm.nvvm.fma.rn.f(float %171, float %.05.i24, float %.05.i24) #3, !dbg !36
  %173 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %171, float %.05.i24, float %.05.i24) #3, !dbg !36
  %.01.i29 = select i1 %.not7.i16, float %172, float %173, !dbg !36
  %174 = fadd float %.0.i15, -1.000000e+00, !dbg !36
  %175 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !36
  %.not9.i30 = icmp eq i32 %175, 0, !dbg !36
  %176 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i29, float %.0.i15, float %174) #3, !dbg !36
  %177 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i29, float %.0.i15, float %174) #3, !dbg !36
  %.02.i31 = select i1 %.not9.i30, float %177, float %176, !dbg !36
  %178 = fadd float %.02.i31, %.02.i31, !dbg !36
  %u.0.i32 = select i1 %121, float %178, float %.02.i31, !dbg !36
  %179 = fcmp ogt float %j.0.i13, 1.280000e+02, !dbg !36
  %u.1.i33 = select i1 %179, float 0x7FF0000000000000, float %u.0.i32, !dbg !36
  %180 = fcmp olt float %j.0.i13, -2.500000e+01, !dbg !36
  %u.2.i34 = select i1 %180, float -1.000000e+00, float %u.1.i33, !dbg !36
  %181 = fcmp oeq float %92, 0.000000e+00, !dbg !36
  %182 = fadd float %92, %92, !dbg !36
  %u.3.i35 = select i1 %181, float %182, float %u.2.i34, !dbg !36
  %183 = select i1 %157, float %91, float %u.3.i, !dbg !38
  %184 = select i1 %156, float %92, float %u.3.i35, !dbg !38
  %185 = bitcast float %55 to i32, !dbg !39
  %186 = bitcast float %56 to i32, !dbg !39
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %185, i32 %186, ptr addrspace(1) %18, i1 %15) #3, !dbg !39
  %187 = getelementptr float, ptr addrspace(1) %1, i64 %17, !dbg !40
  %188 = bitcast float %183 to i32, !dbg !41
  %189 = bitcast float %184 to i32, !dbg !41
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %188, i32 %189, ptr addrspace(1) %187, i1 %15) #3, !dbg !41
  ret void, !dbg !42
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.rn.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.sqrt.approx.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.round.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cfw47t6hkagex7newt223rsa7ksqjuvf6fnd3fhgsicug34y6hfw.py", directory: "inductor_cache/fw")
!4 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_13, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_13", linkageName: "triton_poi_fused__native_batch_norm_legit_no_training_convolution_elu_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 34, scope: !7)
!17 = !DILocation(line: 26, column: 39, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 31, scope: !7)
!25 = !DILocation(line: 30, column: 36, scope: !7)
!26 = !DILocation(line: 31, column: 31, scope: !7)
!27 = !DILocation(line: 31, column: 36, scope: !7)
!28 = !DILocation(line: 32, column: 18, scope: !7)
!29 = !DILocation(line: 33, column: 18, scope: !7)
!30 = !DILocation(line: 35, column: 18, scope: !7)
!31 = !DILocation(line: 36, column: 26, scope: !7)
!32 = !DILocation(line: 38, column: 19, scope: !7)
!33 = !DILocation(line: 41, column: 19, scope: !7)
!34 = !DILocation(line: 42, column: 20, scope: !7)
!35 = !DILocation(line: 43, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 28, scope: !7)
!37 = !DILocation(line: 45, column: 20, scope: !7)
!38 = !DILocation(line: 49, column: 35, scope: !7)
!39 = !DILocation(line: 50, column: 39, scope: !7)
!40 = !DILocation(line: 51, column: 28, scope: !7)
!41 = !DILocation(line: 51, column: 40, scope: !7)
!42 = !DILocation(line: 51, column: 4, scope: !7)
