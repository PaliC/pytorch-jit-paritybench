//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_cat_20 // -- Begin function triton_poi_fused_cat_20
                                        // @triton_poi_fused_cat_20
.visible .entry triton_poi_fused_cat_20(
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_20_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_20_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_20_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_20_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_cat_20_param_4,
	.param .u32 triton_poi_fused_cat_20_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<32>;
	.reg .b32 	%r<72>;
	.reg .f32 	%f<37>;
	.reg .b64 	%rd<27>;
	.loc	1 19 0                          // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:19:0

// %bb.0:
	ld.param.u64 	%rd12, [triton_poi_fused_cat_20_param_0];
	ld.param.u64 	%rd13, [triton_poi_fused_cat_20_param_1];
$L__tmp0:
	.loc	1 21 28                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:21:33
	shl.b32 	%r44, %r1, 8;
	ld.param.u64 	%rd14, [triton_poi_fused_cat_20_param_2];
	ld.param.u64 	%rd15, [triton_poi_fused_cat_20_param_3];
	.loc	1 22 36                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:22:36
	mov.u32 	%r45, %tid.x;
	shl.b32 	%r46, %r45, 1;
	ld.param.u64 	%rd16, [triton_poi_fused_cat_20_param_4];
	and.b32  	%r47, %r46, 254;
	.loc	1 22 23                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:22:23
	or.b32  	%r48, %r44, %r47;
	.loc	1 24 21                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:24:21
	shr.s32 	%r50, %r48, 31;
	shr.u32 	%r51, %r50, 26;
	add.s32 	%r52, %r48, %r51;
	shr.s32 	%r53, %r52, 6;
	.loc	1 24 27                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:24:27
	shr.u32 	%r54, %r53, 27;
	add.s32 	%r55, %r53, %r54;
	and.b32  	%r56, %r55, -32;
	sub.s32 	%r57, %r53, %r56;
	.loc	1 25 19                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:25:19
	and.b32  	%r58, %r52, -64;
	sub.s32 	%r59, %r48, %r58;
	.loc	1 26 19                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:26:19
	shr.u32 	%r60, %r50, 21;
	add.s32 	%r61, %r48, %r60;
	shr.s32 	%r62, %r61, 11;
	.loc	1 32 18                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:32:18
	setp.lt.s32 	%p1, %r57, 8;
	.loc	1 33 35                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:33:35
	and.b32  	%r63, %r61, -2048;
	sub.s32 	%r64, %r48, %r63;
	.loc	1 33 49                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:33:49
	shl.b32 	%r65, %r62, 9;
	.loc	1 33 45                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:33:45
	add.s32 	%r66, %r65, %r64;
	.loc	1 33 30                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:33:30
	mul.wide.s32 	%rd17, %r66, 4;
	add.s64 	%rd1, %rd12, %rd17;
	mov.b32 	%r4, 0;
	.loc	1 33 54                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:33:54
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	@%p1 ld.global.v2.b32 { %r2, %r3 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r4;
	@!%p1 mov.u32 %r3, %r4;
	// end inline asm
	.loc	1 37 18                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:37:18
	and.b32  	%r67, %r57, -8;
	setp.eq.s32 	%p4, %r67, 8;
	.loc	1 38 40                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:38:40
	shl.b32 	%r68, %r57, 6;
	add.s32 	%r69, %r65, %r59;
	.loc	1 38 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:38:31
	cvt.s64.s32 	%rd18, %r68;
	cvt.s64.s32 	%rd19, %r69;
	add.s64 	%rd20, %rd19, %rd18;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd12, %rd21;
	add.s64 	%rd2, %rd22, -2048;
	.loc	1 38 62                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:38:62
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p4 ld.global.v2.b32 { %r6, %r7 }, [ %rd2 + 0 ];
	@!%p4 mov.u32 %r6, %r4;
	@!%p4 mov.u32 %r7, %r4;
	// end inline asm
	mov.b32 	%f1, %r6;
	mov.b32 	%f2, %r7;
	.loc	1 39 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:39:31
	add.s64 	%rd23, %rd13, %rd21;
	add.s64 	%rd3, %rd23, -2048;
	.loc	1 39 62                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:39:62
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	@%p4 ld.global.v2.b32 { %r10, %r11 }, [ %rd3 + 0 ];
	@!%p4 mov.u32 %r10, %r4;
	@!%p4 mov.u32 %r11, %r4;
	// end inline asm
	mov.b32 	%f3, %r10;
	mov.b32 	%f4, %r11;
	.loc	1 40 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:40:20
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 46 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:46:20
	setp.eq.s32 	%p10, %r67, 16;
	.loc	1 47 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:47:31
	add.s64 	%rd4, %rd22, -4096;
	.loc	1 47 63                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:47:63
	// begin inline asm
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	@%p10 ld.global.v2.b32 { %r14, %r15 }, [ %rd4 + 0 ];
	@!%p10 mov.u32 %r14, %r4;
	@!%p10 mov.u32 %r15, %r4;
	// end inline asm
	mov.b32 	%f7, %r14;
	mov.b32 	%f8, %r15;
	.loc	1 48 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:48:31
	add.s64 	%rd5, %rd23, -4096;
	.loc	1 48 63                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:48:63
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	@%p10 ld.global.v2.b32 { %r18, %r19 }, [ %rd5 + 0 ];
	@!%p10 mov.u32 %r18, %r4;
	@!%p10 mov.u32 %r19, %r4;
	// end inline asm
	mov.b32 	%f9, %r18;
	mov.b32 	%f10, %r19;
	.loc	1 49 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:49:20
	add.f32 	%f11, %f7, %f9;
	add.f32 	%f12, %f8, %f10;
	.loc	1 50 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:50:31
	add.s64 	%rd24, %rd14, %rd21;
	add.s64 	%rd6, %rd24, -4096;
	.loc	1 50 63                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:50:63
	// begin inline asm
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	@%p10 ld.global.v2.b32 { %r22, %r23 }, [ %rd6 + 0 ];
	@!%p10 mov.u32 %r22, %r4;
	@!%p10 mov.u32 %r23, %r4;
	// end inline asm
	mov.b32 	%f13, %r22;
	mov.b32 	%f14, %r23;
	.loc	1 51 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:51:20
	add.f32 	%f15, %f11, %f13;
	add.f32 	%f16, %f12, %f14;
	.loc	1 54 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:54:20
	setp.gt.s32 	%p19, %r57, 23;
	.loc	1 57 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:57:31
	add.s64 	%rd7, %rd22, -6144;
	.loc	1 57 63                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:57:63
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	@%p19 ld.global.v2.b32 { %r26, %r27 }, [ %rd7 + 0 ];
	@!%p19 mov.u32 %r26, %r4;
	@!%p19 mov.u32 %r27, %r4;
	// end inline asm
	mov.b32 	%f17, %r26;
	mov.b32 	%f18, %r27;
	.loc	1 58 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:58:31
	add.s64 	%rd8, %rd23, -6144;
	.loc	1 58 63                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:58:63
	// begin inline asm
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	@%p19 ld.global.v2.b32 { %r30, %r31 }, [ %rd8 + 0 ];
	@!%p19 mov.u32 %r30, %r4;
	@!%p19 mov.u32 %r31, %r4;
	// end inline asm
	mov.b32 	%f19, %r30;
	mov.b32 	%f20, %r31;
	.loc	1 59 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:59:20
	add.f32 	%f21, %f17, %f19;
	add.f32 	%f22, %f18, %f20;
	.loc	1 60 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:60:31
	add.s64 	%rd9, %rd24, -6144;
	.loc	1 60 63                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:60:63
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	@%p19 ld.global.v2.b32 { %r34, %r35 }, [ %rd9 + 0 ];
	@!%p19 mov.u32 %r34, %r4;
	@!%p19 mov.u32 %r35, %r4;
	// end inline asm
	mov.b32 	%f23, %r34;
	mov.b32 	%f24, %r35;
	.loc	1 61 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:61:20
	add.f32 	%f25, %f21, %f23;
	add.f32 	%f26, %f22, %f24;
	.loc	1 62 31                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:62:31
	add.s64 	%rd25, %rd15, %rd21;
	add.s64 	%rd10, %rd25, -6144;
	.loc	1 62 63                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:62:63
	// begin inline asm
	mov.u32 %r38, 0x0;
	mov.u32 %r39, 0x0;
	@%p19 ld.global.v2.b32 { %r38, %r39 }, [ %rd10 + 0 ];
	@!%p19 mov.u32 %r38, %r4;
	@!%p19 mov.u32 %r39, %r4;
	// end inline asm
	mov.b32 	%f27, %r38;
	mov.b32 	%f28, %r39;
	.loc	1 63 20                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:63:20
	add.f32 	%f29, %f25, %f27;
	add.f32 	%f30, %f26, %f28;
	.loc	1 65 35                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:65:35
	selp.f32 	%f31, %f29, 0f00000000, %p19;
	selp.f32 	%f32, %f30, 0f00000000, %p19;
	.loc	1 0 0                           // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:0:0
	selp.f32 	%f33, %f15, %f31, %p10;
	selp.f32 	%f34, %f16, %f32, %p10;
	selp.f32 	%f35, %f5, %f33, %p4;
	selp.f32 	%f36, %f6, %f34, %p4;
	.loc	1 69 25                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:69:25
	mul.wide.s32 	%rd26, %r48, 4;
	add.s64 	%rd11, %rd16, %rd26;
	.loc	1 69 37                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:69:37
	mov.b32 	%r70, %f35;
	.loc	1 68 33                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:68:33
	selp.b32 	%r42, %r2, %r70, %p1;
	.loc	1 69 37                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:69:37
	mov.b32 	%r71, %f36;
	.loc	1 68 33                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:68:33
	selp.b32 	%r43, %r3, %r71, %p1;
	mov.pred 	%p31, -1;
	.loc	1 69 37                         // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:69:37
	// begin inline asm
	@%p31 st.global.v2.b32 [ %rd11 + 0 ], { %r42, %r43 };
	// end inline asm
	.loc	1 69 4                          // cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py:69:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bh/cbhs76lk4rqeqomrbq7t4svhkxrcb3s3lwuqhnn6dj3lgn3hejbl.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 104
.b8 115
.b8 55
.b8 54
.b8 108
.b8 107
.b8 52
.b8 114
.b8 113
.b8 101
.b8 113
.b8 111
.b8 109
.b8 114
.b8 98
.b8 113
.b8 55
.b8 116
.b8 52
.b8 115
.b8 118
.b8 104
.b8 107
.b8 120
.b8 114
.b8 99
.b8 98
.b8 51
.b8 115
.b8 51
.b8 108
.b8 119
.b8 117
.b8 113
.b8 104
.b8 110
.b8 110
.b8 54
.b8 100
.b8 106
.b8 51
.b8 108
.b8 103
.b8 110
.b8 51
.b8 104
.b8 101
.b8 106
.b8 98
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 104
.b8 0
	}
	.section	.debug_macinfo	{	}
