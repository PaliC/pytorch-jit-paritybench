; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_abs_add_mean_mse_loss_mul_pow_rsub_sigmoid_sub_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %6 = shl i32 %5, 2, !dbg !10
  %7 = and i32 %6, 252, !dbg !10
  %8 = zext nneg i32 %7 to i64, !dbg !11
  %9 = getelementptr float, ptr addrspace(1) %1, i64 %8, !dbg !11
  %10 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %9, i1 true) #6, !dbg !12
  %11 = extractvalue { i32, i32, i32, i32 } %10, 0, !dbg !12
  %12 = extractvalue { i32, i32, i32, i32 } %10, 1, !dbg !12
  %13 = extractvalue { i32, i32, i32, i32 } %10, 2, !dbg !12
  %14 = extractvalue { i32, i32, i32, i32 } %10, 3, !dbg !12
  %15 = getelementptr float, ptr addrspace(1) %2, i64 %8, !dbg !13
  %16 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %15, i1 true) #6, !dbg !14
  %17 = extractvalue { i32, i32, i32, i32 } %16, 0, !dbg !14
  %18 = extractvalue { i32, i32, i32, i32 } %16, 1, !dbg !14
  %19 = extractvalue { i32, i32, i32, i32 } %16, 2, !dbg !14
  %20 = extractvalue { i32, i32, i32, i32 } %16, 3, !dbg !14
  %21 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !14
  %22 = insertelement <2 x i32> %21, i32 %20, i64 1, !dbg !14
  %23 = bitcast <2 x i32> %22 to <2 x float>, !dbg !14
  %24 = bitcast i32 %13 to float, !dbg !15
  %25 = fsub float 0.000000e+00, %24, !dbg !15
  %26 = bitcast i32 %14 to float, !dbg !15
  %27 = fsub float 0.000000e+00, %26, !dbg !15
  %28 = fmul float %25, 0x3FF7154760000000, !dbg !19
  %29 = fmul float %27, 0x3FF7154760000000, !dbg !19
  %30 = insertelement <2 x i32> poison, i32 %17, i64 0, !dbg !14
  %31 = insertelement <2 x i32> %30, i32 %18, i64 1, !dbg !14
  %32 = bitcast <2 x i32> %31 to <2 x float>, !dbg !14
  %33 = bitcast i32 %11 to float, !dbg !15
  %34 = fsub float 0.000000e+00, %33, !dbg !15
  %35 = bitcast i32 %12 to float, !dbg !15
  %36 = fsub float 0.000000e+00, %35, !dbg !15
  %37 = fmul float %34, 0x3FF7154760000000, !dbg !19
  %38 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %37) #6, !dbg !19
  %39 = fmul float %36, 0x3FF7154760000000, !dbg !19
  %40 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %39) #6, !dbg !19
  %41 = fadd float %38, 1.000000e+00, !dbg !20
  %42 = fadd float %40, 1.000000e+00, !dbg !20
  %43 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %28) #6, !dbg !19
  %44 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %29) #6, !dbg !19
  %45 = fadd float %43, 1.000000e+00, !dbg !20
  %46 = fadd float %44, 1.000000e+00, !dbg !20
  %47 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %41) #6, !dbg !21
  %48 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %42) #6, !dbg !21
  %49 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %45) #6, !dbg !21
  %50 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float 1.000000e+00, float %46) #6, !dbg !21
  %51 = insertelement <2 x float> poison, float %47, i64 0, !dbg !22
  %52 = insertelement <2 x float> %51, float %48, i64 1, !dbg !22
  %53 = fsub <2 x float> %32, %52, !dbg !22
  %54 = insertelement <2 x float> poison, float %49, i64 0, !dbg !22
  %55 = insertelement <2 x float> %54, float %50, i64 1, !dbg !22
  %56 = fsub <2 x float> %23, %55, !dbg !22
  %57 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %53), !dbg !23
  %58 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %56), !dbg !23
  %59 = tail call float @llvm.nvvm.trunc.f(float 7.500000e-01) #6, !dbg !24
  %60 = fmul float %59, 2.000000e+00, !dbg !24
  %61 = fsub float 1.500000e+00, %60, !dbg !24
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i = icmp eq i32 %62, 0, !dbg !24
  %63 = tail call float @llvm.nvvm.fabs.ftz.f(float %61) #6, !dbg !24
  %64 = tail call float @llvm.nvvm.fabs.f(float %61) #6, !dbg !24
  %.08.i = select i1 %.not.i, float %64, float %63, !dbg !24
  %65 = fcmp oeq float %.08.i, 1.000000e+00, !dbg !24
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not12.i = icmp eq i32 %66, 0, !dbg !24
  %67 = extractelement <2 x float> %57, i64 0, !dbg !24
  %68 = tail call float @llvm.nvvm.fabs.ftz.f(float %67) #6, !dbg !24
  %69 = tail call float @llvm.nvvm.fabs.f(float %67) #6, !dbg !24
  %.09.i = select i1 %.not12.i, float %69, float %68, !dbg !24
  %70 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not13.i = icmp eq i32 %70, 0, !dbg !24
  %71 = fcmp olt float %.09.i, 0x3810000000000000, !dbg !24
  %72 = fmul float %.09.i, 0x4170000000000000, !dbg !24
  %73 = select i1 %.not13.i, i1 %71, i1 false, !dbg !24
  %.116.i = select i1 %73, float %72, float %.09.i, !dbg !24
  %expo.i.i.1.i = select i1 %73, float -1.510000e+02, float -1.270000e+02, !dbg !24
  %74 = bitcast float %.116.i to i32, !dbg !24
  %75 = and i32 %74, 8388607, !dbg !24
  %76 = or disjoint i32 %75, 1065353216, !dbg !24
  %77 = bitcast i32 %76 to float, !dbg !24
  %78 = lshr i32 %74, 23, !dbg !24
  %79 = uitofp nneg i32 %78 to float, !dbg !24
  %80 = fadd float %expo.i.i.1.i, %79, !dbg !24
  %81 = fcmp ogt float %77, 0x3FF6A09E60000000, !dbg !24
  %82 = fmul float %77, 5.000000e-01, !dbg !24
  %83 = fadd float %80, 1.000000e+00, !dbg !24
  %expo.i.i.2.i = select i1 %81, float %83, float %80, !dbg !24
  %m.i.i.0.i = select i1 %81, float %82, float %77, !dbg !24
  %84 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !24
  %85 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !24
  %86 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %85) #7, !dbg !24, !srcloc !25
  %87 = fmul float %84, 2.000000e+00, !dbg !24
  %88 = fmul float %86, %87, !dbg !24
  %89 = fmul float %88, %88, !dbg !24
  %90 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not14.i = icmp eq i32 %90, 0, !dbg !24
  %91 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %89, float 0x3F8995EC60000000) #6, !dbg !24
  %92 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %89, float 0x3F8995EC60000000) #6, !dbg !24
  %.020.i = select i1 %.not14.i, float %92, float %91, !dbg !24
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not15.i = icmp eq i32 %93, 0, !dbg !24
  %94 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %89, float 0x3FB55557A0000000) #6, !dbg !24
  %95 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %89, float 0x3FB55557A0000000) #6, !dbg !24
  %.021.i = select i1 %.not15.i, float %95, float %94, !dbg !24
  %96 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not16.i = icmp eq i32 %96, 0, !dbg !24
  %97 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %89) #6, !dbg !24
  %98 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %89) #6, !dbg !24
  %.022.i = select i1 %.not16.i, float %98, float %97, !dbg !24
  %99 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not17.i = icmp eq i32 %99, 0, !dbg !24
  %100 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %88) #6, !dbg !24
  %101 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %88) #6, !dbg !24
  %.024.i = select i1 %.not17.i, float %101, float %100, !dbg !24
  %102 = fsub float %84, %88, !dbg !24
  %103 = fmul float %102, 2.000000e+00, !dbg !24
  %104 = fneg float %88, !dbg !24
  %105 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not18.i = icmp eq i32 %105, 0, !dbg !24
  %106 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %104, float %84, float %103) #6, !dbg !24
  %107 = tail call float @llvm.nvvm.fma.rn.f(float %104, float %84, float %103) #6, !dbg !24
  %.025.i = select i1 %.not18.i, float %107, float %106, !dbg !24
  %108 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not19.i = icmp eq i32 %108, 0, !dbg !24
  %109 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %86, float %.025.i) #6, !dbg !24
  %110 = tail call float @llvm.nvvm.mul.rn.f(float %86, float %.025.i) #6, !dbg !24
  %.026.i = select i1 %.not19.i, float %110, float %109, !dbg !24
  %111 = fadd float %88, %.024.i, !dbg !24
  %112 = fsub float %88, %111, !dbg !24
  %113 = fadd float %.024.i, %112, !dbg !24
  %114 = fadd float %.026.i, %113, !dbg !24
  %115 = fadd float %111, %114, !dbg !24
  %116 = fsub float %111, %115, !dbg !24
  %117 = fadd float %114, %116, !dbg !24
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not20.i = icmp eq i32 %118, 0, !dbg !24
  %119 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !24
  %120 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #6, !dbg !24
  %.019.i = select i1 %.not20.i, float %120, float %119, !dbg !24
  %121 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not21.i = icmp eq i32 %121, 0, !dbg !24
  %122 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %123 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %.018.i = select i1 %.not21.i, float %123, float %122, !dbg !24
  %124 = fadd float %.019.i, %115, !dbg !24
  %125 = fsub float %.019.i, %124, !dbg !24
  %126 = fadd float %115, %125, !dbg !24
  %127 = fadd float %117, %126, !dbg !24
  %128 = fadd float %.018.i, %127, !dbg !24
  %129 = fadd float %124, %128, !dbg !24
  %130 = fsub float %124, %129, !dbg !24
  %131 = fadd float %128, %130, !dbg !24
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not22.i = icmp eq i32 %132, 0, !dbg !24
  %133 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.500000e+00) #6, !dbg !24
  %134 = tail call float @llvm.nvvm.fabs.f(float 1.500000e+00) #6, !dbg !24
  %.027.i = select i1 %.not22.i, float %134, float %133, !dbg !24
  %135 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !24
  %.013.i = select i1 %135, float 0x3F28000000000000, float 1.500000e+00, !dbg !24
  %136 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not23.i = icmp eq i32 %136, 0, !dbg !24
  %137 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i, float %129) #6, !dbg !24
  %138 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i, float %129) #6, !dbg !24
  %.028.i = select i1 %.not23.i, float %138, float %137, !dbg !24
  %139 = fneg float %.028.i, !dbg !24
  %140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not24.i = icmp eq i32 %140, 0, !dbg !24
  %141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %129, float %139) #6, !dbg !24
  %142 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %129, float %139) #6, !dbg !24
  %.029.i = select i1 %.not24.i, float %142, float %141, !dbg !24
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not25.i = icmp eq i32 %143, 0, !dbg !24
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i, float %131, float %.029.i) #6, !dbg !24
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i, float %131, float %.029.i) #6, !dbg !24
  %.030.i = select i1 %.not25.i, float %145, float %144, !dbg !24
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not26.i = icmp eq i32 %146, 0, !dbg !24
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %129, float %.030.i) #6, !dbg !24
  %148 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %129, float %.030.i) #6, !dbg !24
  %.031.i = select i1 %.not26.i, float %148, float %147, !dbg !24
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not27.i = icmp eq i32 %149, 0, !dbg !24
  %150 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #6, !dbg !24
  %151 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #6, !dbg !24
  %.032.i = select i1 %.not27.i, float %151, float %150, !dbg !24
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %154 = bitcast float %.032.i to i32, !dbg !24
  %155 = icmp eq i32 %154, 1118925336, !dbg !24
  %prod.i.145.0.i = select i1 %155, float 0x40562E42E0000000, float %.032.i, !dbg !24
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not30.i = icmp eq i32 %156, 0, !dbg !24
  %157 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !24
  %158 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #6, !dbg !24
  %.017.i = select i1 %.not30.i, float %158, float %157, !dbg !24
  %159 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #6, !dbg !24
  %160 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not31.i = icmp eq i32 %160, 0, !dbg !24
  %161 = tail call float @llvm.nvvm.fabs.ftz.f(float %159) #6, !dbg !24
  %162 = tail call float @llvm.nvvm.fabs.f(float %159) #6, !dbg !24
  %.023.i = select i1 %.not31.i, float %162, float %161, !dbg !24
  %163 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !24
  %164 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %159), !dbg !24
  %j.i.i.0.i = select i1 %163, float %164, float %159, !dbg !24
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not32.i = icmp eq i32 %165, 0, !dbg !24
  %166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !24
  %167 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #6, !dbg !24
  %.035.i = select i1 %.not32.i, float %167, float %166, !dbg !24
  %168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not33.i = icmp eq i32 %168, 0, !dbg !24
  %169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !24
  %170 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #6, !dbg !24
  %.036.i = select i1 %.not33.i, float %170, float %169, !dbg !24
  %171 = fmul float %.036.i, 0x3FF7154760000000, !dbg !24
  %172 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !24
  %173 = bitcast float %172 to i32, !dbg !24
  %174 = shl i32 %173, 23, !dbg !24
  %175 = bitcast i32 %174 to float, !dbg !24
  %176 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %171) #6, !dbg !24
  %177 = fmul float %176, %175, !dbg !24
  %178 = fcmp une float %177, 0x7FF0000000000000, !dbg !24
  br i1 %178, label %__internal_fmad.exit.i.i, label %__internal_accurate_powf.exit.i, !dbg !24

__internal_fmad.exit.i.i:                         ; preds = %4
  %.not29.i = icmp eq i32 %153, 0, !dbg !24
  %.not28.i = icmp eq i32 %152, 0, !dbg !24
  %179 = fneg float %.032.i, !dbg !24
  %180 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %179) #6, !dbg !24
  %181 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %179) #6, !dbg !24
  %.033.i = select i1 %.not28.i, float %180, float %181, !dbg !24
  %182 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #6, !dbg !24
  %183 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #6, !dbg !24
  %.034.i = select i1 %.not29.i, float %182, float %183, !dbg !24
  %184 = fadd float %.034.i, 0x3EE0000000000000, !dbg !24
  %prod.i.044.0.i = select i1 %155, float %184, float %.034.i, !dbg !24
  %185 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not34.i = icmp eq i32 %185, 0, !dbg !24
  %186 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %177, float %prod.i.044.0.i, float %177) #6, !dbg !24
  %187 = tail call float @llvm.nvvm.fma.rn.f(float %177, float %prod.i.044.0.i, float %177) #6, !dbg !24
  %.014.i = select i1 %.not34.i, float %187, float %186, !dbg !24
  br label %__internal_accurate_powf.exit.i, !dbg !24

__internal_accurate_powf.exit.i:                  ; preds = %__internal_fmad.exit.i.i, %4
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %4 ], !dbg !24
  %188 = extractelement <2 x float> %53, i64 0, !dbg !24
  %189 = fcmp oeq float %188, 0.000000e+00, !dbg !24
  %190 = fadd float %67, %67, !dbg !24
  %191 = select i1 %65, float %190, float 0.000000e+00, !dbg !24
  %.212.i = select i1 %189, float %191, float %t.i.0.i, !dbg !24
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not35.i = icmp eq i32 %192, 0, !dbg !24
  %.01.i = select i1 %.not35.i, float %69, float %68, !dbg !24
  %193 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not36.i = icmp eq i32 %193, 0, !dbg !24
  %.02.i = select i1 %.not36.i, float %134, float %133, !dbg !24
  %194 = fadd float %.01.i, %.02.i, !dbg !24
  %195 = bitcast float %194 to i32, !dbg !24
  %196 = icmp sgt i32 %195, 2139095039, !dbg !24
  br i1 %196, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !24

__nv_isnanf.exit.i.i:                             ; preds = %__internal_accurate_powf.exit.i
  %197 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not37.i = icmp eq i32 %197, 0, !dbg !24
  %.06.i = select i1 %.not37.i, float %69, float %68, !dbg !24
  %198 = fcmp uno float %.06.i, 0.000000e+00, !dbg !24
  br i1 %198, label %201, label %__nv_isnanf.exit11.i.i, !dbg !24

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not38.i = icmp eq i32 %199, 0, !dbg !24
  %.07.i = select i1 %.not38.i, float %134, float %133, !dbg !24
  %200 = fcmp uno float %.07.i, 0.000000e+00, !dbg !24
  br i1 %200, label %201, label %__nv_isinff.exit8.i.i, !dbg !24

201:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %202 = fadd float %67, 1.500000e+00, !dbg !24
  br label %__nv_powf.exit, !dbg !24

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %203 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not39.i = icmp eq i32 %203, 0, !dbg !24
  %.05.i = select i1 %.not39.i, float %134, float %133, !dbg !24
  %204 = fcmp oeq float %.05.i, 0x7FF0000000000000, !dbg !24
  %205 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not41.i = icmp eq i32 %205, 0, !dbg !24
  %.04.i = select i1 %.not41.i, float %69, float %68, !dbg !24
  br i1 %204, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !24

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %206 = fcmp ogt float %.04.i, 1.000000e+00, !dbg !24
  %207 = select i1 %206, float 0x7FF0000000000000, float 0.000000e+00, !dbg !24
  br label %__nv_powf.exit, !dbg !24

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %208 = fcmp oeq float %.04.i, 0x7FF0000000000000, !dbg !24
  br i1 %208, label %209, label %__nv_powf.exit, !dbg !24

209:                                              ; preds = %__nv_isinff.exit.i.i
  br label %__nv_powf.exit, !dbg !24

__nv_powf.exit:                                   ; preds = %__internal_accurate_powf.exit.i, %201, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %209
  %.3.i = phi float [ %.212.i, %__internal_accurate_powf.exit.i ], [ %202, %201 ], [ %207, %__nv_fabsf.exit5.i.i ], [ 0x7FF0000000000000, %209 ], [ %.212.i, %__nv_isinff.exit.i.i ], !dbg !24
  %210 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i1 = icmp eq i32 %210, 0, !dbg !24
  %.08.i2 = select i1 %.not.i1, float %64, float %63, !dbg !24
  %211 = fcmp oeq float %.08.i2, 1.000000e+00, !dbg !24
  %212 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not12.i3 = icmp eq i32 %212, 0, !dbg !24
  %213 = extractelement <2 x float> %57, i64 1, !dbg !24
  %214 = tail call float @llvm.nvvm.fabs.ftz.f(float %213) #6, !dbg !24
  %215 = tail call float @llvm.nvvm.fabs.f(float %213) #6, !dbg !24
  %.09.i4 = select i1 %.not12.i3, float %215, float %214, !dbg !24
  %216 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not13.i5 = icmp eq i32 %216, 0, !dbg !24
  %217 = fcmp olt float %.09.i4, 0x3810000000000000, !dbg !24
  %218 = fmul float %.09.i4, 0x4170000000000000, !dbg !24
  %219 = select i1 %.not13.i5, i1 %217, i1 false, !dbg !24
  %.116.i8 = select i1 %219, float %218, float %.09.i4, !dbg !24
  %expo.i.i.1.i9 = select i1 %219, float -1.510000e+02, float -1.270000e+02, !dbg !24
  %220 = bitcast float %.116.i8 to i32, !dbg !24
  %221 = and i32 %220, 8388607, !dbg !24
  %222 = or disjoint i32 %221, 1065353216, !dbg !24
  %223 = bitcast i32 %222 to float, !dbg !24
  %224 = lshr i32 %220, 23, !dbg !24
  %225 = uitofp nneg i32 %224 to float, !dbg !24
  %226 = fadd float %expo.i.i.1.i9, %225, !dbg !24
  %227 = fcmp ogt float %223, 0x3FF6A09E60000000, !dbg !24
  %228 = fmul float %223, 5.000000e-01, !dbg !24
  %229 = fadd float %226, 1.000000e+00, !dbg !24
  %expo.i.i.2.i10 = select i1 %227, float %229, float %226, !dbg !24
  %m.i.i.0.i11 = select i1 %227, float %228, float %223, !dbg !24
  %230 = fadd float %m.i.i.0.i11, -1.000000e+00, !dbg !24
  %231 = fadd float %m.i.i.0.i11, 1.000000e+00, !dbg !24
  %232 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %231) #7, !dbg !24, !srcloc !25
  %233 = fmul float %230, 2.000000e+00, !dbg !24
  %234 = fmul float %232, %233, !dbg !24
  %235 = fmul float %234, %234, !dbg !24
  %236 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not14.i12 = icmp eq i32 %236, 0, !dbg !24
  %237 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %235, float 0x3F8995EC60000000) #6, !dbg !24
  %238 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %235, float 0x3F8995EC60000000) #6, !dbg !24
  %.020.i13 = select i1 %.not14.i12, float %238, float %237, !dbg !24
  %239 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not15.i14 = icmp eq i32 %239, 0, !dbg !24
  %240 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i13, float %235, float 0x3FB55557A0000000) #6, !dbg !24
  %241 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i13, float %235, float 0x3FB55557A0000000) #6, !dbg !24
  %.021.i15 = select i1 %.not15.i14, float %241, float %240, !dbg !24
  %242 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not16.i16 = icmp eq i32 %242, 0, !dbg !24
  %243 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i15, float %235) #6, !dbg !24
  %244 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i15, float %235) #6, !dbg !24
  %.022.i17 = select i1 %.not16.i16, float %244, float %243, !dbg !24
  %245 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not17.i18 = icmp eq i32 %245, 0, !dbg !24
  %246 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i17, float %234) #6, !dbg !24
  %247 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i17, float %234) #6, !dbg !24
  %.024.i19 = select i1 %.not17.i18, float %247, float %246, !dbg !24
  %248 = fsub float %230, %234, !dbg !24
  %249 = fmul float %248, 2.000000e+00, !dbg !24
  %250 = fneg float %234, !dbg !24
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not18.i20 = icmp eq i32 %251, 0, !dbg !24
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %250, float %230, float %249) #6, !dbg !24
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %250, float %230, float %249) #6, !dbg !24
  %.025.i21 = select i1 %.not18.i20, float %253, float %252, !dbg !24
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not19.i22 = icmp eq i32 %254, 0, !dbg !24
  %255 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %232, float %.025.i21) #6, !dbg !24
  %256 = tail call float @llvm.nvvm.mul.rn.f(float %232, float %.025.i21) #6, !dbg !24
  %.026.i23 = select i1 %.not19.i22, float %256, float %255, !dbg !24
  %257 = fadd float %234, %.024.i19, !dbg !24
  %258 = fsub float %234, %257, !dbg !24
  %259 = fadd float %.024.i19, %258, !dbg !24
  %260 = fadd float %.026.i23, %259, !dbg !24
  %261 = fadd float %257, %260, !dbg !24
  %262 = fsub float %257, %261, !dbg !24
  %263 = fadd float %260, %262, !dbg !24
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not20.i24 = icmp eq i32 %264, 0, !dbg !24
  %265 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #6, !dbg !24
  %266 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3FE62E4000000000) #6, !dbg !24
  %.019.i25 = select i1 %.not20.i24, float %266, float %265, !dbg !24
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not21.i26 = icmp eq i32 %267, 0, !dbg !24
  %268 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %269 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i10, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %.018.i27 = select i1 %.not21.i26, float %269, float %268, !dbg !24
  %270 = fadd float %.019.i25, %261, !dbg !24
  %271 = fsub float %.019.i25, %270, !dbg !24
  %272 = fadd float %261, %271, !dbg !24
  %273 = fadd float %263, %272, !dbg !24
  %274 = fadd float %.018.i27, %273, !dbg !24
  %275 = fadd float %270, %274, !dbg !24
  %276 = fsub float %270, %275, !dbg !24
  %277 = fadd float %274, %276, !dbg !24
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not22.i28 = icmp eq i32 %278, 0, !dbg !24
  %.027.i29 = select i1 %.not22.i28, float %134, float %133, !dbg !24
  %279 = fcmp ogt float %.027.i29, 0x46FED09BE0000000, !dbg !24
  %.013.i30 = select i1 %279, float 0x3F28000000000000, float 1.500000e+00, !dbg !24
  %280 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not23.i31 = icmp eq i32 %280, 0, !dbg !24
  %281 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i30, float %275) #6, !dbg !24
  %282 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i30, float %275) #6, !dbg !24
  %.028.i32 = select i1 %.not23.i31, float %282, float %281, !dbg !24
  %283 = fneg float %.028.i32, !dbg !24
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not24.i33 = icmp eq i32 %284, 0, !dbg !24
  %285 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %275, float %283) #6, !dbg !24
  %286 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %275, float %283) #6, !dbg !24
  %.029.i34 = select i1 %.not24.i33, float %286, float %285, !dbg !24
  %287 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not25.i35 = icmp eq i32 %287, 0, !dbg !24
  %288 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i30, float %277, float %.029.i34) #6, !dbg !24
  %289 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i30, float %277, float %.029.i34) #6, !dbg !24
  %.030.i36 = select i1 %.not25.i35, float %289, float %288, !dbg !24
  %290 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not26.i37 = icmp eq i32 %290, 0, !dbg !24
  %291 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %275, float %.030.i36) #6, !dbg !24
  %292 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %275, float %.030.i36) #6, !dbg !24
  %.031.i38 = select i1 %.not26.i37, float %292, float %291, !dbg !24
  %293 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not27.i39 = icmp eq i32 %293, 0, !dbg !24
  %294 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %.031.i38) #6, !dbg !24
  %295 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %.031.i38) #6, !dbg !24
  %.032.i40 = select i1 %.not27.i39, float %295, float %294, !dbg !24
  %296 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %298 = bitcast float %.032.i40 to i32, !dbg !24
  %299 = icmp eq i32 %298, 1118925336, !dbg !24
  %prod.i.145.0.i46 = select i1 %299, float 0x40562E42E0000000, float %.032.i40, !dbg !24
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not30.i47 = icmp eq i32 %300, 0, !dbg !24
  %301 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #6, !dbg !24
  %302 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i46, float 0x3FF7154760000000) #6, !dbg !24
  %.017.i48 = select i1 %.not30.i47, float %302, float %301, !dbg !24
  %303 = tail call float @llvm.nvvm.trunc.f(float %.017.i48) #6, !dbg !24
  %304 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not31.i49 = icmp eq i32 %304, 0, !dbg !24
  %305 = tail call float @llvm.nvvm.fabs.ftz.f(float %303) #6, !dbg !24
  %306 = tail call float @llvm.nvvm.fabs.f(float %303) #6, !dbg !24
  %.023.i50 = select i1 %.not31.i49, float %306, float %305, !dbg !24
  %307 = fcmp ogt float %.023.i50, 1.260000e+02, !dbg !24
  %308 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %303), !dbg !24
  %j.i.i.0.i51 = select i1 %307, float %308, float %303, !dbg !24
  %309 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not32.i52 = icmp eq i32 %309, 0, !dbg !24
  %310 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #6, !dbg !24
  %311 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0xBFE62E4300000000, float %prod.i.145.0.i46) #6, !dbg !24
  %.035.i53 = select i1 %.not32.i52, float %311, float %310, !dbg !24
  %312 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not33.i54 = icmp eq i32 %312, 0, !dbg !24
  %313 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #6, !dbg !24
  %314 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i51, float 0x3E205C6100000000, float %.035.i53) #6, !dbg !24
  %.036.i55 = select i1 %.not33.i54, float %314, float %313, !dbg !24
  %315 = fmul float %.036.i55, 0x3FF7154760000000, !dbg !24
  %316 = fadd float %j.i.i.0.i51, 0x4168000FE0000000, !dbg !24
  %317 = bitcast float %316 to i32, !dbg !24
  %318 = shl i32 %317, 23, !dbg !24
  %319 = bitcast i32 %318 to float, !dbg !24
  %320 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %315) #6, !dbg !24
  %321 = fmul float %320, %319, !dbg !24
  %322 = fcmp une float %321, 0x7FF0000000000000, !dbg !24
  br i1 %322, label %__internal_fmad.exit.i.i81, label %__internal_accurate_powf.exit.i56, !dbg !24

__internal_fmad.exit.i.i81:                       ; preds = %__nv_powf.exit
  %.not29.i43 = icmp eq i32 %297, 0, !dbg !24
  %.not28.i41 = icmp eq i32 %296, 0, !dbg !24
  %323 = fneg float %.032.i40, !dbg !24
  %324 = tail call float @llvm.nvvm.add.rn.f(float %.028.i32, float %323) #6, !dbg !24
  %325 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i32, float %323) #6, !dbg !24
  %.033.i42 = select i1 %.not28.i41, float %324, float %325, !dbg !24
  %326 = tail call float @llvm.nvvm.add.rn.f(float %.033.i42, float %.031.i38) #6, !dbg !24
  %327 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i42, float %.031.i38) #6, !dbg !24
  %.034.i44 = select i1 %.not29.i43, float %326, float %327, !dbg !24
  %328 = fadd float %.034.i44, 0x3EE0000000000000, !dbg !24
  %prod.i.044.0.i45 = select i1 %299, float %328, float %.034.i44, !dbg !24
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not34.i82 = icmp eq i32 %329, 0, !dbg !24
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %321, float %prod.i.044.0.i45, float %321) #6, !dbg !24
  %331 = tail call float @llvm.nvvm.fma.rn.f(float %321, float %prod.i.044.0.i45, float %321) #6, !dbg !24
  %.014.i83 = select i1 %.not34.i82, float %331, float %330, !dbg !24
  br label %__internal_accurate_powf.exit.i56, !dbg !24

__internal_accurate_powf.exit.i56:                ; preds = %__internal_fmad.exit.i.i81, %__nv_powf.exit
  %t.i.0.i57 = phi float [ %.014.i83, %__internal_fmad.exit.i.i81 ], [ 0x7FF0000000000000, %__nv_powf.exit ], !dbg !24
  %332 = extractelement <2 x float> %53, i64 1, !dbg !24
  %333 = fcmp oeq float %332, 0.000000e+00, !dbg !24
  %334 = fadd float %213, %213, !dbg !24
  %335 = select i1 %211, float %334, float 0.000000e+00, !dbg !24
  %.212.i59 = select i1 %333, float %335, float %t.i.0.i57, !dbg !24
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not35.i60 = icmp eq i32 %336, 0, !dbg !24
  %.01.i61 = select i1 %.not35.i60, float %215, float %214, !dbg !24
  %337 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not36.i62 = icmp eq i32 %337, 0, !dbg !24
  %.02.i63 = select i1 %.not36.i62, float %134, float %133, !dbg !24
  %338 = fadd float %.01.i61, %.02.i63, !dbg !24
  %339 = bitcast float %338 to i32, !dbg !24
  %340 = icmp sgt i32 %339, 2139095039, !dbg !24
  br i1 %340, label %__nv_isnanf.exit.i.i66, label %__nv_powf.exit84, !dbg !24

__nv_isnanf.exit.i.i66:                           ; preds = %__internal_accurate_powf.exit.i56
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not37.i67 = icmp eq i32 %341, 0, !dbg !24
  %.06.i68 = select i1 %.not37.i67, float %215, float %214, !dbg !24
  %342 = fcmp uno float %.06.i68, 0.000000e+00, !dbg !24
  br i1 %342, label %345, label %__nv_isnanf.exit11.i.i69, !dbg !24

__nv_isnanf.exit11.i.i69:                         ; preds = %__nv_isnanf.exit.i.i66
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not38.i70 = icmp eq i32 %343, 0, !dbg !24
  %.07.i71 = select i1 %.not38.i70, float %134, float %133, !dbg !24
  %344 = fcmp uno float %.07.i71, 0.000000e+00, !dbg !24
  br i1 %344, label %345, label %__nv_isinff.exit8.i.i72, !dbg !24

345:                                              ; preds = %__nv_isnanf.exit11.i.i69, %__nv_isnanf.exit.i.i66
  %346 = fadd float %213, 1.500000e+00, !dbg !24
  br label %__nv_powf.exit84, !dbg !24

__nv_isinff.exit8.i.i72:                          ; preds = %__nv_isnanf.exit11.i.i69
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not39.i73 = icmp eq i32 %347, 0, !dbg !24
  %.05.i74 = select i1 %.not39.i73, float %134, float %133, !dbg !24
  %348 = fcmp oeq float %.05.i74, 0x7FF0000000000000, !dbg !24
  %349 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not41.i79 = icmp eq i32 %349, 0, !dbg !24
  %.04.i80 = select i1 %.not41.i79, float %215, float %214, !dbg !24
  br i1 %348, label %__nv_fabsf.exit5.i.i78, label %__nv_isinff.exit.i.i75, !dbg !24

__nv_fabsf.exit5.i.i78:                           ; preds = %__nv_isinff.exit8.i.i72
  %350 = fcmp ogt float %.04.i80, 1.000000e+00, !dbg !24
  %351 = select i1 %350, float 0x7FF0000000000000, float 0.000000e+00, !dbg !24
  br label %__nv_powf.exit84, !dbg !24

__nv_isinff.exit.i.i75:                           ; preds = %__nv_isinff.exit8.i.i72
  %352 = fcmp oeq float %.04.i80, 0x7FF0000000000000, !dbg !24
  br i1 %352, label %353, label %__nv_powf.exit84, !dbg !24

353:                                              ; preds = %__nv_isinff.exit.i.i75
  br label %__nv_powf.exit84, !dbg !24

__nv_powf.exit84:                                 ; preds = %__internal_accurate_powf.exit.i56, %345, %__nv_fabsf.exit5.i.i78, %__nv_isinff.exit.i.i75, %353
  %.3.i64 = phi float [ %.212.i59, %__internal_accurate_powf.exit.i56 ], [ %346, %345 ], [ %351, %__nv_fabsf.exit5.i.i78 ], [ 0x7FF0000000000000, %353 ], [ %.212.i59, %__nv_isinff.exit.i.i75 ], !dbg !24
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i85 = icmp eq i32 %354, 0, !dbg !24
  %.08.i86 = select i1 %.not.i85, float %64, float %63, !dbg !24
  %355 = fcmp oeq float %.08.i86, 1.000000e+00, !dbg !24
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not12.i87 = icmp eq i32 %356, 0, !dbg !24
  %357 = extractelement <2 x float> %58, i64 0, !dbg !24
  %358 = tail call float @llvm.nvvm.fabs.ftz.f(float %357) #6, !dbg !24
  %359 = tail call float @llvm.nvvm.fabs.f(float %357) #6, !dbg !24
  %.09.i88 = select i1 %.not12.i87, float %359, float %358, !dbg !24
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not13.i89 = icmp eq i32 %360, 0, !dbg !24
  %361 = fcmp olt float %.09.i88, 0x3810000000000000, !dbg !24
  %362 = fmul float %.09.i88, 0x4170000000000000, !dbg !24
  %363 = select i1 %.not13.i89, i1 %361, i1 false, !dbg !24
  %.116.i92 = select i1 %363, float %362, float %.09.i88, !dbg !24
  %expo.i.i.1.i93 = select i1 %363, float -1.510000e+02, float -1.270000e+02, !dbg !24
  %364 = bitcast float %.116.i92 to i32, !dbg !24
  %365 = and i32 %364, 8388607, !dbg !24
  %366 = or disjoint i32 %365, 1065353216, !dbg !24
  %367 = bitcast i32 %366 to float, !dbg !24
  %368 = lshr i32 %364, 23, !dbg !24
  %369 = uitofp nneg i32 %368 to float, !dbg !24
  %370 = fadd float %expo.i.i.1.i93, %369, !dbg !24
  %371 = fcmp ogt float %367, 0x3FF6A09E60000000, !dbg !24
  %372 = fmul float %367, 5.000000e-01, !dbg !24
  %373 = fadd float %370, 1.000000e+00, !dbg !24
  %expo.i.i.2.i94 = select i1 %371, float %373, float %370, !dbg !24
  %m.i.i.0.i95 = select i1 %371, float %372, float %367, !dbg !24
  %374 = fadd float %m.i.i.0.i95, -1.000000e+00, !dbg !24
  %375 = fadd float %m.i.i.0.i95, 1.000000e+00, !dbg !24
  %376 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %375) #7, !dbg !24, !srcloc !25
  %377 = fmul float %374, 2.000000e+00, !dbg !24
  %378 = fmul float %376, %377, !dbg !24
  %379 = fmul float %378, %378, !dbg !24
  %380 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not14.i96 = icmp eq i32 %380, 0, !dbg !24
  %381 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %379, float 0x3F8995EC60000000) #6, !dbg !24
  %382 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %379, float 0x3F8995EC60000000) #6, !dbg !24
  %.020.i97 = select i1 %.not14.i96, float %382, float %381, !dbg !24
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not15.i98 = icmp eq i32 %383, 0, !dbg !24
  %384 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i97, float %379, float 0x3FB55557A0000000) #6, !dbg !24
  %385 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i97, float %379, float 0x3FB55557A0000000) #6, !dbg !24
  %.021.i99 = select i1 %.not15.i98, float %385, float %384, !dbg !24
  %386 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not16.i100 = icmp eq i32 %386, 0, !dbg !24
  %387 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i99, float %379) #6, !dbg !24
  %388 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i99, float %379) #6, !dbg !24
  %.022.i101 = select i1 %.not16.i100, float %388, float %387, !dbg !24
  %389 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not17.i102 = icmp eq i32 %389, 0, !dbg !24
  %390 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i101, float %378) #6, !dbg !24
  %391 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i101, float %378) #6, !dbg !24
  %.024.i103 = select i1 %.not17.i102, float %391, float %390, !dbg !24
  %392 = fsub float %374, %378, !dbg !24
  %393 = fmul float %392, 2.000000e+00, !dbg !24
  %394 = fneg float %378, !dbg !24
  %395 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not18.i104 = icmp eq i32 %395, 0, !dbg !24
  %396 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %394, float %374, float %393) #6, !dbg !24
  %397 = tail call float @llvm.nvvm.fma.rn.f(float %394, float %374, float %393) #6, !dbg !24
  %.025.i105 = select i1 %.not18.i104, float %397, float %396, !dbg !24
  %398 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not19.i106 = icmp eq i32 %398, 0, !dbg !24
  %399 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %376, float %.025.i105) #6, !dbg !24
  %400 = tail call float @llvm.nvvm.mul.rn.f(float %376, float %.025.i105) #6, !dbg !24
  %.026.i107 = select i1 %.not19.i106, float %400, float %399, !dbg !24
  %401 = fadd float %378, %.024.i103, !dbg !24
  %402 = fsub float %378, %401, !dbg !24
  %403 = fadd float %.024.i103, %402, !dbg !24
  %404 = fadd float %.026.i107, %403, !dbg !24
  %405 = fadd float %401, %404, !dbg !24
  %406 = fsub float %401, %405, !dbg !24
  %407 = fadd float %404, %406, !dbg !24
  %408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not20.i108 = icmp eq i32 %408, 0, !dbg !24
  %409 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i94, float 0x3FE62E4000000000) #6, !dbg !24
  %410 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i94, float 0x3FE62E4000000000) #6, !dbg !24
  %.019.i109 = select i1 %.not20.i108, float %410, float %409, !dbg !24
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not21.i110 = icmp eq i32 %411, 0, !dbg !24
  %412 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i94, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %413 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i94, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %.018.i111 = select i1 %.not21.i110, float %413, float %412, !dbg !24
  %414 = fadd float %.019.i109, %405, !dbg !24
  %415 = fsub float %.019.i109, %414, !dbg !24
  %416 = fadd float %405, %415, !dbg !24
  %417 = fadd float %407, %416, !dbg !24
  %418 = fadd float %.018.i111, %417, !dbg !24
  %419 = fadd float %414, %418, !dbg !24
  %420 = fsub float %414, %419, !dbg !24
  %421 = fadd float %418, %420, !dbg !24
  %422 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not22.i112 = icmp eq i32 %422, 0, !dbg !24
  %.027.i113 = select i1 %.not22.i112, float %134, float %133, !dbg !24
  %423 = fcmp ogt float %.027.i113, 0x46FED09BE0000000, !dbg !24
  %.013.i114 = select i1 %423, float 0x3F28000000000000, float 1.500000e+00, !dbg !24
  %424 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not23.i115 = icmp eq i32 %424, 0, !dbg !24
  %425 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i114, float %419) #6, !dbg !24
  %426 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i114, float %419) #6, !dbg !24
  %.028.i116 = select i1 %.not23.i115, float %426, float %425, !dbg !24
  %427 = fneg float %.028.i116, !dbg !24
  %428 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not24.i117 = icmp eq i32 %428, 0, !dbg !24
  %429 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i114, float %419, float %427) #6, !dbg !24
  %430 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i114, float %419, float %427) #6, !dbg !24
  %.029.i118 = select i1 %.not24.i117, float %430, float %429, !dbg !24
  %431 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not25.i119 = icmp eq i32 %431, 0, !dbg !24
  %432 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i114, float %421, float %.029.i118) #6, !dbg !24
  %433 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i114, float %421, float %.029.i118) #6, !dbg !24
  %.030.i120 = select i1 %.not25.i119, float %433, float %432, !dbg !24
  %434 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not26.i121 = icmp eq i32 %434, 0, !dbg !24
  %435 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %419, float %.030.i120) #6, !dbg !24
  %436 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %419, float %.030.i120) #6, !dbg !24
  %.031.i122 = select i1 %.not26.i121, float %436, float %435, !dbg !24
  %437 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not27.i123 = icmp eq i32 %437, 0, !dbg !24
  %438 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i116, float %.031.i122) #6, !dbg !24
  %439 = tail call float @llvm.nvvm.add.rn.f(float %.028.i116, float %.031.i122) #6, !dbg !24
  %.032.i124 = select i1 %.not27.i123, float %439, float %438, !dbg !24
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %442 = bitcast float %.032.i124 to i32, !dbg !24
  %443 = icmp eq i32 %442, 1118925336, !dbg !24
  %prod.i.145.0.i130 = select i1 %443, float 0x40562E42E0000000, float %.032.i124, !dbg !24
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not30.i131 = icmp eq i32 %444, 0, !dbg !24
  %445 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i130, float 0x3FF7154760000000) #6, !dbg !24
  %446 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i130, float 0x3FF7154760000000) #6, !dbg !24
  %.017.i132 = select i1 %.not30.i131, float %446, float %445, !dbg !24
  %447 = tail call float @llvm.nvvm.trunc.f(float %.017.i132) #6, !dbg !24
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not31.i133 = icmp eq i32 %448, 0, !dbg !24
  %449 = tail call float @llvm.nvvm.fabs.ftz.f(float %447) #6, !dbg !24
  %450 = tail call float @llvm.nvvm.fabs.f(float %447) #6, !dbg !24
  %.023.i134 = select i1 %.not31.i133, float %450, float %449, !dbg !24
  %451 = fcmp ogt float %.023.i134, 1.260000e+02, !dbg !24
  %452 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %447), !dbg !24
  %j.i.i.0.i135 = select i1 %451, float %452, float %447, !dbg !24
  %453 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not32.i136 = icmp eq i32 %453, 0, !dbg !24
  %454 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i135, float 0xBFE62E4300000000, float %prod.i.145.0.i130) #6, !dbg !24
  %455 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i135, float 0xBFE62E4300000000, float %prod.i.145.0.i130) #6, !dbg !24
  %.035.i137 = select i1 %.not32.i136, float %455, float %454, !dbg !24
  %456 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not33.i138 = icmp eq i32 %456, 0, !dbg !24
  %457 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i135, float 0x3E205C6100000000, float %.035.i137) #6, !dbg !24
  %458 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i135, float 0x3E205C6100000000, float %.035.i137) #6, !dbg !24
  %.036.i139 = select i1 %.not33.i138, float %458, float %457, !dbg !24
  %459 = fmul float %.036.i139, 0x3FF7154760000000, !dbg !24
  %460 = fadd float %j.i.i.0.i135, 0x4168000FE0000000, !dbg !24
  %461 = bitcast float %460 to i32, !dbg !24
  %462 = shl i32 %461, 23, !dbg !24
  %463 = bitcast i32 %462 to float, !dbg !24
  %464 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %459) #6, !dbg !24
  %465 = fmul float %464, %463, !dbg !24
  %466 = fcmp une float %465, 0x7FF0000000000000, !dbg !24
  br i1 %466, label %__internal_fmad.exit.i.i165, label %__internal_accurate_powf.exit.i140, !dbg !24

__internal_fmad.exit.i.i165:                      ; preds = %__nv_powf.exit84
  %.not29.i127 = icmp eq i32 %441, 0, !dbg !24
  %.not28.i125 = icmp eq i32 %440, 0, !dbg !24
  %467 = fneg float %.032.i124, !dbg !24
  %468 = tail call float @llvm.nvvm.add.rn.f(float %.028.i116, float %467) #6, !dbg !24
  %469 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i116, float %467) #6, !dbg !24
  %.033.i126 = select i1 %.not28.i125, float %468, float %469, !dbg !24
  %470 = tail call float @llvm.nvvm.add.rn.f(float %.033.i126, float %.031.i122) #6, !dbg !24
  %471 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i126, float %.031.i122) #6, !dbg !24
  %.034.i128 = select i1 %.not29.i127, float %470, float %471, !dbg !24
  %472 = fadd float %.034.i128, 0x3EE0000000000000, !dbg !24
  %prod.i.044.0.i129 = select i1 %443, float %472, float %.034.i128, !dbg !24
  %473 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not34.i166 = icmp eq i32 %473, 0, !dbg !24
  %474 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %465, float %prod.i.044.0.i129, float %465) #6, !dbg !24
  %475 = tail call float @llvm.nvvm.fma.rn.f(float %465, float %prod.i.044.0.i129, float %465) #6, !dbg !24
  %.014.i167 = select i1 %.not34.i166, float %475, float %474, !dbg !24
  br label %__internal_accurate_powf.exit.i140, !dbg !24

__internal_accurate_powf.exit.i140:               ; preds = %__internal_fmad.exit.i.i165, %__nv_powf.exit84
  %t.i.0.i141 = phi float [ %.014.i167, %__internal_fmad.exit.i.i165 ], [ 0x7FF0000000000000, %__nv_powf.exit84 ], !dbg !24
  %476 = extractelement <2 x float> %56, i64 0, !dbg !24
  %477 = fcmp oeq float %476, 0.000000e+00, !dbg !24
  %478 = fadd float %357, %357, !dbg !24
  %479 = select i1 %355, float %478, float 0.000000e+00, !dbg !24
  %.212.i143 = select i1 %477, float %479, float %t.i.0.i141, !dbg !24
  %480 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not35.i144 = icmp eq i32 %480, 0, !dbg !24
  %.01.i145 = select i1 %.not35.i144, float %359, float %358, !dbg !24
  %481 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not36.i146 = icmp eq i32 %481, 0, !dbg !24
  %.02.i147 = select i1 %.not36.i146, float %134, float %133, !dbg !24
  %482 = fadd float %.01.i145, %.02.i147, !dbg !24
  %483 = bitcast float %482 to i32, !dbg !24
  %484 = icmp sgt i32 %483, 2139095039, !dbg !24
  br i1 %484, label %__nv_isnanf.exit.i.i150, label %__nv_powf.exit168, !dbg !24

__nv_isnanf.exit.i.i150:                          ; preds = %__internal_accurate_powf.exit.i140
  %485 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not37.i151 = icmp eq i32 %485, 0, !dbg !24
  %.06.i152 = select i1 %.not37.i151, float %359, float %358, !dbg !24
  %486 = fcmp uno float %.06.i152, 0.000000e+00, !dbg !24
  br i1 %486, label %489, label %__nv_isnanf.exit11.i.i153, !dbg !24

__nv_isnanf.exit11.i.i153:                        ; preds = %__nv_isnanf.exit.i.i150
  %487 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not38.i154 = icmp eq i32 %487, 0, !dbg !24
  %.07.i155 = select i1 %.not38.i154, float %134, float %133, !dbg !24
  %488 = fcmp uno float %.07.i155, 0.000000e+00, !dbg !24
  br i1 %488, label %489, label %__nv_isinff.exit8.i.i156, !dbg !24

489:                                              ; preds = %__nv_isnanf.exit11.i.i153, %__nv_isnanf.exit.i.i150
  %490 = fadd float %357, 1.500000e+00, !dbg !24
  br label %__nv_powf.exit168, !dbg !24

__nv_isinff.exit8.i.i156:                         ; preds = %__nv_isnanf.exit11.i.i153
  %491 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not39.i157 = icmp eq i32 %491, 0, !dbg !24
  %.05.i158 = select i1 %.not39.i157, float %134, float %133, !dbg !24
  %492 = fcmp oeq float %.05.i158, 0x7FF0000000000000, !dbg !24
  %493 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not41.i163 = icmp eq i32 %493, 0, !dbg !24
  %.04.i164 = select i1 %.not41.i163, float %359, float %358, !dbg !24
  br i1 %492, label %__nv_fabsf.exit5.i.i162, label %__nv_isinff.exit.i.i159, !dbg !24

__nv_fabsf.exit5.i.i162:                          ; preds = %__nv_isinff.exit8.i.i156
  %494 = fcmp ogt float %.04.i164, 1.000000e+00, !dbg !24
  %495 = select i1 %494, float 0x7FF0000000000000, float 0.000000e+00, !dbg !24
  br label %__nv_powf.exit168, !dbg !24

__nv_isinff.exit.i.i159:                          ; preds = %__nv_isinff.exit8.i.i156
  %496 = fcmp oeq float %.04.i164, 0x7FF0000000000000, !dbg !24
  br i1 %496, label %497, label %__nv_powf.exit168, !dbg !24

497:                                              ; preds = %__nv_isinff.exit.i.i159
  br label %__nv_powf.exit168, !dbg !24

__nv_powf.exit168:                                ; preds = %__internal_accurate_powf.exit.i140, %489, %__nv_fabsf.exit5.i.i162, %__nv_isinff.exit.i.i159, %497
  %.3.i148 = phi float [ %.212.i143, %__internal_accurate_powf.exit.i140 ], [ %490, %489 ], [ %495, %__nv_fabsf.exit5.i.i162 ], [ 0x7FF0000000000000, %497 ], [ %.212.i143, %__nv_isinff.exit.i.i159 ], !dbg !24
  %498 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not.i169 = icmp eq i32 %498, 0, !dbg !24
  %.08.i170 = select i1 %.not.i169, float %64, float %63, !dbg !24
  %499 = fcmp oeq float %.08.i170, 1.000000e+00, !dbg !24
  %500 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not12.i171 = icmp eq i32 %500, 0, !dbg !24
  %501 = extractelement <2 x float> %58, i64 1, !dbg !24
  %502 = tail call float @llvm.nvvm.fabs.ftz.f(float %501) #6, !dbg !24
  %503 = tail call float @llvm.nvvm.fabs.f(float %501) #6, !dbg !24
  %.09.i172 = select i1 %.not12.i171, float %503, float %502, !dbg !24
  %504 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not13.i173 = icmp eq i32 %504, 0, !dbg !24
  %505 = fcmp olt float %.09.i172, 0x3810000000000000, !dbg !24
  %506 = fmul float %.09.i172, 0x4170000000000000, !dbg !24
  %507 = select i1 %.not13.i173, i1 %505, i1 false, !dbg !24
  %.116.i176 = select i1 %507, float %506, float %.09.i172, !dbg !24
  %expo.i.i.1.i177 = select i1 %507, float -1.510000e+02, float -1.270000e+02, !dbg !24
  %508 = bitcast float %.116.i176 to i32, !dbg !24
  %509 = and i32 %508, 8388607, !dbg !24
  %510 = or disjoint i32 %509, 1065353216, !dbg !24
  %511 = bitcast i32 %510 to float, !dbg !24
  %512 = lshr i32 %508, 23, !dbg !24
  %513 = uitofp nneg i32 %512 to float, !dbg !24
  %514 = fadd float %expo.i.i.1.i177, %513, !dbg !24
  %515 = fcmp ogt float %511, 0x3FF6A09E60000000, !dbg !24
  %516 = fmul float %511, 5.000000e-01, !dbg !24
  %517 = fadd float %514, 1.000000e+00, !dbg !24
  %expo.i.i.2.i178 = select i1 %515, float %517, float %514, !dbg !24
  %m.i.i.0.i179 = select i1 %515, float %516, float %511, !dbg !24
  %518 = fadd float %m.i.i.0.i179, -1.000000e+00, !dbg !24
  %519 = fadd float %m.i.i.0.i179, 1.000000e+00, !dbg !24
  %520 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %519) #7, !dbg !24, !srcloc !25
  %521 = fmul float %518, 2.000000e+00, !dbg !24
  %522 = fmul float %520, %521, !dbg !24
  %523 = fmul float %522, %522, !dbg !24
  %524 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not14.i180 = icmp eq i32 %524, 0, !dbg !24
  %525 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %523, float 0x3F8995EC60000000) #6, !dbg !24
  %526 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %523, float 0x3F8995EC60000000) #6, !dbg !24
  %.020.i181 = select i1 %.not14.i180, float %526, float %525, !dbg !24
  %527 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not15.i182 = icmp eq i32 %527, 0, !dbg !24
  %528 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i181, float %523, float 0x3FB55557A0000000) #6, !dbg !24
  %529 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i181, float %523, float 0x3FB55557A0000000) #6, !dbg !24
  %.021.i183 = select i1 %.not15.i182, float %529, float %528, !dbg !24
  %530 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not16.i184 = icmp eq i32 %530, 0, !dbg !24
  %531 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i183, float %523) #6, !dbg !24
  %532 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i183, float %523) #6, !dbg !24
  %.022.i185 = select i1 %.not16.i184, float %532, float %531, !dbg !24
  %533 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not17.i186 = icmp eq i32 %533, 0, !dbg !24
  %534 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i185, float %522) #6, !dbg !24
  %535 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i185, float %522) #6, !dbg !24
  %.024.i187 = select i1 %.not17.i186, float %535, float %534, !dbg !24
  %536 = fsub float %518, %522, !dbg !24
  %537 = fmul float %536, 2.000000e+00, !dbg !24
  %538 = fneg float %522, !dbg !24
  %539 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not18.i188 = icmp eq i32 %539, 0, !dbg !24
  %540 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %538, float %518, float %537) #6, !dbg !24
  %541 = tail call float @llvm.nvvm.fma.rn.f(float %538, float %518, float %537) #6, !dbg !24
  %.025.i189 = select i1 %.not18.i188, float %541, float %540, !dbg !24
  %542 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not19.i190 = icmp eq i32 %542, 0, !dbg !24
  %543 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %520, float %.025.i189) #6, !dbg !24
  %544 = tail call float @llvm.nvvm.mul.rn.f(float %520, float %.025.i189) #6, !dbg !24
  %.026.i191 = select i1 %.not19.i190, float %544, float %543, !dbg !24
  %545 = fadd float %522, %.024.i187, !dbg !24
  %546 = fsub float %522, %545, !dbg !24
  %547 = fadd float %.024.i187, %546, !dbg !24
  %548 = fadd float %.026.i191, %547, !dbg !24
  %549 = fadd float %545, %548, !dbg !24
  %550 = fsub float %545, %549, !dbg !24
  %551 = fadd float %548, %550, !dbg !24
  %552 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not20.i192 = icmp eq i32 %552, 0, !dbg !24
  %553 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i178, float 0x3FE62E4000000000) #6, !dbg !24
  %554 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i178, float 0x3FE62E4000000000) #6, !dbg !24
  %.019.i193 = select i1 %.not20.i192, float %554, float %553, !dbg !24
  %555 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not21.i194 = icmp eq i32 %555, 0, !dbg !24
  %556 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i178, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %557 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i178, float 0x3EB7F7D1C0000000) #6, !dbg !24
  %.018.i195 = select i1 %.not21.i194, float %557, float %556, !dbg !24
  %558 = fadd float %.019.i193, %549, !dbg !24
  %559 = fsub float %.019.i193, %558, !dbg !24
  %560 = fadd float %549, %559, !dbg !24
  %561 = fadd float %551, %560, !dbg !24
  %562 = fadd float %.018.i195, %561, !dbg !24
  %563 = fadd float %558, %562, !dbg !24
  %564 = fsub float %558, %563, !dbg !24
  %565 = fadd float %562, %564, !dbg !24
  %566 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not22.i196 = icmp eq i32 %566, 0, !dbg !24
  %.027.i197 = select i1 %.not22.i196, float %134, float %133, !dbg !24
  %567 = fcmp ogt float %.027.i197, 0x46FED09BE0000000, !dbg !24
  %.013.i198 = select i1 %567, float 0x3F28000000000000, float 1.500000e+00, !dbg !24
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not23.i199 = icmp eq i32 %568, 0, !dbg !24
  %569 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i198, float %563) #6, !dbg !24
  %570 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i198, float %563) #6, !dbg !24
  %.028.i200 = select i1 %.not23.i199, float %570, float %569, !dbg !24
  %571 = fneg float %.028.i200, !dbg !24
  %572 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not24.i201 = icmp eq i32 %572, 0, !dbg !24
  %573 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i198, float %563, float %571) #6, !dbg !24
  %574 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i198, float %563, float %571) #6, !dbg !24
  %.029.i202 = select i1 %.not24.i201, float %574, float %573, !dbg !24
  %575 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not25.i203 = icmp eq i32 %575, 0, !dbg !24
  %576 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i198, float %565, float %.029.i202) #6, !dbg !24
  %577 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i198, float %565, float %.029.i202) #6, !dbg !24
  %.030.i204 = select i1 %.not25.i203, float %577, float %576, !dbg !24
  %578 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not26.i205 = icmp eq i32 %578, 0, !dbg !24
  %579 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %563, float %.030.i204) #6, !dbg !24
  %580 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %563, float %.030.i204) #6, !dbg !24
  %.031.i206 = select i1 %.not26.i205, float %580, float %579, !dbg !24
  %581 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not27.i207 = icmp eq i32 %581, 0, !dbg !24
  %582 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i200, float %.031.i206) #6, !dbg !24
  %583 = tail call float @llvm.nvvm.add.rn.f(float %.028.i200, float %.031.i206) #6, !dbg !24
  %.032.i208 = select i1 %.not27.i207, float %583, float %582, !dbg !24
  %584 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %585 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %586 = bitcast float %.032.i208 to i32, !dbg !24
  %587 = icmp eq i32 %586, 1118925336, !dbg !24
  %prod.i.145.0.i214 = select i1 %587, float 0x40562E42E0000000, float %.032.i208, !dbg !24
  %588 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not30.i215 = icmp eq i32 %588, 0, !dbg !24
  %589 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i214, float 0x3FF7154760000000) #6, !dbg !24
  %590 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i214, float 0x3FF7154760000000) #6, !dbg !24
  %.017.i216 = select i1 %.not30.i215, float %590, float %589, !dbg !24
  %591 = tail call float @llvm.nvvm.trunc.f(float %.017.i216) #6, !dbg !24
  %592 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not31.i217 = icmp eq i32 %592, 0, !dbg !24
  %593 = tail call float @llvm.nvvm.fabs.ftz.f(float %591) #6, !dbg !24
  %594 = tail call float @llvm.nvvm.fabs.f(float %591) #6, !dbg !24
  %.023.i218 = select i1 %.not31.i217, float %594, float %593, !dbg !24
  %595 = fcmp ogt float %.023.i218, 1.260000e+02, !dbg !24
  %596 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %591), !dbg !24
  %j.i.i.0.i219 = select i1 %595, float %596, float %591, !dbg !24
  %597 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not32.i220 = icmp eq i32 %597, 0, !dbg !24
  %598 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i219, float 0xBFE62E4300000000, float %prod.i.145.0.i214) #6, !dbg !24
  %599 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i219, float 0xBFE62E4300000000, float %prod.i.145.0.i214) #6, !dbg !24
  %.035.i221 = select i1 %.not32.i220, float %599, float %598, !dbg !24
  %600 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not33.i222 = icmp eq i32 %600, 0, !dbg !24
  %601 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i219, float 0x3E205C6100000000, float %.035.i221) #6, !dbg !24
  %602 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i219, float 0x3E205C6100000000, float %.035.i221) #6, !dbg !24
  %.036.i223 = select i1 %.not33.i222, float %602, float %601, !dbg !24
  %603 = fmul float %.036.i223, 0x3FF7154760000000, !dbg !24
  %604 = fadd float %j.i.i.0.i219, 0x4168000FE0000000, !dbg !24
  %605 = bitcast float %604 to i32, !dbg !24
  %606 = shl i32 %605, 23, !dbg !24
  %607 = bitcast i32 %606 to float, !dbg !24
  %608 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %603) #6, !dbg !24
  %609 = fmul float %608, %607, !dbg !24
  %610 = fcmp une float %609, 0x7FF0000000000000, !dbg !24
  br i1 %610, label %__internal_fmad.exit.i.i249, label %__internal_accurate_powf.exit.i224, !dbg !24

__internal_fmad.exit.i.i249:                      ; preds = %__nv_powf.exit168
  %.not29.i211 = icmp eq i32 %585, 0, !dbg !24
  %.not28.i209 = icmp eq i32 %584, 0, !dbg !24
  %611 = fneg float %.032.i208, !dbg !24
  %612 = tail call float @llvm.nvvm.add.rn.f(float %.028.i200, float %611) #6, !dbg !24
  %613 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i200, float %611) #6, !dbg !24
  %.033.i210 = select i1 %.not28.i209, float %612, float %613, !dbg !24
  %614 = tail call float @llvm.nvvm.add.rn.f(float %.033.i210, float %.031.i206) #6, !dbg !24
  %615 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i210, float %.031.i206) #6, !dbg !24
  %.034.i212 = select i1 %.not29.i211, float %614, float %615, !dbg !24
  %616 = fadd float %.034.i212, 0x3EE0000000000000, !dbg !24
  %prod.i.044.0.i213 = select i1 %587, float %616, float %.034.i212, !dbg !24
  %617 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not34.i250 = icmp eq i32 %617, 0, !dbg !24
  %618 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %609, float %prod.i.044.0.i213, float %609) #6, !dbg !24
  %619 = tail call float @llvm.nvvm.fma.rn.f(float %609, float %prod.i.044.0.i213, float %609) #6, !dbg !24
  %.014.i251 = select i1 %.not34.i250, float %619, float %618, !dbg !24
  br label %__internal_accurate_powf.exit.i224, !dbg !24

__internal_accurate_powf.exit.i224:               ; preds = %__internal_fmad.exit.i.i249, %__nv_powf.exit168
  %t.i.0.i225 = phi float [ %.014.i251, %__internal_fmad.exit.i.i249 ], [ 0x7FF0000000000000, %__nv_powf.exit168 ], !dbg !24
  %620 = extractelement <2 x float> %56, i64 1, !dbg !24
  %621 = fcmp oeq float %620, 0.000000e+00, !dbg !24
  %622 = fadd float %501, %501, !dbg !24
  %623 = select i1 %499, float %622, float 0.000000e+00, !dbg !24
  %.212.i227 = select i1 %621, float %623, float %t.i.0.i225, !dbg !24
  %624 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not35.i228 = icmp eq i32 %624, 0, !dbg !24
  %.01.i229 = select i1 %.not35.i228, float %503, float %502, !dbg !24
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not36.i230 = icmp eq i32 %625, 0, !dbg !24
  %.02.i231 = select i1 %.not36.i230, float %134, float %133, !dbg !24
  %626 = fadd float %.01.i229, %.02.i231, !dbg !24
  %627 = bitcast float %626 to i32, !dbg !24
  %628 = icmp sgt i32 %627, 2139095039, !dbg !24
  br i1 %628, label %__nv_isnanf.exit.i.i234, label %__nv_powf.exit252, !dbg !24

__nv_isnanf.exit.i.i234:                          ; preds = %__internal_accurate_powf.exit.i224
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not37.i235 = icmp eq i32 %629, 0, !dbg !24
  %.06.i236 = select i1 %.not37.i235, float %503, float %502, !dbg !24
  %630 = fcmp uno float %.06.i236, 0.000000e+00, !dbg !24
  br i1 %630, label %633, label %__nv_isnanf.exit11.i.i237, !dbg !24

__nv_isnanf.exit11.i.i237:                        ; preds = %__nv_isnanf.exit.i.i234
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not38.i238 = icmp eq i32 %631, 0, !dbg !24
  %.07.i239 = select i1 %.not38.i238, float %134, float %133, !dbg !24
  %632 = fcmp uno float %.07.i239, 0.000000e+00, !dbg !24
  br i1 %632, label %633, label %__nv_isinff.exit8.i.i240, !dbg !24

633:                                              ; preds = %__nv_isnanf.exit11.i.i237, %__nv_isnanf.exit.i.i234
  %634 = fadd float %501, 1.500000e+00, !dbg !24
  br label %__nv_powf.exit252, !dbg !24

__nv_isinff.exit8.i.i240:                         ; preds = %__nv_isnanf.exit11.i.i237
  %635 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not39.i241 = icmp eq i32 %635, 0, !dbg !24
  %.05.i242 = select i1 %.not39.i241, float %134, float %133, !dbg !24
  %636 = fcmp oeq float %.05.i242, 0x7FF0000000000000, !dbg !24
  %637 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #6, !dbg !24
  %.not41.i247 = icmp eq i32 %637, 0, !dbg !24
  %.04.i248 = select i1 %.not41.i247, float %503, float %502, !dbg !24
  br i1 %636, label %__nv_fabsf.exit5.i.i246, label %__nv_isinff.exit.i.i243, !dbg !24

__nv_fabsf.exit5.i.i246:                          ; preds = %__nv_isinff.exit8.i.i240
  %638 = fcmp ogt float %.04.i248, 1.000000e+00, !dbg !24
  %639 = select i1 %638, float 0x7FF0000000000000, float 0.000000e+00, !dbg !24
  br label %__nv_powf.exit252, !dbg !24

__nv_isinff.exit.i.i243:                          ; preds = %__nv_isinff.exit8.i.i240
  %640 = fcmp oeq float %.04.i248, 0x7FF0000000000000, !dbg !24
  br i1 %640, label %641, label %__nv_powf.exit252, !dbg !24

641:                                              ; preds = %__nv_isinff.exit.i.i243
  br label %__nv_powf.exit252, !dbg !24

__nv_powf.exit252:                                ; preds = %__internal_accurate_powf.exit.i224, %633, %__nv_fabsf.exit5.i.i246, %__nv_isinff.exit.i.i243, %641
  %.3.i232 = phi float [ %.212.i227, %__internal_accurate_powf.exit.i224 ], [ %634, %633 ], [ %639, %__nv_fabsf.exit5.i.i246 ], [ 0x7FF0000000000000, %641 ], [ %.212.i227, %__nv_isinff.exit.i.i243 ], !dbg !24
  %642 = insertelement <2 x i32> poison, i32 %11, i64 0, !dbg !12
  %643 = insertelement <2 x i32> %642, i32 %12, i64 1, !dbg !12
  %644 = bitcast <2 x i32> %643 to <2 x float>, !dbg !12
  %645 = insertelement <2 x i32> poison, i32 %13, i64 0, !dbg !12
  %646 = insertelement <2 x i32> %645, i32 %14, i64 1, !dbg !12
  %647 = bitcast <2 x i32> %646 to <2 x float>, !dbg !12
  %648 = fcmp oeq <2 x float> %58, splat (float 1.000000e+00), !dbg !24
  %649 = fcmp oeq <2 x float> %57, splat (float 1.000000e+00), !dbg !24
  %650 = fmul <2 x float> %23, splat (float 2.500000e-01), !dbg !26
  %651 = fsub <2 x float> splat (float 1.000000e+00), %23, !dbg !27
  %652 = fmul <2 x float> %32, splat (float 2.500000e-01), !dbg !26
  %653 = fsub <2 x float> splat (float 1.000000e+00), %32, !dbg !27
  %654 = fsub <2 x float> %647, %23, !dbg !28
  %655 = fsub <2 x float> %644, %32, !dbg !28
  %656 = lshr i32 %5, 5, !dbg !10
  %657 = and i32 %5, 31, !dbg !10
  %658 = insertelement <2 x float> poison, float %.3.i, i64 0, !dbg !24
  %659 = insertelement <2 x float> %658, float %.3.i64, i64 1, !dbg !24
  %660 = select <2 x i1> %649, <2 x float> splat (float 1.000000e+00), <2 x float> %659, !dbg !24
  %661 = fmul <2 x float> %653, splat (float 7.500000e-01), !dbg !29
  %662 = fadd <2 x float> %652, %661, !dbg !30
  %663 = fmul <2 x float> %655, %655, !dbg !31
  %664 = fmul <2 x float> %662, %660, !dbg !32
  %665 = fmul <2 x float> %663, %664, !dbg !33
  %666 = fmul <2 x float> %651, splat (float 7.500000e-01), !dbg !29
  %667 = fadd <2 x float> %650, %666, !dbg !30
  %668 = fmul <2 x float> %654, %654, !dbg !31
  %669 = insertelement <2 x float> poison, float %.3.i148, i64 0, !dbg !24
  %670 = insertelement <2 x float> %669, float %.3.i232, i64 1, !dbg !24
  %671 = select <2 x i1> %648, <2 x float> splat (float 1.000000e+00), <2 x float> %670, !dbg !24
  %672 = fmul <2 x float> %667, %671, !dbg !32
  %673 = fmul <2 x float> %668, %672, !dbg !33
  %shift = shufflevector <2 x float> %665, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !34
  %674 = fadd <2 x float> %665, %shift, !dbg !34
  %675 = fadd <2 x float> %674, %673, !dbg !34
  %shift253 = shufflevector <2 x float> %673, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !34
  %676 = fadd <2 x float> %675, %shift253, !dbg !34
  %677 = extractelement <2 x float> %676, i64 0, !dbg !34
  %678 = bitcast float %677 to i32, !dbg !37
  %679 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %678, i32 16, i32 31), !dbg !37
  %680 = bitcast i32 %679 to float, !dbg !37
  %681 = fadd float %677, %680, !dbg !34
  %682 = bitcast float %681 to i32, !dbg !37
  %683 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %682, i32 8, i32 31), !dbg !37
  %684 = bitcast i32 %683 to float, !dbg !37
  %685 = fadd float %681, %684, !dbg !34
  %686 = bitcast float %685 to i32, !dbg !37
  %687 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %686, i32 4, i32 31), !dbg !37
  %688 = bitcast i32 %687 to float, !dbg !37
  %689 = fadd float %685, %688, !dbg !34
  %690 = bitcast float %689 to i32, !dbg !37
  %691 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %690, i32 2, i32 31), !dbg !37
  %692 = bitcast i32 %691 to float, !dbg !37
  %693 = fadd float %689, %692, !dbg !34
  %694 = bitcast float %693 to i32, !dbg !37
  %695 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %694, i32 1, i32 31), !dbg !37
  %696 = bitcast i32 %695 to float, !dbg !37
  %697 = fadd float %693, %696, !dbg !34
  %698 = icmp eq i32 %657, 0, !dbg !37
  %699 = and i32 %656, 1, !dbg !37
  %700 = zext nneg i32 %699 to i64, !dbg !37
  %701 = getelementptr float, ptr addrspace(3) @global_smem, i64 %700, !dbg !37
  %702 = bitcast float %697 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %701, <1 x i32> %702, i1 %698) #6, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %703 = icmp slt i32 %5, 2, !dbg !37
  %704 = sext i32 %5 to i64, !dbg !37
  %705 = getelementptr float, ptr addrspace(3) @global_smem, i64 %704, !dbg !37
  %706 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %705, i1 %703) #6, !dbg !37
  %707 = bitcast i32 %706 to float, !dbg !37
  %708 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %706, i32 1, i32 31), !dbg !37
  %709 = bitcast i32 %708 to float, !dbg !37
  %710 = fadd float %707, %709, !dbg !34
  %711 = and i32 %5, 1, !dbg !37
  %712 = icmp eq i32 %711, 0, !dbg !37
  %713 = and i1 %703, %712, !dbg !37
  %714 = bitcast float %710 to <1 x i32>, !dbg !37
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %705, <1 x i32> %714, i1 %713) #6, !dbg !37
  tail call void @llvm.nvvm.barrier0(), !dbg !37
  %715 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !37
  %716 = fadd float %715, 0.000000e+00, !dbg !38
  %717 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %716, float 2.560000e+02) #6, !dbg !42
  tail call void @llvm.nvvm.barrier0(), !dbg !43
  %urem = and i32 %5, 63, !dbg !44
  %718 = icmp eq i32 %urem, 0, !dbg !44
  %719 = bitcast float %717 to i32, !dbg !44
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %719, ptr addrspace(1) %0, i1 %718) #6, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #5

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nounwind }
attributes #7 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c2mxwh6ru434qvcx3nkjwddhq7a7ybz2pwjtpq477icjxo3zwpyr.py", directory: "inductor_cache/2m")
!4 = !{ptr @triton_per_fused_abs_add_mean_mse_loss_mul_pow_rsub_sigmoid_sub_0, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_abs_add_mean_mse_loss_mul_pow_rsub_sigmoid_sub_0, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_abs_add_mean_mse_loss_mul_pow_rsub_sigmoid_sub_0", linkageName: "triton_per_fused_abs_add_mean_mse_loss_mul_pow_rsub_sigmoid_sub_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 30, scope: !7)
!12 = !DILocation(line: 31, column: 35, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 47, column: 30, scope: !16, inlinedAt: !18)
!16 = distinct !DILexicalBlockFile(scope: !7, file: !17, discriminator: 0)
!17 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!18 = !DILocation(line: 42, column: 23, scope: !7)
!19 = !DILocation(line: 47, column: 29, scope: !16, inlinedAt: !18)
!20 = !DILocation(line: 47, column: 20, scope: !16, inlinedAt: !18)
!21 = !DILocation(line: 47, column: 16, scope: !16, inlinedAt: !18)
!22 = !DILocation(line: 43, column: 19, scope: !7)
!23 = !DILocation(line: 44, column: 24, scope: !7)
!24 = !DILocation(line: 46, column: 33, scope: !7)
!25 = !{i32 21046}
!26 = !DILocation(line: 36, column: 18, scope: !7)
!27 = !DILocation(line: 38, column: 18, scope: !7)
!28 = !DILocation(line: 33, column: 18, scope: !7)
!29 = !DILocation(line: 40, column: 18, scope: !7)
!30 = !DILocation(line: 41, column: 19, scope: !7)
!31 = !DILocation(line: 34, column: 18, scope: !7)
!32 = !DILocation(line: 47, column: 20, scope: !7)
!33 = !DILocation(line: 48, column: 19, scope: !7)
!34 = !DILocation(line: 256, column: 15, scope: !35, inlinedAt: !36)
!35 = distinct !DILexicalBlockFile(scope: !16, file: !17, discriminator: 0)
!36 = !DILocation(line: 50, column: 59, scope: !7)
!37 = !DILocation(line: 267, column: 36, scope: !16, inlinedAt: !36)
!38 = !DILocation(line: 73, column: 15, scope: !39, inlinedAt: !41)
!39 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!41 = !DILocation(line: 50, column: 45, scope: !7)
!42 = !DILocation(line: 52, column: 20, scope: !7)
!43 = !DILocation(line: 53, column: 4, scope: !7)
!44 = !DILocation(line: 54, column: 63, scope: !7)
!45 = !DILocation(line: 54, column: 4, scope: !7)
