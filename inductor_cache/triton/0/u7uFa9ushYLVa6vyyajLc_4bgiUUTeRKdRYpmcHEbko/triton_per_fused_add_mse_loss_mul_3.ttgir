#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":19:0)
#loc1 = loc(unknown)
#loc27 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":45:59)
#loc39 = loc(callsite(#loc1 at #loc27))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_mse_loss_mul_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_2 = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_3 = arith.constant 2.000000e-01 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc2)
    %1 = arith.remsi %0, %cst_4 : tensor<256xi32, #blocked> loc(#loc3)
    %2 = arith.divsi %0, %cst_5 : tensor<256xi32, #blocked> loc(#loc4)
    %3 = arith.divsi %0, %cst_4 : tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.remsi %3, %cst_6 : tensor<256xi32, #blocked> loc(#loc6)
    %5 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc7)
    %6 = tt.addptr %5, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc7)
    %7 = tt.load %6 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc8)
    %8 = arith.muli %2, %cst_4 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = arith.addi %1, %8 : tensor<256xi32, #blocked> loc(#loc10)
    %10 = tt.splat %arg2 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>, #blocked> loc(#loc11)
    %11 = tt.addptr %10, %9 : tensor<256x!tt.ptr<i64>, #blocked>, tensor<256xi32, #blocked> loc(#loc11)
    %12 = tt.load %11 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>, #blocked> loc(#loc12)
    %13 = arith.addi %12, %cst : tensor<256xi64, #blocked> loc(#loc13)
    %14 = arith.cmpi slt, %12, %cst_0 : tensor<256xi64, #blocked> loc(#loc14)
    %15 = arith.select %14, %13, %12 : tensor<256xi1, #blocked>, tensor<256xi64, #blocked> loc(#loc15)
    %16 = arith.cmpi sge, %15, %cst_0 : tensor<256xi64, #blocked> loc(#loc16)
    %17 = arith.cmpi slt, %15, %cst : tensor<256xi64, #blocked> loc(#loc17)
    %18 = arith.andi %16, %17 : tensor<256xi1, #blocked> loc(#loc18)
    tt.assert %18, "index out of bounds: 0 <= tmp5 < 4" : tensor<256xi1, #blocked> loc(#loc19)
    %19 = arith.muli %15, %cst : tensor<256xi64, #blocked> loc(#loc20)
    %20 = arith.extsi %4 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc21)
    %21 = arith.addi %20, %19 : tensor<256xi64, #blocked> loc(#loc21)
    %22 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc22)
    %23 = tt.addptr %22, %21 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi64, #blocked> loc(#loc22)
    %24 = tt.load %23 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %25 = arith.subf %7, %24 : tensor<256xf32, #blocked> loc(#loc24)
    %26 = arith.mulf %25, %25 : tensor<256xf32, #blocked> loc(#loc25)
    %27 = "tt.reduce"(%26) <{axis = 0 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc27)), %arg6: f32 loc(callsite(#loc1 at #loc27))):
      %35 = arith.addf %arg5, %arg6 : f32 loc(#loc42)
      tt.reduce.return %35 : f32 loc(#loc38)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc38)
    %28 = arith.addf %27, %cst_1 : f32 loc(#loc41)
    %29 = arith.divf %28, %cst_2 : f32 loc(#loc31)
    %30 = arith.mulf %29, %cst_3 : f32 loc(#loc32)
    %31 = arith.addf %29, %30 : f32 loc(#loc33)
    %32 = tt.splat %31 : f32 -> tensor<1xf32, #blocked1> loc(#loc33)
    gpu.barrier loc(#loc34)
    %33 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc35)
    %34 = tt.splat %33 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc35)
    tt.store %34, %32 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc36)
    tt.return loc(#loc37)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":27:26)
#loc3 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":31:19)
#loc4 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":32:19)
#loc5 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":33:21)
#loc6 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":33:27)
#loc7 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":34:30)
#loc8 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":34:35)
#loc9 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":35:38)
#loc10 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":35:35)
#loc11 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":35:30)
#loc12 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":35:43)
#loc13 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":37:18)
#loc14 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":38:18)
#loc15 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":39:32)
#loc16 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":40:27)
#loc17 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":40:43)
#loc18 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":40:36)
#loc19 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":40:47)
#loc20 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":41:37)
#loc21 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":41:35)
#loc22 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":41:30)
#loc23 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":41:44)
#loc24 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":42:18)
#loc25 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":43:18)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc28 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc30 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":45:45)
#loc31 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":47:20)
#loc32 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":49:20)
#loc33 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":50:20)
#loc34 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":51:4)
#loc35 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":52:28)
#loc36 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":52:63)
#loc37 = loc("inductor_cache/tr/ctru6x6nz35qpzztliilams3hylxrjoft6gu2yw66cr4s3d7fro7.py":52:4)
#loc38 = loc(callsite(#loc26 at #loc27))
#loc40 = loc(callsite(#loc28 at #loc26))
#loc41 = loc(callsite(#loc29 at #loc30))
#loc42 = loc(callsite(#loc40 at #loc27))
