#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_avg_pool2d_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":19:0), %arg2: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<6.250000e-02> : tensor<256xf32, #blocked> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<1> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<2> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<3> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<5> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<6> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<7> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_8 = arith.constant dense<8> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_9 = arith.constant dense<9> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_10 = arith.constant dense<10> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_11 = arith.constant dense<11> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_12 = arith.constant dense<12> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_13 = arith.constant dense<13> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_14 = arith.constant dense<14> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_15 = arith.constant dense<15> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.muli %4, %cst_0 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %5 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc7)
    %8 = tt.load %7 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = arith.addi %5, %cst_1 : tensor<256xi32, #blocked> loc(#loc9)
    %10 = tt.addptr %6, %9 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc10)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %12 = arith.addi %5, %cst_2 : tensor<256xi32, #blocked> loc(#loc12)
    %13 = tt.addptr %6, %12 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc13)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc14)
    %15 = arith.addi %5, %cst_3 : tensor<256xi32, #blocked> loc(#loc15)
    %16 = tt.addptr %6, %15 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc16)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc17)
    %18 = arith.addi %5, %cst_4 : tensor<256xi32, #blocked> loc(#loc18)
    %19 = tt.addptr %6, %18 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc19)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc20)
    %21 = arith.addi %5, %cst_5 : tensor<256xi32, #blocked> loc(#loc21)
    %22 = tt.addptr %6, %21 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc22)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %24 = arith.addi %5, %cst_6 : tensor<256xi32, #blocked> loc(#loc24)
    %25 = tt.addptr %6, %24 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc25)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc26)
    %27 = arith.addi %5, %cst_7 : tensor<256xi32, #blocked> loc(#loc27)
    %28 = tt.addptr %6, %27 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc28)
    %29 = tt.load %28 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc29)
    %30 = arith.addi %5, %cst_8 : tensor<256xi32, #blocked> loc(#loc30)
    %31 = tt.addptr %6, %30 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc31)
    %32 = tt.load %31 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc32)
    %33 = arith.addi %5, %cst_9 : tensor<256xi32, #blocked> loc(#loc33)
    %34 = tt.addptr %6, %33 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc34)
    %35 = tt.load %34 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc35)
    %36 = arith.addi %5, %cst_10 : tensor<256xi32, #blocked> loc(#loc36)
    %37 = tt.addptr %6, %36 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc37)
    %38 = tt.load %37 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc38)
    %39 = arith.addi %5, %cst_11 : tensor<256xi32, #blocked> loc(#loc39)
    %40 = tt.addptr %6, %39 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc40)
    %41 = tt.load %40 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc41)
    %42 = arith.addi %5, %cst_12 : tensor<256xi32, #blocked> loc(#loc42)
    %43 = tt.addptr %6, %42 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc43)
    %44 = tt.load %43 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc44)
    %45 = arith.addi %5, %cst_13 : tensor<256xi32, #blocked> loc(#loc45)
    %46 = tt.addptr %6, %45 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc46)
    %47 = tt.load %46 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc47)
    %48 = arith.addi %5, %cst_14 : tensor<256xi32, #blocked> loc(#loc48)
    %49 = tt.addptr %6, %48 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc49)
    %50 = tt.load %49 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc50)
    %51 = arith.addi %5, %cst_15 : tensor<256xi32, #blocked> loc(#loc51)
    %52 = tt.addptr %6, %51 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc52)
    %53 = tt.load %52 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc53)
    %54 = arith.addf %11, %8 : tensor<256xf32, #blocked> loc(#loc54)
    %55 = arith.addf %14, %54 : tensor<256xf32, #blocked> loc(#loc55)
    %56 = arith.addf %17, %55 : tensor<256xf32, #blocked> loc(#loc56)
    %57 = arith.addf %20, %56 : tensor<256xf32, #blocked> loc(#loc57)
    %58 = arith.addf %23, %57 : tensor<256xf32, #blocked> loc(#loc58)
    %59 = arith.addf %26, %58 : tensor<256xf32, #blocked> loc(#loc59)
    %60 = arith.addf %29, %59 : tensor<256xf32, #blocked> loc(#loc60)
    %61 = arith.addf %32, %60 : tensor<256xf32, #blocked> loc(#loc61)
    %62 = arith.addf %35, %61 : tensor<256xf32, #blocked> loc(#loc62)
    %63 = arith.addf %38, %62 : tensor<256xf32, #blocked> loc(#loc63)
    %64 = arith.addf %41, %63 : tensor<256xf32, #blocked> loc(#loc64)
    %65 = arith.addf %44, %64 : tensor<256xf32, #blocked> loc(#loc65)
    %66 = arith.addf %47, %65 : tensor<256xf32, #blocked> loc(#loc66)
    %67 = arith.addf %50, %66 : tensor<256xf32, #blocked> loc(#loc67)
    %68 = arith.addf %53, %67 : tensor<256xf32, #blocked> loc(#loc68)
    %69 = arith.mulf %68, %cst : tensor<256xf32, #blocked> loc(#loc69)
    %70 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc70)
    %71 = tt.addptr %70, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc70)
    tt.store %71, %69 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc71)
    tt.return loc(#loc72)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":21:28)
#loc3 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":21:33)
#loc4 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":22:36)
#loc5 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":22:23)
#loc6 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":25:33)
#loc7 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":25:30)
#loc8 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":25:38)
#loc9 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":26:34)
#loc10 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":26:30)
#loc11 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":26:42)
#loc12 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":27:34)
#loc13 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":27:30)
#loc14 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":27:42)
#loc15 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":28:34)
#loc16 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":28:30)
#loc17 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":28:42)
#loc18 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":29:34)
#loc19 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":29:30)
#loc20 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":29:42)
#loc21 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":30:34)
#loc22 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":30:30)
#loc23 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":30:42)
#loc24 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":31:35)
#loc25 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":31:31)
#loc26 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":31:43)
#loc27 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":32:35)
#loc28 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":32:31)
#loc29 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":32:43)
#loc30 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":33:35)
#loc31 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":33:31)
#loc32 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":33:43)
#loc33 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":34:35)
#loc34 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":34:31)
#loc35 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":34:43)
#loc36 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":35:36)
#loc37 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":35:31)
#loc38 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":35:44)
#loc39 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":36:36)
#loc40 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":36:31)
#loc41 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":36:44)
#loc42 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":37:36)
#loc43 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":37:31)
#loc44 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":37:44)
#loc45 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":38:36)
#loc46 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":38:31)
#loc47 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":38:44)
#loc48 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":39:36)
#loc49 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":39:31)
#loc50 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":39:44)
#loc51 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":40:36)
#loc52 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":40:31)
#loc53 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":40:44)
#loc54 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":41:18)
#loc55 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":42:18)
#loc56 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":43:18)
#loc57 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":44:18)
#loc58 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":45:19)
#loc59 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":46:20)
#loc60 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":47:20)
#loc61 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":48:20)
#loc62 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":49:20)
#loc63 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":50:20)
#loc64 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":51:20)
#loc65 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":52:20)
#loc66 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":53:20)
#loc67 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":54:20)
#loc68 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":55:20)
#loc69 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":57:20)
#loc70 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":58:25)
#loc71 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":58:37)
#loc72 = loc("inductor_cache/ll/cllukutyfhk7dijfnamk35r6rzt67hwhi6stdzd3fdzel4b44zux.py":58:4)
