#loc = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0)
module {
  tt.func public @triton_poi_fused_mul_sigmoid_sub_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<128xf32> loc(#loc1)
    %cst_1 = arith.constant dense<4> : tensor<128xi32> loc(#loc1)
    %cst_2 = arith.constant dense<256> : tensor<128xi32> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_2 : tensor<128xi32> loc(#loc6)
    %6 = arith.remsi %4, %cst_1 : tensor<128xi32> loc(#loc7)
    %7 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc8)
    %8 = tt.addptr %7, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc8)
    %9 = tt.load %8, %5 : tensor<128x!tt.ptr<f32>> loc(#loc9)
    %10 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc10)
    %11 = tt.addptr %10, %6 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc10)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc11)
    %13 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc12)
    %14 = tt.addptr %13, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc12)
    %15 = tt.load %14, %5 : tensor<128x!tt.ptr<f32>> loc(#loc13)
    %16 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc14)
    %17 = tt.addptr %16, %6 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc14)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc15)
    %19 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.addptr %19, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc16)
    %21 = tt.load %20, %5 : tensor<128x!tt.ptr<f32>> loc(#loc17)
    %22 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc18)
    %23 = tt.addptr %22, %6 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc18)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>> loc(#loc19)
    %25 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc20)
    %26 = tt.addptr %25, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc20)
    %27 = tt.load %26, %5 : tensor<128x!tt.ptr<f32>> loc(#loc21)
    %28 = arith.addf %9, %12 : tensor<128xf32> loc(#loc22)
    %29 = arith.subf %cst, %28 : tensor<128xf32> loc(#loc41)
    %30 = math.exp %29 : tensor<128xf32> loc(#loc42)
    %31 = arith.addf %30, %cst_0 : tensor<128xf32> loc(#loc43)
    %32 = arith.divf %cst_0, %31 : tensor<128xf32> loc(#loc44)
    %33 = arith.addf %15, %18 : tensor<128xf32> loc(#loc28)
    %34 = arith.subf %cst, %33 : tensor<128xf32> loc(#loc45)
    %35 = math.exp %34 : tensor<128xf32> loc(#loc46)
    %36 = arith.addf %35, %cst_0 : tensor<128xf32> loc(#loc47)
    %37 = arith.divf %cst_0, %36 : tensor<128xf32> loc(#loc48)
    %38 = arith.addf %21, %24 : tensor<128xf32> loc(#loc30)
    %39 = arith.subf %cst, %38 : tensor<128xf32> loc(#loc49)
    %40 = math.exp %39 : tensor<128xf32> loc(#loc50)
    %41 = arith.addf %40, %cst_0 : tensor<128xf32> loc(#loc51)
    %42 = arith.divf %cst_0, %41 : tensor<128xf32> loc(#loc52)
    %43 = arith.subf %32, %37 : tensor<128xf32> loc(#loc32)
    %44 = arith.mulf %42, %43 : tensor<128xf32> loc(#loc33)
    %45 = arith.mulf %44, %27 : tensor<128xf32> loc(#loc34)
    tt.store %8, %32, %5 : tensor<128x!tt.ptr<f32>> loc(#loc35)
    tt.store %14, %37, %5 : tensor<128x!tt.ptr<f32>> loc(#loc36)
    tt.store %20, %42, %5 : tensor<128x!tt.ptr<f32>> loc(#loc37)
    %46 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>> loc(#loc38)
    %47 = tt.addptr %46, %4 : tensor<128x!tt.ptr<f32>>, tensor<128xi32> loc(#loc38)
    tt.store %47, %45, %5 : tensor<128x!tt.ptr<f32>> loc(#loc39)
    tt.return loc(#loc40)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":21:28)
#loc3 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":21:33)
#loc4 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":22:36)
#loc5 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":22:23)
#loc6 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":23:21)
#loc7 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":25:19)
#loc8 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":26:34)
#loc9 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":26:39)
#loc10 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":27:30)
#loc11 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":27:35)
#loc12 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":28:34)
#loc13 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":28:39)
#loc14 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":29:30)
#loc15 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":29:35)
#loc16 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":30:34)
#loc17 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":30:39)
#loc18 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":31:30)
#loc19 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":31:35)
#loc20 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":32:31)
#loc21 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":32:36)
#loc22 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":33:18)
#loc23 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:30)
#loc24 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":34:22)
#loc25 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:29)
#loc26 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:20)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":47:16)
#loc28 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":35:18)
#loc29 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":36:22)
#loc30 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":37:19)
#loc31 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":38:23)
#loc32 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":39:19)
#loc33 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":40:20)
#loc34 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":41:20)
#loc35 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":42:39)
#loc36 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":43:39)
#loc37 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":44:40)
#loc38 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":45:25)
#loc39 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":45:37)
#loc40 = loc("inductor_cache/xs/cxsineycs7rbpmkzfmpqz63zhme7vpuiimhoj4jedc73h7mfjwui.py":45:4)
#loc41 = loc(callsite(#loc23 at #loc24))
#loc42 = loc(callsite(#loc25 at #loc24))
#loc43 = loc(callsite(#loc26 at #loc24))
#loc44 = loc(callsite(#loc27 at #loc24))
#loc45 = loc(callsite(#loc23 at #loc29))
#loc46 = loc(callsite(#loc25 at #loc29))
#loc47 = loc(callsite(#loc26 at #loc29))
#loc48 = loc(callsite(#loc27 at #loc29))
#loc49 = loc(callsite(#loc23 at #loc31))
#loc50 = loc(callsite(#loc25 at #loc31))
#loc51 = loc(callsite(#loc26 at #loc31))
#loc52 = loc(callsite(#loc27 at #loc31))
