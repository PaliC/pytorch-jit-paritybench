//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_convolution_native_group_norm_26 // -- Begin function triton_per_fused_add_convolution_native_group_norm_26
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_convolution_native_group_norm_26
.visible .entry triton_per_fused_add_convolution_native_group_norm_26(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_26_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_26_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_26_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_26_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_26_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_26_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_convolution_native_group_norm_26_param_6,
	.param .u32 triton_per_fused_add_convolution_native_group_norm_26_param_7,
	.param .u32 triton_per_fused_add_convolution_native_group_norm_26_param_8
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<84>;
	.reg .f32 	%f<74>;
	.reg .b64 	%rd<25>;
	.loc	1 19 0                          // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd15, [triton_per_fused_add_convolution_native_group_norm_26_param_0];
	ld.param.u64 	%rd16, [triton_per_fused_add_convolution_native_group_norm_26_param_1];
$L__tmp0:
	.loc	1 24 28                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:24:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	ld.param.u64 	%rd17, [triton_per_fused_add_convolution_native_group_norm_26_param_2];
	.loc	1 27 26                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:27:26
	mov.u32 	%r43, %tid.x;
	and.b32  	%r44, %r43, 31;
	ld.param.u64 	%rd18, [triton_per_fused_add_convolution_native_group_norm_26_param_3];
	ld.param.u64 	%rd19, [triton_per_fused_add_convolution_native_group_norm_26_param_4];
	shl.b32 	%r45, %r43, 2;
	ld.param.u64 	%rd20, [triton_per_fused_add_convolution_native_group_norm_26_param_5];
	and.b32  	%r46, %r45, 252;
	ld.param.u64 	%rd21, [triton_per_fused_add_convolution_native_group_norm_26_param_6];
	.loc	1 32 19                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:32:19
	bfe.u32 	%r47, %r45, 4, 4;
	.loc	1 33 19                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:33:19
	shr.s32 	%r48, %r1, 31;
	shr.u32 	%r49, %r48, 27;
	add.s32 	%r50, %r1, %r49;
	and.b32  	%r51, %r50, 268435424;
	sub.s32 	%r52, %r1, %r51;
	.loc	1 34 43                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:34:43
	shl.b32 	%r53, %r1, 8;
	.loc	1 34 39                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:34:39
	or.b32  	%r54, %r53, %r46;
	.loc	1 34 34                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:34:34
	mul.wide.s32 	%rd22, %r54, 4;
	add.s64 	%rd1, %rd15, %rd22;
	mov.pred 	%p1, -1;
	.loc	1 34 48                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:34:48
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 35 38                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:35:38
	shl.b32 	%r55, %r52, 4;
	.loc	1 35 35                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:35:35
	or.b32  	%r56, %r55, %r47;
	.loc	1 35 30                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:35:30
	mul.wide.s32 	%rd23, %r56, 4;
	add.s64 	%rd2, %rd16, %rd23;
	.loc	1 35 43                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:35:43
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 36 30                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:36:30
	add.s64 	%rd6, %rd17, %rd22;
	.loc	1 36 44                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:36:44
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p1 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 37 30                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:37:30
	add.s64 	%rd7, %rd18, %rd23;
	.loc	1 37 43                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:37:43
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd7 + 0 ];
	// end inline asm
	.loc	1 34 48                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:34:48
	mov.b32 	%f1, %r12;
	mov.b32 	%f2, %r4;
	.loc	1 35 43                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:35:43
	mov.b32 	%f3, %r16;
	mov.b32 	%f4, %r8;
	.loc	1 38 18                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:38:18
	add.f32 	%f5, %f2, %f4;
	add.f32 	%f6, %f1, %f3;
	.loc	1 34 48                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:34:48
	mov.b32 	%f7, %r13;
	mov.b32 	%f8, %r5;
	.loc	1 35 43                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:35:43
	mov.b32 	%f9, %r17;
	mov.b32 	%f10, %r9;
	.loc	1 38 18                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:38:18
	add.f32 	%f11, %f8, %f10;
	add.f32 	%f12, %f7, %f9;
	.loc	1 34 48                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:34:48
	mov.b32 	%f13, %r3;
	mov.b32 	%f14, %r2;
	.loc	1 35 43                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:35:43
	mov.b32 	%f15, %r7;
	mov.b32 	%f16, %r6;
	.loc	1 36 44                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:36:44
	mov.b32 	%f17, %r11;
	mov.b32 	%f18, %r10;
	.loc	1 37 43                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:37:43
	mov.b32 	%f19, %r15;
	mov.b32 	%f20, %r14;
	.loc	1 38 18                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:38:18
	add.f32 	%f21, %f14, %f16;
	add.f32 	%f22, %f13, %f15;
	.loc	1 39 18                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:39:18
	add.f32 	%f23, %f18, %f20;
	add.f32 	%f24, %f17, %f19;
	.loc	1 40 18                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:40:18
	add.f32 	%f25, %f22, %f24;
	mov.b32 	%r37, %f25;
	add.f32 	%f26, %f21, %f23;
	add.f32 	%f27, %f5, %f6;
	add.f32 	%f28, %f11, %f12;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f29, %f26, %f25;
	add.f32 	%f30, %f29, %f27;
	add.f32 	%f31, %f30, %f28;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r57, %f31;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	mov.b32 	%f32, %r58;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r59, %f33;
	shfl.sync.bfly.b32	%r60, %r59, 8, 31, -1;
	mov.b32 	%f34, %r60;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f35, %f33, %f34;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r61, %f35;
	shfl.sync.bfly.b32	%r62, %r61, 4, 31, -1;
	mov.b32 	%f36, %r62;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f37, %f35, %f36;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r63, %f37;
	shfl.sync.bfly.b32	%r64, %r63, 2, 31, -1;
	mov.b32 	%f38, %r64;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f39, %f37, %f38;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r65, %f39;
	shfl.sync.bfly.b32	%r66, %r65, 1, 31, -1;
	mov.b32 	%f40, %r66;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p11, %r44, 0;
	shr.u32 	%r67, %r43, 3;
	and.b32  	%r68, %r67, 4;
	mov.u32 	%r69, global_smem;
	add.s32 	%r18, %r69, %r68;
	mov.b32 	%r19, %f41;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p12, %r43, 2;
	add.s32 	%r21, %r69, %r45;
	// begin inline asm
	@%p12 ld.shared.b32 %r20, [ %r21 + 0 ];
	// end inline asm
	mov.b32 	%f42, %r20;
	shfl.sync.bfly.b32	%r70, %r20, 1, 31, -1;
	mov.b32 	%f43, %r70;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f42, %f43;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r71, %r43, 1;
	setp.eq.b32 	%p21, %r71, 1;
	not.pred 	%p22, %p21;
	and.pred  	%p13, %p12, %p22;
	mov.b32 	%r23, %f44;
	// begin inline asm
	@%p13 st.shared.b32 [ %r21 + 0 ], %r23;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f45, [global_smem];
$L__tmp2:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f46, %f45, 0f00000000;
$L__tmp3:
	.loc	1 46 20                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:46:20
	mov.b32 	%r25, %f46;
	mov.b32 	%r26, 1132462080;
	// begin inline asm
	div.full.f32 %r41, %r25, %r26;
	// end inline asm
	mov.b32 	%f47, %r41;
	.loc	1 47 19                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:47:19
	sub.f32 	%f48, %f26, %f47;
	sub.f32 	%f49, %f25, %f47;
	sub.f32 	%f50, %f27, %f47;
	sub.f32 	%f51, %f28, %f47;
	.loc	1 48 20                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:48:20
	mul.f32 	%f52, %f49, %f49;
$L__tmp4:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f53, %f48, %f48, %f52;
	fma.rn.f32 	%f54, %f50, %f50, %f53;
	fma.rn.f32 	%f55, %f51, %f51, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r72, %f55;
	shfl.sync.bfly.b32	%r73, %r72, 16, 31, -1;
	mov.b32 	%f56, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r74, %f57;
	shfl.sync.bfly.b32	%r75, %r74, 8, 31, -1;
	mov.b32 	%f58, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f57, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f59;
	shfl.sync.bfly.b32	%r77, %r76, 4, 31, -1;
	mov.b32 	%f60, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f61;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	mov.b32 	%f62, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f61, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f63;
	shfl.sync.bfly.b32	%r81, %r80, 1, 31, -1;
	mov.b32 	%f64, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r28, %f65;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p12 ld.shared.b32 %r29, [ %r21 + 0 ];
	// end inline asm
	mov.b32 	%f66, %r29;
	shfl.sync.bfly.b32	%r82, %r29, 1, 31, -1;
	mov.b32 	%f67, %r82;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r32, %f68;
	// begin inline asm
	@%p13 st.shared.b32 [ %r21 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	ld.shared.f32 	%f69, [global_smem];
$L__tmp5:
	.loc	3 73 15                         // triton_helpers.py:73:15
	add.f32 	%f70, %f69, 0f00000000;
$L__tmp6:
	.loc	1 52 20                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:52:20
	mov.b32 	%r34, %f70;
	// begin inline asm
	div.full.f32 %r33, %r34, %r26;
	// end inline asm
	mov.b32 	%f71, %r33;
	.loc	1 54 20                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:54:20
	add.f32 	%f72, %f71, 0f358637BD;
	.loc	1 55 28                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:55:28
	rsqrt.approx.ftz.f32 	%f73, %f72;
	.loc	1 40 18                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:40:18
	mov.b32 	%r36, %f26;
	.loc	1 56 48                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:56:48
	mov.b32 	%r38, %f27;
	mov.b32 	%r39, %f28;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd1 + 0 ], { %r36, %r37, %r38, %r39 };
	// end inline asm
	.loc	1 57 25                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:57:25
	mul.wide.s32 	%rd24, %r1, 4;
	add.s64 	%rd12, %rd21, %rd24;
	.loc	1 57 37                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:57:37
	and.b32  	%r83, %r43, 63;
	setp.eq.s32 	%p18, %r83, 0;
	mov.b32 	%r40, %f73;
	// begin inline asm
	@%p18 st.global.b32 [ %rd12 + 0 ], { %r40 };
	// end inline asm
	.loc	1 58 25                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:58:25
	add.s64 	%rd13, %rd19, %rd24;
	.loc	1 58 37                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:58:37
	// begin inline asm
	@%p18 st.global.b32 [ %rd13 + 0 ], { %r41 };
	// end inline asm
	.loc	1 59 25                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:59:25
	add.s64 	%rd14, %rd20, %rd24;
	.loc	1 59 37                         // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:59:37
	// begin inline asm
	@%p18 st.global.b32 [ %rd14 + 0 ], { %r34 };
	// end inline asm
	.loc	1 59 4                          // c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py:59:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7c/c7cm27aw3elon5jjakfylarbi5axyciqbr23bvwo4pzymf2demsl.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 270                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x107 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 99
.b8 109
.b8 50
.b8 55
.b8 97
.b8 119
.b8 51
.b8 101
.b8 108
.b8 111
.b8 110
.b8 53
.b8 106
.b8 106
.b8 97
.b8 107
.b8 102
.b8 121
.b8 108
.b8 97
.b8 114
.b8 98
.b8 105
.b8 53
.b8 97
.b8 120
.b8 121
.b8 99
.b8 105
.b8 113
.b8 98
.b8 114
.b8 50
.b8 51
.b8 98
.b8 118
.b8 119
.b8 111
.b8 52
.b8 112
.b8 122
.b8 121
.b8 109
.b8 102
.b8 50
.b8 100
.b8 101
.b8 109
.b8 115
.b8 108
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x38 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 103
.b8 114
.b8 111
.b8 117
.b8 112
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 50
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9b:0x76 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 58                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe0:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp4                           // DW_AT_low_pc
.b64 $L__tmp5                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 59                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xf8:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 50                                  // DW_AT_call_line
.b8 45                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
