; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_avg_pool2d_13(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %5 = shl i32 %4, 7, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = and i32 %6, 127, !dbg !12
  %8 = or disjoint i32 %5, %7, !dbg !13
  %9 = icmp slt i32 %8, 26624, !dbg !14
  %10 = sdiv i32 %8, 16, !dbg !15
  %.frozen = freeze i32 %8, !dbg !16
  %11 = sdiv i32 %.frozen, 6656, !dbg !16
  %12 = mul i32 %11, 6656, !dbg !17
  %.decomposed = sub i32 %.frozen, %12, !dbg !17
  %13 = mul i32 %11, 26624, !dbg !18
  %14 = add i32 %13, %.decomposed, !dbg !19
  %15 = add i32 %14, 19951, !dbg !20
  %16 = sext i32 %15 to i64, !dbg !21
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !21
  %18 = add i32 %14, 19952, !dbg !22
  %19 = sext i32 %18 to i64, !dbg !23
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !23
  %21 = add i32 %14, 19953, !dbg !24
  %22 = sext i32 %21 to i64, !dbg !25
  %23 = getelementptr float, ptr addrspace(1) %0, i64 %22, !dbg !25
  %24 = add i32 %14, 19967, !dbg !26
  %25 = sext i32 %24 to i64, !dbg !27
  %26 = getelementptr float, ptr addrspace(1) %0, i64 %25, !dbg !27
  %27 = add i32 %14, 19968, !dbg !28
  %28 = sext i32 %27 to i64, !dbg !29
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !29
  %30 = add i32 %14, 19969, !dbg !30
  %31 = sext i32 %30 to i64, !dbg !31
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !31
  %33 = add i32 %14, 19983, !dbg !32
  %34 = sext i32 %33 to i64, !dbg !33
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !33
  %36 = add i32 %14, 19984, !dbg !34
  %37 = sext i32 %36 to i64, !dbg !35
  %38 = getelementptr float, ptr addrspace(1) %0, i64 %37, !dbg !35
  %39 = add i32 %14, 19985, !dbg !36
  %40 = sext i32 %39 to i64, !dbg !37
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !37
  %42 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !38
  %43 = insertelement <2 x i32> %42, i32 %8, i64 1, !dbg !38
  %44 = srem <2 x i32> %43, splat (i32 16), !dbg !38
  %45 = extractelement <2 x i32> %44, i64 0, !dbg !39
  %46 = icmp sgt i32 %45, 0, !dbg !40
  %47 = extractelement <2 x i32> %44, i64 1, !dbg !39
  %48 = icmp sgt i32 %47, 0, !dbg !41
  %49 = and i1 %48, %46, !dbg !42
  %50 = and i1 %9, %49, !dbg !43
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %17, i1 %50, i32 0, i1 %50) #1, !dbg !44
  %52 = bitcast i32 %51 to float, !dbg !44
  %53 = icmp sgt i32 %47, -1, !dbg !45
  %54 = and i1 %53, %46, !dbg !46
  %55 = and i1 %9, %54, !dbg !47
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %55, i32 0, i1 %55) #1, !dbg !48
  %57 = bitcast i32 %56 to float, !dbg !48
  %58 = fadd float %52, %57, !dbg !49
  %59 = add nsw i32 %47, 1, !dbg !50
  %60 = icmp ult i32 %59, 16, !dbg !50
  %61 = and i1 %46, %60, !dbg !51
  %62 = and i1 %9, %61, !dbg !52
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 %62, i32 0, i1 %62) #1, !dbg !53
  %64 = bitcast i32 %63 to float, !dbg !53
  %65 = fadd float %58, %64, !dbg !54
  %66 = icmp sgt i32 %45, -1, !dbg !55
  %67 = and i1 %48, %66, !dbg !56
  %68 = and i1 %9, %67, !dbg !57
  %69 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %26, i1 %68, i32 0, i1 %68) #1, !dbg !58
  %70 = bitcast i32 %69 to float, !dbg !58
  %71 = fadd float %65, %70, !dbg !59
  %72 = or i32 %45, %47, !dbg !60
  %73 = icmp sgt i32 %72, -1, !dbg !60
  %74 = and i1 %9, %73, !dbg !61
  %75 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %74, i32 0, i1 %74) #1, !dbg !62
  %76 = bitcast i32 %75 to float, !dbg !62
  %77 = fadd float %71, %76, !dbg !63
  %78 = and i1 %66, %60, !dbg !64
  %79 = and i1 %9, %78, !dbg !65
  %80 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %79, i32 0, i1 %79) #1, !dbg !66
  %81 = bitcast i32 %80 to float, !dbg !66
  %82 = fadd float %77, %81, !dbg !67
  %83 = add nsw i32 %45, 1, !dbg !68
  %84 = icmp ult i32 %83, 16, !dbg !68
  %85 = and i1 %48, %84, !dbg !69
  %86 = and i1 %9, %85, !dbg !70
  %87 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %35, i1 %86, i32 0, i1 %86) #1, !dbg !71
  %88 = bitcast i32 %87 to float, !dbg !71
  %89 = fadd float %82, %88, !dbg !72
  %90 = and i1 %53, %84, !dbg !73
  %91 = and i1 %9, %90, !dbg !74
  %92 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %38, i1 %91, i32 0, i1 %91) #1, !dbg !75
  %93 = bitcast i32 %92 to float, !dbg !75
  %94 = fadd float %89, %93, !dbg !76
  %95 = or i32 %83, %59, !dbg !77
  %96 = icmp ult i32 %95, 16, !dbg !77
  %97 = and i1 %9, %96, !dbg !78
  %98 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %97, i32 0, i1 %97) #1, !dbg !79
  %99 = bitcast i32 %98 to float, !dbg !79
  %100 = fadd float %94, %99, !dbg !80
  %101 = add nsw <2 x i32> %44, splat (i32 2), !dbg !81
  %102 = icmp sgt <2 x i32> %44, splat (i32 14), !dbg !82
  %103 = select <2 x i1> %102, <2 x i32> splat (i32 17), <2 x i32> zeroinitializer, !dbg !83
  %104 = icmp slt <2 x i32> %44, splat (i32 15), !dbg !84
  %105 = select <2 x i1> %104, <2 x i32> %101, <2 x i32> zeroinitializer, !dbg !85
  %106 = add nsw <2 x i32> %103, %105, !dbg !86
  %107 = extractelement <2 x i32> %106, i64 1, !dbg !87
  %reass.add = sub nsw i32 %107, %47
  %108 = extractelement <2 x i32> %106, i64 0
  %reass.mul = mul nsw i32 %reass.add, %108
  %109 = add nsw i32 %47, %45, !dbg !39
  %reass.sub = sub nsw i32 %107, %109, !dbg !87
  %110 = add nsw i32 %reass.sub, 1, !dbg !87
  %111 = extractelement <2 x i32> %44, i64 1
  %112 = extractelement <2 x i32> %106, i64 1
  %113 = sub nsw i32 %111, %112
  %reass.mul7 = mul nsw i32 %113, %45
  %114 = extractelement <2 x i32> %106, i64 0, !dbg !88
  %115 = add nsw i32 %110, %114, !dbg !88
  %116 = add nsw i32 %115, %reass.mul7, !dbg !88
  %117 = add nsw i32 %116, %reass.mul, !dbg !89
  %118 = sitofp i32 %117 to float, !dbg !90
  %119 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %100, float %118) #1, !dbg !90
  %120 = sext i32 %14 to i64, !dbg !91
  %121 = getelementptr float, ptr addrspace(1) %1, i64 %120, !dbg !91
  %122 = bitcast float %119 to i32, !dbg !92
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %122, ptr addrspace(1) %121, i1 %9) #1, !dbg !92
  ret void, !dbg !93
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "chyhxfvt7f5h377hvjektrpuzljso6nrvv2sggmnl7xjbcyiqz7j.py", directory: "inductor_cache/hy")
!4 = !{ptr @triton_poi_fused_avg_pool2d_13, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_avg_pool2d_13, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_avg_pool2d_13", linkageName: "triton_poi_fused_avg_pool2d_13", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 27, column: 19, scope: !7)
!18 = !DILocation(line: 39, column: 50, scope: !7)
!19 = !DILocation(line: 39, column: 39, scope: !7)
!20 = !DILocation(line: 39, column: 44, scope: !7)
!21 = !DILocation(line: 39, column: 31, scope: !7)
!22 = !DILocation(line: 45, column: 44, scope: !7)
!23 = !DILocation(line: 45, column: 31, scope: !7)
!24 = !DILocation(line: 52, column: 44, scope: !7)
!25 = !DILocation(line: 52, column: 31, scope: !7)
!26 = !DILocation(line: 59, column: 44, scope: !7)
!27 = !DILocation(line: 59, column: 31, scope: !7)
!28 = !DILocation(line: 62, column: 44, scope: !7)
!29 = !DILocation(line: 62, column: 31, scope: !7)
!30 = !DILocation(line: 65, column: 44, scope: !7)
!31 = !DILocation(line: 65, column: 31, scope: !7)
!32 = !DILocation(line: 72, column: 44, scope: !7)
!33 = !DILocation(line: 72, column: 31, scope: !7)
!34 = !DILocation(line: 75, column: 44, scope: !7)
!35 = !DILocation(line: 75, column: 31, scope: !7)
!36 = !DILocation(line: 78, column: 44, scope: !7)
!37 = !DILocation(line: 78, column: 31, scope: !7)
!38 = !DILocation(line: 24, column: 27, scope: !7)
!39 = !DILocation(line: 80, column: 40, scope: !7)
!40 = !DILocation(line: 30, column: 19, scope: !7)
!41 = !DILocation(line: 35, column: 19, scope: !7)
!42 = !DILocation(line: 38, column: 19, scope: !7)
!43 = !DILocation(line: 39, column: 63, scope: !7)
!44 = !DILocation(line: 39, column: 55, scope: !7)
!45 = !DILocation(line: 41, column: 21, scope: !7)
!46 = !DILocation(line: 44, column: 19, scope: !7)
!47 = !DILocation(line: 45, column: 63, scope: !7)
!48 = !DILocation(line: 45, column: 55, scope: !7)
!49 = !DILocation(line: 46, column: 20, scope: !7)
!50 = !DILocation(line: 50, column: 20, scope: !7)
!51 = !DILocation(line: 51, column: 19, scope: !7)
!52 = !DILocation(line: 52, column: 63, scope: !7)
!53 = !DILocation(line: 52, column: 55, scope: !7)
!54 = !DILocation(line: 53, column: 20, scope: !7)
!55 = !DILocation(line: 55, column: 21, scope: !7)
!56 = !DILocation(line: 58, column: 20, scope: !7)
!57 = !DILocation(line: 59, column: 63, scope: !7)
!58 = !DILocation(line: 59, column: 55, scope: !7)
!59 = !DILocation(line: 60, column: 20, scope: !7)
!60 = !DILocation(line: 61, column: 20, scope: !7)
!61 = !DILocation(line: 62, column: 63, scope: !7)
!62 = !DILocation(line: 62, column: 55, scope: !7)
!63 = !DILocation(line: 63, column: 20, scope: !7)
!64 = !DILocation(line: 64, column: 20, scope: !7)
!65 = !DILocation(line: 65, column: 63, scope: !7)
!66 = !DILocation(line: 65, column: 55, scope: !7)
!67 = !DILocation(line: 66, column: 20, scope: !7)
!68 = !DILocation(line: 70, column: 20, scope: !7)
!69 = !DILocation(line: 71, column: 20, scope: !7)
!70 = !DILocation(line: 72, column: 63, scope: !7)
!71 = !DILocation(line: 72, column: 55, scope: !7)
!72 = !DILocation(line: 73, column: 20, scope: !7)
!73 = !DILocation(line: 74, column: 20, scope: !7)
!74 = !DILocation(line: 75, column: 63, scope: !7)
!75 = !DILocation(line: 75, column: 55, scope: !7)
!76 = !DILocation(line: 76, column: 20, scope: !7)
!77 = !DILocation(line: 77, column: 20, scope: !7)
!78 = !DILocation(line: 78, column: 63, scope: !7)
!79 = !DILocation(line: 78, column: 55, scope: !7)
!80 = !DILocation(line: 79, column: 20, scope: !7)
!81 = !DILocation(line: 80, column: 129, scope: !7)
!82 = !DILocation(line: 80, column: 125, scope: !7)
!83 = !DILocation(line: 80, column: 116, scope: !7)
!84 = !DILocation(line: 80, column: 160, scope: !7)
!85 = !DILocation(line: 80, column: 148, scope: !7)
!86 = !DILocation(line: 80, column: 136, scope: !7)
!87 = !DILocation(line: 80, column: 48, scope: !7)
!88 = !DILocation(line: 80, column: 311, scope: !7)
!89 = !DILocation(line: 80, column: 372, scope: !7)
!90 = !DILocation(line: 81, column: 20, scope: !7)
!91 = !DILocation(line: 82, column: 25, scope: !7)
!92 = !DILocation(line: 82, column: 48, scope: !7)
!93 = !DILocation(line: 82, column: 4, scope: !7)
