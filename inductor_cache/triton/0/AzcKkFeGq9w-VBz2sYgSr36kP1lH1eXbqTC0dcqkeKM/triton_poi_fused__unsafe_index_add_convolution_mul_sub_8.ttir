#loc = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0)
module {
  tt.func public @triton_poi_fused__unsafe_index_add_convolution_mul_sub_8(%arg0: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg6: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0), %arg10: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0> : tensor<64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<64xi64> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<16> : tensor<64xi32> loc(#loc1)
    %cst_2 = arith.constant dense<4> : tensor<64xi32> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<64xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<64xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<64xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_3 : tensor<64xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_2 : tensor<64xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_2 : tensor<64xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_2 : tensor<64xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_1 : tensor<64xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<i64> -> tensor<64x!tt.ptr<i64>> loc(#loc11)
    %11 = tt.addptr %10, %7 : tensor<64x!tt.ptr<i64>>, tensor<64xi32> loc(#loc11)
    %12 = tt.load %11, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i64>> loc(#loc12)
    %13 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<64x!tt.ptr<i64>> loc(#loc13)
    %14 = tt.addptr %13, %8 : tensor<64x!tt.ptr<i64>>, tensor<64xi32> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i64>> loc(#loc14)
    %16 = tt.addptr %arg3, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc15)
    %17 = tt.load %16 : !tt.ptr<f32> loc(#loc16)
    %18 = tt.splat %17 : f32 -> tensor<64xf32> loc(#loc17)
    %19 = tt.splat %arg4 : !tt.ptr<i64> -> tensor<64x!tt.ptr<i64>> loc(#loc18)
    %20 = tt.addptr %19, %8 : tensor<64x!tt.ptr<i64>>, tensor<64xi32> loc(#loc18)
    %21 = tt.load %20, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i64>> loc(#loc19)
    %22 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc20)
    %23 = tt.addptr %22, %8 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc20)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc21)
    %25 = tt.splat %arg6 : !tt.ptr<i64> -> tensor<64x!tt.ptr<i64>> loc(#loc22)
    %26 = tt.addptr %25, %7 : tensor<64x!tt.ptr<i64>>, tensor<64xi32> loc(#loc22)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<i64>> loc(#loc23)
    %28 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc24)
    %29 = tt.addptr %28, %7 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc24)
    %30 = tt.load %29, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc25)
    %31 = arith.addi %12, %cst_0 : tensor<64xi64> loc(#loc26)
    %32 = arith.cmpi slt, %12, %cst : tensor<64xi64> loc(#loc27)
    %33 = arith.select %32, %31, %12 : tensor<64xi1>, tensor<64xi64> loc(#loc28)
    %34 = arith.addi %15, %cst_0 : tensor<64xi64> loc(#loc29)
    %35 = arith.cmpi slt, %15, %cst : tensor<64xi64> loc(#loc30)
    %36 = arith.select %35, %34, %15 : tensor<64xi1>, tensor<64xi64> loc(#loc31)
    %37 = arith.muli %33, %cst_0 : tensor<64xi64> loc(#loc32)
    %38 = arith.addi %36, %37 : tensor<64xi64> loc(#loc33)
    %39 = arith.muli %9, %cst_2 : tensor<64xi32> loc(#loc34)
    %40 = arith.extsi %39 : tensor<64xi32> to tensor<64xi64> loc(#loc35)
    %41 = arith.addi %38, %40 : tensor<64xi64> loc(#loc35)
    %42 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc36)
    %43 = tt.addptr %42, %41 : tensor<64x!tt.ptr<f32>>, tensor<64xi64> loc(#loc36)
    %44 = tt.load %43, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc37)
    %45 = arith.addf %44, %18 : tensor<64xf32> loc(#loc38)
    %46 = arith.addi %21, %cst_0 : tensor<64xi64> loc(#loc39)
    %47 = arith.cmpi slt, %21, %cst : tensor<64xi64> loc(#loc40)
    %48 = arith.select %47, %46, %21 : tensor<64xi1>, tensor<64xi64> loc(#loc41)
    %49 = arith.addi %48, %37 : tensor<64xi64> loc(#loc42)
    %50 = arith.addi %49, %40 : tensor<64xi64> loc(#loc43)
    %51 = tt.addptr %42, %50 : tensor<64x!tt.ptr<f32>>, tensor<64xi64> loc(#loc44)
    %52 = tt.load %51, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc45)
    %53 = arith.addf %52, %18 : tensor<64xf32> loc(#loc46)
    %54 = arith.subf %53, %45 : tensor<64xf32> loc(#loc47)
    %55 = arith.mulf %54, %24 : tensor<64xf32> loc(#loc48)
    %56 = arith.addf %45, %55 : tensor<64xf32> loc(#loc49)
    %57 = arith.addi %27, %cst_0 : tensor<64xi64> loc(#loc50)
    %58 = arith.cmpi slt, %27, %cst : tensor<64xi64> loc(#loc51)
    %59 = arith.select %58, %57, %27 : tensor<64xi1>, tensor<64xi64> loc(#loc52)
    %60 = arith.muli %59, %cst_0 : tensor<64xi64> loc(#loc53)
    %61 = arith.addi %36, %60 : tensor<64xi64> loc(#loc54)
    %62 = arith.addi %61, %40 : tensor<64xi64> loc(#loc55)
    %63 = tt.addptr %42, %62 : tensor<64x!tt.ptr<f32>>, tensor<64xi64> loc(#loc56)
    %64 = tt.load %63, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc57)
    %65 = arith.addf %64, %18 : tensor<64xf32> loc(#loc58)
    %66 = arith.addi %48, %60 : tensor<64xi64> loc(#loc59)
    %67 = arith.addi %66, %40 : tensor<64xi64> loc(#loc60)
    %68 = tt.addptr %42, %67 : tensor<64x!tt.ptr<f32>>, tensor<64xi64> loc(#loc61)
    %69 = tt.load %68, %5 evictionPolicy = evict_last : tensor<64x!tt.ptr<f32>> loc(#loc62)
    %70 = arith.addf %69, %18 : tensor<64xf32> loc(#loc63)
    %71 = arith.subf %70, %65 : tensor<64xf32> loc(#loc64)
    %72 = arith.mulf %71, %24 : tensor<64xf32> loc(#loc65)
    %73 = arith.addf %65, %72 : tensor<64xf32> loc(#loc66)
    %74 = arith.subf %73, %56 : tensor<64xf32> loc(#loc67)
    %75 = arith.mulf %74, %30 : tensor<64xf32> loc(#loc68)
    %76 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc69)
    %77 = tt.addptr %76, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc69)
    tt.store %77, %56, %5 : tensor<64x!tt.ptr<f32>> loc(#loc70)
    %78 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc71)
    %79 = tt.addptr %78, %4 : tensor<64x!tt.ptr<f32>>, tensor<64xi32> loc(#loc71)
    tt.store %79, %75, %5 : tensor<64x!tt.ptr<f32>> loc(#loc72)
    tt.return loc(#loc73)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":21:28)
#loc3 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":21:33)
#loc4 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":22:36)
#loc5 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":22:23)
#loc6 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":23:21)
#loc7 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":24:21)
#loc8 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":24:26)
#loc9 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":25:19)
#loc10 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":26:19)
#loc11 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":28:30)
#loc12 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":28:35)
#loc13 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":29:30)
#loc14 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":29:35)
#loc15 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":30:31)
#loc16 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":30:20)
#loc17 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":31:35)
#loc18 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":32:31)
#loc19 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":32:36)
#loc20 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":33:31)
#loc21 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":33:36)
#loc22 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":34:31)
#loc23 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":34:36)
#loc24 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":35:31)
#loc25 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":35:36)
#loc26 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":37:18)
#loc27 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":38:18)
#loc28 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":39:32)
#loc29 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":40:18)
#loc30 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":41:18)
#loc31 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":42:32)
#loc32 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":43:39)
#loc33 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":43:37)
#loc34 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":43:48)
#loc35 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":43:46)
#loc36 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":43:30)
#loc37 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":43:53)
#loc38 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":44:19)
#loc39 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":45:20)
#loc40 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":46:20)
#loc41 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":47:35)
#loc42 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":48:39)
#loc43 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":48:48)
#loc44 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":48:31)
#loc45 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":48:55)
#loc46 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":49:20)
#loc47 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":50:20)
#loc48 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":51:20)
#loc49 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":52:20)
#loc50 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":53:20)
#loc51 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":54:20)
#loc52 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":55:35)
#loc53 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":56:40)
#loc54 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":56:38)
#loc55 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":56:48)
#loc56 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":56:31)
#loc57 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":56:55)
#loc58 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":57:20)
#loc59 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":58:39)
#loc60 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":58:49)
#loc61 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":58:31)
#loc62 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":58:56)
#loc63 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":59:20)
#loc64 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":60:20)
#loc65 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":61:20)
#loc66 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":62:20)
#loc67 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":63:20)
#loc68 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":64:20)
#loc69 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":65:25)
#loc70 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":65:37)
#loc71 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":66:25)
#loc72 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":66:37)
#loc73 = loc("inductor_cache/il/cil6w6fecokwwpqq3wtrb6fix3z4aogvuusmzkjse2yik4c44iff.py":66:4)
