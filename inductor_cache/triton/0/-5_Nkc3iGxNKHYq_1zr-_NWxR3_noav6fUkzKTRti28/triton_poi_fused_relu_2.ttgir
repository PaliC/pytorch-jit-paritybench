#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 1 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused_relu_2(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":19:0), %arg1: i32 loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<8> : tensor<8xi32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<8xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<8xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_0 : tensor<8xi32, #blocked> loc(#loc6)
    %6 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x!tt.ptr<f32>, #blocked> loc(#loc7)
    %7 = tt.addptr %6, %4 : tensor<8x!tt.ptr<f32>, #blocked>, tensor<8xi32, #blocked> loc(#loc7)
    %8 = tt.load %7, %5 : tensor<8x!tt.ptr<f32>, #blocked> loc(#loc8)
    %9 = arith.cmpf ogt, %cst, %8 : tensor<8xf32, #blocked> loc(#loc14)
    %10 = arith.select %9, %cst, %8 : tensor<8xi1, #blocked>, tensor<8xf32, #blocked> loc(#loc15)
    tt.store %7, %10, %5 : tensor<8x!tt.ptr<f32>, #blocked> loc(#loc12)
    tt.return loc(#loc13)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":21:28)
#loc3 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":21:33)
#loc4 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":22:36)
#loc5 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":22:23)
#loc6 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":23:21)
#loc7 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":25:34)
#loc8 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":25:39)
#loc9 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc10 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":27:40)
#loc11 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc12 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":28:39)
#loc13 = loc("inductor_cache/bx/cbxjsj6khzstgalmupm55hn44hg2ajzk4bscmaiataqel3yqljn7.py":28:4)
#loc14 = loc(callsite(#loc9 at #loc10))
#loc15 = loc(callsite(#loc11 at #loc10))
