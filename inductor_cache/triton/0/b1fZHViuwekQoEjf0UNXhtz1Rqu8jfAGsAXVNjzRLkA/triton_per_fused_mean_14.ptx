//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_14 // -- Begin function triton_per_fused_mean_14
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_14
.visible .entry triton_per_fused_mean_14(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_14_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_14_param_1,
	.param .u32 triton_per_fused_mean_14_param_2,
	.param .u32 triton_per_fused_mean_14_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<80>;
	.reg .f32 	%f<15>;
	.reg .b64 	%rd<7>;
	.loc	1 19 0                          // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:19:0

// %bb.0:
	ld.param.u64 	%rd3, [triton_per_fused_mean_14_param_0];
	ld.param.u64 	%rd4, [triton_per_fused_mean_14_param_1];
$L__tmp0:
	.loc	1 23 28                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:23:33
	shl.b32 	%r47, %r1, 8;
	.loc	1 24 44                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:24:44
	mov.u32 	%r48, %tid.x;
	shl.b32 	%r49, %r48, 2;
	and.b32  	%r50, %r49, 252;
	and.b32  	%r51, %r48, 64;
	shl.b32 	%r52, %r48, 1;
	and.b32  	%r53, %r52, 254;
	.loc	1 24 23                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:24:23
	or.b32  	%r54, %r47, %r50;
	or.b32  	%r55, %r47, %r53;
	.loc	1 25 21                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:25:21
	setp.lt.s32 	%p1, %r54, 256;
	setp.lt.s32 	%p19, %r55, 256;
	.loc	1 31 19                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:31:19
	shr.s32 	%r57, %r54, 31;
	shr.u32 	%r58, %r57, 26;
	add.s32 	%r59, %r54, %r58;
	.loc	1 30 19                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:30:19
	and.b32  	%r60, %r59, -64;
	sub.s32 	%r61, %r54, %r60;
	.loc	1 33 35                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:33:35
	add.s32 	%r62, %r61, %r51;
	.loc	1 33 47                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:33:47
	shl.b32 	%r63, %r59, 1;
	and.b32  	%r64, %r63, -128;
	.loc	1 33 43                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:33:43
	add.s32 	%r65, %r62, %r64;
	.loc	1 33 30                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:33:30
	mul.wide.s32 	%rd5, %r65, 4;
	add.s64 	%rd1, %rd4, %rd5;
	mov.b32 	%r6, 0;
	.loc	1 33 52                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:33:52
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	shr.u32 	%r66, %r48, 4;
	and.b32  	%r67, %r66, 4;
	shl.b32 	%r68, %r50, 3;
	or.b32  	%r69, %r68, %r67;
	mov.u32 	%r70, global_smem;
	add.s32 	%r10, %r70, %r69;
$L__tmp2:
	.loc	1 35 33                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:35:33
	selp.b32 	%r11, %r2, 0, %p1;
	mov.pred 	%p6, -1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	add.s32 	%r12, %r10, 8;
$L__tmp4:
	.loc	1 35 33                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:35:33
	selp.b32 	%r13, %r3, 0, %p1;
$L__tmp5:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	add.s32 	%r14, %r10, 16;
$L__tmp6:
	.loc	1 35 33                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:35:33
	selp.b32 	%r15, %r4, 0, %p1;
$L__tmp7:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r10, 24;
$L__tmp8:
	.loc	1 35 33                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:35:33
	selp.b32 	%r17, %r5, 0, %p1;
$L__tmp9:
	.loc	2 267 36                        // standard.py:267:36
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p10, %r48, 512;
	add.s32 	%r19, %r70, %r49;
	// begin inline asm
	@%p10 ld.shared.b32 %r18, [ %r19 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r18;
	shfl.sync.bfly.b32	%r71, %r18, 1, 31, -1;
	mov.b32 	%f2, %r71;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f3, %f1, %f2;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r72, %r48, 1;
	setp.eq.b32 	%p20, %r72, 1;
	not.pred 	%p21, %p20;
	and.pred  	%p11, %p10, %p21;
	mov.b32 	%r21, %f3;
	// begin inline asm
	@%p11 st.shared.b32 [ %r19 + 0 ], %r21;
	// end inline asm
	add.s32 	%r23, %r19, 512;
	// begin inline asm
	@%p10 ld.shared.b32 %r22, [ %r23 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r22;
	shfl.sync.bfly.b32	%r73, %r22, 1, 31, -1;
	mov.b32 	%f5, %r73;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f6, %f4, %f5;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r25, %f6;
	// begin inline asm
	@%p11 st.shared.b32 [ %r23 + 0 ], %r25;
	// end inline asm
	add.s32 	%r27, %r19, 1024;
	// begin inline asm
	@%p10 ld.shared.b32 %r26, [ %r27 + 0 ];
	// end inline asm
	mov.b32 	%f7, %r26;
	shfl.sync.bfly.b32	%r74, %r26, 1, 31, -1;
	mov.b32 	%f8, %r74;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f9, %f7, %f8;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r29, %f9;
	// begin inline asm
	@%p11 st.shared.b32 [ %r27 + 0 ], %r29;
	// end inline asm
	add.s32 	%r31, %r19, 1536;
	// begin inline asm
	@%p10 ld.shared.b32 %r30, [ %r31 + 0 ];
	// end inline asm
	mov.b32 	%f10, %r30;
	shfl.sync.bfly.b32	%r75, %r30, 1, 31, -1;
	mov.b32 	%f11, %r75;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r33, %f12;
	// begin inline asm
	@%p11 st.shared.b32 [ %r31 + 0 ], %r33;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r76, %r70, %r68;
	ld.shared.u32 	%r35, [%r76];
	ld.shared.u32 	%r36, [%r76+8];
	ld.shared.u32 	%r37, [%r76+16];
	ld.shared.u32 	%r38, [%r76+24];
$L__tmp10:
	.loc	1 38 18                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:38:18
	bar.sync 	0;
	shl.b32 	%r77, %r50, 2;
	sub.s32 	%r34, %r76, %r77;
	// begin inline asm
	@%p6 st.shared.v4.b32 [ %r34 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r78, %r53, 2;
	add.s32 	%r79, %r70, %r78;
	ld.shared.v2.f32 	{%f13, %f14}, [%r79];
	mov.b32 	%r40, %f13;
	mov.b32 	%r41, 1132462080;
	// begin inline asm
	div.full.f32 %r45, %r40, %r41;
	// end inline asm
	mov.b32 	%r43, %f14;
	// begin inline asm
	div.full.f32 %r46, %r43, %r41;
	// end inline asm
	.loc	1 39 4                          // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:39:4
	bar.sync 	0;
	.loc	1 40 28                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:40:28
	mul.wide.s32 	%rd6, %r55, 4;
	add.s64 	%rd2, %rd3, %rd6;
	.loc	1 40 39                         // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:40:39
	// begin inline asm
	@%p19 st.global.v2.b32 [ %rd2 + 0 ], { %r45, %r46 };
	// end inline asm
	.loc	1 40 4                          // cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py:40:4
	ret;
$L__tmp11:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/us/cuszz5bvryliratbtpzjh35vooxhnlxi6hxzxuhz6nw4ap2t5dq7.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 115
.b8 122
.b8 122
.b8 53
.b8 98
.b8 118
.b8 114
.b8 121
.b8 108
.b8 105
.b8 114
.b8 97
.b8 116
.b8 98
.b8 116
.b8 112
.b8 122
.b8 106
.b8 104
.b8 51
.b8 53
.b8 118
.b8 111
.b8 111
.b8 120
.b8 104
.b8 110
.b8 108
.b8 120
.b8 105
.b8 54
.b8 104
.b8 120
.b8 122
.b8 120
.b8 117
.b8 104
.b8 122
.b8 54
.b8 110
.b8 119
.b8 52
.b8 97
.b8 112
.b8 50
.b8 116
.b8 53
.b8 100
.b8 113
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 117
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 49
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
