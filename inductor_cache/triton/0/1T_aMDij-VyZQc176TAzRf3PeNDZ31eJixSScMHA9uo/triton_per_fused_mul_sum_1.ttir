#loc = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":19:0)
#loc1 = loc(unknown)
#loc20 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":39:24)
#loc27 = loc(callsite(#loc1 at #loc20))
module {
  tt.func public @triton_per_fused_mul_sum_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":19:0)) attributes {noinline = false} {
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c4_i32 = arith.constant 4 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %cst_0 = arith.constant dense<4> : tensor<1x16xi32> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.cmpi slt, %0, %c16_i32 : i32 loc(#loc3)
    %2 = tt.splat %1 : i1 -> tensor<1x1xi1> loc(#loc3)
    %3 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc4)
    %4 = tt.expand_dims %3 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc5)
    %5 = arith.remsi %4, %cst_0 : tensor<1x16xi32> loc(#loc6)
    %6 = arith.remsi %0, %c4_i32 : i32 loc(#loc7)
    %7 = arith.divsi %0, %c4_i32 : i32 loc(#loc8)
    %8 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc9)
    %9 = tt.addptr %8, %5 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc9)
    %10 = tt.load %9 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>> loc(#loc10)
    %11 = arith.muli %4, %cst_0 : tensor<1x16xi32> loc(#loc11)
    %12 = tt.splat %6 : i32 -> tensor<1x16xi32> loc(#loc12)
    %13 = arith.addi %12, %11 : tensor<1x16xi32> loc(#loc12)
    %14 = arith.muli %7, %c64_i32 : i32 loc(#loc13)
    %15 = tt.splat %14 : i32 -> tensor<1x16xi32> loc(#loc14)
    %16 = arith.addi %13, %15 : tensor<1x16xi32> loc(#loc14)
    %17 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.addptr %17, %16 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc15)
    %19 = tt.splat %1 : i1 -> tensor<1x16xi1> loc(#loc16)
    %20 = tt.load %18, %19, %cst : tensor<1x16x!tt.ptr<f32>> loc(#loc16)
    %21 = arith.mulf %10, %20 : tensor<1x16xf32> loc(#loc17)
    %22 = arith.select %19, %21, %cst : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc18)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc20)), %arg6: f32 loc(callsite(#loc1 at #loc20))):
      %27 = arith.addf %arg5, %arg6 : f32 loc(#loc29)
      tt.reduce.return %27 : f32 loc(#loc26)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc26)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc22)
    %25 = tt.addptr %arg2, %0 : !tt.ptr<f32>, i32 loc(#loc23)
    %26 = tt.splat %25 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc23)
    tt.store %26, %24, %2 : tensor<1x1x!tt.ptr<f32>> loc(#loc24)
    tt.return loc(#loc25)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":23:28)
#loc3 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":25:21)
#loc4 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":26:26)
#loc5 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":26:34)
#loc6 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":29:19)
#loc7 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":31:19)
#loc8 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":32:19)
#loc9 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":34:30)
#loc10 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":34:35)
#loc11 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":35:37)
#loc12 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":35:35)
#loc13 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":35:45)
#loc14 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":35:42)
#loc15 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":35:30)
#loc16 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":35:50)
#loc17 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":36:18)
#loc18 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":38:33)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc22 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":39:27)
#loc23 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":40:25)
#loc24 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":40:36)
#loc25 = loc("inductor_cache/ti/ctipbpv6g4jg3577a5pff6zgbt4rcuqy3mcnftu4ztup3s7k4dlu.py":40:4)
#loc26 = loc(callsite(#loc19 at #loc20))
#loc28 = loc(callsite(#loc21 at #loc19))
#loc29 = loc(callsite(#loc28 at #loc20))
