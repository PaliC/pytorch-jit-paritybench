//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_abs_add_mean_mul_sub_0 // -- Begin function triton_per_fused_abs_add_mean_mul_sub_0
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_abs_add_mean_mul_sub_0
.visible .entry triton_per_fused_abs_add_mean_mul_sub_0(
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_mean_mul_sub_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_abs_add_mean_mul_sub_0_param_1,
	.param .u32 triton_per_fused_abs_add_mean_mul_sub_0_param_2
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<40>;
	.reg .b16 	%rs<36>;
	.reg .b32 	%r<104>;
	.reg .f32 	%f<64>;
	.reg .b64 	%rd<48>;
	.loc	1 19 0                          // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_per_fused_abs_add_mean_mul_sub_0_param_0];
	ld.param.u64 	%rd12, [triton_per_fused_abs_add_mean_mul_sub_0_param_1];
$L__tmp0:
	.loc	1 26 34                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:26:34
	mov.u32 	%r60, %tid.x;
	and.b32  	%r61, %r60, 31;
	and.b32  	%r62, %r60, 63;
	.loc	1 28 21                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:28:21
	and.b32  	%r63, %r60, 48;
	setp.ne.s32 	%p17, %r63, 48;
	.loc	1 29 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:29:19
	cvt.u16.u32 	%rs1, %r62;
	.loc	1 30 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:30:19
	mul.lo.s16 	%rs2, %rs1, 86;
	shr.u16 	%rs3, %rs2, 8;
	.loc	1 29 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:29:19
	mul.lo.s16 	%rs4, %rs3, 3;
	sub.s16 	%rs5, %rs1, %rs4;
	or.b16  	%rs6, %rs1, 64;
	.loc	1 30 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:30:19
	mul.lo.s16 	%rs7, %rs6, 86;
	shr.u16 	%rs8, %rs7, 8;
	.loc	1 29 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:29:19
	mul.lo.s16 	%rs9, %rs8, 3;
	sub.s16 	%rs10, %rs6, %rs9;
	or.b16  	%rs11, %rs1, -128;
	.loc	1 30 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:30:19
	and.b16  	%rs12, %rs11, 191;
	mul.lo.s16 	%rs13, %rs12, 171;
	shr.u16 	%rs14, %rs13, 9;
	.loc	1 29 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:29:19
	mul.lo.s16 	%rs15, %rs14, 3;
	sub.s16 	%rs16, %rs11, %rs15;
	cvt.u16.u32 	%rs17, %r60;
	or.b16  	%rs18, %rs17, -64;
	.loc	1 30 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:30:19
	and.b16  	%rs19, %rs18, 255;
	mul.lo.s16 	%rs20, %rs19, 171;
	shr.u16 	%rs21, %rs20, 9;
	.loc	1 29 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:29:19
	mul.lo.s16 	%rs22, %rs21, 3;
	sub.s16 	%rs23, %rs18, %rs22;
	cvt.u32.u16 	%r64, %rs23;
	and.b32  	%r65, %r64, 255;
	.loc	1 31 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:31:19
	shl.b16 	%rs24, %rs17, 2;
	.loc	1 32 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:32:19
	and.b16  	%rs25, %rs24, 252;
	mul.lo.s16 	%rs26, %rs25, 171;
	shr.u16 	%rs27, %rs26, 11;
	.loc	1 31 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:31:19
	mul.lo.s16 	%rs28, %rs27, 12;
	sub.s16 	%rs29, %rs24, %rs28;
	cvt.u32.u16 	%r66, %rs29;
	and.b32  	%r67, %r66, 252;
	.loc	1 33 37                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:33:37
	shl.b16 	%rs30, %rs3, 2;
	shl.b16 	%rs31, %rs8, 2;
	shl.b16 	%rs32, %rs14, 2;
	mul.wide.u16 	%r68, %rs21, 4;
	.loc	1 33 35                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:33:35
	or.b16  	%rs33, %rs30, %rs5;
	cvt.u32.u16 	%r69, %rs33;
	and.b32  	%r70, %r69, 255;
	or.b16  	%rs34, %rs31, %rs10;
	cvt.u32.u16 	%r71, %rs34;
	and.b32  	%r72, %r71, 255;
	or.b16  	%rs35, %rs32, %rs16;
	cvt.u32.u16 	%r73, %rs35;
	and.b32  	%r74, %r73, 255;
	or.b32  	%r75, %r68, %r65;
	.loc	1 33 30                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:33:30
	mul.wide.u32 	%rd13, %r70, 4;
	add.s64 	%rd1, %rd12, %rd13;
	mul.wide.u32 	%rd14, %r72, 4;
	add.s64 	%rd2, %rd12, %rd14;
	mul.wide.u32 	%rd15, %r74, 4;
	add.s64 	%rd3, %rd12, %rd15;
	mul.wide.u32 	%rd16, %r75, 4;
	add.s64 	%rd4, %rd12, %rd16;
	mov.b32 	%r2, 0;
	mov.pred 	%p1, -1;
	.loc	1 33 42                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:33:42
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r1, %r2;
	// end inline asm
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	@!%p1 mov.u32 %r3, %r2;
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.b32 { %r5 }, [ %rd3 + 0 ];
	@!%p1 mov.u32 %r5, %r2;
	// end inline asm
	mov.b32 	%f1, %r5;
	mov.pred 	%p7, 0;
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p7 ld.global.b32 { %r7 }, [ %rd4 + 0 ];
	@!%p7 mov.u32 %r7, %r2;
	// end inline asm
	.loc	1 34 30                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:34:30
	cvt.u64.u16 	%rd17, %rs30;
	cvt.u64.u16 	%rd18, %rs5;
	and.b64  	%rd19, %rd18, 255;
	add.s64 	%rd20, %rd19, %rd17;
	shl.b64 	%rd21, %rd20, 2;
	add.s64 	%rd22, %rd12, %rd21;
	add.s64 	%rd5, %rd22, 4;
	cvt.u64.u16 	%rd23, %rs31;
	cvt.u64.u16 	%rd24, %rs10;
	and.b64  	%rd25, %rd24, 255;
	add.s64 	%rd26, %rd25, %rd23;
	shl.b64 	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd12, %rd27;
	add.s64 	%rd6, %rd28, 4;
	cvt.u64.u16 	%rd29, %rs32;
	cvt.u64.u16 	%rd30, %rs16;
	and.b64  	%rd31, %rd30, 255;
	add.s64 	%rd32, %rd31, %rd29;
	shl.b64 	%rd33, %rd32, 2;
	add.s64 	%rd34, %rd12, %rd33;
	add.s64 	%rd7, %rd34, 4;
	cvt.u64.u32 	%rd35, %r68;
	cvt.u64.u16 	%rd36, %rs23;
	and.b64  	%rd37, %rd36, 255;
	add.s64 	%rd38, %rd37, %rd35;
	shl.b64 	%rd39, %rd38, 2;
	add.s64 	%rd40, %rd12, %rd39;
	add.s64 	%rd8, %rd40, 4;
	.loc	1 34 46                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:34:46
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.b32 { %r9 }, [ %rd5 + 0 ];
	@!%p1 mov.u32 %r9, %r2;
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.b32 { %r11 }, [ %rd6 + 0 ];
	@!%p1 mov.u32 %r11, %r2;
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.b32 { %r13 }, [ %rd7 + 0 ];
	@!%p1 mov.u32 %r13, %r2;
	// end inline asm
	mov.b32 	%f2, %r13;
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p7 ld.global.b32 { %r15 }, [ %rd8 + 0 ];
	@!%p7 mov.u32 %r15, %r2;
	// end inline asm
	.loc	1 35 38                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:35:38
	mul.wide.u16 	%r76, %rs27, 16;
	.loc	1 35 35                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:35:35
	or.b32  	%r77, %r76, %r67;
	.loc	1 35 30                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:35:30
	mul.wide.u32 	%rd41, %r77, 4;
	add.s64 	%rd9, %rd12, %rd41;
	.loc	1 35 43                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:35:43
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p17 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd9 + 0 ];
	@!%p17 mov.u32 %r17, %r2;
	@!%p17 mov.u32 %r18, %r2;
	@!%p17 mov.u32 %r19, %r2;
	@!%p17 mov.u32 %r20, %r2;
	// end inline asm
	mov.b32 	%f3, %r19;
	mov.b32 	%f4, %r20;
	.loc	1 36 30                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:36:30
	cvt.u64.u32 	%rd42, %r76;
	cvt.u64.u16 	%rd43, %rs29;
	and.b64  	%rd44, %rd43, 252;
	add.s64 	%rd45, %rd44, %rd42;
	shl.b64 	%rd46, %rd45, 2;
	add.s64 	%rd47, %rd12, %rd46;
	add.s64 	%rd10, %rd47, 16;
	.loc	1 36 47                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:36:47
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p17 ld.global.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd10 + 0 ];
	@!%p17 mov.u32 %r25, %r2;
	@!%p17 mov.u32 %r26, %r2;
	@!%p17 mov.u32 %r27, %r2;
	@!%p17 mov.u32 %r28, %r2;
	// end inline asm
	mov.b32 	%f5, %r27;
	mov.b32 	%f6, %r28;
	.loc	1 37 18                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:37:18
	sub.f32 	%f7, %f1, %f2;
	.loc	1 33 42                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:33:42
	mov.b32 	%f8, %r1;
	mov.b32 	%f9, %r3;
	.loc	1 34 46                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:34:46
	mov.b32 	%f10, %r9;
	mov.b32 	%f11, %r11;
	.loc	1 37 18                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:37:18
	sub.f32 	%f12, %f9, %f11;
	sub.f32 	%f13, %f8, %f10;
	.loc	1 38 23                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:38:23
	abs.f32 	%f14, %f13;
	abs.f32 	%f15, %f12;
	abs.f32 	%f16, %f7;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f14, %f15;
	add.f32 	%f18, %f17, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f18;
	shfl.sync.bfly.b32	%r79, %r78, 16, 31, -1;
	mov.b32 	%f19, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f20;
	shfl.sync.bfly.b32	%r81, %r80, 8, 31, -1;
	mov.b32 	%f21, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f22;
	shfl.sync.bfly.b32	%r83, %r82, 4, 31, -1;
	mov.b32 	%f23, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f24;
	shfl.sync.bfly.b32	%r85, %r84, 2, 31, -1;
	mov.b32 	%f25, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f26;
	shfl.sync.bfly.b32	%r87, %r86, 1, 31, -1;
	mov.b32 	%f27, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p27, %r61, 0;
	shr.u32 	%r88, %r60, 3;
	and.b32  	%r89, %r88, 4;
	mov.u32 	%r53, global_smem;
	add.s32 	%r33, %r53, %r89;
	mov.b32 	%r34, %f28;
	// begin inline asm
	@%p27 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p28, %r60, 2;
	shl.b32 	%r90, %r60, 2;
	add.s32 	%r36, %r53, %r90;
	// begin inline asm
	@%p28 ld.shared.b32 %r35, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r35;
	shfl.sync.bfly.b32	%r91, %r35, 1, 31, -1;
	mov.b32 	%f30, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r92, %r60, 1;
	setp.eq.b32 	%p38, %r92, 1;
	not.pred 	%p39, %p38;
	and.pred  	%p29, %p28, %p39;
	mov.b32 	%r38, %f31;
	// begin inline asm
	@%p29 st.shared.b32 [ %r36 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
$L__tmp2:
	.loc	1 42 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:42:19
	sub.f32 	%f32, %f3, %f5;
	sub.f32 	%f33, %f4, %f6;
	.loc	1 35 43                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:35:43
	mov.b32 	%f34, %r18;
	mov.b32 	%f35, %r17;
	.loc	1 36 47                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:36:47
	mov.b32 	%f36, %r26;
	mov.b32 	%f37, %r25;
	.loc	1 42 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:42:19
	sub.f32 	%f38, %f35, %f37;
	sub.f32 	%f39, %f34, %f36;
	.loc	1 43 24                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:43:24
	abs.f32 	%f40, %f39;
	abs.f32 	%f41, %f38;
	abs.f32 	%f42, %f32;
	abs.f32 	%f43, %f33;
	.loc	1 48 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:48:19
	ld.shared.u32 	%r46, [global_smem];
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f44, %f41, %f40;
	add.f32 	%f45, %f42, %f44;
	add.f32 	%f46, %f43, %f45;
	selp.f32 	%f47, %f46, 0f00000000, %p17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r93, %f47;
	shfl.sync.bfly.b32	%r94, %r93, 16, 31, -1;
	mov.b32 	%f48, %r94;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f47, %f48;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r95, %f49;
	shfl.sync.bfly.b32	%r96, %r95, 8, 31, -1;
	mov.b32 	%f50, %r96;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f49, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r97, %f51;
	shfl.sync.bfly.b32	%r98, %r97, 4, 31, -1;
	mov.b32 	%f52, %r98;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r99, %f53;
	shfl.sync.bfly.b32	%r100, %r99, 2, 31, -1;
	mov.b32 	%f54, %r100;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f53, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r101, %f55;
	shfl.sync.bfly.b32	%r102, %r101, 1, 31, -1;
	mov.b32 	%f56, %r102;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r40, %f57;
	// begin inline asm
	@%p27 st.shared.b32 [ %r33 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p28 ld.shared.b32 %r41, [ %r36 + 0 ];
	// end inline asm
	mov.b32 	%f58, %r41;
	shfl.sync.bfly.b32	%r103, %r41, 1, 31, -1;
	mov.b32 	%f59, %r103;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r44, %f60;
	// begin inline asm
	@%p29 st.shared.b32 [ %r36 + 0 ], %r44;
	// end inline asm
	bar.sync 	0;
	mov.b32 	%r47, 1128267776;
$L__tmp4:
	.loc	1 48 19                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:48:19
	// begin inline asm
	div.full.f32 %r45, %r46, %r47;
	// end inline asm
	mov.b32 	%f61, %r45;
	.loc	1 51 20                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:51:20
	ld.shared.u32 	%r49, [global_smem];
	// begin inline asm
	div.full.f32 %r48, %r49, %r47;
	// end inline asm
	mov.b32 	%f62, %r48;
	.loc	1 53 20                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:53:20
	add.f32 	%f63, %f61, %f62;
	.loc	1 54 4                          // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:54:4
	bar.sync 	0;
	.loc	1 55 71                         // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:55:71
	mov.b32 	%r52, %f63;
	// begin inline asm
	@%p1 st.shared.b32 [ %r53 + 0 ], %r52;
	// end inline asm
	// begin inline asm
	@%p1 st.shared.b32 [ %r53 + 0 ], %r52;
	// end inline asm
	// begin inline asm
	@%p1 st.shared.b32 [ %r53 + 0 ], %r52;
	// end inline asm
	// begin inline asm
	@%p1 st.shared.b32 [ %r53 + 0 ], %r52;
	// end inline asm
	bar.sync 	0;
	ld.shared.u32 	%r59, [global_smem];
	setp.eq.s32 	%p37, %r62, 0;
	// begin inline asm
	@%p37 st.global.b32 [ %rd11 + 0 ], { %r59 };
	// end inline asm
	.loc	1 55 4                          // cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py:55:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/yq/cyqrqy5l5va6dfgbyhgpp3sccdwwvhqjztnd2ochrbnwvs62ghpe.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 208                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc9 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 113
.b8 114
.b8 113
.b8 121
.b8 53
.b8 108
.b8 53
.b8 118
.b8 97
.b8 54
.b8 100
.b8 102
.b8 103
.b8 98
.b8 121
.b8 104
.b8 103
.b8 112
.b8 112
.b8 51
.b8 115
.b8 99
.b8 99
.b8 100
.b8 119
.b8 119
.b8 118
.b8 104
.b8 113
.b8 106
.b8 122
.b8 116
.b8 110
.b8 100
.b8 50
.b8 111
.b8 99
.b8 104
.b8 114
.b8 98
.b8 110
.b8 119
.b8 118
.b8 115
.b8 54
.b8 50
.b8 103
.b8 104
.b8 112
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 113
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 98
.b8 115
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8d:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 41                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xba:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 46                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
