//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_cat_43 // -- Begin function triton_poi_fused_add_cat_43
                                        // @triton_poi_fused_add_cat_43
.visible .entry triton_poi_fused_add_cat_43(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_cat_43_param_4,
	.param .u32 triton_poi_fused_add_cat_43_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<35>;
	.reg .b32 	%r<131>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<31>;
	.loc	1 19 0                          // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:19:0

// %bb.0:
	ld.param.u64 	%rd11, [triton_poi_fused_add_cat_43_param_0];
	ld.param.u64 	%rd12, [triton_poi_fused_add_cat_43_param_1];
$L__tmp0:
	.loc	1 21 28                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:21:33
	shl.b32 	%r66, %r1, 10;
	ld.param.u64 	%rd13, [triton_poi_fused_add_cat_43_param_2];
	ld.param.u64 	%rd14, [triton_poi_fused_add_cat_43_param_3];
	.loc	1 22 36                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:22:36
	mov.u32 	%r67, %tid.x;
	shl.b32 	%r68, %r67, 2;
	ld.param.u64 	%rd15, [triton_poi_fused_add_cat_43_param_4];
	and.b32  	%r69, %r68, 508;
	.loc	1 22 23                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:22:23
	or.b32  	%r70, %r66, %r69;
	or.b32  	%r71, %r70, 512;
	.loc	1 24 21                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:24:21
	shr.s32 	%r73, %r70, 31;
	shr.u32 	%r74, %r73, 24;
	add.s32 	%r75, %r70, %r74;
	shr.s32 	%r76, %r75, 8;
	bfe.s32 	%r77, %r1, 21, 1;
	shr.u32 	%r78, %r77, 24;
	add.s32 	%r79, %r71, %r78;
	shr.s32 	%r80, %r79, 8;
	.loc	1 24 28                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:24:28
	shr.u32 	%r81, %r76, 24;
	add.s32 	%r82, %r76, %r81;
	and.b32  	%r83, %r82, -256;
	sub.s32 	%r84, %r76, %r83;
	shr.u32 	%r85, %r80, 24;
	add.s32 	%r86, %r80, %r85;
	and.b32  	%r87, %r86, -256;
	sub.s32 	%r88, %r80, %r87;
	.loc	1 25 19                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:25:19
	and.b32  	%r89, %r75, -256;
	sub.s32 	%r90, %r70, %r89;
	.loc	1 26 19                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:26:19
	shr.u32 	%r91, %r73, 16;
	add.s32 	%r92, %r70, %r91;
	shr.s32 	%r93, %r92, 16;
	shr.s32 	%r95, %r71, 31;
	shr.u32 	%r96, %r95, 16;
	add.s32 	%r97, %r71, %r96;
	shr.s32 	%r98, %r97, 16;
	.loc	1 28 31                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:28:31
	mul.wide.s32 	%rd16, %r70, 4;
	add.s64 	%rd1, %rd14, %rd16;
	add.s64 	%rd2, %rd1, 2048;
	mov.pred 	%p1, -1;
	.loc	1 28 36                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:28:36
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v4.b32 { %r6, %r7, %r8, %r9 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r7;
	mov.b32 	%f7, %r8;
	mov.b32 	%f8, %r9;
	.loc	1 33 18                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:33:18
	setp.lt.s32 	%p3, %r84, 128;
	setp.lt.s32 	%p8, %r88, 128;
	.loc	1 34 35                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:35
	and.b32  	%r99, %r92, -65536;
	sub.s32 	%r100, %r70, %r99;
	and.b32  	%r101, %r97, -65536;
	sub.s32 	%r102, %r71, %r101;
	.loc	1 34 52                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:52
	shl.b32 	%r103, %r93, 15;
	shl.b32 	%r104, %r98, 15;
	.loc	1 34 46                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:46
	add.s32 	%r105, %r103, %r100;
	add.s32 	%r106, %r104, %r102;
	.loc	1 34 30                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:30
	mul.wide.s32 	%rd17, %r105, 4;
	add.s64 	%rd3, %rd11, %rd17;
	mul.wide.s32 	%rd18, %r106, 4;
	add.s64 	%rd4, %rd11, %rd18;
	mov.b32 	%r14, 0;
	.loc	1 34 57                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:34:57
	// begin inline asm
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	@%p3 ld.global.v4.b32 { %r10, %r11, %r12, %r13 }, [ %rd3 + 0 ];
	@!%p3 mov.u32 %r10, %r14;
	@!%p3 mov.u32 %r11, %r14;
	@!%p3 mov.u32 %r12, %r14;
	@!%p3 mov.u32 %r13, %r14;
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	mov.u32 %r21, 0x0;
	@%p8 ld.global.v4.b32 { %r18, %r19, %r20, %r21 }, [ %rd4 + 0 ];
	@!%p8 mov.u32 %r18, %r14;
	@!%p8 mov.u32 %r19, %r14;
	@!%p8 mov.u32 %r20, %r14;
	@!%p8 mov.u32 %r21, %r14;
	// end inline asm
	.loc	1 38 18                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:38:18
	and.b32  	%r107, %r84, -64;
	setp.eq.s32 	%p13, %r107, 128;
	and.b32  	%r108, %r88, -64;
	setp.eq.s32 	%p18, %r108, 128;
	.loc	1 39 41                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:41
	shl.b32 	%r109, %r84, 8;
	shl.b32 	%r110, %r88, 8;
	.loc	1 39 62                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:62
	shl.b32 	%r111, %r93, 14;
	shl.b32 	%r112, %r98, 14;
	.loc	1 39 41                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:41
	add.s32 	%r113, %r111, %r90;
	add.s32 	%r114, %r112, %r90;
	.loc	1 39 31                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:31
	cvt.s64.s32 	%rd19, %r109;
	cvt.s64.s32 	%rd20, %r113;
	add.s64 	%rd21, %rd20, %rd19;
	shl.b64 	%rd22, %rd21, 2;
	add.s64 	%rd23, %rd12, %rd22;
	add.s64 	%rd5, %rd23, -131072;
	cvt.s64.s32 	%rd24, %r110;
	cvt.s64.s32 	%rd25, %r114;
	add.s64 	%rd26, %rd25, %rd24;
	shl.b64 	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd12, %rd27;
	add.s64 	%rd6, %rd28, -131072;
	.loc	1 39 67                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:39:67
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p13 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd5 + 0 ];
	@!%p13 mov.u32 %r26, %r14;
	@!%p13 mov.u32 %r27, %r14;
	@!%p13 mov.u32 %r28, %r14;
	@!%p13 mov.u32 %r29, %r14;
	// end inline asm
	// begin inline asm
	mov.u32 %r34, 0x0;
	mov.u32 %r35, 0x0;
	mov.u32 %r36, 0x0;
	mov.u32 %r37, 0x0;
	@%p18 ld.global.v4.b32 { %r34, %r35, %r36, %r37 }, [ %rd6 + 0 ];
	@!%p18 mov.u32 %r34, %r14;
	@!%p18 mov.u32 %r35, %r14;
	@!%p18 mov.u32 %r36, %r14;
	@!%p18 mov.u32 %r37, %r14;
	// end inline asm
	.loc	1 40 20                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:40:20
	setp.gt.s32 	%p23, %r84, 191;
	setp.gt.s32 	%p28, %r88, 191;
	.loc	1 43 31                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:43:31
	add.s64 	%rd29, %rd13, %rd22;
	add.s64 	%rd7, %rd29, -196608;
	add.s64 	%rd30, %rd13, %rd27;
	add.s64 	%rd8, %rd30, -196608;
	.loc	1 43 67                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:43:67
	// begin inline asm
	mov.u32 %r42, 0x0;
	mov.u32 %r43, 0x0;
	mov.u32 %r44, 0x0;
	mov.u32 %r45, 0x0;
	@%p23 ld.global.v4.b32 { %r42, %r43, %r44, %r45 }, [ %rd7 + 0 ];
	@!%p23 mov.u32 %r42, %r14;
	@!%p23 mov.u32 %r43, %r14;
	@!%p23 mov.u32 %r44, %r14;
	@!%p23 mov.u32 %r45, %r14;
	// end inline asm
	// begin inline asm
	mov.u32 %r50, 0x0;
	mov.u32 %r51, 0x0;
	mov.u32 %r52, 0x0;
	mov.u32 %r53, 0x0;
	@%p28 ld.global.v4.b32 { %r50, %r51, %r52, %r53 }, [ %rd8 + 0 ];
	@!%p28 mov.u32 %r50, %r14;
	@!%p28 mov.u32 %r51, %r14;
	@!%p28 mov.u32 %r52, %r14;
	@!%p28 mov.u32 %r53, %r14;
	// end inline asm
	.loc	1 44 34                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:44:34
	selp.b32 	%r115, %r26, %r42, %p13;
	selp.b32 	%r116, %r27, %r43, %p13;
	selp.b32 	%r117, %r28, %r44, %p13;
	selp.b32 	%r118, %r29, %r45, %p13;
	selp.b32 	%r119, %r34, %r50, %p18;
	selp.b32 	%r120, %r35, %r51, %p18;
	selp.b32 	%r121, %r36, %r52, %p18;
	selp.b32 	%r122, %r37, %r53, %p18;
	.loc	1 45 33                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:45:33
	selp.b32 	%r123, %r10, %r115, %p3;
	mov.b32 	%f9, %r123;
	selp.b32 	%r124, %r11, %r116, %p3;
	mov.b32 	%f10, %r124;
	selp.b32 	%r125, %r12, %r117, %p3;
	mov.b32 	%f11, %r125;
	selp.b32 	%r126, %r13, %r118, %p3;
	mov.b32 	%f12, %r126;
	selp.b32 	%r127, %r18, %r119, %p8;
	mov.b32 	%f13, %r127;
	selp.b32 	%r128, %r19, %r120, %p8;
	mov.b32 	%f14, %r128;
	selp.b32 	%r129, %r20, %r121, %p8;
	mov.b32 	%f15, %r129;
	selp.b32 	%r130, %r21, %r122, %p8;
	mov.b32 	%f16, %r130;
	.loc	1 46 20                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:46:20
	add.f32 	%f17, %f1, %f9;
	add.f32 	%f18, %f2, %f10;
	add.f32 	%f19, %f3, %f11;
	add.f32 	%f20, %f4, %f12;
	add.f32 	%f21, %f5, %f13;
	add.f32 	%f22, %f6, %f14;
	add.f32 	%f23, %f7, %f15;
	add.f32 	%f24, %f8, %f16;
	.loc	1 47 25                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:47:25
	add.s64 	%rd9, %rd15, %rd16;
	add.s64 	%rd10, %rd9, 2048;
	.loc	1 47 37                         // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:47:37
	mov.b32 	%r58, %f17;
	mov.b32 	%r59, %f18;
	mov.b32 	%r60, %f19;
	mov.b32 	%r61, %f20;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd9 + 0 ], { %r58, %r59, %r60, %r61 };
	// end inline asm
	mov.b32 	%r62, %f21;
	mov.b32 	%r63, %f22;
	mov.b32 	%r64, %f23;
	mov.b32 	%r65, %f24;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd10 + 0 ], { %r62, %r63, %r64, %r65 };
	// end inline asm
	.loc	1 47 4                          // cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py:47:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/g5/cg5p6usnn67yegz4k7t533kl4nn4gkrivsw7ttwoqtxrfrgxwkto.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 103
.b8 53
.b8 112
.b8 54
.b8 117
.b8 115
.b8 110
.b8 110
.b8 54
.b8 55
.b8 121
.b8 101
.b8 103
.b8 122
.b8 52
.b8 107
.b8 55
.b8 116
.b8 53
.b8 51
.b8 51
.b8 107
.b8 108
.b8 52
.b8 110
.b8 110
.b8 52
.b8 103
.b8 107
.b8 114
.b8 105
.b8 118
.b8 115
.b8 119
.b8 55
.b8 116
.b8 116
.b8 119
.b8 111
.b8 113
.b8 116
.b8 120
.b8 114
.b8 102
.b8 114
.b8 103
.b8 120
.b8 119
.b8 107
.b8 116
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 103
.b8 53
.b8 0
	}
	.section	.debug_macinfo	{	}
