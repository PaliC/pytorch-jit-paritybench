//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34 // -- Begin function triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34
.visible .entry triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_4,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_5,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_6,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_7,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_8,
	.param .u32 triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_9
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<36>;
	.reg .b32 	%r<75>;
	.reg .f32 	%f<48>;
	.reg .b64 	%rd<32>;
	.loc	1 19 0                          // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:19:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.u64 	%rd21, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_0];
	ld.param.u64 	%rd22, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_1];
$L__tmp0:
	.loc	1 23 28                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:23:33
	shl.b32 	%r47, %r1, 3;
	ld.param.u64 	%rd23, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_2];
	ld.param.u64 	%rd24, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_3];
	.loc	1 24 44                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:24:44
	mov.u32 	%r48, %tid.x;
	ld.param.u64 	%rd25, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_4];
	bfe.u32 	%r49, %r48, 4, 3;
	ld.param.u64 	%rd26, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_5];
	.loc	1 24 23                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:24:23
	or.b32  	%r50, %r47, %r49;
	ld.param.u64 	%rd27, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_6];
	.loc	1 25 21                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:25:21
	setp.lt.s32 	%p1, %r50, 2048;
	ld.param.u64 	%rd28, [triton_per_fused__native_batch_norm_legit_no_training_add_mean_relu_34_param_7];
	.loc	1 26 34                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:26:34
	shl.b32 	%r51, %r48, 2;
	and.b32  	%r52, %r51, 60;
	.loc	1 31 19                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:31:19
	bfe.s32 	%r53, %r1, 28, 1;
	shr.u32 	%r54, %r53, 23;
	add.s32 	%r55, %r50, %r54;
	and.b32  	%r56, %r55, -512;
	sub.s32 	%r57, %r50, %r56;
	.loc	1 32 38                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:32:38
	shl.b32 	%r58, %r50, 6;
	.loc	1 32 35                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:32:35
	or.b32  	%r59, %r58, %r52;
	.loc	1 32 30                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:32:30
	mul.wide.s32 	%rd29, %r59, 4;
	add.s64 	%rd1, %rd22, %rd29;
	mov.b32 	%r6, 0;
	.loc	1 32 43                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:32:43
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	.loc	1 33 30                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:33:30
	mul.wide.s32 	%rd30, %r57, 4;
	add.s64 	%rd2, %rd23, %rd30;
	.loc	1 33 35                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:33:35
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd2 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 34 30                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:34:30
	add.s64 	%rd6, %rd24, %rd30;
	.loc	1 34 35                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:34:35
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r17;
	.loc	1 35 31                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:35:31
	add.s64 	%rd10, %rd25, %rd30;
	.loc	1 35 36                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:35:36
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r18 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r19, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r19 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r20 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r21 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 36 31                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:36:31
	add.s64 	%rd14, %rd26, %rd30;
	.loc	1 36 36                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:36:36
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r22 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r23, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r23 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r24 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r25 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 37 31                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:37:31
	add.s64 	%rd18, %rd27, %rd29;
	.loc	1 37 44                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:37:44
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd18 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 40 18                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:40:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 41 26                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:41:26
	sqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 24 44                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:24:44
	and.b32  	%r60, %r48, 7;
	.loc	1 24 23                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:24:23
	or.b32  	%r61, %r47, %r60;
	.loc	1 25 21                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:25:21
	setp.lt.s32 	%p30, %r61, 2048;
	.loc	1 43 18                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:43:18
	mov.b32 	%r36, %f3;
	mov.b32 	%r35, 1065353216;
	// begin inline asm
	div.full.f32 %r34, %r35, %r36;
	// end inline asm
	mov.b32 	%f4, %r34;
	.loc	1 32 43                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:32:43
	mov.b32 	%f5, %r2;
	mov.b32 	%f6, %r3;
	mov.b32 	%f7, %r4;
	mov.b32 	%f8, %r5;
	.loc	1 38 18                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:38:18
	mov.b32 	%f9, %r13;
	sub.f32 	%f10, %f8, %f9;
	sub.f32 	%f11, %f7, %f9;
	sub.f32 	%f12, %f6, %f9;
	sub.f32 	%f13, %f5, %f9;
	.loc	1 37 44                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:37:44
	mov.b32 	%f14, %r29;
	mov.b32 	%f15, %r28;
	mov.b32 	%f16, %r27;
	mov.b32 	%f17, %r26;
	.loc	1 46 19                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:46:19
	mul.f32 	%f18, %f13, %f4;
	mul.f32 	%f19, %f12, %f4;
	mul.f32 	%f20, %f11, %f4;
	mul.f32 	%f21, %f10, %f4;
	.loc	1 47 20                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:47:20
	mov.b32 	%f22, %r21;
	.loc	1 48 20                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:48:20
	mov.b32 	%f23, %r25;
	fma.rn.f32 	%f24, %f21, %f22, %f23;
	fma.rn.f32 	%f25, %f20, %f22, %f23;
	fma.rn.f32 	%f26, %f19, %f22, %f23;
	fma.rn.f32 	%f27, %f18, %f22, %f23;
	.loc	1 49 20                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:49:20
	add.f32 	%f28, %f27, %f17;
	add.f32 	%f29, %f26, %f16;
	add.f32 	%f30, %f25, %f15;
	add.f32 	%f31, %f24, %f14;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p31, %f31, 0f00000000;
	setp.lt.f32 	%p32, %f30, 0f00000000;
	setp.lt.f32 	%p33, %f29, 0f00000000;
	setp.lt.f32 	%p34, %f28, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f32, 0f00000000, %f28, %p34;
	selp.f32 	%f33, 0f00000000, %f29, %p33;
	selp.f32 	%f34, 0f00000000, %f30, %p32;
	selp.f32 	%f35, 0f00000000, %f31, %p31;
$L__tmp2:
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f36, %f32, %f33;
	add.f32 	%f37, %f34, %f36;
	add.f32 	%f38, %f35, %f37;
	selp.f32 	%f39, %f38, 0f00000000, %p1;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r62, %f39;
	shfl.sync.bfly.b32	%r63, %r62, 8, 31, -1;
	mov.b32 	%f40, %r63;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f41, %f39, %f40;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r64, %f41;
	shfl.sync.bfly.b32	%r65, %r64, 4, 31, -1;
	mov.b32 	%f42, %r65;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f43, %f41, %f42;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r66, %f43;
	shfl.sync.bfly.b32	%r67, %r66, 2, 31, -1;
	mov.b32 	%f44, %r67;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f45, %f43, %f44;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r68, %f45;
	shfl.sync.bfly.b32	%r69, %r68, 1, 31, -1;
	mov.b32 	%f46, %r69;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f47, %f45, %f46;
$L__tmp3:
	.loc	1 56 20                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:56:20
	shl.b32 	%r70, %r49, 2;
	mov.u32 	%r71, global_smem;
	add.s32 	%r37, %r71, %r70;
	mov.b32 	%r38, %f47;
	mov.pred 	%p27, -1;
	// begin inline asm
	@%p27 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r72, %r60, 2;
	add.s32 	%r73, %r71, %r72;
	ld.shared.u32 	%r40, [%r73];
	mov.b32 	%r41, 1115684864;
	// begin inline asm
	div.full.f32 %r46, %r40, %r41;
	// end inline asm
	.loc	1 57 25                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:57:25
	add.s64 	%rd19, %rd28, %rd29;
	.loc	1 57 45                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:57:45
	mov.b32 	%r42, %f32;
	mov.b32 	%r43, %f33;
	mov.b32 	%r44, %f34;
	mov.b32 	%r45, %f35;
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd19 + 0 ], { %r42, %r43, %r44, %r45 };
	// end inline asm
	.loc	1 58 4                          // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:58:4
	bar.sync 	0;
	.loc	1 59 28                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:59:28
	mul.wide.s32 	%rd31, %r61, 4;
	add.s64 	%rd20, %rd21, %rd31;
	.loc	1 59 40                         // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:59:40
	and.b32  	%r74, %r48, 120;
	setp.eq.s32 	%p35, %r74, 0;
	and.pred  	%p29, %p35, %p30;
	// begin inline asm
	@%p29 st.global.b32 [ %rd20 + 0 ], { %r46 };
	// end inline asm
	.loc	1 59 4                          // c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py:59:4
	ret;
$L__tmp4:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/7p/c7pinvyomjb4po4ijebjpjdnd2e3r2wc4dn4g3xqnn4j4o5raqlh.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 239                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe8 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 55
.b8 112
.b8 105
.b8 110
.b8 118
.b8 121
.b8 111
.b8 109
.b8 106
.b8 98
.b8 52
.b8 112
.b8 111
.b8 52
.b8 105
.b8 106
.b8 101
.b8 98
.b8 106
.b8 112
.b8 106
.b8 100
.b8 110
.b8 100
.b8 50
.b8 101
.b8 51
.b8 114
.b8 50
.b8 119
.b8 99
.b8 52
.b8 100
.b8 110
.b8 52
.b8 103
.b8 51
.b8 120
.b8 113
.b8 110
.b8 110
.b8 52
.b8 106
.b8 52
.b8 111
.b8 53
.b8 114
.b8 97
.b8 113
.b8 108
.b8 104
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 55
.b8 112
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x49 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 51
.b8 52
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xac:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xc1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 51                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xd9:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp2                           // DW_AT_low_pc
.b64 $L__tmp3                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 54                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
