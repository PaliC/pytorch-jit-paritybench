; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_add_cos_mul_sin_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %9 = shl i32 %8, 8, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = shl i32 %10, 1, !dbg !12
  %12 = and i32 %11, 254, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, 256, !dbg !14
  %15 = srem i32 %13, 4, !dbg !15
  %16 = sext i32 %13 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !16
  %18 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %17, i1 %14) #4, !dbg !17
  %19 = extractvalue { i32, i32 } %18, 0, !dbg !17
  %20 = extractvalue { i32, i32 } %18, 1, !dbg !17
  %21 = bitcast i32 %19 to float, !dbg !17
  %22 = bitcast i32 %20 to float, !dbg !17
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %16, !dbg !18
  %24 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %23, i1 %14) #4, !dbg !19
  %25 = extractvalue { i32, i32 } %24, 0, !dbg !19
  %26 = extractvalue { i32, i32 } %24, 1, !dbg !19
  %27 = bitcast i32 %25 to float, !dbg !19
  %28 = bitcast i32 %26 to float, !dbg !19
  %29 = sext i32 %15 to i64, !dbg !20
  %30 = getelementptr float, ptr addrspace(1) %2, i64 %29, !dbg !20
  %31 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %30, i1 %14) #4, !dbg !21
  %32 = extractvalue { i32, i32 } %31, 0, !dbg !21
  %33 = extractvalue { i32, i32 } %31, 1, !dbg !21
  %34 = bitcast i32 %32 to float, !dbg !21
  %35 = bitcast i32 %33 to float, !dbg !21
  %36 = getelementptr float, ptr addrspace(1) %3, i64 %16, !dbg !22
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %36, i1 %14) #4, !dbg !23
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !23
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !23
  %40 = bitcast i32 %38 to float, !dbg !23
  %41 = bitcast i32 %39 to float, !dbg !23
  %42 = fadd float %27, %34, !dbg !24
  %43 = fadd float %28, %35, !dbg !24
  %44 = fmul float %42, %21, !dbg !25
  %45 = fmul float %43, %22, !dbg !25
  %46 = fadd float %44, %40, !dbg !26
  %47 = fadd float %45, %41, !dbg !26
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  %48 = fmul float %46, 0x3FE45F3060000000, !dbg !27
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i = icmp eq i32 %49, 0, !dbg !27
  %50 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %48) #4, !dbg !27
  %51 = tail call i32 @llvm.nvvm.f2i.rn(float %48) #4, !dbg !27
  %.01.i = select i1 %.not.i, i32 %51, i32 %50, !dbg !27
  %52 = sitofp i32 %.01.i to float, !dbg !27
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not15.i = icmp eq i32 %53, 0, !dbg !27
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float 0xBFF921FB40000000, float %46) #4, !dbg !27
  %55 = tail call float @llvm.nvvm.fma.rn.f(float %52, float 0xBFF921FB40000000, float %46) #4, !dbg !27
  %.02.i = select i1 %.not15.i, float %55, float %54, !dbg !27
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not16.i = icmp eq i32 %56, 0, !dbg !27
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %52, float 0xBE74442D00000000, float %.02.i) #4, !dbg !27
  %.03.i = select i1 %.not16.i, float %58, float %57, !dbg !27
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not17.i = icmp eq i32 %59, 0, !dbg !27
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %52, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !27
  %.04.i = select i1 %.not17.i, float %61, float %60, !dbg !27
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not18.i = icmp eq i32 %62, 0, !dbg !27
  %63 = tail call float @llvm.nvvm.fabs.ftz.f(float %46) #4, !dbg !27
  %64 = tail call float @llvm.nvvm.fabs.f(float %46) #4, !dbg !27
  %.06.i = select i1 %.not18.i, float %64, float %63, !dbg !27
  %65 = fcmp ult float %.06.i, 1.056150e+05, !dbg !27
  br i1 %65, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !27

__nv_isinff.exit.i.i.i:                           ; preds = %7
  %66 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not19.i = icmp eq i32 %66, 0, !dbg !27
  %.07.i = select i1 %.not19.i, float %64, float %63, !dbg !27
  %67 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !27
  br i1 %67, label %__nv_fmul_rn.exit.i.i.i, label %71, !dbg !27

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not27.i = icmp eq i32 %68, 0, !dbg !27
  %69 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %46, float 0.000000e+00) #4, !dbg !27
  %70 = tail call float @llvm.nvvm.mul.rn.f(float %46, float 0.000000e+00) #4, !dbg !27
  %.08.i = select i1 %.not27.i, float %70, float %69, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

71:                                               ; preds = %__nv_isinff.exit.i.i.i
  %72 = bitcast float %46 to i32, !dbg !27
  %73 = lshr i32 %72, 23, !dbg !27
  %74 = and i32 %73, 224, !dbg !27
  %75 = add nsw i32 %74, -128, !dbg !27
  %76 = shl i32 %72, 8, !dbg !27
  %77 = or i32 %76, -2147483648, !dbg !27
  %78 = lshr exact i32 %75, 5, !dbg !27
  br label %79, !dbg !27

79:                                               ; preds = %71, %79
  %indvars.iv = phi i64 [ 0, %71 ], [ %indvars.iv.next, %79 ]
  %hi.i.i.i.0.i164 = phi i32 [ 0, %71 ], [ %84, %79 ]
  %80 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !27
  %81 = load i32, ptr addrspace(1) %80, align 4, !dbg !27
  %82 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %81, i32 %77, i32 %hi.i.i.i.0.i164) #5, !dbg !27, !srcloc !28
  %83 = extractvalue { i32, i32 } %82, 0, !dbg !27
  %84 = extractvalue { i32, i32 } %82, 1, !dbg !27
  %85 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !27
  store i32 %83, ptr %85, align 4, !dbg !27
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !27
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !27
  br i1 %exitcond.not, label %86, label %79, !dbg !27, !llvm.loop !29

86:                                               ; preds = %79
  %87 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !27
  store i32 %84, ptr %87, align 4, !dbg !27
  %88 = and i32 %73, 31, !dbg !27
  %89 = sub nsw i32 6, %78, !dbg !27
  %90 = sext i32 %89 to i64, !dbg !27
  %91 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %90, !dbg !27
  %92 = load i32, ptr %91, align 4, !dbg !27
  %93 = sub nsw i32 5, %78, !dbg !27
  %94 = sext i32 %93 to i64, !dbg !27
  %95 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %94, !dbg !27
  %96 = load i32, ptr %95, align 4, !dbg !27
  %.not20.i = icmp eq i32 %88, 0, !dbg !27
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %97, !dbg !27

97:                                               ; preds = %86
  %98 = sub nsw i32 4, %78, !dbg !27
  %99 = sub nuw nsw i32 32, %88, !dbg !27
  %100 = shl i32 %92, %88, !dbg !27
  %101 = lshr i32 %96, %99, !dbg !27
  %102 = add i32 %101, %100, !dbg !27
  %103 = shl i32 %96, %88, !dbg !27
  %104 = sext i32 %98 to i64, !dbg !27
  %105 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %104, !dbg !27
  %106 = load i32, ptr %105, align 4, !dbg !27
  %107 = lshr i32 %106, %99, !dbg !27
  %108 = add i32 %107, %103, !dbg !27
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !27

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %97, %86
  %hi.i.i.i.1.i = phi i32 [ %102, %97 ], [ %92, %86 ], !dbg !27
  %lo.i.i.i.0.i = phi i32 [ %108, %97 ], [ %96, %86 ], !dbg !27
  %109 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !27
  %110 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !27
  %111 = shl i32 %lo.i.i.i.0.i, 2, !dbg !27
  %112 = lshr i32 %110, 31, !dbg !27
  %113 = add nuw nsw i32 %112, %109, !dbg !27
  %114 = sub nsw i32 0, %113, !dbg !27
  %.not2123.i = icmp slt i32 %72, 0, !dbg !27
  %spec.select.i = select i1 %.not2123.i, i32 %114, i32 %113, !dbg !27
  %115 = xor i32 %110, %72, !dbg !27
  %.lobit.i = ashr i32 %110, 31, !dbg !27
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %110, !dbg !27
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %111, !dbg !27
  %116 = zext i32 %hi.i.i.i.2.i to i64, !dbg !27
  %117 = shl nuw i64 %116, 32, !dbg !27
  %118 = zext i32 %lo.i.i.i.1.i to i64, !dbg !27
  %119 = or disjoint i64 %117, %118, !dbg !27
  %120 = sitofp i64 %119 to double, !dbg !27
  %121 = fmul double %120, 0x3BF921FB54442D19, !dbg !27
  %122 = fptrunc double %121 to float, !dbg !27
  %123 = fneg float %122, !dbg !27
  %.not2526.i = icmp slt i32 %115, 0, !dbg !27
  %r.i.i.i.0.i = select i1 %.not2526.i, float %123, float %122, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !27

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %7
  %i.i.1.i = phi i32 [ %.01.i, %7 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %t.i.i.1.i = phi float [ %.04.i, %7 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !27
  %124 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not28.i = icmp eq i32 %124, 0, !dbg !27
  %125 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %126 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !27
  %.011.i = select i1 %.not28.i, float %126, float %125, !dbg !27
  %127 = and i32 %i.i.1.i, 1, !dbg !27
  %.not29.i = icmp eq i32 %127, 0, !dbg !27
  %128 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !27
  %129 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not30.i = icmp eq i32 %129, 0, !dbg !27
  %130 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %128, float 0.000000e+00) #4, !dbg !27
  %131 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %128, float 0.000000e+00) #4, !dbg !27
  %.012.i = select i1 %.not30.i, float %131, float %130, !dbg !27
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !27

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %132 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not31.i = icmp eq i32 %132, 0, !dbg !27
  %133 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %134 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !27
  %.013.i = select i1 %.not31.i, float %134, float %133, !dbg !27
  br label %__internal_fmad.exit2.i.i.i, !dbg !27

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %135 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %136 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %137 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !27
  %138 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not32.i = icmp eq i32 %138, 0, !dbg !27
  %139 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %137, float %.011.i, float %136) #4, !dbg !27
  %140 = tail call float @llvm.nvvm.fma.rn.f(float %137, float %.011.i, float %136) #4, !dbg !27
  %.010.i = select i1 %.not32.i, float %140, float %139, !dbg !27
  %141 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not33.i = icmp eq i32 %141, 0, !dbg !27
  %142 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %135) #4, !dbg !27
  %143 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %135) #4, !dbg !27
  %.09.i = select i1 %.not33.i, float %143, float %142, !dbg !27
  %144 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not34.i = icmp eq i32 %144, 0, !dbg !27
  %145 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %128) #4, !dbg !27
  %146 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %128) #4, !dbg !27
  %.05.i = select i1 %.not34.i, float %146, float %145, !dbg !27
  %147 = and i32 %i.i.1.i, 2, !dbg !27
  %.not35.i = icmp eq i32 %147, 0, !dbg !27
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !27

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %148 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not36.i = icmp eq i32 %148, 0, !dbg !27
  %149 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %150 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %.0.i = select i1 %.not36.i, float %150, float %149, !dbg !27
  br label %__nv_sinf.exit, !dbg !27

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !27
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !27
  %151 = fmul float %47, 0x3FE45F3060000000, !dbg !27
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not.i2 = icmp eq i32 %152, 0, !dbg !27
  %153 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %151) #4, !dbg !27
  %154 = tail call i32 @llvm.nvvm.f2i.rn(float %151) #4, !dbg !27
  %.01.i3 = select i1 %.not.i2, i32 %154, i32 %153, !dbg !27
  %155 = sitofp i32 %.01.i3 to float, !dbg !27
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not15.i4 = icmp eq i32 %156, 0, !dbg !27
  %157 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %155, float 0xBFF921FB40000000, float %47) #4, !dbg !27
  %158 = tail call float @llvm.nvvm.fma.rn.f(float %155, float 0xBFF921FB40000000, float %47) #4, !dbg !27
  %.02.i5 = select i1 %.not15.i4, float %158, float %157, !dbg !27
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not16.i6 = icmp eq i32 %159, 0, !dbg !27
  %160 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %155, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !27
  %161 = tail call float @llvm.nvvm.fma.rn.f(float %155, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !27
  %.03.i7 = select i1 %.not16.i6, float %161, float %160, !dbg !27
  %162 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not17.i8 = icmp eq i32 %162, 0, !dbg !27
  %163 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %155, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !27
  %164 = tail call float @llvm.nvvm.fma.rn.f(float %155, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !27
  %.04.i9 = select i1 %.not17.i8, float %164, float %163, !dbg !27
  %165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not18.i10 = icmp eq i32 %165, 0, !dbg !27
  %166 = tail call float @llvm.nvvm.fabs.ftz.f(float %47) #4, !dbg !27
  %167 = tail call float @llvm.nvvm.fabs.f(float %47) #4, !dbg !27
  %.06.i11 = select i1 %.not18.i10, float %167, float %166, !dbg !27
  %168 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !27
  br i1 %168, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !27

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %169 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not19.i13 = icmp eq i32 %169, 0, !dbg !27
  %.07.i14 = select i1 %.not19.i13, float %167, float %166, !dbg !27
  %170 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !27
  br i1 %170, label %__nv_fmul_rn.exit.i.i.i52, label %174, !dbg !27

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not27.i53 = icmp eq i32 %171, 0, !dbg !27
  %172 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %47, float 0.000000e+00) #4, !dbg !27
  %173 = tail call float @llvm.nvvm.mul.rn.f(float %47, float 0.000000e+00) #4, !dbg !27
  %.08.i54 = select i1 %.not27.i53, float %173, float %172, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !27

174:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %175 = bitcast float %47 to i32, !dbg !27
  %176 = lshr i32 %175, 23, !dbg !27
  %177 = and i32 %176, 224, !dbg !27
  %178 = add nsw i32 %177, -128, !dbg !27
  %179 = shl i32 %175, 8, !dbg !27
  %180 = or i32 %179, -2147483648, !dbg !27
  %181 = lshr exact i32 %178, 5, !dbg !27
  br label %182, !dbg !27

182:                                              ; preds = %174, %182
  %indvars.iv179 = phi i64 [ 0, %174 ], [ %indvars.iv.next180, %182 ]
  %hi.i.i.i.0.i15166 = phi i32 [ 0, %174 ], [ %187, %182 ]
  %183 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv179, !dbg !27
  %184 = load i32, ptr addrspace(1) %183, align 4, !dbg !27
  %185 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %184, i32 %180, i32 %hi.i.i.i.0.i15166) #5, !dbg !27, !srcloc !28
  %186 = extractvalue { i32, i32 } %185, 0, !dbg !27
  %187 = extractvalue { i32, i32 } %185, 1, !dbg !27
  %188 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv179, !dbg !27
  store i32 %186, ptr %188, align 4, !dbg !27
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1, !dbg !27
  %exitcond181.not = icmp eq i64 %indvars.iv.next180, 6, !dbg !27
  br i1 %exitcond181.not, label %189, label %182, !dbg !27, !llvm.loop !31

189:                                              ; preds = %182
  %190 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !27
  store i32 %187, ptr %190, align 4, !dbg !27
  %191 = and i32 %176, 31, !dbg !27
  %192 = sub nsw i32 6, %181, !dbg !27
  %193 = sext i32 %192 to i64, !dbg !27
  %194 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %193, !dbg !27
  %195 = load i32, ptr %194, align 4, !dbg !27
  %196 = sub nsw i32 5, %181, !dbg !27
  %197 = sext i32 %196 to i64, !dbg !27
  %198 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %197, !dbg !27
  %199 = load i32, ptr %198, align 4, !dbg !27
  %.not20.i17 = icmp eq i32 %191, 0, !dbg !27
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %200, !dbg !27

200:                                              ; preds = %189
  %201 = sub nsw i32 4, %181, !dbg !27
  %202 = sub nuw nsw i32 32, %191, !dbg !27
  %203 = shl i32 %195, %191, !dbg !27
  %204 = lshr i32 %199, %202, !dbg !27
  %205 = add i32 %204, %203, !dbg !27
  %206 = shl i32 %199, %191, !dbg !27
  %207 = sext i32 %201 to i64, !dbg !27
  %208 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %207, !dbg !27
  %209 = load i32, ptr %208, align 4, !dbg !27
  %210 = lshr i32 %209, %202, !dbg !27
  %211 = add i32 %210, %206, !dbg !27
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !27

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %200, %189
  %hi.i.i.i.1.i19 = phi i32 [ %205, %200 ], [ %195, %189 ], !dbg !27
  %lo.i.i.i.0.i20 = phi i32 [ %211, %200 ], [ %199, %189 ], !dbg !27
  %212 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !27
  %213 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !27
  %214 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !27
  %215 = lshr i32 %213, 31, !dbg !27
  %216 = add nuw nsw i32 %215, %212, !dbg !27
  %217 = sub nsw i32 0, %216, !dbg !27
  %.not2123.i21 = icmp slt i32 %175, 0, !dbg !27
  %spec.select.i22 = select i1 %.not2123.i21, i32 %217, i32 %216, !dbg !27
  %218 = xor i32 %213, %175, !dbg !27
  %.lobit.i23 = ashr i32 %213, 31, !dbg !27
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %213, !dbg !27
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %214, !dbg !27
  %219 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !27
  %220 = shl nuw i64 %219, 32, !dbg !27
  %221 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !27
  %222 = or disjoint i64 %220, %221, !dbg !27
  %223 = sitofp i64 %222 to double, !dbg !27
  %224 = fmul double %223, 0x3BF921FB54442D19, !dbg !27
  %225 = fptrunc double %224 to float, !dbg !27
  %226 = fneg float %225, !dbg !27
  %.not2526.i27 = icmp slt i32 %218, 0, !dbg !27
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %226, float %225, !dbg !27
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !27

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !27
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !27
  %227 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not28.i32 = icmp eq i32 %227, 0, !dbg !27
  %228 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !27
  %229 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !27
  %.011.i33 = select i1 %.not28.i32, float %229, float %228, !dbg !27
  %230 = and i32 %i.i.1.i30, 1, !dbg !27
  %.not29.i34 = icmp eq i32 %230, 0, !dbg !27
  %231 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !27
  %232 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not30.i35 = icmp eq i32 %232, 0, !dbg !27
  %233 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %231, float 0.000000e+00) #4, !dbg !27
  %234 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %231, float 0.000000e+00) #4, !dbg !27
  %.012.i36 = select i1 %.not30.i35, float %234, float %233, !dbg !27
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !27

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %235 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not31.i38 = icmp eq i32 %235, 0, !dbg !27
  %236 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !27
  %237 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !27
  %.013.i39 = select i1 %.not31.i38, float %237, float %236, !dbg !27
  br label %__internal_fmad.exit2.i.i.i40, !dbg !27

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %238 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !27
  %239 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !27
  %240 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !27
  %241 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not32.i41 = icmp eq i32 %241, 0, !dbg !27
  %242 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %240, float %.011.i33, float %239) #4, !dbg !27
  %243 = tail call float @llvm.nvvm.fma.rn.f(float %240, float %.011.i33, float %239) #4, !dbg !27
  %.010.i42 = select i1 %.not32.i41, float %243, float %242, !dbg !27
  %244 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not33.i43 = icmp eq i32 %244, 0, !dbg !27
  %245 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %238) #4, !dbg !27
  %246 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %238) #4, !dbg !27
  %.09.i44 = select i1 %.not33.i43, float %246, float %245, !dbg !27
  %247 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not34.i45 = icmp eq i32 %247, 0, !dbg !27
  %248 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %231) #4, !dbg !27
  %249 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %231) #4, !dbg !27
  %.05.i46 = select i1 %.not34.i45, float %249, float %248, !dbg !27
  %250 = and i32 %i.i.1.i30, 2, !dbg !27
  %.not35.i47 = icmp eq i32 %250, 0, !dbg !27
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !27

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %251 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !27
  %.not36.i49 = icmp eq i32 %251, 0, !dbg !27
  %252 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %253 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !27
  %.0.i50 = select i1 %.not36.i49, float %253, float %252, !dbg !27
  br label %__nv_sinf.exit55, !dbg !27

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !27
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !27
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !32
  %254 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i57 = icmp eq i32 %254, 0, !dbg !32
  %.01.i58 = select i1 %.not.i57, i32 %51, i32 %50, !dbg !32
  %255 = sitofp i32 %.01.i58 to float, !dbg !32
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not15.i59 = icmp eq i32 %256, 0, !dbg !32
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBFF921FB40000000, float %46) #4, !dbg !32
  %258 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBFF921FB40000000, float %46) #4, !dbg !32
  %.02.i60 = select i1 %.not15.i59, float %258, float %257, !dbg !32
  %259 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not16.i61 = icmp eq i32 %259, 0, !dbg !32
  %260 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !32
  %261 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !32
  %.03.i62 = select i1 %.not16.i61, float %261, float %260, !dbg !32
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not17.i63 = icmp eq i32 %262, 0, !dbg !32
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %255, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !32
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %255, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !32
  %.04.i64 = select i1 %.not17.i63, float %264, float %263, !dbg !32
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not18.i65 = icmp eq i32 %265, 0, !dbg !32
  %.06.i66 = select i1 %.not18.i65, float %64, float %63, !dbg !32
  %266 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !32
  br i1 %266, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !32

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not19.i68 = icmp eq i32 %267, 0, !dbg !32
  %.07.i69 = select i1 %.not19.i68, float %64, float %63, !dbg !32
  %268 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !32
  br i1 %268, label %__nv_fmul_rn.exit.i.i.i106, label %272, !dbg !32

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %269 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not27.i107 = icmp eq i32 %269, 0, !dbg !32
  %270 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %46, float 0.000000e+00) #4, !dbg !32
  %271 = tail call float @llvm.nvvm.mul.rn.f(float %46, float 0.000000e+00) #4, !dbg !32
  %.08.i108 = select i1 %.not27.i107, float %271, float %270, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !32

272:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %273 = bitcast float %46 to i32, !dbg !32
  %274 = lshr i32 %273, 23, !dbg !32
  %275 = and i32 %274, 224, !dbg !32
  %276 = add nsw i32 %275, -128, !dbg !32
  %277 = shl i32 %273, 8, !dbg !32
  %278 = or i32 %277, -2147483648, !dbg !32
  %279 = lshr exact i32 %276, 5, !dbg !32
  br label %280, !dbg !32

280:                                              ; preds = %272, %280
  %indvars.iv182 = phi i64 [ 0, %272 ], [ %indvars.iv.next183, %280 ]
  %hi.i.i.i.0.i70168 = phi i32 [ 0, %272 ], [ %285, %280 ]
  %281 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv182, !dbg !32
  %282 = load i32, ptr addrspace(1) %281, align 4, !dbg !32
  %283 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %282, i32 %278, i32 %hi.i.i.i.0.i70168) #5, !dbg !32, !srcloc !28
  %284 = extractvalue { i32, i32 } %283, 0, !dbg !32
  %285 = extractvalue { i32, i32 } %283, 1, !dbg !32
  %286 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv182, !dbg !32
  store i32 %284, ptr %286, align 4, !dbg !32
  %indvars.iv.next183 = add nuw nsw i64 %indvars.iv182, 1, !dbg !32
  %exitcond184.not = icmp eq i64 %indvars.iv.next183, 6, !dbg !32
  br i1 %exitcond184.not, label %287, label %280, !dbg !32, !llvm.loop !33

287:                                              ; preds = %280
  %288 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !32
  store i32 %285, ptr %288, align 4, !dbg !32
  %289 = and i32 %274, 31, !dbg !32
  %290 = sub nsw i32 6, %279, !dbg !32
  %291 = sext i32 %290 to i64, !dbg !32
  %292 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %291, !dbg !32
  %293 = load i32, ptr %292, align 4, !dbg !32
  %294 = sub nsw i32 5, %279, !dbg !32
  %295 = sext i32 %294 to i64, !dbg !32
  %296 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %295, !dbg !32
  %297 = load i32, ptr %296, align 4, !dbg !32
  %.not20.i72 = icmp eq i32 %289, 0, !dbg !32
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %298, !dbg !32

298:                                              ; preds = %287
  %299 = sub nsw i32 4, %279, !dbg !32
  %300 = sub nuw nsw i32 32, %289, !dbg !32
  %301 = shl i32 %293, %289, !dbg !32
  %302 = lshr i32 %297, %300, !dbg !32
  %303 = add i32 %302, %301, !dbg !32
  %304 = shl i32 %297, %289, !dbg !32
  %305 = sext i32 %299 to i64, !dbg !32
  %306 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %305, !dbg !32
  %307 = load i32, ptr %306, align 4, !dbg !32
  %308 = lshr i32 %307, %300, !dbg !32
  %309 = add i32 %308, %304, !dbg !32
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !32

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %298, %287
  %hi.i.i.i.1.i74 = phi i32 [ %303, %298 ], [ %293, %287 ], !dbg !32
  %lo.i.i.i.0.i75 = phi i32 [ %309, %298 ], [ %297, %287 ], !dbg !32
  %310 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !32
  %311 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !32
  %312 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !32
  %313 = lshr i32 %311, 31, !dbg !32
  %314 = add nuw nsw i32 %313, %310, !dbg !32
  %315 = sub nsw i32 0, %314, !dbg !32
  %.not2123.i76 = icmp slt i32 %273, 0, !dbg !32
  %spec.select.i77 = select i1 %.not2123.i76, i32 %315, i32 %314, !dbg !32
  %316 = xor i32 %311, %273, !dbg !32
  %.lobit.i78 = ashr i32 %311, 31, !dbg !32
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %311, !dbg !32
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %312, !dbg !32
  %317 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !32
  %318 = shl nuw i64 %317, 32, !dbg !32
  %319 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !32
  %320 = or disjoint i64 %318, %319, !dbg !32
  %321 = sitofp i64 %320 to double, !dbg !32
  %322 = fmul double %321, 0x3BF921FB54442D19, !dbg !32
  %323 = fptrunc double %322 to float, !dbg !32
  %324 = fneg float %323, !dbg !32
  %.not2526.i82 = icmp slt i32 %316, 0, !dbg !32
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %324, float %323, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !32

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !32
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !32
  %325 = add i32 %i.i.1.i85, 1, !dbg !32
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not28.i87 = icmp eq i32 %326, 0, !dbg !32
  %327 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !32
  %328 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !32
  %.011.i88 = select i1 %.not28.i87, float %328, float %327, !dbg !32
  %329 = and i32 %i.i.1.i85, 1, !dbg !32
  %.not29.not.i = icmp eq i32 %329, 0, !dbg !32
  %330 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !32
  %331 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not30.i89 = icmp eq i32 %331, 0, !dbg !32
  %332 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %330, float 0.000000e+00) #4, !dbg !32
  %333 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %330, float 0.000000e+00) #4, !dbg !32
  %.012.i90 = select i1 %.not30.i89, float %333, float %332, !dbg !32
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !32

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not31.i104 = icmp eq i32 %334, 0, !dbg !32
  %335 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !32
  %336 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !32
  %.013.i105 = select i1 %.not31.i104, float %336, float %335, !dbg !32
  br label %__internal_fmad.exit2.i.i.i91, !dbg !32

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %337 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !32
  %338 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !32
  %339 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !32
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not32.i92 = icmp eq i32 %340, 0, !dbg !32
  %341 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %339, float %.011.i88, float %338) #4, !dbg !32
  %342 = tail call float @llvm.nvvm.fma.rn.f(float %339, float %.011.i88, float %338) #4, !dbg !32
  %.010.i93 = select i1 %.not32.i92, float %342, float %341, !dbg !32
  %343 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not33.i94 = icmp eq i32 %343, 0, !dbg !32
  %344 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %337) #4, !dbg !32
  %345 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %337) #4, !dbg !32
  %.09.i95 = select i1 %.not33.i94, float %345, float %344, !dbg !32
  %346 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not34.i96 = icmp eq i32 %346, 0, !dbg !32
  %347 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %330) #4, !dbg !32
  %348 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %330) #4, !dbg !32
  %.05.i97 = select i1 %.not34.i96, float %348, float %347, !dbg !32
  %349 = and i32 %325, 2, !dbg !32
  %.not35.i98 = icmp eq i32 %349, 0, !dbg !32
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !32

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not36.i100 = icmp eq i32 %350, 0, !dbg !32
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !32
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !32
  %.0.i101 = select i1 %.not36.i100, float %352, float %351, !dbg !32
  br label %__nv_cosf.exit, !dbg !32

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !32
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !32
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not.i110 = icmp eq i32 %353, 0, !dbg !32
  %.01.i111 = select i1 %.not.i110, i32 %154, i32 %153, !dbg !32
  %354 = sitofp i32 %.01.i111 to float, !dbg !32
  %355 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not15.i112 = icmp eq i32 %355, 0, !dbg !32
  %356 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %354, float 0xBFF921FB40000000, float %47) #4, !dbg !32
  %357 = tail call float @llvm.nvvm.fma.rn.f(float %354, float 0xBFF921FB40000000, float %47) #4, !dbg !32
  %.02.i113 = select i1 %.not15.i112, float %357, float %356, !dbg !32
  %358 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not16.i114 = icmp eq i32 %358, 0, !dbg !32
  %359 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %354, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !32
  %360 = tail call float @llvm.nvvm.fma.rn.f(float %354, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !32
  %.03.i115 = select i1 %.not16.i114, float %360, float %359, !dbg !32
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not17.i116 = icmp eq i32 %361, 0, !dbg !32
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %354, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !32
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %354, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !32
  %.04.i117 = select i1 %.not17.i116, float %363, float %362, !dbg !32
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not18.i118 = icmp eq i32 %364, 0, !dbg !32
  %.06.i119 = select i1 %.not18.i118, float %167, float %166, !dbg !32
  %365 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !32
  br i1 %365, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !32

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %366 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not19.i121 = icmp eq i32 %366, 0, !dbg !32
  %.07.i122 = select i1 %.not19.i121, float %167, float %166, !dbg !32
  %367 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !32
  br i1 %367, label %__nv_fmul_rn.exit.i.i.i160, label %371, !dbg !32

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not27.i161 = icmp eq i32 %368, 0, !dbg !32
  %369 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %47, float 0.000000e+00) #4, !dbg !32
  %370 = tail call float @llvm.nvvm.mul.rn.f(float %47, float 0.000000e+00) #4, !dbg !32
  %.08.i162 = select i1 %.not27.i161, float %370, float %369, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !32

371:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %372 = bitcast float %47 to i32, !dbg !32
  %373 = lshr i32 %372, 23, !dbg !32
  %374 = and i32 %373, 224, !dbg !32
  %375 = add nsw i32 %374, -128, !dbg !32
  %376 = shl i32 %372, 8, !dbg !32
  %377 = or i32 %376, -2147483648, !dbg !32
  %378 = lshr exact i32 %375, 5, !dbg !32
  br label %379, !dbg !32

379:                                              ; preds = %371, %379
  %indvars.iv185 = phi i64 [ 0, %371 ], [ %indvars.iv.next186, %379 ]
  %hi.i.i.i.0.i123170 = phi i32 [ 0, %371 ], [ %384, %379 ]
  %380 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv185, !dbg !32
  %381 = load i32, ptr addrspace(1) %380, align 4, !dbg !32
  %382 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %381, i32 %377, i32 %hi.i.i.i.0.i123170) #5, !dbg !32, !srcloc !28
  %383 = extractvalue { i32, i32 } %382, 0, !dbg !32
  %384 = extractvalue { i32, i32 } %382, 1, !dbg !32
  %385 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv185, !dbg !32
  store i32 %383, ptr %385, align 4, !dbg !32
  %indvars.iv.next186 = add nuw nsw i64 %indvars.iv185, 1, !dbg !32
  %exitcond187.not = icmp eq i64 %indvars.iv.next186, 6, !dbg !32
  br i1 %exitcond187.not, label %386, label %379, !dbg !32, !llvm.loop !34

386:                                              ; preds = %379
  %387 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !32
  store i32 %384, ptr %387, align 4, !dbg !32
  %388 = and i32 %373, 31, !dbg !32
  %389 = sub nsw i32 6, %378, !dbg !32
  %390 = sext i32 %389 to i64, !dbg !32
  %391 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %390, !dbg !32
  %392 = load i32, ptr %391, align 4, !dbg !32
  %393 = sub nsw i32 5, %378, !dbg !32
  %394 = sext i32 %393 to i64, !dbg !32
  %395 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %394, !dbg !32
  %396 = load i32, ptr %395, align 4, !dbg !32
  %.not20.i125 = icmp eq i32 %388, 0, !dbg !32
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %397, !dbg !32

397:                                              ; preds = %386
  %398 = sub nsw i32 4, %378, !dbg !32
  %399 = sub nuw nsw i32 32, %388, !dbg !32
  %400 = shl i32 %392, %388, !dbg !32
  %401 = lshr i32 %396, %399, !dbg !32
  %402 = add i32 %401, %400, !dbg !32
  %403 = shl i32 %396, %388, !dbg !32
  %404 = sext i32 %398 to i64, !dbg !32
  %405 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %404, !dbg !32
  %406 = load i32, ptr %405, align 4, !dbg !32
  %407 = lshr i32 %406, %399, !dbg !32
  %408 = add i32 %407, %403, !dbg !32
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !32

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %397, %386
  %hi.i.i.i.1.i127 = phi i32 [ %402, %397 ], [ %392, %386 ], !dbg !32
  %lo.i.i.i.0.i128 = phi i32 [ %408, %397 ], [ %396, %386 ], !dbg !32
  %409 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !32
  %410 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !32
  %411 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !32
  %412 = lshr i32 %410, 31, !dbg !32
  %413 = add nuw nsw i32 %412, %409, !dbg !32
  %414 = sub nsw i32 0, %413, !dbg !32
  %.not2123.i129 = icmp slt i32 %372, 0, !dbg !32
  %spec.select.i130 = select i1 %.not2123.i129, i32 %414, i32 %413, !dbg !32
  %415 = xor i32 %410, %372, !dbg !32
  %.lobit.i131 = ashr i32 %410, 31, !dbg !32
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %410, !dbg !32
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %411, !dbg !32
  %416 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !32
  %417 = shl nuw i64 %416, 32, !dbg !32
  %418 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !32
  %419 = or disjoint i64 %417, %418, !dbg !32
  %420 = sitofp i64 %419 to double, !dbg !32
  %421 = fmul double %420, 0x3BF921FB54442D19, !dbg !32
  %422 = fptrunc double %421 to float, !dbg !32
  %423 = fneg float %422, !dbg !32
  %.not2526.i135 = icmp slt i32 %415, 0, !dbg !32
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %423, float %422, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !32

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !32
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !32
  %424 = add i32 %i.i.1.i138, 1, !dbg !32
  %425 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not28.i140 = icmp eq i32 %425, 0, !dbg !32
  %426 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !32
  %427 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !32
  %.011.i141 = select i1 %.not28.i140, float %427, float %426, !dbg !32
  %428 = and i32 %i.i.1.i138, 1, !dbg !32
  %.not29.not.i142 = icmp eq i32 %428, 0, !dbg !32
  %429 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !32
  %430 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not30.i143 = icmp eq i32 %430, 0, !dbg !32
  %431 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %429, float 0.000000e+00) #4, !dbg !32
  %432 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %429, float 0.000000e+00) #4, !dbg !32
  %.012.i144 = select i1 %.not30.i143, float %432, float %431, !dbg !32
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !32

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not31.i158 = icmp eq i32 %433, 0, !dbg !32
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !32
  %435 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !32
  %.013.i159 = select i1 %.not31.i158, float %435, float %434, !dbg !32
  br label %__internal_fmad.exit2.i.i.i145, !dbg !32

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %436 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !32
  %437 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !32
  %438 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !32
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not32.i146 = icmp eq i32 %439, 0, !dbg !32
  %440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %438, float %.011.i141, float %437) #4, !dbg !32
  %441 = tail call float @llvm.nvvm.fma.rn.f(float %438, float %.011.i141, float %437) #4, !dbg !32
  %.010.i147 = select i1 %.not32.i146, float %441, float %440, !dbg !32
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not33.i148 = icmp eq i32 %442, 0, !dbg !32
  %443 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %436) #4, !dbg !32
  %444 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %436) #4, !dbg !32
  %.09.i149 = select i1 %.not33.i148, float %444, float %443, !dbg !32
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not34.i150 = icmp eq i32 %445, 0, !dbg !32
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %429) #4, !dbg !32
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %429) #4, !dbg !32
  %.05.i151 = select i1 %.not34.i150, float %447, float %446, !dbg !32
  %448 = and i32 %424, 2, !dbg !32
  %.not35.i152 = icmp eq i32 %448, 0, !dbg !32
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !32

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %449 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !32
  %.not36.i154 = icmp eq i32 %449, 0, !dbg !32
  %450 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !32
  %451 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !32
  %.0.i155 = select i1 %.not36.i154, float %451, float %450, !dbg !32
  br label %__nv_cosf.exit163, !dbg !32

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !32
  %452 = getelementptr float, ptr addrspace(1) %4, i64 %16, !dbg !35
  %453 = bitcast float %z.i.i.0.i to i32, !dbg !36
  %454 = bitcast float %z.i.i.0.i51 to i32, !dbg !36
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %453, i32 %454, ptr addrspace(1) %452, i1 %14) #4, !dbg !36
  %455 = getelementptr float, ptr addrspace(1) %5, i64 %16, !dbg !37
  %456 = bitcast float %z.i.i.0.i102 to i32, !dbg !38
  %457 = bitcast float %z.i.i.0.i156 to i32, !dbg !38
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %456, i32 %457, ptr addrspace(1) %455, i1 %14) #4, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmjxwxoz4coi2c3rdpqryc2odus44xvwwx2upkkao6fsb5fgv7k6.py", directory: "inductor_cache/mj")
!4 = !{ptr @triton_poi_fused_add_cos_mul_sin_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_add_cos_mul_sin_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_add_cos_mul_sin_0", linkageName: "triton_poi_fused_add_cos_mul_sin_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 26, column: 30, scope: !7)
!17 = !DILocation(line: 26, column: 35, scope: !7)
!18 = !DILocation(line: 27, column: 30, scope: !7)
!19 = !DILocation(line: 27, column: 35, scope: !7)
!20 = !DILocation(line: 28, column: 30, scope: !7)
!21 = !DILocation(line: 28, column: 35, scope: !7)
!22 = !DILocation(line: 29, column: 30, scope: !7)
!23 = !DILocation(line: 29, column: 35, scope: !7)
!24 = !DILocation(line: 30, column: 18, scope: !7)
!25 = !DILocation(line: 31, column: 18, scope: !7)
!26 = !DILocation(line: 32, column: 18, scope: !7)
!27 = !DILocation(line: 33, column: 23, scope: !7)
!28 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.unroll.count", i32 1}
!31 = distinct !{!31, !30}
!32 = !DILocation(line: 34, column: 23, scope: !7)
!33 = distinct !{!33, !30}
!34 = distinct !{!34, !30}
!35 = !DILocation(line: 35, column: 25, scope: !7)
!36 = !DILocation(line: 35, column: 36, scope: !7)
!37 = !DILocation(line: 36, column: 25, scope: !7)
!38 = !DILocation(line: 36, column: 36, scope: !7)
!39 = !DILocation(line: 36, column: 4, scope: !7)
