; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_per_fused_add_div_log_max_mean_min_mul_neg_pow_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %9 = and i32 %8, 31, !dbg !10
  %10 = lshr i32 %8, 5, !dbg !10
  %11 = shl i32 %8, 2, !dbg !10
  %12 = and i32 %11, 252, !dbg !10
  %13 = zext nneg i32 %12 to i64, !dbg !11
  %14 = getelementptr float, ptr addrspace(1) %0, i64 %13, !dbg !11
  %15 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %14, i1 true) #4, !dbg !12
  %16 = extractvalue { i32, i32, i32, i32 } %15, 0, !dbg !12
  %17 = extractvalue { i32, i32, i32, i32 } %15, 1, !dbg !12
  %18 = extractvalue { i32, i32, i32, i32 } %15, 2, !dbg !12
  %19 = extractvalue { i32, i32, i32, i32 } %15, 3, !dbg !12
  %20 = bitcast i32 %16 to float, !dbg !12
  %21 = bitcast i32 %17 to float, !dbg !12
  %22 = bitcast i32 %18 to float, !dbg !12
  %23 = bitcast i32 %19 to float, !dbg !12
  %24 = getelementptr float, ptr addrspace(1) %2, i64 %13, !dbg !13
  %25 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %24, i1 true) #4, !dbg !14
  %26 = extractvalue { i32, i32, i32, i32 } %25, 0, !dbg !14
  %27 = extractvalue { i32, i32, i32, i32 } %25, 1, !dbg !14
  %28 = extractvalue { i32, i32, i32, i32 } %25, 2, !dbg !14
  %29 = extractvalue { i32, i32, i32, i32 } %25, 3, !dbg !14
  %30 = bitcast i32 %26 to float, !dbg !14
  %31 = bitcast i32 %27 to float, !dbg !14
  %32 = bitcast i32 %28 to float, !dbg !14
  %33 = bitcast i32 %29 to float, !dbg !14
  %34 = getelementptr float, ptr addrspace(1) %3, i64 %13, !dbg !15
  %35 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %34, i1 true) #4, !dbg !16
  %36 = extractvalue { i32, i32, i32, i32 } %35, 0, !dbg !16
  %37 = extractvalue { i32, i32, i32, i32 } %35, 1, !dbg !16
  %38 = extractvalue { i32, i32, i32, i32 } %35, 2, !dbg !16
  %39 = extractvalue { i32, i32, i32, i32 } %35, 3, !dbg !16
  %40 = bitcast i32 %36 to float, !dbg !16
  %41 = bitcast i32 %37 to float, !dbg !16
  %42 = bitcast i32 %38 to float, !dbg !16
  %43 = bitcast i32 %39 to float, !dbg !16
  %44 = getelementptr float, ptr addrspace(1) %4, i64 %13, !dbg !17
  %45 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %44, i1 true) #4, !dbg !18
  %46 = extractvalue { i32, i32, i32, i32 } %45, 0, !dbg !18
  %47 = extractvalue { i32, i32, i32, i32 } %45, 1, !dbg !18
  %48 = extractvalue { i32, i32, i32, i32 } %45, 2, !dbg !18
  %49 = extractvalue { i32, i32, i32, i32 } %45, 3, !dbg !18
  %50 = bitcast i32 %46 to float, !dbg !18
  %51 = bitcast i32 %47 to float, !dbg !18
  %52 = bitcast i32 %48 to float, !dbg !18
  %53 = bitcast i32 %49 to float, !dbg !18
  %54 = getelementptr float, ptr addrspace(1) %5, i64 %13, !dbg !19
  %55 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %54, i1 true) #4, !dbg !20
  %56 = extractvalue { i32, i32, i32, i32 } %55, 0, !dbg !20
  %57 = extractvalue { i32, i32, i32, i32 } %55, 1, !dbg !20
  %58 = extractvalue { i32, i32, i32, i32 } %55, 2, !dbg !20
  %59 = extractvalue { i32, i32, i32, i32 } %55, 3, !dbg !20
  %60 = bitcast i32 %56 to float, !dbg !20
  %61 = bitcast i32 %57 to float, !dbg !20
  %62 = bitcast i32 %58 to float, !dbg !20
  %63 = bitcast i32 %59 to float, !dbg !20
  %64 = fmul float %20, %30, !dbg !21
  %65 = fmul float %21, %31, !dbg !21
  %66 = fmul float %22, %32, !dbg !21
  %67 = fmul float %23, %33, !dbg !21
  %68 = fmul float %64, 2.000000e+00, !dbg !22
  %69 = fmul float %65, 2.000000e+00, !dbg !22
  %70 = fmul float %66, 2.000000e+00, !dbg !22
  %71 = fmul float %67, 2.000000e+00, !dbg !22
  %72 = fadd float %68, 0x3F1A36E2E0000000, !dbg !23
  %73 = fadd float %69, 0x3F1A36E2E0000000, !dbg !23
  %74 = fadd float %70, 0x3F1A36E2E0000000, !dbg !23
  %75 = fadd float %71, 0x3F1A36E2E0000000, !dbg !23
  %76 = fsub float %40, %64, !dbg !24
  %77 = fsub float %41, %65, !dbg !24
  %78 = fsub float %42, %66, !dbg !24
  %79 = fsub float %43, %67, !dbg !24
  %80 = fmul float %76, 2.000000e+00, !dbg !25
  %81 = fmul float %77, 2.000000e+00, !dbg !25
  %82 = fmul float %78, 2.000000e+00, !dbg !25
  %83 = fmul float %79, 2.000000e+00, !dbg !25
  %84 = fadd float %80, 0x3F4D7DBF40000000, !dbg !26
  %85 = fadd float %81, 0x3F4D7DBF40000000, !dbg !26
  %86 = fadd float %82, 0x3F4D7DBF40000000, !dbg !26
  %87 = fadd float %83, 0x3F4D7DBF40000000, !dbg !26
  %88 = fmul float %72, %84, !dbg !27
  %89 = fmul float %73, %85, !dbg !27
  %90 = fmul float %74, %86, !dbg !27
  %91 = fmul float %75, %87, !dbg !27
  %92 = fmul float %20, %20, !dbg !28
  %93 = fmul float %21, %21, !dbg !28
  %94 = fmul float %22, %22, !dbg !28
  %95 = fmul float %23, %23, !dbg !28
  %96 = fmul float %30, %30, !dbg !29
  %97 = fmul float %31, %31, !dbg !29
  %98 = fmul float %32, %32, !dbg !29
  %99 = fmul float %33, %33, !dbg !29
  %100 = fadd float %92, %96, !dbg !30
  %101 = fadd float %93, %97, !dbg !30
  %102 = fadd float %94, %98, !dbg !30
  %103 = fadd float %95, %99, !dbg !30
  %104 = fadd float %100, 0x3F1A36E2E0000000, !dbg !31
  %105 = fadd float %101, 0x3F1A36E2E0000000, !dbg !31
  %106 = fadd float %102, 0x3F1A36E2E0000000, !dbg !31
  %107 = fadd float %103, 0x3F1A36E2E0000000, !dbg !31
  %108 = fsub float %50, %92, !dbg !32
  %109 = fsub float %51, %93, !dbg !32
  %110 = fsub float %52, %94, !dbg !32
  %111 = fsub float %53, %95, !dbg !32
  %112 = fsub float %60, %96, !dbg !33
  %113 = fsub float %61, %97, !dbg !33
  %114 = fsub float %62, %98, !dbg !33
  %115 = fsub float %63, %99, !dbg !33
  %116 = fadd float %108, %112, !dbg !34
  %117 = fadd float %109, %113, !dbg !34
  %118 = fadd float %110, %114, !dbg !34
  %119 = fadd float %111, %115, !dbg !34
  %120 = fadd float %116, 0x3F4D7DBF40000000, !dbg !35
  %121 = fadd float %117, 0x3F4D7DBF40000000, !dbg !35
  %122 = fadd float %118, 0x3F4D7DBF40000000, !dbg !35
  %123 = fadd float %119, 0x3F4D7DBF40000000, !dbg !35
  %124 = fmul float %104, %120, !dbg !36
  %125 = fmul float %105, %121, !dbg !36
  %126 = fmul float %106, %122, !dbg !36
  %127 = fmul float %107, %123, !dbg !36
  %128 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %88, float %124) #4, !dbg !37
  %129 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %89, float %125) #4, !dbg !37
  %130 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %90, float %126) #4, !dbg !37
  %131 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %91, float %127) #4, !dbg !37
  %132 = fcmp olt float %128, %129, !dbg !38
  %133 = fcmp uno float %128, 0.000000e+00, !dbg !43
  %134 = or i1 %133, %132, !dbg !44
  %135 = select i1 %134, float %128, float %129, !dbg !45
  %136 = fcmp olt float %135, %130, !dbg !38
  %137 = fcmp uno float %135, 0.000000e+00, !dbg !43
  %138 = or i1 %136, %137, !dbg !44
  %139 = select i1 %138, float %135, float %130, !dbg !45
  %140 = fcmp olt float %139, %131, !dbg !38
  %141 = fcmp uno float %139, 0.000000e+00, !dbg !43
  %142 = or i1 %140, %141, !dbg !44
  %143 = select i1 %142, float %139, float %131, !dbg !45
  %144 = bitcast float %143 to i32, !dbg !46
  %145 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %144, i32 16, i32 31), !dbg !46
  %146 = bitcast i32 %145 to float, !dbg !46
  %147 = fcmp olt float %143, %146, !dbg !38
  %148 = fcmp uno float %143, 0.000000e+00, !dbg !43
  %149 = or i1 %147, %148, !dbg !44
  %150 = select i1 %149, float %143, float %146, !dbg !45
  %151 = bitcast float %150 to i32, !dbg !46
  %152 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %151, i32 8, i32 31), !dbg !46
  %153 = bitcast i32 %152 to float, !dbg !46
  %154 = fcmp olt float %150, %153, !dbg !38
  %155 = fcmp uno float %150, 0.000000e+00, !dbg !43
  %156 = or i1 %154, %155, !dbg !44
  %157 = select i1 %156, float %150, float %153, !dbg !45
  %158 = bitcast float %157 to i32, !dbg !46
  %159 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %158, i32 4, i32 31), !dbg !46
  %160 = bitcast i32 %159 to float, !dbg !46
  %161 = fcmp olt float %157, %160, !dbg !38
  %162 = fcmp uno float %157, 0.000000e+00, !dbg !43
  %163 = or i1 %161, %162, !dbg !44
  %164 = select i1 %163, float %157, float %160, !dbg !45
  %165 = bitcast float %164 to i32, !dbg !46
  %166 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %165, i32 2, i32 31), !dbg !46
  %167 = bitcast i32 %166 to float, !dbg !46
  %168 = fcmp olt float %164, %167, !dbg !38
  %169 = fcmp uno float %164, 0.000000e+00, !dbg !43
  %170 = or i1 %168, %169, !dbg !44
  %171 = select i1 %170, float %164, float %167, !dbg !45
  %172 = bitcast float %171 to i32, !dbg !46
  %173 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %172, i32 1, i32 31), !dbg !46
  %174 = bitcast i32 %173 to float, !dbg !46
  %175 = fcmp olt float %171, %174, !dbg !38
  %176 = fcmp uno float %171, 0.000000e+00, !dbg !43
  %177 = or i1 %175, %176, !dbg !44
  %178 = icmp eq i32 %9, 0, !dbg !46
  %179 = and i32 %10, 1, !dbg !46
  %180 = getelementptr float, ptr addrspace(3) @global_smem, i32 %179, !dbg !46
  %181 = select i1 %177, i32 %172, i32 %173, !dbg !45
  %182 = insertelement <1 x i32> poison, i32 %181, i64 0, !dbg !46
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %180, <1 x i32> %182, i1 %178) #4, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %183 = icmp slt i32 %8, 2, !dbg !46
  %184 = getelementptr float, ptr addrspace(3) @global_smem, i32 %8, !dbg !46
  %185 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %184, i1 %183) #4, !dbg !46
  %186 = bitcast i32 %185 to float, !dbg !46
  %187 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %185, i32 1, i32 31), !dbg !46
  %188 = bitcast i32 %187 to float, !dbg !46
  %189 = fcmp olt float %186, %188, !dbg !38
  %190 = fcmp uno float %186, 0.000000e+00, !dbg !43
  %191 = or i1 %190, %189, !dbg !44
  %192 = and i32 %8, 1, !dbg !46
  %193 = icmp eq i32 %192, 0, !dbg !46
  %194 = and i1 %183, %193, !dbg !46
  %195 = select i1 %191, i32 %185, i32 %187, !dbg !45
  %196 = insertelement <1 x i32> poison, i32 %195, i64 0, !dbg !46
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %184, <1 x i32> %196, i1 %194) #4, !dbg !46
  tail call void @llvm.nvvm.barrier0(), !dbg !46
  %197 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !46
  %198 = fadd float %197, 0.000000e+00, !dbg !47
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %199 = fcmp ogt float %128, %129, !dbg !51
  %200 = or i1 %133, %199, !dbg !52
  %201 = select i1 %200, float %128, float %129, !dbg !53
  %202 = fcmp ogt float %201, %130, !dbg !51
  %203 = fcmp uno float %201, 0.000000e+00, !dbg !54
  %204 = or i1 %202, %203, !dbg !52
  %205 = select i1 %204, float %201, float %130, !dbg !53
  %206 = fcmp ogt float %205, %131, !dbg !51
  %207 = fcmp uno float %205, 0.000000e+00, !dbg !54
  %208 = or i1 %206, %207, !dbg !52
  %209 = select i1 %208, float %205, float %131, !dbg !53
  %210 = bitcast float %209 to i32, !dbg !49
  %211 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %210, i32 16, i32 31), !dbg !49
  %212 = bitcast i32 %211 to float, !dbg !49
  %213 = fcmp ogt float %209, %212, !dbg !51
  %214 = fcmp uno float %209, 0.000000e+00, !dbg !54
  %215 = or i1 %214, %213, !dbg !52
  %216 = select i1 %215, float %209, float %212, !dbg !53
  %217 = bitcast float %216 to i32, !dbg !49
  %218 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %217, i32 8, i32 31), !dbg !49
  %219 = bitcast i32 %218 to float, !dbg !49
  %220 = fcmp ogt float %216, %219, !dbg !51
  %221 = fcmp uno float %216, 0.000000e+00, !dbg !54
  %222 = or i1 %220, %221, !dbg !52
  %223 = select i1 %222, float %216, float %219, !dbg !53
  %224 = bitcast float %223 to i32, !dbg !49
  %225 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %224, i32 4, i32 31), !dbg !49
  %226 = bitcast i32 %225 to float, !dbg !49
  %227 = fcmp ogt float %223, %226, !dbg !51
  %228 = fcmp uno float %223, 0.000000e+00, !dbg !54
  %229 = or i1 %227, %228, !dbg !52
  %230 = select i1 %229, float %223, float %226, !dbg !53
  %231 = bitcast float %230 to i32, !dbg !49
  %232 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %231, i32 2, i32 31), !dbg !49
  %233 = bitcast i32 %232 to float, !dbg !49
  %234 = fcmp ogt float %230, %233, !dbg !51
  %235 = fcmp uno float %230, 0.000000e+00, !dbg !54
  %236 = or i1 %234, %235, !dbg !52
  %237 = select i1 %236, float %230, float %233, !dbg !53
  %238 = bitcast float %237 to i32, !dbg !49
  %239 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %238, i32 1, i32 31), !dbg !49
  %240 = bitcast i32 %239 to float, !dbg !49
  %241 = fcmp ogt float %237, %240, !dbg !51
  %242 = fcmp uno float %237, 0.000000e+00, !dbg !54
  %243 = or i1 %241, %242, !dbg !52
  %244 = select i1 %243, i32 %238, i32 %239, !dbg !53
  %245 = insertelement <1 x i32> poison, i32 %244, i64 0, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %180, <1 x i32> %245, i1 %178) #4, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %246 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %184, i1 %183) #4, !dbg !49
  %247 = bitcast i32 %246 to float, !dbg !49
  %248 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %246, i32 1, i32 31), !dbg !49
  %249 = bitcast i32 %248 to float, !dbg !49
  %250 = fcmp ogt float %247, %249, !dbg !51
  %251 = fcmp uno float %247, 0.000000e+00, !dbg !54
  %252 = or i1 %251, %250, !dbg !52
  %253 = select i1 %252, i32 %246, i32 %248, !dbg !53
  %254 = insertelement <1 x i32> poison, i32 %253, i64 0, !dbg !49
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %184, <1 x i32> %254, i1 %194) #4, !dbg !49
  tail call void @llvm.nvvm.barrier0(), !dbg !49
  %255 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !49
  %256 = fadd float %255, 0.000000e+00, !dbg !55
  %257 = fsub float %128, %198, !dbg !57
  %258 = fsub float %129, %198, !dbg !57
  %259 = fsub float %130, %198, !dbg !57
  %260 = fsub float %131, %198, !dbg !57
  %261 = fsub float %256, %198, !dbg !58
  %262 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %257, float %261) #4, !dbg !59
  %263 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %258, float %261) #4, !dbg !59
  %264 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %259, float %261) #4, !dbg !59
  %265 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %260, float %261) #4, !dbg !59
  %266 = fadd float %262, 0x3E45798EE0000000, !dbg !60
  %267 = fadd float %263, 0x3E45798EE0000000, !dbg !60
  %268 = fadd float %264, 0x3E45798EE0000000, !dbg !60
  %269 = fadd float %265, 0x3E45798EE0000000, !dbg !60
  %270 = fcmp olt float %266, 0x3810000000000000, !dbg !61
  %271 = fmul float %266, 0x4160000000000000, !dbg !61
  %.02.i = select i1 %270, float %271, float %266, !dbg !61
  %i.i.0.i = select i1 %270, float -2.300000e+01, float 0.000000e+00, !dbg !61
  %272 = bitcast float %.02.i to i32, !dbg !61
  %273 = add i32 %272, -1059760811, !dbg !61
  %274 = and i32 %273, -8388608, !dbg !61
  %275 = sub i32 %272, %274, !dbg !61
  %276 = bitcast i32 %275 to float, !dbg !61
  %277 = sitofp i32 %274 to float, !dbg !61
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not.i = icmp eq i32 %278, 0, !dbg !61
  %279 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %277, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !61
  %280 = tail call float @llvm.nvvm.fma.rn.f(float %277, float 0x3E80000000000000, float %i.i.0.i) #4, !dbg !61
  %.08.i = select i1 %.not.i, float %280, float %279, !dbg !61
  %281 = fadd float %276, -1.000000e+00, !dbg !61
  %282 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not1.i = icmp eq i32 %282, 0, !dbg !61
  %283 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %281, float 0x3FC2073EC0000000) #4, !dbg !61
  %284 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %281, float 0x3FC2073EC0000000) #4, !dbg !61
  %.010.i = select i1 %.not1.i, float %284, float %283, !dbg !61
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not2.i = icmp eq i32 %285, 0, !dbg !61
  %286 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %281, float 0xBFBF19B980000000) #4, !dbg !61
  %287 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %281, float 0xBFBF19B980000000) #4, !dbg !61
  %.011.i = select i1 %.not2.i, float %287, float %286, !dbg !61
  %288 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not3.i = icmp eq i32 %288, 0, !dbg !61
  %289 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %281, float 0x3FC1E52AA0000000) #4, !dbg !61
  %290 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %281, float 0x3FC1E52AA0000000) #4, !dbg !61
  %.012.i = select i1 %.not3.i, float %290, float %289, !dbg !61
  %291 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not4.i = icmp eq i32 %291, 0, !dbg !61
  %292 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %281, float 0xBFC55B1720000000) #4, !dbg !61
  %293 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %281, float 0xBFC55B1720000000) #4, !dbg !61
  %.09.i = select i1 %.not4.i, float %293, float %292, !dbg !61
  %294 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not5.i = icmp eq i32 %294, 0, !dbg !61
  %295 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %281, float 0x3FC99DA160000000) #4, !dbg !61
  %296 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %281, float 0x3FC99DA160000000) #4, !dbg !61
  %.05.i = select i1 %.not5.i, float %296, float %295, !dbg !61
  %297 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not6.i = icmp eq i32 %297, 0, !dbg !61
  %298 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %281, float 0xBFCFFFE440000000) #4, !dbg !61
  %299 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %281, float 0xBFCFFFE440000000) #4, !dbg !61
  %.01.i = select i1 %.not6.i, float %299, float %298, !dbg !61
  %300 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not7.i = icmp eq i32 %300, 0, !dbg !61
  %301 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %281, float 0x3FD5554F00000000) #4, !dbg !61
  %302 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %281, float 0x3FD5554F00000000) #4, !dbg !61
  %.0.i = select i1 %.not7.i, float %302, float %301, !dbg !61
  %303 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not8.i = icmp eq i32 %303, 0, !dbg !61
  %304 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %281, float -5.000000e-01) #4, !dbg !61
  %305 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %281, float -5.000000e-01) #4, !dbg !61
  %.07.i = select i1 %.not8.i, float %305, float %304, !dbg !61
  %306 = fmul float %281, %.07.i, !dbg !61
  %307 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not9.i = icmp eq i32 %307, 0, !dbg !61
  %308 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %306, float %281, float %281) #4, !dbg !61
  %309 = tail call float @llvm.nvvm.fma.rn.f(float %306, float %281, float %281) #4, !dbg !61
  %.06.i = select i1 %.not9.i, float %309, float %308, !dbg !61
  %310 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not10.i = icmp eq i32 %310, 0, !dbg !61
  %311 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !61
  %312 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float 0x3FE62E4300000000, float %.06.i) #4, !dbg !61
  %.04.i = select i1 %.not10.i, float %312, float %311, !dbg !61
  %313 = icmp ugt i32 %272, 2139095039, !dbg !61
  br i1 %313, label %__nv_fmaf_rn.exit.i.i, label %__nv_logf.exit, !dbg !61

__nv_fmaf_rn.exit.i.i:                            ; preds = %7
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not11.i = icmp eq i32 %314, 0, !dbg !61
  %315 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %316 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %.03.i = select i1 %.not11.i, float %316, float %315, !dbg !61
  br label %__nv_logf.exit, !dbg !61

__nv_logf.exit:                                   ; preds = %7, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %.04.i, %7 ], !dbg !61
  %317 = fcmp olt float %267, 0x3810000000000000, !dbg !61
  %318 = fmul float %267, 0x4160000000000000, !dbg !61
  %.02.i1 = select i1 %317, float %318, float %267, !dbg !61
  %i.i.0.i2 = select i1 %317, float -2.300000e+01, float 0.000000e+00, !dbg !61
  %319 = bitcast float %.02.i1 to i32, !dbg !61
  %320 = add i32 %319, -1059760811, !dbg !61
  %321 = and i32 %320, -8388608, !dbg !61
  %322 = sub i32 %319, %321, !dbg !61
  %323 = bitcast i32 %322 to float, !dbg !61
  %324 = sitofp i32 %321 to float, !dbg !61
  %325 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not.i3 = icmp eq i32 %325, 0, !dbg !61
  %326 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %324, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !61
  %327 = tail call float @llvm.nvvm.fma.rn.f(float %324, float 0x3E80000000000000, float %i.i.0.i2) #4, !dbg !61
  %.08.i4 = select i1 %.not.i3, float %327, float %326, !dbg !61
  %328 = fadd float %323, -1.000000e+00, !dbg !61
  %329 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not1.i5 = icmp eq i32 %329, 0, !dbg !61
  %330 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %328, float 0x3FC2073EC0000000) #4, !dbg !61
  %331 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %328, float 0x3FC2073EC0000000) #4, !dbg !61
  %.010.i6 = select i1 %.not1.i5, float %331, float %330, !dbg !61
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not2.i7 = icmp eq i32 %332, 0, !dbg !61
  %333 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i6, float %328, float 0xBFBF19B980000000) #4, !dbg !61
  %334 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i6, float %328, float 0xBFBF19B980000000) #4, !dbg !61
  %.011.i8 = select i1 %.not2.i7, float %334, float %333, !dbg !61
  %335 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not3.i9 = icmp eq i32 %335, 0, !dbg !61
  %336 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i8, float %328, float 0x3FC1E52AA0000000) #4, !dbg !61
  %337 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i8, float %328, float 0x3FC1E52AA0000000) #4, !dbg !61
  %.012.i10 = select i1 %.not3.i9, float %337, float %336, !dbg !61
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not4.i11 = icmp eq i32 %338, 0, !dbg !61
  %339 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i10, float %328, float 0xBFC55B1720000000) #4, !dbg !61
  %340 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i10, float %328, float 0xBFC55B1720000000) #4, !dbg !61
  %.09.i12 = select i1 %.not4.i11, float %340, float %339, !dbg !61
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not5.i13 = icmp eq i32 %341, 0, !dbg !61
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i12, float %328, float 0x3FC99DA160000000) #4, !dbg !61
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i12, float %328, float 0x3FC99DA160000000) #4, !dbg !61
  %.05.i14 = select i1 %.not5.i13, float %343, float %342, !dbg !61
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not6.i15 = icmp eq i32 %344, 0, !dbg !61
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i14, float %328, float 0xBFCFFFE440000000) #4, !dbg !61
  %346 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i14, float %328, float 0xBFCFFFE440000000) #4, !dbg !61
  %.01.i16 = select i1 %.not6.i15, float %346, float %345, !dbg !61
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not7.i17 = icmp eq i32 %347, 0, !dbg !61
  %348 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i16, float %328, float 0x3FD5554F00000000) #4, !dbg !61
  %349 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i16, float %328, float 0x3FD5554F00000000) #4, !dbg !61
  %.0.i18 = select i1 %.not7.i17, float %349, float %348, !dbg !61
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not8.i19 = icmp eq i32 %350, 0, !dbg !61
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i18, float %328, float -5.000000e-01) #4, !dbg !61
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i18, float %328, float -5.000000e-01) #4, !dbg !61
  %.07.i20 = select i1 %.not8.i19, float %352, float %351, !dbg !61
  %353 = fmul float %328, %.07.i20, !dbg !61
  %354 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not9.i21 = icmp eq i32 %354, 0, !dbg !61
  %355 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %353, float %328, float %328) #4, !dbg !61
  %356 = tail call float @llvm.nvvm.fma.rn.f(float %353, float %328, float %328) #4, !dbg !61
  %.06.i22 = select i1 %.not9.i21, float %356, float %355, !dbg !61
  %357 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not10.i23 = icmp eq i32 %357, 0, !dbg !61
  %358 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !61
  %359 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i4, float 0x3FE62E4300000000, float %.06.i22) #4, !dbg !61
  %.04.i24 = select i1 %.not10.i23, float %359, float %358, !dbg !61
  %360 = icmp ugt i32 %319, 2139095039, !dbg !61
  br i1 %360, label %__nv_fmaf_rn.exit.i.i27, label %__nv_logf.exit30, !dbg !61

__nv_fmaf_rn.exit.i.i27:                          ; preds = %__nv_logf.exit
  %361 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not11.i28 = icmp eq i32 %361, 0, !dbg !61
  %362 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %363 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i1, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %.03.i29 = select i1 %.not11.i28, float %363, float %362, !dbg !61
  br label %__nv_logf.exit30, !dbg !61

__nv_logf.exit30:                                 ; preds = %__nv_logf.exit, %__nv_fmaf_rn.exit.i.i27
  %r.i.0.i25 = phi float [ %.03.i29, %__nv_fmaf_rn.exit.i.i27 ], [ %.04.i24, %__nv_logf.exit ], !dbg !61
  %364 = fcmp olt float %268, 0x3810000000000000, !dbg !61
  %365 = fmul float %268, 0x4160000000000000, !dbg !61
  %.02.i31 = select i1 %364, float %365, float %268, !dbg !61
  %i.i.0.i32 = select i1 %364, float -2.300000e+01, float 0.000000e+00, !dbg !61
  %366 = bitcast float %.02.i31 to i32, !dbg !61
  %367 = add i32 %366, -1059760811, !dbg !61
  %368 = and i32 %367, -8388608, !dbg !61
  %369 = sub i32 %366, %368, !dbg !61
  %370 = bitcast i32 %369 to float, !dbg !61
  %371 = sitofp i32 %368 to float, !dbg !61
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not.i33 = icmp eq i32 %372, 0, !dbg !61
  %373 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %371, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !61
  %374 = tail call float @llvm.nvvm.fma.rn.f(float %371, float 0x3E80000000000000, float %i.i.0.i32) #4, !dbg !61
  %.08.i34 = select i1 %.not.i33, float %374, float %373, !dbg !61
  %375 = fadd float %370, -1.000000e+00, !dbg !61
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not1.i35 = icmp eq i32 %376, 0, !dbg !61
  %377 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %375, float 0x3FC2073EC0000000) #4, !dbg !61
  %378 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %375, float 0x3FC2073EC0000000) #4, !dbg !61
  %.010.i36 = select i1 %.not1.i35, float %378, float %377, !dbg !61
  %379 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not2.i37 = icmp eq i32 %379, 0, !dbg !61
  %380 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i36, float %375, float 0xBFBF19B980000000) #4, !dbg !61
  %381 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i36, float %375, float 0xBFBF19B980000000) #4, !dbg !61
  %.011.i38 = select i1 %.not2.i37, float %381, float %380, !dbg !61
  %382 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not3.i39 = icmp eq i32 %382, 0, !dbg !61
  %383 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i38, float %375, float 0x3FC1E52AA0000000) #4, !dbg !61
  %384 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i38, float %375, float 0x3FC1E52AA0000000) #4, !dbg !61
  %.012.i40 = select i1 %.not3.i39, float %384, float %383, !dbg !61
  %385 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not4.i41 = icmp eq i32 %385, 0, !dbg !61
  %386 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i40, float %375, float 0xBFC55B1720000000) #4, !dbg !61
  %387 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i40, float %375, float 0xBFC55B1720000000) #4, !dbg !61
  %.09.i42 = select i1 %.not4.i41, float %387, float %386, !dbg !61
  %388 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not5.i43 = icmp eq i32 %388, 0, !dbg !61
  %389 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i42, float %375, float 0x3FC99DA160000000) #4, !dbg !61
  %390 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i42, float %375, float 0x3FC99DA160000000) #4, !dbg !61
  %.05.i44 = select i1 %.not5.i43, float %390, float %389, !dbg !61
  %391 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not6.i45 = icmp eq i32 %391, 0, !dbg !61
  %392 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i44, float %375, float 0xBFCFFFE440000000) #4, !dbg !61
  %393 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i44, float %375, float 0xBFCFFFE440000000) #4, !dbg !61
  %.01.i46 = select i1 %.not6.i45, float %393, float %392, !dbg !61
  %394 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not7.i47 = icmp eq i32 %394, 0, !dbg !61
  %395 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i46, float %375, float 0x3FD5554F00000000) #4, !dbg !61
  %396 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i46, float %375, float 0x3FD5554F00000000) #4, !dbg !61
  %.0.i48 = select i1 %.not7.i47, float %396, float %395, !dbg !61
  %397 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not8.i49 = icmp eq i32 %397, 0, !dbg !61
  %398 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i48, float %375, float -5.000000e-01) #4, !dbg !61
  %399 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i48, float %375, float -5.000000e-01) #4, !dbg !61
  %.07.i50 = select i1 %.not8.i49, float %399, float %398, !dbg !61
  %400 = fmul float %375, %.07.i50, !dbg !61
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not9.i51 = icmp eq i32 %401, 0, !dbg !61
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %400, float %375, float %375) #4, !dbg !61
  %403 = tail call float @llvm.nvvm.fma.rn.f(float %400, float %375, float %375) #4, !dbg !61
  %.06.i52 = select i1 %.not9.i51, float %403, float %402, !dbg !61
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not10.i53 = icmp eq i32 %404, 0, !dbg !61
  %405 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !61
  %406 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i34, float 0x3FE62E4300000000, float %.06.i52) #4, !dbg !61
  %.04.i54 = select i1 %.not10.i53, float %406, float %405, !dbg !61
  %407 = icmp ugt i32 %366, 2139095039, !dbg !61
  br i1 %407, label %__nv_fmaf_rn.exit.i.i57, label %__nv_logf.exit60, !dbg !61

__nv_fmaf_rn.exit.i.i57:                          ; preds = %__nv_logf.exit30
  %408 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not11.i58 = icmp eq i32 %408, 0, !dbg !61
  %409 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %410 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i31, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %.03.i59 = select i1 %.not11.i58, float %410, float %409, !dbg !61
  br label %__nv_logf.exit60, !dbg !61

__nv_logf.exit60:                                 ; preds = %__nv_logf.exit30, %__nv_fmaf_rn.exit.i.i57
  %r.i.0.i55 = phi float [ %.03.i59, %__nv_fmaf_rn.exit.i.i57 ], [ %.04.i54, %__nv_logf.exit30 ], !dbg !61
  %411 = fcmp olt float %269, 0x3810000000000000, !dbg !61
  %412 = fmul float %269, 0x4160000000000000, !dbg !61
  %.02.i61 = select i1 %411, float %412, float %269, !dbg !61
  %i.i.0.i62 = select i1 %411, float -2.300000e+01, float 0.000000e+00, !dbg !61
  %413 = bitcast float %.02.i61 to i32, !dbg !61
  %414 = add i32 %413, -1059760811, !dbg !61
  %415 = and i32 %414, -8388608, !dbg !61
  %416 = sub i32 %413, %415, !dbg !61
  %417 = bitcast i32 %416 to float, !dbg !61
  %418 = sitofp i32 %415 to float, !dbg !61
  %419 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not.i63 = icmp eq i32 %419, 0, !dbg !61
  %420 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %418, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !61
  %421 = tail call float @llvm.nvvm.fma.rn.f(float %418, float 0x3E80000000000000, float %i.i.0.i62) #4, !dbg !61
  %.08.i64 = select i1 %.not.i63, float %421, float %420, !dbg !61
  %422 = fadd float %417, -1.000000e+00, !dbg !61
  %423 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not1.i65 = icmp eq i32 %423, 0, !dbg !61
  %424 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFC0AA04E0000000, float %422, float 0x3FC2073EC0000000) #4, !dbg !61
  %425 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFC0AA04E0000000, float %422, float 0x3FC2073EC0000000) #4, !dbg !61
  %.010.i66 = select i1 %.not1.i65, float %425, float %424, !dbg !61
  %426 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not2.i67 = icmp eq i32 %426, 0, !dbg !61
  %427 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i66, float %422, float 0xBFBF19B980000000) #4, !dbg !61
  %428 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i66, float %422, float 0xBFBF19B980000000) #4, !dbg !61
  %.011.i68 = select i1 %.not2.i67, float %428, float %427, !dbg !61
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not3.i69 = icmp eq i32 %429, 0, !dbg !61
  %430 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i68, float %422, float 0x3FC1E52AA0000000) #4, !dbg !61
  %431 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i68, float %422, float 0x3FC1E52AA0000000) #4, !dbg !61
  %.012.i70 = select i1 %.not3.i69, float %431, float %430, !dbg !61
  %432 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not4.i71 = icmp eq i32 %432, 0, !dbg !61
  %433 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i70, float %422, float 0xBFC55B1720000000) #4, !dbg !61
  %434 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i70, float %422, float 0xBFC55B1720000000) #4, !dbg !61
  %.09.i72 = select i1 %.not4.i71, float %434, float %433, !dbg !61
  %435 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not5.i73 = icmp eq i32 %435, 0, !dbg !61
  %436 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i72, float %422, float 0x3FC99DA160000000) #4, !dbg !61
  %437 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i72, float %422, float 0x3FC99DA160000000) #4, !dbg !61
  %.05.i74 = select i1 %.not5.i73, float %437, float %436, !dbg !61
  %438 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not6.i75 = icmp eq i32 %438, 0, !dbg !61
  %439 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i74, float %422, float 0xBFCFFFE440000000) #4, !dbg !61
  %440 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i74, float %422, float 0xBFCFFFE440000000) #4, !dbg !61
  %.01.i76 = select i1 %.not6.i75, float %440, float %439, !dbg !61
  %441 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not7.i77 = icmp eq i32 %441, 0, !dbg !61
  %442 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i76, float %422, float 0x3FD5554F00000000) #4, !dbg !61
  %443 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i76, float %422, float 0x3FD5554F00000000) #4, !dbg !61
  %.0.i78 = select i1 %.not7.i77, float %443, float %442, !dbg !61
  %444 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not8.i79 = icmp eq i32 %444, 0, !dbg !61
  %445 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i78, float %422, float -5.000000e-01) #4, !dbg !61
  %446 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i78, float %422, float -5.000000e-01) #4, !dbg !61
  %.07.i80 = select i1 %.not8.i79, float %446, float %445, !dbg !61
  %447 = fmul float %422, %.07.i80, !dbg !61
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not9.i81 = icmp eq i32 %448, 0, !dbg !61
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %447, float %422, float %422) #4, !dbg !61
  %450 = tail call float @llvm.nvvm.fma.rn.f(float %447, float %422, float %422) #4, !dbg !61
  %.06.i82 = select i1 %.not9.i81, float %450, float %449, !dbg !61
  %451 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not10.i83 = icmp eq i32 %451, 0, !dbg !61
  %452 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !61
  %453 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i64, float 0x3FE62E4300000000, float %.06.i82) #4, !dbg !61
  %.04.i84 = select i1 %.not10.i83, float %453, float %452, !dbg !61
  %454 = icmp ugt i32 %413, 2139095039, !dbg !61
  br i1 %454, label %__nv_fmaf_rn.exit.i.i87, label %__nv_logf.exit90, !dbg !61

__nv_fmaf_rn.exit.i.i87:                          ; preds = %__nv_logf.exit60
  %455 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !61
  %.not11.i88 = icmp eq i32 %455, 0, !dbg !61
  %456 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %457 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i61, float 0x7FF0000000000000, float 0x7FF0000000000000) #4, !dbg !61
  %.03.i89 = select i1 %.not11.i88, float %457, float %456, !dbg !61
  br label %__nv_logf.exit90, !dbg !61

__nv_logf.exit90:                                 ; preds = %__nv_logf.exit60, %__nv_fmaf_rn.exit.i.i87
  %r.i.0.i85 = phi float [ %.03.i89, %__nv_fmaf_rn.exit.i.i87 ], [ %.04.i84, %__nv_logf.exit60 ], !dbg !61
  %458 = fcmp oeq float %.02.i31, 0.000000e+00, !dbg !61
  %459 = insertelement <2 x float> poison, float %.02.i, i64 0, !dbg !61
  %460 = insertelement <2 x float> %459, float %.02.i1, i64 1, !dbg !61
  %461 = fcmp oeq <2 x float> %460, zeroinitializer, !dbg !61
  %462 = fcmp oeq float %.02.i61, 0.000000e+00, !dbg !61
  %463 = insertelement <2 x float> poison, float %r.i.0.i, i64 0, !dbg !62
  %464 = insertelement <2 x float> %463, float %r.i.0.i25, i64 1, !dbg !62
  %465 = fsub <2 x float> zeroinitializer, %464, !dbg !62
  %466 = select <2 x i1> %461, <2 x float> splat (float 0x7FF0000000000000), <2 x float> %465, !dbg !61
  %467 = fsub float 0.000000e+00, %r.i.0.i55, !dbg !62
  %468 = select i1 %458, float 0x7FF0000000000000, float %467, !dbg !61
  %469 = fsub float 0.000000e+00, %r.i.0.i85, !dbg !62
  %470 = select i1 %462, float 0x7FF0000000000000, float %469, !dbg !61
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %shift = shufflevector <2 x float> %466, <2 x float> poison, <2 x i32> <i32 1, i32 poison>, !dbg !67
  %471 = fadd <2 x float> %466, %shift, !dbg !67
  %472 = extractelement <2 x float> %471, i64 0, !dbg !67
  %473 = fadd float %472, %468, !dbg !67
  %474 = fadd float %473, %470, !dbg !67
  %475 = bitcast float %474 to i32, !dbg !63
  %476 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %475, i32 16, i32 31), !dbg !63
  %477 = bitcast i32 %476 to float, !dbg !63
  %478 = fadd float %474, %477, !dbg !67
  %479 = bitcast float %478 to i32, !dbg !63
  %480 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %479, i32 8, i32 31), !dbg !63
  %481 = bitcast i32 %480 to float, !dbg !63
  %482 = fadd float %478, %481, !dbg !67
  %483 = bitcast float %482 to i32, !dbg !63
  %484 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %483, i32 4, i32 31), !dbg !63
  %485 = bitcast i32 %484 to float, !dbg !63
  %486 = fadd float %482, %485, !dbg !67
  %487 = bitcast float %486 to i32, !dbg !63
  %488 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %487, i32 2, i32 31), !dbg !63
  %489 = bitcast i32 %488 to float, !dbg !63
  %490 = fadd float %486, %489, !dbg !67
  %491 = bitcast float %490 to i32, !dbg !63
  %492 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %491, i32 1, i32 31), !dbg !63
  %493 = bitcast i32 %492 to float, !dbg !63
  %494 = fadd float %490, %493, !dbg !67
  %495 = bitcast float %494 to <1 x i32>, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %180, <1 x i32> %495, i1 %178) #4, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %496 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %184, i1 %183) #4, !dbg !63
  %497 = bitcast i32 %496 to float, !dbg !63
  %498 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %496, i32 1, i32 31), !dbg !63
  %499 = bitcast i32 %498 to float, !dbg !63
  %500 = fadd float %497, %499, !dbg !67
  %501 = bitcast float %500 to <1 x i32>, !dbg !63
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %184, <1 x i32> %501, i1 %194) #4, !dbg !63
  tail call void @llvm.nvvm.barrier0(), !dbg !63
  %502 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !63
  %503 = fadd float %502, 0.000000e+00, !dbg !69
  %504 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %503, float 2.560000e+02) #4, !dbg !71
  tail call void @llvm.nvvm.barrier0(), !dbg !72
  %urem = and i32 %8, 63, !dbg !73
  %505 = icmp eq i32 %urem, 0, !dbg !73
  %506 = bitcast float %504 to i32, !dbg !73
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %506, ptr addrspace(1) %1, i1 %505) #4, !dbg !73
  ret void, !dbg !74
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py", directory: "inductor_cache/cq")
!4 = !{ptr @triton_per_fused_add_div_log_max_mean_min_mul_neg_pow_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused_add_div_log_max_mean_min_mul_neg_pow_sub_1, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused_add_div_log_max_mean_min_mul_neg_pow_sub_1", linkageName: "triton_per_fused_add_div_log_max_mean_min_mul_neg_pow_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 27, column: 26, scope: !7)
!11 = !DILocation(line: 31, column: 34, scope: !7)
!12 = !DILocation(line: 31, column: 39, scope: !7)
!13 = !DILocation(line: 32, column: 30, scope: !7)
!14 = !DILocation(line: 32, column: 35, scope: !7)
!15 = !DILocation(line: 33, column: 30, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 34, column: 31, scope: !7)
!18 = !DILocation(line: 34, column: 36, scope: !7)
!19 = !DILocation(line: 35, column: 31, scope: !7)
!20 = !DILocation(line: 35, column: 36, scope: !7)
!21 = !DILocation(line: 36, column: 18, scope: !7)
!22 = !DILocation(line: 38, column: 18, scope: !7)
!23 = !DILocation(line: 40, column: 18, scope: !7)
!24 = !DILocation(line: 41, column: 18, scope: !7)
!25 = !DILocation(line: 42, column: 18, scope: !7)
!26 = !DILocation(line: 44, column: 19, scope: !7)
!27 = !DILocation(line: 45, column: 19, scope: !7)
!28 = !DILocation(line: 46, column: 19, scope: !7)
!29 = !DILocation(line: 47, column: 19, scope: !7)
!30 = !DILocation(line: 48, column: 20, scope: !7)
!31 = !DILocation(line: 49, column: 20, scope: !7)
!32 = !DILocation(line: 50, column: 20, scope: !7)
!33 = !DILocation(line: 51, column: 20, scope: !7)
!34 = !DILocation(line: 52, column: 20, scope: !7)
!35 = !DILocation(line: 53, column: 20, scope: !7)
!36 = !DILocation(line: 54, column: 20, scope: !7)
!37 = !DILocation(line: 55, column: 20, scope: !7)
!38 = !DILocation(line: 110, column: 15, scope: !39, inlinedAt: !42)
!39 = distinct !DILexicalBlockFile(scope: !41, file: !40, discriminator: 0)
!40 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!41 = distinct !DILexicalBlockFile(scope: !7, file: !40, discriminator: 0)
!42 = !DILocation(line: 57, column: 72, scope: !7)
!43 = !DILocation(line: 112, column: 21, scope: !39, inlinedAt: !42)
!44 = !DILocation(line: 112, column: 16, scope: !39, inlinedAt: !42)
!45 = !DILocation(line: 113, column: 29, scope: !39, inlinedAt: !42)
!46 = !DILocation(line: 126, column: 29, scope: !41, inlinedAt: !42)
!47 = !DILocation(line: 73, column: 15, scope: !41, inlinedAt: !48)
!48 = !DILocation(line: 57, column: 45, scope: !7)
!49 = !DILocation(line: 131, column: 29, scope: !41, inlinedAt: !50)
!50 = !DILocation(line: 58, column: 72, scope: !7)
!51 = !DILocation(line: 118, column: 15, scope: !39, inlinedAt: !50)
!52 = !DILocation(line: 120, column: 16, scope: !39, inlinedAt: !50)
!53 = !DILocation(line: 121, column: 29, scope: !39, inlinedAt: !50)
!54 = !DILocation(line: 120, column: 21, scope: !39, inlinedAt: !50)
!55 = !DILocation(line: 73, column: 15, scope: !41, inlinedAt: !56)
!56 = !DILocation(line: 58, column: 45, scope: !7)
!57 = !DILocation(line: 59, column: 20, scope: !7)
!58 = !DILocation(line: 60, column: 20, scope: !7)
!59 = !DILocation(line: 61, column: 20, scope: !7)
!60 = !DILocation(line: 63, column: 20, scope: !7)
!61 = !DILocation(line: 64, column: 24, scope: !7)
!62 = !DILocation(line: 65, column: 13, scope: !7)
!63 = !DILocation(line: 267, column: 36, scope: !64, inlinedAt: !66)
!64 = distinct !DILexicalBlockFile(scope: !7, file: !65, discriminator: 0)
!65 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!66 = !DILocation(line: 67, column: 59, scope: !7)
!67 = !DILocation(line: 256, column: 15, scope: !68, inlinedAt: !66)
!68 = distinct !DILexicalBlockFile(scope: !64, file: !65, discriminator: 0)
!69 = !DILocation(line: 73, column: 15, scope: !41, inlinedAt: !70)
!70 = !DILocation(line: 67, column: 45, scope: !7)
!71 = !DILocation(line: 69, column: 20, scope: !7)
!72 = !DILocation(line: 70, column: 4, scope: !7)
!73 = !DILocation(line: 71, column: 63, scope: !7)
!74 = !DILocation(line: 71, column: 4, scope: !7)
