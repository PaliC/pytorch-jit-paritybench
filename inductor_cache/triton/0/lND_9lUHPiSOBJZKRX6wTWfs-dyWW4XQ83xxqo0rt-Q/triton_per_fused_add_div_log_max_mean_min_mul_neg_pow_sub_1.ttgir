#blocked = #triton_gpu.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0)
#loc1 = loc(unknown)
#loc31 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":57:72)
#loc39 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":58:72)
#loc52 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":67:59)
#loc61 = loc(callsite(#loc1 at #loc31))
#loc68 = loc(callsite(#loc1 at #loc39))
#loc75 = loc(callsite(#loc1 at #loc52))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_div_log_max_mean_min_mul_neg_pow_sub_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant 2.560000e+02 : f32 loc(#loc1)
    %cst_0 = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999993E-9> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<8.99999984E-4> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<9.99999974E-5> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<2.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %0 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc2)
    %1 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc3)
    %2 = tt.addptr %1, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc3)
    %3 = tt.load %2 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc4)
    %4 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc5)
    %5 = tt.addptr %4, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc5)
    %6 = tt.load %5 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc6)
    %7 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc7)
    %8 = tt.addptr %7, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc7)
    %9 = tt.load %8 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc8)
    %10 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc9)
    %11 = tt.addptr %10, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc9)
    %12 = tt.load %11 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc10)
    %13 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc11)
    %14 = tt.addptr %13, %0 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc11)
    %15 = tt.load %14 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc12)
    %16 = arith.mulf %3, %6 : tensor<256xf32, #blocked> loc(#loc13)
    %17 = arith.mulf %16, %cst_5 : tensor<256xf32, #blocked> loc(#loc14)
    %18 = arith.addf %17, %cst_4 : tensor<256xf32, #blocked> loc(#loc15)
    %19 = arith.subf %9, %16 : tensor<256xf32, #blocked> loc(#loc16)
    %20 = arith.mulf %19, %cst_5 : tensor<256xf32, #blocked> loc(#loc17)
    %21 = arith.addf %20, %cst_3 : tensor<256xf32, #blocked> loc(#loc18)
    %22 = arith.mulf %18, %21 : tensor<256xf32, #blocked> loc(#loc19)
    %23 = arith.mulf %3, %3 : tensor<256xf32, #blocked> loc(#loc20)
    %24 = arith.mulf %6, %6 : tensor<256xf32, #blocked> loc(#loc21)
    %25 = arith.addf %23, %24 : tensor<256xf32, #blocked> loc(#loc22)
    %26 = arith.addf %25, %cst_4 : tensor<256xf32, #blocked> loc(#loc23)
    %27 = arith.subf %12, %23 : tensor<256xf32, #blocked> loc(#loc24)
    %28 = arith.subf %15, %24 : tensor<256xf32, #blocked> loc(#loc25)
    %29 = arith.addf %27, %28 : tensor<256xf32, #blocked> loc(#loc26)
    %30 = arith.addf %29, %cst_3 : tensor<256xf32, #blocked> loc(#loc27)
    %31 = arith.mulf %26, %30 : tensor<256xf32, #blocked> loc(#loc28)
    %32 = arith.divf %22, %31 : tensor<256xf32, #blocked> loc(#loc29)
    %33 = "tt.reduce"(%32) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc31)), %arg8: f32 loc(callsite(#loc1 at #loc31))):
      %51 = arith.cmpf olt, %arg7, %arg8 : f32 loc(#loc78)
      %52 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc79)
      %53 = arith.ori %51, %52 : i1 loc(#loc80)
      %54 = arith.select %53, %arg7, %arg8 : f32 loc(#loc81)
      tt.reduce.return %54 : f32 loc(#loc60)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc60)
    %34 = arith.addf %33, %cst_0 : f32 loc(#loc66)
    %35 = "tt.reduce"(%32) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc39)), %arg8: f32 loc(callsite(#loc1 at #loc39))):
      %51 = arith.cmpf ogt, %arg7, %arg8 : f32 loc(#loc82)
      %52 = arith.cmpf une, %arg7, %arg7 : f32 loc(#loc83)
      %53 = arith.ori %51, %52 : i1 loc(#loc84)
      %54 = arith.select %53, %arg7, %arg8 : f32 loc(#loc85)
      tt.reduce.return %54 : f32 loc(#loc67)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc67)
    %36 = arith.addf %35, %cst_0 : f32 loc(#loc73)
    %37 = tt.splat %34 : f32 -> tensor<256xf32, #blocked> loc(#loc45)
    %38 = arith.subf %32, %37 : tensor<256xf32, #blocked> loc(#loc45)
    %39 = arith.subf %36, %34 : f32 loc(#loc46)
    %40 = tt.splat %39 : f32 -> tensor<256xf32, #blocked> loc(#loc47)
    %41 = arith.divf %38, %40 : tensor<256xf32, #blocked> loc(#loc47)
    %42 = arith.addf %41, %cst_2 : tensor<256xf32, #blocked> loc(#loc48)
    %43 = math.log %42 : tensor<256xf32, #blocked> loc(#loc49)
    %44 = arith.subf %cst_1, %43 : tensor<256xf32, #blocked> loc(#loc50)
    %45 = "tt.reduce"(%44) <{axis = 0 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc52)), %arg8: f32 loc(callsite(#loc1 at #loc52))):
      %51 = arith.addf %arg7, %arg8 : f32 loc(#loc86)
      tt.reduce.return %51 : f32 loc(#loc74)
    }) : (tensor<256xf32, #blocked>) -> f32 loc(#loc74)
    %46 = arith.addf %45, %cst_0 : f32 loc(#loc77)
    %47 = arith.divf %46, %cst : f32 loc(#loc55)
    %48 = tt.splat %47 : f32 -> tensor<1xf32, #blocked1> loc(#loc55)
    gpu.barrier loc(#loc56)
    %49 = tt.addptr %arg1, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc57)
    %50 = tt.splat %49 : !tt.ptr<f32> -> tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc57)
    tt.store %50, %48 : tensor<1x!tt.ptr<f32>, #blocked1> loc(#loc58)
    tt.return loc(#loc59)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":27:26)
#loc3 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":31:34)
#loc4 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":31:39)
#loc5 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":32:30)
#loc6 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":32:35)
#loc7 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":33:30)
#loc8 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":33:35)
#loc9 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":34:31)
#loc10 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":34:36)
#loc11 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":35:31)
#loc12 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":35:36)
#loc13 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":36:18)
#loc14 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":38:18)
#loc15 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":40:18)
#loc16 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":41:18)
#loc17 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":42:18)
#loc18 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":44:19)
#loc19 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":45:19)
#loc20 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":46:19)
#loc21 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":47:19)
#loc22 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":48:20)
#loc23 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":49:20)
#loc24 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":50:20)
#loc25 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":51:20)
#loc26 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":52:20)
#loc27 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":53:20)
#loc28 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":54:20)
#loc29 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":55:20)
#loc30 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":126:29)
#loc32 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":110:15)
#loc33 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:21)
#loc34 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":112:16)
#loc35 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":113:29)
#loc36 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":73:15)
#loc37 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":57:45)
#loc38 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc40 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc42 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc44 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":58:45)
#loc45 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":59:20)
#loc46 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":60:20)
#loc47 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":61:20)
#loc48 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":63:20)
#loc49 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":64:24)
#loc50 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":65:13)
#loc51 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc53 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc54 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":67:45)
#loc55 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":69:20)
#loc56 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":70:4)
#loc57 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":71:28)
#loc58 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":71:63)
#loc59 = loc("inductor_cache/cq/ccqpnuz6vv3x7fzbfl7vt4doxct7rds3pfxmgx5ywowplv7savu6.py":71:4)
#loc60 = loc(callsite(#loc30 at #loc31))
#loc62 = loc(callsite(#loc32 at #loc30))
#loc63 = loc(callsite(#loc33 at #loc30))
#loc64 = loc(callsite(#loc34 at #loc30))
#loc65 = loc(callsite(#loc35 at #loc30))
#loc66 = loc(callsite(#loc36 at #loc37))
#loc67 = loc(callsite(#loc38 at #loc39))
#loc69 = loc(callsite(#loc40 at #loc38))
#loc70 = loc(callsite(#loc41 at #loc38))
#loc71 = loc(callsite(#loc42 at #loc38))
#loc72 = loc(callsite(#loc43 at #loc38))
#loc73 = loc(callsite(#loc36 at #loc44))
#loc74 = loc(callsite(#loc51 at #loc52))
#loc76 = loc(callsite(#loc53 at #loc51))
#loc77 = loc(callsite(#loc36 at #loc54))
#loc78 = loc(callsite(#loc62 at #loc31))
#loc79 = loc(callsite(#loc63 at #loc31))
#loc80 = loc(callsite(#loc64 at #loc31))
#loc81 = loc(callsite(#loc65 at #loc31))
#loc82 = loc(callsite(#loc69 at #loc39))
#loc83 = loc(callsite(#loc70 at #loc39))
#loc84 = loc(callsite(#loc71 at #loc39))
#loc85 = loc(callsite(#loc72 at #loc39))
#loc86 = loc(callsite(#loc76 at #loc52))
