//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_mean_3 // -- Begin function triton_per_fused_mean_3
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_per_fused_mean_3
.visible .entry triton_per_fused_mean_3(
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_mean_3_param_2,
	.param .u32 triton_per_fused_mean_3_param_3,
	.param .u32 triton_per_fused_mean_3_param_4
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<96>;
	.reg .f32 	%f<25>;
	.reg .b64 	%rd<12>;
	.loc	1 19 0                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:19:0

// %bb.0:
	ld.param.u64 	%rd5, [triton_per_fused_mean_3_param_0];
	ld.param.u64 	%rd6, [triton_per_fused_mean_3_param_1];
$L__tmp0:
	.loc	1 23 28                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:23:33
	shl.b32 	%r19, %r1, 3;
	ld.param.u64 	%rd7, [triton_per_fused_mean_3_param_2];
	.loc	1 24 44                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:24:44
	mov.u32 	%r20, %tid.x;
	shl.b32 	%r22, %r20, 1;
	and.b32  	%r23, %r22, 6;
	bfe.u32 	%r24, %r20, 4, 2;
	and.b32  	%r25, %r20, 7;
	.loc	1 24 23                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:24:23
	or.b32  	%r26, %r19, %r23;
	or.b32  	%r27, %r19, %r24;
	or.b32  	%r28, %r19, %r25;
	.loc	1 26 34                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:26:34
	shr.u32 	%r29, %r20, 2;
	bfe.u32 	%r30, %r20, 2, 4;
	and.b32  	%r31, %r20, 15;
	.loc	1 28 21                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:28:21
	setp.lt.u32 	%p1, %r30, 9;
	setp.lt.u32 	%p6, %r31, 9;
	.loc	1 31 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:31:19
	bfe.s32 	%r32, %r1, 28, 1;
	shr.u32 	%r33, %r32, 20;
	add.s32 	%r34, %r26, %r33;
	shr.s32 	%r35, %r34, 12;
	.loc	1 30 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:30:19
	and.b32  	%r36, %r34, -4096;
	sub.s32 	%r37, %r26, %r36;
	.loc	1 31 19                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:31:19
	add.s32 	%r38, %r27, %r33;
	shr.s32 	%r39, %r38, 12;
	add.s32 	%r40, %r38, 4;
	shr.s32 	%r41, %r40, 12;
	.loc	1 32 29                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:32:29
	shr.u32 	%r42, %r39, 23;
	add.s32 	%r43, %r39, %r42;
	and.b32  	%r44, %r43, -512;
	sub.s32 	%r45, %r39, %r44;
	shr.u32 	%r46, %r41, 23;
	add.s32 	%r47, %r41, %r46;
	and.b32  	%r48, %r47, -512;
	sub.s32 	%r49, %r41, %r48;
	.loc	1 34 40                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:40
	shl.b32 	%r50, %r30, 12;
	.loc	1 34 35                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:35
	add.s32 	%r51, %r37, %r50;
	.loc	1 34 45                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:45
	mad.lo.s32 	%r52, %r35, 36864, %r51;
	.loc	1 34 30                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:30
	mul.wide.s32 	%rd8, %r52, 4;
	add.s64 	%rd1, %rd5, %rd8;
	mov.b32 	%r4, 0;
	.loc	1 34 56                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:34:56
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r9, 0x0;
	@%p1 ld.global.v2.b32 { %r7, %r9 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r7, %r4;
	@!%p1 mov.u32 %r9, %r4;
	// end inline asm
	shl.b32 	%r53, %r20, 5;
	and.b32  	%r54, %r53, 96;
	or.b32  	%r55, %r54, %r30;
	and.b32  	%r56, %r20, 63;
	shr.u32 	%r57, %r54, 2;
	mov.u32 	%r58, global_smem;
	add.s32 	%r59, %r58, %r57;
	shl.b32 	%r60, %r55, 2;
	add.s32 	%r6, %r59, %r60;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r6 + 0 ], %r7;
	// end inline asm
	or.b32  	%r61, %r54, 16;
	shr.u32 	%r62, %r61, 2;
	add.s32 	%r63, %r58, %r62;
	add.s32 	%r64, %r63, %r60;
	add.s32 	%r8, %r64, 64;
	// begin inline asm
	@%p4 st.shared.b32 [ %r8 + 0 ], %r9;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r65, %r29, 12;
	add.s32 	%r66, %r58, %r65;
	shl.b32 	%r67, %r56, 2;
	add.s32 	%r68, %r66, %r67;
	ld.shared.f32 	%f1, [%r68];
	or.b32  	%r69, %r56, 64;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r71, %r70, 28;
	add.s32 	%r72, %r58, %r71;
	add.s32 	%r73, %r72, %r67;
	ld.shared.f32 	%f2, [%r73+256];
	.loc	1 35 35                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:35
	mad.lo.s32 	%r74, %r45, 9, %r31;
	mad.lo.s32 	%r75, %r49, 9, %r31;
	.loc	1 35 30                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:30
	mul.wide.s32 	%rd9, %r74, 4;
	add.s64 	%rd2, %rd6, %rd9;
	mul.wide.s32 	%rd10, %r75, 4;
	add.s64 	%rd3, %rd6, %rd10;
	.loc	1 35 42                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:35:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r10 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r10, %r4;
	// end inline asm
	mov.b32 	%f3, %r10;
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p6 ld.global.L1::evict_last.b32 { %r12 }, [ %rd3 + 0 ];
	@!%p6 mov.u32 %r12, %r4;
	// end inline asm
	mov.b32 	%f4, %r12;
	.loc	1 36 18                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:36:18
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 38 33                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:38:33
	selp.f32 	%f7, %f5, 0f00000000, %p6;
	selp.f32 	%f8, %f6, 0f00000000, %p6;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r76, %f7;
	shfl.sync.bfly.b32	%r77, %r76, 8, 31, -1;
	mov.b32 	%f9, %r77;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f10, %f7, %f9;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r78, %f10;
	shfl.sync.bfly.b32	%r79, %r78, 4, 31, -1;
	mov.b32 	%f11, %r79;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f12, %f10, %f11;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r80, %f12;
	shfl.sync.bfly.b32	%r81, %r80, 2, 31, -1;
	mov.b32 	%f13, %r81;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f12, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r82, %f14;
	shfl.sync.bfly.b32	%r83, %r82, 1, 31, -1;
	mov.b32 	%f15, %r83;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r84, %f8;
	shfl.sync.bfly.b32	%r85, %r84, 8, 31, -1;
	mov.b32 	%f17, %r85;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f8, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r86, %f18;
	shfl.sync.bfly.b32	%r87, %r86, 4, 31, -1;
	mov.b32 	%f19, %r87;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r88, %f20;
	shfl.sync.bfly.b32	%r89, %r88, 2, 31, -1;
	mov.b32 	%f21, %r89;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f20, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r90, %f22;
	shfl.sync.bfly.b32	%r91, %r90, 1, 31, -1;
	mov.b32 	%f23, %r91;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
$L__tmp2:
	.loc	1 39 27                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:39:27
	bar.sync 	0;
	shl.b32 	%r92, %r24, 2;
	add.s32 	%r14, %r58, %r92;
	mov.b32 	%r15, %f16;
	// begin inline asm
	@%p4 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	add.s32 	%r16, %r14, 16;
	mov.b32 	%r17, %f24;
	// begin inline asm
	@%p4 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r93, %r25, 2;
	add.s32 	%r94, %r58, %r93;
	ld.shared.u32 	%r18, [%r94];
	.loc	1 40 25                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:25
	mul.wide.s32 	%rd11, %r28, 4;
	add.s64 	%rd4, %rd7, %rd11;
	.loc	1 40 36                         // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:36
	and.b32  	%r95, %r20, 56;
	setp.eq.s32 	%p12, %r95, 0;
	// begin inline asm
	@%p12 st.global.b32 [ %rd4 + 0 ], { %r18 };
	// end inline asm
	.loc	1 40 4                          // chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/hk/chksy5lh7sfmvcvkk523t3gukrncsmpea2ti5lh6g24uaqqfnskk.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 168                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 107
.b8 115
.b8 121
.b8 53
.b8 108
.b8 104
.b8 55
.b8 115
.b8 102
.b8 109
.b8 118
.b8 99
.b8 118
.b8 107
.b8 107
.b8 53
.b8 50
.b8 51
.b8 116
.b8 51
.b8 103
.b8 117
.b8 107
.b8 114
.b8 110
.b8 99
.b8 115
.b8 109
.b8 112
.b8 101
.b8 97
.b8 50
.b8 116
.b8 105
.b8 53
.b8 108
.b8 104
.b8 54
.b8 103
.b8 50
.b8 52
.b8 117
.b8 97
.b8 113
.b8 113
.b8 102
.b8 110
.b8 115
.b8 107
.b8 107
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 104
.b8 107
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1a DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x7d:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x92:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
