; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.y;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = lshr i32 %7, 1, !dbg !12
  %9 = and i32 %8, 63, !dbg !12
  %10 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !13
  %11 = shl i32 %10, 3, !dbg !14
  %12 = shl i32 %7, 2, !dbg !15
  %13 = and i32 %12, 4, !dbg !15
  %14 = or disjoint i32 %11, %13, !dbg !16
  %15 = or disjoint i32 %14, 1, !dbg !16
  %16 = or disjoint i32 %14, 2, !dbg !16
  %17 = or disjoint i32 %14, 3, !dbg !16
  %18 = icmp slt i32 %14, 8, !dbg !17
  %19 = or disjoint i32 %6, %9, !dbg !18
  %20 = icmp slt i32 %19, 128, !dbg !19
  %.frozen = freeze i32 %19, !dbg !20
  %21 = sdiv i32 %.frozen, 4, !dbg !20
  %22 = mul i32 %21, 4, !dbg !21
  %.decomposed = sub i32 %.frozen, %22, !dbg !21
  %23 = srem i32 %21, 8, !dbg !22
  %24 = shl nsw i32 %23, 3, !dbg !23
  %25 = add i32 %24, %14, !dbg !24
  %26 = add i32 %24, %15, !dbg !24
  %27 = add i32 %24, %16, !dbg !24
  %28 = add i32 %24, %17, !dbg !24
  %29 = insertelement <2 x i32> poison, i32 %19, i64 0, !dbg !25
  %30 = insertelement <2 x i32> %29, i32 %25, i64 1, !dbg !25
  %31 = sdiv <2 x i32> %30, <i32 32, i32 16>, !dbg !25
  %32 = srem i32 %25, 16, !dbg !26
  %33 = srem i32 %26, 16, !dbg !26
  %34 = srem i32 %27, 16, !dbg !26
  %35 = srem i32 %28, 16, !dbg !26
  %36 = shl nsw i32 %32, 4, !dbg !27
  %37 = shl nsw i32 %33, 4, !dbg !27
  %38 = shl nsw i32 %34, 4, !dbg !27
  %39 = shl nsw i32 %35, 4, !dbg !27
  %40 = shl <2 x i32> %31, <i32 8, i32 2>, !dbg !28
  %41 = shl nsw i32 %.decomposed, 6, !dbg !29
  %42 = add i32 %25, %41, !dbg !30
  %43 = sdiv i32 %42, 256, !dbg !31
  %44 = shl nsw i32 %43, 8, !dbg !32
  %45 = sdiv i32 %25, 64, !dbg !33
  %46 = insertelement <2 x i32> poison, i32 %45, i64 0, !dbg !34
  %47 = insertelement <2 x i32> %46, i32 %.decomposed, i64 1, !dbg !34
  %48 = add <2 x i32> %47, %40, !dbg !34
  %49 = extractelement <2 x i32> %48, i64 0, !dbg !35
  %50 = add i32 %49, %36, !dbg !35
  %51 = extractelement <2 x i32> %48, i64 1, !dbg !36
  %52 = add i32 %50, %51, !dbg !36
  %53 = add i32 %52, %44, !dbg !37
  %54 = add i32 %49, %37, !dbg !35
  %55 = add i32 %54, %51, !dbg !36
  %56 = add i32 %55, %44, !dbg !37
  %57 = add i32 %49, %38, !dbg !35
  %58 = add i32 %57, %51, !dbg !36
  %59 = add i32 %58, %44, !dbg !37
  %60 = add i32 %49, %39, !dbg !35
  %61 = add i32 %60, %51, !dbg !36
  %62 = add i32 %61, %44, !dbg !37
  %63 = or disjoint i32 %19, 64, !dbg !18
  %64 = icmp slt i32 %63, 128, !dbg !19
  %65 = sdiv i32 %63, 4, !dbg !20
  %66 = srem i32 %65, 8, !dbg !22
  %67 = shl nsw i32 %66, 3, !dbg !23
  %68 = add i32 %14, %67, !dbg !24
  %69 = add i32 %67, %15, !dbg !24
  %70 = add i32 %67, %16, !dbg !24
  %71 = add i32 %67, %17, !dbg !24
  %72 = insertelement <2 x i32> poison, i32 %63, i64 0, !dbg !25
  %73 = insertelement <2 x i32> %72, i32 %68, i64 1, !dbg !25
  %74 = sdiv <2 x i32> %73, <i32 32, i32 16>, !dbg !25
  %75 = srem i32 %68, 16, !dbg !26
  %76 = srem i32 %69, 16, !dbg !26
  %77 = srem i32 %70, 16, !dbg !26
  %78 = srem i32 %71, 16, !dbg !26
  %79 = shl nsw i32 %75, 4, !dbg !27
  %80 = shl nsw i32 %76, 4, !dbg !27
  %81 = shl nsw i32 %77, 4, !dbg !27
  %82 = shl nsw i32 %78, 4, !dbg !27
  %83 = shl <2 x i32> %74, <i32 8, i32 2>, !dbg !28
  %84 = add i32 %68, %41, !dbg !30
  %85 = sdiv i32 %84, 256, !dbg !31
  %86 = shl nsw i32 %85, 8, !dbg !32
  %87 = sdiv i32 %68, 64, !dbg !33
  %88 = insertelement <2 x i32> poison, i32 %87, i64 0, !dbg !34
  %89 = insertelement <2 x i32> %88, i32 %.decomposed, i64 1, !dbg !34
  %90 = add <2 x i32> %89, %83, !dbg !34
  %91 = extractelement <2 x i32> %90, i64 0, !dbg !35
  %92 = add i32 %91, %79, !dbg !35
  %93 = extractelement <2 x i32> %90, i64 1, !dbg !36
  %94 = add i32 %92, %93, !dbg !36
  %95 = add i32 %94, %86, !dbg !37
  %96 = add i32 %91, %80, !dbg !35
  %97 = add i32 %96, %93, !dbg !36
  %98 = add i32 %97, %86, !dbg !37
  %99 = add i32 %91, %81, !dbg !35
  %100 = add i32 %99, %93, !dbg !36
  %101 = add i32 %100, %86, !dbg !37
  %102 = add i32 %91, %82, !dbg !35
  %103 = add i32 %102, %93, !dbg !36
  %104 = add i32 %103, %86, !dbg !37
  %105 = sext i32 %53 to i64, !dbg !38
  %106 = getelementptr float, ptr addrspace(1) %0, i64 %105, !dbg !38
  %107 = sext i32 %56 to i64, !dbg !38
  %108 = getelementptr float, ptr addrspace(1) %0, i64 %107, !dbg !38
  %109 = sext i32 %59 to i64, !dbg !38
  %110 = getelementptr float, ptr addrspace(1) %0, i64 %109, !dbg !38
  %111 = sext i32 %62 to i64, !dbg !38
  %112 = getelementptr float, ptr addrspace(1) %0, i64 %111, !dbg !38
  %113 = sext i32 %95 to i64, !dbg !38
  %114 = getelementptr float, ptr addrspace(1) %0, i64 %113, !dbg !38
  %115 = sext i32 %98 to i64, !dbg !38
  %116 = getelementptr float, ptr addrspace(1) %0, i64 %115, !dbg !38
  %117 = sext i32 %101 to i64, !dbg !38
  %118 = getelementptr float, ptr addrspace(1) %0, i64 %117, !dbg !38
  %119 = sext i32 %104 to i64, !dbg !38
  %120 = getelementptr float, ptr addrspace(1) %0, i64 %119, !dbg !38
  %121 = and i1 %20, %18, !dbg !39
  %122 = and i1 %64, %18, !dbg !39
  %123 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %106, i1 %121) #1, !dbg !40
  %124 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %108, i1 %121) #1, !dbg !40
  %125 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %110, i1 %121) #1, !dbg !40
  %126 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %112, i1 %121) #1, !dbg !40
  %127 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %114, i1 %122) #1, !dbg !40
  %128 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %116, i1 %122) #1, !dbg !40
  %129 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %118, i1 %122) #1, !dbg !40
  %130 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %120, i1 %122) #1, !dbg !40
  %131 = shl i32 %19, 3, !dbg !41
  %132 = shl i32 %63, 3, !dbg !41
  %133 = add i32 %14, %131, !dbg !42
  %134 = add i32 %14, %132, !dbg !42
  %135 = sext i32 %133 to i64, !dbg !43
  %136 = getelementptr float, ptr addrspace(1) %1, i64 %135, !dbg !43
  %137 = sext i32 %134 to i64, !dbg !43
  %138 = getelementptr float, ptr addrspace(1) %1, i64 %137, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %123, i32 %124, i32 %125, i32 %126, ptr addrspace(1) %136, i1 %121) #1, !dbg !44
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %127, i32 %128, i32 %129, i32 %130, ptr addrspace(1) %138, i1 %122) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cjaoqzbq6caeiphedreaaesmgee27fwvsqitihvs6m47d4euvpsz.py", directory: "inductor_cache/ja")
!4 = !{ptr @triton_poi_fused_clone_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_0", linkageName: "triton_poi_fused_clone_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 22, column: 33, scope: !7)
!12 = !DILocation(line: 23, column: 44, scope: !7)
!13 = !DILocation(line: 25, column: 28, scope: !7)
!14 = !DILocation(line: 25, column: 33, scope: !7)
!15 = !DILocation(line: 26, column: 44, scope: !7)
!16 = !DILocation(line: 26, column: 23, scope: !7)
!17 = !DILocation(line: 27, column: 21, scope: !7)
!18 = !DILocation(line: 23, column: 23, scope: !7)
!19 = !DILocation(line: 24, column: 21, scope: !7)
!20 = !DILocation(line: 30, column: 21, scope: !7)
!21 = !DILocation(line: 29, column: 19, scope: !7)
!22 = !DILocation(line: 30, column: 26, scope: !7)
!23 = !DILocation(line: 33, column: 46, scope: !7)
!24 = !DILocation(line: 33, column: 44, scope: !7)
!25 = !DILocation(line: 31, column: 19, scope: !7)
!26 = !DILocation(line: 33, column: 78, scope: !7)
!27 = !DILocation(line: 33, column: 64, scope: !7)
!28 = !DILocation(line: 33, column: 89, scope: !7)
!29 = !DILocation(line: 33, column: 115, scope: !7)
!30 = !DILocation(line: 33, column: 112, scope: !7)
!31 = !DILocation(line: 33, column: 122, scope: !7)
!32 = !DILocation(line: 33, column: 99, scope: !7)
!33 = !DILocation(line: 33, column: 145, scope: !7)
!34 = !DILocation(line: 33, column: 59, scope: !7)
!35 = !DILocation(line: 33, column: 85, scope: !7)
!36 = !DILocation(line: 33, column: 94, scope: !7)
!37 = !DILocation(line: 33, column: 130, scope: !7)
!38 = !DILocation(line: 33, column: 30, scope: !7)
!39 = !DILocation(line: 33, column: 159, scope: !7)
!40 = !DILocation(line: 33, column: 151, scope: !7)
!41 = !DILocation(line: 34, column: 32, scope: !7)
!42 = !DILocation(line: 34, column: 30, scope: !7)
!43 = !DILocation(line: 34, column: 25, scope: !7)
!44 = !DILocation(line: 34, column: 43, scope: !7)
!45 = !DILocation(line: 34, column: 4, scope: !7)
