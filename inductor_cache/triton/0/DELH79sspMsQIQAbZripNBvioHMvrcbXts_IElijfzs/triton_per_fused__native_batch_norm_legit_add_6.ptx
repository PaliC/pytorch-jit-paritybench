//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__native_batch_norm_legit_add_6 // -- Begin function triton_per_fused__native_batch_norm_legit_add_6
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__native_batch_norm_legit_add_6
.visible .entry triton_per_fused__native_batch_norm_legit_add_6(
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_6_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_6_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_6_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_6_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__native_batch_norm_legit_add_6_param_4,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_6_param_5,
	.param .u32 triton_per_fused__native_batch_norm_legit_add_6_param_6
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<44>;
	.reg .b32 	%r<222>;
	.reg .f32 	%f<98>;
	.reg .b64 	%rd<15>;
	.loc	1 19 0                          // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd7, [triton_per_fused__native_batch_norm_legit_add_6_param_0];
	ld.param.u64 	%rd8, [triton_per_fused__native_batch_norm_legit_add_6_param_1];
$L__tmp0:
	.loc	1 23 28                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:23:33
	shl.b32 	%r112, %r1, 5;
	ld.param.u64 	%rd9, [triton_per_fused__native_batch_norm_legit_add_6_param_2];
	ld.param.u64 	%rd10, [triton_per_fused__native_batch_norm_legit_add_6_param_3];
	.loc	1 24 44                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:24:44
	mov.u32 	%r113, %tid.x;
	and.b32  	%r114, %r113, 24;
	ld.param.u64 	%rd11, [triton_per_fused__native_batch_norm_legit_add_6_param_4];
	shl.b32 	%r115, %r113, 2;
	and.b32  	%r116, %r115, 12;
	and.b32  	%r117, %r115, 28;
	bfe.u32 	%r118, %r113, 2, 2;
	and.b32  	%r119, %r113, 112;
	shr.u32 	%r120, %r119, 2;
	or.b32  	%r121, %r120, %r118;
	and.b32  	%r122, %r113, 31;
	.loc	1 24 23                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:24:23
	or.b32  	%r123, %r112, %r117;
	or.b32  	%r124, %r121, %r112;
	.loc	1 25 21                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:25:21
	setp.lt.s32 	%p1, %r123, 1024;
	setp.lt.s32 	%p6, %r124, 1024;
	.loc	1 26 34                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:26:34
	bfe.u32 	%r125, %r113, 3, 1;
	shr.u32 	%r126, %r119, 3;
	or.b32  	%r127, %r126, %r125;
	.loc	1 32 19                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:32:19
	shr.s32 	%r129, %r123, 31;
	shr.u32 	%r130, %r129, 24;
	add.s32 	%r131, %r123, %r130;
	.loc	1 31 19                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:31:19
	and.b32  	%r132, %r131, -256;
	sub.s32 	%r133, %r123, %r132;
	.loc	1 33 34                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:33:34
	shl.b32 	%r134, %r127, 8;
	.loc	1 33 45                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:33:45
	shl.b32 	%r135, %r131, 4;
	and.b32  	%r136, %r135, -4096;
	.loc	1 33 39                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:33:39
	add.s32 	%r137, %r133, %r134;
	.loc	1 33 60                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:33:60
	add.s32 	%r138, %r137, %r136;
	.loc	1 33 30                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:33:30
	mul.wide.s32 	%rd12, %r138, 4;
	add.s64 	%rd1, %rd7, %rd12;
	mov.b32 	%r6, 0;
	.loc	1 33 73                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:33:73
	// begin inline asm
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p1 ld.global.v4.b32 { %r2, %r3, %r4, %r5 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r2, %r6;
	@!%p1 mov.u32 %r3, %r6;
	@!%p1 mov.u32 %r4, %r6;
	@!%p1 mov.u32 %r5, %r6;
	// end inline asm
	mov.b32 	%f1, %r2;
	mov.b32 	%f2, %r3;
	mov.b32 	%f3, %r4;
	mov.b32 	%f4, %r5;
	.loc	1 34 39                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:34:39
	shl.b32 	%r139, %r124, 4;
	.loc	1 34 36                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:34:36
	or.b32  	%r140, %r139, %r116;
	.loc	1 34 31                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:34:31
	mul.wide.s32 	%rd13, %r140, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 34 44                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:34:44
	// begin inline asm
	mov.u32 %r19, 0x0;
	mov.u32 %r21, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r25, 0x0;
	@%p6 ld.global.v4.b32 { %r19, %r21, %r23, %r25 }, [ %rd2 + 0 ];
	@!%p6 mov.u32 %r19, %r6;
	@!%p6 mov.u32 %r21, %r6;
	@!%p6 mov.u32 %r23, %r6;
	@!%p6 mov.u32 %r25, %r6;
	// end inline asm
	shl.b32 	%r141, %r113, 7;
	and.b32  	%r142, %r141, 384;
	or.b32  	%r143, %r121, %r142;
	shr.u32 	%r144, %r142, 3;
	mov.u32 	%r145, global_smem;
	add.s32 	%r146, %r145, %r144;
	shl.b32 	%r147, %r143, 2;
	add.s32 	%r18, %r146, %r147;
	mov.pred 	%p11, -1;
	// begin inline asm
	@%p11 st.shared.b32 [ %r18 + 0 ], %r19;
	// end inline asm
	or.b32  	%r148, %r142, 32;
	shr.u32 	%r149, %r148, 3;
	add.s32 	%r150, %r145, %r149;
	add.s32 	%r151, %r150, %r147;
	add.s32 	%r20, %r151, 128;
	// begin inline asm
	@%p11 st.shared.b32 [ %r20 + 0 ], %r21;
	// end inline asm
	or.b32  	%r152, %r142, 64;
	shr.u32 	%r153, %r152, 3;
	add.s32 	%r154, %r145, %r153;
	add.s32 	%r155, %r154, %r147;
	add.s32 	%r22, %r155, 256;
	// begin inline asm
	@%p11 st.shared.b32 [ %r22 + 0 ], %r23;
	// end inline asm
	or.b32  	%r156, %r142, 96;
	shr.u32 	%r157, %r156, 3;
	add.s32 	%r158, %r145, %r157;
	add.s32 	%r159, %r158, %r147;
	add.s32 	%r24, %r159, 384;
	// begin inline asm
	@%p11 st.shared.b32 [ %r24 + 0 ], %r25;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r160, %r113, 1;
	and.b32  	%r161, %r160, 60;
	add.s32 	%r162, %r145, %r161;
	shl.b32 	%r163, %r113, 4;
	and.b32  	%r164, %r163, 2032;
	add.s32 	%r165, %r162, %r164;
	ld.shared.f32 	%f5, [%r165];
	ld.shared.f32 	%f6, [%r165+4];
	ld.shared.f32 	%f7, [%r165+8];
	ld.shared.f32 	%f8, [%r165+12];
	.loc	1 35 55                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:35:55
	// begin inline asm
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	mov.u32 %r29, 0x0;
	@%p1 ld.global.v4.b32 { %r26, %r27, %r28, %r29 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r26, %r6;
	@!%p1 mov.u32 %r27, %r6;
	@!%p1 mov.u32 %r28, %r6;
	@!%p1 mov.u32 %r29, %r6;
	// end inline asm
	.loc	1 39 33                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:39:33
	selp.f32 	%f9, %f1, 0f00000000, %p1;
	selp.f32 	%f10, %f2, 0f00000000, %p1;
	selp.f32 	%f11, %f3, 0f00000000, %p1;
	selp.f32 	%f12, %f4, 0f00000000, %p1;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r166, %f9;
	shfl.sync.bfly.b32	%r167, %r166, 16, 31, -1;
	mov.b32 	%f13, %r167;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f14, %f9, %f13;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r168, %f14;
	shfl.sync.bfly.b32	%r169, %r168, 8, 31, -1;
	mov.b32 	%f15, %r169;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f16, %f14, %f15;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r170, %f10;
	shfl.sync.bfly.b32	%r171, %r170, 16, 31, -1;
	mov.b32 	%f17, %r171;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f18, %f10, %f17;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r172, %f18;
	shfl.sync.bfly.b32	%r173, %r172, 8, 31, -1;
	mov.b32 	%f19, %r173;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f20, %f18, %f19;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r174, %f11;
	shfl.sync.bfly.b32	%r175, %r174, 16, 31, -1;
	mov.b32 	%f21, %r175;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f22, %f11, %f21;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r176, %f22;
	shfl.sync.bfly.b32	%r177, %r176, 8, 31, -1;
	mov.b32 	%f23, %r177;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f24, %f22, %f23;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r178, %f12;
	shfl.sync.bfly.b32	%r179, %r178, 16, 31, -1;
	mov.b32 	%f25, %r179;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f12, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r180, %f26;
	shfl.sync.bfly.b32	%r181, %r180, 8, 31, -1;
	mov.b32 	%f27, %r181;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	setp.eq.s32 	%p20, %r114, 0;
	bfe.u32 	%r182, %r113, 5, 2;
	shl.b32 	%r183, %r182, 2;
	shl.b32 	%r184, %r117, 4;
	or.b32  	%r185, %r184, %r183;
	add.s32 	%r34, %r145, %r185;
	mov.b32 	%r35, %f16;
	// begin inline asm
	@%p20 st.shared.b32 [ %r34 + 0 ], %r35;
	// end inline asm
	add.s32 	%r36, %r34, 16;
	mov.b32 	%r37, %f20;
	// begin inline asm
	@%p20 st.shared.b32 [ %r36 + 0 ], %r37;
	// end inline asm
	add.s32 	%r38, %r34, 32;
	mov.b32 	%r39, %f24;
	// begin inline asm
	@%p20 st.shared.b32 [ %r38 + 0 ], %r39;
	// end inline asm
	add.s32 	%r40, %r34, 48;
	mov.b32 	%r41, %f28;
	// begin inline asm
	@%p20 st.shared.b32 [ %r40 + 0 ], %r41;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p24, %r113, 128;
	add.s32 	%r43, %r145, %r115;
	// begin inline asm
	@%p24 ld.shared.b32 %r42, [ %r43 + 0 ];
	// end inline asm
	mov.b32 	%f29, %r42;
	shfl.sync.bfly.b32	%r186, %r42, 2, 31, -1;
	mov.b32 	%f30, %r186;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f31, %f29, %f30;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r187, %f31;
	shfl.sync.bfly.b32	%r188, %r187, 1, 31, -1;
	mov.b32 	%f32, %r188;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f33, %f31, %f32;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r189, %r113, 3;
	setp.eq.s32 	%p41, %r189, 0;
	and.pred  	%p25, %p24, %p41;
	mov.b32 	%r45, %f33;
	// begin inline asm
	@%p25 st.shared.b32 [ %r43 + 0 ], %r45;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r190, %r145, %r184;
$L__tmp2:
	.loc	1 43 19                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:43:19
	ld.shared.u32 	%r47, [%r190];
	ld.shared.u32 	%r48, [%r190+16];
	ld.shared.u32 	%r49, [%r190+32];
	ld.shared.u32 	%r50, [%r190+48];
	bar.sync 	0;
	mad.lo.s32 	%r78, %r117, -12, %r190;
	// begin inline asm
	@%p11 st.shared.v4.b32 [ %r78 + 0 ], { %r47, %r48, %r49, %r50 };
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r191, %r122, 2;
	add.s32 	%r192, %r145, %r191;
	ld.shared.u32 	%r52, [%r192];
	mov.b32 	%r53, 1098907648;
	// begin inline asm
	div.full.f32 %r111, %r52, %r53;
	// end inline asm
	// begin inline asm
	div.full.f32 %r54, %r47, %r53;
	// end inline asm
	mov.b32 	%f34, %r54;
	// begin inline asm
	div.full.f32 %r57, %r48, %r53;
	// end inline asm
	mov.b32 	%f35, %r57;
	// begin inline asm
	div.full.f32 %r60, %r49, %r53;
	// end inline asm
	mov.b32 	%f36, %r60;
	// begin inline asm
	div.full.f32 %r63, %r50, %r53;
	// end inline asm
	mov.b32 	%f37, %r63;
	.loc	1 44 19                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:44:19
	sub.f32 	%f38, %f1, %f34;
	sub.f32 	%f39, %f2, %f35;
	sub.f32 	%f40, %f3, %f36;
	sub.f32 	%f41, %f4, %f37;
	.loc	1 45 20                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:45:20
	mul.f32 	%f42, %f38, %f38;
	mul.f32 	%f43, %f39, %f39;
	mul.f32 	%f44, %f40, %f40;
	mul.f32 	%f45, %f41, %f41;
	.loc	1 47 35                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:47:35
	selp.f32 	%f46, %f42, 0f00000000, %p1;
	selp.f32 	%f47, %f43, 0f00000000, %p1;
	selp.f32 	%f48, %f44, 0f00000000, %p1;
	selp.f32 	%f49, %f45, 0f00000000, %p1;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	mov.b32 	%r193, %f46;
	shfl.sync.bfly.b32	%r194, %r193, 16, 31, -1;
	mov.b32 	%f50, %r194;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f51, %f46, %f50;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r195, %f51;
	shfl.sync.bfly.b32	%r196, %r195, 8, 31, -1;
	mov.b32 	%f52, %r196;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f53, %f51, %f52;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r197, %f47;
	shfl.sync.bfly.b32	%r198, %r197, 16, 31, -1;
	mov.b32 	%f54, %r198;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f55, %f47, %f54;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r199, %f55;
	shfl.sync.bfly.b32	%r200, %r199, 8, 31, -1;
	mov.b32 	%f56, %r200;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f57, %f55, %f56;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r201, %f48;
	shfl.sync.bfly.b32	%r202, %r201, 16, 31, -1;
	mov.b32 	%f58, %r202;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f59, %f48, %f58;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r203, %f59;
	shfl.sync.bfly.b32	%r204, %r203, 8, 31, -1;
	mov.b32 	%f60, %r204;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f61, %f59, %f60;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r205, %f49;
	shfl.sync.bfly.b32	%r206, %r205, 16, 31, -1;
	mov.b32 	%f62, %r206;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f63, %f49, %f62;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r207, %f63;
	shfl.sync.bfly.b32	%r208, %r207, 8, 31, -1;
	mov.b32 	%f64, %r208;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f65, %f63, %f64;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r67, %f53;
	// begin inline asm
	@%p20 st.shared.b32 [ %r34 + 0 ], %r67;
	// end inline asm
	mov.b32 	%r69, %f57;
	// begin inline asm
	@%p20 st.shared.b32 [ %r36 + 0 ], %r69;
	// end inline asm
	mov.b32 	%r71, %f61;
	// begin inline asm
	@%p20 st.shared.b32 [ %r38 + 0 ], %r71;
	// end inline asm
	mov.b32 	%r73, %f65;
	// begin inline asm
	@%p20 st.shared.b32 [ %r40 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p24 ld.shared.b32 %r74, [ %r43 + 0 ];
	// end inline asm
	mov.b32 	%f66, %r74;
	shfl.sync.bfly.b32	%r209, %r74, 2, 31, -1;
	mov.b32 	%f67, %r209;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r210, %f68;
	shfl.sync.bfly.b32	%r211, %r210, 1, 31, -1;
	mov.b32 	%f69, %r211;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r77, %f70;
	// begin inline asm
	@%p25 st.shared.b32 [ %r43 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
$L__tmp4:
	.loc	1 53 28                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:53:28
	ld.shared.u32 	%r79, [%r190];
	ld.shared.u32 	%r80, [%r190+16];
	ld.shared.u32 	%r81, [%r190+32];
	ld.shared.u32 	%r82, [%r190+48];
	bar.sync 	0;
	// begin inline asm
	@%p11 st.shared.v4.b32 [ %r78 + 0 ], { %r79, %r80, %r81, %r82 };
	// end inline asm
	bar.sync 	0;
	.loc	1 50 20                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:50:20
	ld.shared.u32 	%r84, [%r192];
	// begin inline asm
	div.full.f32 %r83, %r84, %r53;
	// end inline asm
	mov.b32 	%f71, %r83;
	// begin inline asm
	div.full.f32 %r86, %r79, %r53;
	// end inline asm
	mov.b32 	%f72, %r86;
	// begin inline asm
	div.full.f32 %r89, %r80, %r53;
	// end inline asm
	mov.b32 	%f73, %r89;
	// begin inline asm
	div.full.f32 %r92, %r81, %r53;
	// end inline asm
	mov.b32 	%f74, %r92;
	// begin inline asm
	div.full.f32 %r95, %r82, %r53;
	// end inline asm
	mov.b32 	%f75, %r95;
	.loc	1 52 20                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:52:20
	add.f32 	%f76, %f71, 0f3727C5AC;
	add.f32 	%f77, %f72, 0f3727C5AC;
	add.f32 	%f78, %f73, 0f3727C5AC;
	add.f32 	%f79, %f74, 0f3727C5AC;
	add.f32 	%f80, %f75, 0f3727C5AC;
	.loc	1 53 28                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:53:28
	rsqrt.approx.ftz.f32 	%f81, %f76;
	rsqrt.approx.ftz.f32 	%f82, %f77;
	rsqrt.approx.ftz.f32 	%f83, %f78;
	rsqrt.approx.ftz.f32 	%f84, %f79;
	rsqrt.approx.ftz.f32 	%f85, %f80;
	.loc	1 35 55                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:35:55
	mov.b32 	%f86, %r29;
	mov.b32 	%f87, %r28;
	mov.b32 	%f88, %r27;
	mov.b32 	%f89, %r26;
	.loc	1 24 23                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:24:23
	or.b32  	%r212, %r112, %r122;
	.loc	1 25 21                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:25:21
	setp.lt.s32 	%p42, %r212, 1024;
	.loc	1 54 20                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:54:20
	sub.f32 	%f90, %f89, %f34;
	sub.f32 	%f91, %f88, %f35;
	sub.f32 	%f92, %f87, %f36;
	sub.f32 	%f93, %f86, %f37;
	.loc	1 56 20                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:56:20
	fma.rn.f32 	%f94, %f90, %f82, %f5;
	fma.rn.f32 	%f95, %f91, %f83, %f6;
	fma.rn.f32 	%f96, %f92, %f84, %f7;
	fma.rn.f32 	%f97, %f93, %f85, %f8;
	.loc	1 57 25                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:57:25
	mul.wide.s32 	%rd14, %r212, 4;
	add.s64 	%rd4, %rd10, %rd14;
	.loc	1 57 37                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:57:37
	setp.eq.s32 	%p43, %r182, 0;
	mov.b32 	%r98, %f81;
	and.pred  	%p34, %p43, %p42;
	// begin inline asm
	@%p34 st.global.b32 [ %rd4 + 0 ], { %r98 };
	// end inline asm
	.loc	1 58 25                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:58:25
	add.s64 	%rd5, %rd11, %rd13;
	.loc	1 58 45                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:58:45
	bar.sync 	0;
	shl.b32 	%r213, %r113, 6;
	and.b32  	%r214, %r213, 448;
	or.b32  	%r215, %r127, %r214;
	add.s32 	%r216, %r145, %r214;
	shl.b32 	%r217, %r215, 2;
	add.s32 	%r99, %r216, %r217;
	mov.b32 	%r100, %f94;
	// begin inline asm
	@%p11 st.shared.b32 [ %r99 + 0 ], %r100;
	// end inline asm
	add.s32 	%r101, %r99, 80;
	mov.b32 	%r102, %f95;
	// begin inline asm
	@%p11 st.shared.b32 [ %r101 + 0 ], %r102;
	// end inline asm
	add.s32 	%r103, %r99, 160;
	mov.b32 	%r104, %f96;
	// begin inline asm
	@%p11 st.shared.b32 [ %r103 + 0 ], %r104;
	// end inline asm
	add.s32 	%r105, %r99, 240;
	mov.b32 	%r106, %f97;
	// begin inline asm
	@%p11 st.shared.b32 [ %r105 + 0 ], %r106;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r218, %r113, 124;
	shl.b32 	%r219, %r218, 2;
	add.s32 	%r220, %r145, %r219;
	add.s32 	%r221, %r220, %r164;
	ld.shared.v4.u32 	{%r107, %r108, %r109, %r110}, [%r221];
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd5 + 0 ], { %r107, %r108, %r109, %r110 };
	// end inline asm
	.loc	1 59 25                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:59:25
	add.s64 	%rd6, %rd9, %rd14;
	.loc	1 59 37                         // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:59:37
	// begin inline asm
	@%p34 st.global.b32 [ %rd6 + 0 ], { %r111 };
	// end inline asm
	.loc	1 59 4                          // cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py:59:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mj/cmjq4i2er7sdn4e6up5ad5jio7wjn4new2zdsaecwdzrdahghmaj.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 216                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd1 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 106
.b8 113
.b8 52
.b8 105
.b8 50
.b8 101
.b8 114
.b8 55
.b8 115
.b8 100
.b8 110
.b8 52
.b8 101
.b8 54
.b8 117
.b8 112
.b8 53
.b8 97
.b8 100
.b8 53
.b8 106
.b8 105
.b8 111
.b8 55
.b8 119
.b8 106
.b8 110
.b8 52
.b8 110
.b8 101
.b8 119
.b8 50
.b8 122
.b8 100
.b8 115
.b8 97
.b8 101
.b8 99
.b8 119
.b8 100
.b8 122
.b8 114
.b8 100
.b8 97
.b8 104
.b8 103
.b8 104
.b8 109
.b8 97
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 106
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x32 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 54
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x95:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xaa:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc2:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 48                                  // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
