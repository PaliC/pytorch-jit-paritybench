; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_max_pool2d_with_indices_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6) local_unnamed_addr !dbg !7 {
  %8 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %9 = shl i32 %8, 4, !dbg !11
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %11 = and i32 %10, 16, !dbg !12
  %12 = and i32 %10, 15, !dbg !12
  %13 = or disjoint i32 %9, %12, !dbg !13
  %14 = icmp slt i32 %13, 16, !dbg !14
  %15 = shl i32 %13, 4, !dbg !15
  %16 = sext i32 %15 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !16
  %18 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %17, i1 %14) #2, !dbg !17
  %19 = bitcast i32 %18 to float, !dbg !17
  %20 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1, i1 true) #2, !dbg !18
  %21 = bitcast i32 %20 to float, !dbg !18
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %2, i1 true) #2, !dbg !19
  %23 = bitcast i32 %22 to float, !dbg !19
  %24 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %3, i1 true) #2, !dbg !20
  %25 = bitcast i32 %24 to float, !dbg !20
  %26 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %4, i1 true) #2, !dbg !21
  %27 = bitcast i32 %26 to float, !dbg !21
  %28 = or disjoint i32 %15, 1, !dbg !22
  %29 = sext i32 %28 to i64, !dbg !23
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !23
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %30, i1 %14) #2, !dbg !24
  %32 = bitcast i32 %31 to float, !dbg !24
  %33 = or disjoint i32 %15, 2, !dbg !25
  %34 = sext i32 %33 to i64, !dbg !26
  %35 = getelementptr float, ptr addrspace(1) %0, i64 %34, !dbg !26
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %14) #2, !dbg !27
  %37 = bitcast i32 %36 to float, !dbg !27
  %38 = or disjoint i32 %15, 3, !dbg !28
  %39 = sext i32 %38 to i64, !dbg !29
  %40 = getelementptr float, ptr addrspace(1) %0, i64 %39, !dbg !29
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %40, i1 %14) #2, !dbg !30
  %42 = bitcast i32 %41 to float, !dbg !30
  %43 = or disjoint i32 %15, 4, !dbg !31
  %44 = sext i32 %43 to i64, !dbg !32
  %45 = getelementptr float, ptr addrspace(1) %0, i64 %44, !dbg !32
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %45, i1 %14) #2, !dbg !33
  %47 = bitcast i32 %46 to float, !dbg !33
  %48 = or disjoint i32 %15, 5, !dbg !34
  %49 = sext i32 %48 to i64, !dbg !35
  %50 = getelementptr float, ptr addrspace(1) %0, i64 %49, !dbg !35
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %50, i1 %14) #2, !dbg !36
  %52 = bitcast i32 %51 to float, !dbg !36
  %53 = or disjoint i32 %15, 6, !dbg !37
  %54 = sext i32 %53 to i64, !dbg !38
  %55 = getelementptr float, ptr addrspace(1) %0, i64 %54, !dbg !38
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %55, i1 %14) #2, !dbg !39
  %57 = bitcast i32 %56 to float, !dbg !39
  %58 = or disjoint i32 %15, 7, !dbg !40
  %59 = sext i32 %58 to i64, !dbg !41
  %60 = getelementptr float, ptr addrspace(1) %0, i64 %59, !dbg !41
  %61 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %60, i1 %14) #2, !dbg !42
  %62 = bitcast i32 %61 to float, !dbg !42
  %63 = or disjoint i32 %15, 8, !dbg !43
  %64 = sext i32 %63 to i64, !dbg !44
  %65 = getelementptr float, ptr addrspace(1) %0, i64 %64, !dbg !44
  %66 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %65, i1 %14) #2, !dbg !45
  %67 = bitcast i32 %66 to float, !dbg !45
  %68 = or disjoint i32 %15, 9, !dbg !46
  %69 = sext i32 %68 to i64, !dbg !47
  %70 = getelementptr float, ptr addrspace(1) %0, i64 %69, !dbg !47
  %71 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %70, i1 %14) #2, !dbg !48
  %72 = bitcast i32 %71 to float, !dbg !48
  %73 = or disjoint i32 %15, 10, !dbg !49
  %74 = sext i32 %73 to i64, !dbg !50
  %75 = getelementptr float, ptr addrspace(1) %0, i64 %74, !dbg !50
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %75, i1 %14) #2, !dbg !51
  %77 = bitcast i32 %76 to float, !dbg !51
  %78 = or disjoint i32 %15, 11, !dbg !52
  %79 = sext i32 %78 to i64, !dbg !53
  %80 = getelementptr float, ptr addrspace(1) %0, i64 %79, !dbg !53
  %81 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %80, i1 %14) #2, !dbg !54
  %82 = bitcast i32 %81 to float, !dbg !54
  %83 = or disjoint i32 %15, 12, !dbg !55
  %84 = sext i32 %83 to i64, !dbg !56
  %85 = getelementptr float, ptr addrspace(1) %0, i64 %84, !dbg !56
  %86 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %85, i1 %14) #2, !dbg !57
  %87 = bitcast i32 %86 to float, !dbg !57
  %88 = or disjoint i32 %15, 13, !dbg !58
  %89 = sext i32 %88 to i64, !dbg !59
  %90 = getelementptr float, ptr addrspace(1) %0, i64 %89, !dbg !59
  %91 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %90, i1 %14) #2, !dbg !60
  %92 = bitcast i32 %91 to float, !dbg !60
  %93 = or disjoint i32 %15, 14, !dbg !61
  %94 = sext i32 %93 to i64, !dbg !62
  %95 = getelementptr float, ptr addrspace(1) %0, i64 %94, !dbg !62
  %96 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %95, i1 %14) #2, !dbg !63
  %97 = bitcast i32 %96 to float, !dbg !63
  %98 = or disjoint i32 %15, 15, !dbg !64
  %99 = sext i32 %98 to i64, !dbg !65
  %100 = getelementptr float, ptr addrspace(1) %0, i64 %99, !dbg !65
  %101 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %100, i1 %14) #2, !dbg !66
  %102 = bitcast i32 %101 to float, !dbg !66
  %103 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %19, float %21) #2, !dbg !67
  %104 = fsub float %103, %23, !dbg !68
  %105 = fcmp ogt float %104, 0.000000e+00, !dbg !69
  %106 = zext i1 %105 to i8, !dbg !70
  %107 = fcmp olt float %104, 0.000000e+00, !dbg !71
  %.neg = sext i1 %107 to i8, !dbg !72
  %108 = tail call float @llvm.fabs.f32(float %104), !dbg !73
  %109 = fadd float %108, 5.000000e-01, !dbg !74
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !75
  %111 = tail call float @llvm.nvvm.floor.ftz.f(float %109), !dbg !75
  %112 = tail call float @llvm.nvvm.floor.f(float %109), !dbg !75
  %113 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %32, float %21) #2, !dbg !76
  %114 = fsub float %113, %23, !dbg !77
  %115 = fcmp ogt float %114, 0.000000e+00, !dbg !78
  %116 = zext i1 %115 to i8, !dbg !79
  %117 = fcmp olt float %114, 0.000000e+00, !dbg !80
  %.neg1 = sext i1 %117 to i8, !dbg !81
  %118 = tail call float @llvm.fabs.f32(float %114), !dbg !82
  %119 = fadd float %118, 5.000000e-01, !dbg !83
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !84
  %121 = tail call float @llvm.nvvm.floor.ftz.f(float %119), !dbg !84
  %122 = tail call float @llvm.nvvm.floor.f(float %119), !dbg !84
  %123 = insertelement <2 x i8> poison, i8 %.neg, i64 0, !dbg !85
  %124 = insertelement <2 x i8> %123, i8 %.neg1, i64 1, !dbg !85
  %125 = insertelement <2 x i8> poison, i8 %106, i64 0, !dbg !85
  %126 = insertelement <2 x i8> %125, i8 %116, i64 1, !dbg !85
  %127 = add nsw <2 x i8> %124, %126, !dbg !85
  %128 = sitofp <2 x i8> %127 to <2 x float>, !dbg !86
  %129 = insertelement <2 x i32> poison, i32 %110, i64 0, !dbg !75
  %130 = insertelement <2 x i32> %129, i32 %120, i64 1, !dbg !75
  %131 = icmp eq <2 x i32> %130, zeroinitializer, !dbg !75
  %132 = insertelement <2 x float> poison, float %112, i64 0, !dbg !75
  %133 = insertelement <2 x float> %132, float %122, i64 1, !dbg !75
  %134 = insertelement <2 x float> poison, float %111, i64 0, !dbg !75
  %135 = insertelement <2 x float> %134, float %121, i64 1, !dbg !75
  %136 = select <2 x i1> %131, <2 x float> %133, <2 x float> %135, !dbg !75
  %137 = fmul <2 x float> %136, %128, !dbg !87
  %138 = insertelement <2 x float> poison, float %25, i64 0, !dbg !88
  %139 = shufflevector <2 x float> %138, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !88
  %140 = fcmp ogt <2 x float> %137, %139, !dbg !88
  %141 = fcmp uno <2 x float> %137, zeroinitializer, !dbg !92
  %142 = or <2 x i1> %140, %141, !dbg !93
  %143 = select <2 x i1> %142, <2 x float> %137, <2 x float> %139, !dbg !94
  %144 = insertelement <2 x float> poison, float %27, i64 0, !dbg !95
  %145 = shufflevector <2 x float> %144, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !95
  %146 = fcmp olt <2 x float> %143, %145, !dbg !95
  %147 = fcmp uno <2 x float> %143, zeroinitializer, !dbg !97
  %148 = or <2 x i1> %146, %147, !dbg !98
  %149 = select <2 x i1> %148, <2 x float> %143, <2 x float> %145, !dbg !99
  %150 = insertelement <2 x float> poison, float %23, i64 0, !dbg !100
  %151 = shufflevector <2 x float> %150, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !100
  %152 = fadd <2 x float> %149, %151, !dbg !100
  %153 = insertelement <2 x float> poison, float %21, i64 0, !dbg !101
  %154 = shufflevector <2 x float> %153, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !101
  %155 = fmul <2 x float> %152, %154, !dbg !101
  %156 = shufflevector <2 x float> %155, <2 x float> <float poison, float 0.000000e+00>, <2 x i32> <i32 1, i32 3>, !dbg !102
  %157 = fcmp ogt <2 x float> %156, %155, !dbg !102
  %158 = fcmp uno <2 x float> %156, %155, !dbg !102
  %shift = shufflevector <2 x i1> %158, <2 x i1> poison, <2 x i32> <i32 1, i32 poison>, !dbg !104
  %159 = or <2 x i1> %157, %shift, !dbg !104
  %160 = extractelement <2 x i1> %159, i64 0, !dbg !104
  %161 = extractelement <2 x float> %155, i64 0, !dbg !105
  %162 = extractelement <2 x float> %155, i64 1, !dbg !105
  %163 = select i1 %160, float %162, float %161, !dbg !105
  %164 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %37, float %21) #2, !dbg !106
  %165 = fsub float %164, %23, !dbg !107
  %166 = fcmp ogt float %165, 0.000000e+00, !dbg !108
  %167 = zext i1 %166 to i8, !dbg !109
  %168 = fcmp olt float %165, 0.000000e+00, !dbg !110
  %.neg2 = sext i1 %168 to i8, !dbg !111
  %169 = add nsw i8 %.neg2, %167, !dbg !112
  %170 = sitofp i8 %169 to float, !dbg !113
  %171 = tail call float @llvm.fabs.f32(float %165), !dbg !114
  %172 = fadd float %171, 5.000000e-01, !dbg !115
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !116
  %.not.i18 = icmp eq i32 %173, 0, !dbg !116
  %174 = tail call float @llvm.nvvm.floor.ftz.f(float %172), !dbg !116
  %175 = tail call float @llvm.nvvm.floor.f(float %172), !dbg !116
  %.0.i19 = select i1 %.not.i18, float %175, float %174, !dbg !116
  %176 = fmul float %.0.i19, %170, !dbg !117
  %177 = fcmp ogt float %176, %25, !dbg !118
  %178 = fcmp uno float %176, 0.000000e+00, !dbg !120
  %179 = or i1 %177, %178, !dbg !121
  %180 = select i1 %179, float %176, float %25, !dbg !122
  %181 = fcmp olt float %180, %27, !dbg !123
  %182 = fcmp uno float %180, 0.000000e+00, !dbg !125
  %183 = or i1 %181, %182, !dbg !126
  %184 = select i1 %183, float %180, float %27, !dbg !127
  %185 = fadd float %184, %23, !dbg !128
  %186 = fmul float %185, %21, !dbg !129
  %187 = fcmp ogt float %186, %163, !dbg !130
  %188 = fcmp uno float %186, 0.000000e+00, !dbg !132
  %189 = or i1 %188, %187, !dbg !133
  %190 = select i1 %189, float %186, float %163, !dbg !134
  %191 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %42, float %21) #2, !dbg !135
  %192 = fsub float %191, %23, !dbg !136
  %193 = fcmp ogt float %192, 0.000000e+00, !dbg !137
  %194 = zext i1 %193 to i8, !dbg !138
  %195 = fcmp olt float %192, 0.000000e+00, !dbg !139
  %.neg3 = sext i1 %195 to i8, !dbg !140
  %196 = add nsw i8 %.neg3, %194, !dbg !141
  %197 = sitofp i8 %196 to float, !dbg !142
  %198 = tail call float @llvm.fabs.f32(float %192), !dbg !143
  %199 = fadd float %198, 5.000000e-01, !dbg !144
  %200 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !145
  %.not.i20 = icmp eq i32 %200, 0, !dbg !145
  %201 = tail call float @llvm.nvvm.floor.ftz.f(float %199), !dbg !145
  %202 = tail call float @llvm.nvvm.floor.f(float %199), !dbg !145
  %.0.i21 = select i1 %.not.i20, float %202, float %201, !dbg !145
  %203 = fmul float %.0.i21, %197, !dbg !146
  %204 = fcmp ogt float %203, %25, !dbg !147
  %205 = fcmp uno float %203, 0.000000e+00, !dbg !149
  %206 = or i1 %204, %205, !dbg !150
  %207 = select i1 %206, float %203, float %25, !dbg !151
  %208 = fcmp olt float %207, %27, !dbg !152
  %209 = fcmp uno float %207, 0.000000e+00, !dbg !154
  %210 = or i1 %208, %209, !dbg !155
  %211 = select i1 %210, float %207, float %27, !dbg !156
  %212 = fadd float %211, %23, !dbg !157
  %213 = fmul float %212, %21, !dbg !158
  %214 = fcmp ogt float %213, %190, !dbg !159
  %215 = fcmp uno float %213, 0.000000e+00, !dbg !161
  %216 = or i1 %215, %214, !dbg !162
  %217 = select i1 %216, float %213, float %190, !dbg !163
  %218 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %47, float %21) #2, !dbg !164
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !165
  %220 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %52, float %21) #2, !dbg !166
  %221 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !167
  %222 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %57, float %21) #2, !dbg !168
  %223 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !169
  %224 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %62, float %21) #2, !dbg !170
  %225 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !171
  %226 = insertelement <4 x float> poison, float %224, i64 0, !dbg !172
  %227 = insertelement <4 x float> %226, float %222, i64 1, !dbg !172
  %228 = insertelement <4 x float> %227, float %220, i64 2, !dbg !172
  %229 = insertelement <4 x float> %228, float %218, i64 3, !dbg !172
  %230 = insertelement <4 x float> poison, float %23, i64 0, !dbg !172
  %231 = shufflevector <4 x float> %230, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !172
  %232 = fsub <4 x float> %229, %231, !dbg !172
  %233 = extractelement <4 x float> %232, i64 3, !dbg !173
  %234 = tail call float @llvm.fabs.f32(float %233), !dbg !173
  %235 = fadd float %234, 5.000000e-01, !dbg !174
  %236 = tail call float @llvm.nvvm.floor.ftz.f(float %235), !dbg !165
  %237 = tail call float @llvm.nvvm.floor.f(float %235), !dbg !165
  %238 = extractelement <4 x float> %232, i64 2, !dbg !175
  %239 = tail call float @llvm.fabs.f32(float %238), !dbg !175
  %240 = fadd float %239, 5.000000e-01, !dbg !176
  %241 = tail call float @llvm.nvvm.floor.ftz.f(float %240), !dbg !167
  %242 = tail call float @llvm.nvvm.floor.f(float %240), !dbg !167
  %243 = extractelement <4 x float> %232, i64 1, !dbg !177
  %244 = tail call float @llvm.fabs.f32(float %243), !dbg !177
  %245 = fadd float %244, 5.000000e-01, !dbg !178
  %246 = tail call float @llvm.nvvm.floor.ftz.f(float %245), !dbg !169
  %247 = tail call float @llvm.nvvm.floor.f(float %245), !dbg !169
  %248 = fcmp ogt <4 x float> %232, zeroinitializer, !dbg !179
  %249 = zext <4 x i1> %248 to <4 x i8>, !dbg !180
  %250 = fcmp olt <4 x float> %232, zeroinitializer, !dbg !181
  %251 = sext <4 x i1> %250 to <4 x i8>, !dbg !182
  %252 = add nsw <4 x i8> %251, %249, !dbg !183
  %253 = sitofp <4 x i8> %252 to <4 x float>, !dbg !184
  %254 = extractelement <4 x float> %232, i64 0, !dbg !185
  %255 = tail call float @llvm.fabs.f32(float %254), !dbg !185
  %256 = fadd float %255, 5.000000e-01, !dbg !186
  %257 = insertelement <4 x i32> poison, i32 %225, i64 0, !dbg !171
  %258 = insertelement <4 x i32> %257, i32 %223, i64 1, !dbg !171
  %259 = insertelement <4 x i32> %258, i32 %221, i64 2, !dbg !171
  %260 = insertelement <4 x i32> %259, i32 %219, i64 3, !dbg !171
  %261 = icmp eq <4 x i32> %260, zeroinitializer, !dbg !171
  %262 = tail call float @llvm.nvvm.floor.ftz.f(float %256), !dbg !171
  %263 = tail call float @llvm.nvvm.floor.f(float %256), !dbg !171
  %264 = insertelement <4 x float> poison, float %263, i64 0, !dbg !171
  %265 = insertelement <4 x float> %264, float %247, i64 1, !dbg !171
  %266 = insertelement <4 x float> %265, float %242, i64 2, !dbg !171
  %267 = insertelement <4 x float> %266, float %237, i64 3, !dbg !171
  %268 = insertelement <4 x float> poison, float %262, i64 0, !dbg !171
  %269 = insertelement <4 x float> %268, float %246, i64 1, !dbg !171
  %270 = insertelement <4 x float> %269, float %241, i64 2, !dbg !171
  %271 = insertelement <4 x float> %270, float %236, i64 3, !dbg !171
  %272 = select <4 x i1> %261, <4 x float> %267, <4 x float> %271, !dbg !171
  %273 = fmul <4 x float> %272, %253, !dbg !187
  %274 = insertelement <4 x float> poison, float %25, i64 0, !dbg !188
  %275 = shufflevector <4 x float> %274, <4 x float> poison, <4 x i32> zeroinitializer, !dbg !188
  %276 = fcmp ogt <4 x float> %273, %275, !dbg !188
  %277 = fcmp uno <4 x float> %273, zeroinitializer, !dbg !190
  %278 = or <4 x i1> %276, %277, !dbg !191
  %279 = select <4 x i1> %278, <4 x float> %273, <4 x float> %275, !dbg !192
  %280 = extractelement <4 x float> %279, i64 3, !dbg !193
  %281 = fcmp olt float %280, %27, !dbg !195
  %282 = fcmp uno <4 x float> %279, zeroinitializer, !dbg !196
  %283 = extractelement <4 x i1> %282, i64 3, !dbg !198
  %284 = or i1 %281, %283, !dbg !198
  %285 = select i1 %284, float %280, float %27, !dbg !193
  %286 = fadd float %285, %23, !dbg !199
  %287 = fmul float %286, %21, !dbg !200
  %288 = fcmp ogt float %287, %217, !dbg !201
  %289 = fcmp uno float %287, 0.000000e+00, !dbg !203
  %290 = or i1 %289, %288, !dbg !204
  %291 = select i1 %290, float %287, float %217, !dbg !205
  %292 = extractelement <4 x float> %279, i64 2, !dbg !206
  %293 = fcmp olt float %292, %27, !dbg !208
  %294 = extractelement <4 x i1> %282, i64 2, !dbg !209
  %295 = or i1 %293, %294, !dbg !209
  %296 = select i1 %295, float %292, float %27, !dbg !206
  %297 = fadd float %296, %23, !dbg !210
  %298 = fmul float %297, %21, !dbg !211
  %299 = fcmp ogt float %298, %291, !dbg !212
  %300 = fcmp uno float %298, 0.000000e+00, !dbg !214
  %301 = or i1 %300, %299, !dbg !215
  %302 = select i1 %301, float %298, float %291, !dbg !216
  %303 = extractelement <4 x float> %279, i64 1, !dbg !217
  %304 = fcmp olt float %303, %27, !dbg !219
  %305 = extractelement <4 x i1> %282, i64 1, !dbg !220
  %306 = or i1 %304, %305, !dbg !220
  %307 = select i1 %306, float %303, float %27, !dbg !217
  %308 = fadd float %307, %23, !dbg !221
  %309 = fmul float %308, %21, !dbg !222
  %310 = fcmp ogt float %309, %302, !dbg !223
  %311 = fcmp uno float %309, 0.000000e+00, !dbg !225
  %312 = or i1 %311, %310, !dbg !226
  %313 = select i1 %312, float %309, float %302, !dbg !227
  %314 = extractelement <4 x float> %279, i64 0, !dbg !228
  %315 = fcmp olt float %314, %27, !dbg !229
  %316 = extractelement <4 x i1> %282, i64 0, !dbg !230
  %317 = or i1 %315, %316, !dbg !230
  %318 = select i1 %317, float %314, float %27, !dbg !228
  %319 = fadd float %318, %23, !dbg !231
  %320 = fmul float %319, %21, !dbg !232
  %321 = fcmp ogt float %320, %313, !dbg !233
  %322 = fcmp uno float %320, 0.000000e+00, !dbg !235
  %323 = or i1 %322, %321, !dbg !236
  %324 = select i1 %323, float %320, float %313, !dbg !237
  %325 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %67, float %21) #2, !dbg !238
  %326 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !239
  %327 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %72, float %21) #2, !dbg !240
  %328 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !241
  %329 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %77, float %21) #2, !dbg !242
  %330 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !243
  %331 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %82, float %21) #2, !dbg !244
  %332 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !245
  %333 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %87, float %21) #2, !dbg !246
  %334 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !247
  %335 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %92, float %21) #2, !dbg !248
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !249
  %337 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %97, float %21) #2, !dbg !250
  %338 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !251
  %339 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %102, float %21) #2, !dbg !252
  %340 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !253
  %341 = insertelement <8 x float> poison, float %339, i64 0, !dbg !254
  %342 = insertelement <8 x float> %341, float %337, i64 1, !dbg !254
  %343 = insertelement <8 x float> %342, float %335, i64 2, !dbg !254
  %344 = insertelement <8 x float> %343, float %333, i64 3, !dbg !254
  %345 = insertelement <8 x float> %344, float %331, i64 4, !dbg !254
  %346 = insertelement <8 x float> %345, float %329, i64 5, !dbg !254
  %347 = insertelement <8 x float> %346, float %327, i64 6, !dbg !254
  %348 = insertelement <8 x float> %347, float %325, i64 7, !dbg !254
  %349 = insertelement <8 x float> poison, float %23, i64 0, !dbg !254
  %350 = shufflevector <8 x float> %349, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !254
  %351 = fsub <8 x float> %348, %350, !dbg !254
  %352 = extractelement <8 x float> %351, i64 7, !dbg !255
  %353 = tail call float @llvm.fabs.f32(float %352), !dbg !255
  %354 = fadd float %353, 5.000000e-01, !dbg !256
  %355 = tail call float @llvm.nvvm.floor.ftz.f(float %354), !dbg !239
  %356 = tail call float @llvm.nvvm.floor.f(float %354), !dbg !239
  %357 = extractelement <8 x float> %351, i64 6, !dbg !257
  %358 = tail call float @llvm.fabs.f32(float %357), !dbg !257
  %359 = fadd float %358, 5.000000e-01, !dbg !258
  %360 = tail call float @llvm.nvvm.floor.ftz.f(float %359), !dbg !241
  %361 = tail call float @llvm.nvvm.floor.f(float %359), !dbg !241
  %362 = extractelement <8 x float> %351, i64 5, !dbg !259
  %363 = tail call float @llvm.fabs.f32(float %362), !dbg !259
  %364 = fadd float %363, 5.000000e-01, !dbg !260
  %365 = tail call float @llvm.nvvm.floor.ftz.f(float %364), !dbg !243
  %366 = tail call float @llvm.nvvm.floor.f(float %364), !dbg !243
  %367 = extractelement <8 x float> %351, i64 4, !dbg !261
  %368 = tail call float @llvm.fabs.f32(float %367), !dbg !261
  %369 = fadd float %368, 5.000000e-01, !dbg !262
  %370 = tail call float @llvm.nvvm.floor.ftz.f(float %369), !dbg !245
  %371 = tail call float @llvm.nvvm.floor.f(float %369), !dbg !245
  %372 = extractelement <8 x float> %351, i64 3, !dbg !263
  %373 = tail call float @llvm.fabs.f32(float %372), !dbg !263
  %374 = fadd float %373, 5.000000e-01, !dbg !264
  %375 = tail call float @llvm.nvvm.floor.ftz.f(float %374), !dbg !247
  %376 = tail call float @llvm.nvvm.floor.f(float %374), !dbg !247
  %377 = extractelement <8 x float> %351, i64 2, !dbg !265
  %378 = tail call float @llvm.fabs.f32(float %377), !dbg !265
  %379 = fadd float %378, 5.000000e-01, !dbg !266
  %380 = tail call float @llvm.nvvm.floor.ftz.f(float %379), !dbg !249
  %381 = tail call float @llvm.nvvm.floor.f(float %379), !dbg !249
  %382 = extractelement <8 x float> %351, i64 1, !dbg !267
  %383 = tail call float @llvm.fabs.f32(float %382), !dbg !267
  %384 = fadd float %383, 5.000000e-01, !dbg !268
  %385 = tail call float @llvm.nvvm.floor.ftz.f(float %384), !dbg !251
  %386 = tail call float @llvm.nvvm.floor.f(float %384), !dbg !251
  %387 = fcmp ogt <8 x float> %351, zeroinitializer, !dbg !269
  %388 = zext <8 x i1> %387 to <8 x i8>, !dbg !270
  %389 = fcmp olt <8 x float> %351, zeroinitializer, !dbg !271
  %390 = sext <8 x i1> %389 to <8 x i8>, !dbg !272
  %391 = add nsw <8 x i8> %390, %388, !dbg !273
  %392 = sitofp <8 x i8> %391 to <8 x float>, !dbg !274
  %393 = extractelement <8 x float> %351, i64 0, !dbg !275
  %394 = tail call float @llvm.fabs.f32(float %393), !dbg !275
  %395 = fadd float %394, 5.000000e-01, !dbg !276
  %396 = insertelement <8 x i32> poison, i32 %340, i64 0, !dbg !253
  %397 = insertelement <8 x i32> %396, i32 %338, i64 1, !dbg !253
  %398 = insertelement <8 x i32> %397, i32 %336, i64 2, !dbg !253
  %399 = insertelement <8 x i32> %398, i32 %334, i64 3, !dbg !253
  %400 = insertelement <8 x i32> %399, i32 %332, i64 4, !dbg !253
  %401 = insertelement <8 x i32> %400, i32 %330, i64 5, !dbg !253
  %402 = insertelement <8 x i32> %401, i32 %328, i64 6, !dbg !253
  %403 = insertelement <8 x i32> %402, i32 %326, i64 7, !dbg !253
  %404 = icmp eq <8 x i32> %403, zeroinitializer, !dbg !253
  %405 = tail call float @llvm.nvvm.floor.ftz.f(float %395), !dbg !253
  %406 = tail call float @llvm.nvvm.floor.f(float %395), !dbg !253
  %407 = insertelement <8 x float> poison, float %406, i64 0, !dbg !253
  %408 = insertelement <8 x float> %407, float %386, i64 1, !dbg !253
  %409 = insertelement <8 x float> %408, float %381, i64 2, !dbg !253
  %410 = insertelement <8 x float> %409, float %376, i64 3, !dbg !253
  %411 = insertelement <8 x float> %410, float %371, i64 4, !dbg !253
  %412 = insertelement <8 x float> %411, float %366, i64 5, !dbg !253
  %413 = insertelement <8 x float> %412, float %361, i64 6, !dbg !253
  %414 = insertelement <8 x float> %413, float %356, i64 7, !dbg !253
  %415 = insertelement <8 x float> poison, float %405, i64 0, !dbg !253
  %416 = insertelement <8 x float> %415, float %385, i64 1, !dbg !253
  %417 = insertelement <8 x float> %416, float %380, i64 2, !dbg !253
  %418 = insertelement <8 x float> %417, float %375, i64 3, !dbg !253
  %419 = insertelement <8 x float> %418, float %370, i64 4, !dbg !253
  %420 = insertelement <8 x float> %419, float %365, i64 5, !dbg !253
  %421 = insertelement <8 x float> %420, float %360, i64 6, !dbg !253
  %422 = insertelement <8 x float> %421, float %355, i64 7, !dbg !253
  %423 = select <8 x i1> %404, <8 x float> %414, <8 x float> %422, !dbg !253
  %424 = fmul <8 x float> %423, %392, !dbg !277
  %425 = insertelement <8 x float> poison, float %25, i64 0, !dbg !278
  %426 = shufflevector <8 x float> %425, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !278
  %427 = fcmp ogt <8 x float> %424, %426, !dbg !278
  %428 = fcmp uno <8 x float> %424, zeroinitializer, !dbg !280
  %429 = or <8 x i1> %427, %428, !dbg !281
  %430 = select <8 x i1> %429, <8 x float> %424, <8 x float> %426, !dbg !282
  %431 = extractelement <8 x float> %430, i64 7, !dbg !283
  %432 = fcmp uno float %431, 0.000000e+00, !dbg !285
  %433 = insertelement <8 x float> poison, float %27, i64 0, !dbg !286
  %434 = shufflevector <8 x float> %433, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !286
  %435 = fcmp olt <8 x float> %430, %434, !dbg !286
  %436 = extractelement <8 x i1> %435, i64 7, !dbg !288
  %437 = or i1 %436, %432, !dbg !288
  %438 = select i1 %437, float %431, float %27, !dbg !283
  %439 = fadd float %438, %23, !dbg !289
  %440 = fmul float %439, %21, !dbg !290
  %441 = fcmp ogt float %440, %324, !dbg !291
  %442 = fcmp uno float %440, 0.000000e+00, !dbg !293
  %443 = or i1 %442, %441, !dbg !294
  %444 = select i1 %443, float %440, float %324, !dbg !295
  %445 = extractelement <8 x float> %430, i64 6, !dbg !296
  %446 = fcmp uno float %445, 0.000000e+00, !dbg !298
  %447 = extractelement <8 x i1> %435, i64 6, !dbg !299
  %448 = or i1 %447, %446, !dbg !299
  %449 = select i1 %448, float %445, float %27, !dbg !296
  %450 = fadd float %449, %23, !dbg !300
  %451 = fmul float %450, %21, !dbg !301
  %452 = fcmp ogt float %451, %444, !dbg !302
  %453 = fcmp uno float %451, 0.000000e+00, !dbg !304
  %454 = or i1 %453, %452, !dbg !305
  %455 = select i1 %454, float %451, float %444, !dbg !306
  %456 = extractelement <8 x float> %430, i64 5, !dbg !307
  %457 = fcmp uno float %456, 0.000000e+00, !dbg !309
  %458 = extractelement <8 x i1> %435, i64 5, !dbg !310
  %459 = or i1 %458, %457, !dbg !310
  %460 = select i1 %459, float %456, float %27, !dbg !307
  %461 = fadd float %460, %23, !dbg !311
  %462 = fmul float %461, %21, !dbg !312
  %463 = fcmp ogt float %462, %455, !dbg !313
  %464 = fcmp uno float %462, 0.000000e+00, !dbg !315
  %465 = or i1 %464, %463, !dbg !316
  %466 = select i1 %465, float %462, float %455, !dbg !317
  %467 = extractelement <8 x float> %430, i64 4, !dbg !318
  %468 = fcmp uno float %467, 0.000000e+00, !dbg !320
  %469 = extractelement <8 x i1> %435, i64 4, !dbg !321
  %470 = or i1 %469, %468, !dbg !321
  %471 = select i1 %470, float %467, float %27, !dbg !318
  %472 = fadd float %471, %23, !dbg !322
  %473 = fmul float %472, %21, !dbg !323
  %474 = fcmp ogt float %473, %466, !dbg !324
  %475 = fcmp uno float %473, 0.000000e+00, !dbg !326
  %476 = or i1 %475, %474, !dbg !327
  %477 = select i1 %476, float %473, float %466, !dbg !328
  %478 = extractelement <8 x float> %430, i64 3, !dbg !329
  %479 = fcmp uno float %478, 0.000000e+00, !dbg !331
  %480 = extractelement <8 x i1> %435, i64 3, !dbg !332
  %481 = or i1 %480, %479, !dbg !332
  %482 = select i1 %481, float %478, float %27, !dbg !329
  %483 = fadd float %482, %23, !dbg !333
  %484 = fmul float %483, %21, !dbg !334
  %485 = fcmp ogt float %484, %477, !dbg !335
  %486 = fcmp uno float %484, 0.000000e+00, !dbg !337
  %487 = or i1 %486, %485, !dbg !338
  %488 = select i1 %487, float %484, float %477, !dbg !339
  %489 = extractelement <8 x float> %430, i64 2, !dbg !340
  %490 = fcmp uno float %489, 0.000000e+00, !dbg !342
  %491 = extractelement <8 x i1> %435, i64 2, !dbg !343
  %492 = or i1 %491, %490, !dbg !343
  %493 = select i1 %492, float %489, float %27, !dbg !340
  %494 = fadd float %493, %23, !dbg !344
  %495 = fmul float %494, %21, !dbg !345
  %496 = fcmp ogt float %495, %488, !dbg !346
  %497 = fcmp uno float %495, 0.000000e+00, !dbg !348
  %498 = or i1 %497, %496, !dbg !349
  %499 = select i1 %498, float %495, float %488, !dbg !350
  %500 = extractelement <8 x float> %430, i64 1, !dbg !351
  %501 = fcmp uno float %500, 0.000000e+00, !dbg !353
  %502 = extractelement <8 x i1> %435, i64 1, !dbg !354
  %503 = or i1 %502, %501, !dbg !354
  %504 = select i1 %503, float %500, float %27, !dbg !351
  %505 = fadd float %504, %23, !dbg !355
  %506 = fmul float %505, %21, !dbg !356
  %507 = fcmp ogt float %506, %499, !dbg !357
  %508 = fcmp uno float %506, 0.000000e+00, !dbg !359
  %509 = or i1 %508, %507, !dbg !360
  %510 = select i1 %509, float %506, float %499, !dbg !361
  %511 = extractelement <8 x float> %430, i64 0, !dbg !362
  %512 = fcmp uno float %511, 0.000000e+00, !dbg !363
  %513 = extractelement <8 x i1> %435, i64 0, !dbg !364
  %514 = or i1 %513, %512, !dbg !364
  %515 = select i1 %514, float %511, float %27, !dbg !362
  %516 = fadd float %515, %23, !dbg !365
  %517 = fmul float %516, %21, !dbg !366
  %518 = fcmp ogt float %517, %510, !dbg !367
  %519 = fcmp uno float %517, 0.000000e+00, !dbg !369
  %520 = or i1 %519, %518, !dbg !370
  %521 = select i1 %520, float %517, float %510, !dbg !371
  %522 = sext i32 %13 to i64, !dbg !372
  %523 = getelementptr float, ptr addrspace(1) %5, i64 %522, !dbg !372
  %524 = icmp eq i32 %11, 0, !dbg !373
  %525 = bitcast float %521 to i32, !dbg !373
  %526 = and i1 %524, %14, !dbg !373
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %525, ptr addrspace(1) %523, i1 %526) #2, !dbg !373
  ret void, !dbg !374
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c5mpabmnfquwdooqmeo744mwb3sf4itch7l2k6nggyol62bcvjdy.py", directory: "inductor_cache/5m")
!4 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_max_pool2d_with_indices_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_max_pool2d_with_indices_0", linkageName: "triton_poi_fused_max_pool2d_with_indices_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 33, scope: !7)
!16 = !DILocation(line: 25, column: 30, scope: !7)
!17 = !DILocation(line: 25, column: 38, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 19, scope: !7)
!20 = !DILocation(line: 30, column: 20, scope: !7)
!21 = !DILocation(line: 32, column: 20, scope: !7)
!22 = !DILocation(line: 34, column: 35, scope: !7)
!23 = !DILocation(line: 34, column: 31, scope: !7)
!24 = !DILocation(line: 34, column: 43, scope: !7)
!25 = !DILocation(line: 35, column: 35, scope: !7)
!26 = !DILocation(line: 35, column: 31, scope: !7)
!27 = !DILocation(line: 35, column: 43, scope: !7)
!28 = !DILocation(line: 36, column: 35, scope: !7)
!29 = !DILocation(line: 36, column: 31, scope: !7)
!30 = !DILocation(line: 36, column: 43, scope: !7)
!31 = !DILocation(line: 37, column: 35, scope: !7)
!32 = !DILocation(line: 37, column: 31, scope: !7)
!33 = !DILocation(line: 37, column: 43, scope: !7)
!34 = !DILocation(line: 38, column: 35, scope: !7)
!35 = !DILocation(line: 38, column: 31, scope: !7)
!36 = !DILocation(line: 38, column: 43, scope: !7)
!37 = !DILocation(line: 39, column: 36, scope: !7)
!38 = !DILocation(line: 39, column: 32, scope: !7)
!39 = !DILocation(line: 39, column: 44, scope: !7)
!40 = !DILocation(line: 40, column: 36, scope: !7)
!41 = !DILocation(line: 40, column: 32, scope: !7)
!42 = !DILocation(line: 40, column: 44, scope: !7)
!43 = !DILocation(line: 41, column: 36, scope: !7)
!44 = !DILocation(line: 41, column: 32, scope: !7)
!45 = !DILocation(line: 41, column: 44, scope: !7)
!46 = !DILocation(line: 42, column: 36, scope: !7)
!47 = !DILocation(line: 42, column: 32, scope: !7)
!48 = !DILocation(line: 42, column: 44, scope: !7)
!49 = !DILocation(line: 43, column: 37, scope: !7)
!50 = !DILocation(line: 43, column: 32, scope: !7)
!51 = !DILocation(line: 43, column: 45, scope: !7)
!52 = !DILocation(line: 44, column: 37, scope: !7)
!53 = !DILocation(line: 44, column: 32, scope: !7)
!54 = !DILocation(line: 44, column: 45, scope: !7)
!55 = !DILocation(line: 45, column: 37, scope: !7)
!56 = !DILocation(line: 45, column: 32, scope: !7)
!57 = !DILocation(line: 45, column: 45, scope: !7)
!58 = !DILocation(line: 46, column: 37, scope: !7)
!59 = !DILocation(line: 46, column: 32, scope: !7)
!60 = !DILocation(line: 46, column: 45, scope: !7)
!61 = !DILocation(line: 47, column: 37, scope: !7)
!62 = !DILocation(line: 47, column: 32, scope: !7)
!63 = !DILocation(line: 47, column: 45, scope: !7)
!64 = !DILocation(line: 48, column: 37, scope: !7)
!65 = !DILocation(line: 48, column: 32, scope: !7)
!66 = !DILocation(line: 48, column: 45, scope: !7)
!67 = !DILocation(line: 49, column: 18, scope: !7)
!68 = !DILocation(line: 50, column: 18, scope: !7)
!69 = !DILocation(line: 52, column: 18, scope: !7)
!70 = !DILocation(line: 53, column: 19, scope: !7)
!71 = !DILocation(line: 54, column: 19, scope: !7)
!72 = !DILocation(line: 55, column: 21, scope: !7)
!73 = !DILocation(line: 58, column: 24, scope: !7)
!74 = !DILocation(line: 60, column: 20, scope: !7)
!75 = !DILocation(line: 61, column: 28, scope: !7)
!76 = !DILocation(line: 67, column: 20, scope: !7)
!77 = !DILocation(line: 68, column: 20, scope: !7)
!78 = !DILocation(line: 69, column: 19, scope: !7)
!79 = !DILocation(line: 70, column: 21, scope: !7)
!80 = !DILocation(line: 71, column: 20, scope: !7)
!81 = !DILocation(line: 72, column: 21, scope: !7)
!82 = !DILocation(line: 75, column: 24, scope: !7)
!83 = !DILocation(line: 76, column: 20, scope: !7)
!84 = !DILocation(line: 77, column: 28, scope: !7)
!85 = !DILocation(line: 56, column: 19, scope: !7)
!86 = !DILocation(line: 57, column: 21, scope: !7)
!87 = !DILocation(line: 62, column: 20, scope: !7)
!88 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !91)
!89 = distinct !DILexicalBlockFile(scope: !7, file: !90, discriminator: 0)
!90 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!91 = !DILocation(line: 63, column: 42, scope: !7)
!92 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !91)
!93 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !91)
!94 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !91)
!95 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !96)
!96 = !DILocation(line: 64, column: 42, scope: !7)
!97 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !96)
!98 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !96)
!99 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !96)
!100 = !DILocation(line: 65, column: 20, scope: !7)
!101 = !DILocation(line: 66, column: 20, scope: !7)
!102 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !103)
!103 = !DILocation(line: 83, column: 42, scope: !7)
!104 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !103)
!105 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !103)
!106 = !DILocation(line: 84, column: 20, scope: !7)
!107 = !DILocation(line: 85, column: 20, scope: !7)
!108 = !DILocation(line: 86, column: 19, scope: !7)
!109 = !DILocation(line: 87, column: 21, scope: !7)
!110 = !DILocation(line: 88, column: 20, scope: !7)
!111 = !DILocation(line: 89, column: 21, scope: !7)
!112 = !DILocation(line: 90, column: 20, scope: !7)
!113 = !DILocation(line: 91, column: 21, scope: !7)
!114 = !DILocation(line: 92, column: 24, scope: !7)
!115 = !DILocation(line: 93, column: 20, scope: !7)
!116 = !DILocation(line: 94, column: 28, scope: !7)
!117 = !DILocation(line: 95, column: 20, scope: !7)
!118 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !119)
!119 = !DILocation(line: 96, column: 42, scope: !7)
!120 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !119)
!121 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !119)
!122 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !119)
!123 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !124)
!124 = !DILocation(line: 97, column: 42, scope: !7)
!125 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !124)
!126 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !124)
!127 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !124)
!128 = !DILocation(line: 98, column: 20, scope: !7)
!129 = !DILocation(line: 99, column: 20, scope: !7)
!130 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !131)
!131 = !DILocation(line: 100, column: 42, scope: !7)
!132 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !131)
!133 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !131)
!134 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !131)
!135 = !DILocation(line: 101, column: 20, scope: !7)
!136 = !DILocation(line: 102, column: 20, scope: !7)
!137 = !DILocation(line: 103, column: 19, scope: !7)
!138 = !DILocation(line: 104, column: 21, scope: !7)
!139 = !DILocation(line: 105, column: 20, scope: !7)
!140 = !DILocation(line: 106, column: 21, scope: !7)
!141 = !DILocation(line: 107, column: 20, scope: !7)
!142 = !DILocation(line: 108, column: 21, scope: !7)
!143 = !DILocation(line: 109, column: 24, scope: !7)
!144 = !DILocation(line: 110, column: 20, scope: !7)
!145 = !DILocation(line: 111, column: 28, scope: !7)
!146 = !DILocation(line: 112, column: 20, scope: !7)
!147 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !148)
!148 = !DILocation(line: 113, column: 42, scope: !7)
!149 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !148)
!150 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !148)
!151 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !148)
!152 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !153)
!153 = !DILocation(line: 114, column: 42, scope: !7)
!154 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !153)
!155 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !153)
!156 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !153)
!157 = !DILocation(line: 115, column: 20, scope: !7)
!158 = !DILocation(line: 116, column: 20, scope: !7)
!159 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !160)
!160 = !DILocation(line: 117, column: 42, scope: !7)
!161 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !160)
!162 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !160)
!163 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !160)
!164 = !DILocation(line: 118, column: 20, scope: !7)
!165 = !DILocation(line: 128, column: 28, scope: !7)
!166 = !DILocation(line: 135, column: 21, scope: !7)
!167 = !DILocation(line: 145, column: 29, scope: !7)
!168 = !DILocation(line: 152, column: 22, scope: !7)
!169 = !DILocation(line: 162, column: 29, scope: !7)
!170 = !DILocation(line: 169, column: 22, scope: !7)
!171 = !DILocation(line: 179, column: 29, scope: !7)
!172 = !DILocation(line: 170, column: 22, scope: !7)
!173 = !DILocation(line: 126, column: 24, scope: !7)
!174 = !DILocation(line: 127, column: 20, scope: !7)
!175 = !DILocation(line: 143, column: 25, scope: !7)
!176 = !DILocation(line: 144, column: 22, scope: !7)
!177 = !DILocation(line: 160, column: 25, scope: !7)
!178 = !DILocation(line: 161, column: 22, scope: !7)
!179 = !DILocation(line: 171, column: 20, scope: !7)
!180 = !DILocation(line: 172, column: 23, scope: !7)
!181 = !DILocation(line: 173, column: 22, scope: !7)
!182 = !DILocation(line: 174, column: 23, scope: !7)
!183 = !DILocation(line: 175, column: 22, scope: !7)
!184 = !DILocation(line: 176, column: 23, scope: !7)
!185 = !DILocation(line: 177, column: 25, scope: !7)
!186 = !DILocation(line: 178, column: 22, scope: !7)
!187 = !DILocation(line: 180, column: 22, scope: !7)
!188 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !189)
!189 = !DILocation(line: 181, column: 44, scope: !7)
!190 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !189)
!191 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !189)
!192 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !189)
!193 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !194)
!194 = !DILocation(line: 131, column: 42, scope: !7)
!195 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !194)
!196 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !197)
!197 = !DILocation(line: 182, column: 44, scope: !7)
!198 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !194)
!199 = !DILocation(line: 132, column: 20, scope: !7)
!200 = !DILocation(line: 133, column: 20, scope: !7)
!201 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !202)
!202 = !DILocation(line: 134, column: 42, scope: !7)
!203 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !202)
!204 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !202)
!205 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !202)
!206 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !207)
!207 = !DILocation(line: 148, column: 44, scope: !7)
!208 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !207)
!209 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !207)
!210 = !DILocation(line: 149, column: 22, scope: !7)
!211 = !DILocation(line: 150, column: 22, scope: !7)
!212 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !213)
!213 = !DILocation(line: 151, column: 44, scope: !7)
!214 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !213)
!215 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !213)
!216 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !213)
!217 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !218)
!218 = !DILocation(line: 165, column: 44, scope: !7)
!219 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !218)
!220 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !218)
!221 = !DILocation(line: 166, column: 22, scope: !7)
!222 = !DILocation(line: 167, column: 22, scope: !7)
!223 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !224)
!224 = !DILocation(line: 168, column: 44, scope: !7)
!225 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !224)
!226 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !224)
!227 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !224)
!228 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !197)
!229 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !197)
!230 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !197)
!231 = !DILocation(line: 183, column: 22, scope: !7)
!232 = !DILocation(line: 184, column: 22, scope: !7)
!233 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !234)
!234 = !DILocation(line: 185, column: 44, scope: !7)
!235 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !234)
!236 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !234)
!237 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !234)
!238 = !DILocation(line: 186, column: 22, scope: !7)
!239 = !DILocation(line: 196, column: 29, scope: !7)
!240 = !DILocation(line: 203, column: 22, scope: !7)
!241 = !DILocation(line: 213, column: 29, scope: !7)
!242 = !DILocation(line: 220, column: 22, scope: !7)
!243 = !DILocation(line: 230, column: 29, scope: !7)
!244 = !DILocation(line: 237, column: 22, scope: !7)
!245 = !DILocation(line: 247, column: 29, scope: !7)
!246 = !DILocation(line: 254, column: 22, scope: !7)
!247 = !DILocation(line: 264, column: 29, scope: !7)
!248 = !DILocation(line: 271, column: 22, scope: !7)
!249 = !DILocation(line: 281, column: 29, scope: !7)
!250 = !DILocation(line: 288, column: 22, scope: !7)
!251 = !DILocation(line: 298, column: 29, scope: !7)
!252 = !DILocation(line: 305, column: 22, scope: !7)
!253 = !DILocation(line: 315, column: 29, scope: !7)
!254 = !DILocation(line: 306, column: 22, scope: !7)
!255 = !DILocation(line: 194, column: 25, scope: !7)
!256 = !DILocation(line: 195, column: 22, scope: !7)
!257 = !DILocation(line: 211, column: 25, scope: !7)
!258 = !DILocation(line: 212, column: 22, scope: !7)
!259 = !DILocation(line: 228, column: 25, scope: !7)
!260 = !DILocation(line: 229, column: 22, scope: !7)
!261 = !DILocation(line: 245, column: 25, scope: !7)
!262 = !DILocation(line: 246, column: 22, scope: !7)
!263 = !DILocation(line: 262, column: 25, scope: !7)
!264 = !DILocation(line: 263, column: 22, scope: !7)
!265 = !DILocation(line: 279, column: 25, scope: !7)
!266 = !DILocation(line: 280, column: 22, scope: !7)
!267 = !DILocation(line: 296, column: 25, scope: !7)
!268 = !DILocation(line: 297, column: 22, scope: !7)
!269 = !DILocation(line: 307, column: 20, scope: !7)
!270 = !DILocation(line: 308, column: 23, scope: !7)
!271 = !DILocation(line: 309, column: 22, scope: !7)
!272 = !DILocation(line: 310, column: 23, scope: !7)
!273 = !DILocation(line: 311, column: 22, scope: !7)
!274 = !DILocation(line: 312, column: 23, scope: !7)
!275 = !DILocation(line: 313, column: 25, scope: !7)
!276 = !DILocation(line: 314, column: 22, scope: !7)
!277 = !DILocation(line: 316, column: 22, scope: !7)
!278 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !279)
!279 = !DILocation(line: 317, column: 44, scope: !7)
!280 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !279)
!281 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !279)
!282 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !279)
!283 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !284)
!284 = !DILocation(line: 199, column: 44, scope: !7)
!285 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !284)
!286 = !DILocation(line: 110, column: 15, scope: !89, inlinedAt: !287)
!287 = !DILocation(line: 318, column: 44, scope: !7)
!288 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !284)
!289 = !DILocation(line: 200, column: 22, scope: !7)
!290 = !DILocation(line: 201, column: 22, scope: !7)
!291 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !292)
!292 = !DILocation(line: 202, column: 44, scope: !7)
!293 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !292)
!294 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !292)
!295 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !292)
!296 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !297)
!297 = !DILocation(line: 216, column: 44, scope: !7)
!298 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !297)
!299 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !297)
!300 = !DILocation(line: 217, column: 22, scope: !7)
!301 = !DILocation(line: 218, column: 22, scope: !7)
!302 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !303)
!303 = !DILocation(line: 219, column: 44, scope: !7)
!304 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !303)
!305 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !303)
!306 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !303)
!307 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !308)
!308 = !DILocation(line: 233, column: 44, scope: !7)
!309 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !308)
!310 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !308)
!311 = !DILocation(line: 234, column: 22, scope: !7)
!312 = !DILocation(line: 235, column: 22, scope: !7)
!313 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !314)
!314 = !DILocation(line: 236, column: 44, scope: !7)
!315 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !314)
!316 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !314)
!317 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !314)
!318 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !319)
!319 = !DILocation(line: 250, column: 44, scope: !7)
!320 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !319)
!321 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !319)
!322 = !DILocation(line: 251, column: 22, scope: !7)
!323 = !DILocation(line: 252, column: 22, scope: !7)
!324 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !325)
!325 = !DILocation(line: 253, column: 44, scope: !7)
!326 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !325)
!327 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !325)
!328 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !325)
!329 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !330)
!330 = !DILocation(line: 267, column: 44, scope: !7)
!331 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !330)
!332 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !330)
!333 = !DILocation(line: 268, column: 22, scope: !7)
!334 = !DILocation(line: 269, column: 22, scope: !7)
!335 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !336)
!336 = !DILocation(line: 270, column: 44, scope: !7)
!337 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !336)
!338 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !336)
!339 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !336)
!340 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !341)
!341 = !DILocation(line: 284, column: 44, scope: !7)
!342 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !341)
!343 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !341)
!344 = !DILocation(line: 285, column: 22, scope: !7)
!345 = !DILocation(line: 286, column: 22, scope: !7)
!346 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !347)
!347 = !DILocation(line: 287, column: 44, scope: !7)
!348 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !347)
!349 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !347)
!350 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !347)
!351 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !352)
!352 = !DILocation(line: 301, column: 44, scope: !7)
!353 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !352)
!354 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !352)
!355 = !DILocation(line: 302, column: 22, scope: !7)
!356 = !DILocation(line: 303, column: 22, scope: !7)
!357 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !358)
!358 = !DILocation(line: 304, column: 44, scope: !7)
!359 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !358)
!360 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !358)
!361 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !358)
!362 = !DILocation(line: 113, column: 29, scope: !89, inlinedAt: !287)
!363 = !DILocation(line: 112, column: 21, scope: !89, inlinedAt: !287)
!364 = !DILocation(line: 112, column: 16, scope: !89, inlinedAt: !287)
!365 = !DILocation(line: 319, column: 22, scope: !7)
!366 = !DILocation(line: 320, column: 22, scope: !7)
!367 = !DILocation(line: 118, column: 15, scope: !89, inlinedAt: !368)
!368 = !DILocation(line: 321, column: 44, scope: !7)
!369 = !DILocation(line: 120, column: 21, scope: !89, inlinedAt: !368)
!370 = !DILocation(line: 120, column: 16, scope: !89, inlinedAt: !368)
!371 = !DILocation(line: 121, column: 29, scope: !89, inlinedAt: !368)
!372 = !DILocation(line: 322, column: 25, scope: !7)
!373 = !DILocation(line: 322, column: 38, scope: !7)
!374 = !DILocation(line: 322, column: 4, scope: !7)
