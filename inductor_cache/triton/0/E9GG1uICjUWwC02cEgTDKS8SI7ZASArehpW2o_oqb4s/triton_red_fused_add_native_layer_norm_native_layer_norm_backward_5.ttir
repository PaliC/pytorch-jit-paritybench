#loc = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0)
#loc1 = loc(unknown)
#loc56 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":53:41)
#loc92 = loc(callsite(#loc1 at #loc56))
module {
  tt.func public @triton_red_fused_add_native_layer_norm_native_layer_norm_backward_5(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<64x8xf32> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c96_i32 = arith.constant 96 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<0.010416667> : tensor<64x1xf32> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999997E-7> : tensor<64x1xf32> loc(#loc1)
    %cst_3 = arith.constant dense<9.600000e+01> : tensor<64x1xf32> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<1x8xi32> loc(#loc1)
    %cst_5 = arith.constant dense<8> : tensor<64x1xi32> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<1x8xf32> loc(#loc1)
    %cst_7 = arith.constant dense<0.000000e+00> : tensor<64x8xf32> loc(#loc1)
    %cst_8 = arith.constant dense<24576> : tensor<64x1xi32> loc(#loc1)
    %cst_9 = arith.constant dense<256> : tensor<1x8xi32> loc(#loc1)
    %cst_10 = arith.constant dense<96> : tensor<1x8xi32> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_11 = arith.constant dense<16> : tensor<64x1xi32> loc(#loc1)
    %cst_12 = arith.constant dense<256> : tensor<64x1xi32> loc(#loc1)
    %cst_13 = arith.constant dense<1024> : tensor<64x1xi32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c64_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc5)
    %4 = tt.splat %1 : i32 -> tensor<64x1xi32> loc(#loc6)
    %5 = arith.addi %4, %3 : tensor<64x1xi32> loc(#loc6)
    %6 = arith.cmpi slt, %5, %cst_13 : tensor<64x1xi32> loc(#loc7)
    %7 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc8)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc9)
    %9 = arith.divsi %5, %cst_12 : tensor<64x1xi32> loc(#loc10)
    %10 = arith.remsi %5, %cst_12 : tensor<64x1xi32> loc(#loc11)
    %11 = arith.remsi %5, %cst_11 : tensor<64x1xi32> loc(#loc12)
    %12 = arith.divsi %5, %cst_11 : tensor<64x1xi32> loc(#loc13)
    %13 = arith.remsi %12, %cst_11 : tensor<64x1xi32> loc(#loc14)
    %14 = tt.broadcast %10 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc15)
    %15 = arith.muli %9, %cst_8 : tensor<64x1xi32> loc(#loc16)
    %16 = tt.broadcast %15 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc17)
    %17 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc18)
    %18 = tt.broadcast %6 : tensor<64x1xi1> -> tensor<64x8xi1> loc(#loc19)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x8x!tt.ptr<f32>> loc(#loc20)
    %20 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc21)
    %21 = arith.remsi %13, %cst_5 : tensor<64x1xi32> loc(#loc22)
    %22 = arith.muli %21, %cst_5 : tensor<64x1xi32> loc(#loc23)
    %23 = tt.broadcast %22 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc24)
    %24 = arith.remsi %11, %cst_5 : tensor<64x1xi32> loc(#loc25)
    %25 = tt.broadcast %24 : tensor<64x1xi32> -> tensor<64x8xi32> loc(#loc26)
    %26 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<64x8x!tt.ptr<f32>> loc(#loc27)
    %27:3 = scf.for %arg9 = %c0_i32 to %c96_i32 step %c8_i32 iter_args(%arg10 = %cst_7, %arg11 = %cst_7, %arg12 = %cst_7) -> (tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32>)  : i32 {
      %41 = tt.splat %arg9 : i32 -> tensor<1x8xi32> loc(#loc29)
      %42 = arith.addi %41, %8 : tensor<1x8xi32> loc(#loc29)
      %43 = arith.cmpi slt, %42, %cst_10 : tensor<1x8xi32> loc(#loc30)
      %44 = arith.muli %42, %cst_9 : tensor<1x8xi32> loc(#loc31)
      %45 = tt.broadcast %44 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc15)
      %46 = arith.addi %14, %45 : tensor<64x8xi32> loc(#loc15)
      %47 = arith.addi %46, %16 : tensor<64x8xi32> loc(#loc17)
      %48 = tt.addptr %17, %47 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc18)
      %49 = tt.broadcast %43 : tensor<1x8xi1> -> tensor<64x8xi1> loc(#loc19)
      %50 = arith.andi %49, %18 : tensor<64x8xi1> loc(#loc19)
      %51 = tt.load %48, %50, %cst_7 evictionPolicy = evict_first : tensor<64x8x!tt.ptr<f32>> loc(#loc32)
      %52 = tt.addptr %19, %42 : tensor<1x8x!tt.ptr<f32>>, tensor<1x8xi32> loc(#loc20)
      %53 = tt.load %52, %43, %cst_6 evictionPolicy = evict_last : tensor<1x8x!tt.ptr<f32>> loc(#loc33)
      %54 = tt.addptr %20, %46 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc21)
      %55 = tt.load %54, %50, %cst_7 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f32>> loc(#loc34)
      %56 = arith.muli %42, %cst_4 : tensor<1x8xi32> loc(#loc35)
      %57 = tt.broadcast %56 : tensor<1x8xi32> -> tensor<64x8xi32> loc(#loc24)
      %58 = arith.addi %23, %57 : tensor<64x8xi32> loc(#loc24)
      %59 = arith.addi %58, %25 : tensor<64x8xi32> loc(#loc26)
      %60 = tt.addptr %26, %59 : tensor<64x8x!tt.ptr<f32>>, tensor<64x8xi32> loc(#loc27)
      %61 = tt.load %60, %50, %cst_7 evictionPolicy = evict_last : tensor<64x8x!tt.ptr<f32>> loc(#loc36)
      %62 = tt.broadcast %53 : tensor<1x8xf32> -> tensor<64x8xf32> loc(#loc37)
      %63 = arith.addf %51, %62 : tensor<64x8xf32> loc(#loc37)
      %64 = arith.addf %55, %61 : tensor<64x8xf32> loc(#loc38)
      %65 = arith.addf %63, %64 : tensor<64x8xf32> loc(#loc39)
      %66 = arith.cmpi eq, %arg9, %c0_i32 : i32 loc(#loc40)
      %67:3 = scf.if %66 -> (tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32>) {
        scf.yield %cst_7, %65, %cst_0 : tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32> loc(#loc83)
      } else {
        %71 = arith.subf %65, %arg10 : tensor<64x8xf32> loc(#loc84)
        %72 = arith.addf %arg12, %cst_0 : tensor<64x8xf32> loc(#loc85)
        %73 = arith.divf %71, %72 : tensor<64x8xf32> loc(#loc86)
        %74 = arith.addf %arg10, %73 : tensor<64x8xf32> loc(#loc87)
        %75 = arith.subf %65, %74 : tensor<64x8xf32> loc(#loc88)
        %76 = arith.mulf %71, %75 : tensor<64x8xf32> loc(#loc89)
        %77 = arith.addf %arg11, %76 : tensor<64x8xf32> loc(#loc90)
        scf.yield %77, %74, %72 : tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32> loc(#loc90)
      } loc(#loc82)
      %68 = arith.select %50, %67#1, %arg10 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc51)
      %69 = arith.select %50, %67#0, %arg11 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc52)
      %70 = arith.select %50, %67#2, %arg12 : tensor<64x8xi1>, tensor<64x8xf32> loc(#loc53)
      scf.yield %68, %69, %70 : tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32> loc(#loc54)
    } loc(#loc28)
    %28:3 = "tt.reduce"(%27#0, %27#1, %27#2) <{axis = 1 : i32}> ({
    ^bb0(%arg9: f32 loc(callsite(#loc1 at #loc56)), %arg10: f32 loc(callsite(#loc1 at #loc56)), %arg11: f32 loc(callsite(#loc1 at #loc56)), %arg12: f32 loc(callsite(#loc1 at #loc56)), %arg13: f32 loc(callsite(#loc1 at #loc56)), %arg14: f32 loc(callsite(#loc1 at #loc56))):
      %41 = arith.subf %arg12, %arg9 : f32 loc(#loc105)
      %42 = arith.addf %arg11, %arg14 : f32 loc(#loc106)
      %43 = arith.cmpf oeq, %42, %cst : f32 loc(#loc107)
      %44 = arith.divf %arg14, %42 : f32 loc(#loc108)
      %45 = arith.select %43, %cst, %44 : f32 loc(#loc109)
      %46 = arith.mulf %41, %45 : f32 loc(#loc110)
      %47 = arith.addf %arg9, %46 : f32 loc(#loc111)
      %48 = arith.addf %arg10, %arg13 : f32 loc(#loc112)
      %49 = arith.mulf %41, %41 : f32 loc(#loc113)
      %50 = arith.mulf %49, %arg11 : f32 loc(#loc114)
      %51 = arith.mulf %50, %45 : f32 loc(#loc115)
      %52 = arith.addf %48, %51 : f32 loc(#loc116)
      tt.reduce.return %47, %52, %42 : f32, f32, f32 loc(#loc91)
    }) : (tensor<64x8xf32>, tensor<64x8xf32>, tensor<64x8xf32>) -> (tensor<64xf32>, tensor<64xf32>, tensor<64xf32>) loc(#loc91)
    %29 = tt.expand_dims %28#0 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc69)
    %30 = tt.expand_dims %28#1 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc70)
    %31 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc71)
    %32 = tt.addptr %31, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc71)
    tt.store %32, %29, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc72)
    %33 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc73)
    %34 = tt.addptr %33, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc73)
    tt.store %34, %30, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc74)
    %35 = arith.divf %30, %cst_3 : tensor<64x1xf32> loc(#loc75)
    %36 = arith.addf %35, %cst_2 : tensor<64x1xf32> loc(#loc76)
    %37 = tt.extern_elementwise %36 {libname = "", libpath = "", pure = true, symbol = "__nv_rsqrtf"} : (tensor<64x1xf32>) -> tensor<64x1xf32> loc(#loc77)
    %38 = arith.mulf %37, %cst_1 : tensor<64x1xf32> loc(#loc78)
    %39 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<64x1x!tt.ptr<f32>> loc(#loc79)
    %40 = tt.addptr %39, %5 : tensor<64x1x!tt.ptr<f32>>, tensor<64x1xi32> loc(#loc79)
    tt.store %40, %38, %6 : tensor<64x1x!tt.ptr<f32>> loc(#loc80)
    tt.return loc(#loc81)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":22:28)
#loc3 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":22:33)
#loc4 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":23:36)
#loc5 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":23:44)
#loc6 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":23:23)
#loc7 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":24:21)
#loc8 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":25:25)
#loc9 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":25:33)
#loc10 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":26:19)
#loc11 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":27:19)
#loc12 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":28:19)
#loc13 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":29:21)
#loc14 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":29:27)
#loc15 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":38:39)
#loc16 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":38:54)
#loc17 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":38:48)
#loc18 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":38:34)
#loc19 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":38:67)
#loc20 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":39:34)
#loc21 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":40:34)
#loc22 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:43)
#loc23 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:38)
#loc24 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:49)
#loc25 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:64)
#loc26 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:59)
#loc27 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:34)
#loc28 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":34:36)
#loc29 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":35:27)
#loc30 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":36:25)
#loc31 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":38:43)
#loc32 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":38:59)
#loc33 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":39:39)
#loc34 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":40:48)
#loc35 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:52)
#loc36 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":41:70)
#loc37 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":42:22)
#loc38 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":43:22)
#loc39 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":44:22)
#loc40 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":47:62)
#loc41 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":178:7)
#loc42 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":47:51)
#loc43 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":181:31)
#loc44 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":183:24)
#loc45 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":184:30)
#loc46 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:34)
#loc47 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":185:26)
#loc48 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:39)
#loc49 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:31)
#loc50 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":186:22)
#loc51 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":49:60)
#loc52 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":50:56)
#loc53 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":51:64)
#loc54 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":51:8)
#loc55 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":204:46)
#loc57 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":192:21)
#loc58 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":193:28)
#loc59 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:39)
#loc60 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:60)
#loc61 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":194:49)
#loc62 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:25)
#loc63 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":196:17)
#loc64 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:15)
#loc65 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:30)
#loc66 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:38)
#loc67 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:49)
#loc68 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":197:22)
#loc69 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":55:20)
#loc70 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":56:20)
#loc71 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":58:25)
#loc72 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":58:36)
#loc73 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":59:25)
#loc74 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":59:36)
#loc75 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":61:19)
#loc76 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":63:20)
#loc77 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":64:28)
#loc78 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":66:20)
#loc79 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":67:25)
#loc80 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":67:37)
#loc81 = loc("inductor_cache/ca/ccauazzyyzi2wjjvhhm3msbrwnbtdkvbx22n4hkcws4leyd6krca.py":67:4)
#loc82 = loc(callsite(#loc41 at #loc42))
#loc83 = loc(callsite(#loc43 at #loc42))
#loc84 = loc(callsite(#loc44 at #loc42))
#loc85 = loc(callsite(#loc45 at #loc42))
#loc86 = loc(callsite(#loc46 at #loc42))
#loc87 = loc(callsite(#loc47 at #loc42))
#loc88 = loc(callsite(#loc48 at #loc42))
#loc89 = loc(callsite(#loc49 at #loc42))
#loc90 = loc(callsite(#loc50 at #loc42))
#loc91 = loc(callsite(#loc55 at #loc56))
#loc93 = loc(callsite(#loc57 at #loc55))
#loc94 = loc(callsite(#loc58 at #loc55))
#loc95 = loc(callsite(#loc59 at #loc55))
#loc96 = loc(callsite(#loc60 at #loc55))
#loc97 = loc(callsite(#loc61 at #loc55))
#loc98 = loc(callsite(#loc62 at #loc55))
#loc99 = loc(callsite(#loc63 at #loc55))
#loc100 = loc(callsite(#loc64 at #loc55))
#loc101 = loc(callsite(#loc65 at #loc55))
#loc102 = loc(callsite(#loc66 at #loc55))
#loc103 = loc(callsite(#loc67 at #loc55))
#loc104 = loc(callsite(#loc68 at #loc55))
#loc105 = loc(callsite(#loc93 at #loc56))
#loc106 = loc(callsite(#loc94 at #loc56))
#loc107 = loc(callsite(#loc95 at #loc56))
#loc108 = loc(callsite(#loc96 at #loc56))
#loc109 = loc(callsite(#loc97 at #loc56))
#loc110 = loc(callsite(#loc98 at #loc56))
#loc111 = loc(callsite(#loc99 at #loc56))
#loc112 = loc(callsite(#loc100 at #loc56))
#loc113 = loc(callsite(#loc101 at #loc56))
#loc114 = loc(callsite(#loc102 at #loc56))
#loc115 = loc(callsite(#loc103 at #loc56))
#loc116 = loc(callsite(#loc104 at #loc56))
