; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__to_copy_cat_clone_copy_div_mul_sub_1(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 8, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 254, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 1, !dbg !13
  %11 = icmp slt i32 %9, 2048, !dbg !14
  %12 = sdiv i32 %9, 16, !dbg !15
  %13 = srem i32 %12, 2, !dbg !16
  %.frozen = freeze i32 %9, !dbg !17
  %14 = sdiv i32 %.frozen, 4, !dbg !17
  %15 = mul i32 %14, 4, !dbg !18
  %.decomposed = sub i32 %.frozen, %15, !dbg !18
  %16 = srem i32 %10, 4, !dbg !18
  %17 = srem i32 %14, 4, !dbg !19
  %18 = sdiv i32 %9, 32, !dbg !20
  %19 = icmp eq i32 %13, 0, !dbg !21
  %20 = sitofp i32 %.decomposed to float, !dbg !22
  %21 = sitofp i32 %16 to float, !dbg !22
  %22 = srem i32 %18, 16, !dbg !23
  %.lhs.trunc = trunc nsw i32 %22 to i8, !dbg !24
  %.lhs.trunc.frozen = freeze i8 %.lhs.trunc, !dbg !25
  %23 = sdiv i8 %.lhs.trunc.frozen, 4, !dbg !25
  %24 = mul i8 %23, 4, !dbg !24
  %.decomposed3 = sub i8 %.lhs.trunc.frozen, %24, !dbg !24
  %25 = insertelement <2 x i8> poison, i8 %.decomposed3, i64 0, !dbg !24
  %26 = insertelement <2 x i8> %25, i8 %23, i64 1, !dbg !24
  %27 = sdiv i32 %9, 512, !dbg !26
  %28 = insertelement <4 x i32> poison, i32 %27, i64 0, !dbg !27
  %29 = insertelement <4 x i32> %28, i32 %17, i64 1, !dbg !27
  %30 = sext <2 x i8> %26 to <2 x i32>, !dbg !27
  %31 = shufflevector <2 x i32> %30, <2 x i32> poison, <4 x i32> <i32 0, i32 1, i32 poison, i32 poison>, !dbg !27
  %32 = shufflevector <4 x i32> %29, <4 x i32> %31, <4 x i32> <i32 0, i32 1, i32 4, i32 5>, !dbg !27
  %33 = shl nsw <4 x i32> %32, <i32 8, i32 4, i32 2, i32 6>, !dbg !27
  %34 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %33), !dbg !28
  %op.rdx = add i32 %34, %.decomposed, !dbg !29
  %35 = sext i32 %op.rdx to i64, !dbg !30
  %36 = getelementptr float, ptr addrspace(1) %0, i64 %35, !dbg !30
  %37 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %36, i1 %11, i32 0, i1 %11, i32 0, i1 %11) #2, !dbg !31
  %38 = extractvalue { i32, i32 } %37, 0, !dbg !31
  %39 = extractvalue { i32, i32 } %37, 1, !dbg !31
  %40 = bitcast i32 %38 to float, !dbg !31
  %41 = bitcast i32 %39 to float, !dbg !31
  %42 = fsub float %20, %40, !dbg !32
  %43 = fsub float %21, %41, !dbg !32
  %44 = fmul float %42, 2.000000e+00, !dbg !33
  %45 = fmul float %43, 2.000000e+00, !dbg !33
  %46 = fmul float %44, 0x3FD5555560000000, !dbg !34
  %47 = fmul float %45, 0x3FD5555560000000, !dbg !34
  %48 = fadd float %46, -1.000000e+00, !dbg !35
  %49 = fadd float %47, -1.000000e+00, !dbg !35
  %50 = icmp slt i32 %13, 1, !dbg !36
  %51 = select i1 %50, i32 %.decomposed, i32 0, !dbg !37
  %52 = select i1 %50, i32 %16, i32 0, !dbg !37
  %53 = sitofp i32 %51 to float, !dbg !38
  %54 = sitofp i32 %52 to float, !dbg !38
  %55 = and i1 %11, %50, !dbg !39
  %56 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %36, i1 %55, i32 0, i1 %55, i32 0, i1 %55) #2, !dbg !40
  %57 = extractvalue { i32, i32 } %56, 0, !dbg !40
  %58 = extractvalue { i32, i32 } %56, 1, !dbg !40
  %59 = bitcast i32 %57 to float, !dbg !40
  %60 = bitcast i32 %58 to float, !dbg !40
  %61 = fsub float %53, %59, !dbg !41
  %62 = fsub float %54, %60, !dbg !41
  %63 = select i1 %50, i32 %.decomposed, i32 %17, !dbg !37
  %64 = select i1 %50, i32 %16, i32 %17, !dbg !37
  %65 = sitofp i32 %63 to float, !dbg !42
  %66 = sitofp i32 %64 to float, !dbg !42
  %67 = select i1 %50, float %61, float %65, !dbg !37
  %68 = select i1 %50, float %62, float %66, !dbg !37
  %69 = select i1 %19, float %48, float %67, !dbg !43
  %70 = select i1 %19, float %49, float %68, !dbg !43
  %71 = sext i32 %9 to i64, !dbg !44
  %72 = getelementptr float, ptr addrspace(1) %1, i64 %71, !dbg !44
  %73 = bitcast float %69 to i32, !dbg !45
  %74 = bitcast float %70 to i32, !dbg !45
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %73, i32 %74, ptr addrspace(1) %72, i1 %11) #2, !dbg !45
  ret void, !dbg !46
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgtva3k4cdam2dhtmeghkwdkbyfer64imwmkzeai3xeh5na6jpkr.py", directory: "inductor_cache/gt")
!4 = !{ptr @triton_poi_fused__to_copy_cat_clone_copy_div_mul_sub_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__to_copy_cat_clone_copy_div_mul_sub_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__to_copy_cat_clone_copy_div_mul_sub_1", linkageName: "triton_poi_fused__to_copy_cat_clone_copy_div_mul_sub_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 25, column: 19, scope: !7)
!19 = !DILocation(line: 26, column: 26, scope: !7)
!20 = !DILocation(line: 27, column: 19, scope: !7)
!21 = !DILocation(line: 31, column: 19, scope: !7)
!22 = !DILocation(line: 51, column: 21, scope: !7)
!23 = !DILocation(line: 52, column: 47, scope: !7)
!24 = !DILocation(line: 52, column: 54, scope: !7)
!25 = !DILocation(line: 52, column: 87, scope: !7)
!26 = !DILocation(line: 52, column: 103, scope: !7)
!27 = !DILocation(line: 52, column: 97, scope: !7)
!28 = !DILocation(line: 52, column: 92, scope: !7)
!29 = !DILocation(line: 52, column: 36, scope: !7)
!30 = !DILocation(line: 52, column: 31, scope: !7)
!31 = !DILocation(line: 52, column: 109, scope: !7)
!32 = !DILocation(line: 53, column: 20, scope: !7)
!33 = !DILocation(line: 70, column: 20, scope: !7)
!34 = !DILocation(line: 72, column: 20, scope: !7)
!35 = !DILocation(line: 74, column: 20, scope: !7)
!36 = !DILocation(line: 75, column: 19, scope: !7)
!37 = !DILocation(line: 0, scope: !7)
!38 = !DILocation(line: 93, column: 21, scope: !7)
!39 = !DILocation(line: 94, column: 117, scope: !7)
!40 = !DILocation(line: 94, column: 109, scope: !7)
!41 = !DILocation(line: 95, column: 20, scope: !7)
!42 = !DILocation(line: 108, column: 21, scope: !7)
!43 = !DILocation(line: 110, column: 34, scope: !7)
!44 = !DILocation(line: 111, column: 25, scope: !7)
!45 = !DILocation(line: 111, column: 37, scope: !7)
!46 = !DILocation(line: 111, column: 4, scope: !7)
