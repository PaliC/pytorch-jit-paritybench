#blocked = #triton_gpu.blocked<{sizePerThread = [2], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_17(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg6: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0), %arg13: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<16> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<256xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<256xf32, #blocked> loc(#loc1)
    %cst_2 = arith.constant 9.99999974E-6 : f32 loc(#loc1)
    %cst_3 = arith.constant 1.000000e+00 : f32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %cst_4 = arith.constant dense<32> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<1024> : tensor<256xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<256> : tensor<256xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32, #blocked> loc(#loc5)
    %5 = arith.divsi %4, %cst_4 : tensor<256xi32, #blocked> loc(#loc6)
    %6 = arith.remsi %5, %cst_4 : tensor<256xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %4, %cst_4 : tensor<256xi32, #blocked> loc(#loc8)
    %8 = arith.divsi %4, %cst_5 : tensor<256xi32, #blocked> loc(#loc9)
    %9 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>, #blocked> loc(#loc10)
    %10 = tt.addptr %9, %6 : tensor<256x!tt.ptr<i64>, #blocked>, tensor<256xi32, #blocked> loc(#loc10)
    %11 = tt.load %10 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>, #blocked> loc(#loc11)
    %12 = tt.splat %arg2 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>, #blocked> loc(#loc12)
    %13 = tt.addptr %12, %7 : tensor<256x!tt.ptr<i64>, #blocked>, tensor<256xi32, #blocked> loc(#loc12)
    %14 = tt.load %13 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>, #blocked> loc(#loc13)
    %15 = tt.splat %arg4 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>, #blocked> loc(#loc14)
    %16 = tt.addptr %15, %7 : tensor<256x!tt.ptr<i64>, #blocked>, tensor<256xi32, #blocked> loc(#loc14)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>, #blocked> loc(#loc15)
    %18 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc16)
    %19 = tt.addptr %18, %7 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc16)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc17)
    %21 = tt.splat %arg6 : !tt.ptr<i64> -> tensor<256x!tt.ptr<i64>, #blocked> loc(#loc18)
    %22 = tt.addptr %21, %6 : tensor<256x!tt.ptr<i64>, #blocked>, tensor<256xi32, #blocked> loc(#loc18)
    %23 = tt.load %22 evictionPolicy = evict_last : tensor<256x!tt.ptr<i64>, #blocked> loc(#loc19)
    %24 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc20)
    %25 = tt.addptr %24, %6 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc20)
    %26 = tt.load %25 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc21)
    %27 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc22)
    %28 = tt.addptr %27, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc22)
    %29 = tt.load %28 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc23)
    %30 = tt.addptr %arg9, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc24)
    %31 = tt.load %30 : !tt.ptr<f32> loc(#loc25)
    %32 = tt.splat %31 : f32 -> tensor<256xf32, #blocked> loc(#loc26)
    %33 = tt.addptr %arg10, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc27)
    %34 = tt.load %33 : !tt.ptr<f32> loc(#loc28)
    %35 = tt.addptr %arg11, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc29)
    %36 = tt.load %35 : !tt.ptr<f32> loc(#loc30)
    %37 = tt.splat %36 : f32 -> tensor<256xf32, #blocked> loc(#loc31)
    %38 = tt.addptr %arg12, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc32)
    %39 = tt.load %38 : !tt.ptr<f32> loc(#loc33)
    %40 = tt.splat %39 : f32 -> tensor<256xf32, #blocked> loc(#loc34)
    %41 = arith.addi %11, %cst : tensor<256xi64, #blocked> loc(#loc35)
    %42 = arith.cmpi slt, %11, %cst_0 : tensor<256xi64, #blocked> loc(#loc36)
    %43 = arith.select %42, %41, %11 : tensor<256xi1, #blocked>, tensor<256xi64, #blocked> loc(#loc37)
    %44 = arith.addi %14, %cst : tensor<256xi64, #blocked> loc(#loc38)
    %45 = arith.cmpi slt, %14, %cst_0 : tensor<256xi64, #blocked> loc(#loc39)
    %46 = arith.select %45, %44, %14 : tensor<256xi1, #blocked>, tensor<256xi64, #blocked> loc(#loc40)
    %47 = arith.muli %43, %cst : tensor<256xi64, #blocked> loc(#loc41)
    %48 = arith.addi %46, %47 : tensor<256xi64, #blocked> loc(#loc42)
    %49 = arith.muli %8, %cst_6 : tensor<256xi32, #blocked> loc(#loc43)
    %50 = arith.extsi %49 : tensor<256xi32, #blocked> to tensor<256xi64, #blocked> loc(#loc44)
    %51 = arith.addi %48, %50 : tensor<256xi64, #blocked> loc(#loc44)
    %52 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc45)
    %53 = tt.addptr %52, %51 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi64, #blocked> loc(#loc45)
    %54 = tt.load %53 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc46)
    %55 = arith.addi %17, %cst : tensor<256xi64, #blocked> loc(#loc47)
    %56 = arith.cmpi slt, %17, %cst_0 : tensor<256xi64, #blocked> loc(#loc48)
    %57 = arith.select %56, %55, %17 : tensor<256xi1, #blocked>, tensor<256xi64, #blocked> loc(#loc49)
    %58 = arith.addi %57, %47 : tensor<256xi64, #blocked> loc(#loc50)
    %59 = arith.addi %58, %50 : tensor<256xi64, #blocked> loc(#loc51)
    %60 = tt.addptr %52, %59 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi64, #blocked> loc(#loc52)
    %61 = tt.load %60 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc53)
    %62 = arith.subf %61, %54 : tensor<256xf32, #blocked> loc(#loc54)
    %63 = arith.mulf %62, %20 : tensor<256xf32, #blocked> loc(#loc55)
    %64 = arith.addf %54, %63 : tensor<256xf32, #blocked> loc(#loc56)
    %65 = arith.addi %23, %cst : tensor<256xi64, #blocked> loc(#loc57)
    %66 = arith.cmpi slt, %23, %cst_0 : tensor<256xi64, #blocked> loc(#loc58)
    %67 = arith.select %66, %65, %23 : tensor<256xi1, #blocked>, tensor<256xi64, #blocked> loc(#loc59)
    %68 = arith.muli %67, %cst : tensor<256xi64, #blocked> loc(#loc60)
    %69 = arith.addi %46, %68 : tensor<256xi64, #blocked> loc(#loc61)
    %70 = arith.addi %69, %50 : tensor<256xi64, #blocked> loc(#loc62)
    %71 = tt.addptr %52, %70 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi64, #blocked> loc(#loc63)
    %72 = tt.load %71 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc64)
    %73 = arith.addi %57, %68 : tensor<256xi64, #blocked> loc(#loc65)
    %74 = arith.addi %73, %50 : tensor<256xi64, #blocked> loc(#loc66)
    %75 = tt.addptr %52, %74 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi64, #blocked> loc(#loc67)
    %76 = tt.load %75 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc68)
    %77 = arith.subf %76, %72 : tensor<256xf32, #blocked> loc(#loc69)
    %78 = arith.mulf %77, %20 : tensor<256xf32, #blocked> loc(#loc70)
    %79 = arith.addf %72, %78 : tensor<256xf32, #blocked> loc(#loc71)
    %80 = arith.subf %79, %64 : tensor<256xf32, #blocked> loc(#loc72)
    %81 = arith.mulf %80, %26 : tensor<256xf32, #blocked> loc(#loc73)
    %82 = arith.addf %64, %81 : tensor<256xf32, #blocked> loc(#loc74)
    %83 = arith.subf %29, %32 : tensor<256xf32, #blocked> loc(#loc75)
    %84 = arith.addf %34, %cst_2 : f32 loc(#loc76)
    %85 = tt.extern_elementwise %84 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (f32) -> f32 loc(#loc77)
    %86 = arith.divf %cst_3, %85 : f32 loc(#loc78)
    %87 = tt.splat %86 : f32 -> tensor<256xf32, #blocked> loc(#loc78)
    %88 = arith.mulf %83, %87 : tensor<256xf32, #blocked> loc(#loc79)
    %89 = arith.mulf %88, %37 : tensor<256xf32, #blocked> loc(#loc80)
    %90 = arith.addf %89, %40 : tensor<256xf32, #blocked> loc(#loc81)
    %91 = arith.cmpf ogt, %cst_1, %90 : tensor<256xf32, #blocked> loc(#loc89)
    %92 = arith.select %91, %cst_1, %90 : tensor<256xi1, #blocked>, tensor<256xf32, #blocked> loc(#loc90)
    %93 = arith.addf %82, %92 : tensor<256xf32, #blocked> loc(#loc85)
    %94 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>, #blocked> loc(#loc86)
    %95 = tt.addptr %94, %4 : tensor<256x!tt.ptr<f32>, #blocked>, tensor<256xi32, #blocked> loc(#loc86)
    tt.store %95, %93 : tensor<256x!tt.ptr<f32>, #blocked> loc(#loc87)
    tt.return loc(#loc88)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":21:28)
#loc3 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":21:33)
#loc4 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":22:36)
#loc5 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":22:23)
#loc6 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":24:21)
#loc7 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":24:27)
#loc8 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":25:19)
#loc9 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":26:19)
#loc10 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":28:30)
#loc11 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":28:35)
#loc12 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":29:30)
#loc13 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":29:35)
#loc14 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":30:31)
#loc15 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":30:36)
#loc16 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":31:31)
#loc17 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":31:36)
#loc18 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":32:31)
#loc19 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":32:36)
#loc20 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":33:31)
#loc21 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":33:36)
#loc22 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":34:31)
#loc23 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":34:36)
#loc24 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":35:31)
#loc25 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":35:20)
#loc26 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":36:35)
#loc27 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":37:31)
#loc28 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":37:20)
#loc29 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":39:32)
#loc30 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":39:20)
#loc31 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":40:35)
#loc32 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":41:32)
#loc33 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":41:20)
#loc34 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":42:35)
#loc35 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":44:18)
#loc36 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":45:18)
#loc37 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":46:32)
#loc38 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":47:18)
#loc39 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":48:18)
#loc40 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":49:32)
#loc41 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":50:40)
#loc42 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":50:37)
#loc43 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":50:51)
#loc44 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":50:47)
#loc45 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":50:30)
#loc46 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":50:56)
#loc47 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":51:20)
#loc48 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":52:20)
#loc49 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":53:35)
#loc50 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":54:39)
#loc51 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":54:49)
#loc52 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":54:31)
#loc53 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":54:58)
#loc54 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":55:20)
#loc55 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":56:20)
#loc56 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":57:19)
#loc57 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":58:20)
#loc58 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":59:20)
#loc59 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":60:35)
#loc60 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":61:41)
#loc61 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":61:38)
#loc62 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":61:49)
#loc63 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":61:31)
#loc64 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":61:58)
#loc65 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":62:39)
#loc66 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":62:50)
#loc67 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":62:31)
#loc68 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":62:59)
#loc69 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":63:20)
#loc70 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":64:20)
#loc71 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":65:20)
#loc72 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":66:20)
#loc73 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":67:20)
#loc74 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":68:20)
#loc75 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":69:20)
#loc76 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":71:20)
#loc77 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":72:27)
#loc78 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":74:20)
#loc79 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":77:20)
#loc80 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":78:20)
#loc81 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":79:20)
#loc82 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc83 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":81:42)
#loc84 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc85 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":82:20)
#loc86 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":83:28)
#loc87 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":83:40)
#loc88 = loc("inductor_cache/mh/cmhttt4f5rwzo7csehw76jozfi2z3viemduelasyoztipxtcz5mq.py":83:4)
#loc89 = loc(callsite(#loc82 at #loc83))
#loc90 = loc(callsite(#loc84 at #loc83))
