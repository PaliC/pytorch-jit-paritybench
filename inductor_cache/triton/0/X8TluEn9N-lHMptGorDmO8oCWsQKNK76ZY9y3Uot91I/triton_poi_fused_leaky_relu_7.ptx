//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_leaky_relu_7 // -- Begin function triton_poi_fused_leaky_relu_7
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_leaky_relu_7
.visible .entry triton_poi_fused_leaky_relu_7(
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_7_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_7_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_leaky_relu_7_param_2,
	.param .u32 triton_poi_fused_leaky_relu_7_param_3,
	.param .u32 triton_poi_fused_leaky_relu_7_param_4
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<14>;
	.reg .b16 	%rs<9>;
	.reg .b32 	%r<33>;
	.reg .f32 	%f<11>;
	.reg .b64 	%rd<16>;
	.loc	1 19 0                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_leaky_relu_7_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_leaky_relu_7_param_1];
$L__tmp0:
	.loc	1 22 28                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:22:33
	shl.b32 	%r11, %r1, 8;
	ld.param.u64 	%rd10, [triton_poi_fused_leaky_relu_7_param_2];
	.loc	1 23 44                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:23:44
	mov.u32 	%r12, %tid.x;
	and.b32  	%r13, %r12, 127;
	shl.b32 	%r14, %r12, 1;
	and.b32  	%r15, %r14, 254;
	.loc	1 23 23                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:23:23
	or.b32  	%r16, %r11, %r13;
	or.b32  	%r17, %r16, 128;
	or.b32  	%r18, %r11, %r15;
	.loc	1 24 21                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:24:21
	setp.lt.s32 	%p3, %r16, 256;
	setp.lt.s32 	%p4, %r17, 256;
	setp.lt.s32 	%p10, %r18, 256;
	.loc	1 25 28                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 27 21                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:27:21
	setp.lt.s32 	%p11, %r2, 4;
	.loc	1 30 19                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:30:19
	bfe.u32 	%r19, %r1, 23, 1;
	add.s32 	%r20, %r16, %r19;
	shr.s32 	%r21, %r20, 1;
	add.s32 	%r22, %r17, %r19;
	shr.s32 	%r23, %r22, 1;
	.loc	1 32 41                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:41
	shl.b32 	%r24, %r16, 2;
	shl.b32 	%r25, %r17, 2;
	.loc	1 32 39                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:39
	add.s32 	%r26, %r24, %r2;
	add.s32 	%r27, %r25, %r2;
	.loc	1 32 34                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:34
	mul.wide.s32 	%rd11, %r26, 4;
	add.s64 	%rd1, %rd8, %rd11;
	mul.wide.s32 	%rd12, %r27, 4;
	add.s64 	%rd2, %rd8, %rd12;
	.loc	1 32 54                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:54
	and.pred  	%p1, %p11, %p3;
	and.pred  	%p2, %p11, %p4;
	and.pred  	%p7, %p11, %p10;
	.loc	1 32 46                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:32:46
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r3;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p2 ld.global.L1::evict_last.b32 { %r4 }, [ %rd2 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r4;
	.loc	1 33 30                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:33:30
	mul.wide.s32 	%rd13, %r21, 4;
	add.s64 	%rd3, %rd9, %rd13;
	mul.wide.s32 	%rd14, %r23, 4;
	add.s64 	%rd4, %rd9, %rd14;
	.loc	1 33 35                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:33:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p3 ld.global.L1::evict_last.b32 { %r5 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r5;
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p4 ld.global.L1::evict_last.b32 { %r6 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r6;
	.loc	1 34 18                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:34:18
	add.f32 	%f5, %f1, %f3;
	add.f32 	%f6, %f2, %f4;
	.loc	1 36 18                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:36:18
	setp.gt.f32 	%p12, %f5, 0f00000000;
	setp.gt.f32 	%p13, %f6, 0f00000000;
	.loc	1 38 18                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:38:18
	mul.f32 	%f7, %f5, 0f3E4CCCCD;
	mul.f32 	%f8, %f6, 0f3E4CCCCD;
	.loc	1 39 32                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:39:32
	selp.f32 	%f9, %f5, %f7, %p12;
	selp.f32 	%f10, %f6, %f8, %p13;
	.loc	1 40 32                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:32
	shl.b32 	%r28, %r2, 1;
	.loc	1 40 39                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:39
	shl.b32 	%r29, %r18, 2;
	.loc	1 40 37                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:37
	add.s32 	%r30, %r29, %r28;
	.loc	1 40 25                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:25
	cvt.s64.s32 	%rd15, %r30;
	add.s64 	%rd5, %rd10, %rd15;
	.loc	1 40 50                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:40:50
	mov.u32 	%r31, global_smem;
	add.s32 	%r7, %r31, %r13;
	selp.u16 	%rs1, 1, 0, %p12;
	mov.pred 	%p5, -1;
	// begin inline asm
	@%p5 st.shared.b8 [ %r7 + 0 ], %rs1;
	// end inline asm
	add.s32 	%r8, %r7, 128;
	selp.u16 	%rs2, 1, 0, %p13;
	// begin inline asm
	@%p5 st.shared.b8 [ %r8 + 0 ], %rs2;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r32, %r31, %r15;
	ld.shared.u8 	%rs4, [%r32];
	and.b16  	%rs5, %rs4, 1;
	ld.shared.u8 	%rs6, [%r32+1];
	and.b16  	%rs7, %rs6, 1;
	shl.b16 	%rs8, %rs7, 8;
	or.b16  	%rs3, %rs5, %rs8;
	// begin inline asm
	@%p7 st.global.b16 [ %rd5 + 0 ], { %rs3 };
	// end inline asm
	.loc	1 41 4                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:41:4
	bar.sync 	0;
	.loc	1 42 46                         // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:42:46
	mov.b32 	%r9, %f9;
	// begin inline asm
	@%p1 st.global.b32 [ %rd1 + 0 ], { %r9 };
	// end inline asm
	mov.b32 	%r10, %f10;
	// begin inline asm
	@%p2 st.global.b32 [ %rd2 + 0 ], { %r10 };
	// end inline asm
	.loc	1 42 4                          // cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py:42:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/fx/cfx3fj4mahnh6ucogs7gjuvf353mnz6fetibkrjuo7ebao2hetuj.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 102
.b8 120
.b8 51
.b8 102
.b8 106
.b8 52
.b8 109
.b8 97
.b8 104
.b8 110
.b8 104
.b8 54
.b8 117
.b8 99
.b8 111
.b8 103
.b8 115
.b8 55
.b8 103
.b8 106
.b8 117
.b8 118
.b8 102
.b8 51
.b8 53
.b8 51
.b8 109
.b8 110
.b8 122
.b8 54
.b8 102
.b8 101
.b8 116
.b8 105
.b8 98
.b8 107
.b8 114
.b8 106
.b8 117
.b8 111
.b8 55
.b8 101
.b8 98
.b8 97
.b8 111
.b8 50
.b8 104
.b8 101
.b8 116
.b8 117
.b8 106
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 102
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
