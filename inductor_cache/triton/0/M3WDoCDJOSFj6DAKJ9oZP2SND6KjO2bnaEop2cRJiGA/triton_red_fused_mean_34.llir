; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_red_fused_mean_34(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !11
  %7 = and i32 %6, 31, !dbg !11
  %8 = lshr i32 %6, 5, !dbg !11
  %9 = and i32 %6, 63, !dbg !11
  %.frozen = freeze i32 %5, !dbg !12
  %10 = sdiv i32 %.frozen, 4096, !dbg !12
  %11 = mul i32 %10, 4096, !dbg !13
  %.decomposed = sub i32 %.frozen, %11, !dbg !13
  %12 = shl nuw nsw i32 %9, 12, !dbg !14
  %13 = shl i32 %10, 20, !dbg !15
  %14 = add i32 %13, %.decomposed, !dbg !16
  %15 = add i32 %14, %12, !dbg !17
  %16 = add i32 %14, 262144, !dbg !16
  %17 = add nuw i32 %16, %12, !dbg !17
  %18 = add i32 %14, 524288, !dbg !16
  %19 = add nuw i32 %18, %12, !dbg !17
  %20 = add i32 %14, 786432, !dbg !16
  %21 = add nuw i32 %20, %12, !dbg !17
  %22 = sext i32 %15 to i64, !dbg !18
  %23 = getelementptr float, ptr addrspace(1) %1, i64 %22, !dbg !18
  %24 = sext i32 %17 to i64, !dbg !18
  %25 = getelementptr float, ptr addrspace(1) %1, i64 %24, !dbg !18
  %26 = sext i32 %19 to i64, !dbg !18
  %27 = getelementptr float, ptr addrspace(1) %1, i64 %26, !dbg !18
  %28 = sext i32 %21 to i64, !dbg !18
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !18
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_first.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %23, i1 true, i32 0, i1 true) #3, !dbg !19
  %31 = bitcast i32 %30 to float, !dbg !19
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_first.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %25, i1 true, i32 0, i1 true) #3, !dbg !19
  %33 = bitcast i32 %32 to float, !dbg !19
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_first.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %27, i1 true, i32 0, i1 true) #3, !dbg !19
  %35 = bitcast i32 %34 to float, !dbg !19
  %36 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_first.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 true, i32 0, i1 true) #3, !dbg !19
  %37 = bitcast i32 %36 to float, !dbg !19
  %38 = fadd float %31, 0.000000e+00, !dbg !20
  %39 = fadd float %33, 0.000000e+00, !dbg !20
  %40 = fadd float %35, 0.000000e+00, !dbg !20
  %41 = fadd float %37, 0.000000e+00, !dbg !20
  %42 = fadd float %38, %39, !dbg !21
  %43 = fadd float %42, %40, !dbg !21
  %44 = fadd float %43, %41, !dbg !21
  %45 = bitcast float %44 to i32, !dbg !26
  %46 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %45, i32 16, i32 31), !dbg !26
  %47 = bitcast i32 %46 to float, !dbg !26
  %48 = fadd float %44, %47, !dbg !21
  %49 = bitcast float %48 to i32, !dbg !26
  %50 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %49, i32 8, i32 31), !dbg !26
  %51 = bitcast i32 %50 to float, !dbg !26
  %52 = fadd float %48, %51, !dbg !21
  %53 = bitcast float %52 to i32, !dbg !26
  %54 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %53, i32 4, i32 31), !dbg !26
  %55 = bitcast i32 %54 to float, !dbg !26
  %56 = fadd float %52, %55, !dbg !21
  %57 = bitcast float %56 to i32, !dbg !26
  %58 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %57, i32 2, i32 31), !dbg !26
  %59 = bitcast i32 %58 to float, !dbg !26
  %60 = fadd float %56, %59, !dbg !21
  %61 = bitcast float %60 to i32, !dbg !26
  %62 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %61, i32 1, i32 31), !dbg !26
  %63 = bitcast i32 %62 to float, !dbg !26
  %64 = fadd float %60, %63, !dbg !21
  %65 = icmp eq i32 %7, 0, !dbg !26
  %66 = and i32 %8, 1, !dbg !26
  %67 = getelementptr float, ptr addrspace(3) @global_smem, i32 %66, !dbg !26
  %68 = bitcast float %64 to <1 x i32>, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %67, <1 x i32> %68, i1 %65) #3, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %69 = icmp slt i32 %6, 2, !dbg !26
  %70 = getelementptr float, ptr addrspace(3) @global_smem, i32 %6, !dbg !26
  %71 = tail call i32 asm sideeffect "@$2 ld.shared.b32 $0, [ $1 + 0 ];", "=r,r,b"(ptr addrspace(3) %70, i1 %69) #3, !dbg !26
  %72 = bitcast i32 %71 to float, !dbg !26
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %71, i32 1, i32 31), !dbg !26
  %74 = bitcast i32 %73 to float, !dbg !26
  %75 = fadd float %72, %74, !dbg !21
  %76 = and i32 %6, 1, !dbg !26
  %77 = icmp eq i32 %76, 0, !dbg !26
  %78 = and i1 %69, %77, !dbg !26
  %79 = bitcast float %75 to <1 x i32>, !dbg !26
  tail call void asm sideeffect "@$2 st.shared.b32 [ $0 + 0 ], $1;", "r,r,b"(ptr addrspace(3) %70, <1 x i32> %79, i1 %78) #3, !dbg !26
  tail call void @llvm.nvvm.barrier0(), !dbg !26
  %80 = load float, ptr addrspace(3) @global_smem, align 16, !dbg !26
  %81 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %80, float 2.560000e+02) #3, !dbg !27
  tail call void @llvm.nvvm.barrier0(), !dbg !28
  %82 = sext i32 %5 to i64, !dbg !29
  %83 = getelementptr float, ptr addrspace(1) %0, i64 %82, !dbg !29
  %84 = icmp eq i32 %9, 0, !dbg !30
  %85 = bitcast float %81 to i32, !dbg !30
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %85, ptr addrspace(1) %83, i1 %84) #3, !dbg !30
  ret void, !dbg !31
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c3ojoprknxyrg2pes6evjhkfhlrqmz3umcwmfqqxdx5ngnm7ksel.py", directory: "inductor_cache/3o")
!4 = !{ptr @triton_red_fused_mean_34, !"kernel", i32 1}
!5 = !{ptr @triton_red_fused_mean_34, !"reqntidx", i32 64}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_red_fused_mean_34", linkageName: "triton_red_fused_mean_34", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 22, column: 28, scope: !7)
!11 = !DILocation(line: 25, column: 33, scope: !7)
!12 = !DILocation(line: 27, column: 19, scope: !7)
!13 = !DILocation(line: 26, column: 19, scope: !7)
!14 = !DILocation(line: 34, column: 44, scope: !7)
!15 = !DILocation(line: 34, column: 57, scope: !7)
!16 = !DILocation(line: 34, column: 39, scope: !7)
!17 = !DILocation(line: 34, column: 49, scope: !7)
!18 = !DILocation(line: 34, column: 34, scope: !7)
!19 = !DILocation(line: 34, column: 62, scope: !7)
!20 = !DILocation(line: 36, column: 23, scope: !7)
!21 = !DILocation(line: 256, column: 15, scope: !22, inlinedAt: !25)
!22 = distinct !DILexicalBlockFile(scope: !24, file: !23, discriminator: 0)
!23 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!24 = distinct !DILexicalBlockFile(scope: !7, file: !23, discriminator: 0)
!25 = !DILocation(line: 38, column: 25, scope: !7)
!26 = !DILocation(line: 267, column: 36, scope: !24, inlinedAt: !25)
!27 = !DILocation(line: 40, column: 18, scope: !7)
!28 = !DILocation(line: 41, column: 4, scope: !7)
!29 = !DILocation(line: 42, column: 28, scope: !7)
!30 = !DILocation(line: 42, column: 39, scope: !7)
!31 = !DILocation(line: 42, column: 4, scope: !7)
