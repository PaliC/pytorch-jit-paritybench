//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mul_pow_rsqrt_sum_1 // -- Begin function triton_per_fused_add_mul_pow_rsqrt_sum_1
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused_add_mul_pow_rsqrt_sum_1
.visible .entry triton_per_fused_add_mul_pow_rsqrt_sum_1(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_1_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_1_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_1_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mul_pow_rsqrt_sum_1_param_3,
	.param .u32 triton_per_fused_add_mul_pow_rsqrt_sum_1_param_4,
	.param .u32 triton_per_fused_add_mul_pow_rsqrt_sum_1_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b16 	%rs<11>;
	.reg .b32 	%r<144>;
	.reg .f32 	%f<39>;
	.reg .b64 	%rd<19>;
	.loc	1 19 0                          // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_per_fused_add_mul_pow_rsqrt_sum_1_param_0];
	ld.param.u64 	%rd9, [triton_per_fused_add_mul_pow_rsqrt_sum_1_param_1];
$L__tmp0:
	.loc	1 23 28                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:23:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 23 33                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:23:33
	shl.b32 	%r45, %r1, 3;
	ld.param.u64 	%rd10, [triton_per_fused_add_mul_pow_rsqrt_sum_1_param_2];
	ld.param.u64 	%rd11, [triton_per_fused_add_mul_pow_rsqrt_sum_1_param_3];
	.loc	1 24 44                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:24:44
	mov.u32 	%r46, %tid.x;
	and.b32  	%r47, %r46, 31;
	and.b32  	%r48, %r46, 7;
	bfe.u32 	%r49, %r46, 4, 2;
	and.b32  	%r50, %r46, 64;
	shr.u32 	%r51, %r50, 4;
	or.b32  	%r52, %r49, %r51;
	.loc	1 24 23                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:24:23
	or.b32  	%r53, %r45, %r48;
	or.b32  	%r54, %r52, %r45;
	.loc	1 25 21                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:25:21
	setp.lt.s32 	%p10, %r53, 16;
	setp.lt.s32 	%p27, %r54, 16;
	.loc	1 26 34                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:26:34
	shr.u32 	%r55, %r46, 3;
	bfe.u32 	%r56, %r46, 3, 3;
	shr.u32 	%r57, %r50, 3;
	or.b32  	%r58, %r56, %r57;
	or.b32  	%r59, %r58, 32;
	shl.b32 	%r60, %r46, 2;
	and.b32  	%r61, %r60, 60;
	.loc	1 28 21                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:28:21
	setp.lt.u32 	%p28, %r59, 36;
	setp.lt.u32 	%p29, %r61, 36;
	.loc	1 30 19                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:30:19
	bfe.s32 	%r62, %r1, 28, 1;
	.loc	1 32 19                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:32:19
	shr.u32 	%r63, %r62, 30;
	.loc	1 30 19                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:30:19
	add.s32 	%r64, %r54, %r63;
	and.b32  	%r65, %r64, -4;
	sub.s32 	%r66, %r54, %r65;
	.loc	1 31 19                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:31:19
	setp.gt.u32 	%p30, %r58, 8;
	selp.u32 	%r67, 1, 0, %p30;
	cvt.u16.u32 	%rs1, %r58;
	or.b16  	%rs2, %rs1, 16;
	mul.lo.s16 	%rs3, %rs2, 29;
	shr.u16 	%rs4, %rs3, 8;
	cvt.u32.u16 	%r68, %rs4;
	cvt.u16.u32 	%rs5, %r59;
	mul.lo.s16 	%rs6, %rs5, 57;
	shr.u16 	%rs7, %rs6, 9;
	cvt.u32.u16 	%r69, %rs7;
	or.b16  	%rs8, %rs1, 48;
	mul.lo.s16 	%rs9, %rs8, 57;
	shr.u16 	%rs10, %rs9, 9;
	cvt.u32.u16 	%r70, %rs10;
	.loc	1 32 19                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:32:19
	add.s32 	%r71, %r53, %r63;
	.loc	1 34 35                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:34:35
	mad.lo.s32 	%r72, %r66, 36, %r61;
	.loc	1 34 30                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:34:30
	mul.wide.s32 	%rd12, %r72, 4;
	add.s64 	%rd1, %rd9, %rd12;
	.loc	1 34 51                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:34:51
	and.pred  	%p14, %p28, %p10;
	and.pred  	%p1, %p29, %p27;
	mov.b32 	%r6, 0;
	.loc	1 34 43                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:34:43
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r13, %r15, %r17 }, [ %rd1 + 0 ];
	@!%p1 mov.u32 %r11, %r6;
	@!%p1 mov.u32 %r13, %r6;
	@!%p1 mov.u32 %r15, %r6;
	@!%p1 mov.u32 %r17, %r6;
	// end inline asm
	shl.b32 	%r73, %r46, 5;
	and.b32  	%r74, %r73, 480;
	or.b32  	%r75, %r52, %r74;
	and.b32  	%r76, %r46, 127;
	shr.u32 	%r77, %r74, 1;
	mov.u32 	%r78, global_smem;
	add.s32 	%r79, %r78, %r77;
	shl.b32 	%r80, %r75, 2;
	add.s32 	%r10, %r79, %r80;
	mov.pred 	%p6, -1;
	// begin inline asm
	@%p6 st.shared.b32 [ %r10 + 0 ], %r11;
	// end inline asm
	or.b32  	%r81, %r74, 8;
	shr.u32 	%r82, %r81, 1;
	add.s32 	%r83, %r78, %r82;
	add.s32 	%r84, %r83, %r80;
	add.s32 	%r12, %r84, 32;
	// begin inline asm
	@%p6 st.shared.b32 [ %r12 + 0 ], %r13;
	// end inline asm
	or.b32  	%r85, %r74, 16;
	shr.u32 	%r86, %r85, 1;
	add.s32 	%r87, %r78, %r86;
	add.s32 	%r88, %r87, %r80;
	add.s32 	%r14, %r88, 64;
	// begin inline asm
	@%p6 st.shared.b32 [ %r14 + 0 ], %r15;
	// end inline asm
	or.b32  	%r89, %r74, 24;
	shr.u32 	%r90, %r89, 1;
	add.s32 	%r91, %r78, %r90;
	add.s32 	%r92, %r91, %r80;
	add.s32 	%r16, %r92, 96;
	// begin inline asm
	@%p6 st.shared.b32 [ %r16 + 0 ], %r17;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r93, %r46, 1;
	and.b32  	%r94, %r93, 60;
	add.s32 	%r95, %r78, %r94;
	shl.b32 	%r96, %r76, 2;
	add.s32 	%r97, %r95, %r96;
	ld.shared.f32 	%f1, [%r97];
	or.b32  	%r98, %r76, 128;
	shr.u32 	%r99, %r98, 1;
	and.b32  	%r100, %r99, 124;
	add.s32 	%r101, %r78, %r100;
	add.s32 	%r102, %r101, %r96;
	ld.shared.f32 	%f2, [%r102+512];
	or.b32  	%r103, %r76, 256;
	shr.u32 	%r104, %r103, 1;
	and.b32  	%r105, %r104, 188;
	add.s32 	%r106, %r78, %r105;
	add.s32 	%r107, %r106, %r96;
	ld.shared.f32 	%f3, [%r107+1024];
	or.b32  	%r108, %r76, 384;
	shr.u32 	%r109, %r108, 1;
	and.b32  	%r110, %r109, 252;
	add.s32 	%r111, %r78, %r110;
	add.s32 	%r112, %r111, %r96;
	ld.shared.f32 	%f4, [%r112+1536];
	.loc	1 35 37                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:35:37
	and.b32  	%r113, %r71, -4;
	.loc	1 35 35                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:35:35
	or.b32  	%r114, %r113, %r67;
	add.s32 	%r115, %r113, %r68;
	add.s32 	%r116, %r113, %r69;
	add.s32 	%r117, %r113, %r70;
	.loc	1 35 30                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:35:30
	mul.wide.s32 	%rd13, %r114, 4;
	add.s64 	%rd2, %rd10, %rd13;
	mul.wide.s32 	%rd14, %r115, 4;
	add.s64 	%rd3, %rd10, %rd14;
	mul.wide.s32 	%rd15, %r116, 4;
	add.s64 	%rd4, %rd10, %rd15;
	mul.wide.s32 	%rd16, %r117, 4;
	add.s64 	%rd5, %rd10, %rd16;
	.loc	1 35 42                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:35:42
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r18 }, [ %rd2 + 0 ];
	@!%p10 mov.u32 %r18, %r6;
	// end inline asm
	mov.b32 	%f5, %r18;
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p10 ld.global.L1::evict_last.b32 { %r20 }, [ %rd3 + 0 ];
	@!%p10 mov.u32 %r20, %r6;
	// end inline asm
	mov.b32 	%f6, %r20;
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p14 ld.global.L1::evict_last.b32 { %r22 }, [ %rd4 + 0 ];
	@!%p14 mov.u32 %r22, %r6;
	// end inline asm
	mov.b32 	%f7, %r22;
	mov.pred 	%p16, 0;
	// begin inline asm
	mov.u32 %r24, 0x0;
	@%p16 ld.global.L1::evict_last.b32 { %r24 }, [ %rd5 + 0 ];
	@!%p16 mov.u32 %r24, %r6;
	// end inline asm
	.loc	1 37 18                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:37:18
	add.f32 	%f8, %f5, 0f3F800000;
	add.f32 	%f9, %f6, 0f3F800000;
	add.f32 	%f10, %f7, 0f3F800000;
	.loc	1 38 18                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:38:18
	mul.f32 	%f11, %f1, %f8;
	mul.f32 	%f12, %f2, %f9;
	mul.f32 	%f13, %f3, %f10;
	.loc	1 39 18                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:39:18
	mul.f32 	%f14, %f12, %f12;
	mul.f32 	%f15, %f13, %f13;
	.loc	1 41 41                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:41:41
	selp.f32 	%f16, %f15, 0f00000000, %p14;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	bar.sync 	0;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f17, %f11, %f11, %f14;
	selp.f32 	%f18, %f17, 0f00000000, %p10;
	add.f32 	%f19, %f18, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r118, %f19;
	shfl.sync.bfly.b32	%r119, %r118, 16, 31, -1;
	mov.b32 	%f20, %r119;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f19, %f20;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r120, %f21;
	shfl.sync.bfly.b32	%r121, %r120, 8, 31, -1;
	mov.b32 	%f22, %r121;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f23, %f21, %f22;
	.loc	2 267 36                        // standard.py:267:36
	setp.lt.u32 	%p18, %r47, 8;
	shl.b32 	%r122, %r48, 4;
	and.b32  	%r123, %r55, 12;
	or.b32  	%r124, %r122, %r123;
	add.s32 	%r26, %r78, %r124;
	mov.b32 	%r27, %f23;
	// begin inline asm
	@%p18 st.shared.b32 [ %r26 + 0 ], %r27;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p19, %r46, 32;
	add.s32 	%r29, %r78, %r60;
	// begin inline asm
	@%p19 ld.shared.b32 %r28, [ %r29 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r28;
	shfl.sync.bfly.b32	%r125, %r28, 2, 31, -1;
	mov.b32 	%f25, %r125;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r126, %f26;
	shfl.sync.bfly.b32	%r127, %r126, 1, 31, -1;
	mov.b32 	%f27, %r127;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f28, %f26, %f27;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r128, %r46, 3;
	setp.eq.s32 	%p31, %r128, 0;
	and.pred  	%p20, %p19, %p31;
	mov.b32 	%r31, %f28;
	// begin inline asm
	@%p20 st.shared.b32 [ %r29 + 0 ], %r31;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r129, %r78, %r122;
	ld.shared.f32 	%f29, [%r129];
$L__tmp2:
	.loc	1 44 19                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:44:19
	add.f32 	%f30, %f29, 0f322BCC77;
	.loc	1 45 28                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:45:28
	rsqrt.approx.ftz.f32 	%f31, %f30;
$L__tmp3:
	.loc	2 267 36                        // standard.py:267:36
	bfe.u32 	%r130, %r46, 3, 2;
$L__tmp4:
	.loc	1 35 42                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:35:42
	mov.b32 	%f32, %r24;
	.loc	1 37 18                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:37:18
	add.f32 	%f33, %f32, 0f3F800000;
	.loc	1 38 18                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:38:18
	mul.f32 	%f34, %f4, %f33;
	.loc	1 46 19                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:46:19
	mul.f32 	%f35, %f11, %f31;
	mul.f32 	%f36, %f12, %f31;
	mul.f32 	%f37, %f13, %f31;
	mul.f32 	%f38, %f34, %f31;
	.loc	1 47 4                          // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:47:4
	bar.sync 	0;
	.loc	1 48 28                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:48:28
	mul.wide.s32 	%rd17, %r53, 4;
	add.s64 	%rd6, %rd8, %rd17;
	.loc	1 48 40                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:48:40
	or.b32  	%r131, %r123, %r130;
	setp.eq.s32 	%p32, %r131, 0;
	mov.b32 	%r32, %f31;
	and.pred  	%p21, %p32, %p10;
	// begin inline asm
	@%p21 st.global.b32 [ %rd6 + 0 ], { %r32 };
	// end inline asm
	.loc	1 49 30                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:49:30
	mad.lo.s32 	%r132, %r54, 36, %r61;
	.loc	1 49 25                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:49:25
	mul.wide.s32 	%rd18, %r132, 4;
	add.s64 	%rd7, %rd11, %rd18;
	.loc	1 49 45                         // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:49:45
	shl.b32 	%r133, %r46, 6;
	and.b32  	%r134, %r133, 448;
	or.b32  	%r135, %r58, %r134;
	shr.u32 	%r136, %r134, 2;
	add.s32 	%r137, %r78, %r136;
	shl.b32 	%r138, %r135, 2;
	add.s32 	%r33, %r137, %r138;
	mov.b32 	%r34, %f35;
	// begin inline asm
	@%p6 st.shared.b32 [ %r33 + 0 ], %r34;
	// end inline asm
	add.s32 	%r35, %r33, 64;
	mov.b32 	%r36, %f36;
	// begin inline asm
	@%p6 st.shared.b32 [ %r35 + 0 ], %r36;
	// end inline asm
	add.s32 	%r37, %r33, 128;
	mov.b32 	%r38, %f37;
	// begin inline asm
	@%p6 st.shared.b32 [ %r37 + 0 ], %r38;
	// end inline asm
	add.s32 	%r39, %r33, 192;
	mov.b32 	%r40, %f38;
	// begin inline asm
	@%p6 st.shared.b32 [ %r39 + 0 ], %r40;
	// end inline asm
	bar.sync 	0;
	and.b32  	%r139, %r46, 112;
	add.s32 	%r140, %r78, %r139;
	shl.b32 	%r141, %r46, 4;
	and.b32  	%r142, %r141, 2032;
	add.s32 	%r143, %r140, %r142;
	ld.shared.v4.u32 	{%r41, %r42, %r43, %r44}, [%r143];
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r41, %r42, %r43, %r44 };
	// end inline asm
	.loc	1 49 4                          // cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py:49:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/bw/cbwhwaaen7lwhx5zrscrvmibovxa4pbg2hmyb4ci7lqseddb52vd.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 185                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xb2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 98
.b8 119
.b8 104
.b8 119
.b8 97
.b8 97
.b8 101
.b8 110
.b8 55
.b8 108
.b8 119
.b8 104
.b8 120
.b8 53
.b8 122
.b8 114
.b8 115
.b8 99
.b8 114
.b8 118
.b8 109
.b8 105
.b8 98
.b8 111
.b8 118
.b8 120
.b8 97
.b8 52
.b8 112
.b8 98
.b8 103
.b8 50
.b8 104
.b8 109
.b8 121
.b8 98
.b8 52
.b8 99
.b8 105
.b8 55
.b8 108
.b8 113
.b8 115
.b8 101
.b8 100
.b8 100
.b8 98
.b8 53
.b8 50
.b8 118
.b8 100
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 98
.b8 119
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x2b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 114
.b8 115
.b8 113
.b8 114
.b8 116
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 49
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8e:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 42                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
