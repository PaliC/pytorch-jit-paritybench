; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused__unsafe_index_cat_24(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, i32 %4) local_unnamed_addr !dbg !7 {
  %6 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %7 = shl i32 %6, 9, !dbg !11
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %9 = shl i32 %8, 1, !dbg !12
  %10 = and i32 %9, 510, !dbg !12
  %11 = or disjoint i32 %7, %10, !dbg !13
  %.frozen = freeze i32 %11, !dbg !14
  %12 = sdiv i32 %.frozen, 32, !dbg !14
  %13 = srem i32 %12, 32, !dbg !15
  %14 = mul i32 %12, 32, !dbg !16
  %.decomposed = sub i32 %.frozen, %14, !dbg !16
  %15 = sdiv i32 %11, 1024, !dbg !17
  %16 = srem i32 %15, 62, !dbg !18
  %17 = sdiv i32 %11, 63488, !dbg !19
  %18 = sext i32 %13 to i64, !dbg !20
  %19 = getelementptr i64, ptr addrspace(1) %0, i64 %18, !dbg !20
  %20 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !21
  %21 = tail call i64 asm sideeffect "mov.u64 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b64 { $0 }, [ $1 + 0 ];", "=l,l,b"(ptr addrspace(1) %19, i1 true) #1, !dbg !21
  %22 = sext i32 %.decomposed to i64, !dbg !22
  %23 = getelementptr i64, ptr addrspace(1) %0, i64 %22, !dbg !22
  %24 = tail call { i64, i64 } asm sideeffect "mov.u64 $0, 0x0;\0A\09mov.u64 $1, 0x0;\0A\09@$3 ld.global.L1::evict_last.v2.b64 { $0, $1 }, [ $2 + 0 ];", "=l,=l,l,b"(ptr addrspace(1) %23, i1 true) #1, !dbg !23
  %25 = extractvalue { i64, i64 } %24, 0, !dbg !23
  %26 = extractvalue { i64, i64 } %24, 1, !dbg !23
  %27 = lshr i64 %20, 59, !dbg !24
  %28 = and i64 %27, 16, !dbg !24
  %29 = add i64 %28, %20, !dbg !24
  %30 = lshr i64 %25, 59, !dbg !25
  %31 = and i64 %30, 16, !dbg !25
  %32 = lshr i64 %26, 59, !dbg !25
  %33 = and i64 %32, 16, !dbg !25
  %34 = icmp slt i32 %16, 16, !dbg !26
  %35 = shl i64 %29, 4, !dbg !27
  %36 = add i64 %35, %25, !dbg !25
  %37 = add i64 %36, %31, !dbg !28
  %38 = add i64 %35, %26, !dbg !25
  %39 = add i64 %38, %33, !dbg !28
  %40 = shl nsw i32 %16, 8, !dbg !29
  %41 = sext i32 %40 to i64, !dbg !30
  %42 = shl nsw i32 %17, 12, !dbg !31
  %43 = sext i32 %42 to i64, !dbg !32
  %44 = getelementptr float, ptr addrspace(1) %1, i64 %37, !dbg !33
  %45 = getelementptr float, ptr addrspace(1) %44, i64 %41, !dbg !33
  %46 = getelementptr float, ptr addrspace(1) %45, i64 %43, !dbg !33
  %47 = getelementptr float, ptr addrspace(1) %1, i64 %39, !dbg !33
  %48 = getelementptr float, ptr addrspace(1) %47, i64 %41, !dbg !33
  %49 = getelementptr float, ptr addrspace(1) %48, i64 %43, !dbg !33
  %50 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %46, i1 %34, i32 0, i1 %34) #1, !dbg !34
  %51 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %49, i1 %34, i32 0, i1 %34) #1, !dbg !34
  %52 = icmp sgt i32 %16, 15, !dbg !35
  %53 = add nsw i32 %40, -4096, !dbg !36
  %54 = sext i32 %53 to i64, !dbg !37
  %55 = mul nsw i32 %17, 11776, !dbg !38
  %56 = sext i32 %55 to i64, !dbg !39
  %57 = getelementptr float, ptr addrspace(1) %2, i64 %37, !dbg !40
  %58 = getelementptr float, ptr addrspace(1) %57, i64 %54, !dbg !40
  %59 = getelementptr float, ptr addrspace(1) %58, i64 %56, !dbg !40
  %60 = getelementptr float, ptr addrspace(1) %2, i64 %39, !dbg !40
  %61 = getelementptr float, ptr addrspace(1) %60, i64 %54, !dbg !40
  %62 = getelementptr float, ptr addrspace(1) %61, i64 %56, !dbg !40
  %63 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %59, i1 %52, i32 0, i1 %52) #1, !dbg !41
  %64 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %62, i1 %52, i32 0, i1 %52) #1, !dbg !41
  %.v = select i1 %34, i32 %50, i32 %63, !dbg !42
  %.v1 = select i1 %34, i32 %51, i32 %64, !dbg !42
  %65 = sext i32 %11 to i64, !dbg !43
  %66 = getelementptr float, ptr addrspace(1) %3, i64 %65, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %.v, i32 %.v1, ptr addrspace(1) %66, i1 true) #1, !dbg !44
  ret void, !dbg !45
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cmteqd4prramslunlfjeevbi6o5k6jpkijujamjzx4r2u5k7vp6g.py", directory: "inductor_cache/mt")
!4 = !{ptr @triton_poi_fused__unsafe_index_cat_24, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused__unsafe_index_cat_24, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused__unsafe_index_cat_24", linkageName: "triton_poi_fused__unsafe_index_cat_24", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 27, scope: !7)
!16 = !DILocation(line: 25, column: 19, scope: !7)
!17 = !DILocation(line: 26, column: 21, scope: !7)
!18 = !DILocation(line: 26, column: 29, scope: !7)
!19 = !DILocation(line: 27, column: 19, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 30, scope: !7)
!23 = !DILocation(line: 30, column: 35, scope: !7)
!24 = !DILocation(line: 34, column: 32, scope: !7)
!25 = !DILocation(line: 37, column: 32, scope: !7)
!26 = !DILocation(line: 42, column: 19, scope: !7)
!27 = !DILocation(line: 43, column: 41, scope: !7)
!28 = !DILocation(line: 43, column: 38, scope: !7)
!29 = !DILocation(line: 43, column: 53, scope: !7)
!30 = !DILocation(line: 43, column: 48, scope: !7)
!31 = !DILocation(line: 43, column: 64, scope: !7)
!32 = !DILocation(line: 43, column: 59, scope: !7)
!33 = !DILocation(line: 43, column: 31, scope: !7)
!34 = !DILocation(line: 43, column: 69, scope: !7)
!35 = !DILocation(line: 44, column: 20, scope: !7)
!36 = !DILocation(line: 47, column: 53, scope: !7)
!37 = !DILocation(line: 47, column: 48, scope: !7)
!38 = !DILocation(line: 47, column: 73, scope: !7)
!39 = !DILocation(line: 47, column: 67, scope: !7)
!40 = !DILocation(line: 47, column: 31, scope: !7)
!41 = !DILocation(line: 47, column: 78, scope: !7)
!42 = !DILocation(line: 48, column: 35, scope: !7)
!43 = !DILocation(line: 49, column: 25, scope: !7)
!44 = !DILocation(line: 49, column: 37, scope: !7)
!45 = !DILocation(line: 49, column: 4, scope: !7)
