#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [2, 16], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [1, 32], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0)
#loc1 = loc(unknown)
#loc89 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":95:26)
#loc100 = loc(callsite(#loc1 at #loc89))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused_add_addmm_exp_mean_mul_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<2> : tensor<1x16xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<3> : tensor<1x16xi32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_3 = arith.constant dense<-5.000000e-03> : tensor<1x16xf32, #blocked1> loc(#loc1)
    %cst_4 = arith.constant dense<-2.000000e-02> : tensor<1x16xf32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<1x16xf32, #blocked1> loc(#loc1)
    %cst_6 = arith.constant dense<-5.000000e-01> : tensor<1x16xf32, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<3> : tensor<1x16xi32, #blocked1> loc(#loc1)
    %cst_8 = arith.constant dense<2> : tensor<1x16xi32, #blocked1> loc(#loc1)
    %cst_9 = arith.constant dense<1> : tensor<1x16xi32, #blocked1> loc(#loc1)
    %cst_10 = arith.constant dense<4> : tensor<1x16xi32, #blocked1> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> loc(#loc2)
    %1 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc2)
    %2 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x16xi32, #blocked1> loc(#loc2)
    %3 = tt.expand_dims %1 {axis = 0 : i32} : tensor<16xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x16xi32, #blocked> loc(#loc2)
    %4 = arith.divsi %2, %cst_10 : tensor<1x16xi32, #blocked1> loc(#loc3)
    %5 = arith.divsi %3, %cst : tensor<1x16xi32, #blocked> loc(#loc3)
    %6 = arith.remsi %2, %cst_10 : tensor<1x16xi32, #blocked1> loc(#loc4)
    %7 = arith.remsi %3, %cst : tensor<1x16xi32, #blocked> loc(#loc4)
    %8 = arith.muli %4, %cst_10 : tensor<1x16xi32, #blocked1> loc(#loc5)
    %9 = arith.muli %5, %cst : tensor<1x16xi32, #blocked> loc(#loc5)
    %10 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc6)
    %11 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc6)
    %12 = tt.addptr %10, %8 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc6)
    %13 = tt.addptr %11, %9 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc6)
    %14 = tt.load %12 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc7)
    %15 = tt.load %13 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc7)
    %16 = arith.addi %8, %cst_9 : tensor<1x16xi32, #blocked1> loc(#loc8)
    %17 = arith.addi %9, %cst_0 : tensor<1x16xi32, #blocked> loc(#loc8)
    %18 = tt.addptr %10, %16 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc9)
    %19 = tt.addptr %11, %17 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc9)
    %20 = tt.load %18 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc10)
    %21 = tt.load %19 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc10)
    %22 = arith.addi %8, %cst_8 : tensor<1x16xi32, #blocked1> loc(#loc11)
    %23 = arith.addi %9, %cst_1 : tensor<1x16xi32, #blocked> loc(#loc11)
    %24 = tt.addptr %10, %22 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc12)
    %25 = tt.addptr %11, %23 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc12)
    %26 = tt.load %24 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc13)
    %27 = tt.load %25 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc13)
    %28 = arith.addi %8, %cst_7 : tensor<1x16xi32, #blocked1> loc(#loc14)
    %29 = arith.addi %9, %cst_2 : tensor<1x16xi32, #blocked> loc(#loc14)
    %30 = tt.addptr %10, %28 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc15)
    %31 = tt.addptr %11, %29 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc15)
    %32 = tt.load %30 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %33 = tt.load %31 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc16)
    %34 = arith.muli %6, %cst_10 : tensor<1x16xi32, #blocked1> loc(#loc17)
    %35 = arith.muli %7, %cst : tensor<1x16xi32, #blocked> loc(#loc17)
    %36 = tt.addptr %11, %35 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc18)
    %37 = tt.load %36 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc19)
    %38 = arith.addi %34, %cst_9 : tensor<1x16xi32, #blocked1> loc(#loc20)
    %39 = arith.addi %35, %cst_0 : tensor<1x16xi32, #blocked> loc(#loc20)
    %40 = tt.addptr %11, %39 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc21)
    %41 = tt.load %40 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc22)
    %42 = arith.addi %34, %cst_8 : tensor<1x16xi32, #blocked1> loc(#loc23)
    %43 = arith.addi %35, %cst_1 : tensor<1x16xi32, #blocked> loc(#loc23)
    %44 = tt.addptr %11, %43 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc24)
    %45 = tt.load %44 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc25)
    %46 = arith.addi %34, %cst_7 : tensor<1x16xi32, #blocked1> loc(#loc26)
    %47 = arith.addi %35, %cst_2 : tensor<1x16xi32, #blocked> loc(#loc26)
    %48 = tt.addptr %11, %47 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc27)
    %49 = tt.load %48 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc28)
    %50 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc29)
    %51 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc29)
    %52 = tt.addptr %51, %9 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc29)
    %53 = tt.load %52 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc30)
    %54 = tt.addptr %51, %17 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc31)
    %55 = tt.load %54 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc32)
    %56 = tt.addptr %51, %23 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc33)
    %57 = tt.load %56 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc34)
    %58 = tt.addptr %51, %29 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc35)
    %59 = tt.load %58 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc36)
    %60 = tt.addptr %50, %34 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc37)
    %61 = tt.addptr %51, %35 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc37)
    %62 = tt.load %60 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc38)
    %63 = tt.load %61 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc38)
    %64 = tt.addptr %50, %38 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc39)
    %65 = tt.addptr %51, %39 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc39)
    %66 = tt.load %64 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc40)
    %67 = tt.load %65 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc40)
    %68 = tt.addptr %50, %42 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc41)
    %69 = tt.addptr %51, %43 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc41)
    %70 = tt.load %68 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc42)
    %71 = tt.load %69 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc42)
    %72 = tt.addptr %50, %46 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc43)
    %73 = tt.addptr %51, %47 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc43)
    %74 = tt.load %72 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc44)
    %75 = tt.load %73 evictionPolicy = evict_last : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc44)
    %76 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc45)
    %77 = tt.addptr %76, %2 : tensor<1x16x!tt.ptr<f32>, #blocked1>, tensor<1x16xi32, #blocked1> loc(#loc45)
    %78 = tt.load %77 : tensor<1x16x!tt.ptr<f32>, #blocked1> loc(#loc46)
    %79 = arith.mulf %14, %14 : tensor<1x16xf32, #blocked1> loc(#loc47)
    %80 = arith.mulf %15, %15 : tensor<1x16xf32, #blocked> loc(#loc47)
    %81 = arith.mulf %20, %20 : tensor<1x16xf32, #blocked1> loc(#loc48)
    %82 = arith.mulf %21, %21 : tensor<1x16xf32, #blocked> loc(#loc48)
    %83 = arith.addf %79, %81 : tensor<1x16xf32, #blocked1> loc(#loc49)
    %84 = arith.addf %80, %82 : tensor<1x16xf32, #blocked> loc(#loc49)
    %85 = arith.mulf %26, %26 : tensor<1x16xf32, #blocked1> loc(#loc50)
    %86 = arith.mulf %27, %27 : tensor<1x16xf32, #blocked> loc(#loc50)
    %87 = arith.addf %83, %85 : tensor<1x16xf32, #blocked1> loc(#loc51)
    %88 = arith.addf %84, %86 : tensor<1x16xf32, #blocked> loc(#loc51)
    %89 = arith.mulf %32, %32 : tensor<1x16xf32, #blocked1> loc(#loc52)
    %90 = arith.mulf %33, %33 : tensor<1x16xf32, #blocked> loc(#loc52)
    %91 = arith.addf %87, %89 : tensor<1x16xf32, #blocked1> loc(#loc53)
    %92 = arith.addf %88, %90 : tensor<1x16xf32, #blocked> loc(#loc53)
    %93 = arith.mulf %37, %37 : tensor<1x16xf32, #blocked> loc(#loc54)
    %94 = arith.mulf %41, %41 : tensor<1x16xf32, #blocked> loc(#loc55)
    %95 = arith.addf %93, %94 : tensor<1x16xf32, #blocked> loc(#loc56)
    %96 = arith.mulf %45, %45 : tensor<1x16xf32, #blocked> loc(#loc57)
    %97 = arith.addf %95, %96 : tensor<1x16xf32, #blocked> loc(#loc58)
    %98 = arith.mulf %49, %49 : tensor<1x16xf32, #blocked> loc(#loc59)
    %99 = arith.addf %97, %98 : tensor<1x16xf32, #blocked> loc(#loc60)
    %100 = arith.addf %92, %99 : tensor<1x16xf32, #blocked> loc(#loc61)
    %101 = arith.mulf %53, %53 : tensor<1x16xf32, #blocked> loc(#loc62)
    %102 = arith.mulf %55, %55 : tensor<1x16xf32, #blocked> loc(#loc63)
    %103 = arith.addf %101, %102 : tensor<1x16xf32, #blocked> loc(#loc64)
    %104 = arith.mulf %57, %57 : tensor<1x16xf32, #blocked> loc(#loc65)
    %105 = arith.addf %103, %104 : tensor<1x16xf32, #blocked> loc(#loc66)
    %106 = arith.mulf %59, %59 : tensor<1x16xf32, #blocked> loc(#loc67)
    %107 = arith.addf %105, %106 : tensor<1x16xf32, #blocked> loc(#loc68)
    %108 = arith.mulf %62, %62 : tensor<1x16xf32, #blocked1> loc(#loc69)
    %109 = arith.mulf %63, %63 : tensor<1x16xf32, #blocked> loc(#loc69)
    %110 = arith.mulf %66, %66 : tensor<1x16xf32, #blocked1> loc(#loc70)
    %111 = arith.mulf %67, %67 : tensor<1x16xf32, #blocked> loc(#loc70)
    %112 = arith.addf %108, %110 : tensor<1x16xf32, #blocked1> loc(#loc71)
    %113 = arith.addf %109, %111 : tensor<1x16xf32, #blocked> loc(#loc71)
    %114 = arith.mulf %70, %70 : tensor<1x16xf32, #blocked1> loc(#loc72)
    %115 = arith.mulf %71, %71 : tensor<1x16xf32, #blocked> loc(#loc72)
    %116 = arith.addf %112, %114 : tensor<1x16xf32, #blocked1> loc(#loc73)
    %117 = arith.addf %113, %115 : tensor<1x16xf32, #blocked> loc(#loc73)
    %118 = arith.mulf %74, %74 : tensor<1x16xf32, #blocked1> loc(#loc74)
    %119 = arith.mulf %75, %75 : tensor<1x16xf32, #blocked> loc(#loc74)
    %120 = arith.addf %116, %118 : tensor<1x16xf32, #blocked1> loc(#loc75)
    %121 = arith.addf %117, %119 : tensor<1x16xf32, #blocked> loc(#loc75)
    %122 = arith.addf %107, %121 : tensor<1x16xf32, #blocked> loc(#loc76)
    %123 = arith.addf %91, %120 : tensor<1x16xf32, #blocked1> loc(#loc77)
    %124 = arith.addf %78, %123 : tensor<1x16xf32, #blocked1> loc(#loc78)
    %125 = arith.mulf %124, %cst_6 : tensor<1x16xf32, #blocked1> loc(#loc79)
    %126 = math.exp %125 : tensor<1x16xf32, #blocked1> loc(#loc80)
    %127 = arith.addf %126, %cst_5 : tensor<1x16xf32, #blocked1> loc(#loc81)
    %128 = arith.mulf %124, %cst_4 : tensor<1x16xf32, #blocked1> loc(#loc82)
    %129 = math.exp %128 : tensor<1x16xf32, #blocked1> loc(#loc83)
    %130 = arith.addf %127, %129 : tensor<1x16xf32, #blocked1> loc(#loc84)
    %131 = arith.mulf %124, %cst_3 : tensor<1x16xf32, #blocked1> loc(#loc85)
    %132 = math.exp %131 : tensor<1x16xf32, #blocked1> loc(#loc86)
    %133 = arith.addf %130, %132 : tensor<1x16xf32, #blocked1> loc(#loc87)
    %134 = "tt.reduce"(%133) <{axis = 1 : i32}> ({
    ^bb0(%arg7: f32 loc(callsite(#loc1 at #loc89)), %arg8: f32 loc(callsite(#loc1 at #loc89))):
      %142 = arith.addf %arg7, %arg8 : f32 loc(#loc102)
      tt.reduce.return %142 : f32 loc(#loc99)
    }) : (tensor<1x16xf32, #blocked1>) -> tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> loc(#loc99)
    %135 = tt.expand_dims %134 {axis = 1 : i32} : tensor<1xf32, #triton_gpu.slice<{dim = 1, parent = #blocked1}>> -> tensor<1x1xf32, #blocked1> loc(#loc91)
    %136 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc92)
    %137 = tt.addptr %136, %3 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc92)
    tt.store %137, %100 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc93)
    %138 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc94)
    %139 = tt.addptr %138, %3 : tensor<1x16x!tt.ptr<f32>, #blocked>, tensor<1x16xi32, #blocked> loc(#loc94)
    tt.store %139, %122 : tensor<1x16x!tt.ptr<f32>, #blocked> loc(#loc95)
    %140 = tt.addptr %arg5, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc96)
    %141 = tt.splat %140 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc97)
    tt.store %141, %135 : tensor<1x1x!tt.ptr<f32>, #blocked1> loc(#loc97)
    tt.return loc(#loc98)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":26:34)
#loc3 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":29:19)
#loc4 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":30:19)
#loc5 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":32:32)
#loc6 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":32:30)
#loc7 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":32:37)
#loc8 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":33:34)
#loc9 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":33:30)
#loc10 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":33:41)
#loc11 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":34:34)
#loc12 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":34:30)
#loc13 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":34:41)
#loc14 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":35:34)
#loc15 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":35:30)
#loc16 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":35:41)
#loc17 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":36:33)
#loc18 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":36:31)
#loc19 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":36:38)
#loc20 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":37:35)
#loc21 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":37:31)
#loc22 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":37:42)
#loc23 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":38:35)
#loc24 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":38:31)
#loc25 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":38:42)
#loc26 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":39:35)
#loc27 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":39:31)
#loc28 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":39:42)
#loc29 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":40:31)
#loc30 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":40:38)
#loc31 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":41:31)
#loc32 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":41:42)
#loc33 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":42:31)
#loc34 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":42:42)
#loc35 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":43:31)
#loc36 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":43:42)
#loc37 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":44:31)
#loc38 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":44:38)
#loc39 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":45:31)
#loc40 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":45:42)
#loc41 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":46:31)
#loc42 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":46:42)
#loc43 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":47:31)
#loc44 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":47:42)
#loc45 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":48:35)
#loc46 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":48:40)
#loc47 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":49:18)
#loc48 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":50:18)
#loc49 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":51:18)
#loc50 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":52:18)
#loc51 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":53:18)
#loc52 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":54:18)
#loc53 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":55:19)
#loc54 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":56:20)
#loc55 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":57:20)
#loc56 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":58:20)
#loc57 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":59:20)
#loc58 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":60:20)
#loc59 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":61:20)
#loc60 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":62:20)
#loc61 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":63:20)
#loc62 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":64:20)
#loc63 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":65:20)
#loc64 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":66:20)
#loc65 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":67:20)
#loc66 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":68:20)
#loc67 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":69:20)
#loc68 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":70:20)
#loc69 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":71:20)
#loc70 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":72:20)
#loc71 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":73:20)
#loc72 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":74:20)
#loc73 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":75:20)
#loc74 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":76:20)
#loc75 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":77:20)
#loc76 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":78:20)
#loc77 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":79:20)
#loc78 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":80:20)
#loc79 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":82:20)
#loc80 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":83:24)
#loc81 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":85:20)
#loc82 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":87:20)
#loc83 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":88:24)
#loc84 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":89:20)
#loc85 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":91:20)
#loc86 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":92:24)
#loc87 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":93:20)
#loc88 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc90 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc91 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":95:29)
#loc92 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":96:25)
#loc93 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":96:72)
#loc94 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":97:25)
#loc95 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":97:72)
#loc96 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":98:25)
#loc97 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":98:68)
#loc98 = loc("inductor_cache/os/cosi24s25vgkvo4jrnfnny3pyowv7fciqidrjxuvkiohxzyn6hml.py":98:4)
#loc99 = loc(callsite(#loc88 at #loc89))
#loc101 = loc(callsite(#loc90 at #loc88))
#loc102 = loc(callsite(#loc101 at #loc89))
