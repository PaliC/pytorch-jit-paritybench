; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_3(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, ptr addrspace(1) %7, ptr addrspace(1) %8, ptr addrspace(1) %9, i32 %10) local_unnamed_addr !dbg !7 {
  %12 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %13 = shl i32 %12, 7, !dbg !11
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %15 = and i32 %14, 127, !dbg !12
  %16 = or disjoint i32 %13, %15, !dbg !13
  %17 = icmp slt i32 %16, 8448, !dbg !14
  %18 = sdiv i32 %16, 16, !dbg !15
  %.frozen = freeze i32 %16, !dbg !16
  %19 = sdiv i32 %.frozen, 2112, !dbg !16
  %20 = mul i32 %19, 2112, !dbg !17
  %srem.decomposed = sub i32 %.frozen, %20, !dbg !17
  %21 = shl nsw i32 %19, 6, !dbg !18
  %22 = add nsw i32 %21, %srem.decomposed, !dbg !19
  %23 = sext i32 %22 to i64, !dbg !20
  %24 = getelementptr float, ptr addrspace(1) %0, i64 %23, !dbg !20
  %25 = shl nsw i32 %19, 9, !dbg !21
  %26 = insertelement <2 x i32> poison, i32 %16, i64 0, !dbg !22
  %27 = insertelement <2 x i32> %26, i32 %18, i64 1, !dbg !22
  %28 = srem <2 x i32> %27, <i32 16, i32 132>, !dbg !22
  %29 = extractelement <2 x i32> %28, i64 1, !dbg !23
  %30 = icmp slt i32 %29, 4, !dbg !24
  %31 = and i1 %17, %30, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %24, i1 %31, i32 0, i1 %31) #1, !dbg !26
  %33 = insertelement <2 x i32> <i32 poison, i32 -4>, i32 %25, i64 0, !dbg !27
  %34 = add nsw <2 x i32> %33, %28, !dbg !27
  %35 = extractelement <2 x i32> %34, i64 1, !dbg !28
  %36 = icmp ult i32 %35, 32, !dbg !29
  %37 = shl nsw i32 %35, 4, !dbg !28
  %38 = extractelement <2 x i32> %34, i64 0, !dbg !30
  %39 = add nsw i32 %38, %37, !dbg !31
  %40 = sext i32 %39 to i64, !dbg !32
  %41 = getelementptr float, ptr addrspace(1) %1, i64 %40, !dbg !32
  %42 = and i1 %17, %36, !dbg !33
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %41, i1 %42, i32 0, i1 %42) #1, !dbg !34
  %44 = sext i32 %35 to i64, !dbg !35
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !35
  %46 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %45, i1 %42, i32 0, i1 %42) #1, !dbg !36
  %47 = add nsw i32 %29, -36, !dbg !37
  %48 = icmp ult i32 %47, 32, !dbg !37
  %49 = shl nsw i32 %47, 4, !dbg !38
  %50 = add nsw i32 %38, %49, !dbg !39
  %51 = sext i32 %50 to i64, !dbg !40
  %52 = getelementptr float, ptr addrspace(1) %3, i64 %51, !dbg !40
  %53 = and i1 %17, %48, !dbg !41
  %54 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %52, i1 %53, i32 0, i1 %53) #1, !dbg !42
  %55 = sext i32 %47 to i64, !dbg !43
  %56 = getelementptr float, ptr addrspace(1) %4, i64 %55, !dbg !43
  %57 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %56, i1 %53, i32 0, i1 %53) #1, !dbg !44
  %58 = add nsw i32 %29, -68, !dbg !45
  %59 = icmp ult i32 %58, 32, !dbg !45
  %60 = shl nsw i32 %58, 4, !dbg !46
  %61 = add nsw i32 %38, %60, !dbg !47
  %62 = sext i32 %61 to i64, !dbg !48
  %63 = getelementptr float, ptr addrspace(1) %5, i64 %62, !dbg !48
  %64 = and i1 %17, %59, !dbg !49
  %65 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %63, i1 %64, i32 0, i1 %64) #1, !dbg !50
  %66 = sext i32 %58 to i64, !dbg !51
  %67 = getelementptr float, ptr addrspace(1) %6, i64 %66, !dbg !51
  %68 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %67, i1 %64, i32 0, i1 %64) #1, !dbg !52
  %69 = icmp sgt i32 %29, 99, !dbg !23
  %70 = add nsw i32 %29, -100, !dbg !53
  %71 = shl nsw i32 %70, 4, !dbg !54
  %72 = add nsw i32 %38, %71, !dbg !30
  %73 = sext i32 %72 to i64, !dbg !55
  %74 = getelementptr float, ptr addrspace(1) %7, i64 %73, !dbg !55
  %75 = and i1 %17, %69, !dbg !56
  %76 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %74, i1 %75, i32 0, i1 %75) #1, !dbg !57
  %77 = sext i32 %70 to i64, !dbg !58
  %78 = getelementptr float, ptr addrspace(1) %8, i64 %77, !dbg !58
  %79 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %78, i1 %75, i32 0, i1 %75) #1, !dbg !59
  %80 = insertelement <4 x i32> poison, i32 %76, i64 0, !dbg !57
  %81 = insertelement <4 x i32> %80, i32 %65, i64 1, !dbg !57
  %82 = insertelement <4 x i32> %81, i32 %54, i64 2, !dbg !57
  %83 = insertelement <4 x i32> %82, i32 %43, i64 3, !dbg !57
  %84 = bitcast <4 x i32> %83 to <4 x float>, !dbg !57
  %85 = insertelement <4 x i32> poison, i32 %79, i64 0, !dbg !59
  %86 = insertelement <4 x i32> %85, i32 %68, i64 1, !dbg !59
  %87 = insertelement <4 x i32> %86, i32 %57, i64 2, !dbg !59
  %88 = insertelement <4 x i32> %87, i32 %46, i64 3, !dbg !59
  %89 = bitcast <4 x i32> %88 to <4 x float>, !dbg !59
  %90 = fadd <4 x float> %84, %89, !dbg !60
  %91 = extractelement <4 x float> %90, i64 3, !dbg !61
  %92 = fmul float %91, 0x3FC99999A0000000, !dbg !62
  %93 = fcmp ogt <4 x float> %90, zeroinitializer, !dbg !63
  %94 = extractelement <4 x i1> %93, i64 3, !dbg !61
  %95 = select i1 %94, float %91, float %92, !dbg !61
  %96 = extractelement <4 x float> %90, i64 2, !dbg !64
  %97 = fmul float %96, 0x3FC99999A0000000, !dbg !65
  %98 = extractelement <4 x i1> %93, i64 2, !dbg !64
  %99 = select i1 %98, float %96, float %97, !dbg !64
  %100 = extractelement <4 x float> %90, i64 1, !dbg !66
  %101 = fmul float %100, 0x3FC99999A0000000, !dbg !67
  %102 = extractelement <4 x i1> %93, i64 1, !dbg !66
  %103 = select i1 %102, float %100, float %101, !dbg !66
  %104 = extractelement <4 x float> %90, i64 0, !dbg !68
  %105 = fmul float %104, 0x3FC99999A0000000, !dbg !69
  %106 = extractelement <4 x i1> %93, i64 0, !dbg !68
  %107 = select i1 %106, float %104, float %105, !dbg !68
  %108 = select i1 %69, float %107, float 0.000000e+00, !dbg !70
  %109 = select i1 %59, float %103, float %108, !dbg !71
  %110 = select i1 %48, float %99, float %109, !dbg !71
  %111 = select i1 %36, float %95, float %110, !dbg !71
  %112 = sext i32 %16 to i64, !dbg !72
  %113 = getelementptr float, ptr addrspace(1) %9, i64 %112, !dbg !72
  %114 = bitcast float %111 to i32, !dbg !73
  %115 = select i1 %30, i32 %32, i32 %114, !dbg !74
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %115, ptr addrspace(1) %113, i1 %17) #1, !dbg !73
  ret void, !dbg !75
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cwyvwithovoztc4lxb5p5xz3wogee53cojo7ls5bud7arw2biprt.py", directory: "inductor_cache/wy")
!4 = !{ptr @triton_poi_fused_cat_3, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_3, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_3", linkageName: "triton_poi_fused_cat_3", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 26, column: 19, scope: !7)
!17 = !DILocation(line: 33, column: 35, scope: !7)
!18 = !DILocation(line: 33, column: 48, scope: !7)
!19 = !DILocation(line: 33, column: 45, scope: !7)
!20 = !DILocation(line: 33, column: 30, scope: !7)
!21 = !DILocation(line: 38, column: 57, scope: !7)
!22 = !DILocation(line: 25, column: 19, scope: !7)
!23 = !DILocation(line: 76, column: 20, scope: !7)
!24 = !DILocation(line: 32, column: 18, scope: !7)
!25 = !DILocation(line: 33, column: 60, scope: !7)
!26 = !DILocation(line: 33, column: 53, scope: !7)
!27 = !DILocation(line: 38, column: 36, scope: !7)
!28 = !DILocation(line: 38, column: 40, scope: !7)
!29 = !DILocation(line: 37, column: 18, scope: !7)
!30 = !DILocation(line: 79, column: 55, scope: !7)
!31 = !DILocation(line: 38, column: 53, scope: !7)
!32 = !DILocation(line: 38, column: 31, scope: !7)
!33 = !DILocation(line: 38, column: 69, scope: !7)
!34 = !DILocation(line: 38, column: 62, scope: !7)
!35 = !DILocation(line: 39, column: 31, scope: !7)
!36 = !DILocation(line: 39, column: 43, scope: !7)
!37 = !DILocation(line: 51, column: 20, scope: !7)
!38 = !DILocation(line: 52, column: 40, scope: !7)
!39 = !DILocation(line: 52, column: 54, scope: !7)
!40 = !DILocation(line: 52, column: 31, scope: !7)
!41 = !DILocation(line: 52, column: 71, scope: !7)
!42 = !DILocation(line: 52, column: 63, scope: !7)
!43 = !DILocation(line: 53, column: 31, scope: !7)
!44 = !DILocation(line: 53, column: 44, scope: !7)
!45 = !DILocation(line: 65, column: 20, scope: !7)
!46 = !DILocation(line: 66, column: 40, scope: !7)
!47 = !DILocation(line: 66, column: 54, scope: !7)
!48 = !DILocation(line: 66, column: 31, scope: !7)
!49 = !DILocation(line: 66, column: 71, scope: !7)
!50 = !DILocation(line: 66, column: 63, scope: !7)
!51 = !DILocation(line: 67, column: 31, scope: !7)
!52 = !DILocation(line: 67, column: 44, scope: !7)
!53 = !DILocation(line: 79, column: 49, scope: !7)
!54 = !DILocation(line: 79, column: 40, scope: !7)
!55 = !DILocation(line: 79, column: 31, scope: !7)
!56 = !DILocation(line: 79, column: 72, scope: !7)
!57 = !DILocation(line: 79, column: 64, scope: !7)
!58 = !DILocation(line: 80, column: 31, scope: !7)
!59 = !DILocation(line: 80, column: 45, scope: !7)
!60 = !DILocation(line: 81, column: 20, scope: !7)
!61 = !DILocation(line: 45, column: 35, scope: !7)
!62 = !DILocation(line: 44, column: 20, scope: !7)
!63 = !DILocation(line: 83, column: 20, scope: !7)
!64 = !DILocation(line: 59, column: 35, scope: !7)
!65 = !DILocation(line: 58, column: 20, scope: !7)
!66 = !DILocation(line: 73, column: 35, scope: !7)
!67 = !DILocation(line: 72, column: 20, scope: !7)
!68 = !DILocation(line: 86, column: 35, scope: !7)
!69 = !DILocation(line: 85, column: 20, scope: !7)
!70 = !DILocation(line: 88, column: 35, scope: !7)
!71 = !DILocation(line: 0, scope: !7)
!72 = !DILocation(line: 93, column: 25, scope: !7)
!73 = !DILocation(line: 93, column: 37, scope: !7)
!74 = !DILocation(line: 92, column: 33, scope: !7)
!75 = !DILocation(line: 93, column: 4, scope: !7)
