; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_clone_5(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 6, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 2, !dbg !12
  %10 = and i32 %8, 62, !dbg !12
  %11 = or disjoint i32 %6, %10, !dbg !13
  %12 = or disjoint i32 %9, %6, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %11, 64, !dbg !14
  %.frozen = freeze i32 %11, !dbg !15
  %15 = sdiv i32 %.frozen, 4, !dbg !15
  %16 = mul i32 %15, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = srem i32 %13, 4, !dbg !16
  %18 = srem i32 %15, 4, !dbg !17
  %19 = sdiv i32 %11, 16, !dbg !18
  %20 = mul nsw i32 %18, 3, !dbg !19
  %21 = add nsw i32 %20, 2, !dbg !20
  %22 = mul nsw i32 %.decomposed, 12, !dbg !21
  %23 = mul nsw i32 %17, 12, !dbg !21
  %24 = mul i32 %19, 48, !dbg !22
  %25 = add i32 %21, %24, !dbg !23
  %26 = add i32 %25, %22, !dbg !24
  %27 = add i32 %25, %23, !dbg !24
  %28 = sext i32 %26 to i64, !dbg !25
  %29 = getelementptr float, ptr addrspace(1) %0, i64 %28, !dbg !25
  %30 = sext i32 %27 to i64, !dbg !25
  %31 = getelementptr float, ptr addrspace(1) %0, i64 %30, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %14) #1, !dbg !26
  %33 = bitcast i32 %32 to float, !dbg !26
  %34 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %31, i1 %14) #1, !dbg !26
  %35 = bitcast i32 %34 to float, !dbg !26
  %36 = sext i32 %21 to i64, !dbg !27
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !27
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %14) #1, !dbg !28
  %39 = bitcast i32 %38 to float, !dbg !28
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %14) #1, !dbg !28
  %41 = bitcast i32 %40 to float, !dbg !28
  %42 = fadd float %33, %39, !dbg !29
  %43 = fadd float %35, %41, !dbg !29
  %44 = sext i32 %11 to i64, !dbg !30
  %45 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !30
  %46 = bitcast float %42 to i32, !dbg !31
  %47 = bitcast float %43 to i32, !dbg !31
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %46, i32 %47, ptr addrspace(1) %45, i1 %14) #1, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "crmiigpy7klpq2coy3zdhdpinqzull3owivmox4ft7ccgg3bxsbs.py", directory: "inductor_cache/rm")
!4 = !{ptr @triton_poi_fused_clone_5, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_clone_5, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_clone_5", linkageName: "triton_poi_fused_clone_5", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 36, scope: !7)
!20 = !DILocation(line: 28, column: 34, scope: !7)
!21 = !DILocation(line: 28, column: 44, scope: !7)
!22 = !DILocation(line: 28, column: 52, scope: !7)
!23 = !DILocation(line: 28, column: 41, scope: !7)
!24 = !DILocation(line: 28, column: 49, scope: !7)
!25 = !DILocation(line: 28, column: 30, scope: !7)
!26 = !DILocation(line: 28, column: 57, scope: !7)
!27 = !DILocation(line: 29, column: 30, scope: !7)
!28 = !DILocation(line: 29, column: 41, scope: !7)
!29 = !DILocation(line: 30, column: 18, scope: !7)
!30 = !DILocation(line: 31, column: 25, scope: !7)
!31 = !DILocation(line: 31, column: 36, scope: !7)
!32 = !DILocation(line: 31, column: 4, scope: !7)
