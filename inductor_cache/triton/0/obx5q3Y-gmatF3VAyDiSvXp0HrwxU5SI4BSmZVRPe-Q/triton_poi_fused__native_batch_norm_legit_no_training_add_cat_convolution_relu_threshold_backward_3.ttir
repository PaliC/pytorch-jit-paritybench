#loc = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0)
module {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training_add_cat_convolution_relu_threshold_backward_3(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg12: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg14: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg15: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg16: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg17: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg18: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg19: !tt.ptr<i1> {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0), %arg20: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<1.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_0 = arith.constant dense<9.99999974E-6> : tensor<256xf32> loc(#loc1)
    %cst_1 = arith.constant dense<48> : tensor<256xi32> loc(#loc1)
    %cst_2 = arith.constant dense<-3> : tensor<256xi32> loc(#loc1)
    %cst_3 = arith.constant dense<32> : tensor<256xi32> loc(#loc1)
    %cst_4 = arith.constant dense<-1> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<3> : tensor<256xi64> loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_7 = arith.constant dense<1> : tensor<256xi64> loc(#loc1)
    %cst_8 = arith.constant dense<96> : tensor<256xi32> loc(#loc1)
    %cst_9 = arith.constant dense<6> : tensor<256xi32> loc(#loc1)
    %cst_10 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_11 = arith.constant dense<384> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_11 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_10 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_9 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_10 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_8 : tensor<256xi32> loc(#loc10)
    %10 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc11)
    %11 = tt.addptr %10, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc11)
    %12 = tt.load %11, %5 : tensor<256x!tt.ptr<f32>> loc(#loc12)
    %13 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc13)
    %14 = tt.addptr %13, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc13)
    %15 = tt.load %14, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc15)
    %17 = tt.addptr %16, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc15)
    %18 = tt.load %17, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %19 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc17)
    %20 = tt.addptr %19, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc17)
    %21 = tt.load %20, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc18)
    %22 = tt.splat %arg12 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc19)
    %23 = tt.addptr %22, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc19)
    %24 = tt.load %23, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc20)
    %25 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc21)
    %26 = tt.addptr %25, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc21)
    %27 = tt.load %26, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc22)
    %28 = tt.splat %arg14 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc23)
    %29 = tt.addptr %28, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc23)
    %30 = tt.load %29, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc24)
    %31 = tt.splat %arg15 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc25)
    %32 = tt.addptr %31, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc25)
    %33 = tt.load %32, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc26)
    %34 = tt.splat %arg16 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc27)
    %35 = tt.addptr %34, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %36 = tt.load %35, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc28)
    %37 = tt.splat %arg17 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc29)
    %38 = tt.addptr %37, %7 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc29)
    %39 = tt.load %38, %5 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc30)
    %40 = arith.addf %12, %15 : tensor<256xf32> loc(#loc31)
    %41 = arith.extsi %7 : tensor<256xi32> to tensor<256xi64> loc(#loc32)
    %42 = arith.cmpi slt, %41, %cst_7 : tensor<256xi64> loc(#loc32)
    %43 = arith.muli %9, %cst_10 : tensor<256xi32> loc(#loc33)
    %44 = arith.addi %8, %43 : tensor<256xi32> loc(#loc34)
    %45 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc35)
    %46 = tt.addptr %45, %44 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc35)
    %47 = arith.andi %42, %5 : tensor<256xi1> loc(#loc36)
    %48 = tt.load %46, %47, %cst_6 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc37)
    %49 = arith.cmpi sge, %41, %cst_7 : tensor<256xi64> loc(#loc38)
    %50 = arith.cmpi slt, %41, %cst_5 : tensor<256xi64> loc(#loc39)
    %51 = arith.andi %49, %50 : tensor<256xi1> loc(#loc40)
    %52 = arith.addi %7, %cst_4 : tensor<256xi32> loc(#loc41)
    %53 = arith.muli %52, %cst_10 : tensor<256xi32> loc(#loc42)
    %54 = arith.addi %8, %53 : tensor<256xi32> loc(#loc43)
    %55 = arith.muli %9, %cst_3 : tensor<256xi32> loc(#loc44)
    %56 = arith.addi %54, %55 : tensor<256xi32> loc(#loc45)
    %57 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc46)
    %58 = tt.addptr %57, %56 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc46)
    %59 = arith.andi %51, %5 : tensor<256xi1> loc(#loc47)
    %60 = tt.load %58, %59, %cst_6 : tensor<256x!tt.ptr<f32>> loc(#loc48)
    %61 = arith.cmpi sge, %41, %cst_5 : tensor<256xi64> loc(#loc49)
    %62 = arith.addi %7, %cst_2 : tensor<256xi32> loc(#loc50)
    %63 = arith.muli %62, %cst_10 : tensor<256xi32> loc(#loc51)
    %64 = arith.addi %8, %63 : tensor<256xi32> loc(#loc52)
    %65 = arith.muli %9, %cst_1 : tensor<256xi32> loc(#loc53)
    %66 = arith.addi %64, %65 : tensor<256xi32> loc(#loc54)
    %67 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc55)
    %68 = tt.addptr %67, %66 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc55)
    %69 = arith.andi %61, %5 : tensor<256xi1> loc(#loc56)
    %70 = tt.load %68, %69, %cst_6 : tensor<256x!tt.ptr<f32>> loc(#loc57)
    %71 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc58)
    %72 = tt.addptr %71, %62 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc58)
    %73 = tt.load %72, %69, %cst_6 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc59)
    %74 = arith.subf %70, %73 : tensor<256xf32> loc(#loc60)
    %75 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc61)
    %76 = tt.addptr %75, %62 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc61)
    %77 = tt.load %76, %69, %cst_6 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc62)
    %78 = arith.addf %77, %cst_0 : tensor<256xf32> loc(#loc63)
    %79 = tt.extern_elementwise %78 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc64)
    %80 = arith.divf %cst, %79 : tensor<256xf32> loc(#loc65)
    %81 = arith.mulf %74, %80 : tensor<256xf32> loc(#loc66)
    %82 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc67)
    %83 = tt.addptr %82, %62 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc67)
    %84 = tt.load %83, %69, %cst_6 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc68)
    %85 = arith.mulf %81, %84 : tensor<256xf32> loc(#loc69)
    %86 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc70)
    %87 = tt.addptr %86, %62 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc70)
    %88 = tt.load %87, %69, %cst_6 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc71)
    %89 = arith.addf %85, %88 : tensor<256xf32> loc(#loc72)
    %90 = arith.cmpf ogt, %cst_6, %89 : tensor<256xf32> loc(#loc104)
    %91 = arith.select %90, %cst_6, %89 : tensor<256xi1>, tensor<256xf32> loc(#loc105)
    %92 = arith.select %61, %91, %cst_6 : tensor<256xi1>, tensor<256xf32> loc(#loc76)
    %93 = arith.select %51, %60, %92 : tensor<256xi1>, tensor<256xf32> loc(#loc77)
    %94 = arith.select %42, %48, %93 : tensor<256xi1>, tensor<256xf32> loc(#loc78)
    %95 = arith.subf %94, %18 : tensor<256xf32> loc(#loc79)
    %96 = arith.addf %21, %cst_0 : tensor<256xf32> loc(#loc80)
    %97 = tt.extern_elementwise %96 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc81)
    %98 = arith.divf %cst, %97 : tensor<256xf32> loc(#loc82)
    %99 = arith.mulf %95, %98 : tensor<256xf32> loc(#loc83)
    %100 = arith.mulf %99, %24 : tensor<256xf32> loc(#loc84)
    %101 = arith.addf %100, %27 : tensor<256xf32> loc(#loc85)
    %102 = arith.subf %40, %30 : tensor<256xf32> loc(#loc86)
    %103 = arith.addf %33, %cst_0 : tensor<256xf32> loc(#loc87)
    %104 = tt.extern_elementwise %103 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc88)
    %105 = arith.divf %cst, %104 : tensor<256xf32> loc(#loc89)
    %106 = arith.mulf %102, %105 : tensor<256xf32> loc(#loc90)
    %107 = arith.mulf %106, %36 : tensor<256xf32> loc(#loc91)
    %108 = arith.addf %107, %39 : tensor<256xf32> loc(#loc92)
    %109 = arith.addf %101, %108 : tensor<256xf32> loc(#loc93)
    %110 = arith.cmpf ogt, %cst_6, %109 : tensor<256xf32> loc(#loc106)
    %111 = arith.select %110, %cst_6, %109 : tensor<256xi1>, tensor<256xf32> loc(#loc107)
    %112 = arith.cmpf ole, %111, %cst_6 : tensor<256xf32> loc(#loc95)
    tt.store %11, %40, %5 : tensor<256x!tt.ptr<f32>> loc(#loc96)
    %113 = tt.splat %arg18 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc97)
    %114 = tt.addptr %113, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc97)
    tt.store %114, %94, %5 : tensor<256x!tt.ptr<f32>> loc(#loc98)
    %115 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc99)
    %116 = tt.addptr %115, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc99)
    tt.store %116, %111, %5 : tensor<256x!tt.ptr<f32>> loc(#loc100)
    %117 = tt.splat %arg19 : !tt.ptr<i1> -> tensor<256x!tt.ptr<i1>> loc(#loc101)
    %118 = tt.addptr %117, %4 : tensor<256x!tt.ptr<i1>>, tensor<256xi32> loc(#loc101)
    %119 = tt.bitcast %118 : tensor<256x!tt.ptr<i1>> -> tensor<256x!tt.ptr<i8>> loc(#loc102)
    %120 = arith.extui %112 : tensor<256xi1> to tensor<256xi8> loc(#loc102)
    tt.store %119, %120, %5 : tensor<256x!tt.ptr<i8>> loc(#loc102)
    tt.return loc(#loc103)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":21:28)
#loc3 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":21:33)
#loc4 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":22:36)
#loc5 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":22:23)
#loc6 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":23:21)
#loc7 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":25:21)
#loc8 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":25:27)
#loc9 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":26:19)
#loc10 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":27:19)
#loc11 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":28:34)
#loc12 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":28:39)
#loc13 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":29:30)
#loc14 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":29:35)
#loc15 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":30:31)
#loc16 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":30:36)
#loc17 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":31:31)
#loc18 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":31:36)
#loc19 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":32:32)
#loc20 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":32:37)
#loc21 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":33:32)
#loc22 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":33:37)
#loc23 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":34:32)
#loc24 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":34:37)
#loc25 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":35:32)
#loc26 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":35:37)
#loc27 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":36:32)
#loc28 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":36:37)
#loc29 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":37:32)
#loc30 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":37:37)
#loc31 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":38:18)
#loc32 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":43:18)
#loc33 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":44:38)
#loc34 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":44:35)
#loc35 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":44:30)
#loc36 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":44:50)
#loc37 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":44:43)
#loc38 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":45:19)
#loc39 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":47:19)
#loc40 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":48:19)
#loc41 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:47)
#loc42 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:40)
#loc43 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:36)
#loc44 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:56)
#loc45 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:53)
#loc46 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:31)
#loc47 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:69)
#loc48 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":49:61)
#loc49 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":50:20)
#loc50 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:47)
#loc51 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:40)
#loc52 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:36)
#loc53 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:56)
#loc54 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:53)
#loc55 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:31)
#loc56 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:69)
#loc57 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":53:61)
#loc58 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":54:31)
#loc59 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":54:43)
#loc60 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":55:20)
#loc61 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":56:31)
#loc62 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":56:43)
#loc63 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":58:20)
#loc64 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":59:27)
#loc65 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":61:20)
#loc66 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":64:20)
#loc67 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":65:31)
#loc68 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":65:43)
#loc69 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":66:20)
#loc70 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":67:31)
#loc71 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":67:43)
#loc72 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":68:20)
#loc73 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc74 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":70:42)
#loc75 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc76 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":72:35)
#loc77 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":73:35)
#loc78 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":74:33)
#loc79 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":75:20)
#loc80 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":77:20)
#loc81 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":78:27)
#loc82 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":80:20)
#loc83 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":83:20)
#loc84 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":84:20)
#loc85 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":85:20)
#loc86 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":86:19)
#loc87 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":87:20)
#loc88 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":88:27)
#loc89 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":89:20)
#loc90 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":91:20)
#loc91 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":92:20)
#loc92 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":93:20)
#loc93 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":94:20)
#loc94 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":96:42)
#loc95 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":98:21)
#loc96 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":99:39)
#loc97 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":100:25)
#loc98 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":100:37)
#loc99 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":101:28)
#loc100 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":101:40)
#loc101 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":102:25)
#loc102 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":102:37)
#loc103 = loc("inductor_cache/m6/cm6o26sem6u74v43x46zbgf2vdhdj2sltbmictqe7p6w5vycp5hr.py":102:4)
#loc104 = loc(callsite(#loc73 at #loc74))
#loc105 = loc(callsite(#loc75 at #loc74))
#loc106 = loc(callsite(#loc73 at #loc94))
#loc107 = loc(callsite(#loc75 at #loc94))
