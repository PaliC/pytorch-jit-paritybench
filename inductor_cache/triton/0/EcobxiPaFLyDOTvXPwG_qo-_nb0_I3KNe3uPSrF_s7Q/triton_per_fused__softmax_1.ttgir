#blocked = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [8, 4], warpsPerCTA = [1, 2], order = [0, 1]}>
#loc = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":19:0)
#loc1 = loc(unknown)
#loc18 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":36:37)
#loc28 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":41:25)
#loc37 = loc(callsite(#loc1 at #loc18))
#loc43 = loc(callsite(#loc1 at #loc28))
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 2 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_per_fused__softmax_1(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":19:0), %arg4: i32 loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8x8xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0xFF800000> : tensor<8x8xf32, #blocked> loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<8> : tensor<8x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<8> : tensor<1x8xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<8x1xi32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c8_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc4)
    %3 = tt.expand_dims %2 {axis = 1 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xi32, #blocked> loc(#loc4)
    %4 = tt.splat %1 : i32 -> tensor<8x1xi32, #blocked> loc(#loc5)
    %5 = arith.addi %4, %3 : tensor<8x1xi32, #blocked> loc(#loc5)
    %6 = arith.cmpi slt, %5, %cst_1 : tensor<8x1xi32, #blocked> loc(#loc6)
    %7 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> loc(#loc7)
    %8 = tt.expand_dims %7 {axis = 0 : i32} : tensor<8xi32, #triton_gpu.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8xi32, #blocked> loc(#loc7)
    %9 = arith.remsi %5, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc8)
    %10 = arith.divsi %5, %cst_2 : tensor<8x1xi32, #blocked> loc(#loc9)
    %11 = arith.muli %8, %cst_3 : tensor<1x8xi32, #blocked> loc(#loc10)
    %12 = tt.broadcast %9 : tensor<8x1xi32, #blocked> -> tensor<8x8xi32, #blocked> loc(#loc11)
    %13 = tt.broadcast %11 : tensor<1x8xi32, #blocked> -> tensor<8x8xi32, #blocked> loc(#loc11)
    %14 = arith.addi %12, %13 : tensor<8x8xi32, #blocked> loc(#loc11)
    %15 = arith.muli %10, %cst_4 : tensor<8x1xi32, #blocked> loc(#loc12)
    %16 = tt.broadcast %15 : tensor<8x1xi32, #blocked> -> tensor<8x8xi32, #blocked> loc(#loc13)
    %17 = arith.addi %14, %16 : tensor<8x8xi32, #blocked> loc(#loc13)
    %18 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<8x8x!tt.ptr<f32>, #blocked> loc(#loc14)
    %19 = tt.addptr %18, %17 : tensor<8x8x!tt.ptr<f32>, #blocked>, tensor<8x8xi32, #blocked> loc(#loc14)
    %20 = tt.broadcast %6 : tensor<8x1xi1, #blocked> -> tensor<8x8xi1, #blocked> loc(#loc15)
    %21 = tt.load %19, %20, %cst : tensor<8x8x!tt.ptr<f32>, #blocked> loc(#loc15)
    %22 = arith.select %20, %21, %cst_0 : tensor<8x8xi1, #blocked>, tensor<8x8xf32, #blocked> loc(#loc16)
    %23 = "tt.reduce"(%22) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc18)), %arg6: f32 loc(callsite(#loc1 at #loc18))):
      %35 = arith.cmpf ogt, %arg5, %arg6 : f32 loc(#loc45)
      %36 = arith.cmpf une, %arg5, %arg5 : f32 loc(#loc46)
      %37 = arith.ori %35, %36 : i1 loc(#loc47)
      %38 = arith.select %37, %arg5, %arg6 : f32 loc(#loc48)
      tt.reduce.return %38 : f32 loc(#loc36)
    }) : (tensor<8x8xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc36)
    %24 = tt.expand_dims %23 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc23)
    %25 = tt.broadcast %24 : tensor<8x1xf32, #blocked> -> tensor<8x8xf32, #blocked> loc(#loc24)
    %26 = arith.subf %21, %25 : tensor<8x8xf32, #blocked> loc(#loc24)
    %27 = math.exp %26 : tensor<8x8xf32, #blocked> loc(#loc25)
    %28 = arith.select %20, %27, %cst : tensor<8x8xi1, #blocked>, tensor<8x8xf32, #blocked> loc(#loc26)
    %29 = "tt.reduce"(%28) <{axis = 1 : i32}> ({
    ^bb0(%arg5: f32 loc(callsite(#loc1 at #loc28)), %arg6: f32 loc(callsite(#loc1 at #loc28))):
      %35 = arith.addf %arg5, %arg6 : f32 loc(#loc49)
      tt.reduce.return %35 : f32 loc(#loc42)
    }) : (tensor<8x8xf32, #blocked>) -> tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> loc(#loc42)
    %30 = tt.expand_dims %29 {axis = 1 : i32} : tensor<8xf32, #triton_gpu.slice<{dim = 1, parent = #blocked}>> -> tensor<8x1xf32, #blocked> loc(#loc30)
    %31 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc31)
    %32 = tt.addptr %31, %5 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc31)
    tt.store %32, %24, %6 : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc32)
    %33 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc33)
    %34 = tt.addptr %33, %5 : tensor<8x1x!tt.ptr<f32>, #blocked>, tensor<8x1xi32, #blocked> loc(#loc33)
    tt.store %34, %30, %6 : tensor<8x1x!tt.ptr<f32>, #blocked> loc(#loc34)
    tt.return loc(#loc35)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":23:28)
#loc3 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":23:33)
#loc4 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":24:44)
#loc5 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":24:23)
#loc6 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":25:21)
#loc7 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":26:34)
#loc8 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":30:19)
#loc9 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":31:19)
#loc10 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":33:37)
#loc11 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":33:35)
#loc12 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":33:45)
#loc13 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":33:42)
#loc14 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":33:30)
#loc15 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":33:50)
#loc16 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":35:33)
#loc17 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":131:29)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc20 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:21)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":120:16)
#loc22 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc23 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":36:40)
#loc24 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":37:18)
#loc25 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":38:23)
#loc26 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":40:33)
#loc27 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc29 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc30 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":41:28)
#loc31 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":42:25)
#loc32 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":42:36)
#loc33 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":43:25)
#loc34 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":43:37)
#loc35 = loc("inductor_cache/a3/ca3oymtpy7f5qtilxoghvkz2ajggav4ax25vki4j37lwiv2ulelh.py":43:4)
#loc36 = loc(callsite(#loc17 at #loc18))
#loc38 = loc(callsite(#loc19 at #loc17))
#loc39 = loc(callsite(#loc20 at #loc17))
#loc40 = loc(callsite(#loc21 at #loc17))
#loc41 = loc(callsite(#loc22 at #loc17))
#loc42 = loc(callsite(#loc27 at #loc28))
#loc44 = loc(callsite(#loc29 at #loc27))
#loc45 = loc(callsite(#loc38 at #loc18))
#loc46 = loc(callsite(#loc39 at #loc18))
#loc47 = loc(callsite(#loc40 at #loc18))
#loc48 = loc(callsite(#loc41 at #loc18))
#loc49 = loc(callsite(#loc44 at #loc28))
