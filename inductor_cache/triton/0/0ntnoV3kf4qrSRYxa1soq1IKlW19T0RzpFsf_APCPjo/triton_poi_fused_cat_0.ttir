#loc = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0)
module {
  tt.func public @triton_poi_fused_cat_0(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<3> : tensor<256xi64> loc(#loc1)
    %cst_0 = arith.constant dense<2> : tensor<256xi64> loc(#loc1)
    %cst_1 = arith.constant dense<9.99999997E-7> : tensor<256xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<256xf32> loc(#loc1)
    %cst_3 = arith.constant dense<1> : tensor<256xi64> loc(#loc1)
    %cst_4 = arith.constant dense<64> : tensor<256xi32> loc(#loc1)
    %cst_5 = arith.constant dense<4> : tensor<256xi32> loc(#loc1)
    %cst_6 = arith.constant dense<16> : tensor<256xi32> loc(#loc1)
    %cst_7 = arith.constant dense<256> : tensor<256xi32> loc(#loc1)
    %c256_i32 = arith.constant 256 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c256_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 256 : i32, start = 0 : i32} : tensor<256xi32> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<256xi32> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<256xi32> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<256xi32> loc(#loc6)
    %6 = arith.divsi %4, %cst_6 : tensor<256xi32> loc(#loc7)
    %7 = arith.remsi %6, %cst_5 : tensor<256xi32> loc(#loc8)
    %8 = arith.remsi %4, %cst_6 : tensor<256xi32> loc(#loc9)
    %9 = arith.divsi %4, %cst_4 : tensor<256xi32> loc(#loc10)
    %10 = arith.extsi %7 : tensor<256xi32> to tensor<256xi64> loc(#loc11)
    %11 = arith.cmpi slt, %10, %cst_3 : tensor<256xi64> loc(#loc11)
    %12 = arith.muli %9, %cst_6 : tensor<256xi32> loc(#loc12)
    %13 = arith.addi %8, %12 : tensor<256xi32> loc(#loc13)
    %14 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc14)
    %15 = tt.addptr %14, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc14)
    %16 = arith.andi %11, %5 : tensor<256xi1> loc(#loc15)
    %17 = tt.load %15, %16, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc16)
    %18 = arith.mulf %17, %17 : tensor<256xf32> loc(#loc17)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc18)
    %20 = tt.addptr %19, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc18)
    %21 = tt.load %20, %16, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc19)
    %22 = arith.mulf %21, %21 : tensor<256xf32> loc(#loc20)
    %23 = arith.addf %18, %22 : tensor<256xf32> loc(#loc21)
    %24 = arith.addf %23, %cst_1 : tensor<256xf32> loc(#loc22)
    %25 = tt.extern_elementwise %24 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc23)
    %26 = arith.cmpi sge, %10, %cst_3 : tensor<256xi64> loc(#loc24)
    %27 = arith.cmpi slt, %10, %cst_0 : tensor<256xi64> loc(#loc25)
    %28 = arith.andi %26, %27 : tensor<256xi1> loc(#loc26)
    %29 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc27)
    %30 = tt.addptr %29, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc27)
    %31 = arith.andi %28, %5 : tensor<256xi1> loc(#loc28)
    %32 = tt.load %30, %31, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc29)
    %33 = arith.mulf %32, %32 : tensor<256xf32> loc(#loc30)
    %34 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc31)
    %35 = tt.addptr %34, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc31)
    %36 = tt.load %35, %31, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc32)
    %37 = arith.mulf %36, %36 : tensor<256xf32> loc(#loc33)
    %38 = arith.addf %33, %37 : tensor<256xf32> loc(#loc34)
    %39 = arith.addf %38, %cst_1 : tensor<256xf32> loc(#loc35)
    %40 = tt.extern_elementwise %39 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc36)
    %41 = arith.cmpi sge, %10, %cst_0 : tensor<256xi64> loc(#loc37)
    %42 = arith.cmpi slt, %10, %cst : tensor<256xi64> loc(#loc38)
    %43 = arith.andi %41, %42 : tensor<256xi1> loc(#loc39)
    %44 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc40)
    %45 = tt.addptr %44, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc40)
    %46 = arith.andi %43, %5 : tensor<256xi1> loc(#loc41)
    %47 = tt.load %45, %46, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc42)
    %48 = arith.mulf %47, %47 : tensor<256xf32> loc(#loc43)
    %49 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc44)
    %50 = tt.addptr %49, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc44)
    %51 = tt.load %50, %46, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc45)
    %52 = arith.mulf %51, %51 : tensor<256xf32> loc(#loc46)
    %53 = arith.addf %48, %52 : tensor<256xf32> loc(#loc47)
    %54 = arith.addf %53, %cst_1 : tensor<256xf32> loc(#loc48)
    %55 = tt.extern_elementwise %54 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc49)
    %56 = arith.cmpi sge, %10, %cst : tensor<256xi64> loc(#loc50)
    %57 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc51)
    %58 = tt.addptr %57, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc51)
    %59 = arith.andi %56, %5 : tensor<256xi1> loc(#loc52)
    %60 = tt.load %58, %59, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc53)
    %61 = arith.mulf %60, %60 : tensor<256xf32> loc(#loc54)
    %62 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc55)
    %63 = tt.addptr %62, %13 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc55)
    %64 = tt.load %63, %59, %cst_2 evictionPolicy = evict_last : tensor<256x!tt.ptr<f32>> loc(#loc56)
    %65 = arith.mulf %64, %64 : tensor<256xf32> loc(#loc57)
    %66 = arith.addf %61, %65 : tensor<256xf32> loc(#loc58)
    %67 = arith.addf %66, %cst_1 : tensor<256xf32> loc(#loc59)
    %68 = tt.extern_elementwise %67 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<256xf32>) -> tensor<256xf32> loc(#loc60)
    %69 = arith.select %56, %68, %cst_2 : tensor<256xi1>, tensor<256xf32> loc(#loc61)
    %70 = arith.select %43, %55, %69 : tensor<256xi1>, tensor<256xf32> loc(#loc71)
    %71 = arith.select %28, %40, %70 : tensor<256xi1>, tensor<256xf32> loc(#loc72)
    %72 = arith.select %11, %25, %71 : tensor<256xi1>, tensor<256xf32> loc(#loc73)
    %73 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<256x!tt.ptr<f32>> loc(#loc68)
    %74 = tt.addptr %73, %4 : tensor<256x!tt.ptr<f32>>, tensor<256xi32> loc(#loc68)
    tt.store %74, %72, %5 : tensor<256x!tt.ptr<f32>> loc(#loc69)
    tt.return loc(#loc70)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":21:28)
#loc3 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":21:33)
#loc4 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":22:36)
#loc5 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":22:23)
#loc6 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":23:21)
#loc7 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":24:21)
#loc8 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":24:27)
#loc9 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":25:19)
#loc10 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":26:19)
#loc11 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":32:18)
#loc12 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":33:38)
#loc13 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":33:35)
#loc14 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":33:30)
#loc15 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":33:50)
#loc16 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":33:43)
#loc17 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":34:18)
#loc18 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":35:30)
#loc19 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":35:43)
#loc20 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":36:18)
#loc21 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":37:18)
#loc22 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":39:19)
#loc23 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":40:27)
#loc24 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":43:20)
#loc25 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":45:19)
#loc26 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":46:20)
#loc27 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":47:31)
#loc28 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":47:52)
#loc29 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":47:44)
#loc30 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":48:20)
#loc31 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":49:31)
#loc32 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":49:44)
#loc33 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":50:20)
#loc34 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":51:20)
#loc35 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":53:20)
#loc36 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":54:27)
#loc37 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":57:20)
#loc38 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":59:19)
#loc39 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":60:20)
#loc40 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":61:31)
#loc41 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":61:52)
#loc42 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":61:44)
#loc43 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":62:20)
#loc44 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":63:31)
#loc45 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":63:44)
#loc46 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":64:20)
#loc47 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":65:20)
#loc48 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":67:20)
#loc49 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":68:27)
#loc50 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":71:20)
#loc51 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":74:31)
#loc52 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":74:52)
#loc53 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":74:44)
#loc54 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":75:20)
#loc55 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":76:31)
#loc56 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":76:44)
#loc57 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":77:20)
#loc58 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":78:20)
#loc59 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":80:20)
#loc60 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":81:27)
#loc61 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":83:35)
#loc62 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":84:35)
#loc63 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":70:35)
#loc64 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":85:35)
#loc65 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":56:35)
#loc66 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":86:34)
#loc67 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":42:34)
#loc68 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":87:25)
#loc69 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":87:37)
#loc70 = loc("inductor_cache/w3/cw3krlil6navzcnlnt5zyvivozsiiq7ijlstk6uwprvutxpik2fr.py":87:4)
#loc71 = loc(fused[#loc62, #loc63])
#loc72 = loc(fused[#loc64, #loc65])
#loc73 = loc(fused[#loc66, #loc67])
