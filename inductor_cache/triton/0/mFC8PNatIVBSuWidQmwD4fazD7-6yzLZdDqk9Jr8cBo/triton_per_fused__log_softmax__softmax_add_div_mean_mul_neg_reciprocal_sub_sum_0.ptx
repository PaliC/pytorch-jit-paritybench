//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0 // -- Begin function triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0
.visible .entry triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0(
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_4,
	.param .u32 triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<38>;
	.reg .b32 	%r<100>;
	.reg .f32 	%f<144>;
	.reg .b64 	%rd<24>;
	.loc	1 19 0                          // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:19:0

// %bb.0:
	ld.param.u64 	%rd23, [triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_0];
$L__tmp0:
	.loc	1 26 34                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:26:34
	mov.u32 	%r1, %tid.x;
	ld.param.u64 	%rd18, [triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_1];
	.loc	1 30 32                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:30:32
	shl.b32 	%r57, %r1, 2;
	ld.param.u64 	%rd19, [triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_2];
	and.b32  	%r58, %r57, 252;
	ld.param.u64 	%rd20, [triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_3];
	ld.param.u64 	%rd21, [triton_per_fused__log_softmax__softmax_add_div_mean_mul_neg_reciprocal_sub_sum_0_param_4];
	.loc	1 30 30                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:30:30
	mul.wide.u32 	%rd22, %r58, 4;
	add.s64 	%rd2, %rd18, %rd22;
	mov.pred 	%p1, -1;
	.loc	1 30 37                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:30:37
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r2 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 31 30                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:31:30
	add.s64 	%rd3, %rd19, %rd22;
	.loc	1 31 37                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:31:37
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f30, %r3;
	.loc	1 32 30                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:32:30
	add.s64 	%rd4, %rd20, %rd22;
	.loc	1 32 37                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:32:37
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f31, %r4;
	.loc	1 33 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:33:31
	add.s64 	%rd5, %rd2, 4;
	.loc	1 33 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:33:42
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 34 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:34:31
	add.s64 	%rd6, %rd3, 4;
	.loc	1 34 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:34:42
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd6 + 0 ];
	// end inline asm
	mov.b32 	%f32, %r6;
	.loc	1 35 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:35:31
	add.s64 	%rd7, %rd4, 4;
	.loc	1 35 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:35:42
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd7 + 0 ];
	// end inline asm
	mov.b32 	%f33, %r7;
	.loc	1 36 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:36:31
	add.s64 	%rd8, %rd2, 8;
	.loc	1 36 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:36:42
	// begin inline asm
	mov.u32 %r8, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r8 }, [ %rd8 + 0 ];
	// end inline asm
	.loc	1 37 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:37:31
	add.s64 	%rd9, %rd3, 8;
	.loc	1 37 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:37:42
	// begin inline asm
	mov.u32 %r9, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r9 }, [ %rd9 + 0 ];
	// end inline asm
	mov.b32 	%f34, %r9;
	.loc	1 38 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:38:31
	add.s64 	%rd10, %rd4, 8;
	.loc	1 38 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:38:42
	// begin inline asm
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r10 }, [ %rd10 + 0 ];
	// end inline asm
	mov.b32 	%f35, %r10;
	.loc	1 39 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:39:31
	add.s64 	%rd11, %rd2, 12;
	.loc	1 39 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:39:42
	// begin inline asm
	mov.u32 %r11, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r11 }, [ %rd11 + 0 ];
	// end inline asm
	.loc	1 40 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:40:31
	add.s64 	%rd12, %rd3, 12;
	.loc	1 40 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:40:42
	// begin inline asm
	mov.u32 %r12, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r12 }, [ %rd12 + 0 ];
	// end inline asm
	mov.b32 	%f36, %r12;
	.loc	1 41 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:41:31
	add.s64 	%rd13, %rd4, 12;
	.loc	1 41 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:41:42
	// begin inline asm
	mov.u32 %r13, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r13 }, [ %rd13 + 0 ];
	// end inline asm
	mov.b32 	%f37, %r13;
	.loc	1 42 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:42:31
	add.s64 	%rd14, %rd21, %rd22;
	.loc	1 42 38                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:42:38
	// begin inline asm
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r14 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 43 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:43:31
	add.s64 	%rd15, %rd14, 4;
	.loc	1 43 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:43:42
	// begin inline asm
	mov.u32 %r15, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r15 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 44 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:44:31
	add.s64 	%rd16, %rd14, 8;
	.loc	1 44 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:44:42
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r16 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 45 31                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:45:31
	add.s64 	%rd17, %rd14, 12;
	.loc	1 45 42                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:45:42
	// begin inline asm
	mov.u32 %r17, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r17 }, [ %rd17 + 0 ];
	// end inline asm
	.loc	1 47 18                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:47:18
	add.f32 	%f38, %f30, 0fBF800000;
	.loc	1 49 18                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:49:18
	mov.b32 	%r20, %f38;
	mov.b32 	%r19, 1065353216;
	// begin inline asm
	div.full.f32 %r18, %r19, %r20;
	// end inline asm
	mov.b32 	%f39, %r18;
	.loc	1 51 18                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:51:18
	mul.f32 	%f40, %f39, 0f40400000;
	.loc	1 54 19                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:54:19
	neg.f32 	%f41, %f40;
	fma.rn.f32 	%f42, %f41, %f31, 0f40800000;
	.loc	1 55 19                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:55:19
	mov.b32 	%r23, %f42;
	// begin inline asm
	div.full.f32 %r21, %r2, %r23;
	// end inline asm
	mov.b32 	%f43, %r21;
	.loc	1 56 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:56:20
	add.f32 	%f44, %f32, 0fBF800000;
	.loc	1 57 19                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:57:19
	mov.b32 	%r26, %f44;
	// begin inline asm
	div.full.f32 %r24, %r19, %r26;
	// end inline asm
	mov.b32 	%f45, %r24;
	.loc	1 58 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:58:20
	mul.f32 	%f46, %f45, 0f40400000;
	.loc	1 60 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:60:20
	neg.f32 	%f47, %f46;
	fma.rn.f32 	%f48, %f47, %f33, 0f40800000;
	.loc	1 61 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:61:20
	mov.b32 	%r29, %f48;
	// begin inline asm
	div.full.f32 %r27, %r5, %r29;
	// end inline asm
	mov.b32 	%f49, %r27;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p17, %f43, %f49;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p18, %f43, %f43;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f50, %f43, %f49, %p17;
	selp.f32 	%f51, %f43, %f50, %p18;
$L__tmp2:
	.loc	1 63 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:63:20
	add.f32 	%f52, %f34, 0fBF800000;
	.loc	1 64 19                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:64:19
	mov.b32 	%r32, %f52;
	// begin inline asm
	div.full.f32 %r30, %r19, %r32;
	// end inline asm
	mov.b32 	%f53, %r30;
	.loc	1 65 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:65:20
	mul.f32 	%f54, %f53, 0f40400000;
	.loc	1 67 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:67:20
	neg.f32 	%f55, %f54;
	fma.rn.f32 	%f56, %f55, %f35, 0f40800000;
	.loc	1 68 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:68:20
	mov.b32 	%r35, %f56;
	// begin inline asm
	div.full.f32 %r33, %r8, %r35;
	// end inline asm
	mov.b32 	%f57, %r33;
$L__tmp3:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p19, %f51, %f57;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p20, %f51, %f51;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f58, %f51, %f57, %p20;
	selp.f32 	%f59, %f51, %f58, %p19;
$L__tmp4:
	.loc	1 70 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:70:20
	add.f32 	%f60, %f36, 0fBF800000;
	.loc	1 71 19                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:71:19
	mov.b32 	%r38, %f60;
	// begin inline asm
	div.full.f32 %r36, %r19, %r38;
	// end inline asm
	mov.b32 	%f61, %r36;
	.loc	1 72 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:72:20
	mul.f32 	%f62, %f61, 0f40400000;
	.loc	1 74 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:74:20
	neg.f32 	%f63, %f62;
	fma.rn.f32 	%f64, %f63, %f37, 0f40800000;
	.loc	1 75 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:75:20
	mov.b32 	%r41, %f64;
	// begin inline asm
	div.full.f32 %r39, %r11, %r41;
	// end inline asm
	mov.b32 	%f65, %r39;
$L__tmp5:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p21, %f59, %f65;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p22, %f59, %f59;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f66, %f59, %f65, %p22;
	selp.f32 	%f67, %f59, %f66, %p21;
$L__tmp6:
	.loc	1 77 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:77:20
	// begin inline asm
	div.full.f32 %r42, %r14, %r23;
	// end inline asm
	mov.b32 	%f68, %r42;
	.loc	1 78 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:78:20
	// begin inline asm
	div.full.f32 %r45, %r15, %r29;
	// end inline asm
	mov.b32 	%f69, %r45;
$L__tmp7:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p23, %f68, %f69;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p24, %f68, %f68;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f70, %f68, %f69, %p23;
	selp.f32 	%f71, %f68, %f70, %p24;
$L__tmp8:
	.loc	1 80 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:80:20
	// begin inline asm
	div.full.f32 %r48, %r16, %r35;
	// end inline asm
	mov.b32 	%f72, %r48;
$L__tmp9:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p25, %f71, %f72;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p26, %f71, %f71;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f73, %f71, %f72, %p26;
	selp.f32 	%f74, %f71, %f73, %p25;
$L__tmp10:
	.loc	1 82 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:82:20
	// begin inline asm
	div.full.f32 %r51, %r17, %r41;
	// end inline asm
	mov.b32 	%f75, %r51;
$L__tmp11:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.gt.f32 	%p27, %f74, %f75;
	.loc	2 120 21                        // triton_helpers.py:120:21
	setp.nan.f32 	%p28, %f74, %f74;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f76, %f74, %f75, %p28;
	selp.f32 	%f77, %f74, %f76, %p27;
$L__tmp12:
	.loc	1 84 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:84:20
	sub.f32 	%f78, %f68, %f77;
	.loc	1 85 24                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:85:24
	mul.f32 	%f15, %f78, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f14, %f15;
	// end inline asm
	.loc	1 86 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:86:20
	sub.f32 	%f79, %f69, %f77;
	.loc	1 87 24                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:87:24
	mul.f32 	%f17, %f79, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f16, %f17;
	// end inline asm
	.loc	1 88 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:88:20
	add.f32 	%f80, %f14, %f16;
	.loc	1 89 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:89:20
	sub.f32 	%f81, %f72, %f77;
	.loc	1 90 24                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:90:24
	mul.f32 	%f19, %f81, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f18, %f19;
	// end inline asm
	.loc	1 91 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:91:20
	add.f32 	%f82, %f80, %f18;
	.loc	1 92 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:92:20
	sub.f32 	%f83, %f75, %f77;
	.loc	1 93 24                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:93:24
	mul.f32 	%f21, %f83, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f20, %f21;
	// end inline asm
	.loc	1 94 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:94:20
	add.f32 	%f4, %f82, %f20;
	.loc	1 95 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:95:20
	sub.f32 	%f5, %f43, %f67;
	.loc	1 96 24                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:96:24
	mul.f32 	%f23, %f5, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f22, %f23;
	// end inline asm
	.loc	1 97 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:97:20
	sub.f32 	%f6, %f49, %f67;
	.loc	1 98 24                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:98:24
	mul.f32 	%f25, %f6, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f24, %f25;
	// end inline asm
	.loc	1 99 20                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:99:20
	add.f32 	%f84, %f22, %f24;
	.loc	1 100 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:100:20
	sub.f32 	%f7, %f57, %f67;
	.loc	1 101 24                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:101:24
	mul.f32 	%f27, %f7, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f26, %f27;
	// end inline asm
	.loc	1 102 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:102:20
	add.f32 	%f85, %f84, %f26;
	.loc	1 103 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:103:20
	sub.f32 	%f8, %f65, %f67;
	.loc	1 104 24                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:104:24
	mul.f32 	%f29, %f8, 0f3FB8AA3B;
	// begin inline asm
	ex2.approx.f32 %f28, %f29;
	// end inline asm
	.loc	1 105 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:105:20
	add.f32 	%f86, %f85, %f28;
	.loc	1 106 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:106:20
	mov.b32 	%r65, %f4;
	mov.b32 	%r55, %f14;
	// begin inline asm
	div.full.f32 %r54, %r55, %r65;
	// end inline asm
	mov.b32 	%f9, %r54;
	.loc	1 107 24                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:107:24
	setp.lt.f32 	%p29, %f86, 0f00800000;
	mul.f32 	%f87, %f86, 0f4B000000;
	selp.f32 	%f10, %f87, %f86, %p29;
	selp.f32 	%f88, 0fC1B80000, 0f00000000, %p29;
	mov.b32 	%r59, %f10;
	add.s32 	%r60, %r59, -1059760811;
	and.b32  	%r61, %r60, -8388608;
	sub.s32 	%r62, %r59, %r61;
	mov.b32 	%f89, %r62;
	cvt.rn.f32.s32 	%f90, %r61;
	mov.f32 	%f91, 0f34000000;
	fma.rn.ftz.f32 	%f92, %f90, %f91, %f88;
	add.f32 	%f93, %f89, 0fBF800000;
	mov.f32 	%f94, 0f3E1039F6;
	mov.f32 	%f95, 0fBE055027;
	fma.rn.ftz.f32 	%f96, %f95, %f93, %f94;
	mov.f32 	%f97, 0fBDF8CDCC;
	fma.rn.ftz.f32 	%f98, %f96, %f93, %f97;
	mov.f32 	%f99, 0f3E0F2955;
	fma.rn.ftz.f32 	%f100, %f98, %f93, %f99;
	mov.f32 	%f101, 0fBE2AD8B9;
	fma.rn.ftz.f32 	%f102, %f100, %f93, %f101;
	mov.f32 	%f103, 0f3E4CED0B;
	fma.rn.ftz.f32 	%f104, %f102, %f93, %f103;
	mov.f32 	%f105, 0fBE7FFF22;
	fma.rn.ftz.f32 	%f106, %f104, %f93, %f105;
	mov.f32 	%f107, 0f3EAAAA78;
	fma.rn.ftz.f32 	%f108, %f106, %f93, %f107;
	mov.f32 	%f109, 0fBF000000;
	fma.rn.ftz.f32 	%f110, %f108, %f93, %f109;
	mul.f32 	%f111, %f93, %f110;
	fma.rn.ftz.f32 	%f112, %f111, %f93, %f93;
	mov.f32 	%f113, 0f3F317218;
	fma.rn.ftz.f32 	%f143, %f92, %f113, %f112;
	setp.lt.u32 	%p30, %r59, 2139095040;
	@%p30 bra 	$L__BB0_2;
// %bb.1:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:0:24
	mov.f32 	%f114, 0f7F800000;
	fma.rn.ftz.f32 	%f143, %f10, %f114, %f114;
$L__BB0_2:                              // %__nv_logf.exit
	.loc	1 26 34                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:26:34
	and.b32  	%r82, %r1, 31;
	.loc	1 107 24                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:107:24
	setp.eq.f32 	%p35, %f10, 0f00000000;
	selp.f32 	%f115, 0fFF800000, %f143, %p35;
	.loc	1 108 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:108:20
	sub.f32 	%f116, %f5, %f115;
	.loc	1 110 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:110:20
	mov.b32 	%r64, %f16;
	// begin inline asm
	div.full.f32 %r63, %r64, %r65;
	// end inline asm
	mov.b32 	%f117, %r63;
	.loc	1 111 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:111:20
	sub.f32 	%f118, %f6, %f115;
	.loc	1 112 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:112:20
	mul.f32 	%f119, %f117, %f118;
	.loc	1 113 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:113:20
	fma.rn.f32 	%f120, %f9, %f116, %f119;
	.loc	1 114 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:114:20
	mov.b32 	%r67, %f18;
	// begin inline asm
	div.full.f32 %r66, %r67, %r65;
	// end inline asm
	mov.b32 	%f121, %r66;
	.loc	1 115 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:115:20
	sub.f32 	%f122, %f7, %f115;
	.loc	1 117 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:117:20
	fma.rn.f32 	%f123, %f121, %f122, %f120;
	.loc	1 118 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:118:20
	mov.b32 	%r70, %f20;
	// begin inline asm
	div.full.f32 %r69, %r70, %r65;
	// end inline asm
	mov.b32 	%f124, %r69;
	.loc	1 119 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:119:20
	sub.f32 	%f125, %f8, %f115;
	.loc	1 121 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:121:20
	fma.rn.f32 	%f126, %f125, %f124, %f123;
$L__tmp13:
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r83, %f126;
	shfl.sync.bfly.b32	%r84, %r83, 16, 31, -1;
	mov.b32 	%f127, %r84;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f128, %f126, %f127;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r85, %f128;
	shfl.sync.bfly.b32	%r86, %r85, 8, 31, -1;
	mov.b32 	%f129, %r86;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f130, %f128, %f129;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r87, %f130;
	shfl.sync.bfly.b32	%r88, %r87, 4, 31, -1;
	mov.b32 	%f131, %r88;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f132, %f130, %f131;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r89, %f132;
	shfl.sync.bfly.b32	%r90, %r89, 2, 31, -1;
	mov.b32 	%f133, %r90;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f134, %f132, %f133;
	.loc	3 267 36                        // standard.py:267:36
	mov.b32 	%r91, %f134;
	shfl.sync.bfly.b32	%r92, %r91, 1, 31, -1;
	mov.b32 	%f135, %r92;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f136, %f134, %f135;
	.loc	3 267 36                        // standard.py:267:36
	setp.eq.s32 	%p31, %r82, 0;
	shr.u32 	%r93, %r1, 3;
	and.b32  	%r94, %r93, 4;
	mov.u32 	%r95, global_smem;
	add.s32 	%r72, %r95, %r94;
	mov.b32 	%r73, %f136;
	// begin inline asm
	@%p31 st.shared.b32 [ %r72 + 0 ], %r73;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p32, %r1, 2;
	add.s32 	%r75, %r95, %r57;
	// begin inline asm
	@%p32 ld.shared.b32 %r74, [ %r75 + 0 ];
	// end inline asm
	mov.b32 	%f137, %r74;
	shfl.sync.bfly.b32	%r97, %r74, 1, 31, -1;
	mov.b32 	%f138, %r97;
	.loc	3 256 15                        // standard.py:256:15
	add.f32 	%f139, %f137, %f138;
	.loc	3 267 36                        // standard.py:267:36
	and.b32  	%r98, %r1, 1;
	setp.eq.b32 	%p36, %r98, 1;
	not.pred 	%p37, %p36;
	and.pred  	%p33, %p32, %p37;
	mov.b32 	%r77, %f139;
	// begin inline asm
	@%p33 st.shared.b32 [ %r75 + 0 ], %r77;
	// end inline asm
	bar.sync 	0;
$L__tmp14:
	.loc	1 125 20                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:125:20
	ld.shared.u32 	%r79, [global_smem];
	mov.b32 	%r80, 1115684864;
	// begin inline asm
	div.full.f32 %r78, %r79, %r80;
	// end inline asm
	mov.b32 	%f140, %r78;
	mov.f32 	%f141, 0f00000000;
	.loc	1 126 13                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:126:13
	sub.f32 	%f142, %f141, %f140;
	.loc	1 127 4                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:127:4
	bar.sync 	0;
	.loc	1 128 71                        // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:128:71
	and.b32  	%r99, %r1, 63;
	setp.eq.s32 	%p34, %r99, 0;
	mov.b32 	%r81, %f142;
	// begin inline asm
	@%p34 st.global.b32 [ %rd23 + 0 ], { %r81 };
	// end inline asm
	.loc	1 128 4                         // cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py:128:4
	ret;
$L__tmp15:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/mf/cmflxplyme3z2jdejquyxn6bqxoa26mfxvp33zuwqmkgxg24lw2s.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.file	3 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 369                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x16a DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 102
.b8 108
.b8 120
.b8 112
.b8 108
.b8 121
.b8 109
.b8 101
.b8 51
.b8 122
.b8 50
.b8 106
.b8 100
.b8 101
.b8 106
.b8 113
.b8 117
.b8 121
.b8 120
.b8 110
.b8 54
.b8 98
.b8 113
.b8 120
.b8 111
.b8 97
.b8 50
.b8 54
.b8 109
.b8 102
.b8 120
.b8 118
.b8 112
.b8 51
.b8 51
.b8 122
.b8 117
.b8 119
.b8 113
.b8 109
.b8 107
.b8 103
.b8 120
.b8 103
.b8 50
.b8 52
.b8 108
.b8 119
.b8 50
.b8 115
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 102
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x53 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 108
.b8 111
.b8 103
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 95
.b8 115
.b8 111
.b8 102
.b8 116
.b8 109
.b8 97
.b8 120
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 100
.b8 105
.b8 118
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 110
.b8 101
.b8 103
.b8 95
.b8 114
.b8 101
.b8 99
.b8 105
.b8 112
.b8 114
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 48
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xb6:0xbe DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xcb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 62                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xe3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 69                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xfb:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp5                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 76                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x113:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp7                           // DW_AT_low_pc
.b64 $L__tmp8                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 79                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x12b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp9                           // DW_AT_low_pc
.b64 $L__tmp10                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 81                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x143:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp11                          // DW_AT_low_pc
.b64 $L__tmp12                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 83                                  // DW_AT_call_line
.b8 42                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x15b:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp13                          // DW_AT_low_pc
.b64 $L__tmp14                          // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 123                                 // DW_AT_call_line
.b8 26                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
