; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define void @triton_poi_fused_cat_2(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #3, !dbg !10
  %6 = shl i32 %5, 7, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = and i32 %7, 127, !dbg !12
  %9 = or disjoint i32 %6, %8, !dbg !13
  %10 = icmp slt i32 %9, 256, !dbg !14
  %.frozen = freeze i32 %9, !dbg !15
  %11 = sdiv i32 %.frozen, 16, !dbg !15
  %12 = srem i32 %11, 4, !dbg !16
  %13 = mul i32 %11, 16, !dbg !17
  %.decomposed = sub i32 %.frozen, %13, !dbg !17
  %.frozen9 = freeze i32 %9, !dbg !18
  %14 = sdiv i32 %.frozen9, 64, !dbg !18
  %15 = icmp slt i32 %12, 2, !dbg !19
  %16 = mul i32 %14, 64, !dbg !20
  %srem.decomposed = sub i32 %.frozen9, %16, !dbg !20
  %17 = shl nsw i32 %14, 5, !dbg !21
  %18 = add nsw i32 %17, %srem.decomposed, !dbg !22
  %19 = sext i32 %18 to i64, !dbg !23
  %20 = getelementptr float, ptr addrspace(1) %0, i64 %19, !dbg !23
  %21 = and i1 %10, %15, !dbg !24
  %22 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %20, i1 %21, i32 0, i1 %21) #3, !dbg !25
  %23 = icmp sgt i32 %12, 1, !dbg !26
  %24 = shl nsw i32 %12, 4, !dbg !27
  %25 = add nsw i32 %.decomposed, -32, !dbg !27
  %26 = add nsw i32 %25, %17, !dbg !28
  %27 = add nsw i32 %26, %24, !dbg !29
  %28 = sext i32 %27 to i64, !dbg !30
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !30
  %30 = and i1 %10, %23, !dbg !31
  %31 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %30, i32 0, i1 %30) #3, !dbg !32
  %32 = bitcast i32 %31 to float, !dbg !32
  %33 = fcmp ogt float %32, 2.000000e+01, !dbg !33
  %34 = fmul float %32, 0x3FF7154760000000, !dbg !34
  %35 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %34) #3, !dbg !34
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not.i1 = icmp eq i32 %36, 0, !dbg !35
  %37 = tail call float @llvm.nvvm.add.rz.ftz.f(float %35, float 1.000000e+00) #3, !dbg !35
  %38 = tail call float @llvm.nvvm.add.rz.f(float %35, float 1.000000e+00) #3, !dbg !35
  %.01.i2 = select i1 %.not.i1, float %38, float %37, !dbg !35
  %39 = bitcast float %.01.i2 to i32, !dbg !35
  %40 = add i32 %39, -1061158912, !dbg !35
  %41 = and i32 %40, -8388608, !dbg !35
  %42 = bitcast float %35 to i32, !dbg !35
  %43 = sub i32 %42, %41, !dbg !35
  %44 = bitcast i32 %43 to float, !dbg !35
  %45 = sub i32 1082130432, %41, !dbg !35
  %46 = bitcast i32 %45 to float, !dbg !35
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not14.i = icmp eq i32 %47, 0, !dbg !35
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 2.500000e-01, float %46, float -1.000000e+00) #3, !dbg !35
  %49 = tail call float @llvm.nvvm.fma.rn.f(float 2.500000e-01, float %46, float -1.000000e+00) #3, !dbg !35
  %.09.i = select i1 %.not14.i, float %49, float %48, !dbg !35
  %50 = fadd float %.09.i, %44, !dbg !35
  %51 = sitofp i32 %41 to float, !dbg !35
  %52 = fmul float %51, 0x3E80000000000000, !dbg !35
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not15.i = icmp eq i32 %53, 0, !dbg !35
  %54 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0xBFA737EF00000000, float %50, float 0x3FBB000240000000) #3, !dbg !35
  %55 = tail call float @llvm.nvvm.fma.rn.f(float 0xBFA737EF00000000, float %50, float 0x3FBB000240000000) #3, !dbg !35
  %.012.i = select i1 %.not15.i, float %55, float %54, !dbg !35
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not16.i = icmp eq i32 %56, 0, !dbg !35
  %57 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %50, float 0xBFC0EF1C00000000) #3, !dbg !35
  %58 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %50, float 0xBFC0EF1C00000000) #3, !dbg !35
  %.010.i = select i1 %.not16.i, float %58, float %57, !dbg !35
  %59 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not17.i = icmp eq i32 %59, 0, !dbg !35
  %60 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %50, float 0x3FC28C8EA0000000) #3, !dbg !35
  %61 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %50, float 0x3FC28C8EA0000000) #3, !dbg !35
  %.06.i3 = select i1 %.not17.i, float %61, float %60, !dbg !35
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not18.i = icmp eq i32 %62, 0, !dbg !35
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i3, float %50, float 0xBFC54D1BA0000000) #3, !dbg !35
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i3, float %50, float 0xBFC54D1BA0000000) #3, !dbg !35
  %.02.i4 = select i1 %.not18.i, float %64, float %63, !dbg !35
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not19.i = icmp eq i32 %65, 0, !dbg !35
  %66 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i4, float %50, float 0x3FC995F3C0000000) #3, !dbg !35
  %67 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i4, float %50, float 0x3FC995F3C0000000) #3, !dbg !35
  %.0.i5 = select i1 %.not19.i, float %67, float %66, !dbg !35
  %68 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not20.i = icmp eq i32 %68, 0, !dbg !35
  %69 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i5, float %50, float 0xBFD0000840000000) #3, !dbg !35
  %70 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i5, float %50, float 0xBFD0000840000000) #3, !dbg !35
  %.011.i = select i1 %.not20.i, float %70, float %69, !dbg !35
  %71 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not21.i = icmp eq i32 %71, 0, !dbg !35
  %72 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %50, float 0x3FD5555CC0000000) #3, !dbg !35
  %73 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %50, float 0x3FD5555CC0000000) #3, !dbg !35
  %.08.i = select i1 %.not21.i, float %73, float %72, !dbg !35
  %74 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not22.i = icmp eq i32 %74, 0, !dbg !35
  %75 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.08.i, float %50, float -5.000000e-01) #3, !dbg !35
  %76 = tail call float @llvm.nvvm.fma.rn.f(float %.08.i, float %50, float -5.000000e-01) #3, !dbg !35
  %.07.i = select i1 %.not22.i, float %76, float %75, !dbg !35
  %77 = fmul float %50, %.07.i, !dbg !35
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not23.i = icmp eq i32 %78, 0, !dbg !35
  %79 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %77, float %50, float %50) #3, !dbg !35
  %80 = tail call float @llvm.nvvm.fma.rn.f(float %77, float %50, float %50) #3, !dbg !35
  %.05.i6 = select i1 %.not23.i, float %80, float %79, !dbg !35
  %81 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not24.i = icmp eq i32 %81, 0, !dbg !35
  %82 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %52, float 0x3FE62E4300000000, float %.05.i6) #3, !dbg !35
  %83 = tail call float @llvm.nvvm.fma.rn.f(float %52, float 0x3FE62E4300000000, float %.05.i6) #3, !dbg !35
  %.04.i7 = select i1 %.not24.i, float %83, float %82, !dbg !35
  %84 = icmp ugt i32 %42, 2139095039, !dbg !35
  br i1 %84, label %85, label %__nv_log1pf.exit, !dbg !35

85:                                               ; preds = %4
  %86 = icmp sgt i32 %42, -1082130432, !dbg !35
  br i1 %86, label %__nv_fmaf_rn.exit.i, label %90, !dbg !35

__nv_fmaf_rn.exit.i:                              ; preds = %85
  %87 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !35
  %.not25.i = icmp eq i32 %87, 0, !dbg !35
  %88 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %35, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !35
  %89 = tail call float @llvm.nvvm.fma.rn.f(float %35, float 0x7FF0000000000000, float 0x7FF0000000000000) #3, !dbg !35
  %.03.i8 = select i1 %.not25.i, float %89, float %88, !dbg !35
  br label %90, !dbg !35

90:                                               ; preds = %__nv_fmaf_rn.exit.i, %85
  %r.0.i = phi float [ %.03.i8, %__nv_fmaf_rn.exit.i ], [ %.04.i7, %85 ], !dbg !35
  %91 = fcmp oeq float %35, 0.000000e+00, !dbg !35
  %r.1.i = select i1 %91, float -0.000000e+00, float %r.0.i, !dbg !35
  br label %__nv_log1pf.exit, !dbg !35

__nv_log1pf.exit:                                 ; preds = %4, %90
  %r.2.i = phi float [ %r.1.i, %90 ], [ %.04.i7, %4 ], !dbg !35
  %92 = select i1 %33, float %32, float %r.2.i, !dbg !36
  %93 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not.i = icmp eq i32 %93, 0, !dbg !37
  %94 = tail call float @llvm.nvvm.fabs.ftz.f(float %92) #3, !dbg !37
  %95 = tail call float @llvm.nvvm.fabs.f(float %92) #3, !dbg !37
  %.01.i = select i1 %.not.i, float %95, float %94, !dbg !37
  %96 = fcmp ult float %.01.i, 0x3FE3333340000000, !dbg !37
  br i1 %96, label %__internal_fmad.exit3.i, label %__internal_fmad.exit1.i, !dbg !37

__internal_fmad.exit1.i:                          ; preds = %__nv_log1pf.exit
  %97 = fmul float %.01.i, 0x4007154760000000, !dbg !37
  %98 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %97) #3, !dbg !37
  %99 = fadd float %98, 1.000000e+00, !dbg !37
  %100 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %99) #4, !dbg !37, !srcloc !38
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not6.i = icmp eq i32 %101, 0, !dbg !37
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %100, float -2.000000e+00, float 1.000000e+00) #3, !dbg !37
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %100, float -2.000000e+00, float 1.000000e+00) #3, !dbg !37
  %.03.i = select i1 %.not6.i, float %103, float %102, !dbg !37
  %104 = fcmp oge float %.01.i, 0x4022059680000000, !dbg !37
  %s.0.i = select i1 %104, float 1.000000e+00, float %.03.i, !dbg !37
  %105 = bitcast float %s.0.i to i32, !dbg !37
  %106 = bitcast float %92 to i32, !dbg !37
  %107 = and i32 %106, -2147483648, !dbg !37
  %108 = or i32 %107, %105, !dbg !37
  %109 = bitcast i32 %108 to float, !dbg !37
  br label %__nv_tanhf.exit, !dbg !37

__internal_fmad.exit3.i:                          ; preds = %__nv_log1pf.exit
  %110 = fmul float %92, %92, !dbg !37
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not1.i = icmp eq i32 %111, 0, !dbg !37
  %112 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F901E1040000000, float %110, float 0xBFAAC795C0000000) #3, !dbg !37
  %113 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F901E1040000000, float %110, float 0xBFAAC795C0000000) #3, !dbg !37
  %.06.i = select i1 %.not1.i, float %113, float %112, !dbg !37
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not2.i = icmp eq i32 %114, 0, !dbg !37
  %115 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.06.i, float %110, float 0x3FC10B2820000000) #3, !dbg !37
  %116 = tail call float @llvm.nvvm.fma.rn.f(float %.06.i, float %110, float 0x3FC10B2820000000) #3, !dbg !37
  %.05.i = select i1 %.not2.i, float %116, float %115, !dbg !37
  %117 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not3.i = icmp eq i32 %117, 0, !dbg !37
  %118 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %110, float 0xBFD5553DA0000000) #3, !dbg !37
  %119 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %110, float 0xBFD5553DA0000000) #3, !dbg !37
  %.0.i = select i1 %.not3.i, float %119, float %118, !dbg !37
  %120 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not4.i = icmp eq i32 %120, 0, !dbg !37
  %121 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i, float %110, float 0.000000e+00) #3, !dbg !37
  %122 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i, float %110, float 0.000000e+00) #3, !dbg !37
  %.04.i = select i1 %.not4.i, float %122, float %121, !dbg !37
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #3, !dbg !37
  %.not5.i = icmp eq i32 %123, 0, !dbg !37
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.04.i, float %92, float %92) #3, !dbg !37
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %.04.i, float %92, float %92) #3, !dbg !37
  %.02.i = select i1 %.not5.i, float %125, float %124, !dbg !37
  br label %__nv_tanhf.exit, !dbg !37

__nv_tanhf.exit:                                  ; preds = %__internal_fmad.exit1.i, %__internal_fmad.exit3.i
  %s.1.i = phi float [ %109, %__internal_fmad.exit1.i ], [ %.02.i, %__internal_fmad.exit3.i ], !dbg !37
  %126 = fmul float %s.1.i, %32, !dbg !39
  %127 = sext i32 %9 to i64, !dbg !40
  %128 = getelementptr float, ptr addrspace(1) %2, i64 %127, !dbg !40
  %129 = bitcast float %126 to i32, !dbg !41
  %130 = select i1 %15, i32 %22, i32 %129, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %130, ptr addrspace(1) %128, i1 %10) #3, !dbg !41
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rz.f(float, float) #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nounwind }
attributes #4 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "copmi5nxskvuuu6tl3iapiu5fhovqkzmbiwil3dbpqhy7r5uy4i3.py", directory: "inductor_cache/op")
!4 = !{ptr @triton_poi_fused_cat_2, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_2, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_2", linkageName: "triton_poi_fused_cat_2", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 27, scope: !7)
!17 = !DILocation(line: 25, column: 19, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 32, column: 18, scope: !7)
!20 = !DILocation(line: 33, column: 35, scope: !7)
!21 = !DILocation(line: 33, column: 48, scope: !7)
!22 = !DILocation(line: 33, column: 45, scope: !7)
!23 = !DILocation(line: 33, column: 30, scope: !7)
!24 = !DILocation(line: 33, column: 60, scope: !7)
!25 = !DILocation(line: 33, column: 53, scope: !7)
!26 = !DILocation(line: 34, column: 19, scope: !7)
!27 = !DILocation(line: 37, column: 39, scope: !7)
!28 = !DILocation(line: 37, column: 35, scope: !7)
!29 = !DILocation(line: 37, column: 52, scope: !7)
!30 = !DILocation(line: 37, column: 30, scope: !7)
!31 = !DILocation(line: 37, column: 67, scope: !7)
!32 = !DILocation(line: 37, column: 60, scope: !7)
!33 = !DILocation(line: 39, column: 19, scope: !7)
!34 = !DILocation(line: 40, column: 24, scope: !7)
!35 = !DILocation(line: 41, column: 28, scope: !7)
!36 = !DILocation(line: 42, column: 34, scope: !7)
!37 = !DILocation(line: 43, column: 27, scope: !7)
!38 = !{i32 21046}
!39 = !DILocation(line: 44, column: 19, scope: !7)
!40 = !DILocation(line: 48, column: 25, scope: !7)
!41 = !DILocation(line: 48, column: 37, scope: !7)
!42 = !DILocation(line: 47, column: 33, scope: !7)
!43 = !DILocation(line: 48, column: 4, scope: !7)
