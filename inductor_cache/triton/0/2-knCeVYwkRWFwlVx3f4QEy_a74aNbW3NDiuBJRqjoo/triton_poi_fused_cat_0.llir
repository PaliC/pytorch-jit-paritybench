; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %6 = shl i32 %5, 8, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 254, !dbg !12
  %10 = or disjoint i32 %6, %9, !dbg !13
  %11 = sdiv i32 %10, 256, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %12 = sdiv i32 %.frozen, 12288, !dbg !15
  %13 = mul i32 %12, 12288, !dbg !16
  %srem.decomposed = sub i32 %.frozen, %13, !dbg !16
  %14 = mul nsw i32 %12, 6144, !dbg !17
  %15 = add nsw i32 %14, %srem.decomposed, !dbg !18
  %16 = sext i32 %15 to i64, !dbg !19
  %17 = getelementptr float, ptr addrspace(1) %0, i64 %16, !dbg !19
  %18 = insertelement <2 x i32> poison, i32 %10, i64 0, !dbg !20
  %19 = insertelement <2 x i32> %18, i32 %11, i64 1, !dbg !20
  %20 = srem <2 x i32> %19, <i32 256, i32 48>, !dbg !20
  %21 = extractelement <2 x i32> %20, i64 1, !dbg !21
  %22 = icmp slt i32 %21, 24, !dbg !22
  %23 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %17, i1 %22, i32 0, i1 %22, i32 0, i1 %22) #1, !dbg !23
  %24 = extractvalue { i32, i32 } %23, 0, !dbg !23
  %25 = extractvalue { i32, i32 } %23, 1, !dbg !23
  %26 = bitcast i32 %24 to float, !dbg !23
  %27 = bitcast i32 %25 to float, !dbg !23
  %28 = sext i32 %21 to i64, !dbg !24
  %29 = getelementptr float, ptr addrspace(1) %1, i64 %28, !dbg !24
  %30 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %22, i32 0, i1 %22) #1, !dbg !25
  %31 = bitcast i32 %30 to float, !dbg !25
  %32 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %29, i1 %22, i32 0, i1 %22) #1, !dbg !25
  %33 = bitcast i32 %32 to float, !dbg !25
  %34 = fadd float %26, %31, !dbg !26
  %35 = fadd float %27, %33, !dbg !26
  %36 = fcmp olt float %34, 0.000000e+00, !dbg !27
  %37 = fcmp olt float %35, 0.000000e+00, !dbg !27
  %38 = select i1 %36, float 0.000000e+00, float %34, !dbg !31
  %39 = select i1 %37, float 0.000000e+00, float %35, !dbg !31
  %40 = icmp sgt i32 %21, 23, !dbg !21
  %41 = insertelement <2 x i32> <i32 poison, i32 -24>, i32 %14, i64 0, !dbg !32
  %42 = add nsw <2 x i32> %41, %20, !dbg !32
  %43 = extractelement <2 x i32> %42, i64 1, !dbg !33
  %44 = shl nsw i32 %43, 8, !dbg !33
  %45 = extractelement <2 x i32> %42, i64 0, !dbg !34
  %46 = add nsw i32 %45, %44, !dbg !34
  %47 = sext i32 %46 to i64, !dbg !35
  %48 = getelementptr float, ptr addrspace(1) %0, i64 %47, !dbg !35
  %49 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];\0A\09@!$5 mov.u32 $0, $4;\0A\09@!$7 mov.u32 $1, $6;", "=r,=r,l,b,r,b,r,b"(ptr addrspace(1) %48, i1 %40, i32 0, i1 %40, i32 0, i1 %40) #1, !dbg !36
  %50 = extractvalue { i32, i32 } %49, 0, !dbg !36
  %51 = extractvalue { i32, i32 } %49, 1, !dbg !36
  %52 = bitcast i32 %50 to float, !dbg !36
  %53 = bitcast i32 %51 to float, !dbg !36
  %54 = sext i32 %43 to i64, !dbg !37
  %55 = getelementptr float, ptr addrspace(1) %1, i64 %54, !dbg !37
  %56 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %40, i32 0, i1 %40) #1, !dbg !38
  %57 = bitcast i32 %56 to float, !dbg !38
  %58 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %55, i1 %40, i32 0, i1 %40) #1, !dbg !38
  %59 = bitcast i32 %58 to float, !dbg !38
  %60 = fadd float %52, %57, !dbg !39
  %61 = fadd float %53, %59, !dbg !39
  %62 = fsub float 0.000000e+00, %60, !dbg !40
  %63 = fsub float 0.000000e+00, %61, !dbg !40
  %64 = fcmp olt float %62, 0.000000e+00, !dbg !41
  %65 = fcmp olt float %63, 0.000000e+00, !dbg !41
  %66 = select i1 %64, float 0.000000e+00, float %62, !dbg !43
  %67 = select i1 %65, float 0.000000e+00, float %63, !dbg !43
  %68 = select i1 %22, float %38, float %66, !dbg !44
  %69 = select i1 %22, float %39, float %67, !dbg !44
  %70 = sext i32 %10 to i64, !dbg !45
  %71 = getelementptr float, ptr addrspace(1) %2, i64 %70, !dbg !45
  %72 = bitcast float %68 to i32, !dbg !46
  %73 = bitcast float %69 to i32, !dbg !46
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %72, i32 %73, ptr addrspace(1) %71, i1 true) #1, !dbg !46
  ret void, !dbg !47
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cyez4ll3anhtseem625hkfyscursodxdziwwbunxpcuz6hbj55mt.py", directory: "inductor_cache/ye")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 24, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 19, scope: !7)
!16 = !DILocation(line: 33, column: 35, scope: !7)
!17 = !DILocation(line: 33, column: 51, scope: !7)
!18 = !DILocation(line: 33, column: 46, scope: !7)
!19 = !DILocation(line: 33, column: 30, scope: !7)
!20 = !DILocation(line: 25, column: 19, scope: !7)
!21 = !DILocation(line: 40, column: 20, scope: !7)
!22 = !DILocation(line: 32, column: 18, scope: !7)
!23 = !DILocation(line: 33, column: 56, scope: !7)
!24 = !DILocation(line: 34, column: 30, scope: !7)
!25 = !DILocation(line: 34, column: 35, scope: !7)
!26 = !DILocation(line: 35, column: 18, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !30)
!28 = distinct !DILexicalBlockFile(scope: !7, file: !29, discriminator: 0)
!29 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!30 = !DILocation(line: 37, column: 40, scope: !7)
!31 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !30)
!32 = !DILocation(line: 43, column: 36, scope: !7)
!33 = !DILocation(line: 43, column: 41, scope: !7)
!34 = !DILocation(line: 43, column: 55, scope: !7)
!35 = !DILocation(line: 43, column: 31, scope: !7)
!36 = !DILocation(line: 43, column: 65, scope: !7)
!37 = !DILocation(line: 44, column: 31, scope: !7)
!38 = !DILocation(line: 44, column: 44, scope: !7)
!39 = !DILocation(line: 45, column: 20, scope: !7)
!40 = !DILocation(line: 46, column: 13, scope: !7)
!41 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !42)
!42 = !DILocation(line: 48, column: 42, scope: !7)
!43 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !42)
!44 = !DILocation(line: 0, scope: !7)
!45 = !DILocation(line: 52, column: 25, scope: !7)
!46 = !DILocation(line: 52, column: 37, scope: !7)
!47 = !DILocation(line: 52, column: 4, scope: !7)
