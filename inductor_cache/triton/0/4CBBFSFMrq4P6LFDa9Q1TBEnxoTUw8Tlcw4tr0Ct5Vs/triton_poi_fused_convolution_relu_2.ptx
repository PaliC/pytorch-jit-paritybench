//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_relu_2 // -- Begin function triton_poi_fused_convolution_relu_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_relu_2
.visible .entry triton_poi_fused_convolution_relu_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_relu_2_param_3,
	.param .u32 triton_poi_fused_convolution_relu_2_param_4,
	.param .u32 triton_poi_fused_convolution_relu_2_param_5
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<24>;
	.reg .b32 	%r<107>;
	.reg .f32 	%f<29>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:19:0

// %bb.0:
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_relu_2_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_relu_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:22:33
	shl.b32 	%r47, %r1, 5;
	ld.param.u64 	%rd10, [triton_poi_fused_convolution_relu_2_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_convolution_relu_2_param_3];
	.loc	1 23 44                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:23:44
	mov.u32 	%r48, %tid.x;
	shl.b32 	%r49, %r48, 2;
	and.b32  	%r50, %r49, 28;
	bfe.u32 	%r51, %r48, 3, 4;
	or.b32  	%r52, %r51, 16;
	.loc	1 23 23                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:23:23
	or.b32  	%r53, %r47, %r50;
	or.b32  	%r54, %r47, %r51;
	or.b32  	%r55, %r47, %r52;
	.loc	1 24 21                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:24:21
	setp.lt.s32 	%p1, %r53, 256;
	setp.lt.s32 	%p12, %r54, 256;
	setp.lt.s32 	%p13, %r55, 256;
	.loc	1 25 28                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:25:33
	shl.b32 	%r56, %r2, 5;
	.loc	1 26 23                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:26:23
	or.b32  	%r57, %r56, %r51;
	or.b32  	%r58, %r56, %r52;
	or.b32  	%r59, %r56, %r50;
	.loc	1 30 19                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:30:19
	shr.s32 	%r61, %r53, 31;
	shr.u32 	%r62, %r61, 26;
	add.s32 	%r63, %r53, %r62;
	.loc	1 29 19                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:29:19
	and.b32  	%r64, %r63, -64;
	sub.s32 	%r65, %r53, %r64;
	.loc	1 32 38                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:32:38
	shl.b32 	%r66, %r57, 6;
	shl.b32 	%r67, %r58, 6;
	.loc	1 32 50                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:32:50
	shl.b32 	%r68, %r63, 12;
	and.b32  	%r69, %r68, -262144;
	.loc	1 32 35                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:32:35
	add.s32 	%r70, %r69, %r65;
	.loc	1 32 43                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:32:43
	add.s32 	%r71, %r70, %r66;
	add.s32 	%r72, %r70, %r67;
	.loc	1 32 30                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:32:30
	mul.wide.s32 	%rd12, %r71, 4;
	add.s64 	%rd1, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r72, 4;
	add.s64 	%rd2, %rd8, %rd13;
	.loc	1 32 55                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:32:55
	// begin inline asm
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r3, %r4, %r5, %r6 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r7, %r8, %r9, %r10 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 33 30                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:33:30
	mul.wide.s32 	%rd14, %r65, 4;
	add.s64 	%rd3, %rd9, %rd14;
	.loc	1 33 35                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:33:35
	// begin inline asm
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r11, %r12, %r13, %r14 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 32 55                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:32:55
	mov.b32 	%f1, %r10;
	mov.b32 	%f2, %r9;
	mov.b32 	%f3, %r8;
	mov.b32 	%f4, %r7;
	mov.b32 	%f5, %r6;
	mov.b32 	%f6, %r5;
	mov.b32 	%f7, %r4;
	mov.b32 	%f8, %r3;
	.loc	1 33 35                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:33:35
	mov.b32 	%f9, %r14;
	mov.b32 	%f10, %r13;
	mov.b32 	%f11, %r12;
	mov.b32 	%f12, %r11;
	.loc	1 34 18                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:34:18
	add.f32 	%f13, %f12, %f8;
	add.f32 	%f14, %f11, %f7;
	add.f32 	%f15, %f10, %f6;
	add.f32 	%f16, %f9, %f5;
	add.f32 	%f17, %f12, %f4;
	add.f32 	%f18, %f11, %f3;
	add.f32 	%f19, %f10, %f2;
	add.f32 	%f20, %f9, %f1;
$L__tmp1:
	.loc	2 118 15                        // triton_helpers.py:118:15
	setp.lt.f32 	%p16, %f20, 0f00000000;
	setp.lt.f32 	%p17, %f19, 0f00000000;
	setp.lt.f32 	%p18, %f18, 0f00000000;
	setp.lt.f32 	%p19, %f17, 0f00000000;
	setp.lt.f32 	%p20, %f16, 0f00000000;
	setp.lt.f32 	%p21, %f15, 0f00000000;
	setp.lt.f32 	%p22, %f14, 0f00000000;
	setp.lt.f32 	%p23, %f13, 0f00000000;
	.loc	2 121 29                        // triton_helpers.py:121:29
	selp.f32 	%f21, 0f00000000, %f13, %p23;
	selp.f32 	%f22, 0f00000000, %f14, %p22;
	selp.f32 	%f23, 0f00000000, %f15, %p21;
	selp.f32 	%f24, 0f00000000, %f16, %p20;
	selp.f32 	%f25, 0f00000000, %f17, %p19;
	selp.f32 	%f26, 0f00000000, %f18, %p18;
	selp.f32 	%f27, 0f00000000, %f19, %p17;
	selp.f32 	%f28, 0f00000000, %f20, %p16;
$L__tmp2:
	.loc	1 37 35                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:37:35
	shl.b32 	%r73, %r54, 12;
	shl.b32 	%r74, %r55, 12;
	.loc	1 37 30                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:37:30
	add.s32 	%r75, %r59, %r73;
	add.s32 	%r76, %r59, %r74;
	.loc	1 37 25                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:37:25
	mul.wide.s32 	%rd15, %r75, 4;
	add.s64 	%rd4, %rd10, %rd15;
	mul.wide.s32 	%rd16, %r76, 4;
	add.s64 	%rd5, %rd10, %rd16;
	.loc	1 37 46                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:37:46
	shl.b32 	%r77, %r48, 7;
	and.b32  	%r78, %r77, 896;
	or.b32  	%r79, %r78, %r51;
	and.b32  	%r80, %r49, 508;
	shr.u32 	%r81, %r78, 3;
	mov.u32 	%r82, global_smem;
	add.s32 	%r83, %r82, %r81;
	shl.b32 	%r84, %r79, 2;
	add.s32 	%r15, %r83, %r84;
	mov.b32 	%r16, %f21;
	mov.pred 	%p4, -1;
	// begin inline asm
	@%p4 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r85, %r78, 32;
	shr.u32 	%r86, %r85, 3;
	add.s32 	%r87, %r82, %r86;
	add.s32 	%r88, %r87, %r84;
	add.s32 	%r17, %r88, 128;
	mov.b32 	%r18, %f22;
	// begin inline asm
	@%p4 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	or.b32  	%r89, %r78, 64;
	shr.u32 	%r90, %r89, 3;
	add.s32 	%r91, %r82, %r90;
	add.s32 	%r92, %r91, %r84;
	add.s32 	%r19, %r92, 256;
	mov.b32 	%r20, %f23;
	// begin inline asm
	@%p4 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	or.b32  	%r93, %r78, 96;
	shr.u32 	%r94, %r93, 3;
	add.s32 	%r95, %r82, %r94;
	add.s32 	%r96, %r95, %r84;
	add.s32 	%r21, %r96, 384;
	mov.b32 	%r22, %f24;
	// begin inline asm
	@%p4 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r15, 64;
	mov.b32 	%r24, %f25;
	// begin inline asm
	@%p4 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r88, 192;
	mov.b32 	%r26, %f26;
	// begin inline asm
	@%p4 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	add.s32 	%r27, %r92, 320;
	mov.b32 	%r28, %f27;
	// begin inline asm
	@%p4 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	add.s32 	%r29, %r96, 448;
	mov.b32 	%r30, %f28;
	// begin inline asm
	@%p4 st.shared.b32 [ %r29 + 0 ], %r30;
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r97, %r48, 1;
	and.b32  	%r98, %r97, 60;
	add.s32 	%r99, %r82, %r98;
	shl.b32 	%r100, %r80, 2;
	add.s32 	%r101, %r99, %r100;
	ld.shared.u32 	%r31, [%r101];
	ld.shared.u32 	%r32, [%r101+4];
	ld.shared.u32 	%r33, [%r101+8];
	ld.shared.u32 	%r34, [%r101+12];
	or.b32  	%r102, %r80, 512;
	shr.u32 	%r103, %r102, 3;
	and.b32  	%r104, %r103, 124;
	add.s32 	%r105, %r82, %r104;
	add.s32 	%r106, %r105, %r100;
	ld.shared.u32 	%r35, [%r106+2048];
	ld.shared.u32 	%r36, [%r106+2052];
	ld.shared.u32 	%r37, [%r106+2056];
	ld.shared.u32 	%r38, [%r106+2060];
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	// begin inline asm
	@%p13 st.global.v4.b32 [ %rd5 + 0 ], { %r35, %r36, %r37, %r38 };
	// end inline asm
	.loc	1 38 25                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:38:25
	add.s64 	%rd6, %rd11, %rd12;
	add.s64 	%rd7, %rd11, %rd13;
	.loc	1 38 56                         // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:38:56
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd6 + 0 ], { %r16, %r18, %r20, %r22 };
	// end inline asm
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd7 + 0 ], { %r24, %r26, %r28, %r30 };
	// end inline asm
	.loc	1 38 4                          // cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py:38:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/nh/cnhbubmay6gysu5sj3tgcerevn2veamzbwo52ado56uwax2c7z3n.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 180                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xad DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 110
.b8 104
.b8 98
.b8 117
.b8 98
.b8 109
.b8 97
.b8 121
.b8 54
.b8 103
.b8 121
.b8 115
.b8 117
.b8 53
.b8 115
.b8 106
.b8 51
.b8 116
.b8 103
.b8 99
.b8 101
.b8 114
.b8 101
.b8 118
.b8 110
.b8 50
.b8 118
.b8 101
.b8 97
.b8 109
.b8 122
.b8 98
.b8 119
.b8 111
.b8 53
.b8 50
.b8 97
.b8 100
.b8 111
.b8 53
.b8 54
.b8 117
.b8 119
.b8 97
.b8 120
.b8 50
.b8 99
.b8 55
.b8 122
.b8 51
.b8 110
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 110
.b8 104
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x26 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 111
.b8 105
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 99
.b8 111
.b8 110
.b8 118
.b8 111
.b8 108
.b8 117
.b8 116
.b8 105
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x89:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x9e:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 36                                  // DW_AT_call_line
.b8 40                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
