; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i109 = alloca [7 x i32], align 4
  %result.i.i.i.i56 = alloca [7 x i32], align 4
  %result.i.i.i.i1 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #4, !dbg !10
  %5 = shl i32 %4, 6, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = shl i32 %6, 1, !dbg !12
  %8 = and i32 %7, 2, !dbg !12
  %9 = and i32 %7, 62, !dbg !12
  %10 = or disjoint i32 %5, %9, !dbg !13
  %11 = or disjoint i32 %8, %5, !dbg !13
  %12 = or disjoint i32 %11, 1, !dbg !13
  %13 = icmp slt i32 %10, 64, !dbg !14
  %.frozen = freeze i32 %10, !dbg !15
  %14 = sdiv i32 %.frozen, 4, !dbg !15
  %15 = mul i32 %14, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %15, !dbg !16
  %16 = srem i32 %12, 4, !dbg !16
  %17 = icmp slt i32 %.decomposed, 2, !dbg !17
  %18 = sext i32 %14 to i64, !dbg !18
  %19 = getelementptr float, ptr addrspace(1) %0, i64 %18, !dbg !18
  %20 = and i1 %13, %17, !dbg !19
  %21 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %20, i32 0, i1 %20) #4, !dbg !20
  %22 = bitcast i32 %21 to float, !dbg !20
  %23 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %20, i32 0, i1 %20) #4, !dbg !20
  %24 = bitcast i32 %23 to float, !dbg !20
  %25 = sitofp i32 %.decomposed to float, !dbg !21
  %26 = sitofp i32 %16 to float, !dbg !21
  %27 = fmul float %25, 0xC0226BB1C0000000, !dbg !22
  %28 = fmul float %26, 0xC0226BB1C0000000, !dbg !22
  %29 = fmul float %27, 0x3FF7154760000000, !dbg !23
  %30 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %29) #4, !dbg !23
  %31 = fmul float %28, 0x3FF7154760000000, !dbg !23
  %32 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %31) #4, !dbg !23
  %33 = fmul float %30, %22, !dbg !24
  %34 = fmul float %32, %24, !dbg !24
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !25
  %35 = fmul float %33, 0x3FE45F3060000000, !dbg !25
  %36 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i = icmp eq i32 %36, 0, !dbg !25
  %37 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %35) #4, !dbg !25
  %38 = tail call i32 @llvm.nvvm.f2i.rn(float %35) #4, !dbg !25
  %.01.i = select i1 %.not.i, i32 %38, i32 %37, !dbg !25
  %39 = sitofp i32 %.01.i to float, !dbg !25
  %40 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i = icmp eq i32 %40, 0, !dbg !25
  %41 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0xBFF921FB40000000, float %33) #4, !dbg !25
  %42 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0xBFF921FB40000000, float %33) #4, !dbg !25
  %.02.i = select i1 %.not15.i, float %42, float %41, !dbg !25
  %43 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i = icmp eq i32 %43, 0, !dbg !25
  %44 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0xBE74442D00000000, float %.02.i) #4, !dbg !25
  %45 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0xBE74442D00000000, float %.02.i) #4, !dbg !25
  %.03.i = select i1 %.not16.i, float %45, float %44, !dbg !25
  %46 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i = icmp eq i32 %46, 0, !dbg !25
  %47 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %39, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !25
  %48 = tail call float @llvm.nvvm.fma.rn.f(float %39, float 0xBCF84698A0000000, float %.03.i) #4, !dbg !25
  %.04.i = select i1 %.not17.i, float %48, float %47, !dbg !25
  %49 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i = icmp eq i32 %49, 0, !dbg !25
  %50 = tail call float @llvm.nvvm.fabs.ftz.f(float %33) #4, !dbg !25
  %51 = tail call float @llvm.nvvm.fabs.f(float %33) #4, !dbg !25
  %.06.i = select i1 %.not18.i, float %51, float %50, !dbg !25
  %52 = fcmp ult float %.06.i, 1.056150e+05, !dbg !25
  br i1 %52, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !25

__nv_isinff.exit.i.i.i:                           ; preds = %3
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i = icmp eq i32 %53, 0, !dbg !25
  %.07.i = select i1 %.not19.i, float %51, float %50, !dbg !25
  %54 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !25
  br i1 %54, label %__nv_fmul_rn.exit.i.i.i, label %58, !dbg !25

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %55 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not27.i = icmp eq i32 %55, 0, !dbg !25
  %56 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %33, float 0.000000e+00) #4, !dbg !25
  %57 = tail call float @llvm.nvvm.mul.rn.f(float %33, float 0.000000e+00) #4, !dbg !25
  %.08.i = select i1 %.not27.i, float %57, float %56, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !25

58:                                               ; preds = %__nv_isinff.exit.i.i.i
  %59 = bitcast float %33 to i32, !dbg !25
  %60 = lshr i32 %59, 23, !dbg !25
  %61 = and i32 %60, 224, !dbg !25
  %62 = add nsw i32 %61, -128, !dbg !25
  %63 = shl i32 %59, 8, !dbg !25
  %64 = or i32 %63, -2147483648, !dbg !25
  %65 = lshr exact i32 %62, 5, !dbg !25
  br label %66, !dbg !25

66:                                               ; preds = %58, %66
  %indvars.iv = phi i64 [ 0, %58 ], [ %indvars.iv.next, %66 ]
  %hi.i.i.i.0.i164 = phi i32 [ 0, %58 ], [ %71, %66 ]
  %67 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !25
  %68 = load i32, ptr addrspace(1) %67, align 4, !dbg !25
  %69 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %68, i32 %64, i32 %hi.i.i.i.0.i164) #5, !dbg !25, !srcloc !26
  %70 = extractvalue { i32, i32 } %69, 0, !dbg !25
  %71 = extractvalue { i32, i32 } %69, 1, !dbg !25
  %72 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !25
  store i32 %70, ptr %72, align 4, !dbg !25
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !25
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !25
  br i1 %exitcond.not, label %73, label %66, !dbg !25, !llvm.loop !27

73:                                               ; preds = %66
  %74 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !25
  store i32 %71, ptr %74, align 4, !dbg !25
  %75 = and i32 %60, 31, !dbg !25
  %76 = sub nsw i32 6, %65, !dbg !25
  %77 = sext i32 %76 to i64, !dbg !25
  %78 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %77, !dbg !25
  %79 = load i32, ptr %78, align 4, !dbg !25
  %80 = sub nsw i32 5, %65, !dbg !25
  %81 = sext i32 %80 to i64, !dbg !25
  %82 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %81, !dbg !25
  %83 = load i32, ptr %82, align 4, !dbg !25
  %.not20.i = icmp eq i32 %75, 0, !dbg !25
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %84, !dbg !25

84:                                               ; preds = %73
  %85 = sub nsw i32 4, %65, !dbg !25
  %86 = sub nuw nsw i32 32, %75, !dbg !25
  %87 = shl i32 %79, %75, !dbg !25
  %88 = lshr i32 %83, %86, !dbg !25
  %89 = add i32 %88, %87, !dbg !25
  %90 = shl i32 %83, %75, !dbg !25
  %91 = sext i32 %85 to i64, !dbg !25
  %92 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %91, !dbg !25
  %93 = load i32, ptr %92, align 4, !dbg !25
  %94 = lshr i32 %93, %86, !dbg !25
  %95 = add i32 %94, %90, !dbg !25
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !25

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %84, %73
  %hi.i.i.i.1.i = phi i32 [ %89, %84 ], [ %79, %73 ], !dbg !25
  %lo.i.i.i.0.i = phi i32 [ %95, %84 ], [ %83, %73 ], !dbg !25
  %96 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !25
  %97 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !25
  %98 = shl i32 %lo.i.i.i.0.i, 2, !dbg !25
  %99 = lshr i32 %97, 31, !dbg !25
  %100 = add nuw nsw i32 %99, %96, !dbg !25
  %101 = sub nsw i32 0, %100, !dbg !25
  %.not2123.i = icmp slt i32 %59, 0, !dbg !25
  %spec.select.i = select i1 %.not2123.i, i32 %101, i32 %100, !dbg !25
  %102 = xor i32 %97, %59, !dbg !25
  %.lobit.i = ashr i32 %97, 31, !dbg !25
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %97, !dbg !25
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %98, !dbg !25
  %103 = zext i32 %hi.i.i.i.2.i to i64, !dbg !25
  %104 = shl nuw i64 %103, 32, !dbg !25
  %105 = zext i32 %lo.i.i.i.1.i to i64, !dbg !25
  %106 = or disjoint i64 %104, %105, !dbg !25
  %107 = sitofp i64 %106 to double, !dbg !25
  %108 = fmul double %107, 0x3BF921FB54442D19, !dbg !25
  %109 = fptrunc double %108 to float, !dbg !25
  %110 = fneg float %109, !dbg !25
  %.not2526.i = icmp slt i32 %102, 0, !dbg !25
  %r.i.i.i.0.i = select i1 %.not2526.i, float %110, float %109, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !25

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %3
  %i.i.1.i = phi i32 [ %.01.i, %3 ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !25
  %t.i.i.1.i = phi float [ %.04.i, %3 ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !25
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not28.i = icmp eq i32 %111, 0, !dbg !25
  %112 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !25
  %113 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #4, !dbg !25
  %.011.i = select i1 %.not28.i, float %113, float %112, !dbg !25
  %114 = and i32 %i.i.1.i, 1, !dbg !25
  %.not29.i = icmp eq i32 %114, 0, !dbg !25
  %115 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !25
  %116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i = icmp eq i32 %116, 0, !dbg !25
  %117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %115, float 0.000000e+00) #4, !dbg !25
  %118 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %115, float 0.000000e+00) #4, !dbg !25
  %.012.i = select i1 %.not30.i, float %118, float %117, !dbg !25
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !25

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i = icmp eq i32 %119, 0, !dbg !25
  %120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !25
  %121 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #4, !dbg !25
  %.013.i = select i1 %.not31.i, float %121, float %120, !dbg !25
  br label %__internal_fmad.exit2.i.i.i, !dbg !25

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %122 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !25
  %123 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !25
  %124 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !25
  %125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i = icmp eq i32 %125, 0, !dbg !25
  %126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %124, float %.011.i, float %123) #4, !dbg !25
  %127 = tail call float @llvm.nvvm.fma.rn.f(float %124, float %.011.i, float %123) #4, !dbg !25
  %.010.i = select i1 %.not32.i, float %127, float %126, !dbg !25
  %128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i = icmp eq i32 %128, 0, !dbg !25
  %129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %122) #4, !dbg !25
  %130 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %122) #4, !dbg !25
  %.09.i = select i1 %.not33.i, float %130, float %129, !dbg !25
  %131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i = icmp eq i32 %131, 0, !dbg !25
  %132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %115) #4, !dbg !25
  %133 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %115) #4, !dbg !25
  %.05.i = select i1 %.not34.i, float %133, float %132, !dbg !25
  %134 = and i32 %i.i.1.i, 2, !dbg !25
  %.not35.i = icmp eq i32 %134, 0, !dbg !25
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !25

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %135 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i = icmp eq i32 %135, 0, !dbg !25
  %136 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !25
  %137 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #4, !dbg !25
  %.0.i = select i1 %.not36.i, float %137, float %136, !dbg !25
  br label %__nv_sinf.exit, !dbg !25

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !25
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !25
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !25
  %138 = fmul float %34, 0x3FE45F3060000000, !dbg !25
  %139 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not.i2 = icmp eq i32 %139, 0, !dbg !25
  %140 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %138) #4, !dbg !25
  %141 = tail call i32 @llvm.nvvm.f2i.rn(float %138) #4, !dbg !25
  %.01.i3 = select i1 %.not.i2, i32 %141, i32 %140, !dbg !25
  %142 = sitofp i32 %.01.i3 to float, !dbg !25
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not15.i4 = icmp eq i32 %143, 0, !dbg !25
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float 0xBFF921FB40000000, float %34) #4, !dbg !25
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %142, float 0xBFF921FB40000000, float %34) #4, !dbg !25
  %.02.i5 = select i1 %.not15.i4, float %145, float %144, !dbg !25
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not16.i6 = icmp eq i32 %146, 0, !dbg !25
  %147 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !25
  %148 = tail call float @llvm.nvvm.fma.rn.f(float %142, float 0xBE74442D00000000, float %.02.i5) #4, !dbg !25
  %.03.i7 = select i1 %.not16.i6, float %148, float %147, !dbg !25
  %149 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not17.i8 = icmp eq i32 %149, 0, !dbg !25
  %150 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %142, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !25
  %151 = tail call float @llvm.nvvm.fma.rn.f(float %142, float 0xBCF84698A0000000, float %.03.i7) #4, !dbg !25
  %.04.i9 = select i1 %.not17.i8, float %151, float %150, !dbg !25
  %152 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not18.i10 = icmp eq i32 %152, 0, !dbg !25
  %153 = tail call float @llvm.nvvm.fabs.ftz.f(float %34) #4, !dbg !25
  %154 = tail call float @llvm.nvvm.fabs.f(float %34) #4, !dbg !25
  %.06.i11 = select i1 %.not18.i10, float %154, float %153, !dbg !25
  %155 = fcmp ult float %.06.i11, 1.056150e+05, !dbg !25
  br i1 %155, label %__internal_trig_reduction_kernel.exit.i.i29, label %__nv_isinff.exit.i.i.i12, !dbg !25

__nv_isinff.exit.i.i.i12:                         ; preds = %__nv_sinf.exit
  %156 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not19.i13 = icmp eq i32 %156, 0, !dbg !25
  %.07.i14 = select i1 %.not19.i13, float %154, float %153, !dbg !25
  %157 = fcmp oeq float %.07.i14, 0x7FF0000000000000, !dbg !25
  br i1 %157, label %__nv_fmul_rn.exit.i.i.i52, label %161, !dbg !25

__nv_fmul_rn.exit.i.i.i52:                        ; preds = %__nv_isinff.exit.i.i.i12
  %158 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not27.i53 = icmp eq i32 %158, 0, !dbg !25
  %159 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %34, float 0.000000e+00) #4, !dbg !25
  %160 = tail call float @llvm.nvvm.mul.rn.f(float %34, float 0.000000e+00) #4, !dbg !25
  %.08.i54 = select i1 %.not27.i53, float %160, float %159, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !25

161:                                              ; preds = %__nv_isinff.exit.i.i.i12
  %162 = bitcast float %34 to i32, !dbg !25
  %163 = lshr i32 %162, 23, !dbg !25
  %164 = and i32 %163, 224, !dbg !25
  %165 = add nsw i32 %164, -128, !dbg !25
  %166 = shl i32 %162, 8, !dbg !25
  %167 = or i32 %166, -2147483648, !dbg !25
  %168 = lshr exact i32 %165, 5, !dbg !25
  br label %169, !dbg !25

169:                                              ; preds = %161, %169
  %indvars.iv179 = phi i64 [ 0, %161 ], [ %indvars.iv.next180, %169 ]
  %hi.i.i.i.0.i15166 = phi i32 [ 0, %161 ], [ %174, %169 ]
  %170 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv179, !dbg !25
  %171 = load i32, ptr addrspace(1) %170, align 4, !dbg !25
  %172 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %171, i32 %167, i32 %hi.i.i.i.0.i15166) #5, !dbg !25, !srcloc !26
  %173 = extractvalue { i32, i32 } %172, 0, !dbg !25
  %174 = extractvalue { i32, i32 } %172, 1, !dbg !25
  %175 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %indvars.iv179, !dbg !25
  store i32 %173, ptr %175, align 4, !dbg !25
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1, !dbg !25
  %exitcond181.not = icmp eq i64 %indvars.iv.next180, 6, !dbg !25
  br i1 %exitcond181.not, label %176, label %169, !dbg !25, !llvm.loop !29

176:                                              ; preds = %169
  %177 = getelementptr inbounds i8, ptr %result.i.i.i.i1, i64 24, !dbg !25
  store i32 %174, ptr %177, align 4, !dbg !25
  %178 = and i32 %163, 31, !dbg !25
  %179 = sub nsw i32 6, %168, !dbg !25
  %180 = sext i32 %179 to i64, !dbg !25
  %181 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %180, !dbg !25
  %182 = load i32, ptr %181, align 4, !dbg !25
  %183 = sub nsw i32 5, %168, !dbg !25
  %184 = sext i32 %183 to i64, !dbg !25
  %185 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %184, !dbg !25
  %186 = load i32, ptr %185, align 4, !dbg !25
  %.not20.i17 = icmp eq i32 %178, 0, !dbg !25
  br i1 %.not20.i17, label %__internal_trig_reduction_slowpath.exit.i.i.i18, label %187, !dbg !25

187:                                              ; preds = %176
  %188 = sub nsw i32 4, %168, !dbg !25
  %189 = sub nuw nsw i32 32, %178, !dbg !25
  %190 = shl i32 %182, %178, !dbg !25
  %191 = lshr i32 %186, %189, !dbg !25
  %192 = add i32 %191, %190, !dbg !25
  %193 = shl i32 %186, %178, !dbg !25
  %194 = sext i32 %188 to i64, !dbg !25
  %195 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i1, i64 0, i64 %194, !dbg !25
  %196 = load i32, ptr %195, align 4, !dbg !25
  %197 = lshr i32 %196, %189, !dbg !25
  %198 = add i32 %197, %193, !dbg !25
  br label %__internal_trig_reduction_slowpath.exit.i.i.i18, !dbg !25

__internal_trig_reduction_slowpath.exit.i.i.i18:  ; preds = %187, %176
  %hi.i.i.i.1.i19 = phi i32 [ %192, %187 ], [ %182, %176 ], !dbg !25
  %lo.i.i.i.0.i20 = phi i32 [ %198, %187 ], [ %186, %176 ], !dbg !25
  %199 = lshr i32 %hi.i.i.i.1.i19, 30, !dbg !25
  %200 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i19, i32 %lo.i.i.i.0.i20, i32 2), !dbg !25
  %201 = shl i32 %lo.i.i.i.0.i20, 2, !dbg !25
  %202 = lshr i32 %200, 31, !dbg !25
  %203 = add nuw nsw i32 %202, %199, !dbg !25
  %204 = sub nsw i32 0, %203, !dbg !25
  %.not2123.i21 = icmp slt i32 %162, 0, !dbg !25
  %spec.select.i22 = select i1 %.not2123.i21, i32 %204, i32 %203, !dbg !25
  %205 = xor i32 %200, %162, !dbg !25
  %.lobit.i23 = ashr i32 %200, 31, !dbg !25
  %hi.i.i.i.2.i24 = xor i32 %.lobit.i23, %200, !dbg !25
  %lo.i.i.i.1.i26 = xor i32 %.lobit.i23, %201, !dbg !25
  %206 = zext i32 %hi.i.i.i.2.i24 to i64, !dbg !25
  %207 = shl nuw i64 %206, 32, !dbg !25
  %208 = zext i32 %lo.i.i.i.1.i26 to i64, !dbg !25
  %209 = or disjoint i64 %207, %208, !dbg !25
  %210 = sitofp i64 %209 to double, !dbg !25
  %211 = fmul double %210, 0x3BF921FB54442D19, !dbg !25
  %212 = fptrunc double %211 to float, !dbg !25
  %213 = fneg float %212, !dbg !25
  %.not2526.i27 = icmp slt i32 %205, 0, !dbg !25
  %r.i.i.i.0.i28 = select i1 %.not2526.i27, float %213, float %212, !dbg !25
  br label %__internal_trig_reduction_kernel.exit.i.i29, !dbg !25

__internal_trig_reduction_kernel.exit.i.i29:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i18, %__nv_fmul_rn.exit.i.i.i52, %__nv_sinf.exit
  %i.i.1.i30 = phi i32 [ %.01.i3, %__nv_sinf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i52 ], [ %spec.select.i22, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !25
  %t.i.i.1.i31 = phi float [ %.04.i9, %__nv_sinf.exit ], [ %.08.i54, %__nv_fmul_rn.exit.i.i.i52 ], [ %r.i.i.i.0.i28, %__internal_trig_reduction_slowpath.exit.i.i.i18 ], !dbg !25
  %214 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not28.i32 = icmp eq i32 %214, 0, !dbg !25
  %215 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !25
  %216 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i31, float %t.i.i.1.i31) #4, !dbg !25
  %.011.i33 = select i1 %.not28.i32, float %216, float %215, !dbg !25
  %217 = and i32 %i.i.1.i30, 1, !dbg !25
  %.not29.i34 = icmp eq i32 %217, 0, !dbg !25
  %218 = select i1 %.not29.i34, float %t.i.i.1.i31, float 1.000000e+00, !dbg !25
  %219 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not30.i35 = icmp eq i32 %219, 0, !dbg !25
  %220 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i33, float %218, float 0.000000e+00) #4, !dbg !25
  %221 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i33, float %218, float 0.000000e+00) #4, !dbg !25
  %.012.i36 = select i1 %.not30.i35, float %221, float %220, !dbg !25
  br i1 %.not29.i34, label %__internal_fmad.exit2.i.i.i40, label %__internal_fmad.exit1.i.i.i37, !dbg !25

__internal_fmad.exit1.i.i.i37:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i29
  %222 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not31.i38 = icmp eq i32 %222, 0, !dbg !25
  %223 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !25
  %224 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i33, float 0xBF56C0FDA0000000) #4, !dbg !25
  %.013.i39 = select i1 %.not31.i38, float %224, float %223, !dbg !25
  br label %__internal_fmad.exit2.i.i.i40, !dbg !25

__internal_fmad.exit2.i.i.i40:                    ; preds = %__internal_fmad.exit1.i.i.i37, %__internal_trig_reduction_kernel.exit.i.i29
  %225 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i37 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %226 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i37 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %227 = phi float [ %.013.i39, %__internal_fmad.exit1.i.i.i37 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i29 ], !dbg !25
  %228 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not32.i41 = icmp eq i32 %228, 0, !dbg !25
  %229 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %227, float %.011.i33, float %226) #4, !dbg !25
  %230 = tail call float @llvm.nvvm.fma.rn.f(float %227, float %.011.i33, float %226) #4, !dbg !25
  %.010.i42 = select i1 %.not32.i41, float %230, float %229, !dbg !25
  %231 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not33.i43 = icmp eq i32 %231, 0, !dbg !25
  %232 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i42, float %.011.i33, float %225) #4, !dbg !25
  %233 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i42, float %.011.i33, float %225) #4, !dbg !25
  %.09.i44 = select i1 %.not33.i43, float %233, float %232, !dbg !25
  %234 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not34.i45 = icmp eq i32 %234, 0, !dbg !25
  %235 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i44, float %.012.i36, float %218) #4, !dbg !25
  %236 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i44, float %.012.i36, float %218) #4, !dbg !25
  %.05.i46 = select i1 %.not34.i45, float %236, float %235, !dbg !25
  %237 = and i32 %i.i.1.i30, 2, !dbg !25
  %.not35.i47 = icmp eq i32 %237, 0, !dbg !25
  br i1 %.not35.i47, label %__nv_sinf.exit55, label %__internal_fmad.exit5.i.i.i48, !dbg !25

__internal_fmad.exit5.i.i.i48:                    ; preds = %__internal_fmad.exit2.i.i.i40
  %238 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !25
  %.not36.i49 = icmp eq i32 %238, 0, !dbg !25
  %239 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !25
  %240 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i46, float -1.000000e+00, float 0.000000e+00) #4, !dbg !25
  %.0.i50 = select i1 %.not36.i49, float %240, float %239, !dbg !25
  br label %__nv_sinf.exit55, !dbg !25

__nv_sinf.exit55:                                 ; preds = %__internal_fmad.exit2.i.i.i40, %__internal_fmad.exit5.i.i.i48
  %z.i.i.0.i51 = phi float [ %.0.i50, %__internal_fmad.exit5.i.i.i48 ], [ %.05.i46, %__internal_fmad.exit2.i.i.i40 ], !dbg !25
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i1), !dbg !25
  %241 = icmp sgt i32 %.decomposed, 1, !dbg !30
  %242 = and i1 %13, %241, !dbg !31
  %243 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %242, i32 0, i1 %242) #4, !dbg !32
  %244 = bitcast i32 %243 to float, !dbg !32
  %245 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %19, i1 %242, i32 0, i1 %242) #4, !dbg !32
  %246 = bitcast i32 %245 to float, !dbg !32
  %247 = add nsw i32 %.decomposed, -2, !dbg !33
  %248 = add nsw i32 %16, -2, !dbg !33
  %249 = sitofp i32 %247 to float, !dbg !34
  %250 = sitofp i32 %248 to float, !dbg !34
  %251 = fmul float %249, 0xC0226BB1C0000000, !dbg !35
  %252 = fmul float %250, 0xC0226BB1C0000000, !dbg !35
  %253 = fmul float %251, 0x3FF7154760000000, !dbg !36
  %254 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %253) #4, !dbg !36
  %255 = fmul float %252, 0x3FF7154760000000, !dbg !36
  %256 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %255) #4, !dbg !36
  %257 = fmul float %254, %244, !dbg !37
  %258 = fmul float %256, %246, !dbg !37
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !38
  %259 = fmul float %257, 0x3FE45F3060000000, !dbg !38
  %260 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i57 = icmp eq i32 %260, 0, !dbg !38
  %261 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %259) #4, !dbg !38
  %262 = tail call i32 @llvm.nvvm.f2i.rn(float %259) #4, !dbg !38
  %.01.i58 = select i1 %.not.i57, i32 %262, i32 %261, !dbg !38
  %263 = sitofp i32 %.01.i58 to float, !dbg !38
  %264 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not15.i59 = icmp eq i32 %264, 0, !dbg !38
  %265 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %263, float 0xBFF921FB40000000, float %257) #4, !dbg !38
  %266 = tail call float @llvm.nvvm.fma.rn.f(float %263, float 0xBFF921FB40000000, float %257) #4, !dbg !38
  %.02.i60 = select i1 %.not15.i59, float %266, float %265, !dbg !38
  %267 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not16.i61 = icmp eq i32 %267, 0, !dbg !38
  %268 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %263, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !38
  %269 = tail call float @llvm.nvvm.fma.rn.f(float %263, float 0xBE74442D00000000, float %.02.i60) #4, !dbg !38
  %.03.i62 = select i1 %.not16.i61, float %269, float %268, !dbg !38
  %270 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not17.i63 = icmp eq i32 %270, 0, !dbg !38
  %271 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %263, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !38
  %272 = tail call float @llvm.nvvm.fma.rn.f(float %263, float 0xBCF84698A0000000, float %.03.i62) #4, !dbg !38
  %.04.i64 = select i1 %.not17.i63, float %272, float %271, !dbg !38
  %273 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not18.i65 = icmp eq i32 %273, 0, !dbg !38
  %274 = tail call float @llvm.nvvm.fabs.ftz.f(float %257) #4, !dbg !38
  %275 = tail call float @llvm.nvvm.fabs.f(float %257) #4, !dbg !38
  %.06.i66 = select i1 %.not18.i65, float %275, float %274, !dbg !38
  %276 = fcmp ult float %.06.i66, 1.056150e+05, !dbg !38
  br i1 %276, label %__internal_trig_reduction_kernel.exit.i.i84, label %__nv_isinff.exit.i.i.i67, !dbg !38

__nv_isinff.exit.i.i.i67:                         ; preds = %__nv_sinf.exit55
  %277 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not19.i68 = icmp eq i32 %277, 0, !dbg !38
  %.07.i69 = select i1 %.not19.i68, float %275, float %274, !dbg !38
  %278 = fcmp oeq float %.07.i69, 0x7FF0000000000000, !dbg !38
  br i1 %278, label %__nv_fmul_rn.exit.i.i.i106, label %282, !dbg !38

__nv_fmul_rn.exit.i.i.i106:                       ; preds = %__nv_isinff.exit.i.i.i67
  %279 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not27.i107 = icmp eq i32 %279, 0, !dbg !38
  %280 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %257, float 0.000000e+00) #4, !dbg !38
  %281 = tail call float @llvm.nvvm.mul.rn.f(float %257, float 0.000000e+00) #4, !dbg !38
  %.08.i108 = select i1 %.not27.i107, float %281, float %280, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !38

282:                                              ; preds = %__nv_isinff.exit.i.i.i67
  %283 = bitcast float %257 to i32, !dbg !38
  %284 = lshr i32 %283, 23, !dbg !38
  %285 = and i32 %284, 224, !dbg !38
  %286 = add nsw i32 %285, -128, !dbg !38
  %287 = shl i32 %283, 8, !dbg !38
  %288 = or i32 %287, -2147483648, !dbg !38
  %289 = lshr exact i32 %286, 5, !dbg !38
  br label %290, !dbg !38

290:                                              ; preds = %282, %290
  %indvars.iv182 = phi i64 [ 0, %282 ], [ %indvars.iv.next183, %290 ]
  %hi.i.i.i.0.i70168 = phi i32 [ 0, %282 ], [ %295, %290 ]
  %291 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv182, !dbg !38
  %292 = load i32, ptr addrspace(1) %291, align 4, !dbg !38
  %293 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %292, i32 %288, i32 %hi.i.i.i.0.i70168) #5, !dbg !38, !srcloc !26
  %294 = extractvalue { i32, i32 } %293, 0, !dbg !38
  %295 = extractvalue { i32, i32 } %293, 1, !dbg !38
  %296 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %indvars.iv182, !dbg !38
  store i32 %294, ptr %296, align 4, !dbg !38
  %indvars.iv.next183 = add nuw nsw i64 %indvars.iv182, 1, !dbg !38
  %exitcond184.not = icmp eq i64 %indvars.iv.next183, 6, !dbg !38
  br i1 %exitcond184.not, label %297, label %290, !dbg !38, !llvm.loop !39

297:                                              ; preds = %290
  %298 = getelementptr inbounds i8, ptr %result.i.i.i.i56, i64 24, !dbg !38
  store i32 %295, ptr %298, align 4, !dbg !38
  %299 = and i32 %284, 31, !dbg !38
  %300 = sub nsw i32 6, %289, !dbg !38
  %301 = sext i32 %300 to i64, !dbg !38
  %302 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %301, !dbg !38
  %303 = load i32, ptr %302, align 4, !dbg !38
  %304 = sub nsw i32 5, %289, !dbg !38
  %305 = sext i32 %304 to i64, !dbg !38
  %306 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %305, !dbg !38
  %307 = load i32, ptr %306, align 4, !dbg !38
  %.not20.i72 = icmp eq i32 %299, 0, !dbg !38
  br i1 %.not20.i72, label %__internal_trig_reduction_slowpath.exit.i.i.i73, label %308, !dbg !38

308:                                              ; preds = %297
  %309 = sub nsw i32 4, %289, !dbg !38
  %310 = sub nuw nsw i32 32, %299, !dbg !38
  %311 = shl i32 %303, %299, !dbg !38
  %312 = lshr i32 %307, %310, !dbg !38
  %313 = add i32 %312, %311, !dbg !38
  %314 = shl i32 %307, %299, !dbg !38
  %315 = sext i32 %309 to i64, !dbg !38
  %316 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i56, i64 0, i64 %315, !dbg !38
  %317 = load i32, ptr %316, align 4, !dbg !38
  %318 = lshr i32 %317, %310, !dbg !38
  %319 = add i32 %318, %314, !dbg !38
  br label %__internal_trig_reduction_slowpath.exit.i.i.i73, !dbg !38

__internal_trig_reduction_slowpath.exit.i.i.i73:  ; preds = %308, %297
  %hi.i.i.i.1.i74 = phi i32 [ %313, %308 ], [ %303, %297 ], !dbg !38
  %lo.i.i.i.0.i75 = phi i32 [ %319, %308 ], [ %307, %297 ], !dbg !38
  %320 = lshr i32 %hi.i.i.i.1.i74, 30, !dbg !38
  %321 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i74, i32 %lo.i.i.i.0.i75, i32 2), !dbg !38
  %322 = shl i32 %lo.i.i.i.0.i75, 2, !dbg !38
  %323 = lshr i32 %321, 31, !dbg !38
  %324 = add nuw nsw i32 %323, %320, !dbg !38
  %325 = sub nsw i32 0, %324, !dbg !38
  %.not2123.i76 = icmp slt i32 %283, 0, !dbg !38
  %spec.select.i77 = select i1 %.not2123.i76, i32 %325, i32 %324, !dbg !38
  %326 = xor i32 %321, %283, !dbg !38
  %.lobit.i78 = ashr i32 %321, 31, !dbg !38
  %hi.i.i.i.2.i79 = xor i32 %.lobit.i78, %321, !dbg !38
  %lo.i.i.i.1.i81 = xor i32 %.lobit.i78, %322, !dbg !38
  %327 = zext i32 %hi.i.i.i.2.i79 to i64, !dbg !38
  %328 = shl nuw i64 %327, 32, !dbg !38
  %329 = zext i32 %lo.i.i.i.1.i81 to i64, !dbg !38
  %330 = or disjoint i64 %328, %329, !dbg !38
  %331 = sitofp i64 %330 to double, !dbg !38
  %332 = fmul double %331, 0x3BF921FB54442D19, !dbg !38
  %333 = fptrunc double %332 to float, !dbg !38
  %334 = fneg float %333, !dbg !38
  %.not2526.i82 = icmp slt i32 %326, 0, !dbg !38
  %r.i.i.i.0.i83 = select i1 %.not2526.i82, float %334, float %333, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i84, !dbg !38

__internal_trig_reduction_kernel.exit.i.i84:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i73, %__nv_fmul_rn.exit.i.i.i106, %__nv_sinf.exit55
  %i.i.1.i85 = phi i32 [ %.01.i58, %__nv_sinf.exit55 ], [ 0, %__nv_fmul_rn.exit.i.i.i106 ], [ %spec.select.i77, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !38
  %t.i.i.1.i86 = phi float [ %.04.i64, %__nv_sinf.exit55 ], [ %.08.i108, %__nv_fmul_rn.exit.i.i.i106 ], [ %r.i.i.i.0.i83, %__internal_trig_reduction_slowpath.exit.i.i.i73 ], !dbg !38
  %335 = add i32 %i.i.1.i85, 1, !dbg !38
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not28.i87 = icmp eq i32 %336, 0, !dbg !38
  %337 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !38
  %338 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i86, float %t.i.i.1.i86) #4, !dbg !38
  %.011.i88 = select i1 %.not28.i87, float %338, float %337, !dbg !38
  %339 = and i32 %i.i.1.i85, 1, !dbg !38
  %.not29.not.i = icmp eq i32 %339, 0, !dbg !38
  %340 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i86, !dbg !38
  %341 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not30.i89 = icmp eq i32 %341, 0, !dbg !38
  %342 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i88, float %340, float 0.000000e+00) #4, !dbg !38
  %343 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i88, float %340, float 0.000000e+00) #4, !dbg !38
  %.012.i90 = select i1 %.not30.i89, float %343, float %342, !dbg !38
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i103, label %__internal_fmad.exit2.i.i.i91, !dbg !38

__internal_fmad.exit1.i.i.i103:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i84
  %344 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not31.i104 = icmp eq i32 %344, 0, !dbg !38
  %345 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !38
  %346 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i88, float 0xBF56C0FDA0000000) #4, !dbg !38
  %.013.i105 = select i1 %.not31.i104, float %346, float %345, !dbg !38
  br label %__internal_fmad.exit2.i.i.i91, !dbg !38

__internal_fmad.exit2.i.i.i91:                    ; preds = %__internal_fmad.exit1.i.i.i103, %__internal_trig_reduction_kernel.exit.i.i84
  %347 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i103 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %348 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i103 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %349 = phi float [ %.013.i105, %__internal_fmad.exit1.i.i.i103 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i84 ], !dbg !38
  %350 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not32.i92 = icmp eq i32 %350, 0, !dbg !38
  %351 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %349, float %.011.i88, float %348) #4, !dbg !38
  %352 = tail call float @llvm.nvvm.fma.rn.f(float %349, float %.011.i88, float %348) #4, !dbg !38
  %.010.i93 = select i1 %.not32.i92, float %352, float %351, !dbg !38
  %353 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not33.i94 = icmp eq i32 %353, 0, !dbg !38
  %354 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i93, float %.011.i88, float %347) #4, !dbg !38
  %355 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i93, float %.011.i88, float %347) #4, !dbg !38
  %.09.i95 = select i1 %.not33.i94, float %355, float %354, !dbg !38
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not34.i96 = icmp eq i32 %356, 0, !dbg !38
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i95, float %.012.i90, float %340) #4, !dbg !38
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i95, float %.012.i90, float %340) #4, !dbg !38
  %.05.i97 = select i1 %.not34.i96, float %358, float %357, !dbg !38
  %359 = and i32 %335, 2, !dbg !38
  %.not35.i98 = icmp eq i32 %359, 0, !dbg !38
  br i1 %.not35.i98, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i99, !dbg !38

__internal_fmad.exit5.i.i.i99:                    ; preds = %__internal_fmad.exit2.i.i.i91
  %360 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not36.i100 = icmp eq i32 %360, 0, !dbg !38
  %361 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %362 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i97, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %.0.i101 = select i1 %.not36.i100, float %362, float %361, !dbg !38
  br label %__nv_cosf.exit, !dbg !38

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i91, %__internal_fmad.exit5.i.i.i99
  %z.i.i.0.i102 = phi float [ %.0.i101, %__internal_fmad.exit5.i.i.i99 ], [ %.05.i97, %__internal_fmad.exit2.i.i.i91 ], !dbg !38
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i56), !dbg !38
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !38
  %363 = fmul float %258, 0x3FE45F3060000000, !dbg !38
  %364 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not.i110 = icmp eq i32 %364, 0, !dbg !38
  %365 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %363) #4, !dbg !38
  %366 = tail call i32 @llvm.nvvm.f2i.rn(float %363) #4, !dbg !38
  %.01.i111 = select i1 %.not.i110, i32 %366, i32 %365, !dbg !38
  %367 = sitofp i32 %.01.i111 to float, !dbg !38
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not15.i112 = icmp eq i32 %368, 0, !dbg !38
  %369 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %367, float 0xBFF921FB40000000, float %258) #4, !dbg !38
  %370 = tail call float @llvm.nvvm.fma.rn.f(float %367, float 0xBFF921FB40000000, float %258) #4, !dbg !38
  %.02.i113 = select i1 %.not15.i112, float %370, float %369, !dbg !38
  %371 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not16.i114 = icmp eq i32 %371, 0, !dbg !38
  %372 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %367, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !38
  %373 = tail call float @llvm.nvvm.fma.rn.f(float %367, float 0xBE74442D00000000, float %.02.i113) #4, !dbg !38
  %.03.i115 = select i1 %.not16.i114, float %373, float %372, !dbg !38
  %374 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not17.i116 = icmp eq i32 %374, 0, !dbg !38
  %375 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %367, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !38
  %376 = tail call float @llvm.nvvm.fma.rn.f(float %367, float 0xBCF84698A0000000, float %.03.i115) #4, !dbg !38
  %.04.i117 = select i1 %.not17.i116, float %376, float %375, !dbg !38
  %377 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not18.i118 = icmp eq i32 %377, 0, !dbg !38
  %378 = tail call float @llvm.nvvm.fabs.ftz.f(float %258) #4, !dbg !38
  %379 = tail call float @llvm.nvvm.fabs.f(float %258) #4, !dbg !38
  %.06.i119 = select i1 %.not18.i118, float %379, float %378, !dbg !38
  %380 = fcmp ult float %.06.i119, 1.056150e+05, !dbg !38
  br i1 %380, label %__internal_trig_reduction_kernel.exit.i.i137, label %__nv_isinff.exit.i.i.i120, !dbg !38

__nv_isinff.exit.i.i.i120:                        ; preds = %__nv_cosf.exit
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not19.i121 = icmp eq i32 %381, 0, !dbg !38
  %.07.i122 = select i1 %.not19.i121, float %379, float %378, !dbg !38
  %382 = fcmp oeq float %.07.i122, 0x7FF0000000000000, !dbg !38
  br i1 %382, label %__nv_fmul_rn.exit.i.i.i160, label %386, !dbg !38

__nv_fmul_rn.exit.i.i.i160:                       ; preds = %__nv_isinff.exit.i.i.i120
  %383 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not27.i161 = icmp eq i32 %383, 0, !dbg !38
  %384 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %258, float 0.000000e+00) #4, !dbg !38
  %385 = tail call float @llvm.nvvm.mul.rn.f(float %258, float 0.000000e+00) #4, !dbg !38
  %.08.i162 = select i1 %.not27.i161, float %385, float %384, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !38

386:                                              ; preds = %__nv_isinff.exit.i.i.i120
  %387 = bitcast float %258 to i32, !dbg !38
  %388 = lshr i32 %387, 23, !dbg !38
  %389 = and i32 %388, 224, !dbg !38
  %390 = add nsw i32 %389, -128, !dbg !38
  %391 = shl i32 %387, 8, !dbg !38
  %392 = or i32 %391, -2147483648, !dbg !38
  %393 = lshr exact i32 %390, 5, !dbg !38
  br label %394, !dbg !38

394:                                              ; preds = %386, %394
  %indvars.iv185 = phi i64 [ 0, %386 ], [ %indvars.iv.next186, %394 ]
  %hi.i.i.i.0.i123170 = phi i32 [ 0, %386 ], [ %399, %394 ]
  %395 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv185, !dbg !38
  %396 = load i32, ptr addrspace(1) %395, align 4, !dbg !38
  %397 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %396, i32 %392, i32 %hi.i.i.i.0.i123170) #5, !dbg !38, !srcloc !26
  %398 = extractvalue { i32, i32 } %397, 0, !dbg !38
  %399 = extractvalue { i32, i32 } %397, 1, !dbg !38
  %400 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %indvars.iv185, !dbg !38
  store i32 %398, ptr %400, align 4, !dbg !38
  %indvars.iv.next186 = add nuw nsw i64 %indvars.iv185, 1, !dbg !38
  %exitcond187.not = icmp eq i64 %indvars.iv.next186, 6, !dbg !38
  br i1 %exitcond187.not, label %401, label %394, !dbg !38, !llvm.loop !40

401:                                              ; preds = %394
  %402 = getelementptr inbounds i8, ptr %result.i.i.i.i109, i64 24, !dbg !38
  store i32 %399, ptr %402, align 4, !dbg !38
  %403 = and i32 %388, 31, !dbg !38
  %404 = sub nsw i32 6, %393, !dbg !38
  %405 = sext i32 %404 to i64, !dbg !38
  %406 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %405, !dbg !38
  %407 = load i32, ptr %406, align 4, !dbg !38
  %408 = sub nsw i32 5, %393, !dbg !38
  %409 = sext i32 %408 to i64, !dbg !38
  %410 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %409, !dbg !38
  %411 = load i32, ptr %410, align 4, !dbg !38
  %.not20.i125 = icmp eq i32 %403, 0, !dbg !38
  br i1 %.not20.i125, label %__internal_trig_reduction_slowpath.exit.i.i.i126, label %412, !dbg !38

412:                                              ; preds = %401
  %413 = sub nsw i32 4, %393, !dbg !38
  %414 = sub nuw nsw i32 32, %403, !dbg !38
  %415 = shl i32 %407, %403, !dbg !38
  %416 = lshr i32 %411, %414, !dbg !38
  %417 = add i32 %416, %415, !dbg !38
  %418 = shl i32 %411, %403, !dbg !38
  %419 = sext i32 %413 to i64, !dbg !38
  %420 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i109, i64 0, i64 %419, !dbg !38
  %421 = load i32, ptr %420, align 4, !dbg !38
  %422 = lshr i32 %421, %414, !dbg !38
  %423 = add i32 %422, %418, !dbg !38
  br label %__internal_trig_reduction_slowpath.exit.i.i.i126, !dbg !38

__internal_trig_reduction_slowpath.exit.i.i.i126: ; preds = %412, %401
  %hi.i.i.i.1.i127 = phi i32 [ %417, %412 ], [ %407, %401 ], !dbg !38
  %lo.i.i.i.0.i128 = phi i32 [ %423, %412 ], [ %411, %401 ], !dbg !38
  %424 = lshr i32 %hi.i.i.i.1.i127, 30, !dbg !38
  %425 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i127, i32 %lo.i.i.i.0.i128, i32 2), !dbg !38
  %426 = shl i32 %lo.i.i.i.0.i128, 2, !dbg !38
  %427 = lshr i32 %425, 31, !dbg !38
  %428 = add nuw nsw i32 %427, %424, !dbg !38
  %429 = sub nsw i32 0, %428, !dbg !38
  %.not2123.i129 = icmp slt i32 %387, 0, !dbg !38
  %spec.select.i130 = select i1 %.not2123.i129, i32 %429, i32 %428, !dbg !38
  %430 = xor i32 %425, %387, !dbg !38
  %.lobit.i131 = ashr i32 %425, 31, !dbg !38
  %hi.i.i.i.2.i132 = xor i32 %.lobit.i131, %425, !dbg !38
  %lo.i.i.i.1.i134 = xor i32 %.lobit.i131, %426, !dbg !38
  %431 = zext i32 %hi.i.i.i.2.i132 to i64, !dbg !38
  %432 = shl nuw i64 %431, 32, !dbg !38
  %433 = zext i32 %lo.i.i.i.1.i134 to i64, !dbg !38
  %434 = or disjoint i64 %432, %433, !dbg !38
  %435 = sitofp i64 %434 to double, !dbg !38
  %436 = fmul double %435, 0x3BF921FB54442D19, !dbg !38
  %437 = fptrunc double %436 to float, !dbg !38
  %438 = fneg float %437, !dbg !38
  %.not2526.i135 = icmp slt i32 %430, 0, !dbg !38
  %r.i.i.i.0.i136 = select i1 %.not2526.i135, float %438, float %437, !dbg !38
  br label %__internal_trig_reduction_kernel.exit.i.i137, !dbg !38

__internal_trig_reduction_kernel.exit.i.i137:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i126, %__nv_fmul_rn.exit.i.i.i160, %__nv_cosf.exit
  %i.i.1.i138 = phi i32 [ %.01.i111, %__nv_cosf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i160 ], [ %spec.select.i130, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !38
  %t.i.i.1.i139 = phi float [ %.04.i117, %__nv_cosf.exit ], [ %.08.i162, %__nv_fmul_rn.exit.i.i.i160 ], [ %r.i.i.i.0.i136, %__internal_trig_reduction_slowpath.exit.i.i.i126 ], !dbg !38
  %439 = add i32 %i.i.1.i138, 1, !dbg !38
  %440 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not28.i140 = icmp eq i32 %440, 0, !dbg !38
  %441 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !38
  %442 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i139, float %t.i.i.1.i139) #4, !dbg !38
  %.011.i141 = select i1 %.not28.i140, float %442, float %441, !dbg !38
  %443 = and i32 %i.i.1.i138, 1, !dbg !38
  %.not29.not.i142 = icmp eq i32 %443, 0, !dbg !38
  %444 = select i1 %.not29.not.i142, float 1.000000e+00, float %t.i.i.1.i139, !dbg !38
  %445 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not30.i143 = icmp eq i32 %445, 0, !dbg !38
  %446 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i141, float %444, float 0.000000e+00) #4, !dbg !38
  %447 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i141, float %444, float 0.000000e+00) #4, !dbg !38
  %.012.i144 = select i1 %.not30.i143, float %447, float %446, !dbg !38
  br i1 %.not29.not.i142, label %__internal_fmad.exit1.i.i.i157, label %__internal_fmad.exit2.i.i.i145, !dbg !38

__internal_fmad.exit1.i.i.i157:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i137
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not31.i158 = icmp eq i32 %448, 0, !dbg !38
  %449 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !38
  %450 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i141, float 0xBF56C0FDA0000000) #4, !dbg !38
  %.013.i159 = select i1 %.not31.i158, float %450, float %449, !dbg !38
  br label %__internal_fmad.exit2.i.i.i145, !dbg !38

__internal_fmad.exit2.i.i.i145:                   ; preds = %__internal_fmad.exit1.i.i.i157, %__internal_trig_reduction_kernel.exit.i.i137
  %451 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i157 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !38
  %452 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i157 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !38
  %453 = phi float [ %.013.i159, %__internal_fmad.exit1.i.i.i157 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i137 ], !dbg !38
  %454 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not32.i146 = icmp eq i32 %454, 0, !dbg !38
  %455 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %453, float %.011.i141, float %452) #4, !dbg !38
  %456 = tail call float @llvm.nvvm.fma.rn.f(float %453, float %.011.i141, float %452) #4, !dbg !38
  %.010.i147 = select i1 %.not32.i146, float %456, float %455, !dbg !38
  %457 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not33.i148 = icmp eq i32 %457, 0, !dbg !38
  %458 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i147, float %.011.i141, float %451) #4, !dbg !38
  %459 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i147, float %.011.i141, float %451) #4, !dbg !38
  %.09.i149 = select i1 %.not33.i148, float %459, float %458, !dbg !38
  %460 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not34.i150 = icmp eq i32 %460, 0, !dbg !38
  %461 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i149, float %.012.i144, float %444) #4, !dbg !38
  %462 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i149, float %.012.i144, float %444) #4, !dbg !38
  %.05.i151 = select i1 %.not34.i150, float %462, float %461, !dbg !38
  %463 = and i32 %439, 2, !dbg !38
  %.not35.i152 = icmp eq i32 %463, 0, !dbg !38
  br i1 %.not35.i152, label %__nv_cosf.exit163, label %__internal_fmad.exit5.i.i.i153, !dbg !38

__internal_fmad.exit5.i.i.i153:                   ; preds = %__internal_fmad.exit2.i.i.i145
  %464 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #4, !dbg !38
  %.not36.i154 = icmp eq i32 %464, 0, !dbg !38
  %465 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %466 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i151, float -1.000000e+00, float 0.000000e+00) #4, !dbg !38
  %.0.i155 = select i1 %.not36.i154, float %466, float %465, !dbg !38
  br label %__nv_cosf.exit163, !dbg !38

__nv_cosf.exit163:                                ; preds = %__internal_fmad.exit2.i.i.i145, %__internal_fmad.exit5.i.i.i153
  %z.i.i.0.i156 = phi float [ %.0.i155, %__internal_fmad.exit5.i.i.i153 ], [ %.05.i151, %__internal_fmad.exit2.i.i.i145 ], !dbg !38
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i109), !dbg !38
  %467 = select i1 %17, float %z.i.i.0.i, float %z.i.i.0.i102, !dbg !41
  %468 = select i1 %17, float %z.i.i.0.i51, float %z.i.i.0.i156, !dbg !41
  %469 = sext i32 %10 to i64, !dbg !42
  %470 = getelementptr float, ptr addrspace(1) %1, i64 %469, !dbg !42
  %471 = bitcast float %467 to i32, !dbg !43
  %472 = bitcast float %468 to i32, !dbg !43
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %471, i32 %472, ptr addrspace(1) %470, i1 %13) #4, !dbg !43
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { nounwind }
attributes #5 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "c53zgs6eitxtroj2hxqes537jbwwue4zseimatg7463qcpah47pi.py", directory: "inductor_cache/53")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 32}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 19, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 31, column: 18, scope: !7)
!18 = !DILocation(line: 32, column: 30, scope: !7)
!19 = !DILocation(line: 32, column: 42, scope: !7)
!20 = !DILocation(line: 32, column: 35, scope: !7)
!21 = !DILocation(line: 34, column: 19, scope: !7)
!22 = !DILocation(line: 36, column: 18, scope: !7)
!23 = !DILocation(line: 37, column: 24, scope: !7)
!24 = !DILocation(line: 38, column: 19, scope: !7)
!25 = !DILocation(line: 39, column: 24, scope: !7)
!26 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!27 = distinct !{!27, !28}
!28 = !{!"llvm.loop.unroll.count", i32 1}
!29 = distinct !{!29, !28}
!30 = !DILocation(line: 42, column: 20, scope: !7)
!31 = !DILocation(line: 45, column: 44, scope: !7)
!32 = !DILocation(line: 45, column: 36, scope: !7)
!33 = !DILocation(line: 46, column: 19, scope: !7)
!34 = !DILocation(line: 47, column: 21, scope: !7)
!35 = !DILocation(line: 49, column: 20, scope: !7)
!36 = !DILocation(line: 50, column: 24, scope: !7)
!37 = !DILocation(line: 51, column: 20, scope: !7)
!38 = !DILocation(line: 52, column: 24, scope: !7)
!39 = distinct !{!39, !28}
!40 = distinct !{!40, !28}
!41 = !DILocation(line: 0, scope: !7)
!42 = !DILocation(line: 56, column: 25, scope: !7)
!43 = !DILocation(line: 56, column: 37, scope: !7)
!44 = !DILocation(line: 56, column: 4, scope: !7)
