//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_add_native_layer_norm_2 // -- Begin function triton_poi_fused_add_native_layer_norm_2
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @triton_poi_fused_add_native_layer_norm_2
.visible .entry triton_poi_fused_add_native_layer_norm_2(
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_2_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_2_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_2_param_2,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_2_param_3,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_2_param_4,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_2_param_5,
	.param .u64 .ptr .global .align 1 triton_poi_fused_add_native_layer_norm_2_param_6,
	.param .u32 triton_poi_fused_add_native_layer_norm_2_param_7
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<20>;
	.reg .f32 	%f<13>;
	.reg .b64 	%rd<18>;
	.loc	1 19 0                          // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:19:0

// %bb.0:                               // %__nv_rsqrtf.exit
	ld.param.u64 	%rd8, [triton_poi_fused_add_native_layer_norm_2_param_0];
	ld.param.u64 	%rd9, [triton_poi_fused_add_native_layer_norm_2_param_1];
$L__tmp0:
	.loc	1 21 28                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:21:28
	// begin inline asm
	mov.u32 %r1, %ctaid.x;
	// end inline asm
	.loc	1 21 33                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:21:33
	shl.b32 	%r9, %r1, 7;
	ld.param.u64 	%rd10, [triton_poi_fused_add_native_layer_norm_2_param_2];
	ld.param.u64 	%rd11, [triton_poi_fused_add_native_layer_norm_2_param_3];
	.loc	1 22 36                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:22:36
	mov.u32 	%r10, %tid.x;
	and.b32  	%r11, %r10, 127;
	ld.param.u64 	%rd12, [triton_poi_fused_add_native_layer_norm_2_param_4];
	.loc	1 22 23                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:22:23
	or.b32  	%r12, %r9, %r11;
	ld.param.u64 	%rd13, [triton_poi_fused_add_native_layer_norm_2_param_5];
	.loc	1 23 21                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:23:21
	setp.lt.s32 	%p1, %r12, 256;
	ld.param.u64 	%rd14, [triton_poi_fused_add_native_layer_norm_2_param_6];
	.loc	1 25 19                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:25:19
	shr.s32 	%r14, %r12, 31;
	shr.u32 	%r15, %r14, 30;
	add.s32 	%r16, %r12, %r15;
	shr.s32 	%r17, %r16, 2;
	.loc	1 26 19                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:26:19
	and.b32  	%r18, %r16, -4;
	sub.s32 	%r19, %r12, %r18;
	.loc	1 27 30                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:27:30
	mul.wide.s32 	%rd15, %r12, 4;
	add.s64 	%rd1, %rd8, %rd15;
	.loc	1 27 35                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:27:35
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 28 30                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:28:30
	add.s64 	%rd2, %rd9, %rd15;
	.loc	1 28 35                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:28:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 29 30                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:29:30
	mul.wide.s32 	%rd16, %r17, 4;
	add.s64 	%rd3, %rd10, %rd16;
	.loc	1 29 35                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:29:35
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 30 30                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:30:30
	add.s64 	%rd4, %rd11, %rd16;
	.loc	1 30 35                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:30:35
	// begin inline asm
	mov.u32 %r5, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r5 }, [ %rd4 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r5;
	.loc	1 31 31                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:31:31
	mul.wide.s32 	%rd17, %r19, 4;
	add.s64 	%rd5, %rd12, %rd17;
	.loc	1 31 36                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:31:36
	// begin inline asm
	mov.u32 %r6, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r6 }, [ %rd5 + 0 ];
	// end inline asm
	.loc	1 32 31                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:32:31
	add.s64 	%rd6, %rd13, %rd17;
	.loc	1 32 36                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:32:36
	// begin inline asm
	mov.u32 %r7, 0x0;
	@%p1 ld.global.L1::evict_last.b32 { %r7 }, [ %rd6 + 0 ];
	// end inline asm
	.loc	1 36 18                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:36:18
	add.f32 	%f2, %f1, 0f3727C5AC;
	.loc	1 37 27                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:37:27
	rsqrt.approx.ftz.f32 	%f3, %f2;
	.loc	1 27 35                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:27:35
	mov.b32 	%f4, %r2;
	.loc	1 28 35                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:28:35
	mov.b32 	%f5, %r3;
	.loc	1 33 18                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:33:18
	add.f32 	%f6, %f4, %f5;
	.loc	1 29 35                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:29:35
	mov.b32 	%f7, %r4;
	.loc	1 34 18                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:34:18
	sub.f32 	%f8, %f6, %f7;
	.loc	1 32 36                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:32:36
	mov.b32 	%f9, %r7;
	.loc	1 31 36                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:31:36
	mov.b32 	%f10, %r6;
	.loc	1 38 18                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:38:18
	mul.f32 	%f11, %f8, %f3;
	.loc	1 40 20                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:40:20
	fma.rn.f32 	%f12, %f11, %f10, %f9;
	.loc	1 41 25                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:41:25
	add.s64 	%rd7, %rd14, %rd15;
	.loc	1 41 37                         // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:41:37
	mov.b32 	%r8, %f12;
	// begin inline asm
	@%p1 st.global.b32 [ %rd7 + 0 ], { %r8 };
	// end inline asm
	.loc	1 41 4                          // cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py:41:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/in/cinpfyekgicyr3yfykunghmefjk7gubvscx4qxftixha7zedhizi.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 105
.b8 110
.b8 112
.b8 102
.b8 121
.b8 101
.b8 107
.b8 103
.b8 105
.b8 99
.b8 121
.b8 114
.b8 51
.b8 121
.b8 102
.b8 121
.b8 107
.b8 117
.b8 110
.b8 103
.b8 104
.b8 109
.b8 101
.b8 102
.b8 106
.b8 107
.b8 55
.b8 103
.b8 117
.b8 98
.b8 118
.b8 115
.b8 99
.b8 120
.b8 52
.b8 113
.b8 120
.b8 102
.b8 116
.b8 105
.b8 120
.b8 104
.b8 97
.b8 55
.b8 122
.b8 101
.b8 100
.b8 104
.b8 105
.b8 122
.b8 105
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 105
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
