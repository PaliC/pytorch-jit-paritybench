//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_per_fused_add_mse_loss_mse_loss_backward_mul_13 // -- Begin function triton_per_fused_add_mse_loss_mse_loss_backward_mul_13
                                        // @triton_per_fused_add_mse_loss_mse_loss_backward_mul_13
.visible .entry triton_per_fused_add_mse_loss_mse_loss_backward_mul_13(
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_0,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_1,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_2,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_3,
	.param .u64 .ptr .global .align 1 triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_4,
	.param .u32 triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_5
)
.reqntid 64, 1, 1
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<23>;
	.reg .f32 	%f<24>;
	.reg .b64 	%rd<13>;
	.loc	1 19 0                          // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_0];
	ld.param.u64 	%rd8, [triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_1];
$L__tmp0:
	.loc	1 26 34                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:26:34
	mov.u32 	%r11, %tid.x;
	and.b32  	%r12, %r11, 15;
	ld.param.u64 	%rd9, [triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_2];
	ld.param.u64 	%rd10, [triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_3];
	.loc	1 30 30                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:30:30
	mul.wide.u32 	%rd11, %r12, 4;
	add.s64 	%rd1, %rd8, %rd11;
	ld.param.u64 	%rd12, [triton_per_fused_add_mse_loss_mse_loss_backward_mul_13_param_4];
	mov.pred 	%p1, -1;
	.loc	1 30 35                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:30:35
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f1, %r1;
	// begin inline asm
	mov.u32 %r2, 0x0;
	@%p1 ld.global.b32 { %r2 }, [ %rd1 + 0 ];
	// end inline asm
	mov.b32 	%f2, %r2;
	.loc	1 31 30                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:31:30
	add.s64 	%rd3, %rd9, %rd11;
	.loc	1 31 35                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:31:35
	// begin inline asm
	mov.u32 %r3, 0x0;
	@%p1 ld.global.b32 { %r3 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f3, %r3;
	// begin inline asm
	mov.u32 %r4, 0x0;
	@%p1 ld.global.b32 { %r4 }, [ %rd3 + 0 ];
	// end inline asm
	mov.b32 	%f4, %r4;
	.loc	1 33 18                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:33:18
	setp.gt.f32 	%p8, %f3, 0f00000000;
	setp.gt.f32 	%p9, %f4, 0f00000000;
	.loc	1 35 18                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:35:18
	mul.f32 	%f5, %f3, 0f3C23D70A;
	mul.f32 	%f6, %f4, 0f3C23D70A;
	.loc	1 36 32                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:36:32
	selp.f32 	%f7, %f3, %f5, %p8;
	selp.f32 	%f8, %f4, %f6, %p9;
	.loc	1 37 18                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:37:18
	sub.f32 	%f9, %f1, %f7;
	sub.f32 	%f10, %f2, %f8;
	.loc	1 38 18                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:38:18
	mul.f32 	%f11, %f9, %f9;
$L__tmp1:
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r13, %f11;
	shfl.sync.bfly.b32	%r14, %r13, 8, 31, -1;
	mov.b32 	%f12, %r14;
	.loc	2 256 15                        // standard.py:256:15
	fma.rn.f32 	%f13, %f9, %f9, %f12;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r15, %f13;
	shfl.sync.bfly.b32	%r16, %r15, 4, 31, -1;
	mov.b32 	%f14, %r16;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f15, %f13, %f14;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r17, %f15;
	shfl.sync.bfly.b32	%r18, %r17, 2, 31, -1;
	mov.b32 	%f16, %r18;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f17, %f15, %f16;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r19, %f17;
	shfl.sync.bfly.b32	%r20, %r19, 1, 31, -1;
	mov.b32 	%f18, %r20;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f19, %f17, %f18;
$L__tmp2:
	.loc	1 41 19                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:41:19
	add.f32 	%f20, %f8, %f10;
	.loc	1 43 19                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:43:19
	mul.f32 	%f21, %f10, 0f3E000000;
	.loc	1 45 20                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:45:20
	mov.b32 	%r6, %f19;
	mov.b32 	%r7, 1098907648;
	// begin inline asm
	div.full.f32 %r5, %r6, %r7;
	// end inline asm
	mov.b32 	%f22, %r5;
	.loc	1 48 20                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:48:20
	fma.rn.f32 	%f23, %f22, 0f3E800000, %f22;
	.loc	1 49 25                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:49:25
	add.s64 	%rd5, %rd10, %rd11;
	.loc	1 49 72                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:49:72
	and.b32  	%r21, %r11, 48;
	setp.eq.s32 	%p5, %r21, 0;
	mov.b32 	%r8, %f20;
	// begin inline asm
	@%p5 st.global.b32 [ %rd5 + 0 ], { %r8 };
	// end inline asm
	.loc	1 50 25                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:50:25
	add.s64 	%rd6, %rd12, %rd11;
	.loc	1 50 72                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:50:72
	mov.b32 	%r9, %f21;
	// begin inline asm
	@%p5 st.global.b32 [ %rd6 + 0 ], { %r9 };
	// end inline asm
	.loc	1 51 4                          // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:51:4
	bar.sync 	0;
	.loc	1 52 71                         // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:52:71
	and.b32  	%r22, %r11, 63;
	setp.eq.s32 	%p7, %r22, 0;
	mov.b32 	%r10, %f23;
	// begin inline asm
	@%p7 st.global.b32 [ %rd7 + 0 ], { %r10 };
	// end inline asm
	.loc	1 52 4                          // c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py:52:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 199                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xc0 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 51
.b8 98
.b8 98
.b8 105
.b8 53
.b8 100
.b8 122
.b8 54
.b8 99
.b8 101
.b8 97
.b8 53
.b8 113
.b8 50
.b8 115
.b8 109
.b8 101
.b8 97
.b8 102
.b8 107
.b8 106
.b8 103
.b8 104
.b8 104
.b8 54
.b8 119
.b8 55
.b8 116
.b8 51
.b8 109
.b8 115
.b8 50
.b8 120
.b8 53
.b8 110
.b8 98
.b8 113
.b8 55
.b8 55
.b8 98
.b8 101
.b8 100
.b8 122
.b8 50
.b8 114
.b8 118
.b8 120
.b8 117
.b8 107
.b8 106
.b8 52
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 51
.b8 98
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x39 DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 101
.b8 114
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 97
.b8 100
.b8 100
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 109
.b8 115
.b8 101
.b8 95
.b8 108
.b8 111
.b8 115
.b8 115
.b8 95
.b8 98
.b8 97
.b8 99
.b8 107
.b8 119
.b8 97
.b8 114
.b8 100
.b8 95
.b8 109
.b8 117
.b8 108
.b8 95
.b8 49
.b8 51
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x9c:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xb1:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 40                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
