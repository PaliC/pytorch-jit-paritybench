#loc = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":19:0)
#loc1 = loc(unknown)
#loc14 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":40:25)
#loc31 = loc(callsite(#loc1 at #loc14))
module {
  tt.func public @triton_per_fused_add_mse_loss_mse_loss_backward_mul_13(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":19:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":19:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":19:0)) attributes {noinline = false} {
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst = arith.constant dense<2.500000e-01> : tensor<1x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<1.600000e+01> : tensor<1x1xf32> loc(#loc1)
    %cst_1 = arith.constant dense<1.250000e-01> : tensor<1x16xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.00999999977> : tensor<1x16xf32> loc(#loc1)
    %cst_3 = arith.constant dense<0.000000e+00> : tensor<1x16xf32> loc(#loc1)
    %0 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32> loc(#loc2)
    %1 = tt.expand_dims %0 {axis = 0 : i32} : tensor<16xi32> -> tensor<1x16xi32> loc(#loc3)
    %2 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc4)
    %3 = tt.addptr %2, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc4)
    %4 = tt.load %3 : tensor<1x16x!tt.ptr<f32>> loc(#loc5)
    %5 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc6)
    %6 = tt.addptr %5, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc6)
    %7 = tt.load %6 : tensor<1x16x!tt.ptr<f32>> loc(#loc7)
    %8 = arith.cmpf ogt, %7, %cst_3 : tensor<1x16xf32> loc(#loc8)
    %9 = arith.mulf %7, %cst_2 : tensor<1x16xf32> loc(#loc9)
    %10 = arith.select %8, %7, %9 : tensor<1x16xi1>, tensor<1x16xf32> loc(#loc10)
    %11 = arith.subf %4, %10 : tensor<1x16xf32> loc(#loc11)
    %12 = arith.mulf %11, %11 : tensor<1x16xf32> loc(#loc12)
    %13 = "tt.reduce"(%12) <{axis = 1 : i32}> ({
    ^bb0(%arg6: f32 loc(callsite(#loc1 at #loc14)), %arg7: f32 loc(callsite(#loc1 at #loc14))):
      %26 = arith.addf %arg6, %arg7 : f32 loc(#loc33)
      tt.reduce.return %26 : f32 loc(#loc30)
    }) : (tensor<1x16xf32>) -> tensor<1xf32> loc(#loc30)
    %14 = tt.expand_dims %13 {axis = 1 : i32} : tensor<1xf32> -> tensor<1x1xf32> loc(#loc16)
    %15 = arith.addf %10, %11 : tensor<1x16xf32> loc(#loc17)
    %16 = arith.mulf %11, %cst_1 : tensor<1x16xf32> loc(#loc18)
    %17 = arith.divf %14, %cst_0 : tensor<1x1xf32> loc(#loc19)
    %18 = arith.mulf %17, %cst : tensor<1x1xf32> loc(#loc20)
    %19 = arith.addf %18, %17 : tensor<1x1xf32> loc(#loc21)
    %20 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc22)
    %21 = tt.addptr %20, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc22)
    tt.store %21, %15 : tensor<1x16x!tt.ptr<f32>> loc(#loc23)
    %22 = tt.splat %arg4 : !tt.ptr<f32> -> tensor<1x16x!tt.ptr<f32>> loc(#loc24)
    %23 = tt.addptr %22, %1 : tensor<1x16x!tt.ptr<f32>>, tensor<1x16xi32> loc(#loc24)
    tt.store %23, %16 : tensor<1x16x!tt.ptr<f32>> loc(#loc25)
    gpu.barrier loc(#loc26)
    %24 = tt.addptr %arg0, %c0_i32 : !tt.ptr<f32>, i32 loc(#loc27)
    %25 = tt.splat %24 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc27)
    tt.store %25, %19 : tensor<1x1x!tt.ptr<f32>> loc(#loc28)
    tt.return loc(#loc29)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":26:26)
#loc3 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":26:34)
#loc4 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":30:30)
#loc5 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":30:35)
#loc6 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":31:30)
#loc7 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":31:35)
#loc8 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":33:18)
#loc9 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":35:18)
#loc10 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":36:32)
#loc11 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":37:18)
#loc12 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":38:18)
#loc13 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":267:36)
#loc15 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py":256:15)
#loc16 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":40:28)
#loc17 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":41:19)
#loc18 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":43:19)
#loc19 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":45:20)
#loc20 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":47:20)
#loc21 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":48:20)
#loc22 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":49:25)
#loc23 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":49:72)
#loc24 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":50:25)
#loc25 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":50:72)
#loc26 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":51:4)
#loc27 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":52:28)
#loc28 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":52:71)
#loc29 = loc("inductor_cache/3b/c3bbi5dz6cea5q2smeafkjghh6w7t3ms2x5nbq77bedz2rvxukj4.py":52:4)
#loc30 = loc(callsite(#loc13 at #loc14))
#loc32 = loc(callsite(#loc15 at #loc13))
#loc33 = loc(callsite(#loc32 at #loc14))
