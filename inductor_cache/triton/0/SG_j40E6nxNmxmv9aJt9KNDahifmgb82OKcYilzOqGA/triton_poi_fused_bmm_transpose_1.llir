; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_poi_fused_bmm_transpose_1(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, i32 %5) local_unnamed_addr !dbg !7 {
  %7 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #1, !dbg !10
  %8 = shl i32 %7, 8, !dbg !11
  %9 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %10 = shl i32 %9, 1, !dbg !12
  %11 = and i32 %10, 254, !dbg !12
  %12 = or disjoint i32 %8, %11, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = icmp slt i32 %12, 256, !dbg !14
  %.frozen = freeze i32 %12, !dbg !15
  %15 = sdiv i32 %.frozen, 4, !dbg !15
  %16 = mul i32 %15, 4, !dbg !16
  %.decomposed = sub i32 %.frozen, %16, !dbg !16
  %17 = insertelement <2 x i32> poison, i32 %15, i64 0, !dbg !17
  %18 = insertelement <2 x i32> %17, i32 %13, i64 1, !dbg !17
  %19 = srem <2 x i32> %18, <i32 16, i32 4>, !dbg !17
  %.frozen5 = freeze i32 %12, !dbg !18
  %20 = sdiv i32 %.frozen5, 64, !dbg !18
  %21 = extractelement <2 x i32> %19, i64 0, !dbg !19
  %.lhs.trunc = trunc nsw i32 %21 to i8, !dbg !20
  %22 = srem i8 %.lhs.trunc, 4, !dbg !20
  %.sext = sext i8 %22 to i32, !dbg !20
  %23 = shl nsw i32 %.sext, 2, !dbg !21
  %24 = shl nsw i32 %21, 2, !dbg !19
  %25 = mul i32 %20, 64, !dbg !22
  %srem.decomposed = sub i32 %.frozen5, %25, !dbg !22
  %26 = extractelement <2 x i32> %19, i64 1, !dbg !23
  %27 = add nsw i32 %24, %26, !dbg !22
  %.lhs.trunc1 = trunc nsw i32 %srem.decomposed to i8, !dbg !24
  %28 = sdiv i8 %.lhs.trunc1, 16, !dbg !24
  %.sext2 = sext i8 %28 to i32, !dbg !24
  %.lhs.trunc3 = trunc nsw i32 %27 to i8, !dbg !24
  %29 = sdiv i8 %.lhs.trunc3, 16, !dbg !24
  %.sext4 = sext i8 %29 to i32, !dbg !24
  %30 = shl nsw i32 %.sext2, 4, !dbg !25
  %31 = shl nsw i32 %.sext4, 4, !dbg !25
  %32 = shl nsw i32 %20, 6, !dbg !26
  %33 = add i32 %23, %32, !dbg !27
  %34 = add i32 %33, %.decomposed, !dbg !23
  %35 = add i32 %34, %30, !dbg !28
  %36 = add i32 %33, %26, !dbg !23
  %37 = add i32 %36, %31, !dbg !28
  %38 = sext i32 %35 to i64, !dbg !29
  %39 = getelementptr float, ptr addrspace(1) %0, i64 %38, !dbg !29
  %40 = sext i32 %37 to i64, !dbg !29
  %41 = getelementptr float, ptr addrspace(1) %0, i64 %40, !dbg !29
  %42 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %39, i1 %14) #1, !dbg !30
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %41, i1 %14) #1, !dbg !30
  %44 = sext i32 %12 to i64, !dbg !31
  %45 = getelementptr float, ptr addrspace(1) %1, i64 %44, !dbg !31
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %42, i32 %43, ptr addrspace(1) %45, i1 %14) #1, !dbg !32
  %46 = getelementptr float, ptr addrspace(1) %2, i64 %44, !dbg !33
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %42, i32 %43, ptr addrspace(1) %46, i1 %14) #1, !dbg !34
  %47 = getelementptr float, ptr addrspace(1) %3, i64 %44, !dbg !35
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %42, i32 %43, ptr addrspace(1) %47, i1 %14) #1, !dbg !36
  %48 = getelementptr float, ptr addrspace(1) %4, i64 %44, !dbg !37
  tail call void asm sideeffect "@$3 st.global.v2.b32 [ $2 + 0 ], { $0, $1 };", "r,r,l,b"(i32 %42, i32 %43, ptr addrspace(1) %48, i1 %14) #1, !dbg !38
  ret void, !dbg !39
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cgesai5oxgxpkx7jg6e6ppuufdp2o2o2kdi6djicsjglkp2rxl2e.py", directory: "inductor_cache/ge")
!4 = !{ptr @triton_poi_fused_bmm_transpose_1, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_bmm_transpose_1, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_bmm_transpose_1", linkageName: "triton_poi_fused_bmm_transpose_1", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 24, column: 19, scope: !7)
!17 = !DILocation(line: 25, column: 26, scope: !7)
!18 = !DILocation(line: 26, column: 19, scope: !7)
!19 = !DILocation(line: 28, column: 62, scope: !7)
!20 = !DILocation(line: 28, column: 44, scope: !7)
!21 = !DILocation(line: 28, column: 39, scope: !7)
!22 = !DILocation(line: 28, column: 60, scope: !7)
!23 = !DILocation(line: 28, column: 50, scope: !7)
!24 = !DILocation(line: 28, column: 69, scope: !7)
!25 = !DILocation(line: 28, column: 54, scope: !7)
!26 = !DILocation(line: 28, column: 78, scope: !7)
!27 = !DILocation(line: 28, column: 35, scope: !7)
!28 = !DILocation(line: 28, column: 75, scope: !7)
!29 = !DILocation(line: 28, column: 30, scope: !7)
!30 = !DILocation(line: 28, column: 83, scope: !7)
!31 = !DILocation(line: 29, column: 25, scope: !7)
!32 = !DILocation(line: 29, column: 36, scope: !7)
!33 = !DILocation(line: 30, column: 25, scope: !7)
!34 = !DILocation(line: 30, column: 36, scope: !7)
!35 = !DILocation(line: 31, column: 25, scope: !7)
!36 = !DILocation(line: 31, column: 36, scope: !7)
!37 = !DILocation(line: 32, column: 25, scope: !7)
!38 = !DILocation(line: 32, column: 36, scope: !7)
!39 = !DILocation(line: 32, column: 4, scope: !7)
