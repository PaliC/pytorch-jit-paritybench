//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused_pow_sum_29 // -- Begin function triton_red_fused_pow_sum_29
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused_pow_sum_29
.visible .entry triton_red_fused_pow_sum_29(
	.param .u64 .ptr .global .align 1 triton_red_fused_pow_sum_29_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused_pow_sum_29_param_1,
	.param .u32 triton_red_fused_pow_sum_29_param_2,
	.param .u32 triton_red_fused_pow_sum_29_param_3
)
.reqntid 128, 1, 1
{
	.reg .pred 	%p<22>;
	.reg .b32 	%r<43>;
	.reg .f32 	%f<31>;
	.reg .b64 	%rd<17>;
	.loc	1 19 0                          // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:19:0

// %bb.0:
	ld.param.u64 	%rd4, [triton_red_fused_pow_sum_29_param_1];
	ld.param.u64 	%rd3, [triton_red_fused_pow_sum_29_param_0];
$L__tmp0:
	.loc	1 22 28                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:22:28
	// begin inline asm
	mov.u32 %r8, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:22:33
	shl.b32 	%r9, %r8, 6;
	.loc	1 23 44                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:23:44
	mov.u32 	%r1, %tid.x;
	and.b32  	%r2, %r1, 63;
	.loc	1 23 23                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:23:23
	or.b32  	%r3, %r9, %r2;
	.loc	1 24 21                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:24:21
	setp.lt.s32 	%p5, %r3, 144;
	.loc	1 25 33                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:25:33
	bfe.u32 	%r4, %r1, 6, 1;
	.loc	1 27 19                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:27:19
	mul.hi.s32 	%r11, %r3, 954437177;
	shr.u32 	%r12, %r11, 31;
	shr.s32 	%r13, %r11, 1;
	add.s32 	%r14, %r13, %r12;
	.loc	1 30 36                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:30:36
	mad.lo.s32 	%r15, %r14, 1143, %r3;
	mad.lo.s32 	%r42, %r4, 9, %r15;
	mov.f32 	%f27, 0f00000000;
	mov.u64 	%rd16, -8;
	mov.f32 	%f28, %f27;
	mov.f32 	%f29, %f27;
	mov.f32 	%f30, %f27;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 36                          // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:0:36
	add.s32 	%r24, %r42, 18;
	add.s32 	%r25, %r42, 36;
	.loc	1 34 34                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:34:34
	add.s32 	%r26, %r42, 54;
	mul.wide.s32 	%rd10, %r42, 4;
	add.s64 	%rd6, %rd3, %rd10;
	mul.wide.s32 	%rd11, %r24, 4;
	add.s64 	%rd7, %rd3, %rd11;
	mul.wide.s32 	%rd12, %r25, 4;
	add.s64 	%rd8, %rd3, %rd12;
	mul.wide.s32 	%rd13, %r26, 4;
	add.s64 	%rd9, %rd3, %rd13;
	mov.b32 	%r17, 0;
	.loc	1 34 56                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:34:56
	// begin inline asm
	mov.u32 %r16, 0x0;
	@%p5 ld.global.L1::evict_first.b32 { %r16 }, [ %rd6 + 0 ];
	@!%p5 mov.u32 %r16, %r17;
	// end inline asm
	// begin inline asm
	mov.u32 %r18, 0x0;
	@%p5 ld.global.L1::evict_first.b32 { %r18 }, [ %rd7 + 0 ];
	@!%p5 mov.u32 %r18, %r17;
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	@%p5 ld.global.L1::evict_first.b32 { %r20 }, [ %rd8 + 0 ];
	@!%p5 mov.u32 %r20, %r17;
	// end inline asm
	// begin inline asm
	mov.u32 %r22, 0x0;
	@%p5 ld.global.L1::evict_first.b32 { %r22 }, [ %rd9 + 0 ];
	@!%p5 mov.u32 %r22, %r17;
	// end inline asm
	mov.b32 	%f13, %r16;
	mov.b32 	%f14, %r18;
	mov.b32 	%f15, %r20;
	mov.b32 	%f16, %r22;
	.loc	1 37 23                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:37:23
	fma.rn.f32 	%f17, %f16, %f16, %f30;
	fma.rn.f32 	%f18, %f15, %f15, %f29;
	fma.rn.f32 	%f19, %f14, %f14, %f28;
	fma.rn.f32 	%f20, %f13, %f13, %f27;
	.loc	1 38 46                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:38:46
	selp.f32 	%f27, %f20, %f27, %p5;
	selp.f32 	%f28, %f19, %f28, %p5;
	selp.f32 	%f29, %f18, %f29, %p5;
	selp.f32 	%f30, %f17, %f30, %p5;
	.loc	1 30 36                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:30:36
	add.s64 	%rd16, %rd16, 8;
	add.s32 	%r42, %r42, 72;
	setp.lt.u64 	%p13, %rd16, 120;
	@%p13 bra 	$L__BB0_1;
// %bb.2:
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f21, %f27, %f28;
	add.f32 	%f22, %f29, %f21;
	add.f32 	%f23, %f30, %f22;
	.loc	2 267 36                        // standard.py:267:36
	shl.b32 	%r34, %r4, 2;
	shl.b32 	%r35, %r2, 3;
	or.b32  	%r36, %r35, %r34;
	mov.u32 	%r37, global_smem;
	add.s32 	%r27, %r37, %r36;
	mov.b32 	%r28, %f23;
	mov.pred 	%p14, -1;
	// begin inline asm
	@%p14 st.shared.b32 [ %r27 + 0 ], %r28;
	// end inline asm
	bar.sync 	0;
	setp.lt.s32 	%p15, %r1, 128;
	shl.b32 	%r38, %r1, 2;
	add.s32 	%r30, %r37, %r38;
	// begin inline asm
	@%p15 ld.shared.b32 %r29, [ %r30 + 0 ];
	// end inline asm
	mov.b32 	%f24, %r29;
	shfl.sync.bfly.b32	%r39, %r29, 1, 31, -1;
	mov.b32 	%f25, %r39;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f26, %f24, %f25;
	.loc	2 267 36                        // standard.py:267:36
	and.b32  	%r40, %r1, 1;
	setp.eq.b32 	%p19, %r40, 1;
	not.pred 	%p20, %p19;
	and.pred  	%p16, %p15, %p20;
	mov.b32 	%r32, %f26;
	// begin inline asm
	@%p16 st.shared.b32 [ %r30 + 0 ], %r32;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r41, %r37, %r35;
	ld.shared.u32 	%r33, [%r41];
$L__tmp2:
	.loc	1 40 25                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:40:25
	mul.wide.s32 	%rd15, %r3, 4;
	add.s64 	%rd14, %rd4, %rd15;
	.loc	1 40 36                         // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:40:36
	setp.eq.s32 	%p21, %r4, 0;
	and.pred  	%p17, %p21, %p5;
	// begin inline asm
	@%p17 st.global.b32 [ %rd14 + 0 ], { %r33 };
	// end inline asm
	.loc	1 40 4                          // ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py:40:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/kc/ckcsfe37ot5orvioeqllotv73bfbuup4sf5szockxgxxha4fz7ux.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 172                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 107
.b8 99
.b8 115
.b8 102
.b8 101
.b8 51
.b8 55
.b8 111
.b8 116
.b8 53
.b8 111
.b8 114
.b8 118
.b8 105
.b8 111
.b8 101
.b8 113
.b8 108
.b8 108
.b8 111
.b8 116
.b8 118
.b8 55
.b8 51
.b8 98
.b8 102
.b8 98
.b8 117
.b8 117
.b8 112
.b8 52
.b8 115
.b8 102
.b8 53
.b8 115
.b8 122
.b8 111
.b8 99
.b8 107
.b8 120
.b8 103
.b8 120
.b8 120
.b8 104
.b8 97
.b8 52
.b8 102
.b8 122
.b8 55
.b8 117
.b8 120
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 107
.b8 99
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x1e DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 112
.b8 111
.b8 119
.b8 95
.b8 115
.b8 117
.b8 109
.b8 95
.b8 50
.b8 57
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x81:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x96:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 39                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
