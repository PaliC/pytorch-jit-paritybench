#blocked = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>
#loc = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0)
module attributes {"triton_gpu.num-ctas" = 1 : i32, "triton_gpu.num-warps" = 4 : i32, triton_gpu.target = "cuda:90", "triton_gpu.threads-per-warp" = 32 : i32} {
  tt.func public @triton_poi_fused__native_batch_norm_legit_no_training__unsafe_index_add_mul_relu_sub_24(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg1: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg2: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg4: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg5: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg8: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg9: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg10: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg11: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg12: !tt.ptr<i64> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg13: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0), %arg14: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":19:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<1.000000e+00> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<0> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<9.99999974E-6> : tensor<128xf32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<16> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<4> : tensor<128xi64, #blocked> loc(#loc1)
    %cst_5 = arith.constant dense<64> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_6 = arith.constant dense<8> : tensor<128xi32, #blocked> loc(#loc1)
    %cst_7 = arith.constant dense<2048> : tensor<128xi32, #blocked> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c128_i32 : i32 loc(#loc3)
    %2 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked> loc(#loc4)
    %3 = tt.splat %1 : i32 -> tensor<128xi32, #blocked> loc(#loc5)
    %4 = arith.addi %3, %2 : tensor<128xi32, #blocked> loc(#loc5)
    %5 = arith.cmpi slt, %4, %cst_7 : tensor<128xi32, #blocked> loc(#loc6)
    %6 = arith.divsi %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc7)
    %7 = arith.remsi %6, %cst_6 : tensor<128xi32, #blocked> loc(#loc8)
    %8 = arith.remsi %4, %cst_6 : tensor<128xi32, #blocked> loc(#loc9)
    %9 = arith.divsi %4, %cst_5 : tensor<128xi32, #blocked> loc(#loc10)
    %10 = arith.remsi %9, %cst_6 : tensor<128xi32, #blocked> loc(#loc11)
    %11 = tt.splat %arg1 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc12)
    %12 = tt.addptr %11, %7 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc12)
    %13 = tt.load %12, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc13)
    %14 = tt.splat %arg2 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc14)
    %15 = tt.addptr %14, %8 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc14)
    %16 = tt.load %15, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc15)
    %17 = tt.splat %arg4 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc16)
    %18 = tt.addptr %17, %8 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc16)
    %19 = tt.load %18, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc17)
    %20 = tt.splat %arg5 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc18)
    %21 = tt.addptr %20, %8 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc18)
    %22 = tt.load %21, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc19)
    %23 = tt.splat %arg6 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc20)
    %24 = tt.addptr %23, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc20)
    %25 = tt.load %24, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc21)
    %26 = tt.splat %arg7 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc22)
    %27 = tt.addptr %26, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc22)
    %28 = tt.load %27, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc23)
    %29 = tt.splat %arg8 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc24)
    %30 = tt.addptr %29, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc24)
    %31 = tt.load %30, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc25)
    %32 = tt.splat %arg9 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc26)
    %33 = tt.addptr %32, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc26)
    %34 = tt.load %33, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc27)
    %35 = tt.splat %arg10 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc28)
    %36 = tt.addptr %35, %10 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc28)
    %37 = tt.load %36, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc29)
    %38 = tt.splat %arg11 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc30)
    %39 = tt.addptr %38, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc30)
    %40 = tt.load %39, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc31)
    %41 = tt.splat %arg12 : !tt.ptr<i64> -> tensor<128x!tt.ptr<i64>, #blocked> loc(#loc32)
    %42 = tt.addptr %41, %7 : tensor<128x!tt.ptr<i64>, #blocked>, tensor<128xi32, #blocked> loc(#loc32)
    %43 = tt.load %42, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<i64>, #blocked> loc(#loc33)
    %44 = tt.splat %arg13 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc34)
    %45 = tt.addptr %44, %7 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc34)
    %46 = tt.load %45, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc35)
    %47 = arith.addi %13, %cst_4 : tensor<128xi64, #blocked> loc(#loc36)
    %48 = arith.cmpi slt, %13, %cst_1 : tensor<128xi64, #blocked> loc(#loc37)
    %49 = arith.select %48, %47, %13 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc38)
    %50 = arith.addi %16, %cst_4 : tensor<128xi64, #blocked> loc(#loc39)
    %51 = arith.cmpi slt, %16, %cst_1 : tensor<128xi64, #blocked> loc(#loc40)
    %52 = arith.select %51, %50, %16 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc41)
    %53 = arith.muli %49, %cst_4 : tensor<128xi64, #blocked> loc(#loc42)
    %54 = arith.addi %52, %53 : tensor<128xi64, #blocked> loc(#loc43)
    %55 = arith.muli %9, %cst_3 : tensor<128xi32, #blocked> loc(#loc44)
    %56 = arith.extsi %55 : tensor<128xi32, #blocked> to tensor<128xi64, #blocked> loc(#loc45)
    %57 = arith.addi %54, %56 : tensor<128xi64, #blocked> loc(#loc45)
    %58 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc46)
    %59 = tt.addptr %58, %57 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc46)
    %60 = tt.load %59, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc47)
    %61 = arith.addi %19, %cst_4 : tensor<128xi64, #blocked> loc(#loc48)
    %62 = arith.cmpi slt, %19, %cst_1 : tensor<128xi64, #blocked> loc(#loc49)
    %63 = arith.select %62, %61, %19 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc50)
    %64 = arith.addi %63, %53 : tensor<128xi64, #blocked> loc(#loc51)
    %65 = arith.addi %64, %56 : tensor<128xi64, #blocked> loc(#loc52)
    %66 = tt.addptr %58, %65 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc53)
    %67 = tt.load %66, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc54)
    %68 = arith.subf %67, %60 : tensor<128xf32, #blocked> loc(#loc55)
    %69 = arith.mulf %68, %22 : tensor<128xf32, #blocked> loc(#loc56)
    %70 = arith.addf %60, %69 : tensor<128xf32, #blocked> loc(#loc57)
    %71 = arith.subf %25, %28 : tensor<128xf32, #blocked> loc(#loc58)
    %72 = arith.addf %31, %cst_2 : tensor<128xf32, #blocked> loc(#loc59)
    %73 = tt.extern_elementwise %72 {libname = "", libpath = "", pure = true, symbol = "__nv_sqrtf"} : (tensor<128xf32, #blocked>) -> tensor<128xf32, #blocked> loc(#loc60)
    %74 = arith.divf %cst_0, %73 : tensor<128xf32, #blocked> loc(#loc61)
    %75 = arith.mulf %71, %74 : tensor<128xf32, #blocked> loc(#loc62)
    %76 = arith.mulf %75, %34 : tensor<128xf32, #blocked> loc(#loc63)
    %77 = arith.addf %76, %37 : tensor<128xf32, #blocked> loc(#loc64)
    %78 = arith.addf %77, %40 : tensor<128xf32, #blocked> loc(#loc65)
    %79 = arith.addi %43, %cst_4 : tensor<128xi64, #blocked> loc(#loc66)
    %80 = arith.cmpi slt, %43, %cst_1 : tensor<128xi64, #blocked> loc(#loc67)
    %81 = arith.select %80, %79, %43 : tensor<128xi1, #blocked>, tensor<128xi64, #blocked> loc(#loc68)
    %82 = arith.muli %81, %cst_4 : tensor<128xi64, #blocked> loc(#loc69)
    %83 = arith.addi %52, %82 : tensor<128xi64, #blocked> loc(#loc70)
    %84 = arith.addi %83, %56 : tensor<128xi64, #blocked> loc(#loc71)
    %85 = tt.addptr %58, %84 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc72)
    %86 = tt.load %85, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc73)
    %87 = arith.addi %63, %82 : tensor<128xi64, #blocked> loc(#loc74)
    %88 = arith.addi %87, %56 : tensor<128xi64, #blocked> loc(#loc75)
    %89 = tt.addptr %58, %88 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi64, #blocked> loc(#loc76)
    %90 = tt.load %89, %5 evictionPolicy = evict_last : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc77)
    %91 = arith.subf %90, %86 : tensor<128xf32, #blocked> loc(#loc78)
    %92 = arith.mulf %91, %22 : tensor<128xf32, #blocked> loc(#loc79)
    %93 = arith.addf %86, %92 : tensor<128xf32, #blocked> loc(#loc80)
    %94 = arith.subf %93, %70 : tensor<128xf32, #blocked> loc(#loc81)
    %95 = arith.mulf %94, %46 : tensor<128xf32, #blocked> loc(#loc82)
    %96 = arith.addf %70, %95 : tensor<128xf32, #blocked> loc(#loc83)
    %97 = arith.addf %78, %96 : tensor<128xf32, #blocked> loc(#loc84)
    %98 = arith.cmpf ogt, %cst, %97 : tensor<128xf32, #blocked> loc(#loc91)
    %99 = arith.select %98, %cst, %97 : tensor<128xi1, #blocked>, tensor<128xf32, #blocked> loc(#loc92)
    %100 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x!tt.ptr<f32>, #blocked> loc(#loc88)
    %101 = tt.addptr %100, %4 : tensor<128x!tt.ptr<f32>, #blocked>, tensor<128xi32, #blocked> loc(#loc88)
    tt.store %101, %99, %5 : tensor<128x!tt.ptr<f32>, #blocked> loc(#loc89)
    tt.return loc(#loc90)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":21:28)
#loc3 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":21:33)
#loc4 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":22:36)
#loc5 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":22:23)
#loc6 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":23:21)
#loc7 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":24:21)
#loc8 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":24:26)
#loc9 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":25:19)
#loc10 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":26:19)
#loc11 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":28:27)
#loc12 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":29:30)
#loc13 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":29:35)
#loc14 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":30:30)
#loc15 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":30:35)
#loc16 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":31:31)
#loc17 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":31:36)
#loc18 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":32:31)
#loc19 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":32:36)
#loc20 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":33:31)
#loc21 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":33:36)
#loc22 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":34:31)
#loc23 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":34:36)
#loc24 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":35:31)
#loc25 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":35:36)
#loc26 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":36:31)
#loc27 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":36:36)
#loc28 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":37:31)
#loc29 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":37:36)
#loc30 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":38:32)
#loc31 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":38:37)
#loc32 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":39:32)
#loc33 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":39:37)
#loc34 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":40:32)
#loc35 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":40:37)
#loc36 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":42:18)
#loc37 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":43:18)
#loc38 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":44:32)
#loc39 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":45:18)
#loc40 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":46:18)
#loc41 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":47:32)
#loc42 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":48:39)
#loc43 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":48:37)
#loc44 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":48:49)
#loc45 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":48:46)
#loc46 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":48:30)
#loc47 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":48:54)
#loc48 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":49:20)
#loc49 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":50:20)
#loc50 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":51:35)
#loc51 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":52:39)
#loc52 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":52:48)
#loc53 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":52:31)
#loc54 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":52:56)
#loc55 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":53:20)
#loc56 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":54:20)
#loc57 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":55:19)
#loc58 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":56:20)
#loc59 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":58:20)
#loc60 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":59:27)
#loc61 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":61:20)
#loc62 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":64:20)
#loc63 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":65:20)
#loc64 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":66:20)
#loc65 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":67:20)
#loc66 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":68:20)
#loc67 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":69:20)
#loc68 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":70:35)
#loc69 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":71:40)
#loc70 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":71:38)
#loc71 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":71:48)
#loc72 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":71:31)
#loc73 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":71:56)
#loc74 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":72:39)
#loc75 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":72:49)
#loc76 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":72:31)
#loc77 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":72:57)
#loc78 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":73:20)
#loc79 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":74:20)
#loc80 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":75:20)
#loc81 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":76:20)
#loc82 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":77:20)
#loc83 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":78:20)
#loc84 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":79:20)
#loc85 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc86 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":81:42)
#loc87 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc88 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":82:28)
#loc89 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":82:40)
#loc90 = loc("inductor_cache/kr/ckrmm25vyawrbds63ecfdkyqhiraf64uh3xmddw5gtxs2b66ng6b.py":82:4)
#loc91 = loc(callsite(#loc85 at #loc86))
#loc92 = loc(callsite(#loc87 at #loc86))
