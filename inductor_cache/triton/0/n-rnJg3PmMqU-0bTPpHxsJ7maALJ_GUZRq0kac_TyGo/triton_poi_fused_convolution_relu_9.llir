; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define void @triton_poi_fused_convolution_relu_9(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3) local_unnamed_addr !dbg !7 {
  %5 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %6 = shl i32 %5, 9, !dbg !11
  %7 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %8 = shl i32 %7, 1, !dbg !12
  %9 = and i32 %8, 510, !dbg !12
  %10 = and i32 %7, 255, !dbg !12
  %11 = or disjoint i32 %10, 256, !dbg !12
  %12 = or disjoint i32 %6, %9, !dbg !13
  %13 = or disjoint i32 %12, 1, !dbg !13
  %14 = or disjoint i32 %6, %10, !dbg !13
  %15 = or disjoint i32 %6, %11, !dbg !13
  %16 = icmp slt i32 %12, 864000, !dbg !14
  %17 = icmp slt i32 %14, 864000, !dbg !14
  %18 = icmp slt i32 %15, 864000, !dbg !14
  %19 = sdiv i32 %12, 3375, !dbg !15
  %20 = sdiv i32 %13, 3375, !dbg !15
  %.frozen = freeze i32 %14, !dbg !15
  %21 = sdiv i32 %.frozen, 3375, !dbg !15
  %.frozen1 = freeze i32 %15, !dbg !15
  %22 = sdiv i32 %.frozen1, 3375, !dbg !15
  %23 = srem i32 %19, 64, !dbg !16
  %24 = srem i32 %20, 64, !dbg !16
  %25 = mul i32 %21, 3375, !dbg !17
  %.decomposed = sub i32 %.frozen, %25, !dbg !17
  %26 = mul i32 %22, 3375, !dbg !17
  %.decomposed2 = sub i32 %.frozen1, %26, !dbg !17
  %27 = sext i32 %12 to i64, !dbg !18
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !18
  %29 = tail call { i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09@$3 ld.global.v2.b32 { $0, $1 }, [ $2 + 0 ];", "=r,=r,l,b"(ptr addrspace(1) %28, i1 %16) #2, !dbg !19
  %30 = extractvalue { i32, i32 } %29, 0, !dbg !19
  %31 = extractvalue { i32, i32 } %29, 1, !dbg !19
  %32 = bitcast i32 %30 to float, !dbg !19
  %33 = bitcast i32 %31 to float, !dbg !19
  %34 = sext i32 %23 to i64, !dbg !20
  %35 = getelementptr float, ptr addrspace(1) %1, i64 %34, !dbg !20
  %36 = sext i32 %24 to i64, !dbg !20
  %37 = getelementptr float, ptr addrspace(1) %1, i64 %36, !dbg !20
  %38 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %35, i1 %16) #2, !dbg !21
  %39 = bitcast i32 %38 to float, !dbg !21
  %40 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.L1::evict_last.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %37, i1 %16) #2, !dbg !21
  %41 = bitcast i32 %40 to float, !dbg !21
  %42 = fadd float %32, %39, !dbg !22
  %43 = fadd float %33, %41, !dbg !22
  %44 = fcmp olt float %42, 0.000000e+00, !dbg !23
  %45 = fcmp olt float %43, 0.000000e+00, !dbg !23
  %46 = select i1 %44, float 0.000000e+00, float %42, !dbg !27
  %47 = select i1 %45, float 0.000000e+00, float %43, !dbg !27
  %48 = mul i32 %21, 3392, !dbg !28
  %49 = mul i32 %22, 3392, !dbg !28
  %50 = add i32 %48, %.decomposed, !dbg !29
  %51 = add i32 %49, %.decomposed2, !dbg !29
  %52 = sext i32 %50 to i64, !dbg !30
  %53 = getelementptr float, ptr addrspace(1) %2, i64 %52, !dbg !30
  %54 = sext i32 %51 to i64, !dbg !30
  %55 = getelementptr float, ptr addrspace(1) %2, i64 %54, !dbg !30
  %56 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %9, !dbg !31
  %57 = bitcast float %46 to i32, !dbg !31
  %58 = bitcast float %47 to i32, !dbg !31
  tail call void asm sideeffect "@$3 st.shared.v2.b32 [ $0 + 0 ], { $1, $2 };", "r,r,r,b"(ptr addrspace(3) %56, i32 %57, i32 %58, i1 true) #2, !dbg !31
  tail call void @llvm.nvvm.barrier0(), !dbg !31
  %59 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %10, !dbg !31
  %60 = load i32, ptr addrspace(3) %59, align 4, !dbg !31
  %61 = getelementptr inbounds float, ptr addrspace(3) @global_smem, i32 %11, !dbg !31
  %62 = load i32, ptr addrspace(3) %61, align 4, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %60, ptr addrspace(1) %53, i1 %17) #2, !dbg !31
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %62, ptr addrspace(1) %55, i1 %18) #2, !dbg !31
  ret void, !dbg !32
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cpgpu4ij5n4ro6n5k5zbhbjdxgix55ktsafhh3lp572i7quedc54.py", directory: "inductor_cache/pg")
!4 = !{ptr @triton_poi_fused_convolution_relu_9, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_convolution_relu_9, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_convolution_relu_9", linkageName: "triton_poi_fused_convolution_relu_9", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 23, column: 21, scope: !7)
!15 = !DILocation(line: 25, column: 21, scope: !7)
!16 = !DILocation(line: 25, column: 29, scope: !7)
!17 = !DILocation(line: 26, column: 19, scope: !7)
!18 = !DILocation(line: 28, column: 30, scope: !7)
!19 = !DILocation(line: 28, column: 35, scope: !7)
!20 = !DILocation(line: 29, column: 30, scope: !7)
!21 = !DILocation(line: 29, column: 35, scope: !7)
!22 = !DILocation(line: 30, column: 18, scope: !7)
!23 = !DILocation(line: 118, column: 15, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 32, column: 40, scope: !7)
!27 = !DILocation(line: 121, column: 29, scope: !24, inlinedAt: !26)
!28 = !DILocation(line: 33, column: 35, scope: !7)
!29 = !DILocation(line: 33, column: 30, scope: !7)
!30 = !DILocation(line: 33, column: 25, scope: !7)
!31 = !DILocation(line: 33, column: 46, scope: !7)
!32 = !DILocation(line: 33, column: 4, scope: !7)
