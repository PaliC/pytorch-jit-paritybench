; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define void @triton_per_fused__softmax_4(ptr addrspace(1) %0, i32 %1, i32 %2) local_unnamed_addr !dbg !7 {
  %4 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #2, !dbg !10
  %5 = shl i32 %4, 5, !dbg !11
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %7 = lshr i32 %6, 5, !dbg !12
  %8 = and i32 %7, 7, !dbg !12
  %9 = or disjoint i32 %5, %8, !dbg !13
  %10 = or disjoint i32 %9, 8, !dbg !13
  %11 = or disjoint i32 %9, 16, !dbg !13
  %12 = or disjoint i32 %9, 24, !dbg !13
  %13 = icmp slt i32 %9, 68, !dbg !14
  %14 = icmp slt i32 %10, 68, !dbg !14
  %15 = icmp slt i32 %11, 68, !dbg !14
  %16 = icmp slt i32 %12, 68, !dbg !14
  %17 = and i32 %6, 31, !dbg !15
  %18 = icmp samesign ult i32 %17, 17, !dbg !16
  %19 = mul i32 %9, 17, !dbg !17
  %20 = mul i32 %10, 17, !dbg !17
  %21 = mul i32 %11, 17, !dbg !17
  %22 = mul i32 %12, 17, !dbg !17
  %23 = add i32 %19, %17, !dbg !18
  %24 = add i32 %20, %17, !dbg !18
  %25 = add i32 %21, %17, !dbg !18
  %26 = add i32 %22, %17, !dbg !18
  %27 = sext i32 %23 to i64, !dbg !19
  %28 = getelementptr float, ptr addrspace(1) %0, i64 %27, !dbg !19
  %29 = sext i32 %24 to i64, !dbg !19
  %30 = getelementptr float, ptr addrspace(1) %0, i64 %29, !dbg !19
  %31 = sext i32 %25 to i64, !dbg !19
  %32 = getelementptr float, ptr addrspace(1) %0, i64 %31, !dbg !19
  %33 = sext i32 %26 to i64, !dbg !19
  %34 = getelementptr float, ptr addrspace(1) %0, i64 %33, !dbg !19
  %35 = and i1 %18, %13, !dbg !20
  %36 = and i1 %18, %14, !dbg !20
  %37 = and i1 %18, %15, !dbg !20
  %38 = and i1 %18, %16, !dbg !20
  %39 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %28, i1 %35, i32 0, i1 %35) #2, !dbg !21
  %40 = bitcast i32 %39 to float, !dbg !21
  %41 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %30, i1 %36, i32 0, i1 %36) #2, !dbg !21
  %42 = bitcast i32 %41 to float, !dbg !21
  %43 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %32, i1 %37, i32 0, i1 %37) #2, !dbg !21
  %44 = bitcast i32 %43 to float, !dbg !21
  %45 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];\0A\09@!$4 mov.u32 $0, $3;", "=r,l,b,r,b"(ptr addrspace(1) %34, i1 %38, i32 0, i1 %38) #2, !dbg !21
  %46 = bitcast i32 %45 to float, !dbg !21
  %47 = select i1 %35, float %40, float 0xFFF0000000000000, !dbg !22
  %48 = select i1 %36, float %42, float 0xFFF0000000000000, !dbg !22
  %49 = select i1 %37, float %44, float 0xFFF0000000000000, !dbg !22
  %50 = select i1 %38, float %46, float 0xFFF0000000000000, !dbg !22
  %51 = bitcast float %47 to i32, !dbg !23
  %52 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %51, i32 16, i32 31), !dbg !23
  %53 = bitcast i32 %52 to float, !dbg !23
  %54 = fcmp ogt float %47, %53, !dbg !27
  %55 = fcmp uno float %47, 0.000000e+00, !dbg !29
  %56 = or i1 %55, %54, !dbg !30
  %57 = select i1 %56, float %47, float %53, !dbg !31
  %58 = bitcast float %57 to i32, !dbg !23
  %59 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %58, i32 8, i32 31), !dbg !23
  %60 = bitcast i32 %59 to float, !dbg !23
  %61 = fcmp ogt float %57, %60, !dbg !27
  %62 = fcmp uno float %57, 0.000000e+00, !dbg !29
  %63 = or i1 %61, %62, !dbg !30
  %64 = select i1 %63, float %57, float %60, !dbg !31
  %65 = bitcast float %64 to i32, !dbg !23
  %66 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %65, i32 4, i32 31), !dbg !23
  %67 = bitcast i32 %66 to float, !dbg !23
  %68 = fcmp ogt float %64, %67, !dbg !27
  %69 = fcmp uno float %64, 0.000000e+00, !dbg !29
  %70 = or i1 %68, %69, !dbg !30
  %71 = select i1 %70, float %64, float %67, !dbg !31
  %72 = bitcast float %71 to i32, !dbg !23
  %73 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %72, i32 2, i32 31), !dbg !23
  %74 = bitcast i32 %73 to float, !dbg !23
  %75 = fcmp ogt float %71, %74, !dbg !27
  %76 = fcmp uno float %71, 0.000000e+00, !dbg !29
  %77 = or i1 %75, %76, !dbg !30
  %78 = select i1 %77, float %71, float %74, !dbg !31
  %79 = bitcast float %78 to i32, !dbg !23
  %80 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %79, i32 1, i32 31), !dbg !23
  %81 = bitcast i32 %80 to float, !dbg !23
  %82 = fcmp ogt float %78, %81, !dbg !27
  %83 = fcmp uno float %78, 0.000000e+00, !dbg !29
  %84 = or i1 %82, %83, !dbg !30
  %85 = select i1 %84, float %78, float %81, !dbg !31
  %86 = bitcast float %48 to i32, !dbg !23
  %87 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %86, i32 16, i32 31), !dbg !23
  %88 = bitcast i32 %87 to float, !dbg !23
  %89 = fcmp ogt float %48, %88, !dbg !27
  %90 = fcmp uno float %48, 0.000000e+00, !dbg !29
  %91 = or i1 %90, %89, !dbg !30
  %92 = select i1 %91, float %48, float %88, !dbg !31
  %93 = bitcast float %92 to i32, !dbg !23
  %94 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %93, i32 8, i32 31), !dbg !23
  %95 = bitcast i32 %94 to float, !dbg !23
  %96 = fcmp ogt float %92, %95, !dbg !27
  %97 = fcmp uno float %92, 0.000000e+00, !dbg !29
  %98 = or i1 %96, %97, !dbg !30
  %99 = select i1 %98, float %92, float %95, !dbg !31
  %100 = bitcast float %99 to i32, !dbg !23
  %101 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %100, i32 4, i32 31), !dbg !23
  %102 = bitcast i32 %101 to float, !dbg !23
  %103 = fcmp ogt float %99, %102, !dbg !27
  %104 = fcmp uno float %99, 0.000000e+00, !dbg !29
  %105 = or i1 %103, %104, !dbg !30
  %106 = select i1 %105, float %99, float %102, !dbg !31
  %107 = bitcast float %106 to i32, !dbg !23
  %108 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %107, i32 2, i32 31), !dbg !23
  %109 = bitcast i32 %108 to float, !dbg !23
  %110 = fcmp ogt float %106, %109, !dbg !27
  %111 = fcmp uno float %106, 0.000000e+00, !dbg !29
  %112 = or i1 %110, %111, !dbg !30
  %113 = select i1 %112, float %106, float %109, !dbg !31
  %114 = bitcast float %113 to i32, !dbg !23
  %115 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %114, i32 1, i32 31), !dbg !23
  %116 = bitcast i32 %115 to float, !dbg !23
  %117 = fcmp ogt float %113, %116, !dbg !27
  %118 = fcmp uno float %113, 0.000000e+00, !dbg !29
  %119 = or i1 %117, %118, !dbg !30
  %120 = select i1 %119, float %113, float %116, !dbg !31
  %121 = bitcast float %49 to i32, !dbg !23
  %122 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %121, i32 16, i32 31), !dbg !23
  %123 = bitcast i32 %122 to float, !dbg !23
  %124 = fcmp ogt float %49, %123, !dbg !27
  %125 = fcmp uno float %49, 0.000000e+00, !dbg !29
  %126 = or i1 %125, %124, !dbg !30
  %127 = select i1 %126, float %49, float %123, !dbg !31
  %128 = bitcast float %127 to i32, !dbg !23
  %129 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %128, i32 8, i32 31), !dbg !23
  %130 = bitcast i32 %129 to float, !dbg !23
  %131 = fcmp ogt float %127, %130, !dbg !27
  %132 = fcmp uno float %127, 0.000000e+00, !dbg !29
  %133 = or i1 %131, %132, !dbg !30
  %134 = select i1 %133, float %127, float %130, !dbg !31
  %135 = bitcast float %134 to i32, !dbg !23
  %136 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %135, i32 4, i32 31), !dbg !23
  %137 = bitcast i32 %136 to float, !dbg !23
  %138 = fcmp ogt float %134, %137, !dbg !27
  %139 = fcmp uno float %134, 0.000000e+00, !dbg !29
  %140 = or i1 %138, %139, !dbg !30
  %141 = select i1 %140, float %134, float %137, !dbg !31
  %142 = bitcast float %141 to i32, !dbg !23
  %143 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %142, i32 2, i32 31), !dbg !23
  %144 = bitcast i32 %143 to float, !dbg !23
  %145 = fcmp ogt float %141, %144, !dbg !27
  %146 = fcmp uno float %141, 0.000000e+00, !dbg !29
  %147 = or i1 %145, %146, !dbg !30
  %148 = select i1 %147, float %141, float %144, !dbg !31
  %149 = bitcast float %148 to i32, !dbg !23
  %150 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %149, i32 1, i32 31), !dbg !23
  %151 = bitcast i32 %150 to float, !dbg !23
  %152 = fcmp ogt float %148, %151, !dbg !27
  %153 = fcmp uno float %148, 0.000000e+00, !dbg !29
  %154 = or i1 %152, %153, !dbg !30
  %155 = select i1 %154, float %148, float %151, !dbg !31
  %156 = bitcast float %50 to i32, !dbg !23
  %157 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %156, i32 16, i32 31), !dbg !23
  %158 = bitcast i32 %157 to float, !dbg !23
  %159 = fcmp ogt float %50, %158, !dbg !27
  %160 = fcmp uno float %50, 0.000000e+00, !dbg !29
  %161 = or i1 %160, %159, !dbg !30
  %162 = select i1 %161, float %50, float %158, !dbg !31
  %163 = bitcast float %162 to i32, !dbg !23
  %164 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %163, i32 8, i32 31), !dbg !23
  %165 = bitcast i32 %164 to float, !dbg !23
  %166 = fcmp ogt float %162, %165, !dbg !27
  %167 = fcmp uno float %162, 0.000000e+00, !dbg !29
  %168 = or i1 %166, %167, !dbg !30
  %169 = select i1 %168, float %162, float %165, !dbg !31
  %170 = bitcast float %169 to i32, !dbg !23
  %171 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %170, i32 4, i32 31), !dbg !23
  %172 = bitcast i32 %171 to float, !dbg !23
  %173 = fcmp ogt float %169, %172, !dbg !27
  %174 = fcmp uno float %169, 0.000000e+00, !dbg !29
  %175 = or i1 %173, %174, !dbg !30
  %176 = select i1 %175, float %169, float %172, !dbg !31
  %177 = bitcast float %176 to i32, !dbg !23
  %178 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %177, i32 2, i32 31), !dbg !23
  %179 = bitcast i32 %178 to float, !dbg !23
  %180 = fcmp ogt float %176, %179, !dbg !27
  %181 = fcmp uno float %176, 0.000000e+00, !dbg !29
  %182 = or i1 %180, %181, !dbg !30
  %183 = select i1 %182, float %176, float %179, !dbg !31
  %184 = bitcast float %183 to i32, !dbg !23
  %185 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %184, i32 1, i32 31), !dbg !23
  %186 = bitcast i32 %185 to float, !dbg !23
  %187 = fcmp ogt float %183, %186, !dbg !27
  %188 = fcmp uno float %183, 0.000000e+00, !dbg !29
  %189 = or i1 %187, %188, !dbg !30
  %190 = select i1 %189, float %183, float %186, !dbg !31
  %191 = fsub float %40, %85, !dbg !32
  %192 = fsub float %42, %120, !dbg !32
  %193 = fsub float %44, %155, !dbg !32
  %194 = fsub float %46, %190, !dbg !32
  %195 = fmul float %191, 0x3FF7154760000000, !dbg !33
  %196 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %195) #2, !dbg !33
  %197 = fmul float %192, 0x3FF7154760000000, !dbg !33
  %198 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %197) #2, !dbg !33
  %199 = fmul float %193, 0x3FF7154760000000, !dbg !33
  %200 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %199) #2, !dbg !33
  %201 = fmul float %194, 0x3FF7154760000000, !dbg !33
  %202 = tail call float asm "ex2.approx.f32 $0, $1;", "=f,f"(float %201) #2, !dbg !33
  %203 = select i1 %35, float %196, float 0.000000e+00, !dbg !34
  %204 = select i1 %36, float %198, float 0.000000e+00, !dbg !34
  %205 = select i1 %37, float %200, float 0.000000e+00, !dbg !34
  %206 = select i1 %38, float %202, float 0.000000e+00, !dbg !34
  %207 = bitcast float %203 to i32, !dbg !35
  %208 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %207, i32 16, i32 31), !dbg !35
  %209 = bitcast i32 %208 to float, !dbg !35
  %210 = fadd float %203, %209, !dbg !39
  %211 = bitcast float %210 to i32, !dbg !35
  %212 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %211, i32 8, i32 31), !dbg !35
  %213 = bitcast i32 %212 to float, !dbg !35
  %214 = fadd float %210, %213, !dbg !39
  %215 = bitcast float %214 to i32, !dbg !35
  %216 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %215, i32 4, i32 31), !dbg !35
  %217 = bitcast i32 %216 to float, !dbg !35
  %218 = fadd float %214, %217, !dbg !39
  %219 = bitcast float %218 to i32, !dbg !35
  %220 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %219, i32 2, i32 31), !dbg !35
  %221 = bitcast i32 %220 to float, !dbg !35
  %222 = fadd float %218, %221, !dbg !39
  %223 = bitcast float %222 to i32, !dbg !35
  %224 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %223, i32 1, i32 31), !dbg !35
  %225 = bitcast i32 %224 to float, !dbg !35
  %226 = fadd float %222, %225, !dbg !39
  %227 = bitcast float %204 to i32, !dbg !35
  %228 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %227, i32 16, i32 31), !dbg !35
  %229 = bitcast i32 %228 to float, !dbg !35
  %230 = fadd float %204, %229, !dbg !39
  %231 = bitcast float %230 to i32, !dbg !35
  %232 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %231, i32 8, i32 31), !dbg !35
  %233 = bitcast i32 %232 to float, !dbg !35
  %234 = fadd float %230, %233, !dbg !39
  %235 = bitcast float %234 to i32, !dbg !35
  %236 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %235, i32 4, i32 31), !dbg !35
  %237 = bitcast i32 %236 to float, !dbg !35
  %238 = fadd float %234, %237, !dbg !39
  %239 = bitcast float %238 to i32, !dbg !35
  %240 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %239, i32 2, i32 31), !dbg !35
  %241 = bitcast i32 %240 to float, !dbg !35
  %242 = fadd float %238, %241, !dbg !39
  %243 = bitcast float %242 to i32, !dbg !35
  %244 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %243, i32 1, i32 31), !dbg !35
  %245 = bitcast i32 %244 to float, !dbg !35
  %246 = fadd float %242, %245, !dbg !39
  %247 = bitcast float %205 to i32, !dbg !35
  %248 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %247, i32 16, i32 31), !dbg !35
  %249 = bitcast i32 %248 to float, !dbg !35
  %250 = fadd float %205, %249, !dbg !39
  %251 = bitcast float %250 to i32, !dbg !35
  %252 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %251, i32 8, i32 31), !dbg !35
  %253 = bitcast i32 %252 to float, !dbg !35
  %254 = fadd float %250, %253, !dbg !39
  %255 = bitcast float %254 to i32, !dbg !35
  %256 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %255, i32 4, i32 31), !dbg !35
  %257 = bitcast i32 %256 to float, !dbg !35
  %258 = fadd float %254, %257, !dbg !39
  %259 = bitcast float %258 to i32, !dbg !35
  %260 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %259, i32 2, i32 31), !dbg !35
  %261 = bitcast i32 %260 to float, !dbg !35
  %262 = fadd float %258, %261, !dbg !39
  %263 = bitcast float %262 to i32, !dbg !35
  %264 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %263, i32 1, i32 31), !dbg !35
  %265 = bitcast i32 %264 to float, !dbg !35
  %266 = fadd float %262, %265, !dbg !39
  %267 = bitcast float %206 to i32, !dbg !35
  %268 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %267, i32 16, i32 31), !dbg !35
  %269 = bitcast i32 %268 to float, !dbg !35
  %270 = fadd float %206, %269, !dbg !39
  %271 = bitcast float %270 to i32, !dbg !35
  %272 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %271, i32 8, i32 31), !dbg !35
  %273 = bitcast i32 %272 to float, !dbg !35
  %274 = fadd float %270, %273, !dbg !39
  %275 = bitcast float %274 to i32, !dbg !35
  %276 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %275, i32 4, i32 31), !dbg !35
  %277 = bitcast i32 %276 to float, !dbg !35
  %278 = fadd float %274, %277, !dbg !39
  %279 = bitcast float %278 to i32, !dbg !35
  %280 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %279, i32 2, i32 31), !dbg !35
  %281 = bitcast i32 %280 to float, !dbg !35
  %282 = fadd float %278, %281, !dbg !39
  %283 = bitcast float %282 to i32, !dbg !35
  %284 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %283, i32 1, i32 31), !dbg !35
  %285 = bitcast i32 %284 to float, !dbg !35
  %286 = fadd float %282, %285, !dbg !39
  %287 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %196, float %226) #2, !dbg !41
  %288 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %198, float %246) #2, !dbg !41
  %289 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %200, float %266) #2, !dbg !41
  %290 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %202, float %286) #2, !dbg !41
  %291 = bitcast float %287 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %291, ptr addrspace(1) %28, i1 %35) #2, !dbg !42
  %292 = bitcast float %288 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %292, ptr addrspace(1) %30, i1 %36) #2, !dbg !42
  %293 = bitcast float %289 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %293, ptr addrspace(1) %32, i1 %37) #2, !dbg !42
  %294 = bitcast float %290 to i32, !dbg !42
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %294, ptr addrspace(1) %34, i1 %38) #2, !dbg !42
  ret void, !dbg !43
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #1

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "ctnbbocbqg4rxujbqjpjqkbirhic7dlaek7wkasuk5vuikybfpm2.py", directory: "inductor_cache/tn")
!4 = !{ptr @triton_per_fused__softmax_4, !"kernel", i32 1}
!5 = !{ptr @triton_per_fused__softmax_4, !"reqntidx", i32 256}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_per_fused__softmax_4", linkageName: "triton_per_fused__softmax_4", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 23, column: 28, scope: !7)
!11 = !DILocation(line: 23, column: 33, scope: !7)
!12 = !DILocation(line: 24, column: 44, scope: !7)
!13 = !DILocation(line: 24, column: 23, scope: !7)
!14 = !DILocation(line: 25, column: 21, scope: !7)
!15 = !DILocation(line: 26, column: 34, scope: !7)
!16 = !DILocation(line: 28, column: 21, scope: !7)
!17 = !DILocation(line: 31, column: 42, scope: !7)
!18 = !DILocation(line: 31, column: 39, scope: !7)
!19 = !DILocation(line: 31, column: 34, scope: !7)
!20 = !DILocation(line: 31, column: 55, scope: !7)
!21 = !DILocation(line: 31, column: 47, scope: !7)
!22 = !DILocation(line: 33, column: 41, scope: !7)
!23 = !DILocation(line: 131, column: 29, scope: !24, inlinedAt: !26)
!24 = distinct !DILexicalBlockFile(scope: !7, file: !25, discriminator: 0)
!25 = !DIFile(filename: "triton_helpers.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime")
!26 = !DILocation(line: 34, column: 37, scope: !7)
!27 = !DILocation(line: 118, column: 15, scope: !28, inlinedAt: !26)
!28 = distinct !DILexicalBlockFile(scope: !24, file: !25, discriminator: 0)
!29 = !DILocation(line: 120, column: 21, scope: !28, inlinedAt: !26)
!30 = !DILocation(line: 120, column: 16, scope: !28, inlinedAt: !26)
!31 = !DILocation(line: 121, column: 29, scope: !28, inlinedAt: !26)
!32 = !DILocation(line: 35, column: 18, scope: !7)
!33 = !DILocation(line: 36, column: 23, scope: !7)
!34 = !DILocation(line: 38, column: 41, scope: !7)
!35 = !DILocation(line: 267, column: 36, scope: !36, inlinedAt: !38)
!36 = distinct !DILexicalBlockFile(scope: !7, file: !37, discriminator: 0)
!37 = !DIFile(filename: "standard.py", directory: "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language")
!38 = !DILocation(line: 39, column: 25, scope: !7)
!39 = !DILocation(line: 256, column: 15, scope: !40, inlinedAt: !38)
!40 = distinct !DILexicalBlockFile(scope: !36, file: !37, discriminator: 0)
!41 = !DILocation(line: 40, column: 19, scope: !7)
!42 = !DILocation(line: 41, column: 48, scope: !7)
!43 = !DILocation(line: 41, column: 4, scope: !7)
