; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1
@__cudart_i2opi_f = internal unnamed_addr addrspace(1) constant [6 x i32] [i32 1011060801, i32 -614296167, i32 -181084736, i32 -64530479, i32 1313084713, i32 -1560706194], align 4

define void @triton_poi_fused_cat_0(ptr addrspace(1) %0, i32 %1) local_unnamed_addr !dbg !7 {
  %result.i.i.i.i117 = alloca [7 x i32], align 4
  %result.i.i.i.i64 = alloca [7 x i32], align 4
  %result.i.i.i.i9 = alloca [7 x i32], align 4
  %result.i.i.i.i = alloca [7 x i32], align 4
  %3 = tail call i32 asm "mov.u32 $0, %ctaid.x;", "=r"() #5, !dbg !10
  %4 = shl i32 %3, 7, !dbg !11
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !12
  %6 = and i32 %5, 127, !dbg !12
  %7 = or disjoint i32 %4, %6, !dbg !13
  %.frozen = freeze i32 %7, !dbg !14
  %8 = sdiv i32 %.frozen, 128, !dbg !14
  %9 = mul i32 %8, 128, !dbg !15
  %.decomposed = sub i32 %.frozen, %9, !dbg !15
  %10 = sdiv i32 %7, 512, !dbg !16
  %11 = srem i32 %10, 4, !dbg !17
  %12 = srem i32 %8, 4, !dbg !18
  %.lhs.trunc444 = trunc nsw i32 %.decomposed to i8, !dbg !19
  %13 = sdiv i8 %.lhs.trunc444, 2, !dbg !19
  %14 = srem i8 %13, 32, !dbg !20
  %.sext447 = sext i8 %14 to i32, !dbg !20
  %15 = shl nsw i32 %.sext447, 1, !dbg !21
  %16 = sitofp i32 %15 to float, !dbg !22
  %17 = fmul float %16, 5.000000e-01, !dbg !23
  %18 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !24
  %.not.i = icmp eq i32 %18, 0, !dbg !24
  %19 = tail call float @llvm.nvvm.floor.ftz.f(float %17), !dbg !24
  %20 = tail call float @llvm.nvvm.floor.f(float %17), !dbg !24
  %.0.i = select i1 %.not.i, float %20, float %19, !dbg !24
  %21 = fmul float %.0.i, 2.000000e+00, !dbg !25
  %22 = fmul float %21, 1.562500e-02, !dbg !26
  %23 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %24 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not.i172 = icmp eq i32 %24, 0, !dbg !27
  %25 = tail call float @llvm.nvvm.fabs.ftz.f(float 1.000000e+04) #5, !dbg !27
  %26 = tail call float @llvm.nvvm.fabs.f(float 1.000000e+04) #5, !dbg !27
  %.09.i173 = select i1 %.not.i172, float %26, float %25, !dbg !27
  %27 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not12.i = icmp eq i32 %27, 0, !dbg !27
  %28 = fcmp olt float %.09.i173, 0x3810000000000000, !dbg !27
  %29 = fmul float %.09.i173, 0x4170000000000000, !dbg !27
  %30 = select i1 %.not12.i, i1 %28, i1 false, !dbg !27
  %.116.i = select i1 %30, float %29, float %.09.i173, !dbg !27
  %expo.i.i.1.i = select i1 %30, float -1.510000e+02, float -1.270000e+02, !dbg !27
  %31 = bitcast float %.116.i to i32, !dbg !27
  %32 = and i32 %31, 8388607, !dbg !27
  %33 = or disjoint i32 %32, 1065353216, !dbg !27
  %34 = bitcast i32 %33 to float, !dbg !27
  %35 = lshr i32 %31, 23, !dbg !27
  %36 = uitofp nneg i32 %35 to float, !dbg !27
  %37 = fadd float %expo.i.i.1.i, %36, !dbg !27
  %38 = fcmp ogt float %34, 0x3FF6A09E60000000, !dbg !27
  %39 = fmul float %34, 5.000000e-01, !dbg !27
  %40 = fadd float %37, 1.000000e+00, !dbg !27
  %expo.i.i.2.i = select i1 %38, float %40, float %37, !dbg !27
  %m.i.i.0.i = select i1 %38, float %39, float %34, !dbg !27
  %41 = fadd float %m.i.i.0.i, -1.000000e+00, !dbg !27
  %42 = fadd float %m.i.i.0.i, 1.000000e+00, !dbg !27
  %43 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %42) #6, !dbg !27, !srcloc !28
  %44 = fmul float %41, 2.000000e+00, !dbg !27
  %45 = fmul float %43, %44, !dbg !27
  %46 = fmul float %45, %45, !dbg !27
  %47 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not13.i = icmp eq i32 %47, 0, !dbg !27
  %48 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %46, float 0x3F8995EC60000000) #5, !dbg !27
  %49 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %46, float 0x3F8995EC60000000) #5, !dbg !27
  %.020.i = select i1 %.not13.i, float %49, float %48, !dbg !27
  %50 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not14.i = icmp eq i32 %50, 0, !dbg !27
  %51 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i, float %46, float 0x3FB55557A0000000) #5, !dbg !27
  %52 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i, float %46, float 0x3FB55557A0000000) #5, !dbg !27
  %.021.i = select i1 %.not14.i, float %52, float %51, !dbg !27
  %53 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not15.i174 = icmp eq i32 %53, 0, !dbg !27
  %54 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i, float %46) #5, !dbg !27
  %55 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i, float %46) #5, !dbg !27
  %.022.i = select i1 %.not15.i174, float %55, float %54, !dbg !27
  %56 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not16.i175 = icmp eq i32 %56, 0, !dbg !27
  %57 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i, float %45) #5, !dbg !27
  %58 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i, float %45) #5, !dbg !27
  %.024.i = select i1 %.not16.i175, float %58, float %57, !dbg !27
  %59 = fsub float %41, %45, !dbg !27
  %60 = fmul float %59, 2.000000e+00, !dbg !27
  %61 = fneg float %45, !dbg !27
  %62 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not17.i176 = icmp eq i32 %62, 0, !dbg !27
  %63 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %61, float %41, float %60) #5, !dbg !27
  %64 = tail call float @llvm.nvvm.fma.rn.f(float %61, float %41, float %60) #5, !dbg !27
  %.025.i = select i1 %.not17.i176, float %64, float %63, !dbg !27
  %65 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not18.i177 = icmp eq i32 %65, 0, !dbg !27
  %66 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %43, float %.025.i) #5, !dbg !27
  %67 = tail call float @llvm.nvvm.mul.rn.f(float %43, float %.025.i) #5, !dbg !27
  %.026.i = select i1 %.not18.i177, float %67, float %66, !dbg !27
  %68 = fadd float %45, %.024.i, !dbg !27
  %69 = fsub float %45, %68, !dbg !27
  %70 = fadd float %.024.i, %69, !dbg !27
  %71 = fadd float %.026.i, %70, !dbg !27
  %72 = fadd float %68, %71, !dbg !27
  %73 = fsub float %68, %72, !dbg !27
  %74 = fadd float %71, %73, !dbg !27
  %75 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not19.i178 = icmp eq i32 %75, 0, !dbg !27
  %76 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !27
  %77 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3FE62E4000000000) #5, !dbg !27
  %.019.i = select i1 %.not19.i178, float %77, float %76, !dbg !27
  %78 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not20.i179 = icmp eq i32 %78, 0, !dbg !27
  %79 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !27
  %80 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i, float 0x3EB7F7D1C0000000) #5, !dbg !27
  %.018.i = select i1 %.not20.i179, float %80, float %79, !dbg !27
  %81 = fadd float %.019.i, %72, !dbg !27
  %82 = fsub float %.019.i, %81, !dbg !27
  %83 = fadd float %72, %82, !dbg !27
  %84 = fadd float %74, %83, !dbg !27
  %85 = fadd float %.018.i, %84, !dbg !27
  %86 = fadd float %81, %85, !dbg !27
  %87 = fsub float %81, %86, !dbg !27
  %88 = fadd float %85, %87, !dbg !27
  %89 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not21.i = icmp eq i32 %89, 0, !dbg !27
  %90 = tail call float @llvm.nvvm.fabs.ftz.f(float %22) #5, !dbg !27
  %91 = tail call float @llvm.nvvm.fabs.f(float %22) #5, !dbg !27
  %.027.i = select i1 %.not21.i, float %91, float %90, !dbg !27
  %92 = fcmp ogt float %.027.i, 0x46FED09BE0000000, !dbg !27
  %93 = fmul float %22, 0x3F20000000000000, !dbg !27
  %.013.i180 = select i1 %92, float %93, float %22, !dbg !27
  %94 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not22.i = icmp eq i32 %94, 0, !dbg !27
  %95 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i180, float %86) #5, !dbg !27
  %96 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i180, float %86) #5, !dbg !27
  %.028.i = select i1 %.not22.i, float %96, float %95, !dbg !27
  %97 = fneg float %.028.i, !dbg !27
  %98 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not23.i = icmp eq i32 %98, 0, !dbg !27
  %99 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i180, float %86, float %97) #5, !dbg !27
  %100 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i180, float %86, float %97) #5, !dbg !27
  %.029.i = select i1 %.not23.i, float %100, float %99, !dbg !27
  %101 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not24.i = icmp eq i32 %101, 0, !dbg !27
  %102 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i180, float %88, float %.029.i) #5, !dbg !27
  %103 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i180, float %88, float %.029.i) #5, !dbg !27
  %.030.i = select i1 %.not24.i, float %103, float %102, !dbg !27
  %104 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not25.i = icmp eq i32 %104, 0, !dbg !27
  %105 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %86, float %.030.i) #5, !dbg !27
  %106 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %86, float %.030.i) #5, !dbg !27
  %.031.i = select i1 %.not25.i, float %106, float %105, !dbg !27
  %107 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not26.i = icmp eq i32 %107, 0, !dbg !27
  %108 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %.031.i) #5, !dbg !27
  %109 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %.031.i) #5, !dbg !27
  %.032.i = select i1 %.not26.i, float %109, float %108, !dbg !27
  %110 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %111 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %112 = bitcast float %.032.i to i32, !dbg !27
  %113 = icmp eq i32 %112, 1118925336, !dbg !27
  %prod.i.145.0.i = select i1 %113, float 0x40562E42E0000000, float %.032.i, !dbg !27
  %114 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not29.i183 = icmp eq i32 %114, 0, !dbg !27
  %115 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !27
  %116 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i, float 0x3FF7154760000000) #5, !dbg !27
  %.017.i = select i1 %.not29.i183, float %116, float %115, !dbg !27
  %117 = tail call float @llvm.nvvm.trunc.f(float %.017.i) #5, !dbg !27
  %118 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not30.i184 = icmp eq i32 %118, 0, !dbg !27
  %119 = tail call float @llvm.nvvm.fabs.ftz.f(float %117) #5, !dbg !27
  %120 = tail call float @llvm.nvvm.fabs.f(float %117) #5, !dbg !27
  %.023.i = select i1 %.not30.i184, float %120, float %119, !dbg !27
  %121 = fcmp ogt float %.023.i, 1.260000e+02, !dbg !27
  %122 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %117), !dbg !27
  %j.i.i.0.i = select i1 %121, float %122, float %117, !dbg !27
  %123 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not31.i185 = icmp eq i32 %123, 0, !dbg !27
  %124 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !27
  %125 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0xBFE62E4300000000, float %prod.i.145.0.i) #5, !dbg !27
  %.035.i = select i1 %.not31.i185, float %125, float %124, !dbg !27
  %126 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not32.i186 = icmp eq i32 %126, 0, !dbg !27
  %127 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !27
  %128 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i, float 0x3E205C6100000000, float %.035.i) #5, !dbg !27
  %.036.i = select i1 %.not32.i186, float %128, float %127, !dbg !27
  %129 = fmul float %.036.i, 0x3FF7154760000000, !dbg !27
  %130 = fadd float %j.i.i.0.i, 0x4168000FE0000000, !dbg !27
  %131 = bitcast float %130 to i32, !dbg !27
  %132 = shl i32 %131, 23, !dbg !27
  %133 = bitcast i32 %132 to float, !dbg !27
  %134 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %129) #5, !dbg !27
  %135 = fmul float %134, %133, !dbg !27
  %136 = fcmp une float %135, 0x7FF0000000000000, !dbg !27
  br i1 %136, label %__internal_fmad.exit.i.i, label %__internal_powf_corner_cases.exit.i, !dbg !27

__internal_fmad.exit.i.i:                         ; preds = %2
  %.not28.i182 = icmp eq i32 %111, 0, !dbg !27
  %.not27.i181 = icmp eq i32 %110, 0, !dbg !27
  %137 = fneg float %.032.i, !dbg !27
  %138 = tail call float @llvm.nvvm.add.rn.f(float %.028.i, float %137) #5, !dbg !27
  %139 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i, float %137) #5, !dbg !27
  %.033.i = select i1 %.not27.i181, float %138, float %139, !dbg !27
  %140 = tail call float @llvm.nvvm.add.rn.f(float %.033.i, float %.031.i) #5, !dbg !27
  %141 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i, float %.031.i) #5, !dbg !27
  %.034.i = select i1 %.not28.i182, float %140, float %141, !dbg !27
  %142 = fadd float %.034.i, 0x3EE0000000000000, !dbg !27
  %prod.i.044.0.i = select i1 %113, float %142, float %.034.i, !dbg !27
  %143 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not33.i197 = icmp eq i32 %143, 0, !dbg !27
  %144 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %135, float %prod.i.044.0.i, float %135) #5, !dbg !27
  %145 = tail call float @llvm.nvvm.fma.rn.f(float %135, float %prod.i.044.0.i, float %135) #5, !dbg !27
  %.014.i = select i1 %.not33.i197, float %145, float %144, !dbg !27
  br label %__internal_powf_corner_cases.exit.i, !dbg !27

__internal_powf_corner_cases.exit.i:              ; preds = %__internal_fmad.exit.i.i, %2
  %t.i.0.i = phi float [ %.014.i, %__internal_fmad.exit.i.i ], [ 0x7FF0000000000000, %2 ], !dbg !27
  %146 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not34.i187 = icmp eq i32 %146, 0, !dbg !27
  %.01.i188 = select i1 %.not34.i187, float %26, float %25, !dbg !27
  %147 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not35.i189 = icmp eq i32 %147, 0, !dbg !27
  %.02.i190 = select i1 %.not35.i189, float %91, float %90, !dbg !27
  %148 = fadd float %.01.i188, %.02.i190, !dbg !27
  %149 = bitcast float %148 to i32, !dbg !27
  %150 = icmp sgt i32 %149, 2139095039, !dbg !27
  br i1 %150, label %__nv_isnanf.exit.i.i, label %__nv_powf.exit, !dbg !27

__nv_isnanf.exit.i.i:                             ; preds = %__internal_powf_corner_cases.exit.i
  %151 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not36.i191 = icmp eq i32 %151, 0, !dbg !27
  %.06.i192 = select i1 %.not36.i191, float %26, float %25, !dbg !27
  %152 = fcmp uno float %.06.i192, 0.000000e+00, !dbg !27
  br i1 %152, label %155, label %__nv_isnanf.exit11.i.i, !dbg !27

__nv_isnanf.exit11.i.i:                           ; preds = %__nv_isnanf.exit.i.i
  %153 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not37.i = icmp eq i32 %153, 0, !dbg !27
  %.07.i193 = select i1 %.not37.i, float %91, float %90, !dbg !27
  %154 = fcmp uno float %.07.i193, 0.000000e+00, !dbg !27
  br i1 %154, label %155, label %__nv_isinff.exit8.i.i, !dbg !27

155:                                              ; preds = %__nv_isnanf.exit11.i.i, %__nv_isnanf.exit.i.i
  %156 = fadd float %22, 1.000000e+04, !dbg !27
  br label %__nv_powf.exit, !dbg !27

__nv_isinff.exit8.i.i:                            ; preds = %__nv_isnanf.exit11.i.i
  %157 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not38.i = icmp eq i32 %157, 0, !dbg !27
  %.05.i194 = select i1 %.not38.i, float %91, float %90, !dbg !27
  %158 = fcmp oeq float %.05.i194, 0x7FF0000000000000, !dbg !27
  %159 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !27
  %.not40.i = icmp eq i32 %159, 0, !dbg !27
  %.04.i196 = select i1 %.not40.i, float %26, float %25, !dbg !27
  br i1 %158, label %__nv_fabsf.exit5.i.i, label %__nv_isinff.exit.i.i, !dbg !27

__nv_fabsf.exit5.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %160 = fcmp ogt float %.04.i196, 1.000000e+00, !dbg !27
  %ti.i.0.i = select i1 %160, i32 2139095040, i32 0, !dbg !27
  %161 = fcmp olt float %22, 0.000000e+00, !dbg !27
  %162 = xor i32 %ti.i.0.i, 2139095040, !dbg !27
  %ti.i.1.i = select i1 %161, i32 %162, i32 %ti.i.0.i, !dbg !27
  %163 = bitcast i32 %ti.i.1.i to float, !dbg !27
  br label %__nv_powf.exit, !dbg !27

__nv_isinff.exit.i.i:                             ; preds = %__nv_isinff.exit8.i.i
  %164 = fcmp oeq float %.04.i196, 0x7FF0000000000000, !dbg !27
  br i1 %164, label %165, label %__nv_powf.exit, !dbg !27

165:                                              ; preds = %__nv_isinff.exit.i.i
  %166 = fcmp oge float %22, 0.000000e+00, !dbg !27
  %167 = select i1 %166, float 0x7FF0000000000000, float 0.000000e+00, !dbg !27
  br label %__nv_powf.exit, !dbg !27

__nv_powf.exit:                                   ; preds = %__internal_powf_corner_cases.exit.i, %155, %__nv_fabsf.exit5.i.i, %__nv_isinff.exit.i.i, %165
  %.3.i = phi float [ %t.i.0.i, %__internal_powf_corner_cases.exit.i ], [ %156, %155 ], [ %163, %__nv_fabsf.exit5.i.i ], [ %167, %165 ], [ %t.i.0.i, %__nv_isinff.exit.i.i ], !dbg !27
  %168 = fcmp oeq float %22, 0.000000e+00, !dbg !27
  %t.0.i = select i1 %168, float 1.000000e+00, float %.3.i, !dbg !27
  %169 = add nsw i32 %11, 1, !dbg !29
  %170 = sitofp i32 %169 to float, !dbg !30
  %171 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %170, float %t.0.i) #5, !dbg !31
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  %172 = fmul float %171, 0x3FE45F3060000000, !dbg !32
  %173 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not.i7 = icmp eq i32 %173, 0, !dbg !32
  %174 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %172) #5, !dbg !32
  %175 = tail call i32 @llvm.nvvm.f2i.rn(float %172) #5, !dbg !32
  %.01.i = select i1 %.not.i7, i32 %175, i32 %174, !dbg !32
  %176 = sitofp i32 %.01.i to float, !dbg !32
  %177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not15.i = icmp eq i32 %177, 0, !dbg !32
  %178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %176, float 0xBFF921FB40000000, float %171) #5, !dbg !32
  %179 = tail call float @llvm.nvvm.fma.rn.f(float %176, float 0xBFF921FB40000000, float %171) #5, !dbg !32
  %.02.i = select i1 %.not15.i, float %179, float %178, !dbg !32
  %180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not16.i = icmp eq i32 %180, 0, !dbg !32
  %181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %176, float 0xBE74442D00000000, float %.02.i) #5, !dbg !32
  %182 = tail call float @llvm.nvvm.fma.rn.f(float %176, float 0xBE74442D00000000, float %.02.i) #5, !dbg !32
  %.03.i = select i1 %.not16.i, float %182, float %181, !dbg !32
  %183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not17.i = icmp eq i32 %183, 0, !dbg !32
  %184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %176, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !32
  %185 = tail call float @llvm.nvvm.fma.rn.f(float %176, float 0xBCF84698A0000000, float %.03.i) #5, !dbg !32
  %.04.i = select i1 %.not17.i, float %185, float %184, !dbg !32
  %186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not18.i = icmp eq i32 %186, 0, !dbg !32
  %187 = tail call float @llvm.nvvm.fabs.ftz.f(float %171) #5, !dbg !32
  %188 = tail call float @llvm.nvvm.fabs.f(float %171) #5, !dbg !32
  %.06.i = select i1 %.not18.i, float %188, float %187, !dbg !32
  %189 = fcmp ult float %.06.i, 1.056150e+05, !dbg !32
  br i1 %189, label %__internal_trig_reduction_kernel.exit.i.i, label %__nv_isinff.exit.i.i.i, !dbg !32

__nv_isinff.exit.i.i.i:                           ; preds = %__nv_powf.exit
  %190 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not19.i = icmp eq i32 %190, 0, !dbg !32
  %.07.i = select i1 %.not19.i, float %188, float %187, !dbg !32
  %191 = fcmp oeq float %.07.i, 0x7FF0000000000000, !dbg !32
  br i1 %191, label %__nv_fmul_rn.exit.i.i.i, label %195, !dbg !32

__nv_fmul_rn.exit.i.i.i:                          ; preds = %__nv_isinff.exit.i.i.i
  %192 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not27.i = icmp eq i32 %192, 0, !dbg !32
  %193 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %171, float 0.000000e+00) #5, !dbg !32
  %194 = tail call float @llvm.nvvm.mul.rn.f(float %171, float 0.000000e+00) #5, !dbg !32
  %.08.i = select i1 %.not27.i, float %194, float %193, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

195:                                              ; preds = %__nv_isinff.exit.i.i.i
  %196 = bitcast float %171 to i32, !dbg !32
  %197 = lshr i32 %196, 23, !dbg !32
  %198 = and i32 %197, 224, !dbg !32
  %199 = add nsw i32 %198, -128, !dbg !32
  %200 = shl i32 %196, 8, !dbg !32
  %201 = or i32 %200, -2147483648, !dbg !32
  %202 = lshr exact i32 %199, 5, !dbg !32
  br label %203, !dbg !32

203:                                              ; preds = %195, %203
  %indvars.iv = phi i64 [ 0, %195 ], [ %indvars.iv.next, %203 ]
  %hi.i.i.i.0.i448 = phi i32 [ 0, %195 ], [ %208, %203 ]
  %204 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv, !dbg !32
  %205 = load i32, ptr addrspace(1) %204, align 4, !dbg !32
  %206 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %205, i32 %201, i32 %hi.i.i.i.0.i448) #6, !dbg !32, !srcloc !33
  %207 = extractvalue { i32, i32 } %206, 0, !dbg !32
  %208 = extractvalue { i32, i32 } %206, 1, !dbg !32
  %209 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %indvars.iv, !dbg !32
  store i32 %207, ptr %209, align 4, !dbg !32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !32
  %exitcond.not = icmp eq i64 %indvars.iv.next, 6, !dbg !32
  br i1 %exitcond.not, label %210, label %203, !dbg !32, !llvm.loop !34

210:                                              ; preds = %203
  %211 = getelementptr inbounds i8, ptr %result.i.i.i.i, i64 24, !dbg !32
  store i32 %208, ptr %211, align 4, !dbg !32
  %212 = and i32 %197, 31, !dbg !32
  %213 = sub nsw i32 6, %202, !dbg !32
  %214 = sext i32 %213 to i64, !dbg !32
  %215 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %214, !dbg !32
  %216 = load i32, ptr %215, align 4, !dbg !32
  %217 = sub nsw i32 5, %202, !dbg !32
  %218 = sext i32 %217 to i64, !dbg !32
  %219 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %218, !dbg !32
  %220 = load i32, ptr %219, align 4, !dbg !32
  %.not20.i = icmp eq i32 %212, 0, !dbg !32
  br i1 %.not20.i, label %__internal_trig_reduction_slowpath.exit.i.i.i, label %221, !dbg !32

221:                                              ; preds = %210
  %222 = sub nsw i32 4, %202, !dbg !32
  %223 = sub nuw nsw i32 32, %212, !dbg !32
  %224 = shl i32 %216, %212, !dbg !32
  %225 = lshr i32 %220, %223, !dbg !32
  %226 = add i32 %225, %224, !dbg !32
  %227 = shl i32 %220, %212, !dbg !32
  %228 = sext i32 %222 to i64, !dbg !32
  %229 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i, i64 0, i64 %228, !dbg !32
  %230 = load i32, ptr %229, align 4, !dbg !32
  %231 = lshr i32 %230, %223, !dbg !32
  %232 = add i32 %231, %227, !dbg !32
  br label %__internal_trig_reduction_slowpath.exit.i.i.i, !dbg !32

__internal_trig_reduction_slowpath.exit.i.i.i:    ; preds = %221, %210
  %hi.i.i.i.1.i = phi i32 [ %226, %221 ], [ %216, %210 ], !dbg !32
  %lo.i.i.i.0.i = phi i32 [ %232, %221 ], [ %220, %210 ], !dbg !32
  %233 = lshr i32 %hi.i.i.i.1.i, 30, !dbg !32
  %234 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i, i32 %lo.i.i.i.0.i, i32 2), !dbg !32
  %235 = shl i32 %lo.i.i.i.0.i, 2, !dbg !32
  %236 = lshr i32 %234, 31, !dbg !32
  %237 = add nuw nsw i32 %236, %233, !dbg !32
  %238 = sub nsw i32 0, %237, !dbg !32
  %.not2123.i = icmp slt i32 %196, 0, !dbg !32
  %spec.select.i = select i1 %.not2123.i, i32 %238, i32 %237, !dbg !32
  %239 = xor i32 %234, %196, !dbg !32
  %.lobit.i = ashr i32 %234, 31, !dbg !32
  %hi.i.i.i.2.i = xor i32 %.lobit.i, %234, !dbg !32
  %lo.i.i.i.1.i = xor i32 %.lobit.i, %235, !dbg !32
  %240 = zext i32 %hi.i.i.i.2.i to i64, !dbg !32
  %241 = shl nuw i64 %240, 32, !dbg !32
  %242 = zext i32 %lo.i.i.i.1.i to i64, !dbg !32
  %243 = or disjoint i64 %241, %242, !dbg !32
  %244 = sitofp i64 %243 to double, !dbg !32
  %245 = fmul double %244, 0x3BF921FB54442D19, !dbg !32
  %246 = fptrunc double %245 to float, !dbg !32
  %247 = fneg float %246, !dbg !32
  %.not2526.i = icmp slt i32 %239, 0, !dbg !32
  %r.i.i.i.0.i = select i1 %.not2526.i, float %247, float %246, !dbg !32
  br label %__internal_trig_reduction_kernel.exit.i.i, !dbg !32

__internal_trig_reduction_kernel.exit.i.i:        ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i, %__nv_fmul_rn.exit.i.i.i, %__nv_powf.exit
  %i.i.1.i = phi i32 [ %.01.i, %__nv_powf.exit ], [ 0, %__nv_fmul_rn.exit.i.i.i ], [ %spec.select.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %t.i.i.1.i = phi float [ %.04.i, %__nv_powf.exit ], [ %.08.i, %__nv_fmul_rn.exit.i.i.i ], [ %r.i.i.i.0.i, %__internal_trig_reduction_slowpath.exit.i.i.i ], !dbg !32
  %248 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not28.i = icmp eq i32 %248, 0, !dbg !32
  %249 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !32
  %250 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i, float %t.i.i.1.i) #5, !dbg !32
  %.011.i = select i1 %.not28.i, float %250, float %249, !dbg !32
  %251 = and i32 %i.i.1.i, 1, !dbg !32
  %.not29.i = icmp eq i32 %251, 0, !dbg !32
  %252 = select i1 %.not29.i, float %t.i.i.1.i, float 1.000000e+00, !dbg !32
  %253 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not30.i = icmp eq i32 %253, 0, !dbg !32
  %254 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %252, float 0.000000e+00) #5, !dbg !32
  %255 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %252, float 0.000000e+00) #5, !dbg !32
  %.012.i = select i1 %.not30.i, float %255, float %254, !dbg !32
  br i1 %.not29.i, label %__internal_fmad.exit2.i.i.i, label %__internal_fmad.exit1.i.i.i, !dbg !32

__internal_fmad.exit1.i.i.i:                      ; preds = %__internal_trig_reduction_kernel.exit.i.i
  %256 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not31.i = icmp eq i32 %256, 0, !dbg !32
  %257 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !32
  %258 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i, float 0xBF56C0FDA0000000) #5, !dbg !32
  %.013.i = select i1 %.not31.i, float %258, float %257, !dbg !32
  br label %__internal_fmad.exit2.i.i.i, !dbg !32

__internal_fmad.exit2.i.i.i:                      ; preds = %__internal_fmad.exit1.i.i.i, %__internal_trig_reduction_kernel.exit.i.i
  %259 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %260 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %261 = phi float [ %.013.i, %__internal_fmad.exit1.i.i.i ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i ], !dbg !32
  %262 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not32.i = icmp eq i32 %262, 0, !dbg !32
  %263 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %261, float %.011.i, float %260) #5, !dbg !32
  %264 = tail call float @llvm.nvvm.fma.rn.f(float %261, float %.011.i, float %260) #5, !dbg !32
  %.010.i = select i1 %.not32.i, float %264, float %263, !dbg !32
  %265 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not33.i = icmp eq i32 %265, 0, !dbg !32
  %266 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %.011.i, float %259) #5, !dbg !32
  %267 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %.011.i, float %259) #5, !dbg !32
  %.09.i = select i1 %.not33.i, float %267, float %266, !dbg !32
  %268 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not34.i = icmp eq i32 %268, 0, !dbg !32
  %269 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %.012.i, float %252) #5, !dbg !32
  %270 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %.012.i, float %252) #5, !dbg !32
  %.05.i = select i1 %.not34.i, float %270, float %269, !dbg !32
  %271 = and i32 %i.i.1.i, 2, !dbg !32
  %.not35.i = icmp eq i32 %271, 0, !dbg !32
  br i1 %.not35.i, label %__nv_sinf.exit, label %__internal_fmad.exit5.i.i.i, !dbg !32

__internal_fmad.exit5.i.i.i:                      ; preds = %__internal_fmad.exit2.i.i.i
  %272 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !32
  %.not36.i = icmp eq i32 %272, 0, !dbg !32
  %273 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %274 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float -1.000000e+00, float 0.000000e+00) #5, !dbg !32
  %.0.i8 = select i1 %.not36.i, float %274, float %273, !dbg !32
  br label %__nv_sinf.exit, !dbg !32

__nv_sinf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i, %__internal_fmad.exit5.i.i.i
  %z.i.i.0.i = phi float [ %.0.i8, %__internal_fmad.exit5.i.i.i ], [ %.05.i, %__internal_fmad.exit2.i.i.i ], !dbg !32
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i), !dbg !32
  %275 = or disjoint i32 %15, 1, !dbg !36
  %276 = sitofp i32 %275 to float, !dbg !37
  %277 = fmul float %276, 5.000000e-01, !dbg !38
  %278 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !39
  %.not.i1 = icmp eq i32 %278, 0, !dbg !39
  %279 = tail call float @llvm.nvvm.floor.ftz.f(float %277), !dbg !39
  %280 = tail call float @llvm.nvvm.floor.f(float %277), !dbg !39
  %.0.i2 = select i1 %.not.i1, float %280, float %279, !dbg !39
  %281 = fmul float %.0.i2, 2.000000e+00, !dbg !40
  %282 = fmul float %281, 1.562500e-02, !dbg !41
  %283 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %284 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not.i198 = icmp eq i32 %284, 0, !dbg !42
  %.09.i199 = select i1 %.not.i198, float %26, float %25, !dbg !42
  %285 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not12.i200 = icmp eq i32 %285, 0, !dbg !42
  %286 = fcmp olt float %.09.i199, 0x3810000000000000, !dbg !42
  %287 = fmul float %.09.i199, 0x4170000000000000, !dbg !42
  %288 = select i1 %.not12.i200, i1 %286, i1 false, !dbg !42
  %.116.i203 = select i1 %288, float %287, float %.09.i199, !dbg !42
  %expo.i.i.1.i204 = select i1 %288, float -1.510000e+02, float -1.270000e+02, !dbg !42
  %289 = bitcast float %.116.i203 to i32, !dbg !42
  %290 = and i32 %289, 8388607, !dbg !42
  %291 = or disjoint i32 %290, 1065353216, !dbg !42
  %292 = bitcast i32 %291 to float, !dbg !42
  %293 = lshr i32 %289, 23, !dbg !42
  %294 = uitofp nneg i32 %293 to float, !dbg !42
  %295 = fadd float %expo.i.i.1.i204, %294, !dbg !42
  %296 = fcmp ogt float %292, 0x3FF6A09E60000000, !dbg !42
  %297 = fmul float %292, 5.000000e-01, !dbg !42
  %298 = fadd float %295, 1.000000e+00, !dbg !42
  %expo.i.i.2.i205 = select i1 %296, float %298, float %295, !dbg !42
  %m.i.i.0.i206 = select i1 %296, float %297, float %292, !dbg !42
  %299 = fadd float %m.i.i.0.i206, -1.000000e+00, !dbg !42
  %300 = fadd float %m.i.i.0.i206, 1.000000e+00, !dbg !42
  %301 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %300) #6, !dbg !42, !srcloc !28
  %302 = fmul float %299, 2.000000e+00, !dbg !42
  %303 = fmul float %301, %302, !dbg !42
  %304 = fmul float %303, %303, !dbg !42
  %305 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not13.i207 = icmp eq i32 %305, 0, !dbg !42
  %306 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %304, float 0x3F8995EC60000000) #5, !dbg !42
  %307 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %304, float 0x3F8995EC60000000) #5, !dbg !42
  %.020.i208 = select i1 %.not13.i207, float %307, float %306, !dbg !42
  %308 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not14.i209 = icmp eq i32 %308, 0, !dbg !42
  %309 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i208, float %304, float 0x3FB55557A0000000) #5, !dbg !42
  %310 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i208, float %304, float 0x3FB55557A0000000) #5, !dbg !42
  %.021.i210 = select i1 %.not14.i209, float %310, float %309, !dbg !42
  %311 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not15.i211 = icmp eq i32 %311, 0, !dbg !42
  %312 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i210, float %304) #5, !dbg !42
  %313 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i210, float %304) #5, !dbg !42
  %.022.i212 = select i1 %.not15.i211, float %313, float %312, !dbg !42
  %314 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not16.i213 = icmp eq i32 %314, 0, !dbg !42
  %315 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i212, float %303) #5, !dbg !42
  %316 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i212, float %303) #5, !dbg !42
  %.024.i214 = select i1 %.not16.i213, float %316, float %315, !dbg !42
  %317 = fsub float %299, %303, !dbg !42
  %318 = fmul float %317, 2.000000e+00, !dbg !42
  %319 = fneg float %303, !dbg !42
  %320 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not17.i215 = icmp eq i32 %320, 0, !dbg !42
  %321 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %319, float %299, float %318) #5, !dbg !42
  %322 = tail call float @llvm.nvvm.fma.rn.f(float %319, float %299, float %318) #5, !dbg !42
  %.025.i216 = select i1 %.not17.i215, float %322, float %321, !dbg !42
  %323 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not18.i217 = icmp eq i32 %323, 0, !dbg !42
  %324 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %301, float %.025.i216) #5, !dbg !42
  %325 = tail call float @llvm.nvvm.mul.rn.f(float %301, float %.025.i216) #5, !dbg !42
  %.026.i218 = select i1 %.not18.i217, float %325, float %324, !dbg !42
  %326 = fadd float %303, %.024.i214, !dbg !42
  %327 = fsub float %303, %326, !dbg !42
  %328 = fadd float %.024.i214, %327, !dbg !42
  %329 = fadd float %.026.i218, %328, !dbg !42
  %330 = fadd float %326, %329, !dbg !42
  %331 = fsub float %326, %330, !dbg !42
  %332 = fadd float %329, %331, !dbg !42
  %333 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not19.i219 = icmp eq i32 %333, 0, !dbg !42
  %334 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i205, float 0x3FE62E4000000000) #5, !dbg !42
  %335 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i205, float 0x3FE62E4000000000) #5, !dbg !42
  %.019.i220 = select i1 %.not19.i219, float %335, float %334, !dbg !42
  %336 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not20.i221 = icmp eq i32 %336, 0, !dbg !42
  %337 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i205, float 0x3EB7F7D1C0000000) #5, !dbg !42
  %338 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i205, float 0x3EB7F7D1C0000000) #5, !dbg !42
  %.018.i222 = select i1 %.not20.i221, float %338, float %337, !dbg !42
  %339 = fadd float %.019.i220, %330, !dbg !42
  %340 = fsub float %.019.i220, %339, !dbg !42
  %341 = fadd float %330, %340, !dbg !42
  %342 = fadd float %332, %341, !dbg !42
  %343 = fadd float %.018.i222, %342, !dbg !42
  %344 = fadd float %339, %343, !dbg !42
  %345 = fsub float %339, %344, !dbg !42
  %346 = fadd float %343, %345, !dbg !42
  %347 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not21.i223 = icmp eq i32 %347, 0, !dbg !42
  %348 = tail call float @llvm.nvvm.fabs.ftz.f(float %282) #5, !dbg !42
  %349 = tail call float @llvm.nvvm.fabs.f(float %282) #5, !dbg !42
  %.027.i224 = select i1 %.not21.i223, float %349, float %348, !dbg !42
  %350 = fcmp ogt float %.027.i224, 0x46FED09BE0000000, !dbg !42
  %351 = fmul float %282, 0x3F20000000000000, !dbg !42
  %.013.i225 = select i1 %350, float %351, float %282, !dbg !42
  %352 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not22.i226 = icmp eq i32 %352, 0, !dbg !42
  %353 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i225, float %344) #5, !dbg !42
  %354 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i225, float %344) #5, !dbg !42
  %.028.i227 = select i1 %.not22.i226, float %354, float %353, !dbg !42
  %355 = fneg float %.028.i227, !dbg !42
  %356 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not23.i228 = icmp eq i32 %356, 0, !dbg !42
  %357 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i225, float %344, float %355) #5, !dbg !42
  %358 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i225, float %344, float %355) #5, !dbg !42
  %.029.i229 = select i1 %.not23.i228, float %358, float %357, !dbg !42
  %359 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not24.i230 = icmp eq i32 %359, 0, !dbg !42
  %360 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i225, float %346, float %.029.i229) #5, !dbg !42
  %361 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i225, float %346, float %.029.i229) #5, !dbg !42
  %.030.i231 = select i1 %.not24.i230, float %361, float %360, !dbg !42
  %362 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not25.i232 = icmp eq i32 %362, 0, !dbg !42
  %363 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %344, float %.030.i231) #5, !dbg !42
  %364 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %344, float %.030.i231) #5, !dbg !42
  %.031.i233 = select i1 %.not25.i232, float %364, float %363, !dbg !42
  %365 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not26.i234 = icmp eq i32 %365, 0, !dbg !42
  %366 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i227, float %.031.i233) #5, !dbg !42
  %367 = tail call float @llvm.nvvm.add.rn.f(float %.028.i227, float %.031.i233) #5, !dbg !42
  %.032.i235 = select i1 %.not26.i234, float %367, float %366, !dbg !42
  %368 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %369 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %370 = bitcast float %.032.i235 to i32, !dbg !42
  %371 = icmp eq i32 %370, 1118925336, !dbg !42
  %prod.i.145.0.i241 = select i1 %371, float 0x40562E42E0000000, float %.032.i235, !dbg !42
  %372 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not29.i242 = icmp eq i32 %372, 0, !dbg !42
  %373 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i241, float 0x3FF7154760000000) #5, !dbg !42
  %374 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i241, float 0x3FF7154760000000) #5, !dbg !42
  %.017.i243 = select i1 %.not29.i242, float %374, float %373, !dbg !42
  %375 = tail call float @llvm.nvvm.trunc.f(float %.017.i243) #5, !dbg !42
  %376 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not30.i244 = icmp eq i32 %376, 0, !dbg !42
  %377 = tail call float @llvm.nvvm.fabs.ftz.f(float %375) #5, !dbg !42
  %378 = tail call float @llvm.nvvm.fabs.f(float %375) #5, !dbg !42
  %.023.i245 = select i1 %.not30.i244, float %378, float %377, !dbg !42
  %379 = fcmp ogt float %.023.i245, 1.260000e+02, !dbg !42
  %380 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %375), !dbg !42
  %j.i.i.0.i246 = select i1 %379, float %380, float %375, !dbg !42
  %381 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not31.i247 = icmp eq i32 %381, 0, !dbg !42
  %382 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i246, float 0xBFE62E4300000000, float %prod.i.145.0.i241) #5, !dbg !42
  %383 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i246, float 0xBFE62E4300000000, float %prod.i.145.0.i241) #5, !dbg !42
  %.035.i248 = select i1 %.not31.i247, float %383, float %382, !dbg !42
  %384 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not32.i249 = icmp eq i32 %384, 0, !dbg !42
  %385 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i246, float 0x3E205C6100000000, float %.035.i248) #5, !dbg !42
  %386 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i246, float 0x3E205C6100000000, float %.035.i248) #5, !dbg !42
  %.036.i250 = select i1 %.not32.i249, float %386, float %385, !dbg !42
  %387 = fmul float %.036.i250, 0x3FF7154760000000, !dbg !42
  %388 = fadd float %j.i.i.0.i246, 0x4168000FE0000000, !dbg !42
  %389 = bitcast float %388 to i32, !dbg !42
  %390 = shl i32 %389, 23, !dbg !42
  %391 = bitcast i32 %390 to float, !dbg !42
  %392 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %387) #5, !dbg !42
  %393 = fmul float %392, %391, !dbg !42
  %394 = fcmp une float %393, 0x7FF0000000000000, !dbg !42
  br i1 %394, label %__internal_fmad.exit.i.i276, label %__internal_powf_corner_cases.exit.i251, !dbg !42

__internal_fmad.exit.i.i276:                      ; preds = %__nv_sinf.exit
  %.not28.i238 = icmp eq i32 %369, 0, !dbg !42
  %.not27.i236 = icmp eq i32 %368, 0, !dbg !42
  %395 = fneg float %.032.i235, !dbg !42
  %396 = tail call float @llvm.nvvm.add.rn.f(float %.028.i227, float %395) #5, !dbg !42
  %397 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i227, float %395) #5, !dbg !42
  %.033.i237 = select i1 %.not27.i236, float %396, float %397, !dbg !42
  %398 = tail call float @llvm.nvvm.add.rn.f(float %.033.i237, float %.031.i233) #5, !dbg !42
  %399 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i237, float %.031.i233) #5, !dbg !42
  %.034.i239 = select i1 %.not28.i238, float %398, float %399, !dbg !42
  %400 = fadd float %.034.i239, 0x3EE0000000000000, !dbg !42
  %prod.i.044.0.i240 = select i1 %371, float %400, float %.034.i239, !dbg !42
  %401 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not33.i277 = icmp eq i32 %401, 0, !dbg !42
  %402 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %393, float %prod.i.044.0.i240, float %393) #5, !dbg !42
  %403 = tail call float @llvm.nvvm.fma.rn.f(float %393, float %prod.i.044.0.i240, float %393) #5, !dbg !42
  %.014.i278 = select i1 %.not33.i277, float %403, float %402, !dbg !42
  br label %__internal_powf_corner_cases.exit.i251, !dbg !42

__internal_powf_corner_cases.exit.i251:           ; preds = %__internal_fmad.exit.i.i276, %__nv_sinf.exit
  %t.i.0.i252 = phi float [ %.014.i278, %__internal_fmad.exit.i.i276 ], [ 0x7FF0000000000000, %__nv_sinf.exit ], !dbg !42
  %404 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not34.i253 = icmp eq i32 %404, 0, !dbg !42
  %.01.i254 = select i1 %.not34.i253, float %26, float %25, !dbg !42
  %405 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not35.i255 = icmp eq i32 %405, 0, !dbg !42
  %.02.i256 = select i1 %.not35.i255, float %349, float %348, !dbg !42
  %406 = fadd float %.01.i254, %.02.i256, !dbg !42
  %407 = bitcast float %406 to i32, !dbg !42
  %408 = icmp sgt i32 %407, 2139095039, !dbg !42
  br i1 %408, label %__nv_isnanf.exit.i.i259, label %__nv_powf.exit279, !dbg !42

__nv_isnanf.exit.i.i259:                          ; preds = %__internal_powf_corner_cases.exit.i251
  %409 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not36.i260 = icmp eq i32 %409, 0, !dbg !42
  %.06.i261 = select i1 %.not36.i260, float %26, float %25, !dbg !42
  %410 = fcmp uno float %.06.i261, 0.000000e+00, !dbg !42
  br i1 %410, label %413, label %__nv_isnanf.exit11.i.i262, !dbg !42

__nv_isnanf.exit11.i.i262:                        ; preds = %__nv_isnanf.exit.i.i259
  %411 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not37.i263 = icmp eq i32 %411, 0, !dbg !42
  %.07.i264 = select i1 %.not37.i263, float %349, float %348, !dbg !42
  %412 = fcmp uno float %.07.i264, 0.000000e+00, !dbg !42
  br i1 %412, label %413, label %__nv_isinff.exit8.i.i265, !dbg !42

413:                                              ; preds = %__nv_isnanf.exit11.i.i262, %__nv_isnanf.exit.i.i259
  %414 = fadd float %282, 1.000000e+04, !dbg !42
  br label %__nv_powf.exit279, !dbg !42

__nv_isinff.exit8.i.i265:                         ; preds = %__nv_isnanf.exit11.i.i262
  %415 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not38.i266 = icmp eq i32 %415, 0, !dbg !42
  %.05.i267 = select i1 %.not38.i266, float %349, float %348, !dbg !42
  %416 = fcmp oeq float %.05.i267, 0x7FF0000000000000, !dbg !42
  %417 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !42
  %.not40.i272 = icmp eq i32 %417, 0, !dbg !42
  %.04.i273 = select i1 %.not40.i272, float %26, float %25, !dbg !42
  br i1 %416, label %__nv_fabsf.exit5.i.i271, label %__nv_isinff.exit.i.i268, !dbg !42

__nv_fabsf.exit5.i.i271:                          ; preds = %__nv_isinff.exit8.i.i265
  %418 = fcmp ogt float %.04.i273, 1.000000e+00, !dbg !42
  %ti.i.0.i274 = select i1 %418, i32 2139095040, i32 0, !dbg !42
  %419 = fcmp olt float %282, 0.000000e+00, !dbg !42
  %420 = xor i32 %ti.i.0.i274, 2139095040, !dbg !42
  %ti.i.1.i275 = select i1 %419, i32 %420, i32 %ti.i.0.i274, !dbg !42
  %421 = bitcast i32 %ti.i.1.i275 to float, !dbg !42
  br label %__nv_powf.exit279, !dbg !42

__nv_isinff.exit.i.i268:                          ; preds = %__nv_isinff.exit8.i.i265
  %422 = fcmp oeq float %.04.i273, 0x7FF0000000000000, !dbg !42
  br i1 %422, label %423, label %__nv_powf.exit279, !dbg !42

423:                                              ; preds = %__nv_isinff.exit.i.i268
  %424 = fcmp oge float %282, 0.000000e+00, !dbg !42
  %425 = select i1 %424, float 0x7FF0000000000000, float 0.000000e+00, !dbg !42
  br label %__nv_powf.exit279, !dbg !42

__nv_powf.exit279:                                ; preds = %__internal_powf_corner_cases.exit.i251, %413, %__nv_fabsf.exit5.i.i271, %__nv_isinff.exit.i.i268, %423
  %.3.i257 = phi float [ %t.i.0.i252, %__internal_powf_corner_cases.exit.i251 ], [ %414, %413 ], [ %421, %__nv_fabsf.exit5.i.i271 ], [ %425, %423 ], [ %t.i.0.i252, %__nv_isinff.exit.i.i268 ], !dbg !42
  %426 = fcmp oeq float %282, 0.000000e+00, !dbg !42
  %t.0.i258 = select i1 %426, float 1.000000e+00, float %.3.i257, !dbg !42
  %427 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %170, float %t.0.i258) #5, !dbg !43
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i64), !dbg !44
  %428 = fmul float %427, 0x3FE45F3060000000, !dbg !44
  %429 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not.i65 = icmp eq i32 %429, 0, !dbg !44
  %430 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %428) #5, !dbg !44
  %431 = tail call i32 @llvm.nvvm.f2i.rn(float %428) #5, !dbg !44
  %.01.i66 = select i1 %.not.i65, i32 %431, i32 %430, !dbg !44
  %432 = sitofp i32 %.01.i66 to float, !dbg !44
  %433 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not15.i67 = icmp eq i32 %433, 0, !dbg !44
  %434 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float 0xBFF921FB40000000, float %427) #5, !dbg !44
  %435 = tail call float @llvm.nvvm.fma.rn.f(float %432, float 0xBFF921FB40000000, float %427) #5, !dbg !44
  %.02.i68 = select i1 %.not15.i67, float %435, float %434, !dbg !44
  %436 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not16.i69 = icmp eq i32 %436, 0, !dbg !44
  %437 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float 0xBE74442D00000000, float %.02.i68) #5, !dbg !44
  %438 = tail call float @llvm.nvvm.fma.rn.f(float %432, float 0xBE74442D00000000, float %.02.i68) #5, !dbg !44
  %.03.i70 = select i1 %.not16.i69, float %438, float %437, !dbg !44
  %439 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not17.i71 = icmp eq i32 %439, 0, !dbg !44
  %440 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %432, float 0xBCF84698A0000000, float %.03.i70) #5, !dbg !44
  %441 = tail call float @llvm.nvvm.fma.rn.f(float %432, float 0xBCF84698A0000000, float %.03.i70) #5, !dbg !44
  %.04.i72 = select i1 %.not17.i71, float %441, float %440, !dbg !44
  %442 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not18.i73 = icmp eq i32 %442, 0, !dbg !44
  %443 = tail call float @llvm.nvvm.fabs.ftz.f(float %427) #5, !dbg !44
  %444 = tail call float @llvm.nvvm.fabs.f(float %427) #5, !dbg !44
  %.06.i74 = select i1 %.not18.i73, float %444, float %443, !dbg !44
  %445 = fcmp ult float %.06.i74, 1.056150e+05, !dbg !44
  br i1 %445, label %__internal_trig_reduction_kernel.exit.i.i92, label %__nv_isinff.exit.i.i.i75, !dbg !44

__nv_isinff.exit.i.i.i75:                         ; preds = %__nv_powf.exit279
  %446 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not19.i76 = icmp eq i32 %446, 0, !dbg !44
  %.07.i77 = select i1 %.not19.i76, float %444, float %443, !dbg !44
  %447 = fcmp oeq float %.07.i77, 0x7FF0000000000000, !dbg !44
  br i1 %447, label %__nv_fmul_rn.exit.i.i.i114, label %451, !dbg !44

__nv_fmul_rn.exit.i.i.i114:                       ; preds = %__nv_isinff.exit.i.i.i75
  %448 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not27.i115 = icmp eq i32 %448, 0, !dbg !44
  %449 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %427, float 0.000000e+00) #5, !dbg !44
  %450 = tail call float @llvm.nvvm.mul.rn.f(float %427, float 0.000000e+00) #5, !dbg !44
  %.08.i116 = select i1 %.not27.i115, float %450, float %449, !dbg !44
  br label %__internal_trig_reduction_kernel.exit.i.i92, !dbg !44

451:                                              ; preds = %__nv_isinff.exit.i.i.i75
  %452 = bitcast float %427 to i32, !dbg !44
  %453 = lshr i32 %452, 23, !dbg !44
  %454 = and i32 %453, 224, !dbg !44
  %455 = add nsw i32 %454, -128, !dbg !44
  %456 = shl i32 %452, 8, !dbg !44
  %457 = or i32 %456, -2147483648, !dbg !44
  %458 = lshr exact i32 %455, 5, !dbg !44
  br label %459, !dbg !44

459:                                              ; preds = %451, %459
  %indvars.iv463 = phi i64 [ 0, %451 ], [ %indvars.iv.next464, %459 ]
  %hi.i.i.i.0.i78450 = phi i32 [ 0, %451 ], [ %464, %459 ]
  %460 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv463, !dbg !44
  %461 = load i32, ptr addrspace(1) %460, align 4, !dbg !44
  %462 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %461, i32 %457, i32 %hi.i.i.i.0.i78450) #6, !dbg !44, !srcloc !33
  %463 = extractvalue { i32, i32 } %462, 0, !dbg !44
  %464 = extractvalue { i32, i32 } %462, 1, !dbg !44
  %465 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %indvars.iv463, !dbg !44
  store i32 %463, ptr %465, align 4, !dbg !44
  %indvars.iv.next464 = add nuw nsw i64 %indvars.iv463, 1, !dbg !44
  %exitcond465.not = icmp eq i64 %indvars.iv.next464, 6, !dbg !44
  br i1 %exitcond465.not, label %466, label %459, !dbg !44, !llvm.loop !45

466:                                              ; preds = %459
  %467 = getelementptr inbounds i8, ptr %result.i.i.i.i64, i64 24, !dbg !44
  store i32 %464, ptr %467, align 4, !dbg !44
  %468 = and i32 %453, 31, !dbg !44
  %469 = sub nsw i32 6, %458, !dbg !44
  %470 = sext i32 %469 to i64, !dbg !44
  %471 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %470, !dbg !44
  %472 = load i32, ptr %471, align 4, !dbg !44
  %473 = sub nsw i32 5, %458, !dbg !44
  %474 = sext i32 %473 to i64, !dbg !44
  %475 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %474, !dbg !44
  %476 = load i32, ptr %475, align 4, !dbg !44
  %.not20.i80 = icmp eq i32 %468, 0, !dbg !44
  br i1 %.not20.i80, label %__internal_trig_reduction_slowpath.exit.i.i.i81, label %477, !dbg !44

477:                                              ; preds = %466
  %478 = sub nsw i32 4, %458, !dbg !44
  %479 = sub nuw nsw i32 32, %468, !dbg !44
  %480 = shl i32 %472, %468, !dbg !44
  %481 = lshr i32 %476, %479, !dbg !44
  %482 = add i32 %481, %480, !dbg !44
  %483 = shl i32 %476, %468, !dbg !44
  %484 = sext i32 %478 to i64, !dbg !44
  %485 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i64, i64 0, i64 %484, !dbg !44
  %486 = load i32, ptr %485, align 4, !dbg !44
  %487 = lshr i32 %486, %479, !dbg !44
  %488 = add i32 %487, %483, !dbg !44
  br label %__internal_trig_reduction_slowpath.exit.i.i.i81, !dbg !44

__internal_trig_reduction_slowpath.exit.i.i.i81:  ; preds = %477, %466
  %hi.i.i.i.1.i82 = phi i32 [ %482, %477 ], [ %472, %466 ], !dbg !44
  %lo.i.i.i.0.i83 = phi i32 [ %488, %477 ], [ %476, %466 ], !dbg !44
  %489 = lshr i32 %hi.i.i.i.1.i82, 30, !dbg !44
  %490 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i82, i32 %lo.i.i.i.0.i83, i32 2), !dbg !44
  %491 = shl i32 %lo.i.i.i.0.i83, 2, !dbg !44
  %492 = lshr i32 %490, 31, !dbg !44
  %493 = add nuw nsw i32 %492, %489, !dbg !44
  %494 = sub nsw i32 0, %493, !dbg !44
  %.not2123.i84 = icmp slt i32 %452, 0, !dbg !44
  %spec.select.i85 = select i1 %.not2123.i84, i32 %494, i32 %493, !dbg !44
  %495 = xor i32 %490, %452, !dbg !44
  %.lobit.i86 = ashr i32 %490, 31, !dbg !44
  %hi.i.i.i.2.i87 = xor i32 %.lobit.i86, %490, !dbg !44
  %lo.i.i.i.1.i89 = xor i32 %.lobit.i86, %491, !dbg !44
  %496 = zext i32 %hi.i.i.i.2.i87 to i64, !dbg !44
  %497 = shl nuw i64 %496, 32, !dbg !44
  %498 = zext i32 %lo.i.i.i.1.i89 to i64, !dbg !44
  %499 = or disjoint i64 %497, %498, !dbg !44
  %500 = sitofp i64 %499 to double, !dbg !44
  %501 = fmul double %500, 0x3BF921FB54442D19, !dbg !44
  %502 = fptrunc double %501 to float, !dbg !44
  %503 = fneg float %502, !dbg !44
  %.not2526.i90 = icmp slt i32 %495, 0, !dbg !44
  %r.i.i.i.0.i91 = select i1 %.not2526.i90, float %503, float %502, !dbg !44
  br label %__internal_trig_reduction_kernel.exit.i.i92, !dbg !44

__internal_trig_reduction_kernel.exit.i.i92:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i81, %__nv_fmul_rn.exit.i.i.i114, %__nv_powf.exit279
  %i.i.1.i93 = phi i32 [ %.01.i66, %__nv_powf.exit279 ], [ 0, %__nv_fmul_rn.exit.i.i.i114 ], [ %spec.select.i85, %__internal_trig_reduction_slowpath.exit.i.i.i81 ], !dbg !44
  %t.i.i.1.i94 = phi float [ %.04.i72, %__nv_powf.exit279 ], [ %.08.i116, %__nv_fmul_rn.exit.i.i.i114 ], [ %r.i.i.i.0.i91, %__internal_trig_reduction_slowpath.exit.i.i.i81 ], !dbg !44
  %504 = add i32 %i.i.1.i93, 1, !dbg !44
  %505 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not28.i95 = icmp eq i32 %505, 0, !dbg !44
  %506 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i94, float %t.i.i.1.i94) #5, !dbg !44
  %507 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i94, float %t.i.i.1.i94) #5, !dbg !44
  %.011.i96 = select i1 %.not28.i95, float %507, float %506, !dbg !44
  %508 = and i32 %i.i.1.i93, 1, !dbg !44
  %.not29.not.i = icmp eq i32 %508, 0, !dbg !44
  %509 = select i1 %.not29.not.i, float 1.000000e+00, float %t.i.i.1.i94, !dbg !44
  %510 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not30.i97 = icmp eq i32 %510, 0, !dbg !44
  %511 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i96, float %509, float 0.000000e+00) #5, !dbg !44
  %512 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i96, float %509, float 0.000000e+00) #5, !dbg !44
  %.012.i98 = select i1 %.not30.i97, float %512, float %511, !dbg !44
  br i1 %.not29.not.i, label %__internal_fmad.exit1.i.i.i111, label %__internal_fmad.exit2.i.i.i99, !dbg !44

__internal_fmad.exit1.i.i.i111:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i92
  %513 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not31.i112 = icmp eq i32 %513, 0, !dbg !44
  %514 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i96, float 0xBF56C0FDA0000000) #5, !dbg !44
  %515 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i96, float 0xBF56C0FDA0000000) #5, !dbg !44
  %.013.i113 = select i1 %.not31.i112, float %515, float %514, !dbg !44
  br label %__internal_fmad.exit2.i.i.i99, !dbg !44

__internal_fmad.exit2.i.i.i99:                    ; preds = %__internal_fmad.exit1.i.i.i111, %__internal_trig_reduction_kernel.exit.i.i92
  %516 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i111 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i92 ], !dbg !44
  %517 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i111 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i92 ], !dbg !44
  %518 = phi float [ %.013.i113, %__internal_fmad.exit1.i.i.i111 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i92 ], !dbg !44
  %519 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not32.i100 = icmp eq i32 %519, 0, !dbg !44
  %520 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %518, float %.011.i96, float %517) #5, !dbg !44
  %521 = tail call float @llvm.nvvm.fma.rn.f(float %518, float %.011.i96, float %517) #5, !dbg !44
  %.010.i101 = select i1 %.not32.i100, float %521, float %520, !dbg !44
  %522 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not33.i102 = icmp eq i32 %522, 0, !dbg !44
  %523 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i101, float %.011.i96, float %516) #5, !dbg !44
  %524 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i101, float %.011.i96, float %516) #5, !dbg !44
  %.09.i103 = select i1 %.not33.i102, float %524, float %523, !dbg !44
  %525 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not34.i104 = icmp eq i32 %525, 0, !dbg !44
  %526 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i103, float %.012.i98, float %509) #5, !dbg !44
  %527 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i103, float %.012.i98, float %509) #5, !dbg !44
  %.05.i105 = select i1 %.not34.i104, float %527, float %526, !dbg !44
  %528 = and i32 %504, 2, !dbg !44
  %.not35.i106 = icmp eq i32 %528, 0, !dbg !44
  br i1 %.not35.i106, label %__nv_cosf.exit, label %__internal_fmad.exit5.i.i.i107, !dbg !44

__internal_fmad.exit5.i.i.i107:                   ; preds = %__internal_fmad.exit2.i.i.i99
  %529 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !44
  %.not36.i108 = icmp eq i32 %529, 0, !dbg !44
  %530 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i105, float -1.000000e+00, float 0.000000e+00) #5, !dbg !44
  %531 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i105, float -1.000000e+00, float 0.000000e+00) #5, !dbg !44
  %.0.i109 = select i1 %.not36.i108, float %531, float %530, !dbg !44
  br label %__nv_cosf.exit, !dbg !44

__nv_cosf.exit:                                   ; preds = %__internal_fmad.exit2.i.i.i99, %__internal_fmad.exit5.i.i.i107
  %z.i.i.0.i110 = phi float [ %.0.i109, %__internal_fmad.exit5.i.i.i107 ], [ %.05.i105, %__internal_fmad.exit2.i.i.i99 ], !dbg !44
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i64), !dbg !44
  %532 = add nsw i32 %.decomposed, -64, !dbg !46
  %533 = sdiv i32 %532, 2, !dbg !47
  %534 = srem i32 %533, 32, !dbg !48
  %535 = shl nsw i32 %534, 1, !dbg !49
  %536 = sitofp i32 %535 to float, !dbg !50
  %537 = fmul float %536, 5.000000e-01, !dbg !51
  %538 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !52
  %.not.i3 = icmp eq i32 %538, 0, !dbg !52
  %539 = tail call float @llvm.nvvm.floor.ftz.f(float %537), !dbg !52
  %540 = tail call float @llvm.nvvm.floor.f(float %537), !dbg !52
  %.0.i4 = select i1 %.not.i3, float %540, float %539, !dbg !52
  %541 = fmul float %.0.i4, 2.000000e+00, !dbg !53
  %542 = fmul float %541, 1.562500e-02, !dbg !54
  %543 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %544 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not.i280 = icmp eq i32 %544, 0, !dbg !55
  %.09.i281 = select i1 %.not.i280, float %26, float %25, !dbg !55
  %545 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not12.i282 = icmp eq i32 %545, 0, !dbg !55
  %546 = fcmp olt float %.09.i281, 0x3810000000000000, !dbg !55
  %547 = fmul float %.09.i281, 0x4170000000000000, !dbg !55
  %548 = select i1 %.not12.i282, i1 %546, i1 false, !dbg !55
  %.116.i285 = select i1 %548, float %547, float %.09.i281, !dbg !55
  %expo.i.i.1.i286 = select i1 %548, float -1.510000e+02, float -1.270000e+02, !dbg !55
  %549 = bitcast float %.116.i285 to i32, !dbg !55
  %550 = and i32 %549, 8388607, !dbg !55
  %551 = or disjoint i32 %550, 1065353216, !dbg !55
  %552 = bitcast i32 %551 to float, !dbg !55
  %553 = lshr i32 %549, 23, !dbg !55
  %554 = uitofp nneg i32 %553 to float, !dbg !55
  %555 = fadd float %expo.i.i.1.i286, %554, !dbg !55
  %556 = fcmp ogt float %552, 0x3FF6A09E60000000, !dbg !55
  %557 = fmul float %552, 5.000000e-01, !dbg !55
  %558 = fadd float %555, 1.000000e+00, !dbg !55
  %expo.i.i.2.i287 = select i1 %556, float %558, float %555, !dbg !55
  %m.i.i.0.i288 = select i1 %556, float %557, float %552, !dbg !55
  %559 = fadd float %m.i.i.0.i288, -1.000000e+00, !dbg !55
  %560 = fadd float %m.i.i.0.i288, 1.000000e+00, !dbg !55
  %561 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %560) #6, !dbg !55, !srcloc !28
  %562 = fmul float %559, 2.000000e+00, !dbg !55
  %563 = fmul float %561, %562, !dbg !55
  %564 = fmul float %563, %563, !dbg !55
  %565 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not13.i289 = icmp eq i32 %565, 0, !dbg !55
  %566 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %564, float 0x3F8995EC60000000) #5, !dbg !55
  %567 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %564, float 0x3F8995EC60000000) #5, !dbg !55
  %.020.i290 = select i1 %.not13.i289, float %567, float %566, !dbg !55
  %568 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not14.i291 = icmp eq i32 %568, 0, !dbg !55
  %569 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i290, float %564, float 0x3FB55557A0000000) #5, !dbg !55
  %570 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i290, float %564, float 0x3FB55557A0000000) #5, !dbg !55
  %.021.i292 = select i1 %.not14.i291, float %570, float %569, !dbg !55
  %571 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not15.i293 = icmp eq i32 %571, 0, !dbg !55
  %572 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i292, float %564) #5, !dbg !55
  %573 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i292, float %564) #5, !dbg !55
  %.022.i294 = select i1 %.not15.i293, float %573, float %572, !dbg !55
  %574 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not16.i295 = icmp eq i32 %574, 0, !dbg !55
  %575 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i294, float %563) #5, !dbg !55
  %576 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i294, float %563) #5, !dbg !55
  %.024.i296 = select i1 %.not16.i295, float %576, float %575, !dbg !55
  %577 = fsub float %559, %563, !dbg !55
  %578 = fmul float %577, 2.000000e+00, !dbg !55
  %579 = fneg float %563, !dbg !55
  %580 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not17.i297 = icmp eq i32 %580, 0, !dbg !55
  %581 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %579, float %559, float %578) #5, !dbg !55
  %582 = tail call float @llvm.nvvm.fma.rn.f(float %579, float %559, float %578) #5, !dbg !55
  %.025.i298 = select i1 %.not17.i297, float %582, float %581, !dbg !55
  %583 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not18.i299 = icmp eq i32 %583, 0, !dbg !55
  %584 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %561, float %.025.i298) #5, !dbg !55
  %585 = tail call float @llvm.nvvm.mul.rn.f(float %561, float %.025.i298) #5, !dbg !55
  %.026.i300 = select i1 %.not18.i299, float %585, float %584, !dbg !55
  %586 = fadd float %563, %.024.i296, !dbg !55
  %587 = fsub float %563, %586, !dbg !55
  %588 = fadd float %.024.i296, %587, !dbg !55
  %589 = fadd float %.026.i300, %588, !dbg !55
  %590 = fadd float %586, %589, !dbg !55
  %591 = fsub float %586, %590, !dbg !55
  %592 = fadd float %589, %591, !dbg !55
  %593 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not19.i301 = icmp eq i32 %593, 0, !dbg !55
  %594 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i287, float 0x3FE62E4000000000) #5, !dbg !55
  %595 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i287, float 0x3FE62E4000000000) #5, !dbg !55
  %.019.i302 = select i1 %.not19.i301, float %595, float %594, !dbg !55
  %596 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not20.i303 = icmp eq i32 %596, 0, !dbg !55
  %597 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i287, float 0x3EB7F7D1C0000000) #5, !dbg !55
  %598 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i287, float 0x3EB7F7D1C0000000) #5, !dbg !55
  %.018.i304 = select i1 %.not20.i303, float %598, float %597, !dbg !55
  %599 = fadd float %.019.i302, %590, !dbg !55
  %600 = fsub float %.019.i302, %599, !dbg !55
  %601 = fadd float %590, %600, !dbg !55
  %602 = fadd float %592, %601, !dbg !55
  %603 = fadd float %.018.i304, %602, !dbg !55
  %604 = fadd float %599, %603, !dbg !55
  %605 = fsub float %599, %604, !dbg !55
  %606 = fadd float %603, %605, !dbg !55
  %607 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not21.i305 = icmp eq i32 %607, 0, !dbg !55
  %608 = tail call float @llvm.nvvm.fabs.ftz.f(float %542) #5, !dbg !55
  %609 = tail call float @llvm.nvvm.fabs.f(float %542) #5, !dbg !55
  %.027.i306 = select i1 %.not21.i305, float %609, float %608, !dbg !55
  %610 = fcmp ogt float %.027.i306, 0x46FED09BE0000000, !dbg !55
  %611 = fmul float %542, 0x3F20000000000000, !dbg !55
  %.013.i307 = select i1 %610, float %611, float %542, !dbg !55
  %612 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not22.i308 = icmp eq i32 %612, 0, !dbg !55
  %613 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i307, float %604) #5, !dbg !55
  %614 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i307, float %604) #5, !dbg !55
  %.028.i309 = select i1 %.not22.i308, float %614, float %613, !dbg !55
  %615 = fneg float %.028.i309, !dbg !55
  %616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not23.i310 = icmp eq i32 %616, 0, !dbg !55
  %617 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i307, float %604, float %615) #5, !dbg !55
  %618 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i307, float %604, float %615) #5, !dbg !55
  %.029.i311 = select i1 %.not23.i310, float %618, float %617, !dbg !55
  %619 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not24.i312 = icmp eq i32 %619, 0, !dbg !55
  %620 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i307, float %606, float %.029.i311) #5, !dbg !55
  %621 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i307, float %606, float %.029.i311) #5, !dbg !55
  %.030.i313 = select i1 %.not24.i312, float %621, float %620, !dbg !55
  %622 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not25.i314 = icmp eq i32 %622, 0, !dbg !55
  %623 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %604, float %.030.i313) #5, !dbg !55
  %624 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %604, float %.030.i313) #5, !dbg !55
  %.031.i315 = select i1 %.not25.i314, float %624, float %623, !dbg !55
  %625 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not26.i316 = icmp eq i32 %625, 0, !dbg !55
  %626 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i309, float %.031.i315) #5, !dbg !55
  %627 = tail call float @llvm.nvvm.add.rn.f(float %.028.i309, float %.031.i315) #5, !dbg !55
  %.032.i317 = select i1 %.not26.i316, float %627, float %626, !dbg !55
  %628 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %629 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %630 = bitcast float %.032.i317 to i32, !dbg !55
  %631 = icmp eq i32 %630, 1118925336, !dbg !55
  %prod.i.145.0.i323 = select i1 %631, float 0x40562E42E0000000, float %.032.i317, !dbg !55
  %632 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not29.i324 = icmp eq i32 %632, 0, !dbg !55
  %633 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i323, float 0x3FF7154760000000) #5, !dbg !55
  %634 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i323, float 0x3FF7154760000000) #5, !dbg !55
  %.017.i325 = select i1 %.not29.i324, float %634, float %633, !dbg !55
  %635 = tail call float @llvm.nvvm.trunc.f(float %.017.i325) #5, !dbg !55
  %636 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not30.i326 = icmp eq i32 %636, 0, !dbg !55
  %637 = tail call float @llvm.nvvm.fabs.ftz.f(float %635) #5, !dbg !55
  %638 = tail call float @llvm.nvvm.fabs.f(float %635) #5, !dbg !55
  %.023.i327 = select i1 %.not30.i326, float %638, float %637, !dbg !55
  %639 = fcmp ogt float %.023.i327, 1.260000e+02, !dbg !55
  %640 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %635), !dbg !55
  %j.i.i.0.i328 = select i1 %639, float %640, float %635, !dbg !55
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not31.i329 = icmp eq i32 %641, 0, !dbg !55
  %642 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i328, float 0xBFE62E4300000000, float %prod.i.145.0.i323) #5, !dbg !55
  %643 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i328, float 0xBFE62E4300000000, float %prod.i.145.0.i323) #5, !dbg !55
  %.035.i330 = select i1 %.not31.i329, float %643, float %642, !dbg !55
  %644 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not32.i331 = icmp eq i32 %644, 0, !dbg !55
  %645 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i328, float 0x3E205C6100000000, float %.035.i330) #5, !dbg !55
  %646 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i328, float 0x3E205C6100000000, float %.035.i330) #5, !dbg !55
  %.036.i332 = select i1 %.not32.i331, float %646, float %645, !dbg !55
  %647 = fmul float %.036.i332, 0x3FF7154760000000, !dbg !55
  %648 = fadd float %j.i.i.0.i328, 0x4168000FE0000000, !dbg !55
  %649 = bitcast float %648 to i32, !dbg !55
  %650 = shl i32 %649, 23, !dbg !55
  %651 = bitcast i32 %650 to float, !dbg !55
  %652 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %647) #5, !dbg !55
  %653 = fmul float %652, %651, !dbg !55
  %654 = fcmp une float %653, 0x7FF0000000000000, !dbg !55
  br i1 %654, label %__internal_fmad.exit.i.i358, label %__internal_powf_corner_cases.exit.i333, !dbg !55

__internal_fmad.exit.i.i358:                      ; preds = %__nv_cosf.exit
  %.not28.i320 = icmp eq i32 %629, 0, !dbg !55
  %.not27.i318 = icmp eq i32 %628, 0, !dbg !55
  %655 = fneg float %.032.i317, !dbg !55
  %656 = tail call float @llvm.nvvm.add.rn.f(float %.028.i309, float %655) #5, !dbg !55
  %657 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i309, float %655) #5, !dbg !55
  %.033.i319 = select i1 %.not27.i318, float %656, float %657, !dbg !55
  %658 = tail call float @llvm.nvvm.add.rn.f(float %.033.i319, float %.031.i315) #5, !dbg !55
  %659 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i319, float %.031.i315) #5, !dbg !55
  %.034.i321 = select i1 %.not28.i320, float %658, float %659, !dbg !55
  %660 = fadd float %.034.i321, 0x3EE0000000000000, !dbg !55
  %prod.i.044.0.i322 = select i1 %631, float %660, float %.034.i321, !dbg !55
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not33.i359 = icmp eq i32 %661, 0, !dbg !55
  %662 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %653, float %prod.i.044.0.i322, float %653) #5, !dbg !55
  %663 = tail call float @llvm.nvvm.fma.rn.f(float %653, float %prod.i.044.0.i322, float %653) #5, !dbg !55
  %.014.i360 = select i1 %.not33.i359, float %663, float %662, !dbg !55
  br label %__internal_powf_corner_cases.exit.i333, !dbg !55

__internal_powf_corner_cases.exit.i333:           ; preds = %__internal_fmad.exit.i.i358, %__nv_cosf.exit
  %t.i.0.i334 = phi float [ %.014.i360, %__internal_fmad.exit.i.i358 ], [ 0x7FF0000000000000, %__nv_cosf.exit ], !dbg !55
  %664 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not34.i335 = icmp eq i32 %664, 0, !dbg !55
  %.01.i336 = select i1 %.not34.i335, float %26, float %25, !dbg !55
  %665 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not35.i337 = icmp eq i32 %665, 0, !dbg !55
  %.02.i338 = select i1 %.not35.i337, float %609, float %608, !dbg !55
  %666 = fadd float %.01.i336, %.02.i338, !dbg !55
  %667 = bitcast float %666 to i32, !dbg !55
  %668 = icmp sgt i32 %667, 2139095039, !dbg !55
  br i1 %668, label %__nv_isnanf.exit.i.i341, label %__nv_powf.exit361, !dbg !55

__nv_isnanf.exit.i.i341:                          ; preds = %__internal_powf_corner_cases.exit.i333
  %669 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not36.i342 = icmp eq i32 %669, 0, !dbg !55
  %.06.i343 = select i1 %.not36.i342, float %26, float %25, !dbg !55
  %670 = fcmp uno float %.06.i343, 0.000000e+00, !dbg !55
  br i1 %670, label %673, label %__nv_isnanf.exit11.i.i344, !dbg !55

__nv_isnanf.exit11.i.i344:                        ; preds = %__nv_isnanf.exit.i.i341
  %671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not37.i345 = icmp eq i32 %671, 0, !dbg !55
  %.07.i346 = select i1 %.not37.i345, float %609, float %608, !dbg !55
  %672 = fcmp uno float %.07.i346, 0.000000e+00, !dbg !55
  br i1 %672, label %673, label %__nv_isinff.exit8.i.i347, !dbg !55

673:                                              ; preds = %__nv_isnanf.exit11.i.i344, %__nv_isnanf.exit.i.i341
  %674 = fadd float %542, 1.000000e+04, !dbg !55
  br label %__nv_powf.exit361, !dbg !55

__nv_isinff.exit8.i.i347:                         ; preds = %__nv_isnanf.exit11.i.i344
  %675 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not38.i348 = icmp eq i32 %675, 0, !dbg !55
  %.05.i349 = select i1 %.not38.i348, float %609, float %608, !dbg !55
  %676 = fcmp oeq float %.05.i349, 0x7FF0000000000000, !dbg !55
  %677 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !55
  %.not40.i354 = icmp eq i32 %677, 0, !dbg !55
  %.04.i355 = select i1 %.not40.i354, float %26, float %25, !dbg !55
  br i1 %676, label %__nv_fabsf.exit5.i.i353, label %__nv_isinff.exit.i.i350, !dbg !55

__nv_fabsf.exit5.i.i353:                          ; preds = %__nv_isinff.exit8.i.i347
  %678 = fcmp ogt float %.04.i355, 1.000000e+00, !dbg !55
  %ti.i.0.i356 = select i1 %678, i32 2139095040, i32 0, !dbg !55
  %679 = fcmp olt float %542, 0.000000e+00, !dbg !55
  %680 = xor i32 %ti.i.0.i356, 2139095040, !dbg !55
  %ti.i.1.i357 = select i1 %679, i32 %680, i32 %ti.i.0.i356, !dbg !55
  %681 = bitcast i32 %ti.i.1.i357 to float, !dbg !55
  br label %__nv_powf.exit361, !dbg !55

__nv_isinff.exit.i.i350:                          ; preds = %__nv_isinff.exit8.i.i347
  %682 = fcmp oeq float %.04.i355, 0x7FF0000000000000, !dbg !55
  br i1 %682, label %683, label %__nv_powf.exit361, !dbg !55

683:                                              ; preds = %__nv_isinff.exit.i.i350
  %684 = fcmp oge float %542, 0.000000e+00, !dbg !55
  %685 = select i1 %684, float 0x7FF0000000000000, float 0.000000e+00, !dbg !55
  br label %__nv_powf.exit361, !dbg !55

__nv_powf.exit361:                                ; preds = %__internal_powf_corner_cases.exit.i333, %673, %__nv_fabsf.exit5.i.i353, %__nv_isinff.exit.i.i350, %683
  %.3.i339 = phi float [ %t.i.0.i334, %__internal_powf_corner_cases.exit.i333 ], [ %674, %673 ], [ %681, %__nv_fabsf.exit5.i.i353 ], [ %685, %683 ], [ %t.i.0.i334, %__nv_isinff.exit.i.i350 ], !dbg !55
  %686 = fcmp oeq float %542, 0.000000e+00, !dbg !55
  %t.0.i340 = select i1 %686, float 1.000000e+00, float %.3.i339, !dbg !55
  %687 = add nsw i32 %12, 1, !dbg !56
  %688 = sitofp i32 %687 to float, !dbg !57
  %689 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %688, float %t.0.i340) #5, !dbg !58
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i9), !dbg !59
  %690 = fmul float %689, 0x3FE45F3060000000, !dbg !59
  %691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not.i10 = icmp eq i32 %691, 0, !dbg !59
  %692 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %690) #5, !dbg !59
  %693 = tail call i32 @llvm.nvvm.f2i.rn(float %690) #5, !dbg !59
  %.01.i11 = select i1 %.not.i10, i32 %693, i32 %692, !dbg !59
  %694 = sitofp i32 %.01.i11 to float, !dbg !59
  %695 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not15.i12 = icmp eq i32 %695, 0, !dbg !59
  %696 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %694, float 0xBFF921FB40000000, float %689) #5, !dbg !59
  %697 = tail call float @llvm.nvvm.fma.rn.f(float %694, float 0xBFF921FB40000000, float %689) #5, !dbg !59
  %.02.i13 = select i1 %.not15.i12, float %697, float %696, !dbg !59
  %698 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not16.i14 = icmp eq i32 %698, 0, !dbg !59
  %699 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %694, float 0xBE74442D00000000, float %.02.i13) #5, !dbg !59
  %700 = tail call float @llvm.nvvm.fma.rn.f(float %694, float 0xBE74442D00000000, float %.02.i13) #5, !dbg !59
  %.03.i15 = select i1 %.not16.i14, float %700, float %699, !dbg !59
  %701 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not17.i16 = icmp eq i32 %701, 0, !dbg !59
  %702 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %694, float 0xBCF84698A0000000, float %.03.i15) #5, !dbg !59
  %703 = tail call float @llvm.nvvm.fma.rn.f(float %694, float 0xBCF84698A0000000, float %.03.i15) #5, !dbg !59
  %.04.i17 = select i1 %.not17.i16, float %703, float %702, !dbg !59
  %704 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not18.i18 = icmp eq i32 %704, 0, !dbg !59
  %705 = tail call float @llvm.nvvm.fabs.ftz.f(float %689) #5, !dbg !59
  %706 = tail call float @llvm.nvvm.fabs.f(float %689) #5, !dbg !59
  %.06.i19 = select i1 %.not18.i18, float %706, float %705, !dbg !59
  %707 = fcmp ult float %.06.i19, 1.056150e+05, !dbg !59
  br i1 %707, label %__internal_trig_reduction_kernel.exit.i.i37, label %__nv_isinff.exit.i.i.i20, !dbg !59

__nv_isinff.exit.i.i.i20:                         ; preds = %__nv_powf.exit361
  %708 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not19.i21 = icmp eq i32 %708, 0, !dbg !59
  %.07.i22 = select i1 %.not19.i21, float %706, float %705, !dbg !59
  %709 = fcmp oeq float %.07.i22, 0x7FF0000000000000, !dbg !59
  br i1 %709, label %__nv_fmul_rn.exit.i.i.i60, label %713, !dbg !59

__nv_fmul_rn.exit.i.i.i60:                        ; preds = %__nv_isinff.exit.i.i.i20
  %710 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not27.i61 = icmp eq i32 %710, 0, !dbg !59
  %711 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %689, float 0.000000e+00) #5, !dbg !59
  %712 = tail call float @llvm.nvvm.mul.rn.f(float %689, float 0.000000e+00) #5, !dbg !59
  %.08.i62 = select i1 %.not27.i61, float %712, float %711, !dbg !59
  br label %__internal_trig_reduction_kernel.exit.i.i37, !dbg !59

713:                                              ; preds = %__nv_isinff.exit.i.i.i20
  %714 = bitcast float %689 to i32, !dbg !59
  %715 = lshr i32 %714, 23, !dbg !59
  %716 = and i32 %715, 224, !dbg !59
  %717 = add nsw i32 %716, -128, !dbg !59
  %718 = shl i32 %714, 8, !dbg !59
  %719 = or i32 %718, -2147483648, !dbg !59
  %720 = lshr exact i32 %717, 5, !dbg !59
  br label %721, !dbg !59

721:                                              ; preds = %713, %721
  %indvars.iv466 = phi i64 [ 0, %713 ], [ %indvars.iv.next467, %721 ]
  %hi.i.i.i.0.i23452 = phi i32 [ 0, %713 ], [ %726, %721 ]
  %722 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv466, !dbg !59
  %723 = load i32, ptr addrspace(1) %722, align 4, !dbg !59
  %724 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %723, i32 %719, i32 %hi.i.i.i.0.i23452) #6, !dbg !59, !srcloc !33
  %725 = extractvalue { i32, i32 } %724, 0, !dbg !59
  %726 = extractvalue { i32, i32 } %724, 1, !dbg !59
  %727 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %indvars.iv466, !dbg !59
  store i32 %725, ptr %727, align 4, !dbg !59
  %indvars.iv.next467 = add nuw nsw i64 %indvars.iv466, 1, !dbg !59
  %exitcond468.not = icmp eq i64 %indvars.iv.next467, 6, !dbg !59
  br i1 %exitcond468.not, label %728, label %721, !dbg !59, !llvm.loop !60

728:                                              ; preds = %721
  %729 = getelementptr inbounds i8, ptr %result.i.i.i.i9, i64 24, !dbg !59
  store i32 %726, ptr %729, align 4, !dbg !59
  %730 = and i32 %715, 31, !dbg !59
  %731 = sub nsw i32 6, %720, !dbg !59
  %732 = sext i32 %731 to i64, !dbg !59
  %733 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %732, !dbg !59
  %734 = load i32, ptr %733, align 4, !dbg !59
  %735 = sub nsw i32 5, %720, !dbg !59
  %736 = sext i32 %735 to i64, !dbg !59
  %737 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %736, !dbg !59
  %738 = load i32, ptr %737, align 4, !dbg !59
  %.not20.i25 = icmp eq i32 %730, 0, !dbg !59
  br i1 %.not20.i25, label %__internal_trig_reduction_slowpath.exit.i.i.i26, label %739, !dbg !59

739:                                              ; preds = %728
  %740 = sub nsw i32 4, %720, !dbg !59
  %741 = sub nuw nsw i32 32, %730, !dbg !59
  %742 = shl i32 %734, %730, !dbg !59
  %743 = lshr i32 %738, %741, !dbg !59
  %744 = add i32 %743, %742, !dbg !59
  %745 = shl i32 %738, %730, !dbg !59
  %746 = sext i32 %740 to i64, !dbg !59
  %747 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i9, i64 0, i64 %746, !dbg !59
  %748 = load i32, ptr %747, align 4, !dbg !59
  %749 = lshr i32 %748, %741, !dbg !59
  %750 = add i32 %749, %745, !dbg !59
  br label %__internal_trig_reduction_slowpath.exit.i.i.i26, !dbg !59

__internal_trig_reduction_slowpath.exit.i.i.i26:  ; preds = %739, %728
  %hi.i.i.i.1.i27 = phi i32 [ %744, %739 ], [ %734, %728 ], !dbg !59
  %lo.i.i.i.0.i28 = phi i32 [ %750, %739 ], [ %738, %728 ], !dbg !59
  %751 = lshr i32 %hi.i.i.i.1.i27, 30, !dbg !59
  %752 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i27, i32 %lo.i.i.i.0.i28, i32 2), !dbg !59
  %753 = shl i32 %lo.i.i.i.0.i28, 2, !dbg !59
  %754 = lshr i32 %752, 31, !dbg !59
  %755 = add nuw nsw i32 %754, %751, !dbg !59
  %756 = sub nsw i32 0, %755, !dbg !59
  %.not2123.i29 = icmp slt i32 %714, 0, !dbg !59
  %spec.select.i30 = select i1 %.not2123.i29, i32 %756, i32 %755, !dbg !59
  %757 = xor i32 %752, %714, !dbg !59
  %.lobit.i31 = ashr i32 %752, 31, !dbg !59
  %hi.i.i.i.2.i32 = xor i32 %.lobit.i31, %752, !dbg !59
  %lo.i.i.i.1.i34 = xor i32 %.lobit.i31, %753, !dbg !59
  %758 = zext i32 %hi.i.i.i.2.i32 to i64, !dbg !59
  %759 = shl nuw i64 %758, 32, !dbg !59
  %760 = zext i32 %lo.i.i.i.1.i34 to i64, !dbg !59
  %761 = or disjoint i64 %759, %760, !dbg !59
  %762 = sitofp i64 %761 to double, !dbg !59
  %763 = fmul double %762, 0x3BF921FB54442D19, !dbg !59
  %764 = fptrunc double %763 to float, !dbg !59
  %765 = fneg float %764, !dbg !59
  %.not2526.i35 = icmp slt i32 %757, 0, !dbg !59
  %r.i.i.i.0.i36 = select i1 %.not2526.i35, float %765, float %764, !dbg !59
  br label %__internal_trig_reduction_kernel.exit.i.i37, !dbg !59

__internal_trig_reduction_kernel.exit.i.i37:      ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i26, %__nv_fmul_rn.exit.i.i.i60, %__nv_powf.exit361
  %i.i.1.i38 = phi i32 [ %.01.i11, %__nv_powf.exit361 ], [ 0, %__nv_fmul_rn.exit.i.i.i60 ], [ %spec.select.i30, %__internal_trig_reduction_slowpath.exit.i.i.i26 ], !dbg !59
  %t.i.i.1.i39 = phi float [ %.04.i17, %__nv_powf.exit361 ], [ %.08.i62, %__nv_fmul_rn.exit.i.i.i60 ], [ %r.i.i.i.0.i36, %__internal_trig_reduction_slowpath.exit.i.i.i26 ], !dbg !59
  %766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not28.i40 = icmp eq i32 %766, 0, !dbg !59
  %767 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i39, float %t.i.i.1.i39) #5, !dbg !59
  %768 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i39, float %t.i.i.1.i39) #5, !dbg !59
  %.011.i41 = select i1 %.not28.i40, float %768, float %767, !dbg !59
  %769 = and i32 %i.i.1.i38, 1, !dbg !59
  %.not29.i42 = icmp eq i32 %769, 0, !dbg !59
  %770 = select i1 %.not29.i42, float %t.i.i.1.i39, float 1.000000e+00, !dbg !59
  %771 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not30.i43 = icmp eq i32 %771, 0, !dbg !59
  %772 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i41, float %770, float 0.000000e+00) #5, !dbg !59
  %773 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i41, float %770, float 0.000000e+00) #5, !dbg !59
  %.012.i44 = select i1 %.not30.i43, float %773, float %772, !dbg !59
  br i1 %.not29.i42, label %__internal_fmad.exit2.i.i.i48, label %__internal_fmad.exit1.i.i.i45, !dbg !59

__internal_fmad.exit1.i.i.i45:                    ; preds = %__internal_trig_reduction_kernel.exit.i.i37
  %774 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not31.i46 = icmp eq i32 %774, 0, !dbg !59
  %775 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i41, float 0xBF56C0FDA0000000) #5, !dbg !59
  %776 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i41, float 0xBF56C0FDA0000000) #5, !dbg !59
  %.013.i47 = select i1 %.not31.i46, float %776, float %775, !dbg !59
  br label %__internal_fmad.exit2.i.i.i48, !dbg !59

__internal_fmad.exit2.i.i.i48:                    ; preds = %__internal_fmad.exit1.i.i.i45, %__internal_trig_reduction_kernel.exit.i.i37
  %777 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i45 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i37 ], !dbg !59
  %778 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i45 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i37 ], !dbg !59
  %779 = phi float [ %.013.i47, %__internal_fmad.exit1.i.i.i45 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i37 ], !dbg !59
  %780 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not32.i49 = icmp eq i32 %780, 0, !dbg !59
  %781 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %779, float %.011.i41, float %778) #5, !dbg !59
  %782 = tail call float @llvm.nvvm.fma.rn.f(float %779, float %.011.i41, float %778) #5, !dbg !59
  %.010.i50 = select i1 %.not32.i49, float %782, float %781, !dbg !59
  %783 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not33.i51 = icmp eq i32 %783, 0, !dbg !59
  %784 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i50, float %.011.i41, float %777) #5, !dbg !59
  %785 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i50, float %.011.i41, float %777) #5, !dbg !59
  %.09.i52 = select i1 %.not33.i51, float %785, float %784, !dbg !59
  %786 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not34.i53 = icmp eq i32 %786, 0, !dbg !59
  %787 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i52, float %.012.i44, float %770) #5, !dbg !59
  %788 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i52, float %.012.i44, float %770) #5, !dbg !59
  %.05.i54 = select i1 %.not34.i53, float %788, float %787, !dbg !59
  %789 = and i32 %i.i.1.i38, 2, !dbg !59
  %.not35.i55 = icmp eq i32 %789, 0, !dbg !59
  br i1 %.not35.i55, label %__nv_sinf.exit63, label %__internal_fmad.exit5.i.i.i56, !dbg !59

__internal_fmad.exit5.i.i.i56:                    ; preds = %__internal_fmad.exit2.i.i.i48
  %790 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !59
  %.not36.i57 = icmp eq i32 %790, 0, !dbg !59
  %791 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i54, float -1.000000e+00, float 0.000000e+00) #5, !dbg !59
  %792 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i54, float -1.000000e+00, float 0.000000e+00) #5, !dbg !59
  %.0.i58 = select i1 %.not36.i57, float %792, float %791, !dbg !59
  br label %__nv_sinf.exit63, !dbg !59

__nv_sinf.exit63:                                 ; preds = %__internal_fmad.exit2.i.i.i48, %__internal_fmad.exit5.i.i.i56
  %z.i.i.0.i59 = phi float [ %.0.i58, %__internal_fmad.exit5.i.i.i56 ], [ %.05.i54, %__internal_fmad.exit2.i.i.i48 ], !dbg !59
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i9), !dbg !59
  %793 = or disjoint i32 %535, 1, !dbg !61
  %794 = sitofp i32 %793 to float, !dbg !62
  %795 = fmul float %794, 5.000000e-01, !dbg !63
  %796 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !64
  %.not.i5 = icmp eq i32 %796, 0, !dbg !64
  %797 = tail call float @llvm.nvvm.floor.ftz.f(float %795), !dbg !64
  %798 = tail call float @llvm.nvvm.floor.f(float %795), !dbg !64
  %.0.i6 = select i1 %.not.i5, float %798, float %797, !dbg !64
  %799 = fmul float %.0.i6, 2.000000e+00, !dbg !65
  %800 = fmul float %799, 1.562500e-02, !dbg !66
  %801 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %802 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not.i362 = icmp eq i32 %802, 0, !dbg !67
  %.09.i363 = select i1 %.not.i362, float %26, float %25, !dbg !67
  %803 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not12.i364 = icmp eq i32 %803, 0, !dbg !67
  %804 = fcmp olt float %.09.i363, 0x3810000000000000, !dbg !67
  %805 = fmul float %.09.i363, 0x4170000000000000, !dbg !67
  %806 = select i1 %.not12.i364, i1 %804, i1 false, !dbg !67
  %.116.i367 = select i1 %806, float %805, float %.09.i363, !dbg !67
  %expo.i.i.1.i368 = select i1 %806, float -1.510000e+02, float -1.270000e+02, !dbg !67
  %807 = bitcast float %.116.i367 to i32, !dbg !67
  %808 = and i32 %807, 8388607, !dbg !67
  %809 = or disjoint i32 %808, 1065353216, !dbg !67
  %810 = bitcast i32 %809 to float, !dbg !67
  %811 = lshr i32 %807, 23, !dbg !67
  %812 = uitofp nneg i32 %811 to float, !dbg !67
  %813 = fadd float %expo.i.i.1.i368, %812, !dbg !67
  %814 = fcmp ogt float %810, 0x3FF6A09E60000000, !dbg !67
  %815 = fmul float %810, 5.000000e-01, !dbg !67
  %816 = fadd float %813, 1.000000e+00, !dbg !67
  %expo.i.i.2.i369 = select i1 %814, float %816, float %813, !dbg !67
  %m.i.i.0.i370 = select i1 %814, float %815, float %810, !dbg !67
  %817 = fadd float %m.i.i.0.i370, -1.000000e+00, !dbg !67
  %818 = fadd float %m.i.i.0.i370, 1.000000e+00, !dbg !67
  %819 = tail call float asm "rcp.approx.ftz.f32 $0,$1;", "=f,f"(float %818) #6, !dbg !67, !srcloc !28
  %820 = fmul float %817, 2.000000e+00, !dbg !67
  %821 = fmul float %819, %820, !dbg !67
  %822 = fmul float %821, %821, !dbg !67
  %823 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not13.i371 = icmp eq i32 %823, 0, !dbg !67
  %824 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3F631E1FC0000000, float %822, float 0x3F8995EC60000000) #5, !dbg !67
  %825 = tail call float @llvm.nvvm.fma.rn.f(float 0x3F631E1FC0000000, float %822, float 0x3F8995EC60000000) #5, !dbg !67
  %.020.i372 = select i1 %.not13.i371, float %825, float %824, !dbg !67
  %826 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not14.i373 = icmp eq i32 %826, 0, !dbg !67
  %827 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.020.i372, float %822, float 0x3FB55557A0000000) #5, !dbg !67
  %828 = tail call float @llvm.nvvm.fma.rn.f(float %.020.i372, float %822, float 0x3FB55557A0000000) #5, !dbg !67
  %.021.i374 = select i1 %.not14.i373, float %828, float %827, !dbg !67
  %829 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not15.i375 = icmp eq i32 %829, 0, !dbg !67
  %830 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.021.i374, float %822) #5, !dbg !67
  %831 = tail call float @llvm.nvvm.mul.rn.f(float %.021.i374, float %822) #5, !dbg !67
  %.022.i376 = select i1 %.not15.i375, float %831, float %830, !dbg !67
  %832 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not16.i377 = icmp eq i32 %832, 0, !dbg !67
  %833 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.022.i376, float %821) #5, !dbg !67
  %834 = tail call float @llvm.nvvm.mul.rn.f(float %.022.i376, float %821) #5, !dbg !67
  %.024.i378 = select i1 %.not16.i377, float %834, float %833, !dbg !67
  %835 = fsub float %817, %821, !dbg !67
  %836 = fmul float %835, 2.000000e+00, !dbg !67
  %837 = fneg float %821, !dbg !67
  %838 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not17.i379 = icmp eq i32 %838, 0, !dbg !67
  %839 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %837, float %817, float %836) #5, !dbg !67
  %840 = tail call float @llvm.nvvm.fma.rn.f(float %837, float %817, float %836) #5, !dbg !67
  %.025.i380 = select i1 %.not17.i379, float %840, float %839, !dbg !67
  %841 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not18.i381 = icmp eq i32 %841, 0, !dbg !67
  %842 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %819, float %.025.i380) #5, !dbg !67
  %843 = tail call float @llvm.nvvm.mul.rn.f(float %819, float %.025.i380) #5, !dbg !67
  %.026.i382 = select i1 %.not18.i381, float %843, float %842, !dbg !67
  %844 = fadd float %821, %.024.i378, !dbg !67
  %845 = fsub float %821, %844, !dbg !67
  %846 = fadd float %.024.i378, %845, !dbg !67
  %847 = fadd float %.026.i382, %846, !dbg !67
  %848 = fadd float %844, %847, !dbg !67
  %849 = fsub float %844, %848, !dbg !67
  %850 = fadd float %847, %849, !dbg !67
  %851 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not19.i383 = icmp eq i32 %851, 0, !dbg !67
  %852 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i369, float 0x3FE62E4000000000) #5, !dbg !67
  %853 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i369, float 0x3FE62E4000000000) #5, !dbg !67
  %.019.i384 = select i1 %.not19.i383, float %853, float %852, !dbg !67
  %854 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not20.i385 = icmp eq i32 %854, 0, !dbg !67
  %855 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %expo.i.i.2.i369, float 0x3EB7F7D1C0000000) #5, !dbg !67
  %856 = tail call float @llvm.nvvm.mul.rn.f(float %expo.i.i.2.i369, float 0x3EB7F7D1C0000000) #5, !dbg !67
  %.018.i386 = select i1 %.not20.i385, float %856, float %855, !dbg !67
  %857 = fadd float %.019.i384, %848, !dbg !67
  %858 = fsub float %.019.i384, %857, !dbg !67
  %859 = fadd float %848, %858, !dbg !67
  %860 = fadd float %850, %859, !dbg !67
  %861 = fadd float %.018.i386, %860, !dbg !67
  %862 = fadd float %857, %861, !dbg !67
  %863 = fsub float %857, %862, !dbg !67
  %864 = fadd float %861, %863, !dbg !67
  %865 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not21.i387 = icmp eq i32 %865, 0, !dbg !67
  %866 = tail call float @llvm.nvvm.fabs.ftz.f(float %800) #5, !dbg !67
  %867 = tail call float @llvm.nvvm.fabs.f(float %800) #5, !dbg !67
  %.027.i388 = select i1 %.not21.i387, float %867, float %866, !dbg !67
  %868 = fcmp ogt float %.027.i388, 0x46FED09BE0000000, !dbg !67
  %869 = fmul float %800, 0x3F20000000000000, !dbg !67
  %.013.i389 = select i1 %868, float %869, float %800, !dbg !67
  %870 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not22.i390 = icmp eq i32 %870, 0, !dbg !67
  %871 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %.013.i389, float %862) #5, !dbg !67
  %872 = tail call float @llvm.nvvm.mul.rn.f(float %.013.i389, float %862) #5, !dbg !67
  %.028.i391 = select i1 %.not22.i390, float %872, float %871, !dbg !67
  %873 = fneg float %.028.i391, !dbg !67
  %874 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not23.i392 = icmp eq i32 %874, 0, !dbg !67
  %875 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i389, float %862, float %873) #5, !dbg !67
  %876 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i389, float %862, float %873) #5, !dbg !67
  %.029.i393 = select i1 %.not23.i392, float %876, float %875, !dbg !67
  %877 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not24.i394 = icmp eq i32 %877, 0, !dbg !67
  %878 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.013.i389, float %864, float %.029.i393) #5, !dbg !67
  %879 = tail call float @llvm.nvvm.fma.rn.f(float %.013.i389, float %864, float %.029.i393) #5, !dbg !67
  %.030.i395 = select i1 %.not24.i394, float %879, float %878, !dbg !67
  %880 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not25.i396 = icmp eq i32 %880, 0, !dbg !67
  %881 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0.000000e+00, float %862, float %.030.i395) #5, !dbg !67
  %882 = tail call float @llvm.nvvm.fma.rn.f(float 0.000000e+00, float %862, float %.030.i395) #5, !dbg !67
  %.031.i397 = select i1 %.not25.i396, float %882, float %881, !dbg !67
  %883 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not26.i398 = icmp eq i32 %883, 0, !dbg !67
  %884 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i391, float %.031.i397) #5, !dbg !67
  %885 = tail call float @llvm.nvvm.add.rn.f(float %.028.i391, float %.031.i397) #5, !dbg !67
  %.032.i399 = select i1 %.not26.i398, float %885, float %884, !dbg !67
  %886 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %887 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %888 = bitcast float %.032.i399 to i32, !dbg !67
  %889 = icmp eq i32 %888, 1118925336, !dbg !67
  %prod.i.145.0.i405 = select i1 %889, float 0x40562E42E0000000, float %.032.i399, !dbg !67
  %890 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not29.i406 = icmp eq i32 %890, 0, !dbg !67
  %891 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %prod.i.145.0.i405, float 0x3FF7154760000000) #5, !dbg !67
  %892 = tail call float @llvm.nvvm.mul.rn.f(float %prod.i.145.0.i405, float 0x3FF7154760000000) #5, !dbg !67
  %.017.i407 = select i1 %.not29.i406, float %892, float %891, !dbg !67
  %893 = tail call float @llvm.nvvm.trunc.f(float %.017.i407) #5, !dbg !67
  %894 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not30.i408 = icmp eq i32 %894, 0, !dbg !67
  %895 = tail call float @llvm.nvvm.fabs.ftz.f(float %893) #5, !dbg !67
  %896 = tail call float @llvm.nvvm.fabs.f(float %893) #5, !dbg !67
  %.023.i409 = select i1 %.not30.i408, float %896, float %895, !dbg !67
  %897 = fcmp ogt float %.023.i409, 1.260000e+02, !dbg !67
  %898 = tail call float @llvm.copysign.f32(float 1.260000e+02, float %893), !dbg !67
  %j.i.i.0.i410 = select i1 %897, float %898, float %893, !dbg !67
  %899 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not31.i411 = icmp eq i32 %899, 0, !dbg !67
  %900 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i410, float 0xBFE62E4300000000, float %prod.i.145.0.i405) #5, !dbg !67
  %901 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i410, float 0xBFE62E4300000000, float %prod.i.145.0.i405) #5, !dbg !67
  %.035.i412 = select i1 %.not31.i411, float %901, float %900, !dbg !67
  %902 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not32.i413 = icmp eq i32 %902, 0, !dbg !67
  %903 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %j.i.i.0.i410, float 0x3E205C6100000000, float %.035.i412) #5, !dbg !67
  %904 = tail call float @llvm.nvvm.fma.rn.f(float %j.i.i.0.i410, float 0x3E205C6100000000, float %.035.i412) #5, !dbg !67
  %.036.i414 = select i1 %.not32.i413, float %904, float %903, !dbg !67
  %905 = fmul float %.036.i414, 0x3FF7154760000000, !dbg !67
  %906 = fadd float %j.i.i.0.i410, 0x4168000FE0000000, !dbg !67
  %907 = bitcast float %906 to i32, !dbg !67
  %908 = shl i32 %907, 23, !dbg !67
  %909 = bitcast i32 %908 to float, !dbg !67
  %910 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %905) #5, !dbg !67
  %911 = fmul float %910, %909, !dbg !67
  %912 = fcmp une float %911, 0x7FF0000000000000, !dbg !67
  br i1 %912, label %__internal_fmad.exit.i.i440, label %__internal_powf_corner_cases.exit.i415, !dbg !67

__internal_fmad.exit.i.i440:                      ; preds = %__nv_sinf.exit63
  %.not28.i402 = icmp eq i32 %887, 0, !dbg !67
  %.not27.i400 = icmp eq i32 %886, 0, !dbg !67
  %913 = fneg float %.032.i399, !dbg !67
  %914 = tail call float @llvm.nvvm.add.rn.f(float %.028.i391, float %913) #5, !dbg !67
  %915 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.028.i391, float %913) #5, !dbg !67
  %.033.i401 = select i1 %.not27.i400, float %914, float %915, !dbg !67
  %916 = tail call float @llvm.nvvm.add.rn.f(float %.033.i401, float %.031.i397) #5, !dbg !67
  %917 = tail call float @llvm.nvvm.add.rn.ftz.f(float %.033.i401, float %.031.i397) #5, !dbg !67
  %.034.i403 = select i1 %.not28.i402, float %916, float %917, !dbg !67
  %918 = fadd float %.034.i403, 0x3EE0000000000000, !dbg !67
  %prod.i.044.0.i404 = select i1 %889, float %918, float %.034.i403, !dbg !67
  %919 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not33.i441 = icmp eq i32 %919, 0, !dbg !67
  %920 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %911, float %prod.i.044.0.i404, float %911) #5, !dbg !67
  %921 = tail call float @llvm.nvvm.fma.rn.f(float %911, float %prod.i.044.0.i404, float %911) #5, !dbg !67
  %.014.i442 = select i1 %.not33.i441, float %921, float %920, !dbg !67
  br label %__internal_powf_corner_cases.exit.i415, !dbg !67

__internal_powf_corner_cases.exit.i415:           ; preds = %__internal_fmad.exit.i.i440, %__nv_sinf.exit63
  %t.i.0.i416 = phi float [ %.014.i442, %__internal_fmad.exit.i.i440 ], [ 0x7FF0000000000000, %__nv_sinf.exit63 ], !dbg !67
  %922 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not34.i417 = icmp eq i32 %922, 0, !dbg !67
  %.01.i418 = select i1 %.not34.i417, float %26, float %25, !dbg !67
  %923 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not35.i419 = icmp eq i32 %923, 0, !dbg !67
  %.02.i420 = select i1 %.not35.i419, float %867, float %866, !dbg !67
  %924 = fadd float %.01.i418, %.02.i420, !dbg !67
  %925 = bitcast float %924 to i32, !dbg !67
  %926 = icmp sgt i32 %925, 2139095039, !dbg !67
  br i1 %926, label %__nv_isnanf.exit.i.i423, label %__nv_powf.exit443, !dbg !67

__nv_isnanf.exit.i.i423:                          ; preds = %__internal_powf_corner_cases.exit.i415
  %927 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not36.i424 = icmp eq i32 %927, 0, !dbg !67
  %.06.i425 = select i1 %.not36.i424, float %26, float %25, !dbg !67
  %928 = fcmp uno float %.06.i425, 0.000000e+00, !dbg !67
  br i1 %928, label %931, label %__nv_isnanf.exit11.i.i426, !dbg !67

__nv_isnanf.exit11.i.i426:                        ; preds = %__nv_isnanf.exit.i.i423
  %929 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not37.i427 = icmp eq i32 %929, 0, !dbg !67
  %.07.i428 = select i1 %.not37.i427, float %867, float %866, !dbg !67
  %930 = fcmp uno float %.07.i428, 0.000000e+00, !dbg !67
  br i1 %930, label %931, label %__nv_isinff.exit8.i.i429, !dbg !67

931:                                              ; preds = %__nv_isnanf.exit11.i.i426, %__nv_isnanf.exit.i.i423
  %932 = fadd float %800, 1.000000e+04, !dbg !67
  br label %__nv_powf.exit443, !dbg !67

__nv_isinff.exit8.i.i429:                         ; preds = %__nv_isnanf.exit11.i.i426
  %933 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not38.i430 = icmp eq i32 %933, 0, !dbg !67
  %.05.i431 = select i1 %.not38.i430, float %867, float %866, !dbg !67
  %934 = fcmp oeq float %.05.i431, 0x7FF0000000000000, !dbg !67
  %935 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !67
  %.not40.i436 = icmp eq i32 %935, 0, !dbg !67
  %.04.i437 = select i1 %.not40.i436, float %26, float %25, !dbg !67
  br i1 %934, label %__nv_fabsf.exit5.i.i435, label %__nv_isinff.exit.i.i432, !dbg !67

__nv_fabsf.exit5.i.i435:                          ; preds = %__nv_isinff.exit8.i.i429
  %936 = fcmp ogt float %.04.i437, 1.000000e+00, !dbg !67
  %ti.i.0.i438 = select i1 %936, i32 2139095040, i32 0, !dbg !67
  %937 = fcmp olt float %800, 0.000000e+00, !dbg !67
  %938 = xor i32 %ti.i.0.i438, 2139095040, !dbg !67
  %ti.i.1.i439 = select i1 %937, i32 %938, i32 %ti.i.0.i438, !dbg !67
  %939 = bitcast i32 %ti.i.1.i439 to float, !dbg !67
  br label %__nv_powf.exit443, !dbg !67

__nv_isinff.exit.i.i432:                          ; preds = %__nv_isinff.exit8.i.i429
  %940 = fcmp oeq float %.04.i437, 0x7FF0000000000000, !dbg !67
  br i1 %940, label %941, label %__nv_powf.exit443, !dbg !67

941:                                              ; preds = %__nv_isinff.exit.i.i432
  %942 = fcmp oge float %800, 0.000000e+00, !dbg !67
  %943 = select i1 %942, float 0x7FF0000000000000, float 0.000000e+00, !dbg !67
  br label %__nv_powf.exit443, !dbg !67

__nv_powf.exit443:                                ; preds = %__internal_powf_corner_cases.exit.i415, %931, %__nv_fabsf.exit5.i.i435, %__nv_isinff.exit.i.i432, %941
  %.3.i421 = phi float [ %t.i.0.i416, %__internal_powf_corner_cases.exit.i415 ], [ %932, %931 ], [ %939, %__nv_fabsf.exit5.i.i435 ], [ %943, %941 ], [ %t.i.0.i416, %__nv_isinff.exit.i.i432 ], !dbg !67
  %944 = fcmp oeq float %800, 0.000000e+00, !dbg !67
  %t.0.i422 = select i1 %944, float 1.000000e+00, float %.3.i421, !dbg !67
  %945 = tail call float asm "div.full.f32 $0, $1, $2;", "=r,r,r"(float %688, float %t.0.i422) #5, !dbg !68
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %result.i.i.i.i117), !dbg !69
  %946 = fmul float %945, 0x3FE45F3060000000, !dbg !69
  %947 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not.i118 = icmp eq i32 %947, 0, !dbg !69
  %948 = tail call i32 @llvm.nvvm.f2i.rn.ftz(float %946) #5, !dbg !69
  %949 = tail call i32 @llvm.nvvm.f2i.rn(float %946) #5, !dbg !69
  %.01.i119 = select i1 %.not.i118, i32 %949, i32 %948, !dbg !69
  %950 = sitofp i32 %.01.i119 to float, !dbg !69
  %951 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not15.i120 = icmp eq i32 %951, 0, !dbg !69
  %952 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %950, float 0xBFF921FB40000000, float %945) #5, !dbg !69
  %953 = tail call float @llvm.nvvm.fma.rn.f(float %950, float 0xBFF921FB40000000, float %945) #5, !dbg !69
  %.02.i121 = select i1 %.not15.i120, float %953, float %952, !dbg !69
  %954 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not16.i122 = icmp eq i32 %954, 0, !dbg !69
  %955 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %950, float 0xBE74442D00000000, float %.02.i121) #5, !dbg !69
  %956 = tail call float @llvm.nvvm.fma.rn.f(float %950, float 0xBE74442D00000000, float %.02.i121) #5, !dbg !69
  %.03.i123 = select i1 %.not16.i122, float %956, float %955, !dbg !69
  %957 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not17.i124 = icmp eq i32 %957, 0, !dbg !69
  %958 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %950, float 0xBCF84698A0000000, float %.03.i123) #5, !dbg !69
  %959 = tail call float @llvm.nvvm.fma.rn.f(float %950, float 0xBCF84698A0000000, float %.03.i123) #5, !dbg !69
  %.04.i125 = select i1 %.not17.i124, float %959, float %958, !dbg !69
  %960 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not18.i126 = icmp eq i32 %960, 0, !dbg !69
  %961 = tail call float @llvm.nvvm.fabs.ftz.f(float %945) #5, !dbg !69
  %962 = tail call float @llvm.nvvm.fabs.f(float %945) #5, !dbg !69
  %.06.i127 = select i1 %.not18.i126, float %962, float %961, !dbg !69
  %963 = fcmp ult float %.06.i127, 1.056150e+05, !dbg !69
  br i1 %963, label %__internal_trig_reduction_kernel.exit.i.i145, label %__nv_isinff.exit.i.i.i128, !dbg !69

__nv_isinff.exit.i.i.i128:                        ; preds = %__nv_powf.exit443
  %964 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not19.i129 = icmp eq i32 %964, 0, !dbg !69
  %.07.i130 = select i1 %.not19.i129, float %962, float %961, !dbg !69
  %965 = fcmp oeq float %.07.i130, 0x7FF0000000000000, !dbg !69
  br i1 %965, label %__nv_fmul_rn.exit.i.i.i168, label %969, !dbg !69

__nv_fmul_rn.exit.i.i.i168:                       ; preds = %__nv_isinff.exit.i.i.i128
  %966 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not27.i169 = icmp eq i32 %966, 0, !dbg !69
  %967 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %945, float 0.000000e+00) #5, !dbg !69
  %968 = tail call float @llvm.nvvm.mul.rn.f(float %945, float 0.000000e+00) #5, !dbg !69
  %.08.i170 = select i1 %.not27.i169, float %968, float %967, !dbg !69
  br label %__internal_trig_reduction_kernel.exit.i.i145, !dbg !69

969:                                              ; preds = %__nv_isinff.exit.i.i.i128
  %970 = bitcast float %945 to i32, !dbg !69
  %971 = lshr i32 %970, 23, !dbg !69
  %972 = and i32 %971, 224, !dbg !69
  %973 = add nsw i32 %972, -128, !dbg !69
  %974 = shl i32 %970, 8, !dbg !69
  %975 = or i32 %974, -2147483648, !dbg !69
  %976 = lshr exact i32 %973, 5, !dbg !69
  br label %977, !dbg !69

977:                                              ; preds = %969, %977
  %indvars.iv469 = phi i64 [ 0, %969 ], [ %indvars.iv.next470, %977 ]
  %hi.i.i.i.0.i131454 = phi i32 [ 0, %969 ], [ %982, %977 ]
  %978 = getelementptr inbounds [6 x i32], ptr addrspace(1) @__cudart_i2opi_f, i64 0, i64 %indvars.iv469, !dbg !69
  %979 = load i32, ptr addrspace(1) %978, align 4, !dbg !69
  %980 = tail call { i32, i32 } asm "{\0A\09mad.lo.cc.u32   $0, $2, $3, $4;\0A\09madc.hi.u32     $1, $2, $3,  0;\0A\09}", "=r,=r,r,r,r"(i32 %979, i32 %975, i32 %hi.i.i.i.0.i131454) #6, !dbg !69, !srcloc !33
  %981 = extractvalue { i32, i32 } %980, 0, !dbg !69
  %982 = extractvalue { i32, i32 } %980, 1, !dbg !69
  %983 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %indvars.iv469, !dbg !69
  store i32 %981, ptr %983, align 4, !dbg !69
  %indvars.iv.next470 = add nuw nsw i64 %indvars.iv469, 1, !dbg !69
  %exitcond471.not = icmp eq i64 %indvars.iv.next470, 6, !dbg !69
  br i1 %exitcond471.not, label %984, label %977, !dbg !69, !llvm.loop !70

984:                                              ; preds = %977
  %985 = getelementptr inbounds i8, ptr %result.i.i.i.i117, i64 24, !dbg !69
  store i32 %982, ptr %985, align 4, !dbg !69
  %986 = and i32 %971, 31, !dbg !69
  %987 = sub nsw i32 6, %976, !dbg !69
  %988 = sext i32 %987 to i64, !dbg !69
  %989 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %988, !dbg !69
  %990 = load i32, ptr %989, align 4, !dbg !69
  %991 = sub nsw i32 5, %976, !dbg !69
  %992 = sext i32 %991 to i64, !dbg !69
  %993 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %992, !dbg !69
  %994 = load i32, ptr %993, align 4, !dbg !69
  %.not20.i133 = icmp eq i32 %986, 0, !dbg !69
  br i1 %.not20.i133, label %__internal_trig_reduction_slowpath.exit.i.i.i134, label %995, !dbg !69

995:                                              ; preds = %984
  %996 = sub nsw i32 4, %976, !dbg !69
  %997 = sub nuw nsw i32 32, %986, !dbg !69
  %998 = shl i32 %990, %986, !dbg !69
  %999 = lshr i32 %994, %997, !dbg !69
  %1000 = add i32 %999, %998, !dbg !69
  %1001 = shl i32 %994, %986, !dbg !69
  %1002 = sext i32 %996 to i64, !dbg !69
  %1003 = getelementptr inbounds [7 x i32], ptr %result.i.i.i.i117, i64 0, i64 %1002, !dbg !69
  %1004 = load i32, ptr %1003, align 4, !dbg !69
  %1005 = lshr i32 %1004, %997, !dbg !69
  %1006 = add i32 %1005, %1001, !dbg !69
  br label %__internal_trig_reduction_slowpath.exit.i.i.i134, !dbg !69

__internal_trig_reduction_slowpath.exit.i.i.i134: ; preds = %995, %984
  %hi.i.i.i.1.i135 = phi i32 [ %1000, %995 ], [ %990, %984 ], !dbg !69
  %lo.i.i.i.0.i136 = phi i32 [ %1006, %995 ], [ %994, %984 ], !dbg !69
  %1007 = lshr i32 %hi.i.i.i.1.i135, 30, !dbg !69
  %1008 = tail call i32 @llvm.fshl.i32(i32 %hi.i.i.i.1.i135, i32 %lo.i.i.i.0.i136, i32 2), !dbg !69
  %1009 = shl i32 %lo.i.i.i.0.i136, 2, !dbg !69
  %1010 = lshr i32 %1008, 31, !dbg !69
  %1011 = add nuw nsw i32 %1010, %1007, !dbg !69
  %1012 = sub nsw i32 0, %1011, !dbg !69
  %.not2123.i137 = icmp slt i32 %970, 0, !dbg !69
  %spec.select.i138 = select i1 %.not2123.i137, i32 %1012, i32 %1011, !dbg !69
  %1013 = xor i32 %1008, %970, !dbg !69
  %.lobit.i139 = ashr i32 %1008, 31, !dbg !69
  %hi.i.i.i.2.i140 = xor i32 %.lobit.i139, %1008, !dbg !69
  %lo.i.i.i.1.i142 = xor i32 %.lobit.i139, %1009, !dbg !69
  %1014 = zext i32 %hi.i.i.i.2.i140 to i64, !dbg !69
  %1015 = shl nuw i64 %1014, 32, !dbg !69
  %1016 = zext i32 %lo.i.i.i.1.i142 to i64, !dbg !69
  %1017 = or disjoint i64 %1015, %1016, !dbg !69
  %1018 = sitofp i64 %1017 to double, !dbg !69
  %1019 = fmul double %1018, 0x3BF921FB54442D19, !dbg !69
  %1020 = fptrunc double %1019 to float, !dbg !69
  %1021 = fneg float %1020, !dbg !69
  %.not2526.i143 = icmp slt i32 %1013, 0, !dbg !69
  %r.i.i.i.0.i144 = select i1 %.not2526.i143, float %1021, float %1020, !dbg !69
  br label %__internal_trig_reduction_kernel.exit.i.i145, !dbg !69

__internal_trig_reduction_kernel.exit.i.i145:     ; preds = %__internal_trig_reduction_slowpath.exit.i.i.i134, %__nv_fmul_rn.exit.i.i.i168, %__nv_powf.exit443
  %i.i.1.i146 = phi i32 [ %.01.i119, %__nv_powf.exit443 ], [ 0, %__nv_fmul_rn.exit.i.i.i168 ], [ %spec.select.i138, %__internal_trig_reduction_slowpath.exit.i.i.i134 ], !dbg !69
  %t.i.i.1.i147 = phi float [ %.04.i125, %__nv_powf.exit443 ], [ %.08.i170, %__nv_fmul_rn.exit.i.i.i168 ], [ %r.i.i.i.0.i144, %__internal_trig_reduction_slowpath.exit.i.i.i134 ], !dbg !69
  %1022 = add i32 %i.i.1.i146, 1, !dbg !69
  %1023 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not28.i148 = icmp eq i32 %1023, 0, !dbg !69
  %1024 = tail call float @llvm.nvvm.mul.rn.ftz.f(float %t.i.i.1.i147, float %t.i.i.1.i147) #5, !dbg !69
  %1025 = tail call float @llvm.nvvm.mul.rn.f(float %t.i.i.1.i147, float %t.i.i.1.i147) #5, !dbg !69
  %.011.i149 = select i1 %.not28.i148, float %1025, float %1024, !dbg !69
  %1026 = and i32 %i.i.1.i146, 1, !dbg !69
  %.not29.not.i150 = icmp eq i32 %1026, 0, !dbg !69
  %1027 = select i1 %.not29.not.i150, float 1.000000e+00, float %t.i.i.1.i147, !dbg !69
  %1028 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not30.i151 = icmp eq i32 %1028, 0, !dbg !69
  %1029 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i149, float %1027, float 0.000000e+00) #5, !dbg !69
  %1030 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i149, float %1027, float 0.000000e+00) #5, !dbg !69
  %.012.i152 = select i1 %.not30.i151, float %1030, float %1029, !dbg !69
  br i1 %.not29.not.i150, label %__internal_fmad.exit1.i.i.i165, label %__internal_fmad.exit2.i.i.i153, !dbg !69

__internal_fmad.exit1.i.i.i165:                   ; preds = %__internal_trig_reduction_kernel.exit.i.i145
  %1031 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not31.i166 = icmp eq i32 %1031, 0, !dbg !69
  %1032 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3EF9758000000000, float %.011.i149, float 0xBF56C0FDA0000000) #5, !dbg !69
  %1033 = tail call float @llvm.nvvm.fma.rn.f(float 0x3EF9758000000000, float %.011.i149, float 0xBF56C0FDA0000000) #5, !dbg !69
  %.013.i167 = select i1 %.not31.i166, float %1033, float %1032, !dbg !69
  br label %__internal_fmad.exit2.i.i.i153, !dbg !69

__internal_fmad.exit2.i.i.i153:                   ; preds = %__internal_fmad.exit1.i.i.i165, %__internal_trig_reduction_kernel.exit.i.i145
  %1034 = phi float [ 0xBFDFFFFFE0000000, %__internal_fmad.exit1.i.i.i165 ], [ 0xBFC5555500000000, %__internal_trig_reduction_kernel.exit.i.i145 ], !dbg !69
  %1035 = phi float [ 0x3FA5555760000000, %__internal_fmad.exit1.i.i.i165 ], [ 0x3F8110BC80000000, %__internal_trig_reduction_kernel.exit.i.i145 ], !dbg !69
  %1036 = phi float [ %.013.i167, %__internal_fmad.exit1.i.i.i165 ], [ 0xBF29A82A60000000, %__internal_trig_reduction_kernel.exit.i.i145 ], !dbg !69
  %1037 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not32.i154 = icmp eq i32 %1037, 0, !dbg !69
  %1038 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1036, float %.011.i149, float %1035) #5, !dbg !69
  %1039 = tail call float @llvm.nvvm.fma.rn.f(float %1036, float %.011.i149, float %1035) #5, !dbg !69
  %.010.i155 = select i1 %.not32.i154, float %1039, float %1038, !dbg !69
  %1040 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not33.i156 = icmp eq i32 %1040, 0, !dbg !69
  %1041 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i155, float %.011.i149, float %1034) #5, !dbg !69
  %1042 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i155, float %.011.i149, float %1034) #5, !dbg !69
  %.09.i157 = select i1 %.not33.i156, float %1042, float %1041, !dbg !69
  %1043 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not34.i158 = icmp eq i32 %1043, 0, !dbg !69
  %1044 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i157, float %.012.i152, float %1027) #5, !dbg !69
  %1045 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i157, float %.012.i152, float %1027) #5, !dbg !69
  %.05.i159 = select i1 %.not34.i158, float %1045, float %1044, !dbg !69
  %1046 = and i32 %1022, 2, !dbg !69
  %.not35.i160 = icmp eq i32 %1046, 0, !dbg !69
  br i1 %.not35.i160, label %__nv_cosf.exit171, label %__internal_fmad.exit5.i.i.i161, !dbg !69

__internal_fmad.exit5.i.i.i161:                   ; preds = %__internal_fmad.exit2.i.i.i153
  %1047 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #5, !dbg !69
  %.not36.i162 = icmp eq i32 %1047, 0, !dbg !69
  %1048 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i159, float -1.000000e+00, float 0.000000e+00) #5, !dbg !69
  %1049 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i159, float -1.000000e+00, float 0.000000e+00) #5, !dbg !69
  %.0.i163 = select i1 %.not36.i162, float %1049, float %1048, !dbg !69
  br label %__nv_cosf.exit171, !dbg !69

__nv_cosf.exit171:                                ; preds = %__internal_fmad.exit2.i.i.i153, %__internal_fmad.exit5.i.i.i161
  %z.i.i.0.i164 = phi float [ %.0.i163, %__internal_fmad.exit5.i.i.i161 ], [ %.05.i159, %__internal_fmad.exit2.i.i.i153 ], !dbg !69
  %1050 = mul i32 %533, 2, !dbg !71
  %.decomposed484 = sub i32 %532, %1050, !dbg !71
  %1051 = icmp sgt i32 %.decomposed484, 0, !dbg !72
  %1052 = icmp sgt i32 %.decomposed, 63, !dbg !73
  %1053 = and i1 %1052, %1051, !dbg !74
  %1054 = icmp slt i32 %.decomposed484, 1, !dbg !75
  %1055 = and i1 %1052, %1054, !dbg !76
  %1056 = select i1 %1055, float %z.i.i.0.i59, float 0.000000e+00, !dbg !77
  %1057 = mul i8 %13, 2, !dbg !78
  %.decomposed485 = sub i8 %.lhs.trunc444, %1057, !dbg !78
  %1058 = icmp slt i8 %.decomposed485, 1, !dbg !79
  %1059 = icmp slt i32 %.decomposed, 64, !dbg !80
  %1060 = and i1 %1059, %1058, !dbg !81
  %1061 = select i1 %1060, float %z.i.i.0.i, float 0.000000e+00, !dbg !82
  %1062 = icmp sgt i8 %.decomposed485, 0, !dbg !83
  %1063 = and i1 %1059, %1062, !dbg !84
  %1064 = select i1 %1063, float %z.i.i.0.i110, float 0.000000e+00, !dbg !85
  %1065 = select i1 %1058, float %1061, float %1064, !dbg !86
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %result.i.i.i.i117), !dbg !69
  %1066 = select i1 %1053, float %z.i.i.0.i164, float 0.000000e+00, !dbg !87
  %1067 = select i1 %1054, float %1056, float %1066, !dbg !88
  %1068 = select i1 %1059, float %1065, float %1067, !dbg !89
  %1069 = sext i32 %7 to i64, !dbg !90
  %1070 = getelementptr float, ptr addrspace(1) %0, i64 %1069, !dbg !90
  %1071 = bitcast float %1068 to i32, !dbg !91
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1071, ptr addrspace(1) %1070, i1 true) #5, !dbg !91
  ret void, !dbg !92
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.floor.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn.ftz(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.nvvm.f2i.rn(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.ftz.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fabs.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.mul.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.trunc.f(float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.ftz.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.add.rn.f(float, float) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #3

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }
attributes #6 = { nounwind memory(none) }

!llvm.module.flags = !{!0, !1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!4, !5}
!llvm.ident = !{!6}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!3 = !DIFile(filename: "cghpttuojtqgvgspubroa6r2ppfjwmap6cfzvrcjl2lvuk362b7j.py", directory: "inductor_cache/gh")
!4 = !{ptr @triton_poi_fused_cat_0, !"kernel", i32 1}
!5 = !{ptr @triton_poi_fused_cat_0, !"reqntidx", i32 128}
!6 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!7 = distinct !DISubprogram(name: "triton_poi_fused_cat_0", linkageName: "triton_poi_fused_cat_0", scope: !3, file: !3, line: 19, type: !8, scopeLine: 19, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2)
!8 = !DISubroutineType(cc: DW_CC_normal, types: !9)
!9 = !{}
!10 = !DILocation(line: 21, column: 28, scope: !7)
!11 = !DILocation(line: 21, column: 33, scope: !7)
!12 = !DILocation(line: 22, column: 36, scope: !7)
!13 = !DILocation(line: 22, column: 23, scope: !7)
!14 = !DILocation(line: 26, column: 21, scope: !7)
!15 = !DILocation(line: 24, column: 19, scope: !7)
!16 = !DILocation(line: 25, column: 21, scope: !7)
!17 = !DILocation(line: 25, column: 28, scope: !7)
!18 = !DILocation(line: 26, column: 28, scope: !7)
!19 = !DILocation(line: 39, column: 25, scope: !7)
!20 = !DILocation(line: 39, column: 30, scope: !7)
!21 = !DILocation(line: 39, column: 16, scope: !7)
!22 = !DILocation(line: 40, column: 21, scope: !7)
!23 = !DILocation(line: 42, column: 20, scope: !7)
!24 = !DILocation(line: 43, column: 28, scope: !7)
!25 = !DILocation(line: 45, column: 20, scope: !7)
!26 = !DILocation(line: 47, column: 20, scope: !7)
!27 = !DILocation(line: 49, column: 33, scope: !7)
!28 = !{i32 21046}
!29 = !DILocation(line: 50, column: 16, scope: !7)
!30 = !DILocation(line: 51, column: 21, scope: !7)
!31 = !DILocation(line: 52, column: 20, scope: !7)
!32 = !DILocation(line: 53, column: 24, scope: !7)
!33 = !{i32 30999, i32 31003, i32 31048, i32 31093}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.unroll.count", i32 1}
!36 = !DILocation(line: 60, column: 16, scope: !7)
!37 = !DILocation(line: 61, column: 21, scope: !7)
!38 = !DILocation(line: 63, column: 20, scope: !7)
!39 = !DILocation(line: 64, column: 28, scope: !7)
!40 = !DILocation(line: 66, column: 20, scope: !7)
!41 = !DILocation(line: 68, column: 20, scope: !7)
!42 = !DILocation(line: 70, column: 33, scope: !7)
!43 = !DILocation(line: 73, column: 20, scope: !7)
!44 = !DILocation(line: 74, column: 24, scope: !7)
!45 = distinct !{!45, !35}
!46 = !DILocation(line: 83, column: 22, scope: !7)
!47 = !DILocation(line: 89, column: 33, scope: !7)
!48 = !DILocation(line: 89, column: 38, scope: !7)
!49 = !DILocation(line: 89, column: 16, scope: !7)
!50 = !DILocation(line: 90, column: 21, scope: !7)
!51 = !DILocation(line: 92, column: 20, scope: !7)
!52 = !DILocation(line: 93, column: 28, scope: !7)
!53 = !DILocation(line: 95, column: 20, scope: !7)
!54 = !DILocation(line: 97, column: 20, scope: !7)
!55 = !DILocation(line: 99, column: 33, scope: !7)
!56 = !DILocation(line: 100, column: 16, scope: !7)
!57 = !DILocation(line: 101, column: 21, scope: !7)
!58 = !DILocation(line: 102, column: 20, scope: !7)
!59 = !DILocation(line: 103, column: 24, scope: !7)
!60 = distinct !{!60, !35}
!61 = !DILocation(line: 110, column: 16, scope: !7)
!62 = !DILocation(line: 111, column: 21, scope: !7)
!63 = !DILocation(line: 113, column: 20, scope: !7)
!64 = !DILocation(line: 114, column: 28, scope: !7)
!65 = !DILocation(line: 116, column: 20, scope: !7)
!66 = !DILocation(line: 118, column: 20, scope: !7)
!67 = !DILocation(line: 120, column: 33, scope: !7)
!68 = !DILocation(line: 123, column: 20, scope: !7)
!69 = !DILocation(line: 124, column: 24, scope: !7)
!70 = distinct !{!70, !35}
!71 = !DILocation(line: 83, column: 28, scope: !7)
!72 = !DILocation(line: 106, column: 21, scope: !7)
!73 = !DILocation(line: 80, column: 20, scope: !7)
!74 = !DILocation(line: 109, column: 20, scope: !7)
!75 = !DILocation(line: 87, column: 20, scope: !7)
!76 = !DILocation(line: 88, column: 20, scope: !7)
!77 = !DILocation(line: 105, column: 35, scope: !7)
!78 = !DILocation(line: 33, column: 19, scope: !7)
!79 = !DILocation(line: 37, column: 18, scope: !7)
!80 = !DILocation(line: 32, column: 18, scope: !7)
!81 = !DILocation(line: 38, column: 19, scope: !7)
!82 = !DILocation(line: 55, column: 35, scope: !7)
!83 = !DILocation(line: 56, column: 20, scope: !7)
!84 = !DILocation(line: 59, column: 20, scope: !7)
!85 = !DILocation(line: 76, column: 35, scope: !7)
!86 = !DILocation(line: 77, column: 34, scope: !7)
!87 = !DILocation(line: 126, column: 35, scope: !7)
!88 = !DILocation(line: 127, column: 35, scope: !7)
!89 = !DILocation(line: 0, scope: !7)
!90 = !DILocation(line: 131, column: 25, scope: !7)
!91 = !DILocation(line: 131, column: 38, scope: !7)
!92 = !DILocation(line: 131, column: 4, scope: !7)
