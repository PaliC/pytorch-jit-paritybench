//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2 // -- Begin function triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2
.visible .entry triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2(
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1,
	.param .u64 .ptr .global .align 1 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_3,
	.param .u32 triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_4
)
.reqntid 512, 1, 1
{
	.reg .pred 	%p<33>;
	.reg .b32 	%r<165>;
	.reg .f32 	%f<79>;
	.reg .b64 	%rd<29>;
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:19:0

// %bb.0:
	ld.param.u64 	%rd10, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_2];
	ld.param.u64 	%rd9, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_0];
	ld.param.u64 	%rd12, [triton_red_fused__native_batch_norm_legit_no_training_linalg_vector_norm_mean_relu_sub_2_param_1];
$L__tmp0:
	.loc	1 22 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:28
	// begin inline asm
	mov.u32 %r17, %ctaid.x;
	// end inline asm
	.loc	1 22 33                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:22:33
	shl.b32 	%r1, %r17, 6;
	.loc	1 23 44                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:44
	mov.u32 	%r18, %tid.x;
	shl.b32 	%r19, %r18, 2;
	and.b32  	%r20, %r19, 60;
	bfe.u32 	%r3, %r18, 4, 5;
	.loc	1 23 23                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:23
	or.b32  	%r21, %r1, %r20;
	or.b32  	%r22, %r1, %r3;
	.loc	1 27 19                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:27:19
	bfe.s32 	%r23, %r17, 25, 1;
	shr.u32 	%r24, %r23, 20;
	add.s32 	%r25, %r21, %r24;
	shr.s32 	%r26, %r25, 12;
	add.s32 	%r27, %r22, %r24;
	shr.s32 	%r28, %r27, 12;
	add.s32 	%r29, %r27, 32;
	shr.s32 	%r30, %r29, 12;
	.loc	1 35 43                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:43
	shl.b32 	%r31, %r28, 8;
	shl.b32 	%r32, %r30, 8;
	shl.b32 	%r33, %r18, 8;
	and.b32  	%r34, %r33, 3840;
	or.b32  	%r35, %r34, %r3;
	and.b32  	%r36, %r19, 2044;
	shr.u32 	%r37, %r34, 2;
	mov.u32 	%r38, global_smem;
	add.s32 	%r39, %r38, %r37;
	shl.b32 	%r40, %r35, 2;
	add.s32 	%r79, %r39, %r40;
	or.b32  	%r41, %r34, 64;
	shr.u32 	%r42, %r41, 2;
	add.s32 	%r43, %r38, %r42;
	add.s32 	%r44, %r43, %r40;
	add.s32 	%r81, %r44, 256;
	or.b32  	%r45, %r34, 128;
	shr.u32 	%r46, %r45, 2;
	add.s32 	%r47, %r38, %r46;
	add.s32 	%r48, %r47, %r40;
	add.s32 	%r83, %r48, 512;
	or.b32  	%r49, %r34, 192;
	shr.u32 	%r50, %r49, 2;
	add.s32 	%r51, %r38, %r50;
	add.s32 	%r52, %r51, %r40;
	add.s32 	%r85, %r52, 768;
	add.s32 	%r87, %r79, 128;
	add.s32 	%r89, %r44, 384;
	add.s32 	%r91, %r48, 640;
	add.s32 	%r93, %r52, 896;
	and.b32  	%r53, %r18, 496;
	add.s32 	%r54, %r38, %r53;
	shl.b32 	%r55, %r36, 2;
	add.s32 	%r12, %r54, %r55;
	or.b32  	%r56, %r36, 2048;
	shr.u32 	%r57, %r56, 2;
	and.b32  	%r58, %r57, 1008;
	add.s32 	%r59, %r38, %r58;
	add.s32 	%r13, %r59, %r55;
	.loc	1 30 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:30:36
	mad.lo.s32 	%r60, %r26, 1044480, %r21;
	shl.b32 	%r61, %r3, 12;
	add.s32 	%r164, %r60, %r61;
	and.b32  	%r62, %r18, 15;
	mul.wide.u32 	%rd13, %r62, 16;
	mul.wide.s32 	%rd14, %r32, 4;
	or.b64  	%rd15, %rd13, %rd14;
	add.s64 	%rd27, %rd12, %rd15;
	mul.wide.s32 	%rd16, %r31, 4;
	or.b64  	%rd17, %rd13, %rd16;
	add.s64 	%rd26, %rd12, %rd17;
	mov.f32 	%f71, 0f00000000;
	mov.u64 	%rd28, -64;
	mov.pred 	%p30, -1;
	mov.f32 	%f72, %f71;
	mov.f32 	%f73, %f71;
	mov.f32 	%f74, %f71;
	mov.f32 	%f75, %f71;
	mov.f32 	%f76, %f71;
	mov.f32 	%f77, %f71;
	mov.f32 	%f78, %f71;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 34 34                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:34
	add.s32 	%r135, %r164, 131072;
	mul.wide.s32 	%rd22, %r164, 4;
	add.s64 	%rd18, %rd9, %rd22;
	mul.wide.s32 	%rd23, %r135, 4;
	add.s64 	%rd19, %rd9, %rd23;
	mov.b32 	%r67, 0;
	.loc	1 34 62                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:34:62
	// begin inline asm
	mov.u32 %r63, 0x0;
	mov.u32 %r64, 0x0;
	mov.u32 %r65, 0x0;
	mov.u32 %r66, 0x0;
	@%p30 ld.global.L1::evict_first.v4.b32 { %r63, %r64, %r65, %r66 }, [ %rd18 + 0 ];
	@!%p30 mov.u32 %r63, %r67;
	@!%p30 mov.u32 %r64, %r67;
	@!%p30 mov.u32 %r65, %r67;
	@!%p30 mov.u32 %r66, %r67;
	// end inline asm
	// begin inline asm
	mov.u32 %r71, 0x0;
	mov.u32 %r72, 0x0;
	mov.u32 %r73, 0x0;
	mov.u32 %r74, 0x0;
	@%p30 ld.global.L1::evict_first.v4.b32 { %r71, %r72, %r73, %r74 }, [ %rd19 + 0 ];
	@!%p30 mov.u32 %r71, %r67;
	@!%p30 mov.u32 %r72, %r67;
	@!%p30 mov.u32 %r73, %r67;
	@!%p30 mov.u32 %r74, %r67;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p30 st.shared.b32 [ %r79 + 0 ], %r63;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r81 + 0 ], %r64;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r83 + 0 ], %r65;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r85 + 0 ], %r66;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r87 + 0 ], %r71;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r89 + 0 ], %r72;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r91 + 0 ], %r73;
	// end inline asm
	// begin inline asm
	@%p30 st.shared.b32 [ %r93 + 0 ], %r74;
	// end inline asm
	bar.sync 	0;
	ld.shared.v4.f32 	{%f25, %f26, %f27, %f28}, [%r12];
	ld.shared.v4.f32 	{%f29, %f30, %f31, %f32}, [%r13+8192];
	.loc	1 35 48                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:35:48
	// begin inline asm
	mov.u32 %r95, 0x0;
	mov.u32 %r96, 0x0;
	mov.u32 %r97, 0x0;
	mov.u32 %r98, 0x0;
	@%p30 ld.global.L1::evict_last.v4.b32 { %r95, %r96, %r97, %r98 }, [ %rd26 + 0 ];
	@!%p30 mov.u32 %r95, %r67;
	@!%p30 mov.u32 %r96, %r67;
	@!%p30 mov.u32 %r97, %r67;
	@!%p30 mov.u32 %r98, %r67;
	// end inline asm
	// begin inline asm
	mov.u32 %r103, 0x0;
	mov.u32 %r104, 0x0;
	mov.u32 %r105, 0x0;
	mov.u32 %r106, 0x0;
	@%p30 ld.global.L1::evict_last.v4.b32 { %r103, %r104, %r105, %r106 }, [ %rd27 + 0 ];
	@!%p30 mov.u32 %r103, %r67;
	@!%p30 mov.u32 %r104, %r67;
	@!%p30 mov.u32 %r105, %r67;
	@!%p30 mov.u32 %r106, %r67;
	// end inline asm
	mov.b32 	%r113, 1166016512;
	.loc	1 37 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:37:22
	// begin inline asm
	div.full.f32 %r111, %r95, %r113;
	// end inline asm
	mov.b32 	%f33, %r111;
	// begin inline asm
	div.full.f32 %r114, %r96, %r113;
	// end inline asm
	mov.b32 	%f34, %r114;
	// begin inline asm
	div.full.f32 %r117, %r97, %r113;
	// end inline asm
	mov.b32 	%f35, %r117;
	// begin inline asm
	div.full.f32 %r120, %r98, %r113;
	// end inline asm
	mov.b32 	%f36, %r120;
	// begin inline asm
	div.full.f32 %r123, %r103, %r113;
	// end inline asm
	mov.b32 	%f37, %r123;
	// begin inline asm
	div.full.f32 %r126, %r104, %r113;
	// end inline asm
	mov.b32 	%f38, %r126;
	// begin inline asm
	div.full.f32 %r129, %r105, %r113;
	// end inline asm
	mov.b32 	%f39, %r129;
	// begin inline asm
	div.full.f32 %r132, %r106, %r113;
	// end inline asm
	mov.b32 	%f40, %r132;
	.loc	1 38 22                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:38:22
	sub.f32 	%f41, %f25, %f33;
	sub.f32 	%f42, %f26, %f34;
	sub.f32 	%f43, %f27, %f35;
	sub.f32 	%f44, %f28, %f36;
	sub.f32 	%f45, %f29, %f37;
	sub.f32 	%f46, %f30, %f38;
	sub.f32 	%f47, %f31, %f39;
	sub.f32 	%f48, %f32, %f40;
	.loc	1 41 23                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:41:23
	fma.rn.f32 	%f78, %f48, %f48, %f78;
	fma.rn.f32 	%f77, %f47, %f47, %f77;
	fma.rn.f32 	%f76, %f46, %f46, %f76;
	fma.rn.f32 	%f75, %f45, %f45, %f75;
	fma.rn.f32 	%f74, %f44, %f44, %f74;
	fma.rn.f32 	%f73, %f43, %f43, %f73;
	fma.rn.f32 	%f72, %f42, %f42, %f72;
	fma.rn.f32 	%f71, %f41, %f41, %f71;
	.loc	1 30 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:30:36
	add.s64 	%rd28, %rd28, 64;
	add.s32 	%r164, %r164, 262144;
	add.s64 	%rd27, %rd27, 256;
	add.s64 	%rd26, %rd26, 256;
	setp.lt.u64 	%p29, %rd28, 192;
	@%p29 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 23 44                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:44
	and.b32  	%r141, %r18, 63;
	.loc	1 23 23                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:23:23
	or.b32  	%r142, %r1, %r141;
$L__tmp1:
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f49, %f71, %f72;
	add.f32 	%f50, %f73, %f49;
	add.f32 	%f51, %f74, %f50;
	add.f32 	%f52, %f75, %f76;
	add.f32 	%f53, %f77, %f52;
	add.f32 	%f54, %f78, %f53;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r143, %f51;
	shfl.sync.bfly.b32	%r144, %r143, 8, 31, -1;
	mov.b32 	%f55, %r144;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f56, %f51, %f55;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r145, %f56;
	shfl.sync.bfly.b32	%r146, %r145, 4, 31, -1;
	mov.b32 	%f57, %r146;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f58, %f56, %f57;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r147, %f58;
	shfl.sync.bfly.b32	%r148, %r147, 2, 31, -1;
	mov.b32 	%f59, %r148;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f60, %f58, %f59;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r149, %f60;
	shfl.sync.bfly.b32	%r150, %r149, 1, 31, -1;
	mov.b32 	%f61, %r150;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f62, %f60, %f61;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r151, %f54;
	shfl.sync.bfly.b32	%r152, %r151, 8, 31, -1;
	mov.b32 	%f63, %r152;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f64, %f54, %f63;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r153, %f64;
	shfl.sync.bfly.b32	%r154, %r153, 4, 31, -1;
	mov.b32 	%f65, %r154;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f66, %f64, %f65;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r155, %f66;
	shfl.sync.bfly.b32	%r156, %r155, 2, 31, -1;
	mov.b32 	%f67, %r156;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f68, %f66, %f67;
	.loc	2 267 36                        // standard.py:267:36
	mov.b32 	%r157, %f68;
	shfl.sync.bfly.b32	%r158, %r157, 1, 31, -1;
	mov.b32 	%f69, %r158;
	.loc	2 256 15                        // standard.py:256:15
	add.f32 	%f70, %f68, %f69;
$L__tmp2:
	.loc	1 43 28                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:43:28
	bar.sync 	0;
	shl.b32 	%r159, %r3, 2;
	add.s32 	%r136, %r38, %r159;
	mov.b32 	%r137, %f62;
	// begin inline asm
	@%p30 st.shared.b32 [ %r136 + 0 ], %r137;
	// end inline asm
	add.s32 	%r138, %r136, 128;
	mov.b32 	%r139, %f70;
	// begin inline asm
	@%p30 st.shared.b32 [ %r138 + 0 ], %r139;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r161, %r141, 2;
	add.s32 	%r162, %r38, %r161;
	ld.shared.u32 	%r140, [%r162];
	.loc	1 44 25                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:25
	mul.wide.s32 	%rd25, %r142, 4;
	add.s64 	%rd24, %rd10, %rd25;
	.loc	1 44 36                         // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:36
	and.b32  	%r163, %r18, 448;
	setp.eq.s32 	%p32, %r163, 0;
	// begin inline asm
	@%p32 st.global.b32 [ %rd24 + 0 ], { %r140 };
	// end inline asm
	.loc	1 44 4                          // cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py:44:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/y5/cy5icljm3sfybh3yspktq5nnegulomn4ldlototzcxuwkppmcqa6.py"
	.file	2 "/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 233                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xe2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 121
.b8 53
.b8 105
.b8 99
.b8 108
.b8 106
.b8 109
.b8 51
.b8 115
.b8 102
.b8 121
.b8 98
.b8 104
.b8 51
.b8 121
.b8 115
.b8 112
.b8 107
.b8 116
.b8 113
.b8 53
.b8 110
.b8 110
.b8 101
.b8 103
.b8 117
.b8 108
.b8 111
.b8 109
.b8 110
.b8 52
.b8 108
.b8 100
.b8 108
.b8 111
.b8 116
.b8 111
.b8 116
.b8 122
.b8 99
.b8 120
.b8 117
.b8 119
.b8 107
.b8 112
.b8 112
.b8 109
.b8 99
.b8 113
.b8 97
.b8 54
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 121
.b8 53
.b8 0
.b8 2                                   // Abbrev [2] 0x63:0x5b DW_TAG_subprogram
.b8 116                                 // DW_AT_name
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 114
.b8 101
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 95
.b8 110
.b8 97
.b8 116
.b8 105
.b8 118
.b8 101
.b8 95
.b8 98
.b8 97
.b8 116
.b8 99
.b8 104
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 108
.b8 101
.b8 103
.b8 105
.b8 116
.b8 95
.b8 110
.b8 111
.b8 95
.b8 116
.b8 114
.b8 97
.b8 105
.b8 110
.b8 105
.b8 110
.b8 103
.b8 95
.b8 108
.b8 105
.b8 110
.b8 97
.b8 108
.b8 103
.b8 95
.b8 118
.b8 101
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 109
.b8 101
.b8 97
.b8 110
.b8 95
.b8 114
.b8 101
.b8 108
.b8 117
.b8 95
.b8 115
.b8 117
.b8 98
.b8 95
.b8 50
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0xbe:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 99                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xd3:0x18 DW_TAG_inlined_subroutine
.b32 99                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 43                                  // DW_AT_call_line
.b8 25                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
