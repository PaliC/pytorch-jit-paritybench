//
// Generated by LLVM NVPTX Back-End
//

.version 8.4
.target sm_90a
.address_size 64

	// .globl	triton_poi_fused_convolution_19 // -- Begin function triton_poi_fused_convolution_19
.extern .shared .align 16 .b8 global_smem[];
                                        // @triton_poi_fused_convolution_19
.visible .entry triton_poi_fused_convolution_19(
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_19_param_0,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_19_param_1,
	.param .u64 .ptr .global .align 1 triton_poi_fused_convolution_19_param_2,
	.param .u32 triton_poi_fused_convolution_19_param_3,
	.param .u32 triton_poi_fused_convolution_19_param_4
)
.reqntid 256, 1, 1
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<119>;
	.reg .b64 	%rd<14>;
	.loc	1 19 0                          // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:19:0
$L__func_begin0:
	.loc	1 19 0                          // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:19:0

// %bb.0:
	ld.param.u64 	%rd7, [triton_poi_fused_convolution_19_param_0];
	ld.param.u64 	%rd8, [triton_poi_fused_convolution_19_param_1];
$L__tmp0:
	.loc	1 22 28                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:22:28
	// begin inline asm
	mov.u32 %r1, %ctaid.y;
	// end inline asm
	.loc	1 22 33                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:22:33
	shl.b32 	%r43, %r1, 5;
	ld.param.u64 	%rd9, [triton_poi_fused_convolution_19_param_2];
	.loc	1 23 44                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:23:44
	mov.u32 	%r44, %tid.x;
	bfe.u32 	%r45, %r44, 4, 4;
	shl.b32 	%r46, %r44, 2;
	and.b32  	%r47, %r46, 28;
	.loc	1 23 23                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:23:23
	or.b32  	%r48, %r43, %r45;
	or.b32  	%r49, %r48, 16;
	or.b32  	%r50, %r43, %r47;
	.loc	1 24 21                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:24:21
	setp.lt.s32 	%p15, %r48, 32;
	setp.lt.s32 	%p16, %r49, 32;
	setp.lt.s32 	%p17, %r50, 32;
	.loc	1 25 28                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:25:28
	// begin inline asm
	mov.u32 %r2, %ctaid.x;
	// end inline asm
	.loc	1 25 33                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:25:33
	shl.b32 	%r51, %r2, 6;
	.loc	1 26 44                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:26:44
	and.b32  	%r52, %r46, 60;
	bfe.u32 	%r53, %r44, 3, 5;
	.loc	1 26 23                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:26:23
	or.b32  	%r54, %r51, %r52;
	or.b32  	%r55, %r51, %r53;
	or.b32  	%r56, %r55, 32;
	.loc	1 27 21                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:27:21
	setp.lt.s32 	%p18, %r54, 64;
	setp.lt.s32 	%p19, %r55, 64;
	setp.lt.s32 	%p20, %r56, 64;
	.loc	1 30 19                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:30:19
	shr.s32 	%r58, %r48, 31;
	shr.u32 	%r59, %r58, 29;
	add.s32 	%r60, %r48, %r59;
	.loc	1 29 19                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:29:19
	and.b32  	%r61, %r60, 67108856;
	sub.s32 	%r62, %r48, %r61;
	.loc	1 30 19                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:30:19
	shr.s32 	%r64, %r50, 31;
	shr.u32 	%r65, %r64, 29;
	add.s32 	%r66, %r50, %r65;
	.loc	1 29 19                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:29:19
	and.b32  	%r67, %r66, -8;
	sub.s32 	%r68, %r50, %r67;
	.loc	1 30 19                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:30:19
	bfe.s32 	%r69, %r1, 26, 1;
	shr.u32 	%r70, %r69, 29;
	add.s32 	%r71, %r49, %r70;
	.loc	1 31 36                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:36
	add.s32 	%r72, %r54, 512;
	.loc	1 31 44                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:44
	shl.b32 	%r73, %r62, 6;
	.loc	1 31 41                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:41
	add.s32 	%r74, %r72, %r73;
	.loc	1 31 54                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:54
	shl.b32 	%r75, %r60, 7;
	and.b32  	%r76, %r75, -1024;
	shl.b32 	%r77, %r71, 7;
	and.b32  	%r78, %r77, -1024;
	.loc	1 31 49                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:49
	add.s32 	%r79, %r74, %r76;
	.loc	1 31 41                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:41
	add.s32 	%r80, %r78, %r73;
	.loc	1 31 49                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:49
	add.s32 	%r81, %r80, %r72;
	.loc	1 31 30                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:30
	mul.wide.s32 	%rd10, %r79, 4;
	add.s64 	%rd1, %rd7, %rd10;
	mul.wide.s32 	%rd11, %r81, 4;
	add.s64 	%rd2, %rd7, %rd11;
	.loc	1 31 67                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:67
	and.pred  	%p1, %p15, %p18;
	and.pred  	%p2, %p16, %p18;
	and.pred  	%p11, %p17, %p19;
	and.pred  	%p12, %p20, %p17;
	.loc	1 31 59                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:31:59
	// begin inline asm
	mov.u32 %r12, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r16, 0x0;
	mov.u32 %r18, 0x0;
	@%p1 ld.global.L1::evict_last.v4.b32 { %r12, %r14, %r16, %r18 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r20, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r24, 0x0;
	mov.u32 %r26, 0x0;
	@%p2 ld.global.L1::evict_last.v4.b32 { %r20, %r22, %r24, %r26 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 32 32                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:32:32
	shl.b32 	%r82, %r55, 3;
	shl.b32 	%r83, %r56, 3;
	.loc	1 32 41                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:32:41
	shl.b32 	%r84, %r66, 6;
	and.b32  	%r85, %r84, -512;
	.loc	1 32 30                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:32:30
	add.s32 	%r86, %r85, %r68;
	.loc	1 32 37                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:32:37
	add.s32 	%r87, %r86, %r82;
	add.s32 	%r88, %r86, %r83;
	.loc	1 32 25                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:32:25
	mul.wide.s32 	%rd12, %r87, 4;
	add.s64 	%rd3, %rd8, %rd12;
	mul.wide.s32 	%rd13, %r88, 4;
	add.s64 	%rd4, %rd8, %rd13;
	.loc	1 32 52                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:32:52
	shl.b32 	%r89, %r44, 7;
	and.b32  	%r90, %r89, 1920;
	or.b32  	%r91, %r90, %r45;
	and.b32  	%r92, %r46, 1020;
	shr.u32 	%r93, %r90, 1;
	mov.u32 	%r94, global_smem;
	add.s32 	%r95, %r94, %r93;
	shl.b32 	%r96, %r91, 2;
	add.s32 	%r11, %r95, %r96;
	mov.pred 	%p3, -1;
	// begin inline asm
	@%p3 st.shared.b32 [ %r11 + 0 ], %r12;
	// end inline asm
	or.b32  	%r97, %r90, 32;
	shr.u32 	%r98, %r97, 1;
	add.s32 	%r99, %r94, %r98;
	add.s32 	%r100, %r99, %r96;
	add.s32 	%r13, %r100, 128;
	// begin inline asm
	@%p3 st.shared.b32 [ %r13 + 0 ], %r14;
	// end inline asm
	or.b32  	%r101, %r90, 64;
	shr.u32 	%r102, %r101, 1;
	add.s32 	%r103, %r94, %r102;
	add.s32 	%r104, %r103, %r96;
	add.s32 	%r15, %r104, 256;
	// begin inline asm
	@%p3 st.shared.b32 [ %r15 + 0 ], %r16;
	// end inline asm
	or.b32  	%r105, %r90, 96;
	shr.u32 	%r106, %r105, 1;
	add.s32 	%r107, %r94, %r106;
	add.s32 	%r108, %r107, %r96;
	add.s32 	%r17, %r108, 384;
	// begin inline asm
	@%p3 st.shared.b32 [ %r17 + 0 ], %r18;
	// end inline asm
	add.s32 	%r19, %r11, 64;
	// begin inline asm
	@%p3 st.shared.b32 [ %r19 + 0 ], %r20;
	// end inline asm
	add.s32 	%r21, %r100, 192;
	// begin inline asm
	@%p3 st.shared.b32 [ %r21 + 0 ], %r22;
	// end inline asm
	add.s32 	%r23, %r104, 320;
	// begin inline asm
	@%p3 st.shared.b32 [ %r23 + 0 ], %r24;
	// end inline asm
	add.s32 	%r25, %r108, 448;
	// begin inline asm
	@%p3 st.shared.b32 [ %r25 + 0 ], %r26;
	// end inline asm
	bar.sync 	0;
	shl.b32 	%r109, %r44, 1;
	and.b32  	%r110, %r109, 496;
	add.s32 	%r111, %r94, %r110;
	shl.b32 	%r112, %r92, 2;
	add.s32 	%r113, %r111, %r112;
	or.b32  	%r114, %r92, 1024;
	shr.u32 	%r115, %r114, 1;
	and.b32  	%r116, %r115, 1008;
	add.s32 	%r117, %r94, %r116;
	add.s32 	%r118, %r117, %r112;
	ld.shared.v4.u32 	{%r31, %r32, %r33, %r34}, [%r118+4096];
	ld.shared.v4.u32 	{%r27, %r28, %r29, %r30}, [%r113];
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd3 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd4 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	.loc	1 33 25                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:33:25
	add.s64 	%rd5, %rd9, %rd12;
	add.s64 	%rd6, %rd9, %rd13;
	.loc	1 33 52                         // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:33:52
	// begin inline asm
	@%p11 st.global.v4.b32 [ %rd5 + 0 ], { %r27, %r28, %r29, %r30 };
	// end inline asm
	// begin inline asm
	@%p12 st.global.v4.b32 [ %rd6 + 0 ], { %r31, %r32, %r33, %r34 };
	// end inline asm
	.loc	1 33 4                          // cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py:33:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "inductor_cache/m2/cm27acmprfpb4byqg2xitq5v54olxgh5o6yuvafemw25xueli227.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 95                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x58 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 109
.b8 50
.b8 55
.b8 97
.b8 99
.b8 109
.b8 112
.b8 114
.b8 102
.b8 112
.b8 98
.b8 52
.b8 98
.b8 121
.b8 113
.b8 103
.b8 50
.b8 120
.b8 105
.b8 116
.b8 113
.b8 53
.b8 118
.b8 53
.b8 52
.b8 111
.b8 108
.b8 120
.b8 103
.b8 104
.b8 53
.b8 111
.b8 54
.b8 121
.b8 117
.b8 118
.b8 97
.b8 102
.b8 101
.b8 109
.b8 119
.b8 50
.b8 53
.b8 120
.b8 117
.b8 101
.b8 108
.b8 105
.b8 50
.b8 50
.b8 55
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 105                                 // DW_AT_comp_dir
.b8 110
.b8 100
.b8 117
.b8 99
.b8 116
.b8 111
.b8 114
.b8 95
.b8 99
.b8 97
.b8 99
.b8 104
.b8 101
.b8 47
.b8 109
.b8 50
.b8 0
	}
	.section	.debug_macinfo	{	}
