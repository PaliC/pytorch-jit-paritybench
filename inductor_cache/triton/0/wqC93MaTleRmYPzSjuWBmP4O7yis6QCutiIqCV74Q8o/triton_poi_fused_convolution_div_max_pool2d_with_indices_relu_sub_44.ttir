#loc = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0)
module {
  tt.func public @triton_poi_fused_convolution_div_max_pool2d_with_indices_relu_sub_44(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":19:0)) attributes {noinline = false} {
    %c4096_i32 = arith.constant 4096 : i32 loc(#loc1)
    %c2097152_i32 = arith.constant 2097152 : i32 loc(#loc1)
    %c512_i32 = arith.constant 512 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<1024x1xf32> loc(#loc1)
    %cst_0 = arith.constant dense<512> : tensor<1024x1xi32> loc(#loc1)
    %c1024_i32 = arith.constant 1024 : i32 loc(#loc1)
    %0 = tt.get_program_id y : i32 loc(#loc2)
    %1 = tt.get_program_id x : i32 loc(#loc3)
    %2 = arith.muli %1, %c1024_i32 : i32 loc(#loc4)
    %3 = tt.make_range {end = 1024 : i32, start = 0 : i32} : tensor<1024xi32> loc(#loc5)
    %4 = tt.expand_dims %3 {axis = 1 : i32} : tensor<1024xi32> -> tensor<1024x1xi32> loc(#loc6)
    %5 = tt.splat %2 : i32 -> tensor<1024x1xi32> loc(#loc7)
    %6 = arith.addi %5, %4 : tensor<1024x1xi32> loc(#loc7)
    %7 = arith.remsi %0, %c512_i32 : i32 loc(#loc8)
    %8 = arith.divsi %0, %c512_i32 : i32 loc(#loc9)
    %9 = arith.muli %6, %cst_0 : tensor<1024x1xi32> loc(#loc10)
    %10 = tt.splat %7 : i32 -> tensor<1024x1xi32> loc(#loc11)
    %11 = arith.addi %10, %9 : tensor<1024x1xi32> loc(#loc11)
    %12 = arith.muli %8, %c2097152_i32 : i32 loc(#loc12)
    %13 = tt.splat %12 : i32 -> tensor<1024x1xi32> loc(#loc13)
    %14 = arith.addi %11, %13 : tensor<1024x1xi32> loc(#loc13)
    %15 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc14)
    %16 = tt.addptr %15, %14 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc14)
    %17 = tt.load %16 evictionPolicy = evict_last : tensor<1024x1x!tt.ptr<f32>> loc(#loc15)
    %18 = tt.addptr %arg1, %7 : !tt.ptr<f32>, i32 loc(#loc16)
    %19 = tt.splat %18 : !tt.ptr<f32> -> tensor<1x1x!tt.ptr<f32>> loc(#loc16)
    %20 = tt.load %19 evictionPolicy = evict_last : tensor<1x1x!tt.ptr<f32>> loc(#loc17)
    %21 = tt.broadcast %20 : tensor<1x1xf32> -> tensor<1024x1xf32> loc(#loc18)
    %22 = arith.addf %17, %21 : tensor<1024x1xf32> loc(#loc18)
    %23 = arith.cmpf ogt, %cst, %22 : tensor<1024x1xf32> loc(#loc27)
    %24 = arith.select %23, %cst, %22 : tensor<1024x1xi1>, tensor<1024x1xf32> loc(#loc28)
    %25 = arith.muli %0, %c4096_i32 : i32 loc(#loc22)
    %26 = tt.splat %25 : i32 -> tensor<1024x1xi32> loc(#loc23)
    %27 = arith.addi %6, %26 : tensor<1024x1xi32> loc(#loc23)
    %28 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<1024x1x!tt.ptr<f32>> loc(#loc24)
    %29 = tt.addptr %28, %27 : tensor<1024x1x!tt.ptr<f32>>, tensor<1024x1xi32> loc(#loc24)
    tt.store %29, %24 : tensor<1024x1x!tt.ptr<f32>> loc(#loc25)
    tt.return loc(#loc26)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":22:28)
#loc3 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":25:28)
#loc4 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":25:33)
#loc5 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":26:36)
#loc6 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":26:44)
#loc7 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":26:23)
#loc8 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":29:19)
#loc9 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":30:19)
#loc10 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:39)
#loc11 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:35)
#loc12 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:52)
#loc13 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:44)
#loc14 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:30)
#loc15 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":32:57)
#loc16 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":33:30)
#loc17 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":33:35)
#loc18 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":34:18)
#loc19 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":118:15)
#loc20 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":36:40)
#loc21 = loc("/home/sahanp/.conda/envs/parity-bench/lib/python3.12/site-packages/torch/_inductor/runtime/triton_helpers.py":121:29)
#loc22 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:35)
#loc23 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:30)
#loc24 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:25)
#loc25 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:46)
#loc26 = loc("inductor_cache/3v/c3vmfrr47ib3in7qtnqueopr5e3r33dfnlpystxdgnh2q4pz24st.py":37:4)
#loc27 = loc(callsite(#loc19 at #loc20))
#loc28 = loc(callsite(#loc21 at #loc20))
