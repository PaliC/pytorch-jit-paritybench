{
    "system": {
        "device": {
            "name": "NVIDIA H100"
        },
        "version": {
            "triton": "3.2.039ace39686dc8ae6b537d14ae140575242b5833746b519e6e329b355f5d9e364-83cd0eef733233d69c83b5cd7dc1e0aeae88e1b36011de7f2d8ee0629def3ec1-39ace39686dc8ae6b537d14ae140575242b5833746b519e6e329b355f5d9e364-23d635e690d670bf61798e1259674b78c0ed5ba222ab6a455f329f27a758fc2d-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-2598a211b07d5b0b37b6353a297af274ab6539023b4ae93e99360f95a7dad109-417ffa3f51a8f5a8dd947662e07bf79c2b5d1f20c0ea8f3f94cdcd327947d669-e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-ea8d8a4744679bb406b914485b1743669eb685f24949cd210f8fb72c103d2e46-747b5e566049ac66b1bbb28a97a3dbce27460dd1183d43b663b3ea5fedfdf436-3197988cbd61f02c381bc27502ff651fc401db3d92c1c7f93a78da08005065a4-6e4a7df0c1f6cb799f488ee1d6efd3df754fc18aac6e7209923bb022c36c7c4e-6bd038079b94067d628eea9264530fec03d4d7027ff834e89b9d6fbc31ae8bd9-5d15c5bebef8d7aa51b21fd187e5faa95eba4a213254355bc69e0648013599f7-26a8aeaf21e759191f173b578316e243ad970387442a1b238481c6a1b2eecdc4-170b6c22d072485ef44734b7a8c2ab95c771ce78c5a26e890f8d103acfd17cd5-72bc1771d8b160fbafcd5390d1ee6cb72440c10ad4834451465a9e93b42f5d1c-7b506c955ee5646862dae548968e6523d75c37ad4750c214d9ab0f6918ecc88a-89e4844782de5fdff4868ac2846514570a6e280a6b92e91af2e180904043c833-115ada51f797cd098ddc5e4b95e8369a885571b15639694b6801f59e46eab55e-0e48b5e1e95136642ccfe62dc3d0a739a2c20a7b5ee13e9c23c6cecd68cdeb70-2e4af7e3ca937a7dd4c7207eb6ee3f8f7ebc2f30912b52a7204eeac040bd2a0f-b3aeb8ae6cb1e94085254a3c33612134752c72444ec219965dd7fa52e010a762-c89868706a4edff5f861293d19345031a95b843b7b7a1f523b30ead360e3837e-34ca3a350389b7cd59c72f6cf94f68e319a0e4394a858d381fb59344a7cc052e",
            "cuda": "12.4"
        },
        "hash": "88a6ae0ff816006cc350cb470459e1b048635591975963b0a1d148c722e9b222"
    },
    "cache": {
        "base mm time: ((torch.Size([2, 64]), (1, 2), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008415999822318554,
        "((torch.Size([2, 64]), (1, 2), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.007199999876320362,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 128]), (128, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006527999881654978,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 128]), (128, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 128]), (128, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007007999811321497,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 128]), (128, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 10]), (1, 128), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.0066559999249875546,
        "((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 10]), (1, 128), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 2, 4]), (8, 1, 2), torch.float32), (torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 2, 4]), (8, 1, 2), torch.float32), (torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), (torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), (torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 16]), (64, 1, 4), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.00687999976798892,
        "((torch.Size([4, 4, 16]), (64, 1, 4), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 4]), (64, 4, 1), torch.float32), (torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006752000190317631,
        "((torch.Size([4, 16, 4]), (64, 4, 1), torch.float32), (torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00848000030964613,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009503999724984169,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 5, 5]), (25, 5, 1), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 5), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006335999816656113,
        "((torch.Size([16, 5, 5]), (25, 5, 1), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 5), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 1, 5]), (5, 1, 1), torch.float32), (torch.Size([16, 5, 5]), (25, 5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006399999838322401,
        "((torch.Size([16, 1, 5]), (5, 1, 1), torch.float32), (torch.Size([16, 5, 5]), (25, 5, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), (torch.Size([16, 1, 5]), (5, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007135999854654074,
        "((torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), (torch.Size([16, 1, 5]), (5, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 5, 5]), (25, 1, 5), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006399999838322401,
        "((torch.Size([16, 5, 5]), (25, 1, 5), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 5, 5]), (25, 5, 1), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006271999794989824,
        "((torch.Size([16, 5, 5]), (25, 5, 1), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), (torch.Size([16, 1, 5]), (5, 5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.0071680000983178616,
        "((torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), (torch.Size([16, 1, 5]), (5, 5, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.006943999789655209,
        "((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007455999962985516,
        "((torch.Size([4, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 17]), (68, 17, 1), torch.float32), (torch.Size([4, 17, 17]), (289, 17, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007327999919652939,
        "((torch.Size([4, 4, 17]), (68, 17, 1), torch.float32), (torch.Size([4, 17, 17]), (289, 17, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), (torch.Size([4, 4, 17]), (204, 17, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006912000011652708,
        "((torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), (torch.Size([4, 4, 17]), (204, 17, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 17, 17]), (289, 1, 17), torch.float32), (torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007360000163316727,
        "((torch.Size([4, 17, 17]), (289, 1, 17), torch.float32), (torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([4, 17, 4]), (204, 1, 17), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.0072639998979866505,
        "((torch.Size([4, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([4, 17, 4]), (204, 1, 17), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), (torch.Size([4, 4, 17]), (68, 17, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007007999811321497,
        "((torch.Size([4, 17, 4]), (68, 1, 17), torch.float32), (torch.Size([4, 4, 17]), (68, 17, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([1001, 4]), (1, 1001), torch.float32), (torch.Size([4, 1536]), (1536, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009344000369310379,
        "((torch.Size([1001, 4]), (1, 1001), torch.float32), (torch.Size([4, 1536]), (1536, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1001]), (1001, 1), torch.float32), (torch.Size([1001, 1536]), (1536, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.017023999243974686,
        "((torch.Size([4, 1001]), (1001, 1), torch.float32), (torch.Size([1001, 1536]), (1536, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1536]), (1536, 1), torch.float32), (torch.Size([1536, 1001]), (1, 1536), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1001]), (1,), torch.float32), False)": 0.015584000386297703,
        "((torch.Size([4, 1536]), (1536, 1), torch.float32), (torch.Size([1536, 1001]), (1, 1536), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1001]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 16, 16]), (256, 16, 1), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007327999919652939,
        "((torch.Size([4, 16, 16]), (256, 16, 1), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), (torch.Size([4, 16, 16]), (256, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.0071680000983178616,
        "((torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), (torch.Size([4, 16, 16]), (256, 16, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), (torch.Size([4, 4, 4]), (16, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007135999854654074,
        "((torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), (torch.Size([4, 4, 4]), (16, 4, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1, 1]), (1, 1, 1), torch.float32), (torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.005696000065654516,
        "((torch.Size([4, 1, 1]), (1, 1, 1), torch.float32), (torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 1]), (2, 1, 1), torch.float32), (torch.Size([4, 1, 1]), (1, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.005696000065654516,
        "((torch.Size([4, 2, 1]), (2, 1, 1), torch.float32), (torch.Size([4, 1, 1]), (1, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), (torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), (torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), (torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007104000076651573,
        "((torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), (torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 4]), (64, 1, 16), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 2, 4]), (64, 1, 16), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 4]), (64, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007135999854654074,
        "((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 4]), (64, 1, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 4]), (64, 4, 16), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.010111999697983265,
        "((torch.Size([4, 2, 4]), (64, 4, 16), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 4]), (64, 4, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.010143999941647053,
        "((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 4]), (64, 4, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), (torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), (torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), (torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), (torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), (torch.Size([4, 2, 4]), (8, 1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), (torch.Size([4, 2, 4]), (8, 1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), (torch.Size([4, 2, 1]), (2, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006144000217318535,
        "((torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), (torch.Size([4, 2, 1]), (2, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006816000211983919,
        "((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([10, 64]), (1, 10), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008224000222980976,
        "((torch.Size([10, 64]), (1, 10), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008224000222980976,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 10]), (10, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009535999968647957,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 10]), (10, 1), torch.float32), (torch.Size([10, 4]), (1, 10), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.016095999628305435,
        "((torch.Size([64, 10]), (10, 1), torch.float32), (torch.Size([10, 4]), (1, 10), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 10]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.007040000054985285,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 10]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 16]), (16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006591999903321266,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 16]), (16, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 16]), (16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00684799998998642,
        "((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 16]), (16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16]), (16, 1), torch.float32), (torch.Size([16, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 16]), (16, 1), torch.float32), (torch.Size([16, 2]), (2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 4]), (1, 16), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006943999789655209,
        "((torch.Size([16, 4]), (1, 16), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 16]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006527999881654978,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 16]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16]), (16, 1), torch.float32), (torch.Size([16, 2]), (1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006527999881654978,
        "((torch.Size([4, 16]), (16, 1), torch.float32), (torch.Size([16, 2]), (1, 16), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 4]), (1, 6), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010816000401973724,
        "((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 4]), (1, 6), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([10, 16]), (1, 10), torch.float32), (torch.Size([16, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007007999811321497,
        "((torch.Size([10, 16]), (1, 10), torch.float32), (torch.Size([16, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 10]), (10, 1), torch.float32), (torch.Size([10, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007296000141650438,
        "((torch.Size([16, 10]), (10, 1), torch.float32), (torch.Size([10, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 256]), (256, 1), torch.float32), (torch.Size([256, 10]), (1, 256), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.008320000022649765,
        "((torch.Size([16, 256]), (256, 1), torch.float32), (torch.Size([256, 10]), (1, 256), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 16]), (1, 10), torch.float32), (torch.Size([16, 640]), (640, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006976000033318996,
        "((torch.Size([10, 16]), (1, 10), torch.float32), (torch.Size([16, 640]), (640, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 10]), (10, 1), torch.float32), (torch.Size([10, 640]), (640, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007135999854654074,
        "((torch.Size([16, 10]), (10, 1), torch.float32), (torch.Size([10, 640]), (640, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 640]), (640, 1), torch.float32), (torch.Size([640, 10]), (1, 640), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.01206399966031313,
        "((torch.Size([16, 640]), (640, 1), torch.float32), (torch.Size([640, 10]), (1, 640), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 640]), (640, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006783999968320131,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 640]), (640, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 640]), (640, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007135999854654074,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 640]), (640, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 640]), (640, 1), torch.float32), (torch.Size([640, 10]), (1, 640), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.009247999638319016,
        "((torch.Size([4, 640]), (640, 1), torch.float32), (torch.Size([640, 10]), (1, 640), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 2048]), (2048, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006912000011652708,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 2048]), (2048, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 2048]), (2048, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007552000228315592,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 2048]), (2048, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2048]), (2048, 1), torch.float32), (torch.Size([2048, 10]), (1, 2048), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.016896000131964684,
        "((torch.Size([4, 2048]), (2048, 1), torch.float32), (torch.Size([2048, 10]), (1, 2048), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([11, 64]), (1, 11), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00854399986565113,
        "((torch.Size([11, 64]), (1, 11), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 11]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([11]), (1,), torch.float32), False)": 0.006912000011652708,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 11]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([11]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([2, 16]), (1, 2), torch.float32), (torch.Size([16, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00684799998998642,
        "((torch.Size([2, 16]), (1, 2), torch.float32), (torch.Size([16, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006335999816656113,
        "((torch.Size([16, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (4, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([1, 16]), (1, 1), torch.float32), (torch.Size([16, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00595200015231967,
        "((torch.Size([1, 16]), (1, 1), torch.float32), (torch.Size([16, 2]), (2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006624000146985054,
        "((torch.Size([16, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 2]), (2, 1), torch.float32), (torch.Size([2, 1]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1]), (1,), torch.float32), False)": 0.009344000369310379,
        "((torch.Size([16, 2]), (2, 1), torch.float32), (torch.Size([2, 1]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([16, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.006463999859988689,
        "((torch.Size([16, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 64]), (64, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006912000011652708,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 64]), (64, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 64]), (64, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007296000141650438,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 64]), (64, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (64, 1), torch.float32), (torch.Size([64, 10]), (1, 64), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.006783999968320131,
        "((torch.Size([4, 64]), (64, 1), torch.float32), (torch.Size([64, 10]), (1, 64), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([2, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006240000016987324,
        "((torch.Size([2, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 1152]), (1152, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007071999832987785,
        "((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 1152]), (1152, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 1152]), (1152, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006752000190317631,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 1152]), (1152, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006688000168651342,
        "((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006527999881654978,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.006560000125318766,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 1152]), (1152, 1), torch.float32), (torch.Size([1152, 2]), (1, 1152), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.012095999903976917,
        "((torch.Size([4, 1152]), (1152, 1), torch.float32), (torch.Size([1152, 2]), (1, 1152), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 16]), (1, 4), torch.float32), (torch.Size([16, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006912000011652708,
        "((torch.Size([4, 16]), (1, 4), torch.float32), (torch.Size([16, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.006783999968320131,
        "((torch.Size([16, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 9, 4]), (9, 1, 36), torch.float32), (torch.Size([4, 4, 8]), (8, 32, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007007999811321497,
        "((torch.Size([4, 9, 4]), (9, 1, 36), torch.float32), (torch.Size([4, 4, 8]), (8, 32, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 8, 9]), (72, 9, 1), torch.float32), (torch.Size([4, 9, 4]), (9, 1, 36), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007104000076651573,
        "((torch.Size([4, 8, 9]), (72, 9, 1), torch.float32), (torch.Size([4, 9, 4]), (9, 1, 36), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 9, 8]), (72, 1, 9), torch.float32), (torch.Size([4, 8, 4]), (8, 1, 32), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007135999854654074,
        "((torch.Size([4, 9, 8]), (72, 1, 9), torch.float32), (torch.Size([4, 8, 4]), (8, 1, 32), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 5]), (5, 1), torch.float32), (torch.Size([5, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007327999919652939,
        "((torch.Size([4, 5]), (5, 1), torch.float32), (torch.Size([5, 10]), (10, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 5]), (1, 10), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": 0.0066559999249875546,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 5]), (1, 10), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([3, 4]), (1, 3), torch.float32), (torch.Size([4, 128]), (128, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006816000211983919,
        "((torch.Size([3, 4]), (1, 3), torch.float32), (torch.Size([4, 128]), (128, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 128]), (128, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 128]), (128, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 3]), (1, 128), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": 0.006943999789655209,
        "((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 3]), (1, 128), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([8, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([8, 4, 2]), (2, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007007999811321497,
        "((torch.Size([8, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([8, 4, 2]), (2, 16, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([8, 2, 4]), (2, 1, 16), torch.float32), (torch.Size([8, 4, 4]), (16, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007007999811321497,
        "((torch.Size([8, 2, 4]), (2, 1, 16), torch.float32), (torch.Size([8, 4, 4]), (16, 4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([8, 4, 2]), (2, 16, 1), torch.float32), (torch.Size([8, 2, 4]), (2, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007007999811321497,
        "((torch.Size([8, 4, 2]), (2, 16, 1), torch.float32), (torch.Size([8, 2, 4]), (2, 1, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([8, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([8, 4, 2]), (2, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007007999811321497,
        "((torch.Size([8, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([8, 4, 2]), (2, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([5, 64]), (1, 5), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008383999578654766,
        "((torch.Size([5, 64]), (1, 5), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.01027199998497963,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([512, 4]), (1, 512), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010304000228643417,
        "((torch.Size([512, 4]), (1, 512), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (1, 4), torch.float32), (torch.Size([2, 512]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00687999976798892,
        "((torch.Size([4, 2]), (1, 4), torch.float32), (torch.Size([2, 512]), (1, 2), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([16, 17, 1]), (1, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006943999789655209,
        "((torch.Size([16, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([16, 17, 1]), (1, 16, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 1, 17]), (1, 1, 16), torch.float32), (torch.Size([16, 17, 17]), (289, 17, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006240000016987324,
        "((torch.Size([16, 1, 17]), (1, 1, 16), torch.float32), (torch.Size([16, 17, 17]), (289, 17, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 17, 1]), (1, 16, 1), torch.float32), (torch.Size([16, 1, 17]), (1, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007104000076651573,
        "((torch.Size([16, 17, 1]), (1, 16, 1), torch.float32), (torch.Size([16, 1, 17]), (1, 1, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 17, 17]), (289, 1, 17), torch.float32), (torch.Size([16, 17, 1]), (1, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006240000016987324,
        "((torch.Size([16, 17, 17]), (289, 1, 17), torch.float32), (torch.Size([16, 17, 1]), (1, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 3, 3]), (16, 4, 1), torch.float32), (torch.Size([4, 3, 16]), (48, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 3, 3]), (16, 4, 1), torch.float32), (torch.Size([4, 3, 16]), (48, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 128]), (128, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006752000190317631,
        "((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 128]), (128, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 128]), (128, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 128]), (128, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 2]), (1, 128), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.006752000190317631,
        "((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 2]), (1, 128), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([48, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([48, 17, 64]), (1088, 1, 17), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007872000336647034,
        "((torch.Size([48, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([48, 17, 64]), (1088, 1, 17), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([48, 64, 17]), (1088, 1, 64), torch.float32), (torch.Size([48, 17, 17]), (289, 17, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007903999648988247,
        "((torch.Size([48, 64, 17]), (1088, 1, 64), torch.float32), (torch.Size([48, 17, 17]), (289, 17, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), (torch.Size([48, 64, 17]), (1088, 1, 64), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.009056000038981438,
        "((torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), (torch.Size([48, 64, 17]), (1088, 1, 64), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([48, 17, 17]), (289, 1, 17), torch.float32), (torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007903999648988247,
        "((torch.Size([48, 17, 17]), (289, 1, 17), torch.float32), (torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([48, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007903999648988247,
        "((torch.Size([48, 17, 17]), (289, 17, 1), torch.float32), (torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), (torch.Size([48, 64, 17]), (1088, 17, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.009440000168979168,
        "((torch.Size([48, 17, 64]), (1088, 64, 1), torch.float32), (torch.Size([48, 64, 17]), (1088, 17, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([751, 4]), (1, 751), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007327999919652939,
        "((torch.Size([751, 4]), (1, 751), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 751]), (751, 1), torch.float32), (torch.Size([751, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.01235199999064207,
        "((torch.Size([4, 751]), (751, 1), torch.float32), (torch.Size([751, 512]), (512, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 751]), (1, 512), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([751]), (1,), torch.float32), False)": 0.009279999881982803,
        "((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 751]), (1, 512), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([751]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 16]), (1, 4), torch.float32), (torch.Size([16, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007007999811321497,
        "((torch.Size([4, 16]), (1, 4), torch.float32), (torch.Size([16, 5]), (5, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([4, 4, 5]), (20, 1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007040000054985285,
        "((torch.Size([4, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([4, 4, 5]), (20, 1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([4, 4, 5]), (20, 5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006943999789655209,
        "((torch.Size([4, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([4, 4, 5]), (20, 5, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006943999789655209,
        "((torch.Size([16, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006591999903321266,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (4, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006432000081986189,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006783999968320131,
        "((torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), (torch.Size([4, 4, 2]), (8, 2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), (torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006816000211983919,
        "((torch.Size([4, 4, 2]), (8, 1, 4), torch.float32), (torch.Size([4, 2, 2]), (4, 2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), (torch.Size([4, 16, 4]), (64, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007104000076651573,
        "((torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), (torch.Size([4, 16, 4]), (64, 4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), (torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006783999968320131,
        "((torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), (torch.Size([4, 2, 4]), (8, 4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([6625, 64]), (1, 6625), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009535999968647957,
        "((torch.Size([6625, 64]), (1, 6625), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 6625]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([6625]), (1,), torch.float32), False)": 0.007424000184983015,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 6625]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([6625]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([1, 64]), (1, 1), torch.float32), (torch.Size([64, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006175999995321035,
        "((torch.Size([1, 64]), (1, 1), torch.float32), (torch.Size([64, 2]), (2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([64, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 1]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1]), (1,), torch.float32), False)": 0.009696000255644321,
        "((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 1]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1]), (1,), torch.float32), False)": false,
        "((torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), (torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 16]), (256, 1, 16), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007135999854654074,
        "((torch.Size([4, 16, 16]), (256, 1, 16), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), (torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006111999973654747,
        "((torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), (torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 1]), (16, 1, 16), torch.float32), (torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([4, 16, 1]), (16, 1, 16), torch.float32), (torch.Size([4, 1, 2]), (2, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1, 16]), (16, 16, 1), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.0058559998869895935,
        "((torch.Size([4, 1, 16]), (16, 16, 1), torch.float32), (torch.Size([4, 16, 2]), (32, 1, 16), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "((torch.Size([4, 2, 16]), (32, 16, 1), torch.float32), (torch.Size([4, 16, 16]), (256, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.006752000190317631,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 84]), (84, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006688000168651342,
        "((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 84]), (84, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006688000168651342,
        "((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0066559999249875546,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 5]), (5, 1), torch.float32), (torch.Size([5, 4]), (1, 5), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.006560000125318766,
        "((torch.Size([4, 5]), (5, 1), torch.float32), (torch.Size([5, 4]), (1, 5), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 84]), (84, 1), torch.float32), (torch.Size([84, 5]), (1, 84), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": 0.007391999941319227,
        "((torch.Size([4, 84]), (84, 1), torch.float32), (torch.Size([84, 5]), (1, 84), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([26, 64]), (1, 26), torch.float32), (torch.Size([64, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008927999995648861,
        "((torch.Size([26, 64]), (1, 26), torch.float32), (torch.Size([64, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 26]), (26, 1), torch.float32), (torch.Size([26, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.01071999967098236,
        "((torch.Size([64, 26]), (26, 1), torch.float32), (torch.Size([26, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([3, 64]), (1, 3), torch.float32), (torch.Size([64, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008832000195980072,
        "((torch.Size([3, 64]), (1, 3), torch.float32), (torch.Size([64, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 3]), (3, 1), torch.float32), (torch.Size([3, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010080000385642052,
        "((torch.Size([64, 3]), (3, 1), torch.float32), (torch.Size([3, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 3]), (1, 256), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": 0.024224000051617622,
        "((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 3]), (1, 256), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 26]), (1, 256), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([26]), (1,), torch.float32), False)": 0.025887999683618546,
        "((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 26]), (1, 256), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([26]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 64]), (4096, 64), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010751999914646149,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 64]), (4096, 64), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (4096, 64), torch.float32), (torch.Size([64, 10]), (1, 64), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.010528000071644783,
        "((torch.Size([4, 64]), (4096, 64), torch.float32), (torch.Size([64, 10]), (1, 64), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 84]), (84, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 84]), (84, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 84]), (84, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007327999919652939,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 84]), (84, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 84]), (84, 1), torch.float32), (torch.Size([84, 10]), (1, 84), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.007007999811321497,
        "((torch.Size([4, 84]), (84, 1), torch.float32), (torch.Size([84, 10]), (1, 84), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([1000, 4]), (1, 1000), torch.float32), (torch.Size([4, 389]), (389, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007360000163316727,
        "((torch.Size([1000, 4]), (1, 1000), torch.float32), (torch.Size([4, 389]), (389, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1000]), (1000, 1), torch.float32), (torch.Size([1000, 389]), (389, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.012864000163972378,
        "((torch.Size([4, 1000]), (1000, 1), torch.float32), (torch.Size([1000, 389]), (389, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 389]), (389, 1), torch.float32), (torch.Size([389, 1000]), (1, 389), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1000]), (1,), torch.float32), False)": 0.009535999968647957,
        "((torch.Size([4, 389]), (389, 1), torch.float32), (torch.Size([389, 1000]), (1, 389), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1000]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([120, 4]), (1, 120), torch.float32), (torch.Size([4, 250]), (250, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007007999811321497,
        "((torch.Size([120, 4]), (1, 120), torch.float32), (torch.Size([4, 250]), (250, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 120]), (120, 1), torch.float32), (torch.Size([120, 250]), (250, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.011455999687314034,
        "((torch.Size([4, 120]), (120, 1), torch.float32), (torch.Size([120, 250]), (250, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 84]), (84, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 250]), (250, 1), torch.float32), (torch.Size([250, 120]), (1, 250), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([120]), (1,), torch.float32), False)": 0.00800000037997961,
        "((torch.Size([4, 250]), (250, 1), torch.float32), (torch.Size([250, 120]), (1, 250), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([120]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([5, 64]), (1, 5), torch.float32), (torch.Size([64, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008287999778985977,
        "((torch.Size([5, 64]), (1, 5), torch.float32), (torch.Size([64, 5]), (5, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008448000065982342,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 5]), (5, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009440000168979168,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (5, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([6, 64]), (1, 6), torch.float32), (torch.Size([64, 6]), (6, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00825599953532219,
        "((torch.Size([6, 64]), (1, 6), torch.float32), (torch.Size([64, 6]), (6, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 6]), (6, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008415999822318554,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 6]), (6, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 6]), (6, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009344000369310379,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 6]), (6, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([7, 64]), (1, 7), torch.float32), (torch.Size([64, 7]), (7, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008415999822318554,
        "((torch.Size([7, 64]), (1, 7), torch.float32), (torch.Size([64, 7]), (7, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 7]), (7, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008320000022649765,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 7]), (7, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 7]), (7, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009344000369310379,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 7]), (7, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 7]), (7, 1), torch.float32), (torch.Size([7, 4]), (1, 7), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.015904000028967857,
        "((torch.Size([64, 7]), (7, 1), torch.float32), (torch.Size([7, 4]), (1, 7), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 7]), (7, 1), torch.float32), (torch.Size([7, 7]), (1, 7), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([7]), (1,), torch.float32), False)": 0.014560000039637089,
        "((torch.Size([64, 7]), (7, 1), torch.float32), (torch.Size([7, 7]), (1, 7), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([7]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 4]), (1, 6), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.015904000028967857,
        "((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 4]), (1, 6), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 6]), (1, 6), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([6]), (1,), torch.float32), False)": 0.015231999568641186,
        "((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 6]), (1, 6), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([6]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 5]), (5, 1), torch.float32), (torch.Size([5, 4]), (1, 5), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.014879999682307243,
        "((torch.Size([64, 5]), (5, 1), torch.float32), (torch.Size([5, 4]), (1, 5), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 5]), (5, 1), torch.float32), (torch.Size([5, 5]), (1, 5), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": 0.015231999568641186,
        "((torch.Size([64, 5]), (5, 1), torch.float32), (torch.Size([5, 5]), (1, 5), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([256, 64]), (1, 256), torch.float32), (torch.Size([64, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00848000030964613,
        "((torch.Size([256, 64]), (1, 256), torch.float32), (torch.Size([64, 5]), (5, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 5]), (5, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.01065600011497736,
        "((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 5]), (5, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([256, 64]), (1, 256), torch.float32), (torch.Size([64, 6]), (6, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008576000109314919,
        "((torch.Size([256, 64]), (1, 256), torch.float32), (torch.Size([64, 6]), (6, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 6]), (6, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.01065600011497736,
        "((torch.Size([64, 256]), (256, 1), torch.float32), (torch.Size([256, 6]), (6, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 256]), (1, 6), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([256]), (1,), torch.float32), False)": 0.015807999297976494,
        "((torch.Size([64, 6]), (6, 1), torch.float32), (torch.Size([6, 256]), (1, 6), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([256]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 5]), (5, 1), torch.float32), (torch.Size([5, 256]), (1, 5), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([256]), (1,), torch.float32), False)": 0.014816000126302242,
        "((torch.Size([64, 5]), (5, 1), torch.float32), (torch.Size([5, 256]), (1, 5), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([256]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([1024, 4]), (1, 1024), torch.float32), (torch.Size([4, 161]), (161, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006912000011652708,
        "((torch.Size([1024, 4]), (1, 1024), torch.float32), (torch.Size([4, 161]), (161, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 1024]), (1024, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00687999976798892,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 1024]), (1024, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 1024]), (1024, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007455999962985516,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 1024]), (1024, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([3, 4]), (1, 3), torch.float32), (torch.Size([4, 1024]), (1024, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00687999976798892,
        "((torch.Size([3, 4]), (1, 3), torch.float32), (torch.Size([4, 1024]), (1024, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 1024]), (1024, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007040000054985285,
        "((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 1024]), (1024, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1024]), (1024, 1), torch.float32), (torch.Size([1024, 161]), (161, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.011648000217974186,
        "((torch.Size([4, 1024]), (1024, 1), torch.float32), (torch.Size([1024, 161]), (161, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 1024]), (1024, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 1024]), (1024, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([96, 1, 1]), (1, 1, 1), torch.float32), (torch.Size([96, 1, 3]), (6, 2, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.009184000082314014,
        "((torch.Size([96, 1, 1]), (1, 1, 1), torch.float32), (torch.Size([96, 1, 3]), (6, 2, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([96, 3, 1]), (3, 1, 3), torch.float32), (torch.Size([96, 1, 1]), (1, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.005696000065654516,
        "((torch.Size([96, 3, 1]), (3, 1, 3), torch.float32), (torch.Size([96, 1, 1]), (1, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([96, 1, 3]), (3, 3, 1), torch.float32), (torch.Size([96, 3, 1]), (6, 2, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.009631999768316746,
        "((torch.Size([96, 1, 3]), (3, 3, 1), torch.float32), (torch.Size([96, 3, 1]), (6, 2, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1024]), (1024, 1), torch.float32), (torch.Size([1024, 3]), (1, 1024), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": 0.011327999643981457,
        "((torch.Size([4, 1024]), (1024, 1), torch.float32), (torch.Size([1024, 3]), (1, 1024), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 1024]), (1024, 1), torch.float32), (torch.Size([1024, 10]), (1, 1024), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.011327999643981457,
        "((torch.Size([4, 1024]), (1024, 1), torch.float32), (torch.Size([1024, 10]), (1, 1024), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 161]), (161, 1), torch.float32), (torch.Size([161, 1024]), (1, 161), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1024]), (1,), torch.float32), False)": 0.008767999708652496,
        "((torch.Size([4, 161]), (161, 1), torch.float32), (torch.Size([161, 1024]), (1, 161), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1024]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([16, 4, 2]), (16, 1, 8), torch.float32), (torch.Size([16, 2, 4]), (16, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007135999854654074,
        "((torch.Size([16, 4, 2]), (16, 1, 8), torch.float32), (torch.Size([16, 2, 4]), (16, 4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([16, 4, 2]), (16, 1, 8), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.0071680000983178616,
        "((torch.Size([16, 4, 4]), (16, 1, 4), torch.float32), (torch.Size([16, 4, 2]), (16, 1, 8), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 2]), (1, 16, 8), torch.float32), (torch.Size([4, 2, 4]), (4, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.009824000298976898,
        "((torch.Size([4, 16, 2]), (1, 16, 8), torch.float32), (torch.Size([4, 2, 4]), (4, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4, 16]), (4, 1, 16), torch.float32), (torch.Size([4, 16, 2]), (1, 16, 8), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.010143999941647053,
        "((torch.Size([4, 4, 16]), (4, 1, 16), torch.float32), (torch.Size([4, 16, 2]), (1, 16, 8), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 4]), (4, 16, 1), torch.float32), (torch.Size([4, 4, 2]), (4, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007104000076651573,
        "((torch.Size([4, 16, 4]), (4, 16, 1), torch.float32), (torch.Size([4, 4, 2]), (4, 1, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([16, 4, 2]), (16, 1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007135999854654074,
        "((torch.Size([16, 4, 4]), (16, 4, 1), torch.float32), (torch.Size([16, 4, 2]), (16, 1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([7, 4]), (1, 7), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007071999832987785,
        "((torch.Size([7, 4]), (1, 7), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 7]), (7, 1), torch.float32), (torch.Size([7, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007519999984651804,
        "((torch.Size([4, 7]), (7, 1), torch.float32), (torch.Size([7, 512]), (512, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 7]), (1, 512), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([7]), (1,), torch.float32), False)": 0.008608000352978706,
        "((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 7]), (1, 512), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([7]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([16, 2, 2]), (8, 4, 2), torch.float32), (torch.Size([16, 2, 4]), (16, 2, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.01244799979031086,
        "((torch.Size([16, 2, 2]), (8, 4, 2), torch.float32), (torch.Size([16, 2, 4]), (16, 2, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 2, 4]), (16, 2, 4), torch.float32), (torch.Size([16, 4, 2]), (16, 4, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.013407999649643898,
        "((torch.Size([16, 2, 4]), (16, 2, 4), torch.float32), (torch.Size([16, 4, 2]), (16, 4, 2), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 32]), (1, 2), torch.float32), (torch.Size([32, 1]), (1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0058559998869895935,
        "((torch.Size([2, 32]), (1, 2), torch.float32), (torch.Size([32, 1]), (1, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([32, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.010432000271975994,
        "((torch.Size([32, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (1, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 3]), (3, 1), torch.float32), (torch.Size([3, 3]), (3, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009696000255644321,
        "((torch.Size([64, 3]), (3, 1), torch.float32), (torch.Size([3, 3]), (3, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([3, 64]), (1, 3), torch.float32), (torch.Size([64, 3]), (3, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0081599997356534,
        "((torch.Size([3, 64]), (1, 3), torch.float32), (torch.Size([64, 3]), (3, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 3]), (3, 1), torch.float32), (torch.Size([3, 3]), (1, 3), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010623999871313572,
        "((torch.Size([64, 3]), (3, 1), torch.float32), (torch.Size([3, 3]), (1, 3), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010400000028312206,
        "((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010367999784648418,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 1, 1]), (1, 4, 4), torch.float32), (torch.Size([16, 1, 5]), (5, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.005696000065654516,
        "((torch.Size([16, 1, 1]), (1, 4, 4), torch.float32), (torch.Size([16, 1, 5]), (5, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 5, 1]), (5, 1, 5), torch.float32), (torch.Size([16, 1, 1]), (1, 4, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.0055680000223219395,
        "((torch.Size([16, 5, 1]), (5, 1, 5), torch.float32), (torch.Size([16, 1, 1]), (1, 4, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 1, 5]), (5, 5, 1), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006047999951988459,
        "((torch.Size([16, 1, 5]), (5, 5, 1), torch.float32), (torch.Size([16, 5, 1]), (5, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 8]), (8, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 8]), (8, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([1, 4]), (1, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.005888000130653381,
        "((torch.Size([1, 4]), (1, 1), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00687999976798892,
        "((torch.Size([4, 1]), (1, 1), torch.float32), (torch.Size([1, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 1]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1]), (1,), torch.float32), False)": 0.009983999654650688,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 1]), (1, 2), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([1]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 8]), (8, 1), torch.float32), (torch.Size([8, 2]), (1, 8), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.006752000190317631,
        "((torch.Size([4, 8]), (8, 1), torch.float32), (torch.Size([8, 2]), (1, 8), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([81, 64]), (1, 81), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008287999778985977,
        "((torch.Size([81, 64]), (1, 81), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 9, 4]), (36, 4, 1), torch.float32), (torch.Size([64, 4, 9]), (36, 1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.0071680000983178616,
        "((torch.Size([64, 9, 4]), (36, 4, 1), torch.float32), (torch.Size([64, 4, 9]), (36, 1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 9, 9]), (81, 1, 9), torch.float32), (torch.Size([64, 9, 4]), (36, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007296000141650438,
        "((torch.Size([64, 9, 9]), (81, 1, 9), torch.float32), (torch.Size([64, 9, 4]), (36, 4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 9, 9]), (81, 9, 1), torch.float32), (torch.Size([64, 9, 4]), (36, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007296000141650438,
        "((torch.Size([64, 9, 9]), (81, 9, 1), torch.float32), (torch.Size([64, 9, 4]), (36, 4, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 81]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([81]), (1,), torch.float32), False)": 0.006976000033318996,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 81]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([81]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([18, 4]), (1, 18), torch.float32), (torch.Size([4, 150]), (150, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0066559999249875546,
        "((torch.Size([18, 4]), (1, 18), torch.float32), (torch.Size([4, 150]), (150, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 18]), (18, 1), torch.float32), (torch.Size([18, 150]), (150, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0072639998979866505,
        "((torch.Size([4, 18]), (18, 1), torch.float32), (torch.Size([18, 150]), (150, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([150, 4]), (1, 150), torch.float32), (torch.Size([4, 18]), (18, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0066559999249875546,
        "((torch.Size([150, 4]), (1, 150), torch.float32), (torch.Size([4, 18]), (18, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 150]), (150, 1), torch.float32), (torch.Size([150, 18]), (18, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009952000342309475,
        "((torch.Size([4, 150]), (150, 1), torch.float32), (torch.Size([150, 18]), (18, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 18]), (18, 1), torch.float32), (torch.Size([18, 150]), (1, 18), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([150]), (1,), torch.float32), False)": 0.0066559999249875546,
        "((torch.Size([4, 18]), (18, 1), torch.float32), (torch.Size([18, 150]), (1, 18), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([150]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 150]), (150, 1), torch.float32), (torch.Size([150, 18]), (1, 150), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([18]), (1,), torch.float32), False)": 0.0077760000713169575,
        "((torch.Size([4, 150]), (150, 1), torch.float32), (torch.Size([150, 18]), (1, 150), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([18]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([2, 1]), (1, 2), torch.float32), (torch.Size([1, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0066559999249875546,
        "((torch.Size([2, 1]), (1, 2), torch.float32), (torch.Size([1, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([1, 2]), (2, 1), torch.float32), (torch.Size([2, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.005727999843657017,
        "((torch.Size([1, 2]), (2, 1), torch.float32), (torch.Size([2, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([1, 256]), (256, 1), torch.float32), (torch.Size([256, 2]), (1, 256), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.006271999794989824,
        "((torch.Size([1, 256]), (256, 1), torch.float32), (torch.Size([256, 2]), (1, 256), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([600, 25]), (1, 600), torch.float32), (torch.Size([25, 2304]), (2304, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010912000201642513,
        "((torch.Size([600, 25]), (1, 600), torch.float32), (torch.Size([25, 2304]), (2304, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([25, 600]), (600, 1), torch.float32), (torch.Size([600, 2304]), (2304, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.01775999926030636,
        "((torch.Size([25, 600]), (600, 1), torch.float32), (torch.Size([600, 2304]), (2304, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([120, 25]), (1, 120), torch.float32), (torch.Size([25, 600]), (600, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007584000006318092,
        "((torch.Size([120, 25]), (1, 120), torch.float32), (torch.Size([25, 600]), (600, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([25, 120]), (120, 1), torch.float32), (torch.Size([120, 600]), (600, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010751999914646149,
        "((torch.Size([25, 120]), (120, 1), torch.float32), (torch.Size([120, 600]), (600, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([10, 25]), (1, 10), torch.float32), (torch.Size([25, 120]), (120, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007519999984651804,
        "((torch.Size([10, 25]), (1, 10), torch.float32), (torch.Size([25, 120]), (120, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([25, 10]), (10, 1), torch.float32), (torch.Size([10, 120]), (120, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009855999611318111,
        "((torch.Size([25, 10]), (10, 1), torch.float32), (torch.Size([10, 120]), (120, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([25, 120]), (120, 1), torch.float32), (torch.Size([120, 10]), (1, 120), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.023360000923275948,
        "((torch.Size([25, 120]), (120, 1), torch.float32), (torch.Size([120, 10]), (1, 120), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([25, 600]), (600, 1), torch.float32), (torch.Size([600, 120]), (1, 600), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([120]), (1,), torch.float32), False)": 0.029023999348282814,
        "((torch.Size([25, 600]), (600, 1), torch.float32), (torch.Size([600, 120]), (1, 600), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([120]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([25, 2304]), (2304, 1), torch.float32), (torch.Size([2304, 600]), (1, 2304), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([600]), (1,), torch.float32), False)": 0.03388800099492073,
        "((torch.Size([25, 2304]), (2304, 1), torch.float32), (torch.Size([2304, 600]), (1, 2304), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([600]), (1,), torch.float32), False)": false,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 1024]), (1024, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "((torch.Size([4, 1024]), (1024, 1), torch.float32), (torch.Size([1024, 10]), (1, 1024), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([9, 4]), (1, 9), torch.float32), (torch.Size([4, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006783999968320131,
        "((torch.Size([9, 4]), (1, 9), torch.float32), (torch.Size([4, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 9]), (9, 1), torch.float32), (torch.Size([9, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007199999876320362,
        "((torch.Size([4, 9]), (9, 1), torch.float32), (torch.Size([9, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 256]), (256, 1), torch.float32), (torch.Size([256, 9]), (1, 256), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([9]), (1,), torch.float32), False)": 0.006943999789655209,
        "((torch.Size([4, 256]), (256, 1), torch.float32), (torch.Size([256, 9]), (1, 256), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([9]), (1,), torch.float32), False)": false,
        "((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 5]), (1, 10), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([3, 4]), (1, 3), torch.float32), (torch.Size([4, 125]), (125, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006624000146985054,
        "((torch.Size([3, 4]), (1, 3), torch.float32), (torch.Size([4, 125]), (125, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 125]), (125, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006591999903321266,
        "((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 125]), (125, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 125]), (125, 1), torch.float32), (torch.Size([125, 3]), (1, 125), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": 0.006752000190317631,
        "((torch.Size([4, 125]), (125, 1), torch.float32), (torch.Size([125, 3]), (1, 125), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([1, 4096, 3]), (12288, 3, 1), torch.float32), (torch.Size([1, 3, 2]), (6, 1, 3), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.012128000147640705,
        "((torch.Size([1, 4096, 3]), (12288, 3, 1), torch.float32), (torch.Size([1, 3, 2]), (6, 1, 3), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 7]), (7, 1), torch.float32), (torch.Size([7, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006783999968320131,
        "((torch.Size([4, 7]), (7, 1), torch.float32), (torch.Size([7, 4]), (4, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([7, 4]), (1, 7), torch.float32), (torch.Size([4, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([7, 4]), (1, 7), torch.float32), (torch.Size([4, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 7]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0063680000603199005,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 7]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.007071999832987785,
        "((torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), (torch.Size([4, 2, 2]), (4, 1, 2), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([39, 4]), (1, 39), torch.float32), (torch.Size([4, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006719999946653843,
        "((torch.Size([39, 4]), (1, 39), torch.float32), (torch.Size([4, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 39]), (39, 1), torch.float32), (torch.Size([39, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008767999708652496,
        "((torch.Size([4, 39]), (39, 1), torch.float32), (torch.Size([39, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 256]), (256, 1), torch.float32), (torch.Size([256, 39]), (1, 256), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([39]), (1,), torch.float32), False)": 0.006912000011652708,
        "((torch.Size([4, 256]), (256, 1), torch.float32), (torch.Size([256, 39]), (1, 256), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([39]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006752000190317631,
        "((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006463999859988689,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 512]), (512, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 2]), (1, 512), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.008320000022649765,
        "((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 2]), (1, 512), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 102), torch.float32), (torch.Size([4, 1280]), (1280, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006943999789655209,
        "((torch.Size([10, 4]), (1, 102), torch.float32), (torch.Size([4, 1280]), (1280, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (102, 1), torch.float32), (torch.Size([10, 1280]), (1280, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0074880002066493034,
        "((torch.Size([4, 10]), (102, 1), torch.float32), (torch.Size([10, 1280]), (1280, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1280]), (1280, 1), torch.float32), (torch.Size([1280, 10]), (1, 1280), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.012640000320971012,
        "((torch.Size([4, 1280]), (1280, 1), torch.float32), (torch.Size([1280, 10]), (1, 1280), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([16, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006304000038653612,
        "((torch.Size([16, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 2]), (1, 4), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006752000190317631,
        "((torch.Size([2, 4]), (1, 2), torch.float32), (torch.Size([4, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 256]), (256, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006624000146985054,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 256]), (256, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 256]), (256, 1), torch.float32), (torch.Size([256, 2]), (1, 256), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.007040000054985285,
        "((torch.Size([4, 256]), (256, 1), torch.float32), (torch.Size([256, 2]), (1, 256), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([11, 4]), (1, 11), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.00687999976798892,
        "((torch.Size([11, 4]), (1, 11), torch.float32), (torch.Size([4, 512]), (512, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 11]), (11, 1), torch.float32), (torch.Size([11, 512]), (512, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007584000006318092,
        "((torch.Size([4, 11]), (11, 1), torch.float32), (torch.Size([11, 512]), (512, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 11]), (1, 512), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([11]), (1,), torch.float32), False)": 0.008448000065982342,
        "((torch.Size([4, 512]), (512, 1), torch.float32), (torch.Size([512, 11]), (1, 512), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([11]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([2, 1]), (1, 2), torch.float32), (torch.Size([1, 2048]), (2048, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007040000054985285,
        "((torch.Size([2, 1]), (1, 2), torch.float32), (torch.Size([1, 2048]), (2048, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([1, 2]), (2, 1), torch.float32), (torch.Size([2, 2048]), (2048, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006175999995321035,
        "((torch.Size([1, 2]), (2, 1), torch.float32), (torch.Size([2, 2048]), (2048, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([1, 2048]), (2048, 1), torch.float32), (torch.Size([2048, 2]), (1, 2048), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.009056000038981438,
        "((torch.Size([1, 2048]), (2048, 1), torch.float32), (torch.Size([2048, 2]), (1, 2048), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 7, 1]), (7, 1, 1), torch.float32), (torch.Size([4, 1, 16]), (16, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006816000211983919,
        "((torch.Size([4, 7, 1]), (7, 1, 1), torch.float32), (torch.Size([4, 1, 16]), (16, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 16, 7]), (112, 7, 1), torch.float32), (torch.Size([4, 7, 1]), (7, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006111999973654747,
        "((torch.Size([4, 16, 7]), (112, 7, 1), torch.float32), (torch.Size([4, 7, 1]), (7, 1, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 7, 16]), (112, 1, 7), torch.float32), (torch.Size([4, 16, 1]), (16, 1, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.005919999908655882,
        "((torch.Size([4, 7, 16]), (112, 1, 7), torch.float32), (torch.Size([4, 16, 1]), (16, 1, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([2, 64]), (1, 2), torch.float32), (torch.Size([64, 64]), (64, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008704000152647495,
        "((torch.Size([2, 64]), (1, 2), torch.float32), (torch.Size([64, 64]), (64, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 64]), (64, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.0098879998549819,
        "((torch.Size([64, 2]), (2, 1), torch.float32), (torch.Size([2, 64]), (64, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 64]), (64, 1), torch.float32), (torch.Size([64, 2]), (1, 64), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": 0.01974399946630001,
        "((torch.Size([64, 64]), (64, 1), torch.float32), (torch.Size([64, 2]), (1, 64), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([2]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([3, 64]), (1, 3), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008608000352978706,
        "((torch.Size([3, 64]), (1, 3), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 3]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": 0.007040000054985285,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 3]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([3]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 4]), (1, 64), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006816000211983919,
        "((torch.Size([64, 4]), (1, 64), torch.float32), (torch.Size([4, 10]), (10, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (64, 1), torch.float32), (torch.Size([64, 10]), (10, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008191999979317188,
        "((torch.Size([4, 64]), (64, 1), torch.float32), (torch.Size([64, 10]), (10, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 64]), (1, 10), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([64]), (1,), torch.float32), False)": 0.006816000211983919,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 64]), (1, 10), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([64]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 576]), (576, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007040000054985285,
        "((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 576]), (576, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 576]), (576, 1), torch.float32), (torch.Size([576, 5]), (1, 576), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": 0.009664000011980534,
        "((torch.Size([4, 576]), (576, 1), torch.float32), (torch.Size([576, 5]), (1, 576), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 1280]), (1280, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007040000054985285,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 1280]), (1280, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 1280]), (1280, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007615999784320593,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 1280]), (1280, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([128, 4]), (1, 128), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006912000011652708,
        "((torch.Size([128, 4]), (1, 128), torch.float32), (torch.Size([4, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 2]), (2, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010528000071644783,
        "((torch.Size([4, 128]), (128, 1), torch.float32), (torch.Size([128, 2]), (2, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 128]), (1, 2), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([128]), (1,), torch.float32), False)": 0.00687999976798892,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 128]), (1, 2), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([128]), (1,), torch.float32), False)": false,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 128]), (128, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 3]), (3, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008736000396311283,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 3]), (3, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 3]), (3, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009920000098645687,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 3]), (3, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 200]), (200, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006943999789655209,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 200]), (200, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 200]), (200, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007360000163316727,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 200]), (200, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 200]), (200, 1), torch.float32), (torch.Size([200, 10]), (1, 200), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.00800000037997961,
        "((torch.Size([4, 200]), (200, 1), torch.float32), (torch.Size([200, 10]), (1, 200), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([30, 64]), (1, 30), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008832000195980072,
        "((torch.Size([30, 64]), (1, 30), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([30, 64]), (1, 30), torch.float32), (torch.Size([64, 30]), (30, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008767999708652496,
        "((torch.Size([30, 64]), (1, 30), torch.float32), (torch.Size([64, 30]), (30, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 30]), (30, 1), torch.float32), (torch.Size([30, 30]), (30, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.010208000428974628,
        "((torch.Size([64, 30]), (30, 1), torch.float32), (torch.Size([30, 30]), (30, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 30]), (30, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008799999952316284,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 30]), (30, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 30]), (30, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009920000098645687,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 30]), (30, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 30]), (30, 1), torch.float32), (torch.Size([30, 4]), (1, 30), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.021663999184966087,
        "((torch.Size([64, 30]), (30, 1), torch.float32), (torch.Size([30, 4]), (1, 30), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": true,
        "base mm time: ((torch.Size([64, 30]), (30, 1), torch.float32), (torch.Size([30, 30]), (1, 30), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([30]), (1,), torch.float32), False)": 0.021856000646948814,
        "((torch.Size([64, 30]), (30, 1), torch.float32), (torch.Size([30, 30]), (1, 30), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([30]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 30]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([30]), (1,), torch.float32), False)": 0.007360000163316727,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 30]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([30]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([16, 257, 257]), (66049, 257, 1), torch.float32), (torch.Size([16, 257, 1]), (1, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.010784000158309937,
        "((torch.Size([16, 257, 257]), (66049, 257, 1), torch.float32), (torch.Size([16, 257, 1]), (1, 16, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 1, 257]), (1, 1, 16), torch.float32), (torch.Size([16, 257, 257]), (66049, 257, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.010367999784648418,
        "((torch.Size([16, 1, 257]), (1, 1, 16), torch.float32), (torch.Size([16, 257, 257]), (66049, 257, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 257, 1]), (1, 16, 1), torch.float32), (torch.Size([16, 1, 257]), (1, 1, 16), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.009472000412642956,
        "((torch.Size([16, 257, 1]), (1, 16, 1), torch.float32), (torch.Size([16, 1, 257]), (1, 1, 16), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 257, 257]), (66049, 1, 257), torch.float32), (torch.Size([16, 257, 1]), (1, 16, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.010367999784648418,
        "((torch.Size([16, 257, 257]), (66049, 1, 257), torch.float32), (torch.Size([16, 257, 1]), (1, 16, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.bmm')>, None, False)": false,
        "base mm time: ((torch.Size([16, 4]), (1, 16), torch.float32), (torch.Size([4, 3]), (3, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006912000011652708,
        "((torch.Size([16, 4]), (1, 16), torch.float32), (torch.Size([4, 3]), (3, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 16]), (1, 3), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([16]), (1,), torch.float32), False)": 0.006783999968320131,
        "((torch.Size([4, 3]), (3, 1), torch.float32), (torch.Size([3, 16]), (1, 3), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([16]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006912000011652708,
        "((torch.Size([5, 4]), (1, 5), torch.float32), (torch.Size([4, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": 0.006783999968320131,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 5]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([5]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 9]), (9, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006783999968320131,
        "((torch.Size([4, 4]), (1, 4), torch.float32), (torch.Size([4, 9]), (9, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 9]), (9, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006816000211983919,
        "((torch.Size([4, 4]), (4, 1), torch.float32), (torch.Size([4, 9]), (9, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "((torch.Size([4, 2]), (2, 1), torch.float32), (torch.Size([2, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 9]), (9, 1), torch.float32), (torch.Size([9, 4]), (1, 9), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.006719999946653843,
        "((torch.Size([4, 9]), (9, 1), torch.float32), (torch.Size([9, 4]), (1, 9), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 342]), (342, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.006943999789655209,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 342]), (342, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 342]), (342, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007679999805986881,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 342]), (342, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 342]), (342, 1), torch.float32), (torch.Size([342, 10]), (1, 342), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.00886400043964386,
        "((torch.Size([4, 342]), (342, 1), torch.float32), (torch.Size([342, 10]), (1, 342), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 1200]), (1200, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007199999876320362,
        "((torch.Size([10, 4]), (1, 10), torch.float32), (torch.Size([4, 1200]), (1200, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 1200]), (1200, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.007519999984651804,
        "((torch.Size([4, 10]), (10, 1), torch.float32), (torch.Size([10, 1200]), (1200, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 1200]), (1200, 1), torch.float32), (torch.Size([1200, 10]), (1, 1200), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": 0.01408000010997057,
        "((torch.Size([4, 1200]), (1200, 1), torch.float32), (torch.Size([1200, 10]), (1, 1200), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([10]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([50, 64]), (1, 50), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008736000396311283,
        "((torch.Size([50, 64]), (1, 50), torch.float32), (torch.Size([64, 4]), (4, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 50]), (50, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.008736000396311283,
        "((torch.Size([4, 64]), (1, 4), torch.float32), (torch.Size([64, 50]), (50, 1), torch.float32), 'exclude_pad:False', 'exclude_pad:True', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 50]), (50, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.mm')>, None, False)": 0.009952000342309475,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 50]), (50, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.mm')>, None, False)": false,
        "base mm time: ((torch.Size([64, 50]), (50, 1), torch.float32), (torch.Size([50, 4]), (1, 50), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": 0.020255999639630318,
        "((torch.Size([64, 50]), (50, 1), torch.float32), (torch.Size([50, 4]), (1, 50), torch.float32), 'exclude_pad:True', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([4]), (1,), torch.float32), False)": true,
        "base mm time: ((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 50]), (1, 4), torch.float32), None, None, <OpOverloadPacket(op='aten.addmm')>, (torch.Size([50]), (1,), torch.float32), False)": 0.007104000076651573,
        "((torch.Size([64, 4]), (4, 1), torch.float32), (torch.Size([4, 50]), (1, 4), torch.float32), 'exclude_pad:False', 'exclude_pad:False', <OpOverloadPacket(op='aten.addmm')>, (torch.Size([50]), (1,), torch.float32), False)": false,
        "base mm time: ((torch.Size([6, 2, 4]), (8, 4, 1), torch.float32), (torch.Size([6, 4, 4]), (16, 4, 1), torch.float32), None, None, <OpOverloadPacket(op='aten.bmm')>, None, False)": 0.006976000033318996,
        "((torch.Size([6, 2, 4]), (8, 4, 1), torch.float32), (torch.Size([6, 4, 4]), (16, 4, 1), torch.float32), 'exclude_pad:True', 'exclude_pad:True', <OpOverloadPacket(op='aten.bmm')>, None, False)": false
    }
}